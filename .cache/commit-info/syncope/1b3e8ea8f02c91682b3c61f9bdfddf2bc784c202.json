{"sha":"1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFiM2U4ZWE4ZjAyYzkxNjgyYjNjNjFmOWJkZmRkZjJiYzc4NGMyMDI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-15T11:31:00Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-15T11:31:55Z"},"message":"[SYNCOPE-156] fix modal l&f and dynamic group memberships","tree":{"sha":"00e7a4b25ed08d4f9e1b8e42b9f06b2c57c6faa3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/00e7a4b25ed08d4f9e1b8e42b9f06b2c57c6faa3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"a0ca2c1615d7ce468245a453d48913357e8fd48a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a0ca2c1615d7ce468245a453d48913357e8fd48a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a0ca2c1615d7ce468245a453d48913357e8fd48a"}],"stats":{"total":1055,"additions":657,"deletions":398},"files":[{"sha":"8ccef7fc62fd62e3fbce09a45f1fbf14ad8c635b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -125,6 +125,6 @@ public ResourceDetailsPanel(\n                 new Model<String>(model.getObject().getConnectorDisplayName()),\n                 false).addRequiredLabel().setEnabled(false));\n \n-        add(new AnnotatedBeanPanel(\"systeminformation\", model.getObject()));\n+        add(new AnnotatedBeanPanel(\"systeminformation\", model.getObject()).setRenderBodyOnly(true));\n     }\n }"},{"sha":"101ecf9a1b1a82d8e585ba8c6e02eeacc7280b6e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n@@ -64,7 +65,7 @@ public abstract class AbstractSearchPanel extends Panel {\n //    protected IModel<List<String>> entitlements;\n     protected IModel<List<SearchClause.Type>> types;\n \n-    protected IModel<List<String>> groupNames;\n+    protected IModel<List<Pair<Long, String>>> groupNames;\n \n     protected NotificationPanel searchFeedback;\n "},{"sha":"b5e162eb128f761ee24a35b838bd8cc2c30d61e6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSearchPanel.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -69,20 +70,20 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.groupNames = new LoadableDetachableModel<List<String>>() {\n+        this.groupNames = new LoadableDetachableModel<List<Pair<Long, String>>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n-            protected List<String> load() {\n+            protected List<Pair<Long, String>> load() {\n                 List<GroupTO> groupTOs = groupRestClient.list(\"/\",\n                         -1, -1,\n                         new SortParam<>(\"name\", true),\n                         null);\n \n-                List<String> result = new ArrayList<>(groupTOs.size());\n+                List<Pair<Long, String>> result = new ArrayList<>(groupTOs.size());\n                 for (GroupTO group : groupTOs) {\n-                    result.add(group.getName());\n+                    result.add(Pair.of(group.getKey(), group.getName()));\n                 }\n \n                 return result;"},{"sha":"4dfbce33cd0e8c051230412d2e8bb2e8f63f4b9f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSearchPanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n@@ -64,13 +65,13 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.groupNames = new LoadableDetachableModel<List<String>>() {\n+        this.groupNames = new LoadableDetachableModel<List<Pair<Long, String>>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n-            protected List<String> load() {\n-                return Collections.<String>emptyList();\n+            protected List<Pair<Long, String>> load() {\n+                return Collections.<Pair<Long, String>>emptyList();\n             }\n         };\n     }"},{"sha":"497a5fba41279c60d1a8a1218824eaf3329b4b91","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":114,"deletions":15,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -24,7 +24,12 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.search.SearchClause.Comparator;\n import org.apache.syncope.client.console.panels.search.SearchClause.Operator;\n@@ -59,15 +64,15 @@ public class SearchClausePanel extends FieldPanel<SearchClause> {\n \n     private final IModel<List<String>> dnames;\n \n-    private final IModel<List<String>> groupNames;\n+    private final IModel<List<Pair<Long, String>>> groupNames;\n \n     private final IModel<List<String>> resourceNames;\n \n     private IModel<SearchClause> clause;\n \n     private final LoadableDetachableModel<List<Comparator>> comparators;\n \n-    private final LoadableDetachableModel<List<String>> properties;\n+    private final LoadableDetachableModel<List<Pair<Long, String>>> properties;\n \n     public SearchClausePanel(\n             final String id,\n@@ -77,7 +82,7 @@ public SearchClausePanel(\n             final IModel<List<SearchClause.Type>> types,\n             final IModel<List<String>> anames,\n             final IModel<List<String>> dnames,\n-            final IModel<List<String>> groupNames,\n+            final IModel<List<Pair<Long, String>>> groupNames,\n             final IModel<List<String>> resourceNames\n     ) {\n \n@@ -123,14 +128,14 @@ protected List<Comparator> load() {\n             }\n         };\n \n-        properties = new LoadableDetachableModel<List<String>>() {\n+        properties = new LoadableDetachableModel<List<Pair<Long, String>>>() {\n \n             private static final long serialVersionUID = 1L;\n \n             @Override\n-            protected List<String> load() {\n+            protected List<Pair<Long, String>> load() {\n                 if (field.getModel().getObject() == null || field.getModel().getObject().getType() == null) {\n-                    return Collections.<String>emptyList();\n+                    return Collections.<Pair<Long, String>>emptyList();\n                 }\n \n                 switch (field.getModel().getObject().getType()) {\n@@ -140,15 +145,28 @@ protected List<String> load() {\n                             names.addAll(anames.getObject());\n                         }\n                         Collections.sort(names);\n-                        return names;\n+                        return CollectionUtils.collect(names, new Transformer<String, Pair<Long, String>>() {\n+\n+                            @Override\n+                            public Pair<Long, String> transform(final String input) {\n+                                return Pair.of(-1L, input);\n+                            }\n+                        }, new ArrayList<Pair<Long, String>>());\n \n                     case MEMBERSHIP:\n                         return groupNames.getObject();\n \n                     case RESOURCE:\n-                        return resourceNames.getObject();\n+                        return CollectionUtils.collect(resourceNames.getObject(),\n+                                new Transformer<String, Pair<Long, String>>() {\n+\n+                            @Override\n+                            public Pair<Long, String> transform(final String input) {\n+                                return Pair.of(-1L, input);\n+                            }\n+                        }, new ArrayList<Pair<Long, String>>());\n                     default:\n-                        return Collections.<String>emptyList();\n+                        return Collections.<Pair<Long, String>>emptyList();\n                 }\n             }\n         };\n@@ -254,8 +272,27 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         }.setVisible(getIndex() > 0).setOutputMarkupPlaceholderTag(true));\n \n-        final AjaxDropDownChoicePanel<String> property = new AjaxDropDownChoicePanel<>(\n-                \"property\", \"property\", new PropertyModel<String>(searchClause, \"property\"));\n+        final AjaxDropDownChoicePanel<Pair<Long, String>> property = new AjaxDropDownChoicePanel<Pair<Long, String>>(\n+                \"property\", \"property\", new PropertyModel<Pair<Long, String>>(searchClause, \"property\") {\n+\n+            private static final long serialVersionUID = -8430020195995502040L;\n+\n+            @Override\n+            public Pair<Long, String> getObject() {\n+                return Pair.of(\n+                        searchClause.getType() == Type.MEMBERSHIP && searchClause.getProperty() != null\n+                                ? Long.parseLong(searchClause.getProperty()) : -1L,\n+                        searchClause.getProperty());\n+            }\n+\n+            @Override\n+            public void setObject(final Pair<Long, String> object) {\n+                if (object != null) {\n+                    searchClause.setProperty(\n+                            object.getLeft() >= 0 ? String.valueOf(object.getLeft()) : object.getRight());\n+                }\n+            }\n+        });\n         property.hideLabel().setRequired(required).setOutputMarkupId(true);\n         property.setChoices(properties);\n         field.add(property);\n@@ -282,7 +319,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                setFieldAccess(searchClause.getType(), comparator, value);\n+                setFieldAccess(searchClause.getType(), property, comparator, value);\n                 target.add(property);\n                 target.add(comparator);\n                 target.add(value);\n@@ -310,13 +347,17 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        setFieldAccess(searchClause.getType(), comparator, value);\n+        setFieldAccess(searchClause.getType(), property, comparator, value);\n \n         return this;\n     }\n \n     private void setFieldAccess(\n-            final Type type, final FieldPanel<Comparator> comparator, final FieldPanel<String> value) {\n+            final Type type,\n+            final AjaxDropDownChoicePanel<Pair<Long, String>> property,\n+            final FieldPanel<Comparator> comparator,\n+            final FieldPanel<String> value) {\n+\n         if (type != null) {\n             switch (type) {\n                 case ATTRIBUTE:\n@@ -327,10 +368,19 @@ private void setFieldAccess(\n \n                     value.setEnabled(comparator.getModelObject() != SearchClause.Comparator.IS_NULL\n                             && comparator.getModelObject() != SearchClause.Comparator.IS_NOT_NULL);\n+                    property.setChoiceRenderer(new DefaultChoiceRender());\n                     break;\n-                default:\n+                case MEMBERSHIP:\n+                    property.setChoiceRenderer(new GroupChoiceRender());\n+                    value.setEnabled(false);\n+                    value.setModelObject(\"\");\n+                    break;\n+                case RESOURCE:\n+                    property.setChoiceRenderer(new DefaultChoiceRender());\n                     value.setEnabled(false);\n                     value.setModelObject(\"\");\n+                    break;\n+                default:\n             }\n         }\n     }\n@@ -483,4 +533,53 @@ public FieldPanel<SearchClause> clone() {\n         panel.setRequired(this.isRequired());\n         return panel;\n     }\n+\n+    private class DefaultChoiceRender implements IChoiceRenderer<Pair<Long, String>> {\n+\n+        private static final long serialVersionUID = -8034248752951761058L;\n+\n+        @Override\n+        public Object getDisplayValue(final Pair<Long, String> object) {\n+            return object.getRight();\n+        }\n+\n+        @Override\n+        public String getIdValue(final Pair<Long, String> object, final int index) {\n+            return object.getRight();\n+        }\n+\n+        @Override\n+        public Pair<Long, String> getObject(\n+                final String id, final IModel<? extends List<? extends Pair<Long, String>>> choices) {\n+            return IterableUtils.find(choices.getObject(), new Predicate<Pair<Long, String>>() {\n+\n+                @Override\n+                public boolean evaluate(final Pair<Long, String> object) {\n+                    return id.equals(object.getRight());\n+                }\n+            });\n+        }\n+    }\n+\n+    private class GroupChoiceRender extends DefaultChoiceRender {\n+\n+        private static final long serialVersionUID = -8034248752951761058L;\n+\n+        @Override\n+        public String getIdValue(final Pair<Long, String> object, final int index) {\n+            return String.valueOf(object.getLeft());\n+        }\n+\n+        @Override\n+        public Pair<Long, String> getObject(\n+                final String id, final IModel<? extends List<? extends Pair<Long, String>>> choices) {\n+            return IterableUtils.find(choices.getObject(), new Predicate<Pair<Long, String>>() {\n+\n+                @Override\n+                public boolean evaluate(final Pair<Long, String> object) {\n+                    return id.equals(String.valueOf(object.getLeft()));\n+                }\n+            });\n+        }\n+    }\n }"},{"sha":"adb5ed315e3b3d291684d21af091337a7ba4d75b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchUtils.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -25,6 +25,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.regex.Pattern;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n import org.apache.cxf.jaxrs.ext.search.ConditionType;\n@@ -46,11 +47,16 @@ private SearchUtils() {\n \n     }\n \n+    private static Pattern getTypeConditionPattern(final String type) {\n+        return Pattern.compile(String.format(\";\\\\$type==%s|\\\\$type==%s;\", type, type));\n+    }\n+\n     public static Map<String, List<SearchClause>> getSearchClauses(final Map<String, String> fiql) {\n         final Map<String, List<SearchClause>> res = new HashMap<>();\n         if (fiql != null && !fiql.isEmpty()) {\n             for (Map.Entry<String, String> entry : fiql.entrySet()) {\n-                res.put(entry.getKey(), getSearchClauses(entry.getValue()));\n+                res.put(entry.getKey(), getSearchClauses(\n+                        entry.getValue().replaceAll(getTypeConditionPattern(entry.getKey()).pattern(), \"\")));\n             }\n         }\n         return res;\n@@ -115,13 +121,7 @@ public static SearchClause getPrimitiveSearchClause(final SearchCondition<Search\n \n         if (SpecialAttr.GROUPS.toString().equals(property)) {\n             res.setType(SearchClause.Type.MEMBERSHIP);\n-            // check if the following is really required\n-\n-//            for (String label : groupNames.getObject()) {\n-//                if (value.equals(label.substring(0, label.indexOf(' ')))) {\n-//                    searchClause.setProperty(label);\n-//                }\n-//            }\n+            res.setProperty(value);\n         } else if (SpecialAttr.RESOURCES.toString().equals(property)) {\n             res.setType(SearchClause.Type.RESOURCE);\n             res.setProperty(value);"},{"sha":"57f0980ddb8e07c65d06a14b94df0b5b83540781","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n@@ -80,6 +81,11 @@ protected WizardModel buildModelSteps(final AnyHandler<T> modelObject, final Wiz\n         // optional details panel step\n         addOptionalDetailsPanel(modelObject, wizardModel);\n \n+        if ((this instanceof GroupWizardBuilder) && (modelObject.getInnerObject() instanceof GroupTO)) {\n+            wizardModel.add(new Ownership(GroupHandler.class.cast(modelObject)));\n+            wizardModel.add(new DynamicMemberships(GroupHandler.class.cast(modelObject)));\n+        }\n+\n         wizardModel.add(new AuxClasses(modelObject.getInnerObject(), clazzes));\n \n         // attributes panel steps"},{"sha":"8d18d450de5758efd95e6e2e942208bb0ed9ba66","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Details.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -24,11 +24,15 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.IModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class Details<T extends AnyTO> extends WizardStep {\n \n     private static final long serialVersionUID = -8995647450549098844L;\n \n+    protected static final Logger LOG = LoggerFactory.getLogger(Details.class);\n+\n     protected final PageReference pageRef;\n \n     protected final StatusPanel statusPanel;"},{"sha":"7288163f18cb46e600f3232b3881c3149b1d0297","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DynamicMemberships.java","status":"added","additions":116,"deletions":0,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.Collapsible;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n+import org.apache.syncope.client.console.panels.search.MapOfListModel;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class DynamicMemberships extends WizardStep {\n+\n+    private static final long serialVersionUID = 855618618337931784L;\n+\n+    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+\n+    public DynamicMemberships(final GroupHandler groupHandler) {\n+        super();\n+\n+        final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<List<AnyTypeTO>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<AnyTypeTO> load() {\n+                return CollectionUtils.select(anyTypeRestClient.getAll(), new Predicate<AnyTypeTO>() {\n+\n+                    @Override\n+                    public boolean evaluate(final AnyTypeTO t) {\n+                        return AnyTypeKind.USER != t.getKind() && AnyTypeKind.GROUP != t.getKind();\n+                    }\n+                }, new ArrayList<AnyTypeTO>());\n+            }\n+        };\n+\n+        // ------------------------\n+        // uDynMembershipCond\n+        // ------------------------\n+        add(new Collapsible(\"uDynMembershipCond\", Collections.<ITab>singletonList(\n+                new AbstractTab(new ResourceModel(\"uDynMembershipCond\", \"Dynamic USER Membership Conditions\")) {\n+\n+            private static final long serialVersionUID = 1037272333056449378L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new UserSearchPanel.Builder(new PropertyModel<List<SearchClause>>(groupHandler, \"uDynClauses\")).\n+                        required(false).build(panelId);\n+            }\n+        }), Model.of(StringUtils.isBlank(groupHandler.getUDynMembershipCond()) ? -1 : 0)).setOutputMarkupId(true));\n+        // ------------------------ \n+\n+        // ------------------------\n+        // aDynMembershipConds\n+        // ------------------------\n+        add(new ListView<AnyTypeTO>(\"aDynMembershipCond\", types) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<AnyTypeTO> item) {\n+                final String key = item.getModelObject().getKey();\n+                item.add(new Collapsible(\"aDynMembershipCond\", Collections.<ITab>singletonList(\n+                        new AbstractTab(new StringResourceModel(\n+                                \"aDynMembershipCond\", this, new Model<AnyTypeTO>(item.getModelObject()))) {\n+\n+                    private static final long serialVersionUID = 1037272333056449378L;\n+\n+                    @Override\n+                    public Panel getPanel(final String panelId) {\n+                        return new AnyObjectSearchPanel.Builder(\n+                                new MapOfListModel<SearchClause>(groupHandler, \"aDynClauses\", key)).\n+                                required(false).build(panelId);\n+                    }\n+                }), Model.of(StringUtils.isBlank(groupHandler.getADynMembershipConds().get(key)) ? -1 : 0))\n+                        .setOutputMarkupId(true));\n+            }\n+        });\n+        // ------------------------\n+    }\n+}"},{"sha":"02fae4f5b9416ac35e4986ae94962ab50aab92c6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupDetails.java","status":"modified","additions":0,"deletions":323,"changes":323,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -18,67 +18,21 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.Collapsible;\n-import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Predicate;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n-import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n-import org.apache.syncope.client.console.panels.search.MapOfListModel;\n-import org.apache.syncope.client.console.panels.search.SearchClause;\n-import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n-import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.model.StringResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class GroupDetails extends Details<GroupTO> {\n \n     private static final long serialVersionUID = 855618618337931784L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(GroupDetails.class);\n-\n-    private final UserRestClient userRestClient = new UserRestClient();\n-\n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n-\n-    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n-\n-    private final WebMarkupContainer ownerContainer;\n-\n-    private final OwnerModel uOwnerModel;\n-\n-    private final OwnerModel gOwnerModel;\n-\n     public GroupDetails(\n             final GroupHandler groupHandler,\n             final IModel<List<StatusBean>> statusModel,\n@@ -89,35 +43,6 @@ public GroupDetails(\n \n         final GroupTO groupTO = GroupHandler.class.cast(groupHandler).getInnerObject();\n \n-        final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<List<AnyTypeTO>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<AnyTypeTO> load() {\n-                return CollectionUtils.select(anyTypeRestClient.getAll(), new Predicate<AnyTypeTO>() {\n-\n-                    @Override\n-                    public boolean evaluate(final AnyTypeTO t) {\n-                        return AnyTypeKind.USER != t.getKind() && AnyTypeKind.GROUP != t.getKind();\n-                    }\n-                }, new ArrayList<AnyTypeTO>());\n-            }\n-        };\n-\n-        ownerContainer = new WebMarkupContainer(\"ownerContainer\");\n-        ownerContainer.setOutputMarkupId(true);\n-        this.add(ownerContainer);\n-\n-        final ModalWindow userOwnerSelectWin = new ModalWindow(\"userOwnerSelectWin\");\n-        userOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        userOwnerSelectWin.setCookieName(\"create-userOwnerSelect-modal\");\n-        this.add(userOwnerSelectWin);\n-        final ModalWindow groupOwnerSelectWin = new ModalWindow(\"groupOwnerSelectWin\");\n-        groupOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        groupOwnerSelectWin.setCookieName(\"create-groupOwnerSelect-modal\");\n-        this.add(groupOwnerSelectWin);\n-\n         final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", \"name\",\n                 new PropertyModel<String>(groupTO, \"name\"), false);\n \n@@ -132,253 +57,5 @@ public boolean evaluate(final AnyTypeTO t) {\n             questionMarkJexlHelp.setVisible(false);\n         }\n         this.add(name);\n-\n-        uOwnerModel = new OwnerModel(groupTO, AnyTypeKind.USER);\n-        @SuppressWarnings(\"unchecked\")\n-        final AjaxTextFieldPanel userOwner = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\", uOwnerModel, false);\n-        userOwner.setPlaceholder(\"userOwner\");\n-        userOwner.hideLabel();\n-        userOwner.setReadOnly(true).setOutputMarkupId(true);\n-        ownerContainer.add(userOwner);\n-        final AjaxLink<Void> userOwnerSelect = new IndicatingAjaxLink<Void>(\"userOwnerSelect\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                userOwnerSelectWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    private static final long serialVersionUID = -7834632442532690940L;\n-\n-                    @Override\n-                    public Page createPage() {\n-//                        return new UserOwnerSelectModalPage(getPage().getPageReference(), userOwnerSelectWin);\n-                        return null;\n-                    }\n-                });\n-                userOwnerSelectWin.show(target);\n-            }\n-        };\n-        ownerContainer.add(userOwnerSelect.setEnabled(false));\n-        final IndicatingAjaxLink<Void> userOwnerReset = new IndicatingAjaxLink<Void>(\"userOwnerReset\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                uOwnerModel.setObject(null);\n-                target.add(userOwner);\n-            }\n-        };\n-        ownerContainer.add(userOwnerReset.setEnabled(false));\n-\n-        gOwnerModel = new OwnerModel(groupTO, AnyTypeKind.GROUP);\n-        @SuppressWarnings(\"unchecked\")\n-        final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\", gOwnerModel, false);\n-        groupOwner.setPlaceholder(\"groupOwner\");\n-        groupOwner.hideLabel();\n-        groupOwner.setReadOnly(true).setOutputMarkupId(true);\n-        ownerContainer.add(groupOwner);\n-        final AjaxLink<Void> groupOwnerSelect = new IndicatingAjaxLink<Void>(\"groupOwnerSelect\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                userOwnerSelectWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    private static final long serialVersionUID = -7834632442532690940L;\n-\n-                    @Override\n-                    public Page createPage() {\n-//                        return new GroupSelectModalPage(getPage().getPageReference(), userOwnerSelectWin,\n-//                                GroupOwnerSelectPayload.class);\n-                        return null;\n-                    }\n-                });\n-                userOwnerSelectWin.show(target);\n-            }\n-        };\n-        ownerContainer.add(groupOwnerSelect.setEnabled(false));\n-        final IndicatingAjaxLink<Void> groupOwnerReset = new IndicatingAjaxLink<Void>(\"groupOwnerReset\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                gOwnerModel.setObject(null);\n-                target.add(groupOwner);\n-            }\n-        };\n-        ownerContainer.add(groupOwnerReset.setEnabled(false));\n-\n-        // ------------------------\n-        // uDynMembershipCond\n-        // ------------------------\n-        add(new Collapsible(\"uDynMembershipCond\", Collections.<ITab>singletonList(\n-                new AbstractTab(new ResourceModel(\"uDynMembershipCond\", \"Dynamic USER Membership Conditions\")) {\n-\n-            private static final long serialVersionUID = 1037272333056449378L;\n-\n-            @Override\n-            public Panel getPanel(final String panelId) {\n-                return new UserSearchPanel.Builder(new PropertyModel<List<SearchClause>>(groupHandler, \"uDynClauses\")).\n-                        required(false).build(panelId);\n-            }\n-        }), Model.of(StringUtils.isBlank(groupHandler.getUDynMembershipCond()) ? -1 : 0)).setOutputMarkupId(true));\n-        // ------------------------ \n-\n-        // ------------------------\n-        // aDynMembershipConds\n-        // ------------------------\n-        add(new ListView<AnyTypeTO>(\"aDynMembershipCond\", types) {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<AnyTypeTO> item) {\n-                final String key = item.getModelObject().getKey();\n-                item.add(new Collapsible(\"aDynMembershipCond\", Collections.<ITab>singletonList(\n-                        new AbstractTab(new StringResourceModel(\n-                                \"aDynMembershipCond\", this, new Model<AnyTypeTO>(item.getModelObject()))) {\n-\n-                    private static final long serialVersionUID = 1037272333056449378L;\n-\n-                    @Override\n-                    public Panel getPanel(final String panelId) {\n-                        return new AnyObjectSearchPanel.Builder(\n-                                new MapOfListModel<SearchClause>(groupHandler, \"aDynClauses\", key)).\n-                                required(false).build(panelId);\n-                    }\n-                }), Model.of(StringUtils.isBlank(groupHandler.getADynMembershipConds().get(key)) ? -1 : 0))\n-                        .setOutputMarkupId(true));\n-            }\n-        });\n-        // ------------------------\n-    }\n-\n-    /**\n-     * This is waiting for events from opened modal windows: first to get the selected user / group, then to update the\n-     * respective text panel.\n-     *\n-     * @param event event\n-     */\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        super.onEvent(event);\n-\n-        if (event.getPayload() instanceof UserOwnerSelectPayload) {\n-            uOwnerModel.setObject(((UserOwnerSelectPayload) event.getPayload()).getUserId());\n-        }\n-        if (event.getPayload() instanceof GroupOwnerSelectPayload) {\n-            gOwnerModel.setObject(((GroupOwnerSelectPayload) event.getPayload()).getGroupId());\n-        }\n-\n-        if (event.getPayload() instanceof AjaxRequestTarget) {\n-            ((AjaxRequestTarget) event.getPayload()).add(ownerContainer);\n-        }\n-    }\n-\n-    private class OwnerModel implements IModel {\n-\n-        private static final long serialVersionUID = -3865621970810102714L;\n-\n-        private final GroupTO groupTO;\n-\n-        private final AnyTypeKind type;\n-\n-        OwnerModel(final GroupTO groupTO, final AnyTypeKind type) {\n-            this.groupTO = groupTO;\n-            this.type = type;\n-        }\n-\n-        @Override\n-        public Object getObject() {\n-            String object = null;\n-\n-            switch (type) {\n-                case USER:\n-                    if (groupTO.getUserOwner() != null) {\n-                        UserTO user = null;\n-                        try {\n-                            user = userRestClient.read(groupTO.getUserOwner());\n-                        } catch (Exception e) {\n-                            LOG.warn(\"Could not find user with id {}, ignoring\", groupTO.getUserOwner(), e);\n-                        }\n-                        if (user == null) {\n-                            groupTO.setUserOwner(null);\n-                        } else {\n-                            object = user.getKey() + \" \" + user.getUsername();\n-                        }\n-                    }\n-                    break;\n-\n-                case GROUP:\n-                    GroupTO group = null;\n-                    if (groupTO.getGroupOwner() != null) {\n-                        try {\n-                            group = groupRestClient.read(groupTO.getGroupOwner());\n-                        } catch (Exception e) {\n-                            LOG.warn(\"Could not find group with id {}, ignoring\", groupTO.getGroupOwner(), e);\n-                        }\n-                        if (group == null) {\n-                            groupTO.setGroupOwner(null);\n-                        } else {\n-                            object = group.getName();\n-                        }\n-                    }\n-                    break;\n-\n-                default:\n-            }\n-\n-            return object;\n-        }\n-\n-        @Override\n-        public void setObject(final Object object) {\n-            switch (type) {\n-                case USER:\n-                    groupTO.setUserOwner((Long) object);\n-                    break;\n-\n-                case GROUP:\n-                    groupTO.setGroupOwner((Long) object);\n-                    break;\n-\n-                default:\n-            }\n-        }\n-\n-        @Override\n-        public void detach() {\n-            // ignore\n-        }\n-    }\n-\n-    public static class UserOwnerSelectPayload {\n-\n-        private final Long userId;\n-\n-        public UserOwnerSelectPayload(final Long userId) {\n-            this.userId = userId;\n-        }\n-\n-        public Long getUserId() {\n-            return userId;\n-        }\n-    }\n-\n-    public static class GroupOwnerSelectPayload {\n-\n-        private final Long groupId;\n-\n-        public GroupOwnerSelectPayload(final Long groupId) {\n-            this.groupId = groupId;\n-        }\n-\n-        public Long getGroupId() {\n-            return groupId;\n-        }\n     }\n }"},{"sha":"4555d12d6b63c81b7ce49c687d6047d968c8a6f7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"added","additions":274,"deletions":0,"changes":274,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -0,0 +1,274 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import static org.apache.syncope.client.console.wizards.any.Details.LOG;\n+\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.model.IModel;\n+\n+public class Ownership extends WizardStep {\n+\n+    private static final long serialVersionUID = 855618618337931784L;\n+\n+    private final UserRestClient userRestClient = new UserRestClient();\n+\n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n+\n+    private final WebMarkupContainer ownerContainer;\n+\n+    private final OwnerModel uOwnerModel;\n+\n+    private final OwnerModel gOwnerModel;\n+\n+    public Ownership(final GroupHandler groupHandler) {\n+        super();\n+        final GroupTO groupTO = GroupHandler.class.cast(groupHandler).getInnerObject();\n+\n+        ownerContainer = new WebMarkupContainer(\"ownerContainer\");\n+        ownerContainer.setOutputMarkupId(true);\n+        this.add(ownerContainer);\n+\n+        final ModalWindow userOwnerSelectWin = new ModalWindow(\"userOwnerSelectWin\");\n+        userOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        userOwnerSelectWin.setCookieName(\"create-userOwnerSelect-modal\");\n+        this.add(userOwnerSelectWin);\n+        final ModalWindow groupOwnerSelectWin = new ModalWindow(\"groupOwnerSelectWin\");\n+        groupOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        groupOwnerSelectWin.setCookieName(\"create-groupOwnerSelect-modal\");\n+        this.add(groupOwnerSelectWin);\n+\n+        uOwnerModel = new OwnerModel(groupTO, AnyTypeKind.USER);\n+        @SuppressWarnings(\"unchecked\")\n+        final AjaxTextFieldPanel userOwner = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\", uOwnerModel, false);\n+        userOwner.setPlaceholder(\"userOwner\");\n+        userOwner.hideLabel();\n+        userOwner.setReadOnly(true).setOutputMarkupId(true);\n+        ownerContainer.add(userOwner);\n+        final AjaxLink<Void> userOwnerSelect = new IndicatingAjaxLink<Void>(\"userOwnerSelect\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                userOwnerSelectWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690940L;\n+\n+                    @Override\n+                    public Page createPage() {\n+//                        return new UserOwnerSelectModalPage(getPage().getPageReference(), userOwnerSelectWin);\n+                        return null;\n+                    }\n+                });\n+                userOwnerSelectWin.show(target);\n+            }\n+        };\n+        ownerContainer.add(userOwnerSelect.setEnabled(false));\n+        final IndicatingAjaxLink<Void> userOwnerReset = new IndicatingAjaxLink<Void>(\"userOwnerReset\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                uOwnerModel.setObject(null);\n+                target.add(userOwner);\n+            }\n+        };\n+        ownerContainer.add(userOwnerReset.setEnabled(false));\n+\n+        gOwnerModel = new OwnerModel(groupTO, AnyTypeKind.GROUP);\n+        @SuppressWarnings(\"unchecked\")\n+        final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\", gOwnerModel, false);\n+        groupOwner.setPlaceholder(\"groupOwner\");\n+        groupOwner.hideLabel();\n+        groupOwner.setReadOnly(true).setOutputMarkupId(true);\n+        ownerContainer.add(groupOwner);\n+        final AjaxLink<Void> groupOwnerSelect = new IndicatingAjaxLink<Void>(\"groupOwnerSelect\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                userOwnerSelectWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690940L;\n+\n+                    @Override\n+                    public Page createPage() {\n+//                        return new GroupSelectModalPage(getPage().getPageReference(), userOwnerSelectWin,\n+//                                GroupOwnerSelectPayload.class);\n+                        return null;\n+                    }\n+                });\n+                userOwnerSelectWin.show(target);\n+            }\n+        };\n+        ownerContainer.add(groupOwnerSelect.setEnabled(false));\n+        final IndicatingAjaxLink<Void> groupOwnerReset = new IndicatingAjaxLink<Void>(\"groupOwnerReset\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                gOwnerModel.setObject(null);\n+                target.add(groupOwner);\n+            }\n+        };\n+        ownerContainer.add(groupOwnerReset.setEnabled(false));\n+    }\n+\n+    /**\n+     * This is waiting for events from opened modal windows: first to get the selected user / group, then to update the\n+     * respective text panel.\n+     *\n+     * @param event event\n+     */\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        super.onEvent(event);\n+\n+        if (event.getPayload() instanceof UserOwnerSelectPayload) {\n+            uOwnerModel.setObject(((UserOwnerSelectPayload) event.getPayload()).getUserId());\n+        }\n+        if (event.getPayload() instanceof GroupOwnerSelectPayload) {\n+            gOwnerModel.setObject(((GroupOwnerSelectPayload) event.getPayload()).getGroupId());\n+        }\n+\n+        if (event.getPayload() instanceof AjaxRequestTarget) {\n+            ((AjaxRequestTarget) event.getPayload()).add(ownerContainer);\n+        }\n+    }\n+\n+    private class OwnerModel implements IModel {\n+\n+        private static final long serialVersionUID = -3865621970810102714L;\n+\n+        private final GroupTO groupTO;\n+\n+        private final AnyTypeKind type;\n+\n+        OwnerModel(final GroupTO groupTO, final AnyTypeKind type) {\n+            this.groupTO = groupTO;\n+            this.type = type;\n+        }\n+\n+        @Override\n+        public Object getObject() {\n+            String object = null;\n+\n+            switch (type) {\n+                case USER:\n+                    if (groupTO.getUserOwner() != null) {\n+                        UserTO user = null;\n+                        try {\n+                            user = userRestClient.read(groupTO.getUserOwner());\n+                        } catch (Exception e) {\n+                            LOG.warn(\"Could not find user with id {}, ignoring\", groupTO.getUserOwner(), e);\n+                        }\n+                        if (user == null) {\n+                            groupTO.setUserOwner(null);\n+                        } else {\n+                            object = user.getKey() + \" \" + user.getUsername();\n+                        }\n+                    }\n+                    break;\n+\n+                case GROUP:\n+                    GroupTO group = null;\n+                    if (groupTO.getGroupOwner() != null) {\n+                        try {\n+                            group = groupRestClient.read(groupTO.getGroupOwner());\n+                        } catch (Exception e) {\n+                            LOG.warn(\"Could not find group with id {}, ignoring\", groupTO.getGroupOwner(), e);\n+                        }\n+                        if (group == null) {\n+                            groupTO.setGroupOwner(null);\n+                        } else {\n+                            object = group.getName();\n+                        }\n+                    }\n+                    break;\n+\n+                default:\n+            }\n+\n+            return object;\n+        }\n+\n+        @Override\n+        public void setObject(final Object object) {\n+            switch (type) {\n+                case USER:\n+                    groupTO.setUserOwner((Long) object);\n+                    break;\n+\n+                case GROUP:\n+                    groupTO.setGroupOwner((Long) object);\n+                    break;\n+\n+                default:\n+            }\n+        }\n+\n+        @Override\n+        public void detach() {\n+            // ignore\n+        }\n+    }\n+\n+    public static class UserOwnerSelectPayload {\n+\n+        private final Long userId;\n+\n+        public UserOwnerSelectPayload(final Long userId) {\n+            this.userId = userId;\n+        }\n+\n+        public Long getUserId() {\n+            return userId;\n+        }\n+    }\n+\n+    public static class GroupOwnerSelectPayload {\n+\n+        private final Long groupId;\n+\n+        public GroupOwnerSelectPayload(final Long groupId) {\n+            this.groupId = groupId;\n+        }\n+\n+        public Long getGroupId() {\n+            return groupId;\n+        }\n+    }\n+}"},{"sha":"6d5b469d54e6c0800e8382cfc7e729b12e3545f0","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":50,"deletions":20,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -27,7 +27,8 @@\n \n .notificationpanel_row span {  \n   border:0 none;\n-}    \n+}\n+\n pre {\n   white-space: -moz-pre-wrap; /* Mozilla, supported since 1999 */\n   white-space: -pre-wrap; /* Opera */\n@@ -143,6 +144,14 @@ div.wicket-modal div.w_content_3 {\n .tab-content {\n   margin-bottom: 10px;\n   margin-top: 10px;\n+  position: relative;\n+  overflow-x: hidden;\n+  overflow-y: auto;\n+  padding: 20px 20px 5px 20px;\n+}\n+\n+.modal-body .tab-content .information {\n+  position: relative !important;\n }\n \n a.help {\n@@ -190,13 +199,6 @@ div.basepage-content{\n   margin-top: 55px;\n }\n \n-.tab-content {\n-  max-height: 600px;\n-  overflow-x: hidden;\n-  overflow-y: auto;\n-  padding: 20px 20px 5px 20px;\n-}\n-\n .modal-open .modal {\n   overflow: hidden;\n }\n@@ -212,8 +214,26 @@ div.basepage-content{\n \n .wizard-view {\n   max-height: 500px;\n-  overflow: auto;\n-  padding: 0px 15px 0px 5px;\n+  height: 500px;\n+  overflow-y: auto;\n+  overflow-x: hidden;\n+  padding: 0px 5px 0px 5px;\n+}\n+\n+.modal-body .tab-content .wizard-view {\n+  max-height: 330px !important;\n+  height: 330px !important;\n+}\n+\n+.modal-body .tab-content .wizard-form {\n+  max-height: 400px !important;\n+  height: 400px !important;\n+}\n+\n+.wizard-view > div {\n+  display: block;\n+  height: 100%;\n+  position: relative;\n }\n \n .wizard-form {\n@@ -222,14 +242,19 @@ div.basepage-content{\n \n .wizard-buttons {\n   padding: 10px 0px 5px 0px;\n-  position: fixed;\n-  top: 605px;\n-  right: 30px;\n+  position: relative;\n+  bottom: 0px;\n+  width: 100%;\n }\n \n-.wizard-buttons input.pull-left {\n-  position: fixed;\n-  left: 30px;\n+.wizard-buttons div.pull-left {\n+  position: absolute;\n+  left: 15px;\n+}\n+\n+.wizard-buttons div.pull-right {\n+  position: absolute;\n+  right: 15px;\n }\n \n div.realms div.summarize {\n@@ -262,21 +287,26 @@ div#resource-modal.modal-lg {\n   BEGIN - Style for Information panel\n */\n div.information{\n-  margin: 30px 0px 20px 0px; \n-  border: 1px solid #DDDDDD; \n+  margin: 30px 0px 0px 0px; \n+  border: 1px solid #EEE; \n   font-size: 10px;\n-  color: #555555;\n+  color: #888;\n   display: inline-table; \n   width: 100%; \n   clear: both; \n   float:none;\n+  position: absolute;\n+  bottom: 0px;\n+  left: 0px;\n+  padding: 2px;\n }\n \n div.infolabel{\n   margin-left: 5px; \n   float:left; \n   width: 150px;\n-  font-weight: bold\n+  font-weight: bold;\n+  color: #888;\n }\n \n div.infoleft{"},{"sha":"6d9ac2046f859f6d2be29b6a2bc5fcb84cfac7b1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AjaxWizardButtonBar.html","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.html?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -23,8 +23,10 @@\n   <body>\n     <wicket:panel xmlns:wicket=\"http://wicket.apache.org\">\n \n-      <div>\n+      <div class=\"pull-left\">\n         <input wicket:id=\"cancel\" type=\"submit\" wicket:message=\"value:cancel\" class=\"btn btn-default pull-left\"/>\n+      </div>\n+      <div class=\"pull-right\">\n         <input wicket:id=\"previous\" type=\"submit\" wicket:message=\"value:previous\" class=\"btn btn-default\"/>\n         <input wicket:id=\"next\" type=\"submit\" wicket:message=\"value:next\"  class=\"btn btn-default\"/>\n         <input wicket:id=\"last\" type=\"submit\" wicket:message=\"value:last\"  class=\"btn btn-default\"/>"},{"sha":"12540fa2752fda812efa5e0f195d13d7b032f2e5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DynamicMemberships.html","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.html?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -0,0 +1,29 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div wicket:id=\"uDynMembershipCond\" />\n+      <span wicket:id=\"aDynMembershipCond\">\n+        <div wicket:id=\"aDynMembershipCond\"/>\n+      </span>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"e40b2c6d4101363320e9cd388d62262966d9f6c0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DynamicMemberships.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.properties?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails.properties"},{"sha":"3c92bdce37288afb48d5e4fa2c48d2e6b82fe34a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DynamicMemberships_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships_it.properties?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails_it.properties"},{"sha":"a07746b05b7136dc3751b1b85d7b2baf22b1d7c7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/DynamicMemberships_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships_pt_BR.properties?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails_pt_BR.properties"},{"sha":"c201c557813814df97bb0fba576fe6f4a19d0d38","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails.html","status":"modified","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -34,28 +34,6 @@\n           </span>\n         </a>\n       </div>\n-\n-      <div wicket:id=\"ownerContainer\">\n-        <div class=\"form-group input-group\">\n-          <span wicket:id=\"userOwner\"/>\n-          <a href=\"#\" wicket:id=\"userOwnerSelect\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\" alt=\"select group owner\" title=\"Search\"></i></a>\n-          <a href=\"#\" wicket:id=\"userOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset user owner\" title=\"Delete\"></i></a>\n-        </div>\n-\n-        <div class=\"form-group input-group\">\n-          <span wicket:id=\"groupOwner\"/>\n-          <a href=\"#\" wicket:id=\"groupOwnerSelect\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\" alt=\"select group owner\" title=\"Search\"></i></a>\n-          <a href=\"#\" wicket:id=\"groupOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset group owner\" title=\"Delete\"></i></a>\n-        </div>\n-      </div>\n-\n-      <span wicket:id=\"userOwnerSelectWin\"/>\n-      <span wicket:id=\"groupOwnerSelectWin\"/>\n-\n-      <div wicket:id=\"uDynMembershipCond\" />\n-      <span wicket:id=\"aDynMembershipCond\">\n-        <div wicket:id=\"aDynMembershipCond\"/>\n-      </span>\n     </wicket:extend>\n   </body>\n </html>"},{"sha":"0f1ae618d7d30469d343b1a58e1b8016913a6e0c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Ownership.html","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html?ref=1b3e8ea8f02c91682b3c61f9bdfddf2bc784c202","patch":"@@ -0,0 +1,41 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div wicket:id=\"ownerContainer\">\n+        <div class=\"form-group input-group\">\n+          <span wicket:id=\"userOwner\"/>\n+          <a href=\"#\" wicket:id=\"userOwnerSelect\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\" alt=\"select group owner\" title=\"Search\"></i></a>\n+          <a href=\"#\" wicket:id=\"userOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset user owner\" title=\"Delete\"></i></a>\n+        </div>\n+\n+        <div class=\"form-group input-group\">\n+          <span wicket:id=\"groupOwner\"/>\n+          <a href=\"#\" wicket:id=\"groupOwnerSelect\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\" alt=\"select group owner\" title=\"Search\"></i></a>\n+          <a href=\"#\" wicket:id=\"groupOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset group owner\" title=\"Delete\"></i></a>\n+        </div>\n+      </div>\n+\n+      <span wicket:id=\"userOwnerSelectWin\"/>\n+      <span wicket:id=\"groupOwnerSelectWin\"/>\n+    </wicket:panel>\n+  </body>\n+</html>"}]}