{"sha":"310b34afef103156a49e7a94b862f9f780522f08","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMxMGIzNGFmZWYxMDMxNTZhNDllN2E5NGI4NjJmOWY3ODA1MjJmMDg=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-08-18T16:24:27Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-08-18T16:24:27Z"},"message":"[SYNCOPE-156] improve topology performance + basic provisioning implementation aspects","tree":{"sha":"1d36075e0896ea20202f6b30d2580c9842f85505","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1d36075e0896ea20202f6b30d2580c9842f85505"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/310b34afef103156a49e7a94b862f9f780522f08","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/310b34afef103156a49e7a94b862f9f780522f08","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/310b34afef103156a49e7a94b862f9f780522f08","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/310b34afef103156a49e7a94b862f9f780522f08/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8fe3c7c20105df6112a1ee7b0206cb00e9c1a054","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8fe3c7c20105df6112a1ee7b0206cb00e9c1a054","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8fe3c7c20105df6112a1ee7b0206cb00e9c1a054"}],"stats":{"total":1133,"additions":833,"deletions":300},"files":[{"sha":"1cb987fcf7029fe4062cbb7cbaf28478df840d4f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":50,"deletions":18,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -26,12 +26,15 @@\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -55,14 +58,16 @@\n \n     private final ClearIndicatingAjaxButton addButton;\n \n-    private AjaxWizard<T> newItemPanel;\n+    private AjaxWizardBuilder<T> newItemPanelBuilder;\n \n     private final WebMarkupContainer container;\n \n     private final Fragment initialFragment;\n \n     private final List<T> listOfItems;\n \n+    private NotificationPanel notificationPanel;\n+\n     /**\n      * Table view of a list of beans.\n      *\n@@ -141,12 +146,12 @@ protected void populateItem(final ListItem<T> beanItem) {\n                     @Override\n                     protected void populateItem(final ListItem<String> fieldItem) {\n                         try {\n-                            LOG.error(\"Processing field {}\", fieldItem.getModelObject());\n+                            LOG.debug(\"Processing field {}\", fieldItem.getModelObject());\n \n                             final Object value = new PropertyDescriptor(fieldItem.getModelObject(), bean.getClass()).\n                                     getReadMethod().invoke(bean);\n \n-                            LOG.error(\"Field value {}\", value);\n+                            LOG.debug(\"Field value {}\", value);\n \n                             fieldItem.add(value == null\n                                     ? new Label(\"field\", StringUtils.EMPTY)\n@@ -171,10 +176,7 @@ protected void populateItem(final ListItem<String> fieldItem) {\n \n             @Override\n             protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                final Fragment fragment = new Fragment(\"content\", \"wizard\", ListViewPanel.this);\n-                fragment.add(newItemPanel.clone());\n-                container.addOrReplace(fragment);\n-                target.add(container);\n+                send(ListViewPanel.this, Broadcast.DEPTH, new AjaxWizard.NewItemActionEvent<T>(null, target));\n             }\n         };\n \n@@ -185,34 +187,56 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n     }\n \n     @Override\n+    @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n             final AjaxRequestTarget target = AjaxWizard.NewItemEvent.class.cast(event.getPayload()).getTarget();\n \n-            @SuppressWarnings(\"unchecked\")\n             final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n \n-            if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n-                this.listOfItems.add(item);\n+            if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent) {\n+                final Fragment fragment = new Fragment(\"content\", \"wizard\", ListViewPanel.this);\n+                newItemPanelBuilder.setItem(item);\n+\n+                fragment.add(newItemPanelBuilder.build(\n+                        ((AjaxWizard.NewItemActionEvent<T>) event.getPayload()).getIndex()));\n+\n+                container.addOrReplace(fragment);\n+            } else {\n+                if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n+                    if (item != null && !this.listOfItems.contains(item)) {\n+                        this.listOfItems.add(item);\n+                    }\n+\n+                    if (notificationPanel != null) {\n+                        getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n+                        notificationPanel.refresh(target);\n+                    }\n+                }\n+                container.addOrReplace(initialFragment);\n             }\n \n-            container.addOrReplace(initialFragment);\n             target.add(container);\n         }\n         super.onEvent(event);\n     }\n \n-    private ListViewPanel<T> addNewItemPanel(final AjaxWizard<T> panel) {\n-        this.newItemPanel = panel;\n+    private ListViewPanel<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n+        this.newItemPanelBuilder = panelBuilder;\n \n-        if (this.newItemPanel != null) {\n+        if (this.newItemPanelBuilder != null) {\n             addButton.setEnabled(true);\n             addButton.setVisible(true);\n         }\n \n         return this;\n     }\n \n+    private ListViewPanel<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n+        this.notificationPanel = notificationPanel;\n+        return this;\n+    }\n+\n     public static <T extends Serializable> Builder<T> builder(final Class<T> reference, final PageReference pageRef) {\n         return new Builder<T>(reference, pageRef);\n     }\n@@ -236,7 +260,9 @@ public static <T extends Serializable> Builder<T> builder(final Class<T> referen\n \n         private List<T> items;\n \n-        private AjaxWizard<T> newItemPanel;\n+        private AjaxWizardBuilder<T> newItemPanelBuilder;\n+\n+        private NotificationPanel notificationPanel;\n \n         private Builder(final Class<T> reference, final PageReference pageRef) {\n             this.pageRef = pageRef;\n@@ -252,7 +278,8 @@ private Builder(final Class<T> reference, final PageReference pageRef) {\n          * @return List view.\n          */\n         public ListViewPanel<T> build(final String id) {\n-            return new ListViewPanel<T>(id, items, reference, includes, actions, pageRef).addNewItemPanel(newItemPanel);\n+            return new ListViewPanel<T>(id, items, reference, includes, actions, pageRef).\n+                    addNewItemPanelBuilder(newItemPanelBuilder).addNotificationPanel(notificationPanel);\n         }\n \n         /**\n@@ -314,8 +341,13 @@ public Builder<T> addAction(\n             return this;\n         }\n \n-        public Builder<T> addNewItemPanel(final AjaxWizard<T> panel) {\n-            this.newItemPanel = panel;\n+        public Builder<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n+            this.newItemPanelBuilder = panelBuilder;\n+            return this;\n+        }\n+\n+        public Builder<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n+            this.notificationPanel = notificationPanel;\n             return this;\n         }\n     }"},{"sha":"3098f5a4a76b7184ec6a907b214400d2fab121e8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/NotificationPanel.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -32,11 +32,11 @@ public class NotificationPanel extends FeedbackPanel {\n     private static final long serialVersionUID = 5895940553202128621L;\n \n     public NotificationPanel(final String id) {\n-        this(id, null, null);\n+        this(id, null);\n     }\n \n-    public NotificationPanel(final String id, final String additionalCSSClass,\n-            final IFeedbackMessageFilter feedbackMessageFilter) {\n+    public NotificationPanel(\n+            final String id, final IFeedbackMessageFilter feedbackMessageFilter) {\n \n         super(id, feedbackMessageFilter);\n \n@@ -46,17 +46,14 @@ public NotificationPanel(final String id, final String additionalCSSClass,\n \n             @Override\n             protected void onEvent(final AjaxRequestTarget target) {\n-                target.appendJavaScript(\n-                        \"setTimeout(\\\"$('div#\" + getMarkupId() + \"').fadeOut('normal')\\\", 0);\");\n+                target.appendJavaScript(\"setTimeout(\\\"$('div#\" + getMarkupId() + \"').fadeOut('normal')\\\", 0);\");\n             }\n         });\n \n-        // set custom markup id and ouput it, to find the component later on in the js function\n-        setMarkupId(id);\n         setOutputMarkupId(true);\n \n-        add(new AttributeModifier(\"class\", new Model<>(\"alert\")));\n-        add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0;\")));\n+        this.add(new AttributeModifier(\"class\", new Model<>(\"alert\")));\n+        this.add(new AttributeModifier(\"style\", new Model<>(\"opacity: 0;\")));\n     }\n \n     private String getCSSClass(final int level) {\n@@ -96,9 +93,9 @@ public void refresh(final AjaxRequestTarget target) {\n             // refresh the panel and call the js function with the panel markup id \n             // and the total count of messages\n             target.add(this);\n+\n             if (anyMessage(FeedbackMessage.ERROR)) {\n-                target.appendJavaScript(\n-                        \"$('div#\" + getMarkupId() + \"').fadeTo('normal', 1.0);\");\n+                target.appendJavaScript(\"$('div#\" + getMarkupId() + \"').fadeTo('normal', 1.0);\");\n             } else {\n                 target.appendJavaScript(\n                         \"showNotification('\" + getMarkupId() + \"', \" + getCurrentMessages().size() + \");\");"},{"sha":"d556346590d8a04fcf6efead087ad6b213de8210","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -222,7 +222,7 @@ protected List<ConnInstanceTO> load() {\n                 new ResourceModel(\"connector\", \"connector\").getObject(),\n                 new PropertyModel<ConnInstanceTO>(this, \"connInstanceTO\"));\n         conn.setChoices(connectors.getObject());\n-        conn.setChoiceRenderer(new ChoiceRenderer<>(\"displayName\", \"key\"));\n+        conn.setChoiceRenderer(new ChoiceRenderer<ConnInstanceTO>(\"displayName\", \"key\"));\n \n         conn.getField().setModel(new IModel<ConnInstanceTO>() {\n "},{"sha":"40cc013660bf6d0a4a2ba2ffd44d572846e19cb0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"modified","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -129,10 +129,6 @@ public class ResourceMappingPanel extends Panel {\n      */\n     private final WebMarkupContainer mappingContainer;\n \n-    private final WebMarkupContainer connObjectLinkContainer;\n-\n-    private final AjaxCheckBoxPanel connObjectLinkCheckbox;\n-\n     private MappingTO getMapping() {\n         if (provisionTO.getMapping() == null) {\n             provisionTO.setMapping(new MappingTO());\n@@ -159,10 +155,6 @@ public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final\n         this.mappingContainer.setOutputMarkupId(true);\n         add(this.mappingContainer);\n \n-        this.connObjectLinkContainer = new WebMarkupContainer(\"connObjectLinkContainer\");\n-        this.connObjectLinkContainer.setOutputMarkupId(true);\n-        add(this.connObjectLinkContainer);\n-\n         if (resourceTO.getConnector() != null && resourceTO.getConnector() > 0) {\n             schemaNames = getSchemaNames(resourceTO.getConnector(), resourceTO.getConnConfProperties());\n             setEnabled();\n@@ -444,41 +436,6 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         addMappingBtn.setDefaultFormProcessing(false);\n         addMappingBtn.setEnabled(resourceTO.getConnector() != null && resourceTO.getConnector() > 0);\n         mappingContainer.add(addMappingBtn);\n-\n-        boolean connObjectLinkEnabled = false;\n-        if (getMapping().getConnObjectLink() != null) {\n-            connObjectLinkEnabled = true;\n-        }\n-        connObjectLinkCheckbox = new AjaxCheckBoxPanel(\"connObjectLinkCheckbox\",\n-                new ResourceModel(\"connObjectLinkCheckbox\", \"connObjectLinkCheckbox\").getObject(),\n-                new Model<>(connObjectLinkEnabled));\n-        connObjectLinkCheckbox.setEnabled(true);\n-\n-        connObjectLinkContainer.add(connObjectLinkCheckbox);\n-\n-        final AjaxTextFieldPanel connObjectLink = new AjaxTextFieldPanel(\"connObjectLink\",\n-                new ResourceModel(\"connObjectLink\", \"connObjectLink\").getObject(),\n-                new PropertyModel<String>(getMapping(), \"connObjectLink\"));\n-        connObjectLink.setEnabled(connObjectLinkEnabled);\n-        connObjectLinkContainer.add(connObjectLink);\n-\n-        connObjectLinkCheckbox.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                if (connObjectLinkCheckbox.getModelObject()) {\n-                    connObjectLink.setEnabled(Boolean.TRUE);\n-                    connObjectLink.setModelObject(\"\");\n-                } else {\n-                    connObjectLink.setEnabled(Boolean.FALSE);\n-                    connObjectLink.setModelObject(\"\");\n-                }\n-\n-                target.add(connObjectLink);\n-            }\n-        });\n     }\n \n     private List<String> getSchemaNames(final Long connectorId, final Set<ConnConfProperty> conf) {\n@@ -498,15 +455,10 @@ private void setEnabled() {\n \n         this.mappingContainer.setEnabled(enabled);\n         this.mappingContainer.setVisible(enabled);\n-        this.connObjectLinkContainer.setEnabled(enabled);\n-        this.connObjectLinkContainer.setVisible(enabled);\n \n         if (!enabled) {\n             getMapping().getItems().clear();\n             getMapping().setConnObjectLink(null);\n-            if (this.connObjectLinkCheckbox != null) {\n-                this.connObjectLinkCheckbox.setModelObject(null);\n-            }\n         }\n     }\n "},{"sha":"345d2e71cfdd2aa791e1dbe6debb7a7a52812cfb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"modified","additions":17,"deletions":8,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -24,11 +24,13 @@\n import java.util.Collection;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.topology.TopologyNode;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wizards.ProvisionWizard;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.provision.ProvisionWizardBuilder;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n@@ -89,31 +91,36 @@ public ResourceModal(\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-\n+                send(pageRef.getPage(), Broadcast.DEPTH,\n+                        new AjaxWizard.NewItemActionEvent<ProvisionTO>(provisionTO, 2, target));\n             }\n         }, ActionLink.ActionType.MAPPING, Entitlement.RESOURCE_UPDATE).addAction(new ActionLink<ProvisionTO>() {\n \n             private static final long serialVersionUID = -3722207913631435514L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-\n+                send(pageRef.getPage(), Broadcast.DEPTH,\n+                        new AjaxWizard.NewItemActionEvent<ProvisionTO>(provisionTO, 3, target));\n             }\n         }, ActionLink.ActionType.ACCOUNT_LINK, Entitlement.RESOURCE_UPDATE).addAction(new ActionLink<ProvisionTO>() {\n \n             private static final long serialVersionUID = -3722207913631435524L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-\n+                provisionTO.setSyncToken(null);\n+                send(pageRef.getPage(), Broadcast.DEPTH,\n+                        new AjaxWizard.NewItemFinishEvent<ProvisionTO>(provisionTO, target));\n             }\n         }, ActionLink.ActionType.RESET_TIME, Entitlement.RESOURCE_UPDATE).addAction(new ActionLink<ProvisionTO>() {\n \n             private static final long serialVersionUID = -3722207913631435534L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-\n+                send(pageRef.getPage(), Broadcast.DEPTH,\n+                        new AjaxWizard.NewItemActionEvent<ProvisionTO>(SerializationUtils.clone(provisionTO), target));\n             }\n         }, ActionLink.ActionType.CLONE, Entitlement.RESOURCE_CREATE).addAction(new ActionLink<ProvisionTO>() {\n \n@@ -122,12 +129,14 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n             @Override\n             public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n                 resourceTO.getProvisions().remove(provisionTO);\n-                target.add(provisions);\n-\n+                send(pageRef.getPage(), Broadcast.DEPTH,\n+                        new AjaxWizard.NewItemFinishEvent<ProvisionTO>(null, target));\n             }\n         }, ActionLink.ActionType.DELETE, Entitlement.RESOURCE_DELETE);\n \n-        builder.addNewItemPanel(new ProvisionWizard(\"wizard\", resourceTO, pageRef));\n+        builder.addNewItemPanelBuilder(new ProvisionWizardBuilder(\"wizard\", resourceTO, pageRef));\n+        builder.addNotificationPanel(feedbackPanel);\n+\n         provisions.add(builder.build(\"provisions\"));\n         //--------------------------------\n "},{"sha":"7202082ec5355347994450ca7d2d7d82b6f360c7","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyTypeRestClient.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyTypeRestClient.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.rest.api.service.AnyTypeService;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Console client for invoking Rest AnyType services.\n+ */\n+@Component\n+public class AnyTypeRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public List<AnyTypeTO> getAll() {\n+        List<AnyTypeTO> types = null;\n+\n+        try {\n+            types = getService(AnyTypeService.class).list();\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading all any types\", e);\n+        }\n+\n+        return types;\n+    }\n+}"},{"sha":"c991a44ad0222884fccb8cc408337650047489eb","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":146,"deletions":23,"changes":169,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -20,6 +20,7 @@\n \n import static org.apache.syncope.client.console.topology.TopologyNode.Status.FAILURE;\n import static org.apache.syncope.client.console.topology.TopologyNode.Status.REACHABLE;\n+import static org.apache.syncope.client.console.topology.TopologyNode.Status.UNKNOWN;\n import static org.apache.syncope.client.console.topology.TopologyNode.Status.UNREACHABLE;\n \n import com.fasterxml.jackson.databind.JsonNode;\n@@ -29,11 +30,13 @@\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n+import java.util.Set;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n@@ -46,7 +49,10 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.apache.wicket.Application;\n import org.apache.wicket.Component;\n+import org.apache.wicket.Session;\n+import org.apache.wicket.ThreadContext;\n import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.IAjaxIndicatorAware;\n@@ -164,36 +170,62 @@ public Topology() {\n \n             private static final long serialVersionUID = 1L;\n \n+            final Map<String, String> resources = new HashMap<String, String>();\n+\n+            final Set<String> runningResCheck = new HashSet<>();\n+\n+            final Map<Long, String> connectors = new HashMap<Long, String>();\n+\n+            final Set<Long> runningConnCheck = new HashSet<>();\n+\n             @Override\n             protected void onMessage(final WebSocketRequestHandler handler, final TextMessage message) {\n                 try {\n                     final ObjectMapper mapper = new ObjectMapper();\n                     final JsonNode obj = mapper.readTree(message.getText());\n \n+                    final ExecutorService executorService = Executors.newFixedThreadPool(1);\n+\n                     switch (SupportedOperation.valueOf(obj.get(\"kind\").asText())) {\n                         case CHECK_CONNECTOR:\n-                            try {\n-                                final ConnInstanceTO connector = connectorRestClient.read(obj.get(\"target\").asLong());\n-                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n-                                        connectorRestClient.check(connector) ? REACHABLE : UNREACHABLE,\n-                                        obj.get(\"target\").asLong()));\n-                            } catch (Exception e) {\n-                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n-                                        FAILURE,\n-                                        obj.get(\"target\").asLong()));\n+                            final Long ckey = obj.get(\"target\").asLong();\n+\n+                            if (connectors.containsKey(ckey)) {\n+                                handler.push(connectors.get(ckey));\n+                            } else {\n+                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\", UNKNOWN, ckey));\n                             }\n+\n+                            synchronized (runningConnCheck) {\n+                                if (runningConnCheck.contains(ckey)) {\n+                                    LOG.debug(\"Running connection check for connector {}\", ckey);\n+                                } else {\n+                                    runningConnCheck.add(ckey);\n+                                }\n+                            }\n+\n+                            executorService.execute(new ConnCheck(ckey));\n+\n                             break;\n                         case CHECK_RESOURCE:\n-                            try {\n-                                final ResourceTO resource = resourceRestClient.read(obj.get(\"target\").asText());\n-                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n-                                        connectorRestClient.check(resource) ? REACHABLE : UNREACHABLE,\n-                                        obj.get(\"target\").asText()));\n-                            } catch (Exception e) {\n-                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n-                                        FAILURE,\n-                                        obj.get(\"target\").asText()));\n+                            final String rkey = obj.get(\"target\").asText();\n+\n+                            if (resources.containsKey(rkey)) {\n+                                handler.push(resources.get(rkey));\n+                            } else {\n+                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\", UNKNOWN, rkey));\n+                            }\n+\n+                            synchronized (runningResCheck) {\n+                                if (runningResCheck.contains(rkey)) {\n+                                    LOG.debug(\"Running connection check for resource {}\", rkey);\n+                                } else {\n+                                    runningResCheck.add(rkey);\n+                                }\n                             }\n+\n+                            executorService.execute(new ResCheck(rkey));\n+\n                             break;\n                         case ADD_ENDPOINT:\n                             handler.appendJavaScript(String.format(\"addEndpoint('%s', '%s', '%s');\",\n@@ -204,10 +236,91 @@ protected void onMessage(final WebSocketRequestHandler handler, final TextMessag\n                         default:\n                     }\n \n-                } catch (IOException ex) {\n-                    Logger.getLogger(Topology.class.getName()).log(Level.SEVERE, null, ex);\n+                    executorService.shutdown();\n+\n+                } catch (IOException e) {\n+                    LOG.error(\"Eror managing websocket message\", e);\n                 }\n+            }\n+\n+            class ConnCheck implements Runnable {\n+\n+                final Long key;\n+\n+                private final Application application;\n \n+                private final Session session;\n+\n+                public ConnCheck(final Long key) {\n+                    this.key = key;\n+                    this.application = Application.get();\n+                    this.session = Session.exists() ? Session.get() : null;\n+                }\n+\n+                @Override\n+                public void run() {\n+                    try {\n+                        ThreadContext.setApplication(application);\n+                        ThreadContext.setSession(session);\n+\n+                        String res;\n+                        try {\n+                            final ConnInstanceTO connector = connectorRestClient.read(key);\n+                            res = String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n+                                    connectorRestClient.check(connector) ? REACHABLE : UNREACHABLE, key);\n+                        } catch (Exception e) {\n+                            LOG.warn(\"Error checking connection for {}\", key, e);\n+                            res = String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\", FAILURE, key);\n+                        }\n+\n+                        synchronized (runningConnCheck) {\n+                            connectors.put(key, res);\n+                            runningConnCheck.remove(key);\n+                        }\n+                    } finally {\n+                        ThreadContext.detach();\n+                    }\n+                }\n+            }\n+\n+            class ResCheck implements Runnable {\n+\n+                final String key;\n+\n+                private final Application application;\n+\n+                private final Session session;\n+\n+                public ResCheck(final String key) {\n+                    this.key = key;\n+                    this.application = Application.get();\n+                    this.session = Session.exists() ? Session.get() : null;\n+                }\n+\n+                @Override\n+                public void run() {\n+                    try {\n+                        ThreadContext.setApplication(application);\n+                        ThreadContext.setSession(session);\n+\n+                        String res;\n+                        try {\n+                            final ResourceTO resource = resourceRestClient.read(key);\n+                            res = String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n+                                    connectorRestClient.check(resource) ? REACHABLE : UNREACHABLE, key);\n+                        } catch (Exception e) {\n+                            LOG.warn(\"Error checking connection for {}\", key, e);\n+                            res = String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\", FAILURE, key);\n+                        }\n+\n+                        synchronized (runningResCheck) {\n+                            resources.put(key, res);\n+                            runningResCheck.remove(key);\n+                        }\n+                    } finally {\n+                        ThreadContext.detach();\n+                    }\n+                }\n             }\n         });\n \n@@ -517,7 +630,17 @@ public void renderHead(final Component component, final IHeaderResponse response\n             protected void onTimer(final AjaxRequestTarget target) {\n                 target.appendJavaScript(\"checkConnection()\");\n \n-                if (getUpdateInterval().seconds() < 60.0) {\n+                if (getUpdateInterval().seconds() < 5.0) {\n+                    setUpdateInterval(Duration.seconds(5));\n+                } else if (getUpdateInterval().seconds() < 10.0) {\n+                    setUpdateInterval(Duration.seconds(10));\n+                } else if (getUpdateInterval().seconds() < 15.0) {\n+                    setUpdateInterval(Duration.seconds(15));\n+                } else if (getUpdateInterval().seconds() < 20.0) {\n+                    setUpdateInterval(Duration.seconds(20));\n+                } else if (getUpdateInterval().seconds() < 30.0) {\n+                    setUpdateInterval(Duration.seconds(30));\n+                } else if (getUpdateInterval().seconds() < 60.0) {\n                     setUpdateInterval(Duration.seconds(60));\n                 }\n             }"},{"sha":"ff64fbef9a6d5131c845347e667a003b29f4461d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -33,12 +33,17 @@ public class AjaxCheckBoxPanel extends FieldPanel<Boolean> {\n     private static final long serialVersionUID = 5664138233103884310L;\n \n     public AjaxCheckBoxPanel(final String id, final String name, final IModel<Boolean> model) {\n+        this(id, name, model, true);\n+    }\n+\n+    public AjaxCheckBoxPanel(\n+            final String id, final String name, final IModel<Boolean> model, final boolean enableOnChange) {\n         super(id, model);\n \n         field = new CheckBox(\"checkboxField\", model);\n         add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n \n-        if (!isReadOnly()) {\n+        if (enableOnChange && !isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                 private static final long serialVersionUID = -1107858522700306810L;"},{"sha":"ae3a01fdc464f6561d7c349d5cd0083d3819d314","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -43,8 +43,7 @@ public AjaxDropDownChoicePanel(\n \n         super(id, model);\n \n-        field = new DropDownChoice<>(\n-                \"dropDownChoiceField\", model, Collections.<T>emptyList(), new ChoiceRenderer<T>());\n+        field = new DropDownChoice<>(\"dropDownChoiceField\", model, Collections.<T>emptyList(), new ChoiceRenderer<T>());\n         add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n \n         if (enableOnBlur) {\n@@ -61,7 +60,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    public AjaxDropDownChoicePanel<T> setChoiceRenderer(final IChoiceRenderer renderer) {\n+    public AjaxDropDownChoicePanel<T> setChoiceRenderer(final IChoiceRenderer<T> renderer) {\n         ((DropDownChoice) field).setChoiceRenderer(renderer);\n         return this;\n     }\n@@ -80,7 +79,7 @@ public AjaxDropDownChoicePanel<T> setChoices(final IModel<? extends List<? exten\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public FieldPanel clone() {\n+    public FieldPanel<T> clone() {\n         final AjaxDropDownChoicePanel<T> panel = (AjaxDropDownChoicePanel<T>) super.clone();\n         panel.setChoiceRenderer(((DropDownChoice) field).getChoiceRenderer());\n         panel.setChoices(((DropDownChoice) field).getChoices());"},{"sha":"2ba29f87d0f476732fcea9e9d10cb5c57031e318","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -39,6 +39,11 @@ public class AjaxTextFieldPanel extends FieldPanel<String> implements Cloneable\n     private List<String> choices = Collections.emptyList();\n \n     public AjaxTextFieldPanel(final String id, final String name, final IModel<String> model) {\n+        this(id, name, model, true);\n+    }\n+\n+    public AjaxTextFieldPanel(\n+            final String id, final String name, final IModel<String> model, final boolean enableOnChange) {\n         super(id, model);\n \n         final AutoCompleteSettings settings = new AutoCompleteSettings();\n@@ -66,7 +71,7 @@ protected Iterator<String> getChoices(final String input) {\n         };\n         add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n \n-        if (!isReadOnly()) {\n+        if (enableOnChange && !isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                 private static final long serialVersionUID = -1107858522700306810L;"},{"sha":"e0f2f3e35ee23db0d6d6afac3a5ce01c39b5f2ee","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -21,6 +21,7 @@\n import java.io.Serializable;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.FormComponent;\n@@ -61,11 +62,8 @@ public FieldPanel<T> setTitle(final String title) {\n         return this;\n     }\n \n-    public FieldPanel<T> setStyleSheet(final String classes) {\n-        field.add(AttributeModifier.replace(\"class\", classes != null\n-                ? classes\n-                : \"\"));\n-\n+    public FieldPanel<T> setStyleSheet(final String... classes) {\n+        field.add(AttributeModifier.replace(\"class\", StringUtils.join(classes, ' ')));\n         return this;\n     }\n "},{"sha":"caa38571335608665476d295fabe0396a5d4a3c8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":64,"deletions":15,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -16,12 +16,14 @@\n package org.apache.syncope.client.console.wizards;\n \n import java.io.Serializable;\n-import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.wizard.Wizard;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.request.cycle.RequestCycle;\n \n public abstract class AjaxWizard<T extends Serializable> extends Wizard {\n@@ -30,25 +32,50 @@\n \n     private final PageReference pageRef;\n \n-    private final T item;\n+    private T item;\n+\n+    private final boolean edit;\n+\n+    private NotificationPanel feedbackPanel;\n \n     /**\n      * Construct.\n      *\n-     * @param id The component id\n-     * @param item\n+     * @param id The component id.\n+     * @param item model object.\n+     * @param model\n      * @param pageRef Caller page reference.\n+     * @param edit <tt>true</tt> if edit mode.\n      */\n-    public AjaxWizard(final String id, final T item, final PageReference pageRef) {\n+    public AjaxWizard(\n+            final String id, final T item, final WizardModel model, final PageReference pageRef, final boolean edit) {\n         super(id);\n         this.item = item;\n         this.pageRef = pageRef;\n+        this.edit = edit;\n+\n         setOutputMarkupId(true);\n+\n+        setDefaultModel(new CompoundPropertyModel<AjaxWizard<T>>(this));\n+\n+        init(model);\n     }\n \n     @Override\n     protected Component newButtonBar(final String id) {\n-        return new AjaxWizardButtonBar(id, this);\n+        return new AjaxWizardButtonBar(id, this, this.edit);\n+    }\n+\n+    @Override\n+    protected Component newFeedbackPanel(final String id) {\n+        if (feedbackPanel == null) {\n+            feedbackPanel = new NotificationPanel(id);\n+        }\n+        return feedbackPanel;\n+    }\n+\n+    public NotificationPanel getFeedbackPanel() {\n+        return feedbackPanel;\n     }\n \n     protected abstract void onCancelInternal();\n@@ -79,7 +106,19 @@ public T getItem() {\n         return item;\n     }\n \n+    /**\n+     * Replaces the default value provided with the constructor.\n+     *\n+     * @param item new value.\n+     * @return the current wizard instance.\n+     */\n+    public AjaxWizard<T> setItem(final T item) {\n+        this.item = item;\n+        return this;\n+    }\n+\n     public abstract static class NewItemEvent<T> {\n+\n         private final T item;\n \n         private final AjaxRequestTarget target;\n@@ -98,6 +137,25 @@ public AjaxRequestTarget getTarget() {\n         }\n     }\n \n+    public static class NewItemActionEvent<T> extends NewItemEvent<T> {\n+\n+        private int index = 0;\n+\n+        public NewItemActionEvent(final T item, final AjaxRequestTarget target) {\n+            super(item, target);\n+        }\n+\n+        public NewItemActionEvent(final T item, final int index, final AjaxRequestTarget target) {\n+            super(item, target);\n+            this.index = index;\n+        }\n+\n+        public int getIndex() {\n+            return index;\n+        }\n+\n+    }\n+\n     public static class NewItemCancelEvent<T> extends NewItemEvent<T> {\n \n         public NewItemCancelEvent(final T item, final AjaxRequestTarget target) {\n@@ -113,13 +171,4 @@ public NewItemFinishEvent(final T item, final AjaxRequestTarget target) {\n         }\n \n     }\n-\n-    /**\n-     *\n-     * @return\n-     */\n-    @Override\n-    public AjaxWizard<T> clone() {\n-        return SerializationUtils.clone(this);\n-    }\n }"},{"sha":"035eab673a712d03290adbecd072367fe334b087","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+\n+public abstract class AjaxWizardBuilder<T extends Serializable> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final String id;\n+\n+    private final PageReference pageRef;\n+\n+    private final T defaultItem;\n+\n+    private T item;\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param defaultItem default item.\n+     * @param pageRef Caller page reference.\n+     */\n+    public AjaxWizardBuilder(final String id, final T defaultItem, final PageReference pageRef) {\n+        this.id = id;\n+        this.defaultItem = defaultItem;\n+        this.pageRef = pageRef;\n+    }\n+\n+    public AjaxWizard<T> build(final int index) {\n+        final AjaxWizard<T> wizard = build(index > 0);\n+        for (int i = 1; i < index; i++) {\n+            wizard.getWizardModel().next();\n+        }\n+        return wizard;\n+    }\n+\n+    public AjaxWizard<T> build(final boolean edit) {\n+        final T modelObject = getItem();\n+        setItem(null);\n+\n+        return new AjaxWizard<T>(id, modelObject, buildModelSteps(modelObject, new WizardModel()), pageRef, edit) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onCancelInternal() {\n+                AjaxWizardBuilder.this.onCancelInternal();\n+            }\n+\n+            @Override\n+            protected void onApplyInternal() {\n+                AjaxWizardBuilder.this.onApplyInternal();\n+            }\n+        };\n+    }\n+\n+    protected abstract WizardModel buildModelSteps(final T modelObject, final WizardModel wizardModel);\n+\n+    protected abstract void onCancelInternal();\n+\n+    protected abstract void onApplyInternal();\n+\n+    private T getItem() {\n+        return item == null ? SerializationUtils.clone(defaultItem) : item;\n+    }\n+\n+    /**\n+     * Replaces the default value provided with the constructor.\n+     *\n+     * @param item new value.\n+     * @return the current wizard factory instance.\n+     */\n+    public AjaxWizardBuilder<T> setItem(final T item) {\n+        this.item = item;\n+        return this;\n+    }\n+}"},{"sha":"b272ff8dda88082251838b6c8d5e944350886e96","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardButtonBar.java","status":"modified","additions":22,"deletions":6,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -15,18 +15,18 @@\n  */\n package org.apache.syncope.client.console.wizards;\n \n+import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.IWizardModel;\n import org.apache.wicket.extensions.wizard.IWizardStep;\n-import org.apache.wicket.extensions.wizard.Wizard;\n import org.apache.wicket.extensions.wizard.WizardButtonBar;\n import org.apache.wicket.markup.html.form.Form;\n \n public class AjaxWizardButtonBar extends WizardButtonBar {\n \n     private static final long serialVersionUID = 1L;\n \n-    public AjaxWizardButtonBar(final String id, final Wizard wizard) {\n+    public AjaxWizardButtonBar(final String id, final AjaxWizard<?> wizard, final boolean edit) {\n         super(id, wizard);\n \n         addOrReplace(new AjaxWizardButton(\"next\", wizard, \"next\") {\n@@ -52,9 +52,15 @@ protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n                 target.add(wizard);\n             }\n \n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                super.onError(target, form);\n+                NotificationPanel.class.cast(wizard.getFeedbackPanel()).refresh(target);\n+            }\n+\n             @Override\n             public final boolean isEnabled() {\n-                return super.isEnabled() && getWizardModel().isNextAvailable();\n+                return !edit && super.isEnabled() && getWizardModel().isNextAvailable();\n             }\n         });\n \n@@ -70,7 +76,7 @@ protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n \n             @Override\n             public final boolean isEnabled() {\n-                return super.isEnabled() && getWizardModel().isPreviousAvailable();\n+                return !edit && super.isEnabled() && getWizardModel().isPreviousAvailable();\n             }\n         });\n \n@@ -100,10 +106,20 @@ protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n                 target.add(wizard);\n             }\n \n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                super.onError(target, form);\n+                NotificationPanel.class.cast(wizard.getFeedbackPanel()).refresh(target);\n+            }\n+\n             @Override\n             public final boolean isEnabled() {\n-                final IWizardStep activeStep = getWizardModel().getActiveStep();\n-                return (activeStep != null) && getWizardModel().isLastStep(activeStep) && super.isEnabled();\n+                if (edit) {\n+                    return true;\n+                } else {\n+                    final IWizardStep activeStep = getWizardModel().getActiveStep();\n+                    return (activeStep != null) && getWizardModel().isLastStep(activeStep) && super.isEnabled();\n+                }\n             }\n         });\n     }"},{"sha":"6c3c8e0abc9fcc530fad74b2dd5a5b6a65ffe5ad","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/ProvisionWizard.java","status":"removed","additions":0,"deletions":123,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fe3c7c20105df6112a1ee7b0206cb00e9c1a054/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fe3c7c20105df6112a1ee7b0206cb00e9c1a054/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.java?ref=8fe3c7c20105df6112a1ee7b0206cb00e9c1a054","patch":"@@ -1,123 +0,0 @@\n-/*\n- * Copyright 2015 The Apache Software Foundation.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.syncope.client.console.wizards;\n-\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.panels.ResourceMappingPanel;\n-import org.apache.syncope.common.lib.to.ProvisionTO;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n-import org.apache.wicket.extensions.wizard.WizardStep;\n-import org.apache.wicket.markup.html.form.TextField;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.model.StringResourceModel;\n-\n-public class ProvisionWizard extends AjaxWizard<ProvisionTO> {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    private final ResourceTO resourceTO;\n-\n-    /**\n-     * The object type specification step.\n-     */\n-    private final class ObjectType extends WizardStep {\n-\n-        private static final long serialVersionUID = 1L;\n-\n-        /**\n-         * Construct.\n-         */\n-        public ObjectType() {\n-            super(new ResourceModel(\"type.title\", StringUtils.EMPTY),\n-                    new ResourceModel(\"type.summary\", StringUtils.EMPTY), new Model<ProvisionTO>(getItem()));\n-\n-            add(new TextField<String>(\n-                    \"type\", new PropertyModel<String>(getItem(), \"anyType\")).setRequired(true));\n-            add(new TextField<String>(\n-                    \"class\", new PropertyModel<String>(getItem(), \"objectClass\")).setRequired(true));\n-        }\n-    }\n-\n-    /**\n-     * Mapping definition step.\n-     */\n-    private final class Mapping extends WizardStep {\n-\n-        private static final long serialVersionUID = 1L;\n-\n-        /**\n-         * Construct.\n-         */\n-        public Mapping() {\n-            setTitleModel(new ResourceModel(\"mapping.title\", \"Mapping\"));\n-            setSummaryModel(new StringResourceModel(\"mapping.summary\", this, new Model<ProvisionTO>(getItem())));\n-\n-            add(new ResourceMappingPanel(\"mapping\", resourceTO, getItem()));\n-        }\n-    }\n-\n-    /**\n-     * AccountLink specification step.\n-     */\n-    private final class AccountLink extends WizardStep {\n-\n-        private static final long serialVersionUID = 1L;\n-\n-        /**\n-         * Construct.\n-         */\n-        public AccountLink() {\n-            super(new ResourceModel(\"link.title\", StringUtils.EMPTY),\n-                    new ResourceModel(\"link.summary\", StringUtils.EMPTY));\n-        }\n-    }\n-\n-    /**\n-     * Construct.\n-     *\n-     * @param id The component id\n-     * @param resourceTO external resource to be updated.\n-     * @param pageRef Caller page reference.\n-     */\n-    public ProvisionWizard(final String id, final ResourceTO resourceTO, final PageReference pageRef) {\n-        super(id, new ProvisionTO(), pageRef);\n-        this.resourceTO = resourceTO;\n-\n-        setDefaultModel(new CompoundPropertyModel<ProvisionWizard>(this));\n-\n-        final WizardModel model = new WizardModel();\n-        model.add(new ObjectType());\n-        model.add(new Mapping());\n-        model.add(new AccountLink());\n-\n-        init(model);\n-    }\n-\n-    @Override\n-    protected void onCancelInternal() {\n-        // d nothing\n-    }\n-\n-    @Override\n-    protected void onApplyInternal() {\n-        // do nothing\n-    }\n-}"},{"sha":"364bdb2c9ae3dde7de81ca1a2bbae74c54f6944b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder.java","status":"added","additions":222,"deletions":0,"changes":222,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,222 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.provision;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.ResourceMappingPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class ProvisionWizardBuilder extends AjaxWizardBuilder<ProvisionTO> implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final ResourceTO resourceTO;\n+\n+    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        @Override\n+        protected List<String> load() {\n+            final List<String> currentlyAdded = new ArrayList<>();\n+\n+            CollectionUtils.collect(resourceTO.getProvisions(), new Transformer<ProvisionTO, String>() {\n+\n+                @Override\n+                public String transform(final ProvisionTO provisionTO) {\n+                    return provisionTO.getAnyType();\n+                }\n+            }, currentlyAdded);\n+\n+            final List<String> res = new ArrayList<>();\n+\n+            CollectionUtils.filter(\n+                    CollectionUtils.collect(new AnyTypeRestClient().getAll(), new Transformer<AnyTypeTO, String>() {\n+\n+                        @Override\n+                        public String transform(final AnyTypeTO anyTypeTO) {\n+                            return anyTypeTO.getKey();\n+                        }\n+                    }, res), new Predicate<String>() {\n+\n+                        @Override\n+                        public boolean evaluate(String key) {\n+                            return !currentlyAdded.contains(key);\n+                        }\n+                    });\n+\n+            return res;\n+        }\n+    };\n+\n+    /**\n+     * The object type specification step.\n+     */\n+    private final class ObjectType extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        public ObjectType(final ProvisionTO item) {\n+            super(new ResourceModel(\"type.title\", StringUtils.EMPTY),\n+                    new ResourceModel(\"type.summary\", StringUtils.EMPTY), new Model<ProvisionTO>(item));\n+\n+            add(new AjaxDropDownChoicePanel<String>(\"type\", \"type\", new PropertyModel<String>(item, \"anyType\"), false).\n+                    setChoices(anyTypes).\n+                    setStyleSheet(\"form-control\").\n+                    setRequired(true));\n+\n+            add(new TextField<String>(\n+                    \"class\", new PropertyModel<String>(item, \"objectClass\")).setRequired(true));\n+        }\n+    }\n+\n+    /**\n+     * Mapping definition step.\n+     */\n+    private final class Mapping extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        public Mapping(final ProvisionTO item) {\n+            setTitleModel(new ResourceModel(\"mapping.title\", \"Mapping\"));\n+            setSummaryModel(new StringResourceModel(\"mapping.summary\", this, new Model<ProvisionTO>(item)));\n+\n+            add(new ResourceMappingPanel(\"mapping\", resourceTO, item));\n+        }\n+    }\n+\n+    /**\n+     * AccountLink specification step.\n+     */\n+    private final class ConnObjectLink extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        public ConnObjectLink(final ProvisionTO item) {\n+            super(new ResourceModel(\"link.title\", StringUtils.EMPTY),\n+                    new ResourceModel(\"link.summary\", StringUtils.EMPTY));\n+\n+            final WebMarkupContainer connObjectLinkContainer = new WebMarkupContainer(\"connObjectLinkContainer\");\n+            connObjectLinkContainer.setOutputMarkupId(true);\n+            add(connObjectLinkContainer);\n+\n+            boolean connObjectLinkEnabled = false;\n+            if (StringUtils.isNotBlank(item.getMapping().getConnObjectLink())) {\n+                connObjectLinkEnabled = true;\n+            }\n+\n+            final AjaxCheckBoxPanel connObjectLinkCheckbox = new AjaxCheckBoxPanel(\n+                    \"connObjectLinkCheckbox\",\n+                    new ResourceModel(\"connObjectLinkCheckbox\", \"connObjectLinkCheckbox\").getObject(),\n+                    new Model<>(connObjectLinkEnabled),\n+                    false);\n+            connObjectLinkCheckbox.setEnabled(true);\n+\n+            connObjectLinkContainer.add(connObjectLinkCheckbox);\n+\n+            final AjaxTextFieldPanel connObjectLink = new AjaxTextFieldPanel(\n+                    \"connObjectLink\",\n+                    new ResourceModel(\"connObjectLink\", \"connObjectLink\").getObject(),\n+                    new PropertyModel<String>(item.getMapping(), \"connObjectLink\"),\n+                    false);\n+            connObjectLink.setEnabled(connObjectLinkEnabled);\n+            connObjectLinkContainer.add(connObjectLink);\n+\n+            connObjectLinkCheckbox.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    if (connObjectLinkCheckbox.getModelObject()) {\n+                        connObjectLink.setEnabled(Boolean.TRUE);\n+                        connObjectLink.setModelObject(\"\");\n+                    } else {\n+                        connObjectLink.setEnabled(Boolean.FALSE);\n+                        connObjectLink.setModelObject(\"\");\n+                    }\n+\n+                    target.add(connObjectLink);\n+                }\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param resourceTO external resource to be updated.\n+     * @param pageRef Caller page reference.\n+     */\n+    public ProvisionWizardBuilder(final String id, final ResourceTO resourceTO, final PageReference pageRef) {\n+        super(id, new ProvisionTO(), pageRef);\n+        this.resourceTO = resourceTO;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final ProvisionTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new ObjectType(modelObject));\n+        wizardModel.add(new Mapping(modelObject));\n+        wizardModel.add(new ConnObjectLink(modelObject));\n+        return wizardModel;\n+    }\n+\n+    @Override\n+    protected void onCancelInternal() {\n+        // d nothing\n+    }\n+\n+    @Override\n+    protected void onApplyInternal() {\n+        // do nothing\n+    }\n+}"},{"sha":"12ec5d2615852832b8b61b01688bed27d83c8743","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceMappingPanel.html","status":"modified","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.html?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -89,26 +89,6 @@\n           </tr>\n         </tfoot>\n       </table>\n-\n-      <table id=\"connObjectLinkTable\"\n-             class=\"table\"\n-             style=\"font-size: 1em;margin-top:2px;\"\n-             wicket:id=\"connObjectLinkContainer\">\n-        <tbody>\n-          <tr>\n-            <th width=\"10%\" align=\"left\"><wicket:message key=\"enable\"/></th>\n-            <th align=\"left\"><wicket:message key=\"connObjectLink\"/></th>\n-          </tr>\n-          <tr>\n-            <td width=\"10%\">\n-              <span wicket:id=\"connObjectLinkCheckbox\">[connObjectLinkCheckbox]</span>\n-            </td>\n-            <td>\n-              <span wicket:id=\"connObjectLink\">[connObjectLink]</span>\n-            </td>\n-          </tr>\n-        </tbody>\n-      </table>\n     </div>\n   </wicket:panel>\n </html>"},{"sha":"0dc5137c86b7e96da417c5f2aef8827e7df820d2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ConnObjectLink.html","status":"renamed","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.html?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -16,8 +16,16 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" \n+      xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <wicket:panel>\n-    Specify here the account link .... work in progress\n+    <span wicket:id=\"connObjectLinkContainer\">\n+      <div>\n+        <span wicket:id=\"connObjectLinkCheckbox\">[connObjectLinkCheckbox]</span>\n+      </div>\n+      <div>\n+        <span wicket:id=\"connObjectLink\">[connObjectLink]</span>\n+      </div>\n+    </span>\n   </wicket:panel>\n </html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard$AccountLink.html"},{"sha":"e2df31e6517a5693197046da3a5873b647fb904f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ConnObjectLink.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+link.title=Specify the connector object link (if required)\n+link.summary=\n+"},{"sha":"e2df31e6517a5693197046da3a5873b647fb904f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ConnObjectLink_it.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink_it.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+link.title=Specify the connector object link (if required)\n+link.summary=\n+"},{"sha":"e2df31e6517a5693197046da3a5873b647fb904f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ConnObjectLink_pt_BR.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ConnObjectLink_pt_BR.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+link.title=Specify the connector object link (if required)\n+link.summary=\n+"},{"sha":"214771330f7c3713e9c1feb2c927f8f240a64e03","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$Mapping.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.html?ref=310b34afef103156a49e7a94b862f9f780522f08","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard$Mapping.html"},{"sha":"632a45bbbf0f87279f4bfd6cc5395014ad24163e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$Mapping.properties","status":"renamed","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -15,10 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-type.title=Specify the type of the provisioning object\n-type.summary=\n mapping.title=Specify the maping about the provisioning  object\n mapping.summary=\n-link.title=Specify the account link (if required)\n-link.summary=\n ","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard_it.properties"},{"sha":"632a45bbbf0f87279f4bfd6cc5395014ad24163e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$Mapping_it.properties","status":"renamed","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_it.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -15,10 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-type.title=Specify the type of the provisioning object\n-type.summary=\n mapping.title=Specify the maping about the provisioning  object\n mapping.summary=\n-link.title=Specify the account link (if required)\n-link.summary=\n ","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard_pt_BR.properties"},{"sha":"632a45bbbf0f87279f4bfd6cc5395014ad24163e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$Mapping_pt_BR.properties","status":"renamed","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24Mapping_pt_BR.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -15,10 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-type.title=Specify the type of the provisioning object\n-type.summary=\n mapping.title=Specify the maping about the provisioning  object\n mapping.summary=\n-link.title=Specify the account link (if required)\n-link.summary=\n ","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard.properties"},{"sha":"8d998de3dd98a348e7f0e3ea416b31e0cb2448b7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ObjectType.html","status":"renamed","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.html?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -16,11 +16,12 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\"\n+      xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n   <wicket:panel >\n     <div class=\"form-group\">\n       <label>Object Type</label>\n-      <input type=\"text\" placeholder=\"Object Type ...\" class=\"form-control\"  wicket:id=\"type\">\n+      <span wicket:id=\"type\"/>\n     </div>\n     <div class=\"form-group\">\n       <label>Object Class</label>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard$ObjectType.html"},{"sha":"b20d6ba828ed02c5015763cf2a1146b9a4371b71","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ObjectType.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+type.title=Specify the type of the provisioning object\n+type.summary=\n+\n+type=Type\n+type.Required=Type is required\n+class.Required=Object class is required\n+"},{"sha":"e29b2149cab06eb67c76088f225c7105fe0b8046","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ObjectType_it.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType_it.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+type.title=Specify the type of the provisioning object\n+type.summary=\n+\n+type=Type\n+type.Required=Type is required\n+class.Required=Object class is required"},{"sha":"e29b2149cab06eb67c76088f225c7105fe0b8046","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder$ObjectType_pt_BR.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/310b34afef103156a49e7a94b862f9f780522f08/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder%24ObjectType_pt_BR.properties?ref=310b34afef103156a49e7a94b862f9f780522f08","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+type.title=Specify the type of the provisioning object\n+type.summary=\n+\n+type=Type\n+type.Required=Type is required\n+class.Required=Object class is required"}]}