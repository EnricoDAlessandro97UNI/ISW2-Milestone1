{"sha":"89d5ad43cf26454092dbd04446a0d9a6f5192f4a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg5ZDVhZDQzY2YyNjQ1NDA5MmRiZDA0NDQ2YTBkOWE2ZjUxOTJmNGE=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-03-17T15:09:35Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-03-17T15:09:35Z"},"message":"[SYNCOPE-648] Add matching/unmatching events to notification and audit","tree":{"sha":"2d6b32979f43deb1f4ef9255ab9516018a811aca","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2d6b32979f43deb1f4ef9255ab9516018a811aca"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/89d5ad43cf26454092dbd04446a0d9a6f5192f4a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89d5ad43cf26454092dbd04446a0d9a6f5192f4a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/89d5ad43cf26454092dbd04446a0d9a6f5192f4a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"b63021933370edd834ba47ff095d7c86cb677404","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b63021933370edd834ba47ff095d7c86cb677404","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b63021933370edd834ba47ff095d7c86cb677404"}],"stats":{"total":168,"additions":150,"deletions":18},"files":[{"sha":"ff36dec999a95983bce53ca18c5e2a10fe293dbf","filename":"common/src/main/java/org/apache/syncope/common/types/MatchingRule.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FMatchingRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FMatchingRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FMatchingRule.java?ref=89d5ad43cf26454092dbd04446a0d9a6f5192f4a","patch":"@@ -49,6 +49,11 @@ public enum MatchingRule {\n     /**\n      * Just link resource without performing any (de-)provisioning operation.\n      */\n-    LINK\n+    LINK;\n+\n+    public static String toEventName(final MatchingRule rule) {\n+        return new StringBuilder(MatchingRule.class.getSimpleName()).\n+                append(\"_\").append(rule.name()).toString().toLowerCase();\n+    }\n \n }"},{"sha":"224cf632102428733428c9e32795afc9b2475f7b","filename":"common/src/main/java/org/apache/syncope/common/types/UnmatchingRule.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUnmatchingRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUnmatchingRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUnmatchingRule.java?ref=89d5ad43cf26454092dbd04446a0d9a6f5192f4a","patch":"@@ -42,6 +42,11 @@ public enum UnmatchingRule {\n      * Just unlink resource without performing any (de-)provisioning operation.\n      * In case of sync task UNLINK and IGNORE will coincide.\n      */\n-    UNLINK\n+    UNLINK;\n+\n+    public static String toEventName(final UnmatchingRule rule) {\n+        return new StringBuilder(UnmatchingRule.class.getSimpleName()).\n+                append(\"_\").append(rule.name()).toString().toLowerCase();\n+    }\n \n }"},{"sha":"f38d0b21a2ce8d6729af392e93e9cb2325cf15aa","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/LoggerController.java","status":"modified","additions":16,"deletions":2,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java?ref=89d5ad43cf26454092dbd04446a0d9a6f5192f4a","patch":"@@ -41,6 +41,8 @@\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.types.MatchingRule;\n+import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.SchedTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n@@ -217,7 +219,7 @@ public List<EventCategoryTO> listAuditEvents() {\n             final String packageSearchPath =\n                     ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX\n                     + ClassUtils.convertClassNameToResourcePath(\n-                    SystemPropertyUtils.resolvePlaceholders(this.getClass().getPackage().getName()))\n+                            SystemPropertyUtils.resolvePlaceholders(this.getClass().getPackage().getName()))\n                     + \"/\" + \"**/*.class\";\n \n             final Resource[] resources = resourcePatternResolver.getResources(packageSearchPath);\n@@ -239,7 +241,7 @@ public List<EventCategoryTO> listAuditEvents() {\n                     }\n                 }\n             }\n-            \n+\n             //SYNCOPE-608\n             final EventCategoryTO authenticationControllerEvents = new EventCategoryTO();\n             authenticationControllerEvents.setCategory(\"AuthenticationController\");\n@@ -270,6 +272,18 @@ public List<EventCategoryTO> listAuditEvents() {\n                         pushEventCategoryTO.getEvents().add(resourceOperation.name().toLowerCase());\n                     }\n \n+                    for (UnmatchingRule unmatching : UnmatchingRule.values()) {\n+                        String event = UnmatchingRule.toEventName(unmatching);\n+                        syncEventCategoryTO.getEvents().add(event);\n+                        pushEventCategoryTO.getEvents().add(event);\n+                    }\n+\n+                    for (MatchingRule matching : MatchingRule.values()) {\n+                        String event = MatchingRule.toEventName(matching);\n+                        syncEventCategoryTO.getEvents().add(event);\n+                        pushEventCategoryTO.getEvents().add(event);\n+                    }\n+\n                     events.add(propEventCategoryTO);\n                     events.add(syncEventCategoryTO);\n                     events.add(pushEventCategoryTO);"},{"sha":"e8954e97b3c83bf6a7e27f0548c9811e162ca85d","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectPushResultHandler.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java?ref=89d5ad43cf26454092dbd04446a0d9a6f5192f4a","patch":"@@ -132,7 +132,7 @@ protected final void doHandle(final long subjectId)\n         } else {\n             try {\n                 if (beforeObj == null) {\n-                    operation = profile.getSyncTask().getUnmatchingRule().name().toLowerCase();\n+                    operation = UnmatchingRule.toEventName(profile.getSyncTask().getUnmatchingRule());\n                     result.setOperation(getResourceOperation(profile.getSyncTask().getUnmatchingRule()));\n \n                     switch (profile.getSyncTask().getUnmatchingRule()) {\n@@ -171,13 +171,16 @@ protected final void doHandle(final long subjectId)\n                                 link(subject, true);\n                             }\n \n+                            break;\n+                        case IGNORE:\n+                            LOG.debug(\"Ignored subjectId: {}\", subjectId);\n                             break;\n                         default:\n                         // do nothing\n                     }\n \n                 } else {\n-                    operation = profile.getSyncTask().getMatchingRule().name().toLowerCase();\n+                    operation = MatchingRule.toEventName(profile.getSyncTask().getMatchingRule());           \n                     result.setOperation(getResourceOperation(profile.getSyncTask().getMatchingRule()));\n \n                     switch (profile.getSyncTask().getMatchingRule()) {\n@@ -239,6 +242,9 @@ protected final void doHandle(final long subjectId)\n                                 link(subject, true);\n                             }\n \n+                            break;\n+                        case IGNORE:\n+                            LOG.debug(\"Ignored subjectId: {}\", subjectId);\n                             break;\n                         default:\n                         // do nothing\n@@ -263,7 +269,7 @@ protected final void doHandle(final long subjectId)\n             } finally {\n                 notificationManager.createTasks(\n                         AuditElements.EventCategoryType.PUSH,\n-                        AttributableType.USER.name().toLowerCase(),\n+                        attrUtil.getType().name().toLowerCase(),\n                         profile.getSyncTask().getResource().getName(),\n                         operation,\n                         resultStatus,"},{"sha":"9a51ebe1d61da942ea0f7a595e247536c35a1db8","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectSyncResultHandler.java","status":"modified","additions":41,"deletions":6,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java?ref=89d5ad43cf26454092dbd04446a0d9a6f5192f4a","patch":"@@ -31,7 +31,9 @@\n import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n+import org.apache.syncope.common.types.MatchingRule;\n import org.apache.syncope.common.types.ResourceOperation;\n+import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n@@ -126,7 +128,7 @@ protected List<SyncResult> assign(final SyncDelta delta, final AttributableUtil\n                 _delta = action.beforeAssign(this.getProfile(), _delta, transformed);\n             }\n \n-            create(transformed, _delta, attrUtil, \"assign\", result);\n+            create(transformed, _delta, attrUtil, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n         }\n \n         return Collections.singletonList(result);\n@@ -161,7 +163,7 @@ protected List<SyncResult> create(final SyncDelta delta, final AttributableUtil\n                 _delta = action.beforeProvision(this.getProfile(), _delta, transformed);\n             }\n \n-            create(transformed, _delta, attrUtil, \"provision\", result);\n+            create(transformed, _delta, attrUtil, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n         }\n \n         return Collections.<SyncResult>singletonList(result);\n@@ -278,7 +280,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                         resultStatus = Result.FAILURE;\n                     }\n                 }\n-                audit(\"update\", resultStatus, before, output, delta);\n+                audit(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, delta);\n             }\n             updResults.add(result);\n         }\n@@ -361,7 +363,9 @@ protected List<SyncResult> deprovision(\n                         resultStatus = Result.FAILURE;\n                     }\n                 }\n-                audit(unlink ? \"unassign\" : \"deprovision\", resultStatus, before, output, delta);\n+                audit(unlink\n+                        ? MatchingRule.toEventName(MatchingRule.UNASSIGN)\n+                        : MatchingRule.toEventName(MatchingRule.DEPROVISION), resultStatus, before, output, delta);\n             }\n             updResults.add(result);\n         }\n@@ -444,7 +448,8 @@ protected List<SyncResult> link(\n                         resultStatus = Result.FAILURE;\n                     }\n                 }\n-                audit(unlink ? \"unlink\" : \"link\", resultStatus, before, output, delta);\n+                audit(unlink ? MatchingRule.toEventName(MatchingRule.UNLINK)\n+                        : MatchingRule.toEventName(MatchingRule.LINK), resultStatus, before, output, delta);\n             }\n             updResults.add(result);\n         }\n@@ -500,7 +505,7 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                         action.after(this.getProfile(), delta, before, result);\n                     }\n \n-                    audit(\"delete\", resultStatus, before, output, delta);\n+                    audit(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, delta);\n                 }\n \n                 delResults.add(result);\n@@ -517,6 +522,30 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n         return delResults;\n     }\n \n+    private List<SyncResult> ignore(SyncDelta delta, final AttributableUtil attrUtil, final boolean matching)\n+            throws JobExecutionException {\n+\n+        LOG.debug(\"Subject to ignore {}\", delta.getObject().getUid().getUidValue());\n+\n+        final List<SyncResult> ignoreResults = new ArrayList<SyncResult>();\n+        final SyncResult result = new SyncResult();\n+\n+        result.setId(null);\n+        result.setName(delta.getObject().getUid().getUidValue());\n+        result.setOperation(ResourceOperation.NONE);\n+        result.setSubjectType(attrUtil.getType());\n+        result.setStatus(SyncResult.Status.SUCCESS);\n+        ignoreResults.add(result);\n+\n+        if (!profile.isDryRun()) {\n+            audit(matching\n+                    ? MatchingRule.toEventName(MatchingRule.IGNORE)\n+                    : UnmatchingRule.toEventName(UnmatchingRule.IGNORE), Result.SUCCESS, null, null, delta);\n+        }\n+\n+        return ignoreResults;\n+    }\n+\n     /**\n      * Look into SyncDelta and take necessary profile.getActions() (create / update / delete) on user(s)/role(s).\n      *\n@@ -566,6 +595,9 @@ protected final void doHandle(final SyncDelta delta, final Collection<SyncResult\n                         case PROVISION:\n                             profile.getResults().addAll(create(delta, attrUtil));\n                             break;\n+                        case IGNORE:\n+                            profile.getResults().addAll(ignore(delta, attrUtil, false));\n+                            break;\n                         default:\n                         // do nothing\n                     }\n@@ -586,6 +618,9 @@ protected final void doHandle(final SyncDelta delta, final Collection<SyncResult\n                         case UNLINK:\n                             profile.getResults().addAll(link(delta, subjectIds, attrUtil, true));\n                             break;\n+                        case IGNORE:\n+                            profile.getResults().addAll(ignore(delta, attrUtil, true));\n+                            break;\n                         default:\n                         // do nothing\n                     }"},{"sha":"0124082a5bce42b8398d72c0b8cf15784ce2952d","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java","status":"modified","additions":28,"deletions":5,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java?ref=89d5ad43cf26454092dbd04446a0d9a6f5192f4a","patch":"@@ -116,12 +116,14 @@ protected String createReport(final List<SyncResult> syncResults, final TraceLev\n         List<SyncResult> uFailUpdate = new ArrayList<SyncResult>();\n         List<SyncResult> uSuccDelete = new ArrayList<SyncResult>();\n         List<SyncResult> uFailDelete = new ArrayList<SyncResult>();\n+        List<SyncResult> uSuccNone = new ArrayList<SyncResult>();\n         List<SyncResult> rSuccCreate = new ArrayList<SyncResult>();\n         List<SyncResult> rFailCreate = new ArrayList<SyncResult>();\n         List<SyncResult> rSuccUpdate = new ArrayList<SyncResult>();\n         List<SyncResult> rFailUpdate = new ArrayList<SyncResult>();\n         List<SyncResult> rSuccDelete = new ArrayList<SyncResult>();\n         List<SyncResult> rFailDelete = new ArrayList<SyncResult>();\n+        List<SyncResult> rSuccNone = new ArrayList<SyncResult>();\n \n         for (SyncResult syncResult : syncResults) {\n             switch (syncResult.getStatus()) {\n@@ -169,6 +171,20 @@ protected String createReport(final List<SyncResult> syncResults, final TraceLev\n                             }\n                             break;\n \n+                        case NONE:\n+                            switch (syncResult.getSubjectType()) {\n+                                case USER:\n+                                    uSuccNone.add(syncResult);\n+                                    break;\n+\n+                                case ROLE:\n+                                    rSuccNone.add(syncResult);\n+                                    break;\n+\n+                                default:\n+                            }\n+                            break;\n+\n                         default:\n                     }\n                     break;\n@@ -232,13 +248,16 @@ protected String createReport(final List<SyncResult> syncResults, final TraceLev\n                 append(\"[updated/failures]: \").append(uSuccUpdate.size()).append('/').append(uFailUpdate.size()).\n                 append(' ').\n                 append(\"[deleted/failures]: \").append(uSuccDelete.size()).append('/').append(uFailDelete.size()).\n-                append('\\n');\n+                append(' ').\n+                append(\"[ignored]: \").append(uSuccNone.size()).append('\\n');\n         report.append(\"Roles \").\n                 append(\"[created/failures]: \").append(rSuccCreate.size()).append('/').append(rFailCreate.size()).\n                 append(' ').\n                 append(\"[updated/failures]: \").append(rSuccUpdate.size()).append('/').append(rFailUpdate.size()).\n                 append(' ').\n-                append(\"[deleted/failures]: \").append(rSuccDelete.size()).append('/').append(rFailDelete.size());\n+                append(\"[deleted/failures]: \").append(rSuccDelete.size()).append('/').append(rFailDelete.size()).\n+                append(' ').\n+                append(\"[ignored]: \").append(rSuccNone.size());\n \n         // Failures\n         if (syncTraceLevel == TraceLevel.FAILURES || syncTraceLevel == TraceLevel.ALL) {\n@@ -276,13 +295,17 @@ protected String createReport(final List<SyncResult> syncResults, final TraceLev\n                     .append(\"\\nUsers updated:\\n\")\n                     .append(SyncResult.produceReport(uSuccUpdate, syncTraceLevel))\n                     .append(\"\\nUsers deleted:\\n\")\n-                    .append(SyncResult.produceReport(uSuccDelete, syncTraceLevel));\n+                    .append(SyncResult.produceReport(uSuccDelete, syncTraceLevel))\n+                    .append(\"\\nUsers ignored:\\n\")\n+                    .append(SyncResult.produceReport(uSuccNone, syncTraceLevel));\n             report.append(\"\\n\\nRoles created:\\n\")\n                     .append(SyncResult.produceReport(rSuccCreate, syncTraceLevel))\n                     .append(\"\\nRoles updated:\\n\")\n                     .append(SyncResult.produceReport(rSuccUpdate, syncTraceLevel))\n                     .append(\"\\nRoles deleted:\\n\")\n-                    .append(SyncResult.produceReport(rSuccDelete, syncTraceLevel));\n+                    .append(SyncResult.produceReport(rSuccDelete, syncTraceLevel))\n+                    .append(\"\\nRoles ignored:\\n\")\n+                    .append(SyncResult.produceReport(rSuccNone, syncTraceLevel));\n         }\n \n         return report.toString();\n@@ -316,7 +339,7 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n             } catch (Exception e) {\n                 final String msg = String.\n                         format(\"Connector instance bean for resource %s and connInstance %s not found\",\n-                        syncTask.getResource(), syncTask.getResource().getConnector());\n+                                syncTask.getResource(), syncTask.getResource().getConnector());\n \n                 throw new JobExecutionException(msg, e);\n             }"},{"sha":"0cc137a873c16a8e9e50e8ea0533063e5259f31e","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89d5ad43cf26454092dbd04446a0d9a6f5192f4a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=89d5ad43cf26454092dbd04446a0d9a6f5192f4a","patch":"@@ -1385,4 +1385,48 @@ public void issueSYNCOPE598() {\n             }\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE648() {\n+        //1. Create Push Task\n+        final PushTaskTO task = new PushTaskTO();\n+        task.setName(\"Test create Push\");\n+        task.setResource(RESOURCE_NAME_LDAP);\n+        task.setUserFilter(\n+                SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"_NO_ONE_\").query());\n+        task.setRoleFilter(\n+                SyncopeClient.getRoleSearchConditionBuilder().is(\"name\").equalTo(\"citizen\").query());\n+        task.setMatchingRule(MatchingRule.IGNORE);\n+        task.setUnmatchingRule(UnmatchingRule.IGNORE);\n+\n+        final Response response = taskService.create(task);\n+        final PushTaskTO actual = getObject(response.getLocation(), TaskService.class, PushTaskTO.class);\n+        assertNotNull(actual);\n+\n+        // 2. Create notification\n+        NotificationTO notification = new NotificationTO();\n+        notification.setTraceLevel(TraceLevel.FAILURES);\n+        notification.getEvents().add(\"[PushTask]:[role]:[resource-ldap]:[matchingrule_ignore]:[SUCCESS]\");\n+        notification.getEvents().add(\"[PushTask]:[role]:[resource-ldap]:[unmatchingrule_ignore]:[SUCCESS]\");\n+\n+        notification.getStaticRecipients().add(\"issueyncope648@syncope.apache.org\");\n+        notification.setSelfAsRecipient(false);\n+        notification.setRecipientAttrName(\"email\");\n+        notification.setRecipientAttrType(IntMappingType.UserSchema);\n+\n+        notification.setSender(\"syncope648@syncope.apache.org\");\n+        String subject = \"Test notification\";\n+        notification.setSubject(subject);\n+        notification.setTemplate(\"optin\");\n+        notification.setActive(true);\n+\n+        Response responseNotification = notificationService.create(notification);\n+        notification = getObject(responseNotification.getLocation(), NotificationService.class, NotificationTO.class);\n+        assertNotNull(notification);\n+\n+        execSyncTask(actual.getId(), 50, false);\n+        \n+        NotificationTaskTO taskTO = findNotificationTaskBySender(\"syncope648@syncope.apache.org\");\n+        assertNotNull(taskTO);\n+    }\n }"}]}