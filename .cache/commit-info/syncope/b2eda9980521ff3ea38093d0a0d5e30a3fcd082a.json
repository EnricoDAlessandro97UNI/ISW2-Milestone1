{"sha":"b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIyZWRhOTk4MDUyMWZmM2VhMzgwOTNkMGEwZDVlMzBhM2ZjZDA4MmE=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-08-28T15:26:04Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-08-28T15:26:04Z"},"message":"Merge branch 'master' into SYNCOPE-156","tree":{"sha":"4db31859defd59297554568254db1a80a1e2c682","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4db31859defd59297554568254db1a80a1e2c682"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"d9437d37a38d0f185289b1c61d2d79c5ce8edaaa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d9437d37a38d0f185289b1c61d2d79c5ce8edaaa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d9437d37a38d0f185289b1c61d2d79c5ce8edaaa"},{"sha":"9658f8c384543889779cd2c398c8fcc115b43778","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9658f8c384543889779cd2c398c8fcc115b43778","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9658f8c384543889779cd2c398c8fcc115b43778"}],"stats":{"total":864,"additions":418,"deletions":446},"files":[{"sha":"bb266284420f14e9379efee2e6b8a8afc27b1374","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/package-info.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+@XmlSchema(namespace = SyncopeConstants.NAMESPACE)\n+package org.apache.syncope.common.lib.policy;\n+\n+import javax.xml.bind.annotation.XmlSchema;\n+import org.apache.syncope.common.lib.SyncopeConstants;"},{"sha":"bbad47958671978e14d8f326eecc7bccdc79c66d","filename":"common/rest-api/pom.xml","status":"modified","additions":24,"deletions":17,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fpom.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -47,18 +47,6 @@ under the License.\n       <groupId>javax.ws.rs</groupId>\n       <artifactId>javax.ws.rs-api</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-frontend-jaxrs</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-rs-extension-search</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-rs-service-description</artifactId>\n-    </dependency>\n     \n     <dependency>\n       <groupId>org.apache.syncope.common</groupId>\n@@ -69,17 +57,36 @@ under the License.\n   \n   <build>\n     <plugins>\n-      <!-- Generating javadoc JAR artifact for usage with CXF's WADL generator (for core) -->\n       <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-javadoc-plugin</artifactId>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-java2wadl-plugin</artifactId>\n         <inherited>true</inherited>\n         <executions>\n           <execution>\n-            <id>attach-javadocs</id>\n+            <id>parsejavadoc</id>\n+            <phase>process-classes</phase>\n+            <goals>\n+              <goal>parsejavadoc</goal>\n+            </goals>\n+          </execution>\n+          <execution>\n+            <id>process-classes</id>\n+            <phase>process-classes</phase>\n             <goals>\n-              <goal>jar</goal>\n+              <goal>java2wadl</goal>\n             </goals>\n+            <configuration>\n+              <applicationTitle>Apache Syncope ${project.version}</applicationTitle>\n+              <namespacePrefix>syncope</namespacePrefix>\n+              <linkAnyMediaTypeToXmlSchema>true</linkAnyMediaTypeToXmlSchema>\n+              <useJaxbContextForQnames>true</useJaxbContextForQnames>\n+              <addResourceAndMethodIds>true</addResourceAndMethodIds>\n+              <usePathParamsToCompareOperations>false</usePathParamsToCompareOperations>\n+              <classResourceNames />\n+              <basePackages>org.apache.syncope.common.rest.api.service</basePackages>\n+              <docProvider>org.apache.cxf.maven_plugin.javatowadl.ResourceMapJavaDocProvider</docProvider>\n+              <attachWadl>true</attachWadl>\n+            </configuration>\n           </execution>\n         </executions>\n       </plugin>"},{"sha":"71aa4b6fd6c091dabfc93e64a42698748e9b4742","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":5,"deletions":33,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.AnyMod;\n import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -84,14 +81,8 @@\n      *\n      * @param anyTO any object to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created any object as well as the any\n-     * object itself enriched with propagation status information - {@link AnyTO} as <tt>Entity</tt>\n+     * object itself enriched with propagation status information - <tt>AnyTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created any object as well as the \"\n-                + \"any object itself enriched with propagation status information - \"\n-                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -102,13 +93,8 @@\n      *\n      * @param anyMod modification to be applied to any object matching the provided key\n      * @return <tt>Response</tt> object featuring the updated any object enriched with propagation status information\n-     * - {@link AnyTO} as <tt>Entity</tt>\n+     * - <tt>AnyTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated any object enriched with propagation status information - \"\n-                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -120,13 +106,8 @@\n      *\n      * @param key key of any object to be deleted\n      * @return <tt>Response</tt> object featuring the deleted any object enriched with propagation status information\n-     * - {@link AnyTO} as <tt>Entity</tt>\n+     * - <tt>AnyTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the deleted any object enriched with propagation status information - \"\n-                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n-    })\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -139,13 +120,8 @@\n      * @param key any object id.\n      * @param type resource association action type\n      * @param resourceNames external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring\n-     * {@link BulkActionResult} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}/deassociate/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -161,12 +137,8 @@ Response deassociate(\n      * @param key any object id.\n      * @param type resource association action type\n      * @param associationMod external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}/associate/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"454652e05d3cd90c4adee92c34eb9cd2f6e4d31a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface AnyTypeClassService extends JAXRSService {\n      * @param anyTypeClassTO anyTypeClass to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created anyTypeClass\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created anyTypeClass\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull AnyTypeClassTO anyTypeClassTO);"},{"sha":"8f01fc1ae44008686bf1e64319943b31d0d030c1","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface AnyTypeService extends JAXRSService {\n      * @param anyTypeTO anyType to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created anyType\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created anyType\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull AnyTypeTO anyTypeTO);"},{"sha":"b5237580945770249927bdd97038e41a9831deaf","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -32,9 +32,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n@@ -148,10 +145,6 @@ ConnInstanceTO readByResource(\n      * @param connInstanceTO connector instance to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created connector instance\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created connector instance\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ConnInstanceTO connInstanceTO);"},{"sha":"a37c6430618ce5e2167e272df2644ebbc92cc201","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DomainService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.DomainTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface DomainService extends JAXRSService {\n      * @param domainTO domain to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created domain\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created domain\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull DomainTO domainTO);"},{"sha":"569c0b65303e19fc796da42f46685a3a15c67d4d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -23,9 +23,6 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.GroupMod;\n import org.apache.syncope.common.lib.to.GroupTO;\n \n@@ -36,16 +33,11 @@\n public interface GroupService extends AnyService<GroupTO, GroupMod> {\n \n     /**\n-     * This method is similar to {@link #read(Long)}, but uses different authentication handling to ensure that a user\n+     * This method is similar to <tt>read()</tt>, but uses different authentication handling to ensure that a user\n      * can read his own groups.\n      *\n      * @return own groups\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"This method is similar to <tt>read()</tt>, but uses different authentication handling to \"\n-                + \"ensure that a user can read his own groups.\")\n-    })\n     @GET\n     @Path(\"own\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"c380d310a128a2d4cbb992c0fbbe47ff1833ef51","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.NotificationTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface NotificationService extends JAXRSService {\n      * @param notificationTO Creates a new notification.\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created notification\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created notification\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull NotificationTO notificationTO);"},{"sha":"e35ef7c018c8ddb7143970a9b9f83d579dc95d02","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -31,9 +31,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n \n@@ -73,9 +70,6 @@ public interface PolicyService extends JAXRSService {\n      * @param <T> response type (extending PolicyTO)\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created policy\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created policy\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractPolicyTO> Response create(@NotNull T policyTO);"},{"sha":"81111e08899fd4c7632a46092d5b691103ce92bb","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.RealmTO;\n \n /**\n@@ -68,10 +65,6 @@ public interface RealmService extends JAXRSService {\n      * @param realmTO new realm.\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created realm\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created realm\")\n-    })\n     @POST\n     @Path(\"{parentPath:.*}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"30a7a15e453cba481032b75aa86b01fe8245a9e9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface RelationshipTypeService extends JAXRSService {\n      * @param relationshipTypeTO relationshipType to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created relationshipType\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created relationshipType\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull RelationshipTypeTO relationshipTypeTO);"},{"sha":"6d01b2ae6b98ad2311cac3338f9c6c1616083860","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -33,9 +33,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n@@ -88,9 +85,6 @@ public interface ReportService extends JAXRSService {\n      * @param reportTO report to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created report\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created report\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ReportTO reportTO);"},{"sha":"f15bcd57b72d291e3d599a27c97fda4420a69acf","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":1,"deletions":12,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n@@ -87,10 +84,6 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"key\") String key,\n      * @param resourceTO Resource to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created resource\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created resource\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ResourceTO resourceTO);\n@@ -134,12 +127,8 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"key\") String key,\n      * @param anyTypeKey any object kind\n      * @param type resource de-association action type\n      * @param keys any object keys against which the bulk action will be performed\n-     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}/bulkDeassociation/{anyTypeKey}/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"36f18e7654cca8483226614ae6d7f413dda461d4","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.RoleTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface RoleService extends JAXRSService {\n      * @param roleTO role to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created role\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created role\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull RoleTO roleTO);"},{"sha":"e59d7d06f188be4cbf864f41c0505861e5215658","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -23,17 +23,13 @@\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n-import javax.ws.rs.MatrixParam;\n import javax.ws.rs.POST;\n import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n \n@@ -66,7 +62,7 @@ <T extends AbstractSchemaTO> T read(\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    <T extends AbstractSchemaTO> List<T> list(@NotNull @MatrixParam(\"type\") SchemaType type);\n+    <T extends AbstractSchemaTO> List<T> list(@NotNull @PathParam(\"type\") SchemaType type);\n \n     /**\n      * Creates a new schema.\n@@ -76,9 +72,6 @@ <T extends AbstractSchemaTO> T read(\n      * @param schemaTO schema to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created schema\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created schema\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractSchemaTO> Response create(@NotNull @PathParam(\"type\") SchemaType type, @NotNull T schemaTO);"},{"sha":"d0a63f7fabad52547c753cec36433588c63f6d47","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface SecurityQuestionService extends JAXRSService {\n      * @param securityQuestionTO security question to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created security question\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created security question\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull SecurityQuestionTO securityQuestionTO);"},{"sha":"bb5a1a8b3557d6326ad1c7108f82e7cb2f86748c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SyncopeService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -27,6 +27,11 @@\n @Path(\"\")\n public interface SyncopeService extends JAXRSService {\n \n+    /**\n+     * Provides information summary about this Apache Syncope deployment's configuration.\n+     *\n+     * @return information summary about this Apache Syncope deployment's configuration\n+     */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     SyncopeTO info();"},{"sha":"2665c51cb92a75402e85260ffa826c25b05e7438","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -34,9 +34,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -99,9 +96,6 @@ <T extends AbstractTaskTO> PagedResult<T> list(\n      * @param <T> type of taskTO\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created task\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created task\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends SchedTaskTO> Response create(@NotNull T taskTO);"},{"sha":"2203a11b5ceab4c3091046ba82295a96a85f943d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":3,"deletions":19,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -29,9 +29,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.UserTO;\n \n@@ -57,13 +54,8 @@ public interface UserSelfService extends JAXRSService {\n      * @param userTO user to be created\n      * @param storePassword whether password shall be stored internally\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of self-registered user as well as the user\n-     * itself - {@link UserTO} as <tt>Entity</tt>\n+     * itself - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of self-registered user as well \"\n-                + \"as the user itself - {@link UserTO} as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -74,12 +66,8 @@ Response create(@NotNull UserTO userTO,\n      * Self-updates user.\n      *\n      * @param userMod modification to be applied to user matching the provided key\n-     * @return <tt>Response</tt> object featuring the updated user - {@link UserTO} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -89,12 +77,8 @@ Response create(@NotNull UserTO userTO,\n     /**\n      * Self-deletes user.\n      *\n-     * @return <tt>Response</tt> object featuring the deleted user - {@link UserTO} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring the deleted user - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the deleted user - <tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n     @DELETE\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response delete();"},{"sha":"fd0faac084a29dc12f475d973d89598b088df615","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -29,9 +29,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.StatusMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -48,10 +45,6 @@ public interface UserService extends AnyService<UserTO, UserMod> {\n      * @param key user key\n      * @return <tt>Response</tt> object featuring HTTP header with username matching the given key\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring HTTP header with username matching the given key\")\n-    })\n     @OPTIONS\n     @Path(\"{key}/username\")\n     Response getUsername(@NotNull @PathParam(\"key\") Long key);\n@@ -62,10 +55,6 @@ public interface UserService extends AnyService<UserTO, UserMod> {\n      * @param username username\n      * @return <tt>Response</tt> object featuring HTTP header with key matching the given username\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring HTTP header with key matching the given username\")\n-    })\n     @OPTIONS\n     @Path(\"{username}/key\")\n     Response getUserKey(@NotNull @PathParam(\"username\") String username);\n@@ -76,13 +65,8 @@ public interface UserService extends AnyService<UserTO, UserMod> {\n      * @param userTO user to be created\n      * @param storePassword whether password shall be stored internally\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created user as well as the user itself\n-     * enriched with propagation status information - {@link UserTO} as <tt>Entity</tt>\n+     * enriched with propagation status information - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created user as well as the \"\n-                + \"user itself enriched with propagation status information - <tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -95,13 +79,8 @@ Response create(\n      *\n      * @param statusMod status update details\n      * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information\n-     * - {@link UserTO} as <tt>Entity</tt>\n+     * - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated user enriched with propagation status information - \"\n-                + \"<tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}/status\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"92216fd74a82b531d828e1f620a3eb81cb0c2b71","filename":"core/persistence-jpa/src/main/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -87,7 +87,7 @@ under the License.\n \n   <AnyType name=\"USER\" kind=\"USER\"/>\n   <AnyTypeClass name=\"BaseUser\"/>\n-  <AnyType_AnyTypeClass anyType_name=\"USER\" anyTypeClass_name=\"baseUser\"/>\n+  <AnyType_AnyTypeClass anyType_name=\"USER\" anyTypeClass_name=\"BaseUser\"/>\n \n   <AnyType name=\"GROUP\" kind=\"GROUP\"/>\n   "},{"sha":"89c0de4626b95a604a87b8eb7fb7a403bf6861cc","filename":"core/rest-cxf/pom.xml","status":"modified","additions":128,"deletions":7,"changes":135,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fpom.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -104,12 +104,6 @@ under the License.\n       <artifactId>cxf-rt-rs-client</artifactId>\n     </dependency>  \n     \n-    <dependency>\n-      <groupId>org.apache.syncope.common</groupId>\n-      <artifactId>syncope-common-rest-api</artifactId>\n-      <version>${project.version}</version>\n-      <classifier>javadoc</classifier>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n       <artifactId>syncope-core-logic</artifactId>\n@@ -120,7 +114,7 @@ under the License.\n       <artifactId>syncope-common-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-\n+            \n     <dependency>\n       <groupId>org.webjars</groupId>\n       <artifactId>jquery</artifactId>\n@@ -129,6 +123,10 @@ under the License.\n       <groupId>org.webjars</groupId>\n       <artifactId>jquery-ui</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery-ui-themes</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.webjars</groupId>\n       <artifactId>highlightjs</artifactId>\n@@ -137,6 +135,129 @@ under the License.\n \n   <build>\n     <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-dependency-plugin</artifactId>\n+        <inherited>false</inherited>\n+        <configuration>\n+          <outputDirectory>${project.build.directory}</outputDirectory>\n+          <artifactItems>\n+            <artifactItem>\n+              <groupId>org.apache.syncope.common</groupId>\n+              <artifactId>syncope-common-rest-api</artifactId>\n+              <version>${project.version}</version>\n+              <type>wadl</type>\n+            </artifactItem>\n+          </artifactItems>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>copy</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+              \n+      <plugin>\n+        <groupId>org.codehaus.mojo</groupId>\n+        <artifactId>xml-maven-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <phase>prepare-package</phase>\n+            <goals>\n+              <goal>transform</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+        <configuration>\n+          <transformationSets>\n+            <transformationSet>\n+              <dir>${project.build.directory}</dir>\n+              <includes>\n+                <include>syncope-common-rest-api-${project.version}.wadl</include>\n+              </includes>\n+              <outputDir>${project.build.directory}/classes/META-INF/resources/doc</outputDir>\n+              <stylesheet>${project.build.directory}/classes/wadl2html/identity.xsl</stylesheet>\n+              <outputProperties>\n+                <outputProperty>\n+                  <name>indent</name>\n+                  <value>yes</value>\n+                </outputProperty>\n+              </outputProperties>\n+              <fileMappers>\n+                <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                  <pattern>^.*$</pattern>\n+                  <replacement>syncope.wadl</replacement>\n+                </fileMapper>\n+              </fileMappers>\n+            </transformationSet>\n+            <transformationSet>\n+              <dir>${project.build.directory}</dir>\n+              <includes>\n+                <include>syncope-common-rest-api-${project.version}.wadl</include>\n+              </includes>\n+              <outputDir>${project.build.directory}/classes/META-INF/resources/doc</outputDir>\n+              <stylesheet>${project.build.directory}/classes/wadl2html/index.xsl</stylesheet>\n+              <parameters>\n+                <parameter>\n+                  <name>contextPath</name>\n+                  <value>..</value>\n+                </parameter>\n+              </parameters>\n+              <outputProperties>\n+                <outputProperty>\n+                  <name>indent</name>\n+                  <value>yes</value>\n+                </outputProperty>\n+              </outputProperties>\n+              <fileMappers>\n+                <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                  <pattern>^.*$</pattern>\n+                  <replacement>index.html</replacement>\n+                </fileMapper>\n+              </fileMappers>\n+            </transformationSet>\n+            <transformationSet>\n+              <dir>${project.build.directory}</dir>\n+              <includes>\n+                <include>syncope-common-rest-api-${project.version}.wadl</include>\n+              </includes>\n+              <outputDir>${project.build.directory}/classes/META-INF/resources/doc</outputDir>\n+              <stylesheet>${project.build.directory}/classes/wadl2html/schema.xsl</stylesheet>\n+              <parameters>\n+                <parameter>\n+                  <name>contextPath</name>\n+                  <value>..</value>\n+                </parameter>\n+                <parameter>\n+                  <name>schema-position</name>\n+                  <value>1</value>\n+                </parameter>\n+                <parameter>\n+                  <name>schema-prefix</name>\n+                  <value>syncope1</value>\n+                </parameter>\n+              </parameters>\n+              <outputProperties>\n+                <outputProperty>\n+                  <name>indent</name>\n+                  <value>yes</value>\n+                </outputProperty>\n+              </outputProperties>\n+              <fileMappers>\n+                <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                  <pattern>^.*$</pattern>\n+                  <replacement>schema_1_syncope1.html</replacement>\n+                </fileMapper>\n+              </fileMappers>\n+            </transformationSet>\n+          </transformationSets>\n+        </configuration>\n+      </plugin>\n+            \n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>"},{"sha":"661f3b0bd58904aaf610347d9f41f68b12843a25","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/UnwrappedObjectMapper.java","status":"renamed","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FUnwrappedObjectMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FUnwrappedObjectMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FUnwrappedObjectMapper.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.misc.serialization;\n+package org.apache.syncope.core.rest.cxf;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.JsonProcessingException;\n@@ -36,8 +36,8 @@ public class UnwrappedObjectMapper extends ObjectMapper {\n     private static final long serialVersionUID = -317191546835195103L;\n \n     /**\n-     * Unwraps the given value if it implements the Map interface and contains\n-     * only a single entry. Otherwise the value is returned unmodified.\n+     * Unwraps the given value if it implements the Map interface and contains only a single entry, otherwise the\n+     * value is returned unmodified.\n      *\n      * @param value the potential Map to unwrap\n      * @return the unwrapped map or the original value\n@@ -54,31 +54,23 @@ private Object unwrapMap(final Object value) {\n     }\n \n     @Override\n-    public void writeValue(final JsonGenerator jgen, final Object value)\n-            throws IOException {\n-\n+    public void writeValue(final JsonGenerator jgen, final Object value) throws IOException {\n         super.writeValue(jgen, unwrapMap(value));\n     }\n \n     @Override\n-    public void writeValue(final File resultFile, final Object value)\n-            throws IOException {\n-\n+    public void writeValue(final File resultFile, final Object value) throws IOException {\n         super.writeValue(resultFile, unwrapMap(value));\n     }\n \n     @Override\n-    public void writeValue(final OutputStream out, final Object value)\n-            throws IOException {\n-\n+    public void writeValue(final OutputStream out, final Object value) throws IOException {\n         super.writeValue(out, unwrapMap(value));\n     }\n \n     @Override\n-    public void writeValue(final Writer w, final Object value)\n-            throws IOException {\n-\n-        super.writeValue(w, unwrapMap(value));\n+    public void writeValue(final Writer writer, final Object value) throws IOException {\n+        super.writeValue(writer, unwrapMap(value));\n     }\n \n     @Override","previous_filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/UnwrappedObjectMapper.java"},{"sha":"e5d5c749d1b70f139665b84722ebf09401d428f5","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WADLServlet.java","status":"removed","additions":0,"deletions":96,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9437d37a38d0f185289b1c61d2d79c5ce8edaaa/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9437d37a38d0f185289b1c61d2d79c5ce8edaaa/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java?ref=d9437d37a38d0f185289b1c61d2d79c5ce8edaaa","patch":"@@ -1,96 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.rest.cxf;\n-\n-import java.io.IOException;\n-import java.net.URL;\n-import java.rmi.ServerException;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import org.apache.cocoon.pipeline.CachingPipeline;\n-import org.apache.cocoon.pipeline.Pipeline;\n-import org.apache.cocoon.sax.SAXPipelineComponent;\n-import org.apache.cocoon.sax.component.XMLGenerator;\n-import org.apache.cocoon.sax.component.XMLSerializer;\n-import org.apache.cocoon.sax.component.XSLTTransformer;\n-\n-public class WADLServlet extends HttpServlet {\n-\n-    private static final long serialVersionUID = -6737005675471095560L;\n-\n-    private static final Pattern SCHEMA_PATTERN = Pattern.compile(\"/schema_(.*)_(.*)\\\\.html\");\n-\n-    /**\n-     * Handles the HTTP <code>GET</code> method.\n-     *\n-     * @param request servlet request\n-     * @param response servlet response\n-     * @throws ServletException if a servlet-specific error occurs\n-     * @throws IOException if an I/O error occurs\n-     */\n-    @Override\n-    protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n-            throws ServletException, IOException {\n-\n-        String requestURI = request.getRequestURI().substring(\n-                request.getRequestURI().indexOf(request.getServletPath()) + request.getServletPath().length());\n-        Matcher schemaMatcher = SCHEMA_PATTERN.matcher(requestURI);\n-\n-        Pipeline<SAXPipelineComponent> pipeline = new CachingPipeline<SAXPipelineComponent>();\n-        final String wadlURL = request.getRequestURL().\n-                substring(0, request.getRequestURL().indexOf(\"/doc\")) + \"/?_wadl\";\n-        pipeline.addComponent(new XMLGenerator(new URL(wadlURL)));\n-        if (\"/\".equals(requestURI)) {\n-            XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/index.xsl\"));\n-\n-            Map<String, Object> parameters = new HashMap<>();\n-            parameters.put(\"contextPath\", request.getContextPath());\n-            xslt.setParameters(parameters);\n-\n-            pipeline.addComponent(xslt);\n-        } else if (schemaMatcher.matches()) {\n-            XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/schema.xsl\"));\n-\n-            Map<String, Object> parameters = new HashMap<>();\n-            parameters.put(\"contextPath\", request.getContextPath());\n-            parameters.put(\"schema-position\", schemaMatcher.group(1));\n-            parameters.put(\"schema-prefix\", schemaMatcher.group(2));\n-            xslt.setParameters(parameters);\n-\n-            pipeline.addComponent(xslt);\n-        } else {\n-            throw new ServerException(\"URL not supported: \" + request.getRequestURI());\n-        }\n-\n-        pipeline.addComponent(XMLSerializer.createHTML4Serializer());\n-        pipeline.setup(response.getOutputStream());\n-        try {\n-            pipeline.execute();\n-        } catch (Exception e) {\n-            throw new ServletException(e);\n-        }\n-    }\n-\n-}"},{"sha":"e9ded9d5885b48efa014ea9142ff4e16f766e555","filename":"core/rest-cxf/src/main/resources/META-INF/web-fragment.xml","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -46,15 +46,6 @@ under the License.\n     <servlet-name>CXFServlet</servlet-name>\n     <url-pattern>/rest/*</url-pattern>\n   </servlet-mapping>\n-  <servlet>\n-    <servlet-name>WADLServlet</servlet-name>\n-    <servlet-class>org.apache.syncope.core.rest.cxf.WADLServlet</servlet-class>\n-    <load-on-startup>2</load-on-startup> \n-  </servlet>\n-  <servlet-mapping>\n-    <servlet-name>WADLServlet</servlet-name>\n-    <url-pattern>/rest/doc/*</url-pattern>\n-  </servlet-mapping>\n \n   <filter>\n     <filter-name>encodingFilter</filter-name>"},{"sha":"b5b75dbd713e2c23e7b0aea5ad929ead8cea225c","filename":"core/rest-cxf/src/main/resources/restCXFContext.xml","status":"modified","additions":5,"deletions":15,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -53,15 +53,15 @@ under the License.\n       <map>\n         <entry>\n           <key>\n-            <value>org.apache.syncope.common.lib.to.AbstractPolicyTO</value>\n+            <value>org.apache.syncope.common.lib.policy.AbstractPolicyTO</value>\n           </key>\n           <value>policies</value>\n         </entry>\n       </map>\n     </property>\n   </bean>\n \n-  <bean id=\"jacksonObjectMapper\" class=\"org.apache.syncope.core.misc.serialization.UnwrappedObjectMapper\"/>\n+  <bean id=\"jacksonObjectMapper\" class=\"org.apache.syncope.core.rest.cxf.UnwrappedObjectMapper\"/>\n   <bean id=\"jsonProvider\" class=\"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider\">\n     <property name=\"mapper\" ref=\"jacksonObjectMapper\"/>\n   </bean>\n@@ -78,25 +78,16 @@ under the License.\n   \n   <bean id=\"searchContextProvider\" class=\"org.apache.cxf.jaxrs.ext.search.SearchContextProvider\"/>\n   \n-  <bean id=\"wadlGenerator\" class=\"org.apache.cxf.jaxrs.model.wadl.WadlGenerator\">\n-    <property name=\"applicationTitle\" value=\"Apache Syncope ${syncope.version}\"/>\n-    <property name=\"namespacePrefix\" value=\"syncope\"/>\n-    <property name=\"linkJsonToXmlSchema\" value=\"true\"/>\n-    <property name=\"useJaxbContextForQnames\" value=\"true\"/>\n-    <property name=\"ignoreMessageWriters\" value=\"true\"/>\n-    <property name=\"addResourceAndMethodIds\" value=\"true\"/>\n-    <property name=\"usePathParamsToCompareOperations\" value=\"false\"/>\n-    <property name=\"javaDocPath\" value=\"/WEB-INF/lib/syncope-common-rest-api-${syncope.version}-javadoc.jar\"/>\n-  </bean>\n-  \n   <bean id=\"addDomainFilter\" class=\"org.apache.syncope.core.rest.cxf.AddDomainFilter\"/>\n   <bean id=\"addETagFilter\" class=\"org.apache.syncope.core.rest.cxf.AddETagFilter\"/>\n   \n   <jaxrs:server id=\"restContainer\" address=\"/\"\n                 basePackages=\"org.apache.syncope.common.rest.api.service, org.apache.syncope.core.rest.cxf.service\" \n-                staticSubresourceResolution=\"true\">\n+                staticSubresourceResolution=\"true\"\n+                docLocation=\"classpath:/META-INF/resources/doc/syncope.wadl\">\n     <jaxrs:properties> \n       <entry key=\"search.lax.property.match\" value=\"true\"/> \n+      <entry key=\"convert.wadl.resources.to.dom\" value=\"false\"/>\n     </jaxrs:properties> \n     <jaxrs:inInterceptors>\n       <ref bean=\"validationInInterceptor\"/>\n@@ -109,7 +100,6 @@ under the License.\n       <ref bean=\"jsonProvider\"/>\n       <ref bean=\"exceptionMapper\"/>\n       <ref bean=\"searchContextProvider\"/>\n-      <ref bean=\"wadlGenerator\"/>\n       <ref bean=\"addDomainFilter\"/>\n       <ref bean=\"addETagFilter\"/>\n     </jaxrs:providers>"},{"sha":"3678f8075cd7b430b635e70ea94715697ba7ad30","filename":"core/rest-cxf/src/main/resources/wadl2html/identity.xsl","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fidentity.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fidentity.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fidentity.xsl?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one\n+  or more contributor license agreements.  See the NOTICE file\n+  distributed with this work for additional information\n+  regarding copyright ownership.  The ASF licenses this file\n+  to you under the Apache License, Version 2.0 (the\n+  \"License\"); you may not use this file except in compliance\n+  with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing,\n+  software distributed under the License is distributed on an\n+  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  KIND, either express or implied.  See the License for the\n+  specific language governing permissions and limitations\n+  under the License.\n+-->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                version=\"1.0\">\n+\n+    <xsl:template match=\"node()|@*\">\n+        <xsl:copy>\n+            <xsl:apply-templates select=\"@*|node()\"/>\n+        </xsl:copy>\n+    </xsl:template>\n+</xsl:stylesheet>"},{"sha":"9e37e245448098b2ed9a00fe2bf4f8d310406148","filename":"core/rest-cxf/src/main/resources/wadl2html/index.xsl","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -46,7 +46,7 @@\n           <xsl:value-of select=\"wadl:doc/@title\"/>\n         </title>\n \n-        <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.css\"/>\n+        <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui-themes/${jquery-ui.version}/smoothness/jquery-ui.min.css\"/>\n         <style>\n           body {\n           font-family: \"Verdana,Arial,sans-serif\";\n@@ -142,6 +142,7 @@\n             <th>Prefix</th>\n             <th>URI</th>\n             <th>XSD</th>\n+            <th>WADL</th>\n           </tr>\n           <xsl:apply-templates select=\"wadl:grammars/xs:schema\"/>\n         </table>\n@@ -212,6 +213,10 @@\n            onClick=\"window.open('', 'schema', '', true).focus();\" target=\"schema\">\n           <xsl:value-of select=\"$prefix\"/>.xsd</a>\n       </td>\n+      <td>\n+        <a href=\"syncope.wadl\"\n+           onClick=\"window.open('', 'wadl', '', true).focus();\" target=\"wadl\">syncope.wadl</a>\n+      </td>\n     </tr>\n   </xsl:template>\n     "},{"sha":"ef40bd5c9127c42b5ae8ced4ccf880a8a8b8b856","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -107,18 +107,19 @@ protected WorkflowResult<Long> doActivate(final User user, final String token) {\n     @Override\n     protected WorkflowResult<Pair<UserMod, Boolean>> doUpdate(final User user, final UserMod userMod) {\n         // update password internally only if required\n-        UserMod actualMod = SerializationUtils.clone(userMod);\n-        if (actualMod.getPwdPropRequest() != null && !actualMod.getPwdPropRequest().isOnSyncope()) {\n-            actualMod.setPassword(null);\n+        UserMod updatedMod = SerializationUtils.clone(userMod);\n+        String updatedPwd = updatedMod.getPassword();\n+        if (updatedMod.getPwdPropRequest() != null && !updatedMod.getPwdPropRequest().isOnSyncope()) {\n+            updatedMod.setPassword(null);\n         }\n         // update User\n-        PropagationByResource propByRes = dataBinder.update(user, actualMod);\n+        PropagationByResource propByRes = dataBinder.update(user, updatedMod);\n+        updatedMod.setPassword(updatedPwd);\n \n-        User updated = userDAO.save(user);\n+        userDAO.save(user);\n \n-        userMod.setKey(updated.getKey());\n         return new WorkflowResult<Pair<UserMod, Boolean>>(\n-                new ImmutablePair<>(userMod, !user.isSuspended()), propByRes, \"update\");\n+                new ImmutablePair<>(updatedMod, !user.isSuspended()), propByRes, \"update\");\n     }\n \n     @Override"},{"sha":"c5f7de5dc91da68cf8f0f9ab05b526e7e83a2295","filename":"deb/core/pom.xml","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/deb%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/deb%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fcore%2Fpom.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -116,12 +116,8 @@ under the License.\n       </resource>\n       \n       <resource>\n-        <directory>${basedir}/../../core/persistence-jpa/src/main/resources</directory>\n-        <includes>\n-          <include>content.xml</include>\n-          <include>persistence.properties</include>\n-        </includes>\n-        <targetPath>${project.build.directory}/etc</targetPath>\n+        <directory>${basedir}/../../core/persistence-jpa/src/main/resources/domains</directory>\n+        <targetPath>${project.build.directory}/etc/domains</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       <resource>"},{"sha":"763f666ecd85e83405c2af64a55c9c72707c1e2e","filename":"ext/camel/provisioning-camel/src/main/resources/provisioning.properties","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -17,5 +17,8 @@\n camel.directory=${conf.directory}\n userProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelUserProvisioningManager\n groupProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelGroupProvisioningManager\n-anyObjectProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelAnObjectProvisioningManager\n+anyObjectProvisioningManager=org.apache.syncope.core.provisioning.camel.CamelAnyObjectProvisioningManager\n virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n+\n+quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+quartz.sql=tables_postgres.sql"},{"sha":"d9d9227b54cb7eea8faac80d7911038cc3ce1f62","filename":"fit/core-reference/pom.xml","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -518,6 +518,11 @@ under the License.\n     <profile>\n       <id>glassfish-it</id>\n \n+      <properties>\n+        <!-- see SYNCOPE-688 -->\n+        <jaxrs.content.type>application/xml</jaxrs.content.type>\n+      </properties>\n+      \n       <dependencies>\n         <dependency>\n           <groupId>com.h2database</groupId>\n@@ -554,6 +559,12 @@ under the License.\n       <id>jboss-it</id>\n \n       <dependencies>\n+        <dependency>\n+          <groupId>javax.xml.ws</groupId>\n+          <artifactId>jaxws-api</artifactId>\n+          <version>2.2.11</version>\n+        </dependency>\n+        \n         <dependency>\n           <groupId>com.h2database</groupId>\n           <artifactId>h2</artifactId>\n@@ -639,9 +650,9 @@ under the License.\n             <inherited>true</inherited>\n             <configuration>\n               <container>\n-                <containerId>wildfly8x</containerId>\n+                <containerId>wildfly9x</containerId>\n                 <zipUrlInstaller>\n-                  <url>http://download.jboss.org/wildfly/8.2.0.Final/wildfly-8.2.0.Final.zip</url>\n+                  <url>http://download.jboss.org/wildfly/9.0.1.Final/wildfly-9.0.1.Final.zip</url>\n                   <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n                   <extractDir>${project.build.directory}/cargo/extract</extractDir>\n                 </zipUrlInstaller>"},{"sha":"35eacdc81a3a727d200377ac05ec154e4ba3ba10","filename":"fit/core-reference/src/main/resources/jboss/domains/MasterDomain.xml","status":"added","additions":131,"deletions":0,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FMasterDomain.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FMasterDomain.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FMasterDomain.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -0,0 +1,131 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n+       xmlns:util=\"http://www.springframework.org/schema/util\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd                           \n+                           http://www.springframework.org/schema/tx\n+                           http://www.springframework.org/schema/tx/spring-tx.xsd\n+                           http://www.springframework.org/schema/util\n+                           http://www.springframework.org/schema/util/spring-util.xsd\">\n+  \n+  <bean id=\"MasterContentXML\" class=\"org.apache.syncope.core.misc.spring.ResourceWithFallbackLoader\">\n+    <property name=\"primary\" value=\"file:${content.directory}/domains/MasterContent.xml\"/>\n+    <property name=\"fallback\" value=\"classpath:domains/MasterContent.xml\"/>\n+  </bean>\n+  <bean id=\"MasterProperties\" class=\"org.apache.syncope.core.misc.spring.ResourceWithFallbackLoader\">\n+    <property name=\"primary\" value=\"file:${content.directory}/domains/Master.properties\"/>\n+    <property name=\"fallback\" value=\"classpath:domains/Master.properties\"/>\n+  </bean>\n+  <bean id=\"MasterDatabaseSchema\" class=\"java.lang.String\">\n+    <constructor-arg value=\"${Master.schema}\"/>\n+  </bean>\n+\n+  <!-- Use JNDI datasource as default but, when not available, revert to\n+  local datasource, with different properties for execution and testing. \n+  In any case, get all JDBC connections with a determined isolation level. -->\n+  <bean id=\"MasterDataSource\" class=\"org.springframework.jndi.JndiObjectFactoryBean\">\n+    <property name=\"jndiName\" value=\"java:comp/env/jdbc/syncopeMasterDataSource\"/>\n+    <property name=\"defaultObject\" ref=\"localMasterDataSource\"/>\n+  </bean>\n+\n+  <bean id=\"localMasterDataSource\" class=\"org.apache.commons.dbcp2.BasicDataSource\" destroy-method=\"close\">\n+    <property name=\"driverClassName\" value=\"${Master.driverClassName}\"/>\n+    <property name=\"url\" value=\"${Master.url}\"/>\n+    <property name=\"username\" value=\"${Master.username}\"/>\n+    <property name=\"password\" value=\"${Master.password}\"/>\n+    <!-- connection pool configuration - transaction isolation, default READ_COMMITTED (see SYNCOPE-202) -->\n+    <property name=\"defaultTransactionIsolation\">\n+      <util:constant static-field=\"${Master.pool.defaultTransactionIsolation:java.sql.Connection.TRANSACTION_READ_COMMITTED}\"/>\n+    </property>\n+    <!-- connection pool configuration - default values taken from BasicDataSource default values -->\n+    <property name=\"initialSize\" value=\"${Master.pool.initialSize:0}\"/>\n+    <property name=\"maxTotal\" value=\"${Master.pool.maxActive:8}\"/>\n+    <property name=\"maxIdle\" value=\"${Master.pool.maxIdle:8}\"/>\n+    <property name=\"minIdle\" value=\"${Master.pool.minIdle:0}\"/>\n+    <property name=\"maxWaitMillis\" value=\"${Master.pool.maxWait:-1}\"/>\n+    <property name=\"validationQuery\" value=\"${Master.pool.validationQuery}\"/>\n+    <property name=\"validationQueryTimeout\" value=\"${Master.pool.validationQueryTimeout:-1}\"/>\n+    <property name=\"testOnBorrow\" value=\"${Master.pool.testOnBorrow:true}\"/>\n+    <property name=\"testOnReturn\" value=\"${Master.pool.testOnReturn:false}\"/>\n+    <property name=\"testWhileIdle\" value=\"${Master.pool.testWhileIdle:false}\"/>\n+    <property name=\"timeBetweenEvictionRunsMillis\" value=\"${Master.pool.timeBetweenEvictionRunsMillis:-1}\"/>\n+    <property name=\"numTestsPerEvictionRun\" value=\"${Master.pool.numTestsPerEvictionRun:3}\"/>\n+    <property name=\"minEvictableIdleTimeMillis\" value=\"${Master.pool.minEvictableIdleTimeMillis:1800000}\"/>\n+    <property name=\"removeAbandonedOnBorrow\" value=\"${Master.pool.removeAbandoned:false}\"/>\n+    <property name=\"removeAbandonedOnMaintenance\" value=\"${Master.pool.removeAbandoned:false}\"/>\n+    <property name=\"removeAbandonedTimeout\" value=\"${Master.pool.removeAbandonedTimeout:300}\"/>\n+    <property name=\"logAbandoned\" value=\"${Master.pool.logAbandoned:false}\"/>\n+  </bean>\n+  \n+  <bean class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n+    <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n+    <property name=\"enabled\" value=\"true\"/>\n+    <property name=\"databasePopulator\">\n+      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n+        <property name=\"continueOnError\" value=\"true\"/>\n+        <property name=\"ignoreFailedDrops\" value=\"true\"/>\n+        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n+        <property name=\"scripts\">\n+          <array>\n+            <value type=\"org.springframework.core.io.Resource\">\n+              classpath:/audit/${Master.audit.sql}\n+            </value>\n+          </array>\n+        </property>\n+      </bean>\n+    </property>\n+  </bean>\n+  \n+  <bean id=\"MasterEntityManagerFactory\"\n+        class=\"org.apache.syncope.core.persistence.jpa.spring.DomainEntityManagerFactoryBean\">\n+    <property name=\"mappingResources\">\n+      <list>\n+        <value>${Master.orm}</value>\n+      </list>\n+    </property>\n+    <property name=\"persistenceUnitName\" value=\"Master\"/>\n+    <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n+    <property name=\"jpaVendorAdapter\">\n+      <bean class=\"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter\">\n+        <property name=\"showSql\" value=\"false\"/>\n+        <property name=\"generateDdl\" value=\"true\"/>\n+        <property name=\"databasePlatform\" value=\"${Master.databasePlatform}\"/>\n+      </bean>\n+    </property>\n+    <property name=\"commonEntityManagerFactoryConf\" ref=\"commonEMFConf\"/>\n+    <property name=\"jpaPropertyMap\">\n+      <map>\n+        <entry key=\"openjpa.MetaDataFactory\" \n+               value=\"jpa(URLs=vfs:${project.build.directory}/cargo/configurations/wildfly8x/deployments/syncope.war/WEB-INF/classes, Resources=${Master.orm)\"/>\n+      </map>\n+    </property>\n+  </bean>\n+\n+  <bean id=\"MasterTransactionManager\" class=\"org.springframework.orm.jpa.JpaTransactionManager\">\n+    <property name=\"entityManagerFactory\" ref=\"MasterEntityManagerFactory\"/>\n+    <qualifier value=\"Master\"/>\n+  </bean>\n+  \n+  <tx:annotation-driven transaction-manager=\"MasterTransactionManager\"/>\n+  \n+</beans>\n\\ No newline at end of file"},{"sha":"889400a3a7f70a531b5f44a01e44612c1684fd0a","filename":"fit/core-reference/src/main/resources/jboss/persistenceContextEMFactory.xml","status":"removed","additions":0,"deletions":73,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9437d37a38d0f185289b1c61d2d79c5ce8edaaa/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FpersistenceContextEMFactory.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9437d37a38d0f185289b1c61d2d79c5ce8edaaa/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FpersistenceContextEMFactory.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FpersistenceContextEMFactory.xml?ref=d9437d37a38d0f185289b1c61d2d79c5ce8edaaa","patch":"@@ -1,73 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-\n-  <bean id=\"entityManagerFactory\"\n-        class=\"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\">\n-    <property name=\"packagesToScan\" value=\"org.apache.syncope.core.persistence.jpa.entity\"/>\n-    <property name=\"validationMode\" value=\"NONE\"/>\n-    <property name=\"mappingResources\">\n-      <list>\n-        <value>${jpa.orm}</value>\n-      </list>\n-    </property>\n-    <property name=\"persistenceUnitName\" value=\"syncopePersistenceUnit\"/>\n-    <property name=\"persistenceUnitPostProcessors\">\n-      <list>\n-        <bean class=\"org.apache.syncope.core.persistence.jpa.spring.MultiJarAwarePersistenceUnitPostProcessor\"/>\n-      </list>\n-    </property>\n-    <property name=\"dataSource\" ref=\"dataSource\"/>\n-    <property name=\"jpaVendorAdapter\">\n-      <bean class=\"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter\">\n-        <property name=\"showSql\" value=\"false\"/>\n-        <property name=\"generateDdl\" value=\"true\"/>\n-        <property name=\"databasePlatform\" value=\"${jpa.dialect}\"/>\n-      </bean>\n-    </property>\n-    <property name=\"jpaPropertyMap\">\n-      <map>\n-        <!--<entry key=\"openjpa.Log\" value=\"SQL=TRACE\"/>\n-        <entry key=\"openjpa.ConnectionFactoryProperties\" value=\"PrettyPrint=true, PrettyPrintLineLength=80\"/>-->\n-                \n-        <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n-        <entry key=\"openjpa.AutoDetach\" value=\"close, commit, nontx-read, rollback\"/>\n-\n-        <entry key=\"openjpa.jdbc.SchemaFactory\" value=\"native(ForeignKeys=true)\"/>\n-        <entry key=\"openjpa.jdbc.MappingDefaults\" value=\"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict\"/>\n-                \n-        <entry key=\"openjpa.ReadLockLevel\" value=\"none\"/>\n-        <entry key=\"openjpa.WriteLockLevel\" value=\"write\"/>\n-        <entry key=\"openjpa.LockTimeout\" value=\"30000\"/>\n-                                \n-        <entry key=\"openjpa.DataCache\" value=\"true\" />\n-        <entry key=\"openjpa.QueryCache\" value=\"true\"/>\n-        <entry key=\"openjpa.RemoteCommitProvider\" value=\"sjvm\"/>\n-        \n-        <entry key=\"openjpa.MetaDataFactory\" \n-               value=\"jpa(URLs=vfs:${project.build.directory}/cargo/configurations/wildfly8x/deployments/syncope.war/WEB-INF/classes, Resources=${jpa.orm})\"/>\n-      </map>\n-    </property>\n-  </bean>\n-\n-</beans>"},{"sha":"8f753d99c36aa07bac65601b806dc524c6627655","filename":"fit/core-reference/src/main/webapp/WEB-INF/jboss-deployment-structure.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -33,6 +33,8 @@ under the License.\n       <module name=\"org.hibernate\"/>\n       <module name=\"org.slf4j\"/>\n       <module name=\"org.slf4j.impl\"/>\n+      <module name=\"org.apache.log4j\"/>\n+      <module name=\"org.jboss.log4j.logmanager\"/>\n     </exclusions>\n   </deployment>\n </jboss-deployment-structure>"},{"sha":"728379a5b78e653b2eda49f7f6c5ca05c410bfcc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/DomainITCase.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDomainITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDomainITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDomainITCase.java?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -83,14 +83,16 @@ public void update() {\n \n             // 2. attempt to access with old pwd -> fail\n             try {\n-                new SyncopeClientFactoryBean().setAddress(ADDRESS).setDomain(\"Two\").\n+                new SyncopeClientFactoryBean().\n+                        setAddress(ADDRESS).setDomain(\"Two\").setContentType(clientFactory.getContentType()).\n                         create(ADMIN_UNAME, \"password2\").self();\n             } catch (AccessControlException e) {\n                 assertNotNull(e);\n             }\n \n             // 3. access with new pwd -> succeed\n-            new SyncopeClientFactoryBean().setAddress(ADDRESS).setDomain(\"Two\").\n+            new SyncopeClientFactoryBean().\n+                    setAddress(ADDRESS).setDomain(\"Two\").setContentType(clientFactory.getContentType()).\n                     create(ADMIN_UNAME, \"password3\").self();\n         } finally {\n             restoreTwo();"},{"sha":"a61c8c80386c9c96e6d49de19a68aeab4785ca3f","filename":"pom.xml","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b2eda9980521ff3ea38093d0a0d5e30a3fcd082a/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=b2eda9980521ff3ea38093d0a0d5e30a3fcd082a","patch":"@@ -320,13 +320,13 @@ under the License.\n     <syncope.version>${project.version}</syncope.version>\n \n     <connid.version>1.4.1.0</connid.version>\n-    <connid.soap.version>1.3.0</connid.soap.version>\n+    <connid.soap.version>1.4.0-SNAPSHOT</connid.soap.version>\n     <connid.database.version>2.2.3-SNAPSHOT</connid.database.version>\n     <connid.csvdir.version>0.8.2</connid.csvdir.version>\n     <connid.ldap.version>1.4.0</connid.ldap.version>\n     <connid.ad.version>1.2.3</connid.ad.version>\n \n-    <cxf.version>3.1.2</cxf.version>\n+    <cxf.version>3.1.3-SNAPSHOT</cxf.version>\n \n     <camel.version>2.15.3</camel.version>\t\n \n@@ -371,7 +371,7 @@ under the License.\n     <log.directory>${project.build.directory}/log</log.directory>\n     <activiti-modeler.directory>${project.build.directory}/activiti-modeler</activiti-modeler.directory>\n     \n-    <jquery.version>2.1.3</jquery.version>\n+    <jquery.version>2.1.4</jquery.version>\n     <jquery-ui.version>1.11.4</jquery-ui.version>\n     <jquery-cookie.version>1.4.1-1</jquery-cookie.version>\n     <bootstrap.version>3.3.5</bootstrap.version>\n@@ -929,6 +929,11 @@ under the License.\n         <artifactId>jquery-ui</artifactId>\n         <version>${jquery-ui.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>jquery-ui-themes</artifactId>\n+        <version>${jquery-ui.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.webjars</groupId>\n         <artifactId>bootstrap</artifactId>\n@@ -1081,7 +1086,7 @@ under the License.\n           <configuration>\n             <source>${targetJdk}</source>\n             <target>${targetJdk}</target>\n-\t    <useIncrementalCompilation>false</useIncrementalCompilation>\n+            <useIncrementalCompilation>false</useIncrementalCompilation>\n             <showWarnings>true</showWarnings>\n             <showDeprecation>true</showDeprecation>\n             <!--<compilerArgument>-Xlint:unchecked</compilerArgument>-->\n@@ -1135,16 +1140,16 @@ under the License.\n                 <artifactId>net.tirasa.connid.bundles.csvdir</artifactId>\n                 <version>${connid.csvdir.version}</version>\n               </artifactItem>\n-              <dependency>\n+              <artifactItem>\n                 <groupId>net.tirasa.connid.bundles.db</groupId>\n                 <artifactId>net.tirasa.connid.bundles.db.table</artifactId>\n                 <version>${connid.database.version}</version>\n-              </dependency>   \n-              <dependency>\n+              </artifactItem>\n+              <artifactItem>\n                 <groupId>net.tirasa.connid.bundles.db</groupId>\n                 <artifactId>net.tirasa.connid.bundles.db.scriptedsql</artifactId>\n                 <version>${connid.database.version}</version>\n-              </dependency>  \n+              </artifactItem>\n               <artifactItem>\n                 <groupId>net.tirasa.connid.bundles</groupId>\n                 <artifactId>net.tirasa.connid.bundles.ldap</artifactId>"}]}