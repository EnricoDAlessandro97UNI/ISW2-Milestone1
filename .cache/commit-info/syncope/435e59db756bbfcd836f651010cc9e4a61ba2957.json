{"sha":"435e59db756bbfcd836f651010cc9e4a61ba2957","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzNWU1OWRiNzU2YmJmY2Q4MzZmNjUxMDEwY2M5ZTRhNjFiYTI5NTc=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-28T11:11:19Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-28T11:11:19Z"},"message":"Fixed SYNCOPE-591","tree":{"sha":"44dc8f35067b7495272168a3cc7f47cdee64c0b3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/44dc8f35067b7495272168a3cc7f47cdee64c0b3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/435e59db756bbfcd836f651010cc9e4a61ba2957","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/435e59db756bbfcd836f651010cc9e4a61ba2957","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/435e59db756bbfcd836f651010cc9e4a61ba2957","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/435e59db756bbfcd836f651010cc9e4a61ba2957/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"74e867e8ccde9d184b7986b8329907ef51e4372b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/74e867e8ccde9d184b7986b8329907ef51e4372b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/74e867e8ccde9d184b7986b8329907ef51e4372b"}],"stats":{"total":436,"additions":432,"deletions":4},"files":[{"sha":"0a3846ae8a84231e5498cd2641bc45ccea845e8f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/AbstractQuestionCommand.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FAbstractQuestionCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FAbstractQuestionCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FAbstractQuestionCommand.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.question;\n+\n+public abstract class AbstractQuestionCommand {\n+\n+    protected final QuestionSyncopeOperations questionSyncopeOperations = new QuestionSyncopeOperations();\n+\n+    protected final QuestionResultManager questionResultManager = new QuestionResultManager();\n+\n+}"},{"sha":"24272038278ad74fe9c6bf5a20b862ec34b9bb9f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionCommand.java","status":"added","additions":114,"deletions":0,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.question;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"question\")\n+public class QuestionCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"Usage: question [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --list \\n\"\n+            + \"    --read \\n\"\n+            + \"       Syntax: --read {QUESTION-ID} {QUESTION-ID} [...]\\n\"\n+            + \"    --read-by-user \\n\"\n+            + \"       Syntax: --read-by-user {USERNAME}\\n\"\n+            + \"    --delete \\n\"\n+            + \"       Syntax: --delete {QUESTION-ID} {QUESTION-ID} [...]\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(QuestionOptions.HELP.getOptionName());\n+        }\n+\n+        switch (QuestionOptions.fromName(input.getOption())) {\n+            case LIST:\n+                new QuestionList().list();\n+                break;\n+            case READ:\n+                new QuestionRead(input).read();\n+                break;\n+            case READ_BY_USER:\n+                new QuestionReadByUser(input).read();\n+                break;\n+            case DELETE:\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new QuestionResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum QuestionOptions {\n+\n+        HELP(\"--help\"),\n+        LIST(\"--list\"),\n+        READ(\"--read\"),\n+        READ_BY_USER(\"--read-by-user\"),\n+        DELETE(\"--delete\");\n+\n+        private final String optionName;\n+\n+        QuestionOptions(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static QuestionOptions fromName(final String name) {\n+            QuestionOptions optionToReturn = HELP;\n+            for (final QuestionOptions option : QuestionOptions.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final QuestionOptions value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+\n+}"},{"sha":"d57ae5c1932b4cd1f5be842fa7a2781eef3aee50","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionDelete.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.question;\n+\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class QuestionDelete extends AbstractQuestionCommand {\n+\n+    private static final String DELETE_HELP_MESSAGE = \"question --delete {QUESTION-ID} {QUESTION-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public QuestionDelete(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.getParameters().length >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    questionSyncopeOperations.delete(parameter);\n+                    questionResultManager.deletedMessage(\"security question\", parameter);\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        questionResultManager.notFoundError(\"Security question\", parameter);\n+                    } else {\n+                        questionResultManager.generic(\"Error: \" + ex.getMessage());\n+                    }\n+                    break;\n+                } catch (final NumberFormatException ex) {\n+                    questionResultManager.numberFormatException(\"security question\", parameter);\n+                }\n+            }\n+        } else {\n+            questionResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"836554a0f2a6853f74601241f850a7bf5780a4bd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionList.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.question;\n+\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class QuestionList extends AbstractQuestionCommand {\n+\n+    public void list() {\n+        try {\n+            questionResultManager.toView(questionSyncopeOperations.list());\n+        } catch (final SyncopeClientException ex) {\n+            questionResultManager.generic(ex.getMessage());\n+        }\n+    }\n+}"},{"sha":"5f96cd5acc5a5976a18461d95dcec1d65dbd16c5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionRead.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.question;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+\n+public class QuestionRead extends AbstractQuestionCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"question --read {QUESTION-ID} {QUESTION-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public QuestionRead(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.getParameters().length >= 1) {\n+            final List<SecurityQuestionTO> questionTOs = new ArrayList<>();\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    questionTOs.add(questionSyncopeOperations.read(parameter));\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        questionResultManager.notFoundError(\"Security question\", parameter);\n+                    } else {\n+                        questionResultManager.generic(\"Error: \" + ex.getMessage());\n+                    }\n+                    break;\n+                } catch (final NumberFormatException ex) {\n+                    questionResultManager.numberFormatException(\"security question\", parameter);\n+                }\n+            }\n+            questionResultManager.toView(questionTOs);\n+        } else {\n+            questionResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"fa7b23d5cad15a69e87fad8b037a5b6c0ffc2d3d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionReadByUser.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionReadByUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionReadByUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionReadByUser.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.question;\n+\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class QuestionReadByUser extends AbstractQuestionCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"question --read-by-user {USERNAME}\";\n+\n+    private final Input input;\n+\n+    public QuestionReadByUser(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.getParameters().length == 1) {\n+            try {\n+                questionResultManager.printQuestion(questionSyncopeOperations.readByUser(input.firstParameter()));\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    questionResultManager.notFoundError(\"Security question\", input.firstParameter());\n+                } else {\n+                    questionResultManager.generic(\"Error: \" + ex.getMessage());\n+                }\n+            } catch (final NumberFormatException ex) {\n+                questionResultManager.numberFormatException(\"security question\", input.firstParameter());\n+            }\n+        } else {\n+            questionResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"761b56bb2a2b8fc6a45e448b33c438ce5b0aadea","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionResultManager.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionResultManager.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.question;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+\n+public class QuestionResultManager extends CommonsResultManager {\n+\n+    public void toView(final List<SecurityQuestionTO> questionTOs) {\n+        for (final SecurityQuestionTO questionTO : questionTOs) {\n+            printQuestion(questionTO);\n+        }\n+    }\n+\n+    public void printQuestion(final SecurityQuestionTO securityQuestionTO) {\n+        System.out.println(\" > SECURITY QUESTION ID: \" + securityQuestionTO.getKey());\n+        System.out.println(\"    content: \" + securityQuestionTO.getContent());\n+        System.out.println(\"\");\n+    }\n+}"},{"sha":"238a576ba052a2182f0084d25973b47949623ff0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionSyncopeOperations.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.question;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n+\n+public class QuestionSyncopeOperations {\n+\n+    private final SecurityQuestionService securityQuestionService = SyncopeServices.get(SecurityQuestionService.class);\n+\n+    public List<SecurityQuestionTO> list() {\n+        return securityQuestionService.list();\n+    }\n+\n+    public void delete(final String questionId) {\n+        securityQuestionService.delete(Long.valueOf(questionId));\n+    }\n+\n+    public SecurityQuestionTO read(final String questionId) {\n+        return securityQuestionService.read(Long.valueOf(questionId));\n+    }\n+    \n+    public SecurityQuestionTO readByUser(final String username) {\n+        return securityQuestionService.readByUser(username);\n+    }\n+\n+}"},{"sha":"de4aac6df69172a25c883259aeb3acc3dbc989c0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/AbstractRoleCommand.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FAbstractRoleCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FAbstractRoleCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FAbstractRoleCommand.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -18,10 +18,10 @@\n  */\n package org.apache.syncope.client.cli.commands.role;\n \n-public class AbstractRoleCommand {\n+public abstract class AbstractRoleCommand {\n \n-    protected RoleSyncopeOperations roleSyncopeOperations = new RoleSyncopeOperations();\n+    protected final RoleSyncopeOperations roleSyncopeOperations = new RoleSyncopeOperations();\n \n-    protected RoleResultManager roleResultManager = new RoleResultManager();\n+    protected final RoleResultManager roleResultManager = new RoleResultManager();\n \n }"},{"sha":"e47a40eb8c857da5519022794573c19d16f16ca5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/435e59db756bbfcd836f651010cc9e4a61ba2957/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java?ref=435e59db756bbfcd836f651010cc9e4a61ba2957","patch":"@@ -46,7 +46,7 @@ public void delete() {\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n-                    roleResultManager.numberFormatException(\"user\", parameter);\n+                    roleResultManager.numberFormatException(\"role\", parameter);\n                 }\n             }\n         } else {"}]}