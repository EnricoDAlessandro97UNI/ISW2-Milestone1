{"sha":"ce4b80fa93a6bf3af8ff8a918838df79adb9a303","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNlNGI4MGZhOTNhNmJmM2FmOGZmOGE5MTg4MzhkZjc5YWRiOWEzMDM=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-05-09T20:47:55Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-05-09T20:47:55Z"},"message":"[SYNCOPE-820] providing basic console internals for user/group/anyobject templates management","tree":{"sha":"a6ad6f214038a2e15557c0baf551f91dcae736fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a6ad6f214038a2e15557c0baf551f91dcae736fb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ce4b80fa93a6bf3af8ff8a918838df79adb9a303","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce4b80fa93a6bf3af8ff8a918838df79adb9a303","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ce4b80fa93a6bf3af8ff8a918838df79adb9a303","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"c9ec6d401a24668c76c3e4cd957bd3dc4888a29d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c9ec6d401a24668c76c3e4cd957bd3dc4888a29d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c9ec6d401a24668c76c3e4cd957bd3dc4888a29d"}],"stats":{"total":564,"additions":444,"deletions":120},"files":[{"sha":"29f4770bdc4eb79cd616b49bde70af97639b9200","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/StartAtTogglePanel.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -39,16 +39,18 @@ public abstract class StartAtTogglePanel extends TogglePanel<Serializable> {\n \n     private static final long serialVersionUID = -3195479265440591519L;\n \n-    private String key = null;\n+    protected String key = null;\n+\n+    protected final Form<?> form;\n+\n+    protected final Model<Date> startAtDateModel = new Model<>();\n \n     public StartAtTogglePanel(final WebMarkupContainer container) {\n         super(\"startAt\");\n \n-        final Form<?> form = new Form<>(\"startAtForm\");\n+        form = new Form<>(\"startAtForm\");\n         addInnerObject(form);\n \n-        final Model<Date> startAtDateModel = new Model<>();\n-\n         final DateTimeFieldPanel startAtDate = new DateTimeFieldPanel(\n                 \"startAtDate\", \"startAtDate\", startAtDateModel, SyncopeConstants.DATE_PATTERNS[3]);\n \n@@ -83,7 +85,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     target.add(container);\n                 } catch (SyncopeClientException e) {\n                     error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n-                    LOG.error(\"While running propagation task {}\", key, e);\n+                    LOG.error(\"While running task {}\", key, e);\n                 }\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n             }\n@@ -92,7 +94,6 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n             }\n-\n         });\n     }\n "},{"sha":"459e82dcc8bd523a924bb769cd55a84e140403e4","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PullTaskDirectoryPanel.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -21,9 +21,14 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.model.IModel;\n \n public abstract class PullTaskDirectoryPanel extends ProvisioningTaskDirectoryPanel<PullTaskTO> {\n \n@@ -46,4 +51,17 @@ protected String paginatorRowsKey() {\n     protected ProvisioningTasksProvider<PullTaskTO> dataProvider() {\n         return new ProvisioningTasksProvider<>(reference, TaskType.PULL, rows);\n     }\n+\n+    @Override\n+    protected void addFurtherAcions(final ActionLinksPanel.Builder<PullTaskTO> panel, final IModel<PullTaskTO> model) {\n+        panel.add(new ActionLink<PullTaskTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final PullTaskTO ignore) {\n+                templates.toggle(target, true);\n+            }\n+        }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.TASK_UPDATE);\n+    }\n }"},{"sha":"1f36f95735b4c1f6e04a9ca3f42f86ffe7b180ca","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":16,"deletions":21,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -73,6 +73,8 @@\n \n     private final TaskStartAtTogglePanel startAt;\n \n+    protected final TemplatesTogglePanel templates;\n+\n     protected SchedTaskDirectoryPanel(\n             final BaseModal<?> baseModal,\n             final MultilevelPanel multiLevelPanelRef,\n@@ -92,10 +94,16 @@ protected SchedTaskDirectoryPanel(\n \n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.TASK_CREATE);\n \n+        enableExitButton();\n+        setFooterVisibility(false);\n+\n         initResultTable();\n \n         startAt = new TaskStartAtTogglePanel(container);\n         addInnerObject(startAt);\n+\n+        templates = new TemplatesTogglePanel(this, pageRef);\n+        addInnerObject(templates);\n     }\n \n     protected List<IColumn<T, String>> getFieldColumns() {\n@@ -164,7 +172,7 @@ public ActionLinksPanel<T> getActions(\n \n                 final T taskTO = model.getObject();\n \n-                final ActionLinksPanel<T> panel = ActionLinksPanel.<T>builder().\n+                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.<T>builder().\n                         add(new ActionLink<T>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n@@ -213,24 +221,6 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n \n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                                try {\n-                                    restClient.startExecution(taskTO.getKey(), null, true);\n-                                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                    LOG.error(\"While running propagation task {}\", taskTO.getKey(), e);\n-                                }\n-                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DRYRUN, StandardEntitlement.TASK_EXECUTE).\n-                        add(new ActionLink<T>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n                             @Override\n                             public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                 try {\n@@ -244,9 +234,11 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                 }\n                                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                             }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE).build(componentId);\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE);\n+\n+                addFurtherAcions(panel, model);\n \n-                return panel;\n+                return panel.build(componentId, model.getObject());\n             }\n \n             @Override\n@@ -270,6 +262,9 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n         return columns;\n     }\n \n+    protected void addFurtherAcions(final ActionLinksPanel.Builder<T> panel, final IModel<T> model) {\n+    }\n+\n     @Override\n     protected String paginatorRowsKey() {\n         return Constants.PREF_SCHED_TASKS_PAGINATOR_ROWS;"},{"sha":"99c5c762a4e9db46d175141df54cfa8363b1e945","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskDirectoryPanel.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n@@ -96,4 +97,13 @@ public IModel<T> model(final T object) {\n         }\n     }\n \n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        super.onEvent(event);\n+        if (event.getPayload() instanceof ExitEvent && modal != null) {\n+            final AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n+            baseModal.show(false);\n+            baseModal.close(target);\n+        }\n+    }\n }"},{"sha":"569203d458b1dd4aded525e1c56668ed1b4ee271","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskStartAtTogglePanel.java","status":"modified","additions":33,"deletions":2,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskStartAtTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskStartAtTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskStartAtTogglePanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -18,21 +18,52 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.StartAtTogglePanel;\n-import org.apache.syncope.client.console.rest.ExecutionRestClient;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n \n public class TaskStartAtTogglePanel extends StartAtTogglePanel {\n \n     private static final long serialVersionUID = -3195479265440591519L;\n \n     public TaskStartAtTogglePanel(final WebMarkupContainer container) {\n         super(container);\n+\n+        form.add(new AjaxSubmitLink(\"dryRun\", form) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                try {\n+                    getRestClient().startExecution(key, startAtDateModel.getObject(), true);\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    toggle(target, false);\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                    LOG.error(\"While running task {}\", key, e);\n+                }\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+\n+        });\n     }\n \n     @Override\n-    protected ExecutionRestClient getRestClient() {\n+    protected TaskRestClient getRestClient() {\n         return new TaskRestClient();\n     }\n "},{"sha":"5cec257275162aa4276f2eaf7e1ac5a04cf09216","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TemplatesTogglePanel.java","status":"added","additions":143,"deletions":0,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -0,0 +1,143 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n+import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n+import org.apache.syncope.client.console.panels.TogglePanel;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.AnyWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n+import org.apache.syncope.client.console.wizards.any.UserWizardBuilder;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+\n+public class TemplatesTogglePanel extends TogglePanel<Serializable> {\n+\n+    private static final long serialVersionUID = -3195479265440591519L;\n+\n+    protected final Form<?> form;\n+\n+    protected final Model<String> typeModel = new Model<>();\n+\n+    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 5275935387613157437L;\n+\n+        @Override\n+        protected List<String> load() {\n+            final List<String> res = new ArrayList<>();\n+            CollectionUtils.collect(new AnyTypeRestClient().list(), EntityTOUtils.<AnyTypeTO>keyTransformer(), res);\n+            return res;\n+        }\n+    };\n+\n+    public TemplatesTogglePanel(final SchedTaskDirectoryPanel<?> container, final PageReference pageRef) {\n+        super(\"schedTaskTemplates\");\n+        this.pageRef = pageRef;\n+\n+        form = new Form<>(\"templatesForm\");\n+        addInnerObject(form);\n+\n+        final FieldPanel<String> type = new AjaxDropDownChoicePanel<>(\"type\", \"type\", typeModel, false).\n+                setChoices(anyTypes).\n+                setStyleSheet(\"form-control\").\n+                setRequired(true);\n+\n+        type.hideLabel();\n+        form.add(type);\n+\n+        form.add(new AjaxSubmitLink(\"changeit\", form) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                try {\n+                    final AjaxWizard.NewItemActionEvent<UserTO> payload\n+                            = new AjaxWizard.NewItemActionEvent<>(null, target);\n+\n+                    final AnyWizardBuilder<?> builder;\n+\n+                    switch (typeModel.getObject()) {\n+                        case \"USER\":\n+                            builder = new UserWizardBuilder(\n+                                    new UserTO(),\n+                                    Collections.<String>emptyList(),\n+                                    new UserFormLayoutInfo(),\n+                                    pageRef);\n+                            break;\n+                        case \"GROUP\":\n+                            builder = new GroupWizardBuilder(\n+                                    new GroupTO(),\n+                                    Collections.<String>emptyList(),\n+                                    new GroupFormLayoutInfo(),\n+                                    pageRef);\n+                            break;\n+                        default:\n+                            AnyObjectTO anyObjectTO = new AnyObjectTO();\n+                            anyObjectTO.setType(typeModel.getObject());\n+                            builder = new AnyObjectWizardBuilder(\n+                                    anyObjectTO,\n+                                    Collections.<String>emptyList(),\n+                                    new AnyObjectFormLayoutInfo(),\n+                                    pageRef);\n+                    }\n+                    payload.forceModalPanel(builder.build(\n+                            container.getActualId(), payload.getIndex(), AjaxWizard.Mode.TEMPLATE));\n+\n+                    send(container, Broadcast.EXACT, payload);\n+                    toggle(target, false);\n+                } catch (SyncopeClientException e) {\n+                    error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                    LOG.error(\"While editing template for {}\", typeModel.getObject(), e);\n+                }\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+        });\n+    }\n+}"},{"sha":"1edf3e73c34e634cc9d7559f443a2a83312fab6d","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":35,"deletions":19,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -65,7 +65,9 @@ public class TopologyTogglePanel extends TogglePanel<Serializable> {\n \n     private final WebMarkupContainer container;\n \n-    protected final BaseModal<Serializable> taskModal;\n+    protected final BaseModal<Serializable> propTaskModal;\n+\n+    protected final BaseModal<Serializable> schedTaskModal;\n \n     protected final BaseModal<Serializable> provisionModal;\n \n@@ -77,9 +79,22 @@ public TopologyTogglePanel(final String id, final PageReference pageRef) {\n         setFooterVisibility(false);\n         setWindowClosedReloadCallback(modal);\n \n-        taskModal = new BaseModal<>(\"outer\");\n-        taskModal.size(Modal.Size.Large);\n-        addOuterObject(taskModal);\n+        propTaskModal = new BaseModal<>(\"outer\");\n+        propTaskModal.size(Modal.Size.Large);\n+        addOuterObject(propTaskModal);\n+\n+        schedTaskModal = new BaseModal<Serializable>(\"outer\") {\n+\n+            private static final long serialVersionUID = 389935548143327858L;\n+\n+            @Override\n+            protected void onConfigure() {\n+                super.onConfigure();\n+                setFooterVisible(false);\n+            }\n+        };\n+        schedTaskModal.size(Modal.Size.Large);\n+        addOuterObject(schedTaskModal);\n \n         provisionModal = new BaseModal<>(\"outer\");\n         provisionModal.size(Modal.Size.Large);\n@@ -134,9 +149,9 @@ private Fragment getSyncopeFragment(final PageReference pageRef) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(taskModal.setContent(new SchedTasks(taskModal, pageRef)));\n-                taskModal.header(new ResourceModel(\"task.custom.list\"));\n-                taskModal.show(true);\n+                target.add(propTaskModal.setContent(new SchedTasks(propTaskModal, pageRef)));\n+                propTaskModal.header(new ResourceModel(\"task.custom.list\"));\n+                propTaskModal.show(true);\n             }\n         };\n         fragment.add(tasks);\n@@ -337,9 +352,9 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(taskModal.setContent(new ConnObjects(taskModal, node.getKey().toString(), pageRef)));\n-                taskModal.header(new StringResourceModel(\"resource.explore.list\", Model.of(node)));\n-                taskModal.show(true);\n+                target.add(propTaskModal.setContent(new ConnObjects(propTaskModal, node.getKey().toString(), pageRef)));\n+                propTaskModal.header(new StringResourceModel(\"resource.explore.list\", Model.of(node)));\n+                propTaskModal.show(true);\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(explore, ENABLE, StandardEntitlement.RESOURCE_LIST_CONNOBJECT);\n@@ -352,9 +367,10 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             @SuppressWarnings(\"unchecked\")\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(taskModal.setContent(new PropagationTasks(taskModal, node.getKey().toString(), pageRef)));\n-                taskModal.header(new ResourceModel(\"task.propagation.list\"));\n-                taskModal.show(true);\n+                target.add(propTaskModal.setContent(\n+                        new PropagationTasks(propTaskModal, node.getKey().toString(), pageRef)));\n+                propTaskModal.header(new ResourceModel(\"task.propagation.list\"));\n+                propTaskModal.show(true);\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(propagation, ENABLE, StandardEntitlement.TASK_LIST);\n@@ -366,9 +382,9 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(taskModal.setContent(new PullTasks(taskModal, pageRef, node.getKey().toString())));\n-                taskModal.header(new ResourceModel(\"task.pull.list\"));\n-                taskModal.show(true);\n+                target.add(schedTaskModal.setContent(new PullTasks(schedTaskModal, pageRef, node.getKey().toString())));\n+                schedTaskModal.header(new ResourceModel(\"task.pull.list\"));\n+                schedTaskModal.show(true);\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(pull, ENABLE, StandardEntitlement.TASK_LIST);\n@@ -380,9 +396,9 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(taskModal.setContent(new PushTasks(taskModal, pageRef, node.getKey().toString())));\n-                taskModal.header(new ResourceModel(\"task.push.list\"));\n-                taskModal.show(true);\n+                target.add(schedTaskModal.setContent(new PushTasks(schedTaskModal, pageRef, node.getKey().toString())));\n+                schedTaskModal.header(new ResourceModel(\"task.push.list\"));\n+                schedTaskModal.show(true);\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(push, ENABLE, StandardEntitlement.TASK_LIST);"},{"sha":"6f22c0dd9897d460772b861e8fad2d2be4dd9bfa","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -45,6 +45,7 @@ public enum ActionType {\n         RESET_TIME(\"update\"),\n         CLONE(\"create\"),\n         CREATE(\"create\"),\n+        TEMPLATE(\"read\"),\n         EDIT(\"read\"),\n         TYPE_EXTENSIONS(\"read\"),\n         FO_EDIT(\"read\"),"},{"sha":"73fd25a25e3135b762cb8290831c77d708dcd937","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -60,6 +60,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelResetTime\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelClone\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelTemplate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelTypeExtensions\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelFoEdit\", \"emptyFragment\", this));\n@@ -299,6 +300,25 @@ public String getAjaxIndicatorMarkupId() {\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n+            case TEMPLATE:\n+                fragment = new Fragment(\"panelTemplate\", \"fragmentTemplate\", this);\n+\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"templateLink\") {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n             case EDIT:\n                 fragment = new Fragment(\"panelEdit\", \"fragmentEdit\", this);\n \n@@ -1028,6 +1048,10 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelCompose\", \"emptyFragment\", this));\n                 break;\n \n+            case TEMPLATE:\n+                super.addOrReplace(new Fragment(\"panelTemplate\", \"emptyFragment\", this));\n+                break;\n+\n             case EDIT:\n                 super.addOrReplace(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n                 break;"},{"sha":"688535af5755475fdb1fa4325995fbc36c84d405","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":17,"deletions":5,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -53,6 +53,7 @@\n     public enum Mode {\n         CREATE,\n         EDIT,\n+        TEMPLATE,\n         READONLY;\n \n     }\n@@ -194,12 +195,14 @@ public AjaxWizard<T> setItem(final T item) {\n         return this;\n     }\n \n-    public abstract static class NewItemEvent<T> {\n+    public abstract static class NewItemEvent<T extends Serializable> {\n \n         private final T item;\n \n         private final AjaxRequestTarget target;\n \n+        private WizardModalPanel<?> modalPanel;\n+\n         public NewItemEvent(final T item, final AjaxRequestTarget target) {\n             this.item = item;\n             this.target = target;\n@@ -213,10 +216,19 @@ public AjaxRequestTarget getTarget() {\n             return target;\n         }\n \n+        public WizardModalPanel<?> getModalPanel() {\n+            return modalPanel;\n+        }\n+\n+        public NewItemEvent<T> forceModalPanel(final WizardModalPanel<?> modalPanel) {\n+            this.modalPanel = modalPanel;\n+            return this;\n+        }\n+\n         public abstract String getEventDescription();\n     }\n \n-    public static class NewItemActionEvent<T> extends NewItemEvent<T> {\n+    public static class NewItemActionEvent<T extends Serializable> extends NewItemEvent<T> {\n \n         private static final String EVENT_DESCRIPTION = \"new\";\n \n@@ -241,7 +253,7 @@ public String getEventDescription() {\n         }\n     }\n \n-    public static class EditItemActionEvent<T> extends NewItemActionEvent<T> {\n+    public static class EditItemActionEvent<T extends Serializable> extends NewItemActionEvent<T> {\n \n         private static final String EVENT_DESCRIPTION = \"edit\";\n \n@@ -259,7 +271,7 @@ public String getEventDescription() {\n         }\n     }\n \n-    public static class NewItemCancelEvent<T> extends NewItemEvent<T> {\n+    public static class NewItemCancelEvent<T extends Serializable> extends NewItemEvent<T> {\n \n         private static final String EVENT_DESCRIPTION = \"cancel\";\n \n@@ -273,7 +285,7 @@ public String getEventDescription() {\n         }\n     }\n \n-    public static class NewItemFinishEvent<T> extends NewItemEvent<T> {\n+    public static class NewItemFinishEvent<T extends Serializable> extends NewItemEvent<T> {\n \n         private static final String EVENT_DESCRIPTION = \"finish\";\n "},{"sha":"bf00efce64df469e427609a129c2a7a05bde9429","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":17,"deletions":6,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -151,6 +151,10 @@ protected void populateItem(final ListItem<Component> item) {\n         });\n     }\n \n+    public String getActualId() {\n+        return actualId;\n+    }\n+\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n@@ -163,13 +167,20 @@ public void onEvent(final IEvent<?> event) {\n             final AjaxRequestTarget target = newItemEvent.getTarget();\n             final T item = newItemEvent.getItem();\n \n-            if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent && newItemPanelBuilder != null) {\n-                newItemPanelBuilder.setItem(item);\n+            final boolean modalPanelAvailable = newItemEvent.getModalPanel() != null || newItemPanelBuilder != null;\n+\n+            if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent && modalPanelAvailable) {\n+                final WizardModalPanel<?> modalPanel;\n+                if (newItemEvent.getModalPanel() == null) {\n+                    newItemPanelBuilder.setItem(item);\n \n-                final WizardModalPanel<T> modalPanel = newItemPanelBuilder.build(\n-                        actualId,\n-                        ((AjaxWizard.NewItemActionEvent<T>) newItemEvent).getIndex(),\n-                        item != null ? AjaxWizard.Mode.EDIT : AjaxWizard.Mode.CREATE);\n+                    modalPanel = newItemPanelBuilder.build(\n+                            actualId,\n+                            ((AjaxWizard.NewItemActionEvent<T>) newItemEvent).getIndex(),\n+                            item != null ? AjaxWizard.Mode.EDIT : AjaxWizard.Mode.CREATE);\n+                } else {\n+                    modalPanel = newItemEvent.getModalPanel();\n+                }\n \n                 if (wizardInModal) {\n                     final IModel<T> model = new CompoundPropertyModel<>(item);"},{"sha":"a63a7570a49005d986880b07eb5ded1a4caafb96","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -20,14 +20,14 @@\n \n import java.util.Collections;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.Mode;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.layout.AbstractAnyFormLayout;\n import org.apache.syncope.client.console.layout.AnyForm;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -119,17 +119,17 @@ protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final Wiz\n             wizardModel.add(new PlainAttrs(\n                     modelObject.getInnerObject(),\n                     null,\n-                    Mode.ADMIN,\n+                    mode,\n                     anyTypeClasses,\n                     formLayoutInfo.getWhichPlainAttrs()));\n         }\n-        if (formLayoutInfo.isDerAttrs()) {\n+        if (formLayoutInfo.isDerAttrs() && mode != AjaxWizard.Mode.TEMPLATE) {\n             wizardModel.add(new DerAttrs(\n                     modelObject.getInnerObject(), anyTypeClasses, formLayoutInfo.getWhichDerAttrs()));\n         }\n         if (formLayoutInfo.isVirAttrs()) {\n             wizardModel.add(new VirAttrs(\n-                    modelObject.getInnerObject(), anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n+                    modelObject.getInnerObject(), mode, anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n         }\n \n         // role panel step (just available for users)"},{"sha":"cb73c3c03408d13978b08bb095920db261678b19","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -24,7 +24,6 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.commons.Mode;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n@@ -35,6 +34,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -55,12 +55,12 @@ public class PlainAttrs extends AbstractAttrs<PlainSchemaTO> {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    private final Mode mode;\n+    private final AjaxWizard.Mode mode;\n \n     public <T extends AnyTO> PlainAttrs(\n             final T anyTO,\n             final Form<?> form,\n-            final Mode mode,\n+            final AjaxWizard.Mode mode,\n             final List<String> anyTypeClasses,\n             final List<String> whichPlainAttrs) {\n \n@@ -86,7 +86,7 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                 AttrTO attrTO = item.getModelObject();\n \n                 FieldPanel panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n-                if (mode == Mode.TEMPLATE || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n+                if (mode == AjaxWizard.Mode.TEMPLATE || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n                     item.add(panel);\n                     panel.setNewModel(attrTO.getValues());\n                 } else {\n@@ -107,7 +107,7 @@ protected SchemaType getSchemaType() {\n \n     @Override\n     protected boolean reoderSchemas() {\n-        return super.reoderSchemas() && mode != Mode.TEMPLATE;\n+        return super.reoderSchemas() && mode != AjaxWizard.Mode.TEMPLATE;\n     }\n \n     @Override\n@@ -142,13 +142,13 @@ protected void setAttrs() {\n \n     @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n-        boolean required = mode == Mode.TEMPLATE\n+        boolean required = mode == AjaxWizard.Mode.TEMPLATE\n                 ? false\n                 : schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n \n-        boolean readOnly = mode == Mode.TEMPLATE ? false : schemaTO.isReadonly();\n+        boolean readOnly = mode == AjaxWizard.Mode.TEMPLATE ? false : schemaTO.isReadonly();\n \n-        AttrSchemaType type = mode == Mode.TEMPLATE ? AttrSchemaType.String : schemaTO.getType();\n+        AttrSchemaType type = mode == AjaxWizard.Mode.TEMPLATE ? AttrSchemaType.String : schemaTO.getType();\n \n         FieldPanel panel;\n         switch (type) {"},{"sha":"76a8e905f4cef8a64fc4ba20feca494f0a3a95d0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":14,"deletions":7,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -25,6 +25,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n@@ -42,6 +43,7 @@ public class VirAttrs extends AbstractAttrs<VirSchemaTO> {\n \n     public <T extends AnyTO> VirAttrs(\n             final T anyTO,\n+            final AjaxWizard.Mode mode,\n             final List<String> anyTypeClasses,\n             final List<String> whichVirAttrs) {\n \n@@ -67,13 +69,18 @@ protected void populateItem(final ListItem<AttrTO> item) {\n \n                 attrTO.setReadonly(attrTO.isReadonly());\n \n-                AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n-                        \"panel\", attrTO.getSchema(), new Model<String>(), false);\n-                item.add(new MultiFieldPanel.Builder<>(\n-                        new PropertyModel<List<String>>(attrTO, \"values\")).build(\n-                        \"panel\",\n-                        attrTO.getSchema(),\n-                        panel).setEnabled(!attrTO.isReadonly()));\n+                final AjaxTextFieldPanel panel\n+                        = new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), new Model<String>(), false);\n+\n+                if (mode == AjaxWizard.Mode.TEMPLATE) {\n+                    item.add(panel.setEnabled(!attrTO.isReadonly()));\n+                } else {\n+                    item.add(new MultiFieldPanel.Builder<>(\n+                            new PropertyModel<List<String>>(attrTO, \"values\")).build(\n+                            \"panel\",\n+                            attrTO.getSchema(),\n+                            panel).setEnabled(!attrTO.isReadonly()));\n+                }\n             }\n         });\n     }"},{"sha":"b26a44c3c2f7ff373ccf44751c8c7c6752b33570","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/StartAtTogglePanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.html?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -25,9 +25,9 @@\n         </div>\n         <div class=\"input-group\">\n           <span wicket:id=\"startAtDate\"/>\n-\n+          <wicket:child />\n           <div class=\"input-group-addon\">\n-            <a wicket:id=\"startAt\"><i class=\"fa fa-gear\"></i></a>\n+            <a wicket:id=\"startAt\"><i class=\"fa fa-gear\" alt=\"run icon\" title=\"Run\"></i></a>\n           </div>\n         </div>\n       </form>"},{"sha":"6b069844a821ade40057009c03a4e29d013bb61a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.html?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -19,5 +19,6 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n     <span wicket:id=\"startAt\"/>\n+    <span wicket:id=\"schedTaskTemplates\"/>\n   </wicket:extend>\n </html>"},{"sha":"700ba4fb2b293fc2e1565aefeacdba6ee546aa3f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskStartAtTogglePanel.html","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskStartAtTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskStartAtTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskStartAtTogglePanel.html?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -0,0 +1,25 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div class=\"input-group-addon\">\n+      <a wicket:id=\"dryRun\"><i class=\"fa fa-gears\" alt=\"dryrun icon\" title=\"DryRun\"></i></a>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"f2bdd27a527954ae5b7bed50ca4cfdb3bc76e7a5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TemplatesTogglePanel.html","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.html?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -0,0 +1,32 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div id=\"startAtContainer\">\n+      <form wicket:id=\"templatesForm\">\n+        <div class=\"input-group\">\n+          <span wicket:id=\"type\"/>\n+          <div class=\"input-group-addon\">\n+            <a wicket:id=\"changeit\"><i class=\"fa fa-list-alt\" alt=\"run icon\" title=\"Run\"></i></a>\n+          </div>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"434098aa6f2cffc8d544b8dec69a664dfda457ed","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -42,6 +42,7 @@\n     <span wicket:id=\"panelClone\">[plus]</span>\n     <span wicket:id=\"panelCreate\">[plus]</span>\n     <span wicket:id=\"panelReset\">[plus]</span>\n+    <span wicket:id=\"panelTemplate\">[plus]</span>\n     <span wicket:id=\"panelEdit\">[plus]</span>\n     <span wicket:id=\"panelTypeExtensions\">[plus]</span>\n     <span wicket:id=\"panelFoEdit\">[plus]</span>\n@@ -125,6 +126,10 @@\n       <a href=\"#\" wicket:id=\"enableLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-toggle-on\" alt=\"enable icon\" title=\"Enable / Disable\"></i></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentTemplate\">\n+      <a href=\"#\" wicket:id=\"templateLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-list-alt\" alt=\"template icon\" title=\"Template\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentEdit\">\n       <a href=\"#\" wicket:id=\"editLink\" class=\"btn\"><i id=\"actionLink\" class=\"glyphicon glyphicon-pencil\" alt=\"edit icon\" title=\"Edit\"></i></a>\n     </wicket:fragment>"},{"sha":"4fe2d16137b087e15d546fb780d67db491eca563","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimePickerField.html","status":"modified","additions":6,"deletions":14,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -20,21 +20,13 @@\n   <wicket:panel>\n     <span class=\"clause\">\n       <span style=\"white-space: nowrap;\">\n-        <span class=\"field date\">\n-          <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"date\" size=\"12\" style=\"float: left\"/>\n-        </span>\n-        <span class=\"field hours\">\n-          <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"hours\" size=\"2\" maxlength=\"2\"/>\n-        </span>\n-        <span class=\"field separator\">\n-          <span wicket:id=\"hoursSeparator\">:</span>\n-        </span>\n-        <span class=\"field hours\">\n-          <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"minutes\" size=\"2\" maxlength=\"2\"/>\n-        </span>\n-        <span class=\"field hours\">\n-          <select class=\"form-control input-auto-width\" wicket:id=\"amOrPmChoice\"></select>\n+        <span class=\"pull-left\" style=\"padding-right: 5px\">\n+          <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"date\" size=\"12\"/>\n         </span>\n+        <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"hours\" size=\"2\" maxlength=\"2\"/>\n+        <span wicket:id=\"hoursSeparator\" class=\"pull-left\">:</span>\n+        <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"minutes\" size=\"2\" maxlength=\"2\"/>\n+        <select class=\"form-control input-auto-width\" wicket:id=\"amOrPmChoice\"></select>\n       </span>\n     </span>\n   </wicket:panel>"},{"sha":"efe69d589734dafc3d616f52452aa0cc33fe65e9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce4b80fa93a6bf3af8ff8a918838df79adb9a303/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=ce4b80fa93a6bf3af8ff8a918838df79adb9a303","patch":"@@ -83,24 +83,24 @@ public void editProvisioning() {\n         wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n \n         FormTester formTester = wicketTester.newFormTester(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:\"\n+        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1\", WebMarkupContainer.class);\n \n-        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:\"\n+        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1:transformers:icon\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:\"\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n                 + \"wizard:form:view:mapping:mappingContainer:mappings:0:transformers:alertsLink\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n+        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:outerObjectsRepeater:0:outer:container:content:togglePanelContainer:\"\n                 + \"form:classes:paletteField\", NonI18nPalette.class);\n     }\n@@ -142,10 +142,10 @@ public void createNewResurceAndProvisionRules() {\n         wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:add\");\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:add\");\n \n         formTester = wicketTester.newFormTester(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n \n         formTester.setValue(\"view:container:type:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"view:container:class\", \"__ACCOUNT__\");\n@@ -154,30 +154,30 @@ public void createNewResurceAndProvisionRules() {\n         wicketTester.assertNoInfoMessage();\n \n         formTester = wicketTester.newFormTester(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n         wicketTester.assertNoErrorMessage();\n         wicketTester.assertNoInfoMessage();\n \n-        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n+        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:view:mapping:mappingContainer:addMappingBtn\", Constants.ON_CLICK);\n \n         formTester = wicketTester.newFormTester(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n \n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", \"0\");\n         wicketTester.executeAjaxEvent(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\"\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n                 + \":view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", Constants.ON_CHANGE);\n \n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:intMappingTypes:dropDownChoiceField\", \"4\");\n         wicketTester.executeAjaxEvent(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\"\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n                 + \":view:mapping:mappingContainer:mappings:0:intMappingTypes:dropDownChoiceField\", Constants.ON_CHANGE);\n \n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n         wicketTester.executeAjaxEvent(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\"\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n                 + \":view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", Constants.ON_CHANGE);\n \n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:entities:dropDownChoiceField\", \"0\");\n@@ -191,35 +191,35 @@ public void createNewResurceAndProvisionRules() {\n \n         wicketTester.cleanupFeedbackMessages();\n         // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n-        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n+        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:buttons:finish\", Constants.ON_CLICK);\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n \n         wicketTester.assertComponent(\n-                \"body:toggle:outerObjectsRepeater:2:outer:dialog:footer:inputs:0:submit\", AjaxSubmitLink.class);\n+                \"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", AjaxSubmitLink.class);\n \n         wicketTester.cleanupFeedbackMessages();\n         wicketTester.executeAjaxEvent(\n-                \"body:toggle:outerObjectsRepeater:2:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n+                \"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n \n         wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n \n         formTester = wicketTester.newFormTester(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:\"\n+        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:0\", WebMarkupContainer.class);\n \n         wicketTester.executeAjaxEvent(\n-                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:\"\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n                 + \"wizard:form:buttons:cancel\", Constants.ON_CLICK);\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:dialog:footer:buttons:0:button\");\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:buttons:0:button\");\n \n         wicketTester.cleanupFeedbackMessages();\n         wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n@@ -241,11 +241,11 @@ public void executePullTask() {\n         assertNotNull(component);\n         wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:10:cell:panelExecute:executeLink\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:startAt:container:content:togglePanelContainer:startAtForm:startAt\");\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n     }\n@@ -258,12 +258,12 @@ public void editPushTask() {\n         assertNotNull(component);\n         wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:push\");\n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:9:cell:panelEdit:editLink\");\n \n         FormTester formTester = wicketTester.newFormTester(\n-                \"body:toggle:outerObjectsRepeater:1:outer:form:content:\"\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:\"\n                 + \"tasks:firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:description:textField\", \"test\");\n         formTester.submit(\"buttons:finish\");"}]}