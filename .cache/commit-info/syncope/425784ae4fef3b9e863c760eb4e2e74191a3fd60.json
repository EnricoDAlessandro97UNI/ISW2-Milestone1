{"sha":"425784ae4fef3b9e863c760eb4e2e74191a3fd60","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQyNTc4NGFlNGZlZjNiOWU4NjNjNzYwZWI0ZTJlNzQxOTFhM2ZkNjA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-13T12:18:14Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-13T12:18:14Z"},"message":"(Fixes issue #17)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246383 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f7f7ede79e90ca5a5f24a510f2c2fb8ef4a73ddf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f7f7ede79e90ca5a5f24a510f2c2fb8ef4a73ddf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/425784ae4fef3b9e863c760eb4e2e74191a3fd60","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/425784ae4fef3b9e863c760eb4e2e74191a3fd60","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/425784ae4fef3b9e863c760eb4e2e74191a3fd60","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/425784ae4fef3b9e863c760eb4e2e74191a3fd60/comments","author":null,"committer":null,"parents":[{"sha":"80572c04ced77506c7cc751a4a2b368251beef9b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80572c04ced77506c7cc751a4a2b368251beef9b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/80572c04ced77506c7cc751a4a2b368251beef9b"}],"stats":{"total":44,"additions":33,"deletions":11},"files":[{"sha":"4e6181e716d32e69f9de4c60e633f7b8a888ec55","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/425784ae4fef3b9e863c760eb4e2e74191a3fd60/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/425784ae4fef3b9e863c760eb4e2e74191a3fd60/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=425784ae4fef3b9e863c760eb4e2e74191a3fd60","patch":"@@ -28,9 +28,6 @@ public enum SyncopeClientExceptionType {\n     InvalidRoles(\n     \"Syncope.InvalidRoles\",\n     \"Syncope.InvalidRoles.roleName\"),\n-    InvalidSchemas(\n-    \"Syncope.InvalidSchemas\",\n-    \"Syncope.InvalidSchemas.schemaName\"),\n     InvalidSchemaUpdate(\n     \"Syncope.InvalidSchemaUpdate\",\n     \"\"),"},{"sha":"5aa0befd384e26569853b9b2b49fd05421b8acd5","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/425784ae4fef3b9e863c760eb4e2e74191a3fd60/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/425784ae4fef3b9e863c760eb4e2e74191a3fd60/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=425784ae4fef3b9e863c760eb4e2e74191a3fd60","patch":"@@ -82,8 +82,6 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n                 HttpStatus.BAD_REQUEST);\n         SyncopeClientException invalidPassword = new SyncopeClientException(\n                 SyncopeClientExceptionType.InvalidPassword);\n-        SyncopeClientException invalidSchemas = new SyncopeClientException(\n-                SyncopeClientExceptionType.InvalidSchemas);\n         SyncopeClientException requiredValuesMissing =\n                 new SyncopeClientException(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n@@ -122,9 +120,9 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n         for (AttributeTO attributeTO : userTO.getAttributes()) {\n             schema = schemaDAO.find(attributeTO.getSchema(), UserSchema.class);\n \n-            if (schema == null) {\n-                invalidSchemas.addElement(attributeTO.getSchema());\n-            } else {\n+            // safely ignore invalid schemas from AttributeTO\n+            // see http://code.google.com/p/syncope/issues/detail?id=17\n+            if (schema != null) {\n                 attribute = new UserAttribute();\n                 attribute.setSchema(schema);\n                 attribute.setOwner(syncopeUser);\n@@ -168,6 +166,11 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n                 if (!attribute.getAttributeValues().isEmpty()) {\n                     syncopeUser.addAttribute(attribute);\n                 }\n+            } else {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Ignoring invalid schema \"\n+                            + attributeTO.getSchema());\n+                }\n             }\n         }\n \n@@ -228,9 +231,6 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n \n         // Throw composite exception if there is at least one element set\n         // in the composing exceptions\n-        if (!invalidSchemas.getElements().isEmpty()) {\n-            compositeErrorException.addException(invalidSchemas);\n-        }\n         if (!requiredValuesMissing.getElements().isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }"},{"sha":"4f67395064389857bb6e435fcda7495faaa6328c","filename":"core/src/main/java/org/syncope/core/workflow/SpringHibernateJPAWorkflowStore.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/425784ae4fef3b9e863c760eb4e2e74191a3fd60/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSpringHibernateJPAWorkflowStore.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/425784ae4fef3b9e863c760eb4e2e74191a3fd60/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSpringHibernateJPAWorkflowStore.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSpringHibernateJPAWorkflowStore.java?ref=425784ae4fef3b9e863c760eb4e2e74191a3fd60","patch":"@@ -17,19 +17,25 @@\n import com.opensymphony.workflow.StoreException;\n import com.opensymphony.workflow.spi.hibernate.HibernateWorkflowEntry;\n import com.opensymphony.workflow.spi.hibernate3.AbstractHibernateWorkflowStore;\n+import java.util.List;\n import java.util.Map;\n import javax.persistence.EntityManager;\n import javax.persistence.PersistenceContext;\n import javax.persistence.PersistenceContextType;\n import org.hibernate.Session;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Configurable;\n+import org.syncope.core.persistence.beans.OSWorkflowProperty;\n+import org.syncope.core.persistence.dao.OSWorkflowPropertyDAO;\n \n @Configurable\n public class SpringHibernateJPAWorkflowStore\n         extends AbstractHibernateWorkflowStore {\n \n     @PersistenceContext(type = PersistenceContextType.EXTENDED)\n     private EntityManager entityManager;\n+    @Autowired\n+    private OSWorkflowPropertyDAO osWorkflowPropertyDAO;\n \n     @Override\n     public void init(Map props) throws StoreException {\n@@ -41,10 +47,20 @@ protected Object execute(InternalCallback action) throws StoreException {\n     }\n \n     public void delete(Long entryId) {\n+        // 1. remove this workflow entry\n         HibernateWorkflowEntry entry =\n                 entityManager.find(HibernateWorkflowEntry.class, entryId);\n         if (entry != null) {\n             entityManager.remove(entry);\n         }\n+\n+        // 2. remove any property set associated with this workflow entry\n+        List<OSWorkflowProperty> properties =\n+                osWorkflowPropertyDAO.findAll(entryId);\n+        if (properties != null) {\n+            for (OSWorkflowProperty property : properties) {\n+                osWorkflowPropertyDAO.delete(property.getId());\n+            }\n+        }\n     }\n }"},{"sha":"ebda0ad91f64a8cdce42b396f1d42b75dbefbb87","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/425784ae4fef3b9e863c760eb4e2e74191a3fd60/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/425784ae4fef3b9e863c760eb4e2e74191a3fd60/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=425784ae4fef3b9e863c760eb4e2e74191a3fd60","patch":"@@ -77,9 +77,18 @@ public void create() {\n         loginDateTO.addValue(\"2010-07-01\");\n         userTO.addAttribute(loginDateTO);\n \n+        AttributeTO attrWithInvalidSchemaTO = new AttributeTO();\n+        attrWithInvalidSchemaTO.setSchema(\"invalid schema\");\n+        attrWithInvalidSchemaTO.addValue(\"a value\");\n+        userTO.addAttribute(attrWithInvalidSchemaTO);\n+\n         // 1. create user\n         UserTO newUserTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n+        \n+        assertFalse(newUserTO.getAttributes().contains(attrWithInvalidSchemaTO));\n+        userTO.removeAttribute(attrWithInvalidSchemaTO);\n+\n         userTO.setId(newUserTO.getId());\n         userTO.setCreationTime(newUserTO.getCreationTime());\n         userTO.setToken(newUserTO.getToken());"}]}