{"sha":"d0680f35e5a029745327e7bc981adb736a682086","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQwNjgwZjM1ZTVhMDI5NzQ1MzI3ZTdiYzk4MWFkYjczNmE2ODIwODY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-20T11:03:41Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-20T11:03:41Z"},"message":"Now Oracle compatible: what stress...\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246440 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5694c5d753ad31fc92fa0dc4fcadc48966977338","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5694c5d753ad31fc92fa0dc4fcadc48966977338"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d0680f35e5a029745327e7bc981adb736a682086","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d0680f35e5a029745327e7bc981adb736a682086","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d0680f35e5a029745327e7bc981adb736a682086","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d0680f35e5a029745327e7bc981adb736a682086/comments","author":null,"committer":null,"parents":[{"sha":"974f84ae2f776ca90c57657fb696319a6e546ec4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/974f84ae2f776ca90c57657fb696319a6e546ec4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/974f84ae2f776ca90c57657fb696319a6e546ec4"}],"stats":{"total":627,"additions":355,"deletions":272},"files":[{"sha":"e4c3fe01cb01416879787fc1cec16d99ed0aefd1","filename":"core/src/main/java/org/syncope/core/persistence/DefaultContentLoader.java","status":"modified","additions":57,"deletions":10,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -14,15 +14,19 @@\n  */\n package org.syncope.core.persistence;\n \n+import java.io.InputStream;\n import java.sql.Connection;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.Properties;\n import javax.servlet.ServletContextEvent;\n import javax.servlet.ServletContextListener;\n import javax.sql.DataSource;\n import org.dbunit.database.DatabaseConfig;\n import org.dbunit.database.DatabaseConnection;\n import org.dbunit.database.IDatabaseConnection;\n import org.dbunit.dataset.IDataSet;\n-import org.dbunit.dataset.ITableIterator;\n import org.dbunit.dataset.datatype.DefaultDataTypeFactory;\n import org.dbunit.dataset.xml.FlatXmlDataSetBuilder;\n import org.dbunit.operation.DatabaseOperation;\n@@ -31,6 +35,7 @@\n import org.springframework.jdbc.datasource.DataSourceUtils;\n import org.springframework.web.context.WebApplicationContext;\n import org.springframework.web.context.support.WebApplicationContextUtils;\n+import org.syncope.core.persistence.beans.SyncopeConfiguration;\n \n public class DefaultContentLoader implements ServletContextListener {\n \n@@ -56,21 +61,63 @@ public void contextInitialized(ServletContextEvent sce) {\n                 (DefaultDataTypeFactory) springContext.getBean(\n                 \"dbUnitDataTypeFactory\");\n \n+        String dbSchema = null;\n+        try {\n+            InputStream dbPropsStream =\n+                    sce.getServletContext().getResourceAsStream(\n+                    \"WEB-INF/classes/org/syncope/core/persistence/db.properties\");\n+            Properties dbProps = new Properties();\n+            dbProps.load(dbPropsStream);\n+            dbSchema = dbProps.getProperty(\"database.schema\");\n+        } catch (Throwable t) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Could not find db.properties\", t);\n+            } else {\n+                log.error(\"Could not find db.properties\");\n+            }\n+\n+            dbSchema = null;\n+        }\n+\n         Connection conn = DataSourceUtils.getConnection(dataSource);\n+\n+        Statement statement = null;\n+        ResultSet resultSet = null;\n+        boolean existingData = false;\n         try {\n-            IDatabaseConnection dbUnitConn = new DatabaseConnection(conn);\n+            statement = conn.createStatement(\n+                    ResultSet.TYPE_SCROLL_SENSITIVE,\n+                    ResultSet.CONCUR_READ_ONLY);\n \n-            DatabaseConfig config = dbUnitConn.getConfig();\n-            config.setProperty(DatabaseConfig.PROPERTY_DATATYPE_FACTORY,\n-                    dbUnitDataTypeFactory);\n+            resultSet = statement.executeQuery(\"SELECT * FROM \"\n+                    + SyncopeConfiguration.class.getSimpleName());\n+            resultSet.last();\n \n-            boolean existingData = false;\n-            IDataSet existingDataSet = dbUnitConn.createDataSet();\n-            for (ITableIterator itor = existingDataSet.iterator();\n-                    itor.next() && !existingData;) {\n+            existingData = resultSet.getRow() > 0;\n+        } catch (SQLException e) {\n+            log.error(\"Could not access to table \"\n+                    + SyncopeConfiguration.class.getSimpleName(), e);\n \n-                existingData = (itor.getTable().getRowCount() > 0);\n+            // Setting this to true make nothing to be done below\n+            existingData = true;\n+        } finally {\n+            try {\n+                resultSet.close();\n+                statement.close();\n+            } catch (SQLException e) {\n             }\n+        }\n+        log.info(\"OOOOOOOO \" + existingData);\n+        try {\n+            IDatabaseConnection dbUnitConn = dbSchema == null\n+                    ? new DatabaseConnection(conn)\n+                    : new DatabaseConnection(conn, dbSchema);\n+\n+            DatabaseConfig config = dbUnitConn.getConfig();\n+            config.setProperty(DatabaseConfig.PROPERTY_DATATYPE_FACTORY,\n+                    dbUnitDataTypeFactory);\n+            config.setProperty(\n+                    DatabaseConfig.FEATURE_SKIP_ORACLE_RECYCLEBIN_TABLES, true);\n \n             if (existingData) {\n                 log.info(\"Data found in the database, leaving untouched\");"},{"sha":"45a6168844e1e7803bbeedf10d295bd0fb28fb73","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":15,"deletions":11,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -31,7 +31,7 @@ public abstract class AbstractAttributable extends AbstractBaseBean {\n      * Provisioning target resources.\n      */\n     @ManyToMany(fetch = FetchType.EAGER)\n-    protected Set<Resource> resources;\n+    protected Set<TargetResource> targetResources;\n \n     public <T extends AbstractAttribute> T getAttribute(String schemaName) {\n         T result = null;\n@@ -72,23 +72,27 @@ public <T extends AbstractDerivedAttribute> T getDerivedAttribute(\n         return result;\n     }\n \n-    public boolean addResource(Resource resource) {\n-        if (this.resources == null) {\n-            this.resources = new HashSet<Resource>();\n+    public boolean addTargetResource(TargetResource targetResource) {\n+        if (this.targetResources == null) {\n+            this.targetResources = new HashSet<TargetResource>();\n         }\n-        return this.resources.add(resource);\n+        return this.targetResources.add(targetResource);\n     }\n \n-    public boolean removeResource(Resource resource) {\n-        return resources == null ? true : resources.remove(resource);\n+    public boolean removeTargetResource(TargetResource targetResource) {\n+        return targetResources == null\n+                ? true\n+                : targetResources.remove(targetResource);\n     }\n \n-    public Set<Resource> getResources() {\n-        return resources == null ? Collections.EMPTY_SET : resources;\n+    public Set<TargetResource> getTargetResources() {\n+        return targetResources == null \n+                ? Collections.EMPTY_SET\n+                : targetResources;\n     }\n \n-    public void setResources(Set<Resource> resources) {\n-        this.resources = resources;\n+    public void setResources(Set<TargetResource> resources) {\n+        this.targetResources = resources;\n     }\n \n     public abstract <T extends AbstractAttribute> boolean addAttribute(T attribute);"},{"sha":"0194f1c478b958d0d61e7bd2fe514414fd995f72","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributeValue.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -17,6 +17,7 @@\n import java.text.DecimalFormat;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n+import javax.persistence.Basic;\n import javax.persistence.GeneratedValue;\n import javax.persistence.GenerationType;\n import javax.persistence.Id;\n@@ -35,7 +36,8 @@ public abstract class AbstractAttributeValue extends AbstractBaseBean {\n     private String stringValue;\n     @Temporal(TemporalType.TIMESTAMP)\n     private Date dateValue;\n-    private Boolean booleanValue;\n+    @Basic\n+    private Character booleanValue;\n     private Long longValue;\n     private Double doubleValue;\n \n@@ -44,11 +46,20 @@ public Long getId() {\n     }\n \n     public Boolean getBooleanValue() {\n-        return booleanValue;\n+        if (booleanValue == null) {\n+            return null;\n+        }\n+        return booleanValue == 'T' ? Boolean.TRUE : Boolean.FALSE;\n     }\n \n     public void setBooleanValue(Boolean booleanValue) {\n-        this.booleanValue = booleanValue;\n+        if (booleanValue == null) {\n+            this.booleanValue = null;\n+        } else if (booleanValue == Boolean.TRUE) {\n+            this.booleanValue = 'T';\n+        } else {\n+            this.booleanValue = 'F';\n+        }\n     }\n \n     public Date getDateValue() {"},{"sha":"233c58113fe878dd0e305c60b1d35feb3abda783","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractSchema.java","status":"modified","additions":21,"deletions":16,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -21,6 +21,7 @@\n import java.text.Format;\n import java.text.SimpleDateFormat;\n import java.util.List;\n+import javax.persistence.Basic;\n import javax.persistence.Column;\n import javax.persistence.Enumerated;\n import javax.persistence.Id;\n@@ -41,10 +42,14 @@ public abstract class AbstractSchema extends AbstractBaseBean {\n     /**\n      * Specify if the attribute should be stored on the local repository.\n      */\n-    private boolean virtual;\n-    private boolean mandatory;\n-    private boolean multivalue;\n-    private boolean uniquevalue;\n+    @Basic\n+    private Character virtual;\n+    @Basic\n+    private Character mandatory;\n+    @Basic\n+    private Character multivalue;\n+    @Basic\n+    private Character uniquevalue;\n     @Column(nullable = true)\n     private String conversionPattern;\n     @Column(nullable = true)\n@@ -54,10 +59,10 @@ public abstract class AbstractSchema extends AbstractBaseBean {\n \n     public AbstractSchema() {\n         type = SchemaType.String;\n-        virtual = false;\n-        mandatory = false;\n-        multivalue = false;\n-        uniquevalue = false;\n+        virtual = 'F';\n+        mandatory = 'F';\n+        multivalue = 'F';\n+        uniquevalue = 'F';\n     }\n \n     public String getName() {\n@@ -77,35 +82,35 @@ public void setType(SchemaType type) {\n     }\n \n     public boolean isVirtual() {\n-        return virtual;\n+        return virtual != null && virtual == 'T';\n     }\n \n     public void setVirtual(boolean virtual) {\n-        this.virtual = virtual;\n+        this.virtual = virtual ? 'T' : 'F';\n     }\n \n     public boolean isMandatory() {\n-        return mandatory;\n+        return mandatory != null && mandatory == 'T';\n     }\n \n     public void setMandatory(boolean mandatory) {\n-        this.mandatory = mandatory;\n+        this.mandatory = mandatory ? 'T' : 'F';\n     }\n \n     public boolean isMultivalue() {\n-        return multivalue;\n+        return multivalue != null && multivalue == 'T';\n     }\n \n     public void setMultivalue(boolean multivalue) {\n-        this.multivalue = multivalue;\n+        this.multivalue = multivalue ? 'T' : 'F';\n     }\n \n     public boolean isUniquevalue() {\n-        return uniquevalue;\n+        return uniquevalue != null && uniquevalue == 'T';\n     }\n \n     public void setUniquevalue(boolean uniquevalue) {\n-        this.uniquevalue = uniquevalue;\n+        this.uniquevalue = uniquevalue ? 'T' : 'F';\n     }\n \n     public AttributeValidator getValidator() {"},{"sha":"37212652529db2282b686f64a0f236046425adc3","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnectorInstance.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -64,7 +64,7 @@ public class ConnectorInstance extends AbstractBaseBean {\n      */\n     @OneToMany(cascade = {CascadeType.REFRESH, CascadeType.MERGE},\n     mappedBy = \"connector\")\n-    private List<Resource> resources;\n+    private List<TargetResource> resources;\n \n     public String getVersion() {\n         return version;\n@@ -102,25 +102,25 @@ public Long getId() {\n         return id;\n     }\n \n-    public List<Resource> getResources() {\n+    public List<TargetResource> getResources() {\n         if (this.resources == null) {\n-            this.resources = new ArrayList<Resource>();\n+            this.resources = new ArrayList<TargetResource>();\n         }\n         return this.resources;\n     }\n \n-    public void setResources(List<Resource> resources) {\n+    public void setResources(List<TargetResource> resources) {\n         this.resources = resources;\n     }\n \n-    public boolean addResource(Resource resource) {\n+    public boolean addResource(TargetResource resource) {\n         if (this.resources == null) {\n-            this.resources = new ArrayList<Resource>();\n+            this.resources = new ArrayList<TargetResource>();\n         }\n         return this.resources.add(resource);\n     }\n \n-    public boolean removeResource(Resource resource) {\n+    public boolean removeResource(TargetResource resource) {\n         if (this.resources == null) {\n             return true;\n         }"},{"sha":"ab3858e7b48703a4a74f0bb2ca0efa525cc71e7d","filename":"core/src/main/java/org/syncope/core/persistence/beans/OSWorkflowProperty.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FOSWorkflowProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FOSWorkflowProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FOSWorkflowProperty.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -32,7 +32,7 @@\n public class OSWorkflowProperty extends AbstractBaseBean {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n     private Long id;\n     @Column(nullable = false)\n     private Long workflowEntryId;"},{"sha":"79f05f9507d5f445b38dc50a29d8b0f939450912","filename":"core/src/main/java/org/syncope/core/persistence/beans/SchemaMapping.java","status":"modified","additions":19,"deletions":15,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -14,6 +14,7 @@\n  */\n package org.syncope.core.persistence.beans;\n \n+import javax.persistence.Basic;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n@@ -56,7 +57,7 @@ public class SchemaMapping extends AbstractBaseBean {\n      * Target resource that has fields to be mapped over user attribute schemas.\n      */\n     @ManyToOne(fetch = FetchType.EAGER)\n-    private Resource resource;\n+    private TargetResource resource;\n     /**\n      * Target resource's field to be mapped.\n      */\n@@ -66,34 +67,37 @@ public class SchemaMapping extends AbstractBaseBean {\n      * Specify if the mapped target resource's field is the key.\n      */\n     @Column(nullable = false)\n-    private boolean accountid;\n+    @Basic\n+    private Character accountid;\n     /**\n      * Specify if the mapped target resource's field is the password.\n      */\n     @Column(nullable = false)\n-    private boolean password;\n+    @Basic\n+    private Character password;\n     /**\n      * Specify if the mapped target resource's field is nullable.\n      */\n     @Column(nullable = false)\n-    private boolean nullable;\n+    @Basic\n+    private Character nullable;\n \n     public SchemaMapping() {\n-        accountid = false;\n-        password = false;\n-        nullable = true;\n+        accountid = 'F';\n+        password = 'F';\n+        nullable = 'T';\n     }\n \n     public Long getId() {\n         return id;\n     }\n \n     public boolean isAccountid() {\n-        return accountid;\n+        return accountid != null && accountid == 'T';\n     }\n \n     public void setAccountid(boolean accountid) {\n-        this.accountid = accountid;\n+        this.accountid = accountid ? 'T' : 'F';\n     }\n \n     public String getField() {\n@@ -105,26 +109,26 @@ public void setField(String field) {\n     }\n \n     public boolean isNullable() {\n-        return nullable;\n+        return nullable != null && nullable == 'T';\n     }\n \n     public void setNullable(boolean nullable) {\n-        this.nullable = nullable;\n+        this.nullable = nullable ? 'T' : 'F';\n     }\n \n     public boolean isPassword() {\n-        return password;\n+        return password != null && password == 'T';\n     }\n \n     public void setPassword(boolean password) {\n-        this.password = password;\n+        this.password = password ? 'T' : 'F';\n     }\n \n-    public Resource getResource() {\n+    public TargetResource getResource() {\n         return resource;\n     }\n \n-    public void setResource(Resource resource) {\n+    public void setResource(TargetResource resource) {\n         this.resource = resource;\n     }\n "},{"sha":"18d5707040a9daebd609c8fdd15138cd684c1c6f","filename":"core/src/main/java/org/syncope/core/persistence/beans/TargetResource.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -29,7 +29,7 @@\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n \n @Entity\n-public class Resource extends AbstractBaseBean {\n+public class TargetResource extends AbstractBaseBean {\n \n     /**\n      * The resource identifier is the name.","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/Resource.java"},{"sha":"f686c87480a8e8ce9e2965b5907cc6bb57dca674","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -30,7 +30,7 @@\n import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractAttribute;\n import org.syncope.core.persistence.beans.AbstractDerivedAttribute;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n \n@@ -40,7 +40,7 @@\n public class Membership extends AbstractAttributable {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n     private Long id;\n     @ManyToOne\n     private SyncopeUser syncopeUser;\n@@ -54,7 +54,7 @@ public class Membership extends AbstractAttributable {\n     public Membership() {\n         attributes = new ArrayList<MembershipAttribute>();\n         derivedAttributes = new ArrayList<MembershipDerivedAttribute>();\n-        resources = Collections.EMPTY_SET;\n+        targetResources = Collections.EMPTY_SET;\n     }\n \n     public Long getId() {\n@@ -127,21 +127,21 @@ public void setDerivedAttributes(\n     }\n \n     @Override\n-    public boolean addResource(Resource resource) {\n+    public boolean addTargetResource(TargetResource resource) {\n         return false;\n     }\n \n     @Override\n-    public boolean removeResource(Resource resource) {\n+    public boolean removeTargetResource(TargetResource resource) {\n         return false;\n     }\n \n     @Override\n-    public Set<Resource> getResources() {\n+    public Set<TargetResource> getTargetResources() {\n         return Collections.EMPTY_SET;\n     }\n \n     @Override\n-    public void setResources(Set<Resource> resources) {\n+    public void setResources(Set<TargetResource> resources) {\n     }\n }"},{"sha":"a95928a3a8b43cbbd879c98ff623281638b5c21b","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/MembershipDerivedSchema.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembershipDerivedSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembershipDerivedSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembershipDerivedSchema.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -20,6 +20,7 @@\n import java.util.List;\n import java.util.Set;\n import javax.persistence.Entity;\n+import javax.persistence.JoinTable;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import org.syncope.core.persistence.beans.AbstractDerivedAttribute;\n@@ -31,6 +32,7 @@\n public class MembershipDerivedSchema extends AbstractDerivedSchema {\n \n     @ManyToMany\n+    @JoinTable(name = \"MembershipSchemaDerivation\")\n     private Set<MembershipSchema> schemas;\n     @OneToMany(mappedBy = \"derivedSchema\")\n     private List<MembershipDerivedAttribute> derivedAttributes;"},{"sha":"38faf9dc16a2708cff346a8c9a9366f362529c7f","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RoleDerivedSchema.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleDerivedSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleDerivedSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleDerivedSchema.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -20,6 +20,7 @@\n import java.util.List;\n import java.util.Set;\n import javax.persistence.Entity;\n+import javax.persistence.JoinTable;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import org.syncope.core.persistence.beans.AbstractDerivedAttribute;\n@@ -31,6 +32,7 @@\n public class RoleDerivedSchema extends AbstractDerivedSchema {\n \n     @ManyToMany\n+    @JoinTable(name = \"RoleSchemaDerivation\")\n     private Set<RoleSchema> schemas;\n     @OneToMany(mappedBy = \"derivedSchema\")\n     private List<RoleDerivedAttribute> derivedAttributes;"},{"sha":"2695d6c1ee2d5aa3c2150708fa6f5e9d6b194f14","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":13,"deletions":7,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -18,6 +18,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n@@ -42,7 +43,7 @@\n public class SyncopeRole extends AbstractAttributable {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n     private Long id;\n     private String name;\n     @ManyToOne(optional = true)\n@@ -55,14 +56,18 @@ public class SyncopeRole extends AbstractAttributable {\n     private List<RoleAttribute> attributes;\n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     private List<RoleDerivedAttribute> derivedAttributes;\n-    private boolean inheritAttributes;\n-    private boolean inheritDerivedAttributes;\n+    @Basic\n+    private Character inheritAttributes;\n+    @Basic\n+    private Character inheritDerivedAttributes;\n \n     public SyncopeRole() {\n         memberships = new ArrayList<Membership>();\n         entitlements = new HashSet<Entitlement>();\n         attributes = new ArrayList<RoleAttribute>();\n         derivedAttributes = new ArrayList<RoleDerivedAttribute>();\n+        inheritAttributes = 'F';\n+        inheritDerivedAttributes = 'F';\n     }\n \n     public Long getId() {\n@@ -174,18 +179,19 @@ public void setDerivedAttributes(\n     }\n \n     public boolean isInheritAttributes() {\n-        return inheritAttributes;\n+        return inheritAttributes != null && inheritAttributes == 'T';\n     }\n \n     public void setInheritAttributes(boolean inheritAttributes) {\n-        this.inheritAttributes = inheritAttributes;\n+        this.inheritAttributes = inheritAttributes ? 'T' : 'F';\n     }\n \n     public boolean isInheritDerivedAttributes() {\n-        return inheritDerivedAttributes;\n+        return inheritDerivedAttributes != null\n+                && inheritDerivedAttributes == 'T';\n     }\n \n     public void setInheritDerivedAttributes(boolean inheritDerivedAttributes) {\n-        this.inheritDerivedAttributes = inheritDerivedAttributes;\n+        this.inheritDerivedAttributes = inheritDerivedAttributes ? 'T' : 'F';\n     }\n }"},{"sha":"b02f3a80d8209263791f5b4ddfe89c40cffccd9c","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -53,7 +53,7 @@ public class SyncopeUser extends AbstractAttributable {\n         }\n     }\n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n     private Long id;\n     @Basic\n     @Lob"},{"sha":"3eacd2eec1660f3e0efdc4316aa4bc089ae14e3c","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UserDerivedSchema.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserDerivedSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserDerivedSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserDerivedSchema.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -20,6 +20,7 @@\n import java.util.List;\n import java.util.Set;\n import javax.persistence.Entity;\n+import javax.persistence.JoinTable;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import org.syncope.core.persistence.beans.AbstractDerivedAttribute;\n@@ -31,6 +32,7 @@\n public class UserDerivedSchema extends AbstractDerivedSchema {\n \n     @ManyToMany\n+    @JoinTable(name = \"UserSchemaDerivation\")\n     private Set<UserSchema> schemas;\n     @OneToMany(mappedBy = \"derivedSchema\")\n     private List<UserDerivedAttribute> derivedAttributes;"},{"sha":"bfe92745a284a39aeb14e3187f9d1435d37503b2","filename":"core/src/main/java/org/syncope/core/persistence/dao/ResourceDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -15,15 +15,15 @@\n package org.syncope.core.persistence.dao;\n \n import java.util.List;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n \n public interface ResourceDAO extends DAO {\n \n-    Resource find(String name);\n+    TargetResource find(String name);\n \n-    List<Resource> findAll();\n+    List<TargetResource> findAll();\n \n-    Resource save(Resource resource);\n+    TargetResource save(TargetResource resource);\n \n     void delete(String name);\n }"},{"sha":"b81ac0b8d6470bbab4190274815211397da3cc8c","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -21,7 +21,7 @@\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -37,27 +37,27 @@ public class ResourceDAOImpl extends AbstractDAOImpl\n \n     @Override\n     @Transactional(readOnly = true)\n-    public Resource find(String name) {\n-        return entityManager.find(Resource.class, name);\n+    public TargetResource find(String name) {\n+        return entityManager.find(TargetResource.class, name);\n     }\n \n     @Override\n     @Transactional(readOnly = true)\n-    public List<Resource> findAll() {\n+    public List<TargetResource> findAll() {\n         Query query = entityManager.createQuery(\n-                \"SELECT e FROM Resource e\");\n+                \"SELECT e FROM TargetResource e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public Resource save(Resource resource) {\n+    public TargetResource save(TargetResource resource) {\n         return entityManager.merge(resource);\n     }\n \n     @Override\n     public void delete(String name) {\n \n-        Resource resource = find(name);\n+        TargetResource resource = find(name);\n         if (resource == null) {\n             return;\n         }\n@@ -74,21 +74,21 @@ public void delete(String name) {\n         Set<SyncopeUser> users = resource.getUsers();\n         if (users != null && !users.isEmpty()) {\n             for (SyncopeUser user : users) {\n-                user.removeResource(resource);\n+                user.removeTargetResource(resource);\n             }\n         }\n         resource.setUsers(null);\n \n         Set<SyncopeRole> roles = resource.getRoles();\n         if (roles != null && !roles.isEmpty()) {\n             for (SyncopeRole role : roles) {\n-                role.removeResource(resource);\n+                role.removeTargetResource(resource);\n             }\n         }\n         resource.setRoles(null);\n \n         ConnectorInstance connector = resource.getConnector();\n-        List<Resource> resources = null;\n+        List<TargetResource> resources = null;\n         if (connector != null) {\n             resources = connector.getResources();\n         }"},{"sha":"ab9491908a5307373da8d630c1618f4f86aab5f5","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaMappingDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -18,7 +18,7 @@\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.membership.MembershipSchema;\n import org.syncope.core.persistence.beans.role.RoleSchema;\n@@ -70,7 +70,7 @@ public void delete(Long id) {\n         }\n         mapping.setMembershipSchema(null);\n \n-        Resource resource = mapping.getResource();\n+        TargetResource resource = mapping.getResource();\n         if (resource != null && resource.getMappings() != null) {\n             resource.getMappings().remove(mapping);\n         }"},{"sha":"7a00b4a01298868db8d1ea723b07eeecf605a29f","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -30,7 +30,7 @@\n import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n import org.springframework.context.ConfigurableApplicationContext;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -70,12 +70,12 @@ public Set<String> create(SyncopeUser user) throws PropagationException {\n     public Set<String> create(SyncopeUser user, Set<String> syncResourceNames)\n             throws PropagationException {\n \n-        Set<Resource> resources = new HashSet<Resource>();\n-        for (Resource resource : user.getResources()) {\n+        Set<TargetResource> resources = new HashSet<TargetResource>();\n+        for (TargetResource resource : user.getTargetResources()) {\n             resources.add(resource);\n         }\n         for (Membership membership : user.getMemberships()) {\n-            resources.addAll(membership.getResources());\n+            resources.addAll(membership.getTargetResources());\n         }\n \n         ResourceOperations resourceOperations = new ResourceOperations();\n@@ -133,7 +133,7 @@ private Set<String> provision(SyncopeUser user,\n             syncResourceNames = Collections.EMPTY_SET;\n         }\n         for (Type type : ResourceOperations.Type.values()) {\n-            for (Resource resource : resourceOperations.get(type)) {\n+            for (TargetResource resource : resourceOperations.get(type)) {\n                 if (syncResourceNames.contains(resource.getName())) {\n                     syncOperations.add(type, resource);\n                 } else {\n@@ -148,7 +148,7 @@ private Set<String> provision(SyncopeUser user,\n                     + \" with user \" + user);\n         }\n         for (Type type : ResourceOperations.Type.values()) {\n-            for (Resource resource : syncOperations.get(type)) {\n+            for (TargetResource resource : syncOperations.get(type)) {\n                 try {\n                     propagate(user, resource, type);\n                     provisioned.add(resource.getName());\n@@ -169,7 +169,7 @@ private Set<String> provision(SyncopeUser user,\n                     + asyncOperations + \" with user \" + user);\n         }\n         for (Type type : ResourceOperations.Type.values()) {\n-            for (Resource resource : asyncOperations.get(type)) {\n+            for (TargetResource resource : asyncOperations.get(type)) {\n                 try {\n                     propagate(user, resource, type);\n                     provisioned.add(resource.getName());\n@@ -197,7 +197,7 @@ private Set<String> provision(SyncopeUser user,\n      * exist.\n      * @throws IllegalStateException if propagation fails.\n      */\n-    private void propagate(SyncopeUser user, Resource resource, Type type)\n+    private void propagate(SyncopeUser user, TargetResource resource, Type type)\n             throws NoSuchBeanDefinitionException, IllegalStateException {\n \n         ConnectorInstance connectorInstance = resource.getConnector();"},{"sha":"240a43a96e09279b60847246a5f1f66e158d42b0","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ResourceOperations.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -17,22 +17,22 @@\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.Set;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n \n public class ResourceOperations {\n \n     public enum Type {\n \n         CREATE, UPDATE, DELETE\n     }\n-    private Set<Resource> toBeCreated;\n-    private Set<Resource> toBeUpdated;\n-    private Set<Resource> toBeDeleted;\n+    private Set<TargetResource> toBeCreated;\n+    private Set<TargetResource> toBeUpdated;\n+    private Set<TargetResource> toBeDeleted;\n \n     public ResourceOperations() {\n-        toBeCreated = new HashSet<Resource>();\n-        toBeUpdated = new HashSet<Resource>();\n-        toBeDeleted = new HashSet<Resource>();\n+        toBeCreated = new HashSet<TargetResource>();\n+        toBeUpdated = new HashSet<TargetResource>();\n+        toBeDeleted = new HashSet<TargetResource>();\n     }\n \n     /**\n@@ -41,16 +41,16 @@ public ResourceOperations() {\n      * on any resource for which an update is requested.\n      */\n     public void purge() {\n-        for (Resource resource : toBeDeleted) {\n+        for (TargetResource resource : toBeDeleted) {\n             toBeCreated.remove(resource);\n             toBeUpdated.remove(resource);\n         }\n-        for (Resource resource : toBeUpdated) {\n+        for (TargetResource resource : toBeUpdated) {\n             toBeCreated.remove(resource);\n         }\n     }\n \n-    public boolean add(Type type, Resource resource) {\n+    public boolean add(Type type, TargetResource resource) {\n         boolean result = false;\n \n         switch (type) {\n@@ -65,7 +65,7 @@ public boolean add(Type type, Resource resource) {\n         return result;\n     }\n \n-    public boolean remove(Type type, Resource resource) {\n+    public boolean remove(Type type, TargetResource resource) {\n         boolean result = false;\n \n         switch (type) {\n@@ -83,8 +83,8 @@ public boolean remove(Type type, Resource resource) {\n         return result;\n     }\n \n-    public Set<Resource> get(Type type) {\n-        Set<Resource> result = Collections.EMPTY_SET;\n+    public Set<TargetResource> get(Type type) {\n+        Set<TargetResource> result = Collections.EMPTY_SET;\n \n         switch (type) {\n             case CREATE:\n@@ -101,7 +101,7 @@ public Set<Resource> get(Type type) {\n         return result;\n     }\n \n-    public void set(Type type, Set<Resource> resources) {\n+    public void set(Type type, Set<TargetResource> resources) {\n         switch (type) {\n             case CREATE:\n                 toBeCreated.clear();"},{"sha":"d933b2379629ba5d3c2ea5adfba04a19948cc0b9","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -32,7 +32,7 @@\n import org.syncope.client.to.SchemaMappingTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n@@ -79,14 +79,14 @@ public ResourceTO create(HttpServletResponse response,\n         ResourceDataBinder binder =\n                 new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n \n-        Resource actual = null;\n+        TargetResource actual = null;\n \n         try {\n             if (log.isDebugEnabled()) {\n                 log.debug(\"Verify that resource dosn't exist\");\n             }\n \n-            Resource resource = null;\n+            TargetResource resource = null;\n \n             if (resourceDAO.find(resourceTO.getName()) != null) {\n                 SyncopeClientException ex = new SyncopeClientException(\n@@ -162,7 +162,7 @@ public ResourceTO update(HttpServletResponse response,\n             log.debug(\"Update request received\");\n         }\n \n-        Resource resource = null;\n+        TargetResource resource = null;\n \n         if (resourceTO != null && resourceTO.getName() != null) {\n             resource = resourceDAO.find(resourceTO.getName());\n@@ -179,7 +179,7 @@ public ResourceTO update(HttpServletResponse response,\n         ResourceDataBinder binder =\n                 new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n \n-        Resource actual = null;\n+        TargetResource actual = null;\n \n         try {\n             if (log.isDebugEnabled()) {\n@@ -250,7 +250,7 @@ public void delete(HttpServletResponse response,\n             @PathVariable(\"resourceName\") String resourceName)\n             throws NotFoundException {\n \n-        Resource resource = resourceDAO.find(resourceName);\n+        TargetResource resource = resourceDAO.find(resourceName);\n \n         if (resource == null) {\n \n@@ -276,7 +276,7 @@ public ResourceTO read(HttpServletResponse response,\n         ResourceDataBinder binder =\n                 new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n \n-        Resource resource = resourceDAO.find(resourceName);\n+        TargetResource resource = resourceDAO.find(resourceName);\n \n         if (resource == null) {\n \n@@ -297,7 +297,7 @@ public ResourceTOs list(HttpServletResponse response) {\n         ResourceDataBinder binder =\n                 new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n \n-        List<Resource> resources = resourceDAO.findAll();\n+        List<TargetResource> resources = resourceDAO.findAll();\n \n         if (resources == null) {\n \n@@ -325,7 +325,7 @@ public SchemaMappingTOs createMappings(HttpServletResponse response,\n \n         try {\n \n-            Resource resource = null;\n+            TargetResource resource = null;\n             if (resourceName != null) {\n                 resource = resourceDAO.find(resourceName);\n             }\n@@ -414,7 +414,7 @@ public void deleteMappings(HttpServletResponse response,\n             @PathVariable(\"resourceName\") String resourceName)\n             throws NotFoundException {\n \n-        Resource resource = resourceDAO.find(resourceName);\n+        TargetResource resource = resourceDAO.find(resourceName);\n \n         if (resource == null) {\n \n@@ -445,7 +445,7 @@ public SchemaMappingTOs getResourceMapping(HttpServletResponse response,\n             @PathVariable(\"resourceName\") String resourceName)\n             throws SyncopeClientCompositeErrorException {\n \n-        Resource resource = null;\n+        TargetResource resource = null;\n         if (resourceName != null) {\n             resource = resourceDAO.find(resourceName);\n         }\n@@ -511,14 +511,14 @@ public SchemaMappingTOs getRoleResourcesMapping(HttpServletResponse response,\n \n         SchemaMappingTOs roleMappings = new SchemaMappingTOs();\n \n-        Set<Resource> resources = role.getResources();\n+        Set<TargetResource> resources = role.getTargetResources();\n \n         ResourceDataBinder binder =\n                 new ResourceDataBinder(schemaDAO, connectorInstanceDAO);\n \n         SchemaMappingTOs resourceMappings = null;\n \n-        for (Resource resource : resources) {\n+        for (TargetResource resource : resources) {\n             if (log.isDebugEnabled()) {\n                 log.debug(\"Ask for the mappings of '\" + resource + \"'\");\n             }"},{"sha":"d0899c0a78888569dfb1c579747f03915c64a400","filename":"core/src/main/java/org/syncope/core/rest/controller/RoleController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -56,7 +56,7 @@ public RoleTO create(HttpServletRequest request,\n \n         SyncopeRole role = null;\n         try {\n-            role = roleDataBinder.createSyncopeRole(roleTO);\n+            role = roleDataBinder.create(roleTO);\n         } catch (SyncopeClientCompositeErrorException e) {\n             log.error(\"Could not create for \" + roleTO, e);\n "},{"sha":"4ad7e256519df3440cd3e760b7d6dfb5c60c034e","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -50,7 +50,7 @@\n import org.syncope.client.to.WorkflowActionsTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.propagation.PropagationManager;\n import org.syncope.core.persistence.propagation.ResourceOperations;\n@@ -294,14 +294,14 @@ private Set<String> getSyncResourceNames(SyncopeUser user,\n \n         Set<String> syncResourceNames = new HashSet<String>();\n \n-        for (Resource resource : user.getResources()) {\n+        for (TargetResource resource : user.getTargetResources()) {\n             if (syncResources.contains(resource.getName())) {\n                 syncResourceNames.add(resource.getName());\n             }\n         }\n         for (SyncopeRole role : user.getRoles()) {\n             if (syncRoles.contains(role.getId())) {\n-                for (Resource resource : role.getResources()) {\n+                for (TargetResource resource : role.getTargetResources()) {\n                     syncResourceNames.add(resource.getName());\n                 }\n             }\n@@ -379,7 +379,7 @@ public UserTO create(HttpServletResponse response,\n             }\n         }\n \n-        SyncopeUser user = userDataBinder.createSyncopeUser(userTO);\n+        SyncopeUser user = userDataBinder.create(userTO);\n         user.setWorkflowId(workflowId);\n         user = syncopeUserDAO.save(user);\n "},{"sha":"6f3f1c5277473e06bc9b480bb9fbce19e87fc1e6","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -36,7 +36,7 @@\n import org.syncope.core.persistence.beans.AbstractDerivedAttribute;\n import org.syncope.core.persistence.beans.AbstractDerivedSchema;\n import org.syncope.core.persistence.beans.AbstractSchema;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -115,8 +115,8 @@ private <T extends AbstractDerivedSchema> AbstractDerivedSchema getDerivedSchema\n         return derivedSchema;\n     }\n \n-    private Resource getResource(String resourceName) {\n-        Resource resource = resourceDAO.find(resourceName);\n+    private TargetResource getResource(String resourceName) {\n+        TargetResource resource = resourceDAO.find(resourceName);\n \n         if (resource == null) {\n             if (log.isDebugEnabled()) {\n@@ -346,7 +346,7 @@ protected ResourceOperations fill(\n         }\n \n         // 5. resources to be removed\n-        Resource resource = null;\n+        TargetResource resource = null;\n         for (String resourceToBeRemoved :\n                 attributableMod.getResourcesToBeRemoved()) {\n \n@@ -355,7 +355,7 @@ protected ResourceOperations fill(\n             if (resource != null) {\n                 resourceOperations.add(Type.DELETE, resource);\n \n-                attributable.removeResource(resource);\n+                attributable.removeTargetResource(resource);\n \n                 if (attributableUtil == attributableUtil.USER) {\n                     resource.removeUser((SyncopeUser) attributable);\n@@ -375,7 +375,7 @@ protected ResourceOperations fill(\n             if (resource != null) {\n                 resourceOperations.add(Type.CREATE, resource);\n \n-                attributable.addResource(resource);\n+                attributable.addTargetResource(resource);\n \n                 if (attributableUtil == attributableUtil.USER) {\n                     resource.addUser((SyncopeUser) attributable);\n@@ -459,12 +459,12 @@ protected AbstractAttributable fill(AbstractAttributable attributable,\n         }\n \n         // 3. resources\n-        Resource resource = null;\n+        TargetResource resource = null;\n         for (String resourceName : attributableTO.getResources()) {\n             resource = getResource(resourceName);\n \n             if (resource != null) {\n-                attributable.addResource(resource);\n+                attributable.addTargetResource(resource);\n \n                 if (attributableUtil == attributableUtil.USER) {\n                     resource.addUser((SyncopeUser) attributable);\n@@ -488,7 +488,7 @@ protected AbstractAttributableTO fillTO(\n             AbstractAttributableTO abstractAttributableTO,\n             Collection<? extends AbstractAttribute> attributes,\n             Collection<? extends AbstractDerivedAttribute> derivedAttributes,\n-            Collection<Resource> resources) {\n+            Collection<TargetResource> resources) {\n \n         AttributeTO attributeTO = null;\n         for (AbstractAttribute attribute : attributes) {\n@@ -511,7 +511,7 @@ protected AbstractAttributableTO fillTO(\n             abstractAttributableTO.addDerivedAttribute(attributeTO);\n         }\n \n-        for (Resource resource : resources) {\n+        for (TargetResource resource : resources) {\n             abstractAttributableTO.addResource(resource.getName());\n         }\n "},{"sha":"a96b38ff20ed07fa9c7177561651ad7ee2185f4a","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -30,7 +30,7 @@\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.RoleSchema;\n import org.syncope.core.persistence.beans.user.UserSchema;\n@@ -59,13 +59,13 @@ public ResourceDataBinder(\n         this.connectorInstanceDAO = connectorInstanceDAO;\n     }\n \n-    public Resource getResource(ResourceTO resourceTO)\n+    public TargetResource getResource(ResourceTO resourceTO)\n             throws SyncopeClientCompositeErrorException {\n \n-        return getResource(new Resource(), resourceTO);\n+        return getResource(new TargetResource(), resourceTO);\n     }\n \n-    public Resource getResource(Resource resource, ResourceTO resourceTO)\n+    public TargetResource getResource(TargetResource resource, ResourceTO resourceTO)\n             throws SyncopeClientCompositeErrorException {\n \n         SyncopeClientCompositeErrorException compositeErrorException =\n@@ -113,20 +113,20 @@ public Resource getResource(Resource resource, ResourceTO resourceTO)\n         return resource;\n     }\n \n-    public ResourceTOs getResourceTOs(Collection<Resource> resources) {\n+    public ResourceTOs getResourceTOs(Collection<TargetResource> resources) {\n \n         if (resources == null) return null;\n \n         ResourceTOs resourceTOs = new ResourceTOs();\n \n-        for (Resource resource : resources) {\n+        for (TargetResource resource : resources) {\n             resourceTOs.addResource(getResourceTO(resource));\n         }\n \n         return resourceTOs;\n     }\n \n-    public ResourceTO getResourceTO(Resource resource) {\n+    public ResourceTO getResourceTO(TargetResource resource) {\n \n         if (resource == null) return null;\n \n@@ -148,7 +148,7 @@ public ResourceTO getResourceTO(Resource resource) {\n     }\n \n     public List<SchemaMapping> getSchemaMappings(\n-            Resource resource,\n+            TargetResource resource,\n             SchemaMappingTOs mappings) {\n \n         if (mappings == null) return null;\n@@ -165,7 +165,7 @@ public List<SchemaMapping> getSchemaMappings(\n     }\n \n     public SchemaMapping getSchemaMapping(\n-            Resource resource,\n+            TargetResource resource,\n             SchemaMappingTO mapping)\n             throws SyncopeClientCompositeErrorException {\n "},{"sha":"0e15bb557d16bd1425c7c85a88f9b1748b5d7138","filename":"core/src/main/java/org/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -28,7 +28,7 @@\n @Component\n public class RoleDataBinder extends AbstractAttributableDataBinder {\n \n-    public SyncopeRole createSyncopeRole(RoleTO roleTO)\n+    public SyncopeRole create(RoleTO roleTO)\n             throws SyncopeClientCompositeErrorException {\n \n         SyncopeRole role = new SyncopeRole();\n@@ -131,7 +131,7 @@ public RoleTO getRoleTO(SyncopeRole role) {\n         }\n \n         roleTO = (RoleTO) fillTO(roleTO, role.getAttributes(),\n-                role.getDerivedAttributes(), role.getResources());\n+                role.getDerivedAttributes(), role.getTargetResources());\n \n         if (role.isInheritAttributes() || role.isInheritDerivedAttributes()) {\n             roleTO = (RoleTO) fillTO(roleTO,"},{"sha":"828c25e96f493d5a9a8cd515764078bd4a86298f","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -30,7 +30,7 @@\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -40,7 +40,7 @@\n @Component\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n-    public SyncopeUser createSyncopeUser(UserTO userTO)\n+    public SyncopeUser create(UserTO userTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException {\n \n         SyncopeClientCompositeErrorException scce =\n@@ -158,8 +158,8 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n                             + membershipToBeRemovedId);\n                 }\n             } else {\n-                for (Resource resource :\n-                        membership.getSyncopeRole().getResources()) {\n+                for (TargetResource resource :\n+                        membership.getSyncopeRole().getTargetResources()) {\n \n                     resourceOperations.add(ResourceOperations.Type.DELETE,\n                             resource);\n@@ -230,7 +230,7 @@ public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n         userTO.setStatus(status);\n \n         userTO = (UserTO) fillTO(userTO, user.getAttributes(),\n-                user.getDerivedAttributes(), user.getResources());\n+                user.getDerivedAttributes(), user.getTargetResources());\n \n         MembershipTO membershipTO = null;\n         for (Membership membership : user.getMemberships()) {\n@@ -241,7 +241,7 @@ public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n             membershipTO = (MembershipTO) fillTO(membershipTO,\n                     membership.getAttributes(),\n                     membership.getDerivedAttributes(),\n-                    membership.getResources());\n+                    membership.getTargetResources());\n \n             userTO.addMembership(membershipTO);\n         }"},{"sha":"2a9266a5f740f52f8c82221ca7f530856e89072f","filename":"core/src/main/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -33,25 +33,25 @@\n     <SyncopeConfiguration confKey=\"identityconnectors.bundle.directory\"\n                           confValue=\"/tmp/bundles\"/>\n \n-    <UserSchema name=\"surname\" type=\"String\" virtual=\"false\"\n-                mandatory=\"true\" multivalue=\"false\" uniquevalue=\"false\"/>\n-    <UserSchema name=\"firstname\" type=\"String\" virtual=\"false\"\n-                mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"/>\n-    <UserSchema name=\"email\" type=\"String\" virtual=\"false\"\n-                mandatory=\"false\" multivalue=\"true\" uniquevalue=\"false\"\n+    <UserSchema name=\"surname\" type=\"String\" virtual=\"F\"\n+                mandatory=\"T\" multivalue=\"F\" uniquevalue=\"F\"/>\n+    <UserSchema name=\"firstname\" type=\"String\" virtual=\"F\"\n+                mandatory=\"F\" multivalue=\"F\" uniquevalue=\"F\"/>\n+    <UserSchema name=\"email\" type=\"String\" virtual=\"F\"\n+                mandatory=\"F\" multivalue=\"T\" uniquevalue=\"F\"\n                 validatorClass=\"org.syncope.core.persistence.validation.EmailAddressValidator\"/>\n                \n     <UserDerivedSchema name=\"username\" expression=\"firstname + '.' + surname\"/>\n \n-    <UserDerivedSchema_UserSchema derivedSchemas_name=\"username\"\n-                                  schemas_name=\"firstname\"/>\n-    <UserDerivedSchema_UserSchema derivedSchemas_name=\"username\"\n-                                  schemas_name=\"surname\"/>\n+    <UserSchemaDerivation derivedSchemas_name=\"username\"\n+                          schemas_name=\"firstname\"/>\n+    <UserSchemaDerivation derivedSchemas_name=\"username\"\n+                          schemas_name=\"surname\"/>\n \n-    <SyncopeRole id=\"0\" name=\"/\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n+    <SyncopeRole id=\"0\" name=\"/\" inheritAttributes=\"F\" inheritDerivedAttributes=\"F\"/>\n \n-    <MembershipSchema name=\"subscriptionDate\" type=\"Date\" virtual=\"false\"\n-                      mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"\n+    <MembershipSchema name=\"subscriptionDate\" type=\"Date\" virtual=\"F\"\n+                      mandatory=\"F\" multivalue=\"F\" uniquevalue=\"F\"\n                       conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n \n </dataset>"},{"sha":"a47e87fb41f4d832515bd075a8c04f07754e48ba","filename":"core/src/main/resources/org/syncope/core/persistence/db.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdb.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdb.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdb.properties?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -16,6 +16,6 @@ hibernate.connection.url=jdbc:postgresql://localhost:5432/syncope\n hibernate.connection.username=syncope\n hibernate.connection.password=syncope\n hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\n-#hibernate.dialect=org.hibernate.dialect.OracleDialect\n+#hibernate.dialect=org.hibernate.dialect.Oracle10gDialect\n dbUnitDataTypeFactory=org.dbunit.ext.postgresql.PostgresqlDataTypeFactory\n #dbUnitDataTypeFactory=org.dbunit.ext.oracle.Oracle10DataTypeFactory"},{"sha":"723ee9844e25ff9d38c2135335ab1de929426397","filename":"core/src/test/java/org/syncope/core/test/persistence/ResourceDAOTest.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FResourceDAOTest.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -21,7 +21,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.dao.ResourceDAO;\n \n@@ -33,7 +33,7 @@ public class ResourceDAOTest extends AbstractTest {\n \n     @Test\n     public final void findById() {\n-        Resource resource =\n+        TargetResource resource =\n                 resourceDAO.find(\"ws-target-resource-1\");\n \n         assertNotNull(\"findById did not work\", resource);\n@@ -64,24 +64,24 @@ public final void findById() {\n \n     @Test\n     public final void save() throws ClassNotFoundException {\n-        Resource resource = new Resource();\n+        TargetResource resource = new TargetResource();\n         resource.setName(\"ws-target-resource-basic-save\");\n \n         // save the resource\n-        Resource actual = resourceDAO.save(resource);\n+        TargetResource actual = resourceDAO.save(resource);\n \n         assertNotNull(actual);\n     }\n \n     @Test\n     public final void delete() {\n-        Resource resource = resourceDAO.find(\"ws-target-resource-2\");\n+        TargetResource resource = resourceDAO.find(\"ws-target-resource-2\");\n \n         assertNotNull(\"find to delete did not work\", resource);\n \n         resourceDAO.delete(resource.getName());\n \n-        Resource actual = resourceDAO.find(\"ws-target-resource-2\");\n+        TargetResource actual = resourceDAO.find(\"ws-target-resource-2\");\n         assertNull(\"delete did not work\", actual);\n     }\n }"},{"sha":"a0ca7cce6c12f3b82ff97e58b449d95a86bd146a","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/PropagationManagerTest.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FPropagationManagerTest.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -24,7 +24,7 @@\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.propagation.PropagationException;\n import org.syncope.core.persistence.propagation.PropagationManager;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n@@ -47,7 +47,7 @@ public final void create() {\n         SyncopeUser user = syncopeUserDAO.find(1L);\n         assertNotNull(user);\n \n-        Resource resource = resourceDAO.find(\"ws-target-resource-1\");\n+        TargetResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n         user.setResources(Collections.singleton(resource));\n@@ -67,7 +67,7 @@ public final void update() {\n         SyncopeUser user = syncopeUserDAO.find(2L);\n         assertNotNull(user);\n \n-        Resource resource = resourceDAO.find(\"ws-target-resource-1\");\n+        TargetResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n         user.setResources(Collections.singleton(resource));\n@@ -91,7 +91,7 @@ public final void createWithException() {\n         SyncopeUser user = syncopeUserDAO.find(3L);\n         assertNotNull(user);\n \n-        Resource resource = resourceDAO.find(\"ws-target-resource-2\");\n+        TargetResource resource = resourceDAO.find(\"ws-target-resource-2\");\n         assertNotNull(resource);\n \n         user.setResources(Collections.singleton(resource));\n@@ -111,7 +111,7 @@ public final void updateWithException() {\n         SyncopeUser user = syncopeUserDAO.find(4L);\n         assertNotNull(user);\n \n-        Resource resource = resourceDAO.find(\"ws-target-resource-2\");\n+        TargetResource resource = resourceDAO.find(\"ws-target-resource-2\");\n         assertNotNull(resource);\n \n         user.setResources(Collections.singleton(resource));"},{"sha":"f3004489d736e3c632320dc30ee980f8e014d669","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/ResourceTest.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FResourceTest.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -26,7 +26,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.RoleSchema;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -58,7 +58,7 @@ public class ResourceTest extends AbstractTest {\n \n     @Test\n     public final void save() throws ClassNotFoundException {\n-        Resource resource = new Resource();\n+        TargetResource resource = new TargetResource();\n         resource.setName(\"ws-target-resource-save\");\n \n         // specify the connector\n@@ -101,10 +101,10 @@ public final void save() throws ClassNotFoundException {\n         assertNotNull(\"user not found\", user);\n \n         resource.setUsers(Collections.singleton(user));\n-        user.addResource(resource);\n+        user.addTargetResource(resource);\n \n         // save the resource\n-        Resource actual = resourceDAO.save(resource);\n+        TargetResource actual = resourceDAO.save(resource);\n \n         assertNotNull(actual);\n \n@@ -120,7 +120,7 @@ public final void save() throws ClassNotFoundException {\n \n         assertNotNull(connector);\n \n-        List<Resource> resources = connector.getResources();\n+        List<TargetResource> resources = connector.getResources();\n \n         assertNotNull(resources);\n \n@@ -141,7 +141,7 @@ public final void save() throws ClassNotFoundException {\n     @Test\n     public final void delete() {\n \n-        Resource resource = resourceDAO.find(\"ws-target-resource-2\");\n+        TargetResource resource = resourceDAO.find(\"ws-target-resource-2\");\n \n         assertNotNull(\"find to delete did not work\", resource);\n \n@@ -188,7 +188,7 @@ public final void delete() {\n         resourceDAO.flush();\n \n         // resource must be removed\n-        Resource actual = resourceDAO.find(\"ws-target-resource-2\");\n+        TargetResource actual = resourceDAO.find(\"ws-target-resource-2\");\n         assertNull(\"delete did not work\", actual);\n \n         // mappings must be removed\n@@ -199,12 +199,12 @@ public final void delete() {\n \n         // resource must be not referenced any more from users\n         SyncopeUser actualUser = null;\n-        Collection<Resource> resources = null;\n+        Collection<TargetResource> resources = null;\n         for (Long id : userIds) {\n             actualUser = syncopeUserDAO.find(id);\n             assertNotNull(actualUser);\n-            resources = actualUser.getResources();\n-            for (Resource res : resources) {\n+            resources = actualUser.getTargetResources();\n+            for (TargetResource res : resources) {\n                 assertFalse(res.getName().equalsIgnoreCase(resource.getName()));\n             }\n         }\n@@ -214,7 +214,7 @@ public final void delete() {\n                 connectorInstanceDAO.find(connectorId);\n         assertNotNull(actualConnector);\n         resources = actualConnector.getResources();\n-        for (Resource res : resources) {\n+        for (TargetResource res : resources) {\n             assertFalse(res.getName().equalsIgnoreCase(resource.getName()));\n         }\n     }"},{"sha":"2d92b9e4bc5e39c006f1461c0e1f6f8efb63149d","filename":"core/src/test/java/org/syncope/core/test/persistence/relationships/SchemaMappingTest.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaMappingTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaMappingTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2Frelationships%2FSchemaMappingTest.java?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -21,7 +21,7 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.Resource;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.user.UserSchema;\n import org.syncope.core.persistence.dao.ResourceDAO;\n@@ -47,7 +47,7 @@ public final void save() throws ClassNotFoundException {\n         UserSchema user = schemaDAO.find(\"firstname\", UserSchema.class);\n         schema.setUserSchema(user);\n \n-        Resource resource = resourceDAO.find(\"ws-target-resource-1\");\n+        TargetResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         schema.setResource(resource);\n \n         SchemaMapping actual = schemaMappingDAO.save(schema);\n@@ -75,7 +75,7 @@ public final void save() throws ClassNotFoundException {\n \n         assertTrue(actualUser.getMappings().contains(actual));\n \n-        Resource actualResource =\n+        TargetResource actualResource =\n                 resourceDAO.find(\"ws-target-resource-1\");\n \n         assertTrue(actualResource.getMappings().contains(actual));\n@@ -89,7 +89,7 @@ public final void delete() {\n \n         Long id = schema.getId();\n \n-        Resource resource = schema.getResource();\n+        TargetResource resource = schema.getResource();\n \n         assertNotNull(resource);\n \n@@ -106,7 +106,7 @@ public final void delete() {\n \n         assertNull(\"delete did not work\", actual);\n \n-        Resource actualResource =\n+        TargetResource actualResource =\n                 resourceDAO.find(resource.getName());\n \n         assertNotNull(actualResource);"},{"sha":"5e8e0c2702c342efe3a2500a521d1824480833ed","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":67,"deletions":67,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -37,46 +37,46 @@\n     <SyncopeUser id=\"3\" password=\"ZZZ\" workflowId=\"0\"/>\n     <SyncopeUser id=\"4\" password=\"PPP\" workflowId=\"0\"/>\n \n-    <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n-    <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n-    <SyncopeRole id=\"3\" name=\"citizen\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n-    <SyncopeRole id=\"4\" name=\"employee\" parent_id=\"3\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n-    <SyncopeRole id=\"5\" name=\"secretary\" parent_id=\"4\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n-    <SyncopeRole id=\"6\" name=\"director\" parent_id=\"4\" inheritAttributes=\"TRUE\" inheritDerivedAttributes=\"TRUE\"/>\n-    <SyncopeRole id=\"7\" name=\"managingDirector\" parent_id=\"6\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n-    <SyncopeRole id=\"8\" name=\"otherchild\" parent_id=\"1\" inheritAttributes=\"FALSE\" inheritDerivedAttributes=\"FALSE\"/>\n+    <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"F\" inheritDerivedAttributes=\"F\"/>\n+    <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"F\" inheritDerivedAttributes=\"F\"/>\n+    <SyncopeRole id=\"3\" name=\"citizen\" inheritAttributes=\"F\" inheritDerivedAttributes=\"F\"/>\n+    <SyncopeRole id=\"4\" name=\"employee\" parent_id=\"3\" inheritAttributes=\"F\" inheritDerivedAttributes=\"F\"/>\n+    <SyncopeRole id=\"5\" name=\"secretary\" parent_id=\"4\" inheritAttributes=\"F\" inheritDerivedAttributes=\"F\"/>\n+    <SyncopeRole id=\"6\" name=\"director\" parent_id=\"4\" inheritAttributes=\"T\" inheritDerivedAttributes=\"T\"/>\n+    <SyncopeRole id=\"7\" name=\"managingDirector\" parent_id=\"6\" inheritAttributes=\"F\" inheritDerivedAttributes=\"F\"/>\n+    <SyncopeRole id=\"8\" name=\"otherchild\" parent_id=\"1\" inheritAttributes=\"F\" inheritDerivedAttributes=\"F\"/>\n \n     <Membership id=\"1\" syncopeUser_id=\"1\" syncopeRole_id=\"1\"/>\n     <Membership id=\"2\" syncopeUser_id=\"2\" syncopeRole_id=\"1\"/>\n     <Membership id=\"3\" syncopeUser_id=\"2\" syncopeRole_id=\"2\"/>\n     <Membership id=\"4\" syncopeUser_id=\"4\" syncopeRole_id=\"7\"/>\n \n-    <UserSchema name=\"username\" type=\"String\" virtual=\"false\"\n-                mandatory=\"true\" multivalue=\"false\" uniquevalue=\"true\"/>\n-    <UserSchema name=\"userId\" type=\"String\" virtual=\"false\"\n-                mandatory=\"true\" multivalue=\"false\" uniquevalue=\"true\"\n+    <UserSchema name=\"username\" type=\"String\" virtual=\"F\"\n+                mandatory=\"T\" multivalue=\"F\" uniquevalue=\"T\"/>\n+    <UserSchema name=\"userId\" type=\"String\" virtual=\"F\"\n+                mandatory=\"T\" multivalue=\"F\" uniquevalue=\"T\"\n                 validatorClass=\"org.syncope.core.persistence.validation.EmailAddressValidator\"/>\n-    <UserSchema name=\"loginDate\" type=\"Date\" virtual=\"false\"\n-                mandatory=\"false\" multivalue=\"true\" uniquevalue=\"false\"\n+    <UserSchema name=\"loginDate\" type=\"Date\" virtual=\"F\"\n+                mandatory=\"F\" multivalue=\"T\" uniquevalue=\"F\"\n                 conversionPattern=\"yyyy-MM-dd\"/>\n-    <UserSchema name=\"firstname\" type=\"String\" virtual=\"false\"\n-                mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"/>\n-    <UserSchema name=\"surname\" type=\"String\" virtual=\"false\"\n-                mandatory=\"true\" multivalue=\"false\" uniquevalue=\"false\"/>\n-    <UserSchema name=\"email\" type=\"String\" virtual=\"false\"\n-                mandatory=\"false\" multivalue=\"true\" uniquevalue=\"true\"\n+    <UserSchema name=\"firstname\" type=\"String\" virtual=\"F\"\n+                mandatory=\"F\" multivalue=\"F\" uniquevalue=\"F\"/>\n+    <UserSchema name=\"surname\" type=\"String\" virtual=\"F\"\n+                mandatory=\"T\" multivalue=\"F\" uniquevalue=\"F\"/>\n+    <UserSchema name=\"email\" type=\"String\" virtual=\"F\"\n+                mandatory=\"F\" multivalue=\"T\" uniquevalue=\"T\"\n                 validatorClass=\"org.syncope.core.persistence.validation.EmailAddressValidator\"/>\n-    <UserSchema name=\"activationDate\" type=\"Date\" virtual=\"false\"\n-                mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"\n+    <UserSchema name=\"activationDate\" type=\"Date\" virtual=\"F\"\n+                mandatory=\"F\" multivalue=\"F\" uniquevalue=\"F\"\n                 conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n                 \n-    <RoleSchema name=\"icon\" type=\"String\" virtual=\"false\"\n-                mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"/>\n-    <RoleSchema name=\"show\" type=\"Boolean\" virtual=\"false\"\n-                mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"/>\n+    <RoleSchema name=\"icon\" type=\"String\" virtual=\"F\"\n+                mandatory=\"F\" multivalue=\"F\" uniquevalue=\"F\"/>\n+    <RoleSchema name=\"show\" type=\"Boolean\" virtual=\"F\"\n+                mandatory=\"F\" multivalue=\"F\" uniquevalue=\"F\"/>\n \n-    <MembershipSchema name=\"subscriptionDate\" type=\"Date\" virtual=\"false\"\n-                      mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"\n+    <MembershipSchema name=\"subscriptionDate\" type=\"Date\" virtual=\"F\"\n+                      mandatory=\"F\" multivalue=\"F\" uniquevalue=\"F\"\n                       conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n \n     <UserAttribute id=\"100\" owner_id=\"1\" schema_name=\"username\"/>\n@@ -104,7 +104,7 @@\n \n     <RoleAttributeValue attribute_id=\"600\" id=\"40\" stringValue=\"niceIcon\"/>\n     <RoleAttributeValue attribute_id=\"700\" id=\"41\" stringValue=\"badIcon\"/>\n-    <RoleAttributeValue attribute_id=\"800\" id=\"42\" booleanValue=\"TRUE\"/>\n+    <RoleAttributeValue attribute_id=\"800\" id=\"42\" booleanValue=\"T\"/>\n     <RoleAttributeValue attribute_id=\"900\" id=\"43\" stringValue=\"icon6\"/>\n     <RoleAttributeValue attribute_id=\"950\" id=\"44\" stringValue=\"icon4\"/>\n \n@@ -113,10 +113,10 @@\n \n     <UserDerivedSchema name=\"cn\" expression=\"surname + ', ' + firstname\"/>\n     \n-    <UserDerivedSchema_UserSchema derivedSchemas_name=\"cn\"\n-                                  schemas_name=\"surname\"/>\n-    <UserDerivedSchema_UserSchema derivedSchemas_name=\"cn\"\n-                                  schemas_name=\"firstname\"/>\n+    <UserSchemaDerivation derivedSchemas_name=\"cn\"\n+                          schemas_name=\"surname\"/>\n+    <UserSchemaDerivation derivedSchemas_name=\"cn\"\n+                          schemas_name=\"firstname\"/>\n                                             \n     <UserDerivedAttribute id=\"1000\" derivedSchema_name=\"cn\" owner_id=\"3\"/>\n \n@@ -138,67 +138,67 @@\n                        version=\"0.1-SNAPSHOT\"\n                        xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A8888%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n \n-    <Resource name=\"ws-target-resource-1\" connector_id=\"100\"/>\n-    <Resource name=\"ws-target-resource-2\" connector_id=\"100\"/>\n-    <Resource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\"/>\n-    <Resource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\"/>\n-    <Resource name=\"ws-target-resource-delete\" connector_id=\"102\"/>\n-    <Resource name=\"ws-target-resource-update\" connector_id=\"100\"/>\n+    <TargetResource name=\"ws-target-resource-1\" connector_id=\"100\"/>\n+    <TargetResource name=\"ws-target-resource-2\" connector_id=\"100\"/>\n+    <TargetResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\"/>\n+    <TargetResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\"/>\n+    <TargetResource name=\"ws-target-resource-delete\" connector_id=\"102\"/>\n+    <TargetResource name=\"ws-target-resource-update\" connector_id=\"100\"/>\n \n-    <Resource_SyncopeUser Resource_name=\"ws-target-resource-delete\" users_id=\"3\" />\n-    <SyncopeUser_Resource SyncopeUser_id=\"3\" resources_name=\"ws-target-resource-delete\" />\n+    <TargetResource_SyncopeUser TargetResource_name=\"ws-target-resource-delete\" users_id=\"3\" />\n+    <SyncopeUser_TargetResource SyncopeUser_id=\"3\" targetResources_name=\"ws-target-resource-delete\" />\n \n-    <Resource_SyncopeRole Resource_name=\"ws-target-resource-list-mappings-1\" roles_id=\"3\" />\n-    <SyncopeRole_Resource SyncopeRole_id=\"3\" resources_name=\"ws-target-resource-list-mappings-1\" />\n+    <TargetResource_SyncopeRole TargetResource_name=\"ws-target-resource-list-mappings-1\" roles_id=\"3\" />\n+    <SyncopeRole_TargetResource SyncopeRole_id=\"3\" targetResources_name=\"ws-target-resource-list-mappings-1\" />\n \n-    <Resource_SyncopeUser Resource_name=\"ws-target-resource-2\" users_id=\"3\" />\n-    <SyncopeUser_Resource SyncopeUser_id=\"3\" resources_name=\"ws-target-resource-2\" />\n+    <TargetResource_SyncopeUser TargetResource_name=\"ws-target-resource-2\" users_id=\"3\" />\n+    <SyncopeUser_TargetResource SyncopeUser_id=\"3\" targetResources_name=\"ws-target-resource-2\" />\n \n-    <Resource_SyncopeRole Resource_name=\"ws-target-resource-2\" roles_id=\"8\" />\n-    <SyncopeRole_Resource SyncopeRole_id=\"8\" resources_name=\"ws-target-resource-2\" />\n+    <TargetResource_SyncopeRole TargetResource_name=\"ws-target-resource-2\" roles_id=\"8\" />\n+    <SyncopeRole_TargetResource SyncopeRole_id=\"8\" targetResources_name=\"ws-target-resource-2\" />\n \n-    <Resource_SyncopeRole Resource_name=\"ws-target-resource-list-mappings-2\" roles_id=\"3\" />\n-    <SyncopeRole_Resource SyncopeRole_id=\"3\" resources_name=\"ws-target-resource-list-mappings-2\" />\n+    <TargetResource_SyncopeRole TargetResource_name=\"ws-target-resource-list-mappings-2\" roles_id=\"3\" />\n+    <SyncopeRole_TargetResource SyncopeRole_id=\"3\" targetResources_name=\"ws-target-resource-list-mappings-2\" />\n \n     <SchemaMapping id=\"99\" field=\"username\"\n                    resource_name=\"ws-target-resource-delete\"\n-                   userSchema_name=\"email\" nullable=\"false\"\n-                   accountid=\"true\" password=\"false\"/>\n+                   userSchema_name=\"email\" nullable=\"F\"\n+                   accountid=\"T\" password=\"F\"/>\n \n     <SchemaMapping id=\"100\" field=\"username\"\n                    resource_name=\"ws-target-resource-1\"\n-                   userSchema_name=\"email\" nullable=\"false\"\n-                   accountid=\"true\" password=\"false\"/>\n+                   userSchema_name=\"email\" nullable=\"F\"\n+                   accountid=\"T\" password=\"F\"/>\n \n     <SchemaMapping id=\"101\" field=\"username\"\n                    resource_name=\"ws-target-resource-2\"\n-                   userSchema_name=\"username\" nullable=\"false\"\n-                   accountid=\"true\" password=\"false\"/>\n+                   userSchema_name=\"username\" nullable=\"F\"\n+                   accountid=\"T\" password=\"F\"/>\n \n     <SchemaMapping id=\"105\" field=\"cognome\"\n                    resource_name=\"ws-target-resource-2\"\n-                   userSchema_name=\"surname\" nullable=\"false\"\n-                   accountid=\"false\" password=\"false\"/>\n+                   userSchema_name=\"surname\" nullable=\"F\"\n+                   accountid=\"F\" password=\"F\"/>\n                    \n     <SchemaMapping id=\"106\" field=\"password\"\n                    resource_name=\"ws-target-resource-2\"\n-                   userSchema_name=\"surname\" nullable=\"false\"\n-                   accountid=\"false\" password=\"true\"/>\n+                   userSchema_name=\"surname\" nullable=\"F\"\n+                   accountid=\"F\" password=\"T\"/>\n \n     <SchemaMapping id=\"102\" field=\"email\"\n                    resource_name=\"ws-target-resource-list-mappings-1\"\n-                   userSchema_name=\"email\" nullable=\"false\"\n-                   accountid=\"true\" password=\"false\"/>\n+                   userSchema_name=\"email\" nullable=\"F\"\n+                   accountid=\"T\" password=\"F\"/>\n \n     <SchemaMapping id=\"103\" field=\"firstname\"\n                    resource_name=\"ws-target-resource-list-mappings-1\"\n-                   userSchema_name=\"email\" nullable=\"false\"\n-                   accountid=\"true\" password=\"false\"/>\n+                   userSchema_name=\"email\" nullable=\"F\"\n+                   accountid=\"T\" password=\"F\"/>\n \n     <SchemaMapping id=\"104\" field=\"firstname\"\n                    resource_name=\"ws-target-resource-list-mappings-2\"\n-                   userSchema_name=\"email\" nullable=\"false\"\n-                   accountid=\"true\" password=\"false\"/>\n+                   userSchema_name=\"email\" nullable=\"F\"\n+                   accountid=\"T\" password=\"F\"/>\n \n     <Entitlement name=\"base\"/>\n     <Entitlement name=\"advanced\" description=\"Advanced entitlement\"/>\n@@ -213,9 +213,9 @@\n     <RoleDerivedSchema name=\"displayProperty\"\n                        expression=\"icon + ': ' + show\"/>\n \n-    <RoleDerivedSchema_RoleSchema derivedSchemas_name=\"displayProperty\"\n+    <RoleSchemaDerivation derivedSchemas_name=\"displayProperty\"\n                                   schemas_name=\"icon\" />\n-    <RoleDerivedSchema_RoleSchema derivedSchemas_name=\"displayProperty\"\n+    <RoleSchemaDerivation derivedSchemas_name=\"displayProperty\"\n                                   schemas_name=\"show\" />\n \n     <RoleDerivedAttribute id=\"1001\" derivedSchema_name=\"displayProperty\""},{"sha":"245c38bdee9e2b786fbd53a9aaf4f83540bddaae","filename":"pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d0680f35e5a029745327e7bc981adb736a682086/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d0680f35e5a029745327e7bc981adb736a682086/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=d0680f35e5a029745327e7bc981adb736a682086","patch":"@@ -108,7 +108,7 @@\n         <propertyset.version>1.3</propertyset.version>\n         <oscore.version>2.2.6</oscore.version>\n \n-        <org.springframework.version>3.0.3.RELEASE</org.springframework.version>\n+        <org.springframework.version>3.0.4.RELEASE</org.springframework.version>\n         <cglib.version>2.2</cglib.version>\n         <jackson.version>1.5.3</jackson.version>\n         <xstream.version>1.3.1</xstream.version>\n@@ -489,4 +489,4 @@\n         <module>identityconnectors</module>\n     </modules>\n \n-</project>\n\\ No newline at end of file\n+</project>"}]}