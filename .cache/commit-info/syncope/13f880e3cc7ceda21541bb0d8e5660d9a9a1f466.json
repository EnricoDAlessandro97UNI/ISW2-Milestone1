{"sha":"13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjEzZjg4MGUzY2M3Y2VkYTIxNTQxYmIwZDhlNTY2MGQ5YTlhMWY0NjY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-19T09:33:54Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-19T09:33:54Z"},"message":"Update issue 238\nModifications for compatibility with Hibernate EntityManager's properties handling\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/branches/0_8_X_ASL@1247356 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2896e1d94d0f13e53926cba39a935a2f2ecdb8db","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2896e1d94d0f13e53926cba39a935a2f2ecdb8db"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/comments","author":null,"committer":null,"parents":[{"sha":"2ba0f5e5a6751c15c072cf931aacfe7a11a2330f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ba0f5e5a6751c15c072cf931aacfe7a11a2330f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2ba0f5e5a6751c15c072cf931aacfe7a11a2330f"}],"stats":{"total":78,"additions":6,"deletions":72},"files":[{"sha":"606e48db9034b0e11aba2fe30d676b241a724eaa","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/EntitlementDAOImpl.java","status":"modified","additions":1,"deletions":13,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java?ref=13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","patch":"@@ -15,8 +15,6 @@\n package org.syncope.core.persistence.dao.impl;\n \n import java.util.List;\n-import javax.persistence.CacheRetrieveMode;\n-import javax.persistence.CacheStoreMode;\n import javax.persistence.Query;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n@@ -40,19 +38,9 @@ public Entitlement find(final String name) {\n \n     @Override\n     public List<Entitlement> findAll() {\n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-        CacheStoreMode prevCSM = getCacheStoreMode();\n-        setCacheStoreMode(CacheStoreMode.REFRESH);\n-\n         Query query = entityManager.createQuery(\"SELECT e FROM Entitlement e\");\n \n-        List<Entitlement> result = query.getResultList();\n-\n-        setCacheRetrieveMode(prevCRM);\n-        setCacheStoreMode(prevCSM);\n-\n-        return result;\n+        return query.getResultList();\n     }\n \n     @Override"},{"sha":"84f7ae44992b14555332075c342f1d793db11fa8","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":2,"deletions":17,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","patch":"@@ -15,19 +15,16 @@\n package org.syncope.core.persistence.dao.impl;\n \n import java.util.List;\n-\n import javassist.NotFoundException;\n-import javax.persistence.CacheRetrieveMode;\n-\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.init.ConnInstanceLoader;\n-import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.ExternalResource;\n+import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n@@ -48,9 +45,6 @@ public class ResourceDAOImpl extends AbstractDAOImpl\n \n     @Override\n     public ExternalResource find(final String name) {\n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-\n         TypedQuery<ExternalResource> query =\n                 entityManager.createQuery(\"SELECT e \"\n                 + \"FROM \" + ExternalResource.class.getSimpleName() + \" e \"\n@@ -63,8 +57,6 @@ public ExternalResource find(final String name) {\n         } catch (NoResultException e) {\n         }\n \n-        setCacheRetrieveMode(prevCRM);\n-\n         return result;\n     }\n \n@@ -106,17 +98,10 @@ public ExternalResource save(final ExternalResource resource) {\n \n     @Override\n     public List<SchemaMapping> findAllMappings() {\n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-\n         Query query = entityManager.createQuery(\"SELECT e FROM \"\n                 + SchemaMapping.class.getSimpleName() + \" e\");\n \n-        List<SchemaMapping> result = query.getResultList();\n-\n-        setCacheRetrieveMode(prevCRM);\n-\n-        return result;\n+        return query.getResultList();\n     }\n \n     @Override"},{"sha":"f7c7a3c7bffe19ce20e2b22f3fbe724385a289c7","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":1,"deletions":14,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","patch":"@@ -16,7 +16,6 @@\n \n import java.util.Collections;\n import java.util.List;\n-import javax.persistence.CacheRetrieveMode;\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n@@ -37,9 +36,6 @@ public class RoleDAOImpl extends AbstractDAOImpl implements RoleDAO {\n \n     @Override\n     public SyncopeRole find(final Long id) {\n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-\n         TypedQuery<SyncopeRole> query = entityManager.createQuery(\n                 \"SELECT e FROM SyncopeRole e WHERE e.id = :id\",\n                 SyncopeRole.class);\n@@ -51,25 +47,16 @@ public SyncopeRole find(final Long id) {\n         } catch (NoResultException e) {\n         }\n \n-        setCacheRetrieveMode(prevCRM);\n-\n         return result;\n     }\n \n     @Override\n     public List<SyncopeRole> find(final String name) {\n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM SyncopeRole e WHERE e.name = :name\");\n         query.setParameter(\"name\", name);\n \n-        List<SyncopeRole> result = query.getResultList();\n-\n-        setCacheRetrieveMode(prevCRM);\n-\n-        return result;\n+        return query.getResultList();\n     }\n \n     @Override"},{"sha":"e4263cd66a6679997f8427a7c24828fc87850897","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","patch":"@@ -17,7 +17,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import javax.persistence.CacheRetrieveMode;\n import javax.persistence.Query;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n@@ -49,17 +48,10 @@ public <T extends AbstractSchema> T find(final String name,\n     public <T extends AbstractSchema> List<T> findAll(\n             final Class<T> reference) {\n \n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n \n-        List<T> result = query.getResultList();\n-\n-        setCacheRetrieveMode(prevCRM);\n-\n-        return result;\n+        return query.getResultList();\n     }\n \n     @Override"},{"sha":"24c4ea982471d1ecb1bad93150879f37e54e9212","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":1,"deletions":19,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/13f880e3cc7ceda21541bb0d8e5660d9a9a1f466/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=13f880e3cc7ceda21541bb0d8e5660d9a9a1f466","patch":"@@ -22,7 +22,6 @@\n import java.util.List;\n import java.util.Set;\n import java.util.regex.Pattern;\n-import javax.persistence.CacheRetrieveMode;\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n import javax.persistence.TemporalType;\n@@ -67,9 +66,6 @@ public class UserDAOImpl extends AbstractDAOImpl\n \n     @Override\n     public SyncopeUser find(final Long id) {\n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-\n         TypedQuery<SyncopeUser> query = entityManager.createQuery(\n                 \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n                 + \"WHERE e.id = :id\", SyncopeUser.class);\n@@ -81,16 +77,11 @@ public SyncopeUser find(final Long id) {\n         } catch (NoResultException e) {\n         }\n \n-        setCacheRetrieveMode(prevCRM);\n-\n         return result;\n     }\n \n     @Override\n     public SyncopeUser find(final String username) {\n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-\n         TypedQuery<SyncopeUser> query = entityManager.createQuery(\n                 \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n                 + \"WHERE e.username = :username\", SyncopeUser.class);\n@@ -102,26 +93,17 @@ public SyncopeUser find(final String username) {\n         } catch (NoResultException e) {\n         }\n \n-        setCacheRetrieveMode(prevCRM);\n-\n         return result;\n     }\n \n     @Override\n     public SyncopeUser findByWorkflowId(final String workflowId) {\n-        CacheRetrieveMode prevCRM = getCacheRetrieveMode();\n-        setCacheRetrieveMode(CacheRetrieveMode.USE);\n-\n         TypedQuery<SyncopeUser> query = entityManager.createQuery(\n                 \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n                 + \"WHERE e.workflowId = :workflowId\", SyncopeUser.class);\n         query.setParameter(\"workflowId\", workflowId);\n \n-        SyncopeUser result = query.getSingleResult();\n-\n-        setCacheRetrieveMode(prevCRM);\n-\n-        return result;\n+        return query.getSingleResult();\n     }\n \n     /**"}]}