{"sha":"e35c02a553cafc8965546648dcdc2e96d0326bd6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUzNWMwMmE1NTNjYWZjODk2NTU0NjY0OGRjZGMyZTk2ZDAzMjZiZDY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-26T09:56:06Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-26T09:56:06Z"},"message":"[SYNCOPE-517] Client REST calls for users and roles now feature ETag (when applicable)\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1605721 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"187ca37e170a5b5d825468b150da484aab600b5f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/187ca37e170a5b5d825468b150da484aab600b5f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e35c02a553cafc8965546648dcdc2e96d0326bd6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e35c02a553cafc8965546648dcdc2e96d0326bd6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e35c02a553cafc8965546648dcdc2e96d0326bd6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e35c02a553cafc8965546648dcdc2e96d0326bd6/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d3a0a4016625815db192fe95b6482e60ff258b9a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d3a0a4016625815db192fe95b6482e60ff258b9a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d3a0a4016625815db192fe95b6482e60ff258b9a"}],"stats":{"total":794,"additions":464,"deletions":330},"files":[{"sha":"a02c23b1d6467594c4d365a0f2c9152f31023e86","filename":"client/src/main/java/org/apache/syncope/client/SyncopeClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -245,11 +245,11 @@ public boolean isActivitiEnabledFor(final SubjectType subjectType) {\n     }\n \n     /**\n-     * Fetches <tt>Etag</tt> header value from latest service run (if available).\n+     * Fetches <tt>ETag</tt> header value from latest service run (if available).\n      *\n      * @param <T> any service class\n      * @param service service class instance\n-     * @return <tt>Etag</tt> header value from latest service run (if available)\n+     * @return <tt>ETag</tt> header value from latest service run (if available)\n      */\n     public <T> EntityTag getLatestEntityTag(final T service) {\n         return WebClient.client(service).getResponse().getEntityTag();"},{"sha":"44fc611f5b8464feceffb7da53e54f94ea7bccb8","filename":"common/src/main/java/org/apache/syncope/common/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -24,6 +24,7 @@ public enum ClientExceptionType {\n \r\n     AssociatedResources(Response.Status.BAD_REQUEST),\r\n     Composite(Response.Status.BAD_REQUEST),\r\n+    ConcurrentModification(Response.Status.PRECONDITION_FAILED),\r\n     DataIntegrityViolation(Response.Status.BAD_REQUEST),\r\n     EntityExists(Response.Status.CONFLICT),\r\n     GenericPersistence(Response.Status.BAD_REQUEST),\r"},{"sha":"5e224665e6dc18d50e81b3d35e21ec48f7dbc03d","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":26,"deletions":9,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -20,12 +20,15 @@\n \n import java.text.DateFormat;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MediaType;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.client.SyncopeClientFactoryBean;\n import org.apache.syncope.common.types.SubjectType;\n@@ -61,7 +64,8 @@ public class SyncopeSession extends WebSession {\n \n     private final String anonymousKey;\n \n-    private final Map<Integer, SyncopeClient> clients = new HashMap<Integer, SyncopeClient>();\n+    private final Map<Integer, SyncopeClient> clients =\n+            Collections.synchronizedMap(new HashMap<Integer, SyncopeClient>());\n \n     public static SyncopeSession get() {\n         return (SyncopeSession) Session.get();\n@@ -101,12 +105,28 @@ public <T> T getService(final Class<T> service) {\n         return getService(service, this.username, this.password);\n     }\n \n+    public <T> T getService(final String etag, final Class<T> service) {\n+        T serviceInstance = getService(service, this.username, this.password);\n+        WebClient.client(serviceInstance).match(new EntityTag(etag), false);\n+\n+        return serviceInstance;\n+    }\n+\n+    public <T> void resetClient(final Class<T> service) {\n+        T serviceInstance = getService(service, this.username, this.password);\n+        WebClient.client(serviceInstance).reset();\n+    }\n+\n     public <T> T getService(final MediaType mediaType, final Class<T> serviceClass) {\n-        SyncopeClientFactoryBean.ContentType preType = clientFactory.getContentType();\n+        T service;\n+\n+        synchronized (clientFactory) {\n+            SyncopeClientFactoryBean.ContentType preType = clientFactory.getContentType();\n \n-        clientFactory.setContentType(SyncopeClientFactoryBean.ContentType.fromString(mediaType.toString()));\n-        T service = clientFactory.create(username, password).getService(serviceClass);\n-        clientFactory.setContentType(preType);\n+            clientFactory.setContentType(SyncopeClientFactoryBean.ContentType.fromString(mediaType.toString()));\n+            service = clientFactory.create(username, password).getService(serviceClass);\n+            clientFactory.setContentType(preType);\n+        }\n \n         return service;\n     }\n@@ -116,10 +136,7 @@ public <T> T getAnonymousService(final Class<T> serviceClass) {\n     }\n \n     public <T> T getService(final Class<T> serviceClass, final String username, final String password) {\n-        final int clientKey = new HashCodeBuilder().\n-                append(username).\n-                append(password).\n-                toHashCode();\n+        final int clientKey = new HashCodeBuilder().append(username).append(password).toHashCode();\n \n         if (!clients.containsKey(clientKey)) {\n             clients.put(clientKey, clientFactory.create(username, password));"},{"sha":"66062d05d049bd65041cf4a7c13351943fcd3044","filename":"console/src/main/java/org/apache/syncope/console/commons/AttributableDataProvider.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttributableDataProvider.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -22,7 +22,7 @@\n import java.util.Iterator;\n import java.util.List;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n-import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n+import org.apache.syncope.console.rest.AbstractSubjectRestClient;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.model.CompoundPropertyModel;\n@@ -44,9 +44,9 @@ public class AttributableDataProvider extends SortableDataProvider<AbstractAttri\n \n     private final boolean filtered;\n \n-    private final AbstractAttributableRestClient restClient;\n+    private final AbstractSubjectRestClient restClient;\n \n-    public AttributableDataProvider(final AbstractAttributableRestClient restClient,\n+    public AttributableDataProvider(final AbstractSubjectRestClient restClient,\n             final int paginatorRows, final boolean filtered) {\n \n         super();"},{"sha":"cbb19b42a4fc588d7c06920b0f44768d8bb5774c","filename":"console/src/main/java/org/apache/syncope/console/commons/status/StatusUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.pages.panels.ImagePanel;\n import org.apache.syncope.console.pages.panels.StatusPanel;\n-import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n+import org.apache.syncope.console.rest.AbstractSubjectRestClient;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.Behavior;\n@@ -54,9 +54,9 @@ public class StatusUtils implements Serializable {\n \n     public static final String IMG_STATUES = \"../statuses/\";\n \n-    private final AbstractAttributableRestClient restClient;\n+    private final AbstractSubjectRestClient restClient;\n \n-    public StatusUtils(final AbstractAttributableRestClient restClient) {\n+    public StatusUtils(final AbstractSubjectRestClient restClient) {\n         this.restClient = restClient;\n     }\n "},{"sha":"ee37d76f19a62795ad0602f4d9870a059ef6f69b","filename":"console/src/main/java/org/apache/syncope/console/pages/EditUserModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -91,7 +91,7 @@ protected void submitAction(final AjaxRequestTarget target, final Form form) {\n \n             // update user just if it is changed\n             if (!userMod.isEmpty()) {\n-                userTO = userRestClient.update(userMod);\n+                userTO = userRestClient.update(initialUserTO.getETagValue(), userMod);\n             }\n         }\n     }"},{"sha":"c815737ea3652c661544bb4f8e4c98b8194496bb","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -157,7 +157,7 @@ protected void submitAction(final AjaxRequestTarget target, final Form form) {\n             if (roleMod.isEmpty()) {\n                 result = roleTO;\n             } else {\n-                result = roleRestClient.update(roleMod);\n+                result = roleRestClient.update(originalRoleTO.getETagValue(), roleMod);\n             }\n         }\n "},{"sha":"c18c4e518332f3c77074f61eb3e63a8ebb465072","filename":"console/src/main/java/org/apache/syncope/console/pages/StatusModalPage.java","status":"modified","additions":39,"deletions":13,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -260,7 +260,9 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         userRestClient.reactivate(\n-                                subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                subjectTO.getETagValue(),\n+                                subjectTO.getId(),\n+                                new ArrayList<StatusBean>(table.getModelObject()));\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n \n@@ -281,7 +283,9 @@ public void onClick(final AjaxRequestTarget target) {\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         userRestClient.suspend(\n-                                subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                subjectTO.getETagValue(),\n+                                subjectTO.getId(),\n+                                new ArrayList<StatusBean>(table.getModelObject()));\n \n                         if (pageRef.getPage() instanceof BasePage) {\n                             ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -305,10 +309,14 @@ public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         if (subjectTO instanceof UserTO) {\n                             userRestClient.unlink(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n                             roleRestClient.unlink(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -330,10 +338,14 @@ public void onClick(final AjaxRequestTarget target) {\n                     try {\n                         if (subjectTO instanceof UserTO) {\n                             userRestClient.link(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n                             roleRestClient.link(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -353,13 +365,17 @@ public void onClick(final AjaxRequestTarget target) {\n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n                     try {\n-                        final BulkActionResult bulkActionResult;\n+                        BulkActionResult bulkActionResult;\n                         if (subjectTO instanceof UserTO) {\n                             bulkActionResult = userRestClient.deprovision(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n                             bulkActionResult = roleRestClient.deprovision(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -385,7 +401,9 @@ public void onClick(final AjaxRequestTarget target) {\n                     } else {\n                         try {\n                             final BulkActionResult bulkActionResult = roleRestClient.provision(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n \n                             ((BasePage) pageRef.getPage()).setModalResult(true);\n                             loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n@@ -408,10 +426,14 @@ public void onClick(final AjaxRequestTarget target) {\n                         final BulkActionResult bulkActionResult;\n                         if (subjectTO instanceof UserTO) {\n                             bulkActionResult = userRestClient.unassign(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n                         } else {\n                             bulkActionResult = roleRestClient.unassign(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n                         }\n \n                         ((BasePage) pageRef.getPage()).setModalResult(true);\n@@ -436,7 +458,9 @@ public void onClick(final AjaxRequestTarget target) {\n                     } else {\n                         try {\n                             final BulkActionResult bulkActionResult = roleRestClient.assign(\n-                                    subjectTO.getId(), new ArrayList<StatusBean>(table.getModelObject()));\n+                                    subjectTO.getETagValue(),\n+                                    subjectTO.getId(),\n+                                    new ArrayList<StatusBean>(table.getModelObject()));\n \n                             ((BasePage) pageRef.getPage()).setModalResult(true);\n                             loadBulkActionResultPage(table.getModelObject(), bulkActionResult);\n@@ -540,13 +564,15 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n                             switch (type) {\n                                 case ASSIGN:\n                                     bulkActionResult = userRestClient.assign(\n+                                            subjectTO.getETagValue(),\n                                             subjectTO.getId(),\n                                             new ArrayList<StatusBean>(selection),\n                                             changepwd.getModelObject(),\n                                             password.getModelObject());\n                                     break;\n                                 case PROVISION:\n                                     bulkActionResult = userRestClient.provision(\n+                                            subjectTO.getETagValue(),\n                                             subjectTO.getId(),\n                                             new ArrayList<StatusBean>(selection),\n                                             changepwd.getModelObject(),"},{"sha":"8e5cced3ec789f6c369d28949bf2633ba19d92e1","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractSearchResultPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.pages.AbstractBasePage;\n-import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n+import org.apache.syncope.console.rest.AbstractSubjectRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -96,7 +96,7 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    protected final AbstractAttributableRestClient restClient;\n+    protected final AbstractSubjectRestClient restClient;\n \n     /**\n      * Number of rows per page.\n@@ -155,7 +155,7 @@ public abstract class AbstractSearchResultPanel extends Panel implements IEventS\n     protected final AbstractBasePage page;\n \n     protected <T extends AbstractAttributableTO> AbstractSearchResultPanel(final String id, final boolean filtered,\n-            final String fiql, final PageReference pageRef, final AbstractAttributableRestClient restClient) {\n+            final String fiql, final PageReference pageRef, final AbstractSubjectRestClient restClient) {\n \n         super(id);\n "},{"sha":"094a5f8cc472638ae330a19612d15c2b14fad7d2","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSearchResultPanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.console.pages.ResultStatusModalPage;\n import org.apache.syncope.console.pages.RoleModalPage;\n import org.apache.syncope.console.pages.StatusModalPage;\n-import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n+import org.apache.syncope.console.rest.AbstractSubjectRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -52,7 +52,7 @@ public class RoleSearchResultPanel extends AbstractSearchResultPanel {\n     private final static String PAGEID = \"Roles\";\n \n     public <T extends AbstractAttributableTO> RoleSearchResultPanel(final String id, final boolean filtered,\n-            final String fiql, final PageReference callerRef, final AbstractAttributableRestClient restClient) {\n+            final String fiql, final PageReference callerRef, final AbstractSubjectRestClient restClient) {\n \n         super(id, filtered, fiql, callerRef, restClient);\n         initResultTable();\n@@ -133,7 +133,8 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            final RoleTO roleTO = (RoleTO) restClient.delete(model.getObject().getId());\n+                            final RoleTO roleTO = (RoleTO) restClient.\n+                                    delete(model.getObject().getETagValue(), model.getObject().getId());\n \n                             page.setModalResult(true);\n "},{"sha":"41eba3c17d8602e62a63de41492d167469a6230d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleTabPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -138,7 +138,7 @@ public Page createPage() {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    final RoleTO roleTO = roleRestClient.delete(selectedNode.getId());\n+                    final RoleTO roleTO = roleRestClient.delete(selectedNode.getETagValue(), selectedNode.getId());\n \n                     ((Roles) pageRef.getPage()).setModalResult(true);\n "},{"sha":"84b9e31b4003f75fd633e918713777d28b569a31","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.console.pages.EditUserModalPage;\n import org.apache.syncope.console.pages.ResultStatusModalPage;\n import org.apache.syncope.console.pages.StatusModalPage;\n-import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n+import org.apache.syncope.console.rest.AbstractSubjectRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n@@ -72,7 +72,7 @@ public class UserSearchResultPanel extends AbstractSearchResultPanel {\n     private final List<String> vSchemaNames;\n \n     public <T extends AbstractAttributableTO> UserSearchResultPanel(final String id, final boolean filtered,\n-            final String fiql, final PageReference callerRef, final AbstractAttributableRestClient restClient) {\n+            final String fiql, final PageReference callerRef, final AbstractSubjectRestClient restClient) {\n \n         super(id, filtered, fiql, callerRef, restClient);\n \n@@ -210,7 +210,8 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            final UserTO userTO = (UserTO) restClient.delete(model.getObject().getId());\n+                            final UserTO userTO = (UserTO) restClient.\n+                                    delete(model.getObject().getETagValue(), model.getObject().getId());\n \n                             page.setModalResult(true);\n "},{"sha":"d331fc5f00554add59582b490ea04c717abd6209","filename":"console/src/main/java/org/apache/syncope/console/rest/AbstractSubjectRestClient.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractSubjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractSubjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FAbstractSubjectRestClient.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n \n-public abstract class AbstractAttributableRestClient extends BaseRestClient {\n+public abstract class AbstractSubjectRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 1962529678091410544L;\n \n@@ -40,7 +40,7 @@ public abstract List<? extends AbstractAttributableTO> search(String fiql,\n \n     public abstract ConnObjectTO getConnectorObject(String resourceName, Long id);\n \n-    public abstract AbstractAttributableTO delete(Long id);\n+    public abstract AbstractAttributableTO delete(String etag, Long id);\n \n-    public abstract BulkActionResult bulkAction(BulkAction action);\n+    public abstract void bulkAction(BulkAction action);\n }","previous_filename":"console/src/main/java/org/apache/syncope/console/rest/AbstractAttributableRestClient.java"},{"sha":"153b6da8b0048055d692225d2336ca70e1fe4f65","filename":"console/src/main/java/org/apache/syncope/console/rest/BaseRestClient.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FBaseRestClient.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -44,6 +44,14 @@ protected <T> T getService(final Class<T> serviceClass) {\n         return SyncopeSession.get().getService(serviceClass);\n     }\n \n+    protected <T> T getService(final String etag, final Class<T> serviceClass) {\n+        return SyncopeSession.get().getService(etag, serviceClass);\n+    }\n+\n+    protected <T> void resetClient(final Class<T> serviceClass) {\n+        SyncopeSession.get().resetClient(serviceClass);\n+    }\n+\n     protected String toOrderBy(final SortParam<String> sort) {\n         OrderByClauseBuilder builder = SyncopeClient.getOrderByClauseBuilder();\n "},{"sha":"e221c35301a0bae97b6e29f364d16b65babc070c","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":91,"deletions":43,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -43,7 +43,7 @@\n  * Console client for invoking Rest Role's services.\n  */\n @Component\n-public class RoleRestClient extends AbstractAttributableRestClient {\n+public class RoleRestClient extends AbstractSubjectRestClient {\n \n     private static final long serialVersionUID = -8549081557283519638L;\n \n@@ -85,53 +85,101 @@ public RoleTO read(final Long id) {\n         return getAnonymousService(RoleService.class).read(id);\n     }\n \n-    public RoleTO update(final RoleMod roleMod) {\n-        return getService(RoleService.class).update(roleMod.getId(), roleMod).readEntity(RoleTO.class);\n+    public RoleTO update(final String etag, final RoleMod roleMod) {\n+        RoleTO result;\n+        synchronized (this) {\n+            RoleService service = getService(etag, RoleService.class);\n+            result = service.update(roleMod.getId(), roleMod).readEntity(RoleTO.class);\n+            resetClient(RoleService.class);\n+        }\n+        return result;\n     }\n \n     @Override\n-    public RoleTO delete(final Long id) {\n-        return getService(RoleService.class).delete(id).readEntity(RoleTO.class);\n+    public RoleTO delete(final String etag, final Long id) {\n+        RoleTO result;\n+        synchronized (this) {\n+            RoleService service = getService(etag, RoleService.class);\n+            result = service.delete(id).readEntity(RoleTO.class);\n+            resetClient(RoleService.class);\n+        }\n+        return result;\n     }\n \n     @Override\n-    public BulkActionResult bulkAction(final BulkAction action) {\n-        return getService(RoleRestClient.class).bulkAction(action);\n-    }\n-\n-    public BulkActionResult unlink(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeassociationActionType.UNLINK,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(BulkActionResult.class);\n-    }\n-\n-    public BulkActionResult link(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkAssociation(roleId, ResourceAssociationActionType.LINK,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(BulkActionResult.class);\n-    }\n-\n-    public BulkActionResult deprovision(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeassociationActionType.DEPROVISION,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(BulkActionResult.class);\n-    }\n-\n-    public BulkActionResult provision(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkAssociation(roleId, ResourceAssociationActionType.PROVISION,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(BulkActionResult.class);\n-    }\n-\n-    public BulkActionResult unassign(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkDeassociation(roleId, ResourceDeassociationActionType.UNASSIGN,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(BulkActionResult.class);\n-    }\n-\n-    public BulkActionResult assign(final long roleId, final List<StatusBean> statuses) {\n-        return getService(RoleService.class).bulkAssociation(roleId, ResourceAssociationActionType.ASSIGN,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class)).\n-                readEntity(BulkActionResult.class);\n+    public void bulkAction(final BulkAction action) {\n+        getService(RoleRestClient.class).bulkAction(action);\n+    }\n+\n+    public void unlink(final String etag, final long roleId, final List<StatusBean> statuses) {\n+        synchronized (this) {\n+            RoleService service = getService(etag, RoleService.class);\n+            service.bulkDeassociation(roleId, ResourceDeassociationActionType.UNLINK,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            resetClient(RoleService.class);\n+        }\n+    }\n+\n+    public void link(final String etag, final long roleId, final List<StatusBean> statuses) {\n+        synchronized (this) {\n+            RoleService service = getService(etag, RoleService.class);\n+            service.bulkAssociation(roleId, ResourceAssociationActionType.LINK,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            resetClient(RoleService.class);\n+        }\n+    }\n+\n+    public BulkActionResult deprovision(final String etag, final long roleId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            RoleService service = getService(etag, RoleService.class);\n+            result = service.bulkDeassociation(roleId, ResourceDeassociationActionType.DEPROVISION,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(RoleService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult provision(final String etag, final long roleId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            RoleService service = getService(etag, RoleService.class);\n+            result = service.bulkAssociation(roleId, ResourceAssociationActionType.PROVISION,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(RoleService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult unassign(final String etag, final long roleId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            RoleService service = getService(etag, RoleService.class);\n+            result = service.bulkDeassociation(roleId, ResourceDeassociationActionType.UNASSIGN,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(RoleService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult assign(final String etag, final long roleId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            RoleService service = getService(etag, RoleService.class);\n+            result = service.bulkAssociation(roleId, ResourceAssociationActionType.ASSIGN,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(RoleService.class);\n+        }\n+        return result;\n     }\n }"},{"sha":"ca7f5adf8221dc60be0044d94c012c24c181cf47","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":110,"deletions":51,"changes":161,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -25,13 +25,13 @@\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.reqres.BulkAction;\n-import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.wrap.ResourceName;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.ResourceAssociationMod;\n+import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.types.SubjectType;\n@@ -44,7 +44,7 @@\n  * Console client for invoking rest users services.\n  */\n @Component\n-public class UserRestClient extends AbstractAttributableRestClient {\n+public class UserRestClient extends AbstractSubjectRestClient {\n \n     private static final long serialVersionUID = -1575748964398293968L;\n \n@@ -63,13 +63,25 @@ public UserTO create(final UserTO userTO) {\n         return response.readEntity(UserTO.class);\n     }\n \n-    public UserTO update(final UserMod userMod) {\n-        return getService(UserService.class).update(userMod.getId(), userMod).readEntity(UserTO.class);\n+    public UserTO update(final String etag, final UserMod userMod) {\n+        UserTO result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            result = service.update(userMod.getId(), userMod).readEntity(UserTO.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n     }\n \n     @Override\n-    public UserTO delete(final Long id) {\n-        return getService(UserService.class).delete(id).readEntity(UserTO.class);\n+    public UserTO delete(final String etag, final Long id) {\n+        UserTO result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            result = service.delete(id).readEntity(UserTO.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n     }\n \n     public UserTO read(final Long id) {\n@@ -97,73 +109,120 @@ public ConnObjectTO getConnectorObject(final String resourceName, final Long id)\n         return getService(ResourceService.class).getConnectorObject(resourceName, SubjectType.USER, id);\n     }\n \n-    public void suspend(final long userId, final List<StatusBean> statuses) {\n+    public void suspend(final String etag, final long userId, final List<StatusBean> statuses) {\n         StatusMod statusMod = StatusUtils.buildStatusMod(statuses, false);\n         statusMod.setType(StatusMod.ModType.SUSPEND);\n-        getService(UserService.class).status(userId, statusMod);\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            service.status(userId, statusMod);\n+            resetClient(UserService.class);\n+        }\n     }\n \n-    public void reactivate(final long userId, final List<StatusBean> statuses) {\n+    public void reactivate(final String etag, final long userId, final List<StatusBean> statuses) {\n         StatusMod statusMod = StatusUtils.buildStatusMod(statuses, true);\n         statusMod.setType(StatusMod.ModType.REACTIVATE);\n-        getService(UserService.class).status(userId, statusMod);\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            service.status(userId, statusMod);\n+            resetClient(UserService.class);\n+        }\n     }\n \n     @Override\n-    public BulkActionResult bulkAction(final BulkAction action) {\n-        return getService(UserService.class).bulk(action);\n+    public void bulkAction(final BulkAction action) {\n+        getService(UserService.class).bulk(action);\n     }\n \n-    public BulkActionResult unlink(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).bulkDeassociation(userId, ResourceDeassociationActionType.UNLINK,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n-                .readEntity(BulkActionResult.class);\n+    public void unlink(final String etag, final long userId, final List<StatusBean> statuses) {\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            service.bulkDeassociation(userId, ResourceDeassociationActionType.UNLINK,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            resetClient(UserService.class);\n+        }\n     }\n \n-    public BulkActionResult link(final long userId, final List<StatusBean> statuses) {\n-        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-        associationMod.getTargetResources().addAll(\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class));\n+    public void link(final String etag, final long userId, final List<StatusBean> statuses) {\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n \n-        return getService(UserService.class).bulkAssociation(userId, ResourceAssociationActionType.LINK, associationMod)\n-                .readEntity(BulkActionResult.class);\n+            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            service.bulkAssociation(userId, ResourceAssociationActionType.LINK, associationMod);\n+\n+            resetClient(UserService.class);\n+        }\n     }\n \n-    public BulkActionResult deprovision(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).bulkDeassociation(userId, ResourceDeassociationActionType.DEPROVISION,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n-                .readEntity(BulkActionResult.class);\n+    public BulkActionResult deprovision(final String etag, final long userId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            result = service.bulkDeassociation(userId, ResourceDeassociationActionType.DEPROVISION,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n     }\n \n-    public BulkActionResult provision(\n-            final long userId, final List<StatusBean> statuses, final boolean changepwd, final String password) {\n-        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-        associationMod.getTargetResources().addAll(\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class));\n-        associationMod.setChangePwd(changepwd);\n-        associationMod.setPassword(password);\n+    public BulkActionResult provision(final String etag, final long userId,\n+            final List<StatusBean> statuses, final boolean changepwd, final String password) {\n \n-        return getService(UserService.class)\n-                .bulkAssociation(userId, ResourceAssociationActionType.PROVISION, associationMod)\n-                .readEntity(BulkActionResult.class);\n-    }\n+        BulkActionResult result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n \n-    public BulkActionResult unassign(final long userId, final List<StatusBean> statuses) {\n-        return getService(UserService.class).bulkDeassociation(userId, ResourceDeassociationActionType.UNASSIGN,\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class))\n-                .readEntity(BulkActionResult.class);\n+            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            associationMod.setChangePwd(changepwd);\n+            associationMod.setPassword(password);\n+\n+            result = service.bulkAssociation(userId, ResourceAssociationActionType.PROVISION, associationMod).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n+    }\n+\n+    public BulkActionResult unassign(final String etag, final long userId, final List<StatusBean> statuses) {\n+        BulkActionResult result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n+            result = service.bulkDeassociation(userId, ResourceDeassociationActionType.UNASSIGN,\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class)).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n     }\n \n-    public BulkActionResult assign(\n-            final long userId, final List<StatusBean> statuses, final boolean changepwd, final String password) {\n-        final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n-        associationMod.getTargetResources().addAll(\n-                CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceName.class));\n-        associationMod.setChangePwd(changepwd);\n-        associationMod.setPassword(password);\n+    public BulkActionResult assign(final String etag, final long userId,\n+            final List<StatusBean> statuses, final boolean changepwd, final String password) {\n+\n+        BulkActionResult result;\n+        synchronized (this) {\n+            UserService service = getService(etag, UserService.class);\n \n-        return getService(UserService.class).bulkAssociation(userId, ResourceAssociationActionType.ASSIGN,\n-                associationMod)\n-                .readEntity(BulkActionResult.class);\n+            final ResourceAssociationMod associationMod = new ResourceAssociationMod();\n+            associationMod.getTargetResources().addAll(\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n+                            ResourceName.class));\n+            associationMod.setChangePwd(changepwd);\n+            associationMod.setPassword(password);\n+\n+            result = service.bulkAssociation(userId, ResourceAssociationActionType.ASSIGN, associationMod).\n+                    readEntity(BulkActionResult.class);\n+            resetClient(UserService.class);\n+        }\n+        return result;\n     }\n }"},{"sha":"2d84327b4f39b508860588553519b22dab1e301b","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/RestServiceExceptionMapper.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -103,6 +103,7 @@ public Response toResponse(final Exception ex) {\n                 // process JAX-RS validation errors\r\n                 if (builder == null && ex instanceof ValidationException) {\r\n                     builder = JAXRSUtils.fromResponse(validationEM.toResponse((ValidationException) ex)).\r\n+                            header(RESTHeaders.ERROR_CODE, ClientExceptionType.RESTValidation.getHeaderValue()).\r\n                             header(RESTHeaders.ERROR_INFO,\r\n                                     ClientExceptionType.RESTValidation.getInfoHeaderValue(getExMessage(ex)));\r\n \r"},{"sha":"a28e6be43d37f1dc1d8c1ce1d6c675bd941ef19d","filename":"core/src/main/java/org/apache/syncope/core/services/AbstractServiceImpl.java","status":"modified","additions":15,"deletions":5,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FAbstractServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FAbstractServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FAbstractServiceImpl.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -24,6 +24,7 @@\n import java.util.List;\n import java.util.Map;\n import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MultivaluedMap;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.UriBuilder;\n@@ -81,7 +82,7 @@ protected Preference getPreference() {\n      * @param entity the entity just created\n      * @return response to successful <tt>create</tt> request\n      */\n-    protected Response.ResponseBuilder createResponse(final Object id, final Object entity) {\n+    protected Response createResponse(final Object id, final Object entity) {\n         URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(id)).build();\n \n         Response.ResponseBuilder builder = Response.\n@@ -103,7 +104,7 @@ protected Response.ResponseBuilder createResponse(final Object id, final Object\n             builder = builder.header(RESTHeaders.PREFERENCE_APPLIED, getPreference().toString());\n         }\n \n-        return builder;\n+        return builder.build();\n     }\n \n     /**\n@@ -112,7 +113,7 @@ protected Response.ResponseBuilder createResponse(final Object id, final Object\n      * @param entity the entity just modified\n      * @return response to successful modification request\n      */\n-    protected Response.ResponseBuilder modificationResponse(final Object entity) {\n+    protected Response modificationResponse(final Object entity) {\n         Response.ResponseBuilder builder;\n         switch (getPreference()) {\n             case RETURN_NO_CONTENT:\n@@ -129,7 +130,16 @@ protected Response.ResponseBuilder modificationResponse(final Object entity) {\n             builder = builder.header(RESTHeaders.PREFERENCE_APPLIED, getPreference().toString());\n         }\n \n-        return builder;\n+        return builder.build();\n+    }\n+\n+    protected void checkETag(final String etag) {\n+        Response.ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(etag));\n+        if (builder != null) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.ConcurrentModification);\n+            sce.getElements().add(\"Mismatching ETag value\");\n+            throw sce;\n+        }\n     }\n \n     protected SearchCond getSearchCond(final String fiql) {\n@@ -180,7 +190,7 @@ protected List<OrderByClause> getOrderByClauses(final String orderBy) {\n      * @param page current page\n      * @param size requested size\n      * @param totalCount total result size (not considering pagination)\n-     * @return\n+     * @return paged result\n      */\n     protected <T extends AbstractBaseBean> PagedResult<T> buildPagedResult(\n             final List<T> list, final int page, final int size, final int totalCount) {"},{"sha":"16dd207ccb4a5ad7075c79f357b285960c04a88f","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":62,"deletions":79,"changes":141,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -20,10 +20,7 @@\n \r\n import java.util.List;\r\n \r\n-import javax.ws.rs.core.EntityTag;\r\n import javax.ws.rs.core.Response;\r\n-import javax.ws.rs.core.Response.ResponseBuilder;\r\n-\r\n import org.apache.syncope.common.mod.RoleMod;\r\n import org.apache.syncope.common.reqres.BulkActionResult;\r\n import org.apache.syncope.common.services.RoleService;\r\n@@ -54,20 +51,17 @@ public List<RoleTO> children(final Long roleId) {\n     @Override\r\n     public Response create(final RoleTO roleTO) {\r\n         RoleTO created = controller.create(roleTO);\r\n-        return createResponse(created.getId(), created).build();\r\n+        return createResponse(created.getId(), created);\r\n     }\r\n \r\n     @Override\r\n     public Response delete(final Long roleId) {\r\n         RoleTO role = controller.read(roleId);\r\n \r\n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(role.getETagValue()));\r\n-        if (builder == null) {\r\n-            RoleTO deleted = controller.delete(roleId);\r\n-            builder = modificationResponse(deleted);\r\n-        }\r\n+        checkETag(role.getETagValue());\r\n \r\n-        return builder.build();\r\n+        RoleTO deleted = controller.delete(roleId);\r\n+        return modificationResponse(deleted);\r\n     }\r\n \r\n     @Override\r\n@@ -133,14 +127,11 @@ public RoleTO readSelf(final Long roleId) {\n     public Response update(final Long roleId, final RoleMod roleMod) {\r\n         RoleTO role = controller.read(roleId);\r\n \r\n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(role.getETagValue()));\r\n-        if (builder == null) {\r\n-            roleMod.setId(roleId);\r\n-            RoleTO updated = controller.update(roleMod);\r\n-            builder = modificationResponse(updated);\r\n-        }\r\n+        checkETag(role.getETagValue());\r\n \r\n-        return builder.build();\r\n+        roleMod.setId(roleId);\r\n+        RoleTO updated = controller.update(roleMod);\r\n+        return modificationResponse(updated);\r\n     }\r\n \r\n     @Override\r\n@@ -149,45 +140,41 @@ public Response bulkDeassociation(\n \r\n         RoleTO role = controller.read(roleId);\r\n \r\n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(role.getETagValue()));\r\n-        if (builder == null) {\r\n-            RoleTO updated;\r\n+        checkETag(role.getETagValue());\r\n \r\n-            switch (type) {\r\n-                case UNLINK:\r\n-                    updated = controller.unlink(roleId, CollectionWrapper.unwrap(resourceNames));\r\n-                    break;\r\n+        RoleTO updated;\r\n+        switch (type) {\r\n+            case UNLINK:\r\n+                updated = controller.unlink(roleId, CollectionWrapper.unwrap(resourceNames));\r\n+                break;\r\n \r\n-                case UNASSIGN:\r\n-                    updated = controller.unassign(roleId, CollectionWrapper.unwrap(resourceNames));\r\n-                    break;\r\n+            case UNASSIGN:\r\n+                updated = controller.unassign(roleId, CollectionWrapper.unwrap(resourceNames));\r\n+                break;\r\n \r\n-                case DEPROVISION:\r\n-                    updated = controller.deprovision(roleId, CollectionWrapper.unwrap(resourceNames));\r\n-                    break;\r\n+            case DEPROVISION:\r\n+                updated = controller.deprovision(roleId, CollectionWrapper.unwrap(resourceNames));\r\n+                break;\r\n \r\n-                default:\r\n-                    updated = controller.read(roleId);\r\n-            }\r\n+            default:\r\n+                updated = controller.read(roleId);\r\n+        }\r\n \r\n-            final BulkActionResult res = new BulkActionResult();\r\n-\r\n-            if (type == ResourceDeassociationActionType.UNLINK) {\r\n-                for (ResourceName resourceName : resourceNames) {\r\n-                    res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\r\n-                            ? BulkActionResult.Status.FAILURE\r\n-                            : BulkActionResult.Status.SUCCESS);\r\n-                }\r\n-            } else {\r\n-                for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\r\n-                    res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\r\n-                }\r\n-            }\r\n+        final BulkActionResult res = new BulkActionResult();\r\n \r\n-            builder = modificationResponse(res);\r\n+        if (type == ResourceDeassociationActionType.UNLINK) {\r\n+            for (ResourceName resourceName : resourceNames) {\r\n+                res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\r\n+                        ? BulkActionResult.Status.FAILURE\r\n+                        : BulkActionResult.Status.SUCCESS);\r\n+            }\r\n+        } else {\r\n+            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\r\n+                res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\r\n+            }\r\n         }\r\n \r\n-        return builder.build();\r\n+        return modificationResponse(res);\r\n     }\r\n \r\n     @Override\r\n@@ -196,44 +183,40 @@ public Response bulkAssociation(\n \r\n         RoleTO role = controller.read(roleId);\r\n \r\n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(role.getETagValue()));\r\n-        if (builder == null) {\r\n-            RoleTO updated;\r\n+        checkETag(role.getETagValue());\r\n \r\n-            switch (type) {\r\n-                case LINK:\r\n-                    updated = controller.link(roleId, CollectionWrapper.unwrap(resourceNames));\r\n-                    break;\r\n+        RoleTO updated;\r\n+        switch (type) {\r\n+            case LINK:\r\n+                updated = controller.link(roleId, CollectionWrapper.unwrap(resourceNames));\r\n+                break;\r\n \r\n-                case ASSIGN:\r\n-                    updated = controller.assign(roleId, CollectionWrapper.unwrap(resourceNames), false, null);\r\n-                    break;\r\n+            case ASSIGN:\r\n+                updated = controller.assign(roleId, CollectionWrapper.unwrap(resourceNames), false, null);\r\n+                break;\r\n \r\n-                case PROVISION:\r\n-                    updated = controller.provision(roleId, CollectionWrapper.unwrap(resourceNames), false, null);\r\n-                    break;\r\n+            case PROVISION:\r\n+                updated = controller.provision(roleId, CollectionWrapper.unwrap(resourceNames), false, null);\r\n+                break;\r\n \r\n-                default:\r\n-                    updated = controller.read(roleId);\r\n-            }\r\n+            default:\r\n+                updated = controller.read(roleId);\r\n+        }\r\n \r\n-            final BulkActionResult res = new BulkActionResult();\r\n-\r\n-            if (type == ResourceAssociationActionType.LINK) {\r\n-                for (ResourceName resourceName : resourceNames) {\r\n-                    res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\r\n-                            ? BulkActionResult.Status.FAILURE\r\n-                            : BulkActionResult.Status.SUCCESS);\r\n-                }\r\n-            } else {\r\n-                for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\r\n-                    res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\r\n-                }\r\n-            }\r\n+        final BulkActionResult res = new BulkActionResult();\r\n \r\n-            builder = modificationResponse(res);\r\n+        if (type == ResourceAssociationActionType.LINK) {\r\n+            for (ResourceName resourceName : resourceNames) {\r\n+                res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\r\n+                        ? BulkActionResult.Status.FAILURE\r\n+                        : BulkActionResult.Status.SUCCESS);\r\n+            }\r\n+        } else {\r\n+            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\r\n+                res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\r\n+            }\r\n         }\r\n \r\n-        return builder.build();\r\n+        return modificationResponse(res);\r\n     }\r\n }\r"},{"sha":"2ea5b4f037466f47a952b22268ab5cac77da93ab","filename":"core/src/main/java/org/apache/syncope/core/services/UserSelfServiceImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -52,7 +52,7 @@ public Response create(final UserTO userTO) {\n         }\n \n         UserTO created = controller.createSelf(userTO);\n-        return createResponse(created.getId(), created).build();\n+        return createResponse(created.getId(), created);\n     }\n \n     @Override\n@@ -64,13 +64,13 @@ public UserTO read() {\n     public Response update(final Long userId, final UserMod userMod) {\n         userMod.setId(userId);\n         UserTO updated = controller.updateSelf(userMod);\n-        return modificationResponse(updated).build();\n+        return modificationResponse(updated);\n     }\n \n     @Override\n     public Response delete() {\n         UserTO deleted = controller.deleteSelf();\n-        return modificationResponse(deleted).build();\n+        return modificationResponse(deleted);\n     }\n \n }"},{"sha":"1908b8e98bcf5983647382fb0e1db263a32ec877","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":79,"deletions":99,"changes":178,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -19,10 +19,8 @@\n package org.apache.syncope.core.services;\n \n import java.util.List;\n-import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n-import javax.ws.rs.core.Response.ResponseBuilder;\n import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.mod.StatusMod;\n import org.apache.syncope.common.mod.UserMod;\n@@ -66,20 +64,17 @@ public Response getUserId(final String username) {\n     @Override\n     public Response create(final UserTO userTO) {\n         UserTO created = controller.create(userTO);\n-        return createResponse(created.getId(), created).build();\n+        return createResponse(created.getId(), created);\n     }\n \n     @Override\n     public Response delete(final Long userId) {\n         UserTO user = controller.read(userId);\n \n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(user.getETagValue()));\n-        if (builder == null) {\n-            UserTO deleted = controller.delete(userId);\n-            builder = modificationResponse(deleted);\n-        }\n+        checkETag(user.getETagValue());\n \n-        return builder.build();\n+        UserTO deleted = controller.delete(userId);\n+        return modificationResponse(deleted);\n     }\n \n     @Override\n@@ -135,28 +130,22 @@ public PagedResult<UserTO> search(final String fiql, final Integer page, final I\n     public Response update(final Long userId, final UserMod userMod) {\n         UserTO user = controller.read(userId);\n \n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(user.getETagValue()));\n-        if (builder == null) {\n-            userMod.setId(userId);\n-            UserTO updated = controller.update(userMod);\n-            builder = modificationResponse(updated);\n-        }\n+        checkETag(user.getETagValue());\n \n-        return builder.build();\n+        userMod.setId(userId);\n+        UserTO updated = controller.update(userMod);\n+        return modificationResponse(updated);\n     }\n \n     @Override\n     public Response status(final Long userId, final StatusMod statusMod) {\n         UserTO user = controller.read(userId);\n \n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(user.getETagValue()));\n-        if (builder == null) {\n-            statusMod.setId(userId);\n-            UserTO updated = controller.status(statusMod);\n-            builder = modificationResponse(updated);\n-        }\n+        checkETag(user.getETagValue());\n \n-        return builder.build();\n+        statusMod.setId(userId);\n+        UserTO updated = controller.status(statusMod);\n+        return modificationResponse(updated);\n     }\n \n     @Override\n@@ -165,46 +154,41 @@ public Response bulkDeassociation(\n \n         final UserTO user = controller.read(userId);\n \n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(user.getETagValue()));\n+        checkETag(user.getETagValue());\n \n-        if (builder == null) {\n-            UserTO updated;\n+        UserTO updated;\n+        switch (type) {\n+            case UNLINK:\n+                updated = controller.unlink(userId, CollectionWrapper.unwrap(resourceNames));\n+                break;\n \n-            switch (type) {\n-                case UNLINK:\n-                    updated = controller.unlink(userId, CollectionWrapper.unwrap(resourceNames));\n-                    break;\n+            case UNASSIGN:\n+                updated = controller.unassign(userId, CollectionWrapper.unwrap(resourceNames));\n+                break;\n \n-                case UNASSIGN:\n-                    updated = controller.unassign(userId, CollectionWrapper.unwrap(resourceNames));\n-                    break;\n+            case DEPROVISION:\n+                updated = controller.deprovision(userId, CollectionWrapper.unwrap(resourceNames));\n+                break;\n \n-                case DEPROVISION:\n-                    updated = controller.deprovision(userId, CollectionWrapper.unwrap(resourceNames));\n-                    break;\n+            default:\n+                updated = controller.read(userId);\n+        }\n \n-                default:\n-                    updated = controller.read(userId);\n-            }\n+        final BulkActionResult res = new BulkActionResult();\n \n-            final BulkActionResult res = new BulkActionResult();\n-\n-            if (type == ResourceDeassociationActionType.UNLINK) {\n-                for (ResourceName resourceName : resourceNames) {\n-                    res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\n-                            ? BulkActionResult.Status.FAILURE\n-                            : BulkActionResult.Status.SUCCESS);\n-                }\n-            } else {\n-                for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n-                    res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\n-                }\n+        if (type == ResourceDeassociationActionType.UNLINK) {\n+            for (ResourceName resourceName : resourceNames) {\n+                res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\n+                        ? BulkActionResult.Status.FAILURE\n+                        : BulkActionResult.Status.SUCCESS);\n+            }\n+        } else {\n+            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n+                res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\n             }\n-\n-            builder = modificationResponse(res);\n         }\n \n-        return builder.build();\n+        return modificationResponse(res);\n     }\n \n     @Override\n@@ -213,55 +197,51 @@ public Response bulkAssociation(\n \n         final UserTO user = controller.read(userId);\n \n-        ResponseBuilder builder = messageContext.getRequest().evaluatePreconditions(new EntityTag(user.getETagValue()));\n-        if (builder == null) {\n-            UserTO updated;\n-\n-            switch (type) {\n-                case LINK:\n-                    updated = controller.link(\n-                            userId,\n-                            CollectionWrapper.unwrap(associationMod.getTargetResources()));\n-                    break;\n-\n-                case ASSIGN:\n-                    updated = controller.assign(\n-                            userId,\n-                            CollectionWrapper.unwrap(associationMod.getTargetResources()),\n-                            associationMod.isChangePwd(),\n-                            associationMod.getPassword());\n-                    break;\n-\n-                case PROVISION:\n-                    updated = controller.provision(\n-                            userId,\n-                            CollectionWrapper.unwrap(associationMod.getTargetResources()),\n-                            associationMod.isChangePwd(),\n-                            associationMod.getPassword());\n-                    break;\n-\n-                default:\n-                    updated = controller.read(userId);\n-            }\n+        checkETag(user.getETagValue());\n+\n+        UserTO updated;\n+        switch (type) {\n+            case LINK:\n+                updated = controller.link(\n+                        userId,\n+                        CollectionWrapper.unwrap(associationMod.getTargetResources()));\n+                break;\n+\n+            case ASSIGN:\n+                updated = controller.assign(\n+                        userId,\n+                        CollectionWrapper.unwrap(associationMod.getTargetResources()),\n+                        associationMod.isChangePwd(),\n+                        associationMod.getPassword());\n+                break;\n+\n+            case PROVISION:\n+                updated = controller.provision(\n+                        userId,\n+                        CollectionWrapper.unwrap(associationMod.getTargetResources()),\n+                        associationMod.isChangePwd(),\n+                        associationMod.getPassword());\n+                break;\n+\n+            default:\n+                updated = controller.read(userId);\n+        }\n \n-            final BulkActionResult res = new BulkActionResult();\n-\n-            if (type == ResourceAssociationActionType.LINK) {\n-                for (ResourceName resourceName : associationMod.getTargetResources()) {\n-                    res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\n-                            ? BulkActionResult.Status.FAILURE\n-                            : BulkActionResult.Status.SUCCESS);\n-                }\n-            } else {\n-                for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n-                    res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\n-                }\n-            }\n+        final BulkActionResult res = new BulkActionResult();\n \n-            builder = modificationResponse(res);\n+        if (type == ResourceAssociationActionType.LINK) {\n+            for (ResourceName resourceName : associationMod.getTargetResources()) {\n+                res.add(resourceName.getElement(), updated.getResources().contains(resourceName.getElement())\n+                        ? BulkActionResult.Status.FAILURE\n+                        : BulkActionResult.Status.SUCCESS);\n+            }\n+        } else {\n+            for (PropagationStatus propagationStatusTO : updated.getPropagationStatusTOs()) {\n+                res.add(propagationStatusTO.getResource(), propagationStatusTO.getStatus().toString());\n+            }\n         }\n \n-        return builder.build();\n+        return modificationResponse(res);\n     }\n \n     @Override"},{"sha":"3cb958b2bf7f0f0948aba6ebeabbfa42ad4753df","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e35c02a553cafc8965546648dcdc2e96d0326bd6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=e35c02a553cafc8965546648dcdc2e96d0326bd6","patch":"@@ -37,7 +37,6 @@\n import javax.naming.NamingException;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.Response;\n-import javax.xml.ws.WebServiceException;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.common.util.Base64Utility;\n import org.apache.cxf.helpers.IOUtils;\n@@ -1393,7 +1392,7 @@ public void issueSYNCOPE51() {\n         final String originalCAValue = defaultCA.getValues().get(0);\n         defaultCA.getValues().set(0, \"MD5\");\n         configurationService.set(defaultCA.getSchema(), defaultCA);\n-        \n+\n         AttributeTO newCA = configurationService.read(defaultCA.getSchema());\n         assertEquals(defaultCA, newCA);\n \n@@ -1410,7 +1409,7 @@ public void issueSYNCOPE51() {\n \n         defaultCA.getValues().set(0, originalCAValue);\n         configurationService.set(defaultCA.getSchema(), defaultCA);\n-        \n+\n         AttributeTO oldCA = configurationService.read(defaultCA.getSchema());\n         assertEquals(defaultCA, oldCA);\n     }\n@@ -2183,8 +2182,8 @@ public void ifMatch() {\n         try {\n             ifMatchService.update(userMod.getId(), userMod);\n             fail();\n-        } catch (WebServiceException e) {\n-            assertTrue(e.getMessage().endsWith(Response.Status.PRECONDITION_FAILED.name()));\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.ConcurrentModification, e.getType());\n         }\n \n         userTO = userService.read(userTO.getId());"}]}