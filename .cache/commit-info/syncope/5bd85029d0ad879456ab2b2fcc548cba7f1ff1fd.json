{"sha":"5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjViZDg1MDI5ZDBhZDg3OTQ1NmFiMmIyZmNjNTQ4Y2JhN2YxZmYxZmQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-21T16:32:29Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-21T16:43:01Z"},"message":"[SYNCOPE-1427] Besides JDK 11, also switched to CXF 3.3.0-SNAPSHOT and OpenJPA 3.0.1-SNAPSHOT","tree":{"sha":"a7c27b417759e2ab52bebd28d23092e04f4c3d2c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a7c27b417759e2ab52bebd28d23092e04f4c3d2c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"629704c44707175d3f2e42fa1a7e5cc85be2b4c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/629704c44707175d3f2e42fa1a7e5cc85be2b4c9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/629704c44707175d3f2e42fa1a7e5cc85be2b4c9"}],"stats":{"total":312,"additions":170,"deletions":142},"files":[{"sha":"3a7bf334b810b22b6b09e3723487616d1d94e6ac","filename":".travis.yml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/.travis.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/.travis.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.travis.yml?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -16,16 +16,16 @@\n sudo: false\n language: java\n jdk:\n-  - openjdk10\n+  - openjdk11\n before_install:\n-  - echo 'MAVEN_OPTS=\"-Xmx2048M -Xss128M -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:+TieredCompilation -XX:TieredStopAtLevel=1\"' >~/.mavenrc\n+  - echo 'MAVEN_OPTS=\"-Xmx2048M -Xss128M -XX:+CMSClassUnloadingEnabled -XX:+TieredCompilation -XX:TieredStopAtLevel=1\"' >~/.mavenrc\n # default install is mvn install --quiet -DskipTests=true\n install: travis_wait 30 mvn --show-version --quiet -T 1C -P all,skipTests\n before_script:\n   - cd fit/core-reference\n script:\n   # invoker.streamLogs: we cannot access to log files through Travis web ui, so display everything in the console\n-  - travis_wait 120 mvn --show-version verify -Dinvoker.streamLogs=true\n+  - mvn --show-version verify -Dinvoker.streamLogs=true\n after_failure:\n   - cat target/log/*\n   - cat target/failsafe-reports/org.apache.syncope.fit.*-output.txt"},{"sha":"d7f98b0b6e2b0ab5e2ff83409d31fae3bc1a26ac","filename":"appveyor.yml","status":"modified","additions":17,"deletions":6,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/appveyor.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/appveyor.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/appveyor.yml?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -19,23 +19,34 @@ os: Windows Server 2012\n init:\t\t\n  - git config --global core.autocrlf true\n install:\n-  - cinst git\n-  - cinst patch\n+  # Make unix-compatible patch.exe available to the build by copying it from\n+  # Git\\usr\\bin (that we remove from PATH) to another directory and adding it to\n+  # PATH; the reason we copy it is that logic below removes\n+  # C:\\Program Files\\Git\\usr\\bin from Path to avoid build issue resulting from\n+  # sh.exe being on the path.\n+  - cmd: mkdir \"C:\\Program Files\\PatchFromGit\"\n+  - ps: copy \"C:\\Program Files\\Git\\usr\\bin\\patch.exe\" \"C:\\Program Files\\PatchFromGit\"\n+  - ps: copy \"C:\\Program Files\\Git\\usr\\bin\\msys*.dll\" \"C:\\Program Files\\PatchFromGit\"\n+  - cmd: SET PATH=C:\\Program Files\\PatchFromGit;%PATH%\n+\n   - ps: |\n       Add-Type -AssemblyName System.IO.Compression.FileSystem\n       if (!(Test-Path -Path \"C:\\maven\" )) {\n         (new-object System.Net.WebClient).DownloadFile('https://www.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.zip', 'C:\\maven-bin.zip')\n         [System.IO.Compression.ZipFile]::ExtractToDirectory(\"C:\\maven-bin.zip\", \"C:\\maven\")\n       }\n-  - cmd: SET PATH=C:\\maven\\apache-maven-3.5.4\\bin;%JAVA_HOME%\\bin;=%;\n-  - cmd: SET JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0\n+  - cmd: SET PATH=C:\\maven\\apache-maven-3.5.4\\bin;%JAVA_HOME%\\bin;%PATH%\n+  - cmd: SET JAVA_HOME=C:\\Program Files\\Java\\jdk11\n   - cmd: SET M2_HOME=C:\\maven\\apache-maven-3.5.4\n-  - cmd: SET MAVEN_OPTS=-Xmx4g\n+  - cmd: SET MAVEN_OPTS=\"-Xmx2048M -Xss128M -XX:+CMSClassUnloadingEnabled -XX:+TieredCompilation -XX:TieredStopAtLevel=1\"\n   - cmd: SET JAVA_OPTS=-Xmx4g\n+\n+  - echo %PATH%\n build_script:\n   - mvn --show-version --quiet -T 1C -PskipTests,all --batch-mode\n test_script:\n-  - mvn -T 1C clean install --batch-mode\n+  - cd fit\\core_reference\n+  - mvn clean verify\n cache:\n   - C:\\maven\\\n   - C:\\Users\\appveyor\\.m2"},{"sha":"e5e16329682450ee7e2a1640ae10ec13e9283a85","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/pages/HomePage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -48,7 +48,7 @@ public HomePage(final PageParameters parameters) {\n \n     private void appendMessage(final StringBuilder redirectUrl, final String message) {\n         try {\n-            redirectUrl.append(URLEncoder.encode(message, StandardCharsets.UTF_8.name()));\n+            redirectUrl.append(URLEncoder.encode(message, StandardCharsets.UTF_8));\n         } catch (Exception e) {\n             redirectUrl.append(\"Generic error\");\n         }"},{"sha":"d48bd150c3710c6c78f1f8b731843af1a0b80c71","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/GroupResource.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -63,15 +63,16 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             final GroupResponse groupResponse = new GroupResponse();\n             if (customTemplate.getWizard().getSteps().containsKey(\"groups\")) {\n                 String realm = URLDecoder.decode(attributes.getParameters().get(\"realm\").\n-                        toString(SyncopeConstants.ROOT_REALM), \"UTF-8\");\n+                        toString(SyncopeConstants.ROOT_REALM), StandardCharsets.UTF_8);\n                 StringValue term = attributes.getParameters().get(\"term\");\n \n                 final int totGroups = SyncopeEnduserSession.get().\n                         getService(SyncopeService.class).numbers().getTotalGroups();\n                 final List<GroupTO> groupTOs = SyncopeEnduserSession.get().\n                         getService(SyncopeService.class).searchAssignableGroups(\n                         realm,\n-                        term.isNull() || term.isEmpty() ? null : URLDecoder.decode(term.toString(), \"UTF-8\"),\n+                        term.isNull() || term.isEmpty()\n+                        ? null : URLDecoder.decode(term.toString(), StandardCharsets.UTF_8),\n                         1,\n                         30).getResult();\n                 groupResponse.setTotGroups(totGroups);"},{"sha":"71a6bb5ef30d389e0fc18ec0e711f15d37319c98","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -240,32 +240,38 @@ public void load() {\n                         if (!clazz.equals(EmptyExternalResourceProvider.class)\n                                 && !clazz.isInstance(resourceProvider)) {\n \n-                            resourceProvider = (ExternalResourceProvider) clazz.newInstance();\n+                            resourceProvider = (ExternalResourceProvider) clazz.\n+                                    getConstructor().newInstance();\n                         }\n                     } else if (AnyWizardBuilderAdditionalSteps.class.isAssignableFrom(clazz)) {\n                         if (!clazz.equals(EmptyAnyWizardBuilderAdditionalSteps.class)\n                                 && !clazz.isInstance(anyWizardBuilderAdditionalSteps)) {\n \n-                            anyWizardBuilderAdditionalSteps = (AnyWizardBuilderAdditionalSteps) clazz.newInstance();\n+                            anyWizardBuilderAdditionalSteps = (AnyWizardBuilderAdditionalSteps) clazz.\n+                                    getConstructor().newInstance();\n                         }\n                     } else if (StatusProvider.class.isAssignableFrom(clazz)) {\n                         if (!clazz.equals(EmptyStatusProvider.class)\n                                 && !clazz.isInstance(statusProvider)) {\n \n-                            statusProvider = (StatusProvider) clazz.newInstance();\n+                            statusProvider = (StatusProvider) clazz.\n+                                    getConstructor().newInstance();\n                         }\n                     } else if (VirSchemaDetailsPanelProvider.class.isAssignableFrom(clazz)) {\n                         if (!clazz.equals(EmptyVirSchemaDetailsPanelProvider.class)\n                                 && !clazz.isInstance(virSchemaDetailsPanelProvider)) {\n \n-                            virSchemaDetailsPanelProvider = (VirSchemaDetailsPanelProvider) clazz.newInstance();\n+                            virSchemaDetailsPanelProvider = (VirSchemaDetailsPanelProvider) clazz.\n+                                    getConstructor().newInstance();\n                         }\n                     } else if (AnyDirectoryPanelAditionalActionLinksProvider.class.isAssignableFrom(clazz)) {\n                         if (!clazz.equals(EmptyAnyDirectoryPanelAditionalActionLinksProvider.class)\n                                 && !clazz.isInstance(anyDirectoryPanelAditionalActionLinksProvider)) {\n \n                             anyDirectoryPanelAditionalActionLinksProvider =\n-                                    (AnyDirectoryPanelAditionalActionLinksProvider) clazz.newInstance();\n+                                    (AnyDirectoryPanelAditionalActionLinksProvider) clazz.\n+                                            getConstructor().newInstance();\n+\n                         }\n                     }\n                 }"},{"sha":"15819e057e515b99425bb9451eb096d93d84cf22","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/batch/BatchClientProxyImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchClientProxyImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchClientProxyImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbatch%2FBatchClientProxyImpl.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -70,7 +70,7 @@ protected Object[] preProcessResult(final Message message) throws Exception {\n         bri.setHeaders((Map<String, List<Object>>) message.get(Message.PROTOCOL_HEADERS));\n \n         BatchOfflineHTTPConduit conduit = (BatchOfflineHTTPConduit) message.getExchange().getConduit(message);\n-        bri.setContent(conduit.getOutputStream().toString(StandardCharsets.UTF_8.name()));\n+        bri.setContent(conduit.getOutputStream().toString(StandardCharsets.UTF_8));\n \n         factory.add(bri);\n         return null;"},{"sha":"7c216b360304b15f0bf6207304aea681a339da5e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/search/SearchCondConverter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverter.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -50,7 +50,7 @@ public static SearchCond convert(final String fiql, final String... realms) {\n             if (realms != null && realms.length > 0) {\n                 visitor.setRealm(realms[0]);\n             }\n-            SearchCondition<SearchBean> sc = parser.parse(URLDecoder.decode(fiql, StandardCharsets.UTF_8.name()));\n+            SearchCondition<SearchBean> sc = parser.parse(URLDecoder.decode(fiql, StandardCharsets.UTF_8));\n             sc.accept(visitor);\n \n             return visitor.getQuery();"},{"sha":"7a2411b6a32b62ad739a5e0be13e97af71285186","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/search/SearchCondVisitor.java","status":"modified","additions":10,"deletions":15,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.api.search;\n \n-import java.io.UnsupportedEncodingException;\n import java.net.URLDecoder;\n import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n@@ -80,21 +79,17 @@ private SearchCond visitPrimitive(final SearchCondition<SearchBean> sc) {\n         String name = getRealPropertyName(sc.getStatement().getProperty());\n         Optional<SpecialAttr> specialAttrName = SpecialAttr.fromString(name);\n \n-        String value = null;\n-        try {\n-            value = SearchUtils.toSqlWildcardString(\n-                    URLDecoder.decode(sc.getStatement().getValue().toString(), StandardCharsets.UTF_8.name()), false).\n-                    replaceAll(\"\\\\\\\\_\", \"_\");\n-\n-            // see SYNCOPE-1321\n-            if (TIMEZONE.matcher(value).matches()) {\n-                char[] valueAsArray = value.toCharArray();\n-                valueAsArray[valueAsArray.length - 5] = '+';\n-                value = new String(valueAsArray);\n-            }\n-        } catch (UnsupportedEncodingException e) {\n-            throw new IllegalArgumentException(\"While decoding \" + sc.getStatement().getValue(), e);\n+        String value = SearchUtils.toSqlWildcardString(\n+                URLDecoder.decode(sc.getStatement().getValue().toString(), StandardCharsets.UTF_8), false).\n+                replaceAll(\"\\\\\\\\_\", \"_\");\n+\n+        // see SYNCOPE-1321\n+        if (TIMEZONE.matcher(value).matches()) {\n+            char[] valueAsArray = value.toCharArray();\n+            valueAsArray[valueAsArray.length - 5] = '+';\n+            value = new String(valueAsArray);\n         }\n+\n         Optional<SpecialAttr> specialAttrValue = SpecialAttr.fromString(value);\n \n         AttributeCond attributeCond = createAttributeCond(name);"},{"sha":"34ead77958c50b5ed068a8aa5f1628963f546723","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/PersistenceContext.java","status":"modified","additions":28,"deletions":18,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.jpa;\n \n+import java.lang.reflect.InvocationTargetException;\n import java.util.HashMap;\n import java.util.Map;\n import javax.persistence.ValidationMode;\n@@ -102,65 +103,74 @@ public CommonEntityManagerFactoryConf commonEMFConf() {\n \n     @Bean\n     public EntityFactory entityFactory()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (EntityFactory) Class.forName(env.getProperty(\"entity.factory\")).newInstance();\n+        return (EntityFactory) Class.forName(env.getProperty(\"entity.factory\")).getConstructor().newInstance();\n     }\n \n     @Bean\n     public PlainSchemaDAO plainSchemaDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (PlainSchemaDAO) Class.forName(env.getProperty(\"plainSchema.dao\")).newInstance();\n+        return (PlainSchemaDAO) Class.forName(env.getProperty(\"plainSchema.dao\")).getConstructor().newInstance();\n     }\n \n     @Bean\n     public PlainAttrDAO plainAttrDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (PlainAttrDAO) Class.forName(env.getProperty(\"plainAttr.dao\")).newInstance();\n+        return (PlainAttrDAO) Class.forName(env.getProperty(\"plainAttr.dao\")).getConstructor().newInstance();\n     }\n \n     @Bean\n     public PlainAttrValueDAO plainAttrValueDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (PlainAttrValueDAO) Class.forName(env.getProperty(\"plainAttrValue.dao\")).newInstance();\n+        return (PlainAttrValueDAO) Class.forName(env.getProperty(\"plainAttrValue.dao\")).getConstructor().newInstance();\n     }\n \n     @Bean\n     public AnySearchDAO anySearchDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (AnySearchDAO) Class.forName(env.getProperty(\"any.search.dao\")).newInstance();\n+        return (AnySearchDAO) Class.forName(env.getProperty(\"any.search.dao\")).getConstructor().newInstance();\n     }\n \n     @Bean\n     public UserDAO userDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (UserDAO) Class.forName(env.getProperty(\"user.dao\")).newInstance();\n+        return (UserDAO) Class.forName(env.getProperty(\"user.dao\")).getConstructor().newInstance();\n     }\n \n     @Bean\n     public GroupDAO groupDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (GroupDAO) Class.forName(env.getProperty(\"group.dao\")).newInstance();\n+        return (GroupDAO) Class.forName(env.getProperty(\"group.dao\")).getConstructor().newInstance();\n     }\n \n     @Bean\n     public AnyObjectDAO anyObjectDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (AnyObjectDAO) Class.forName(env.getProperty(\"anyObject.dao\")).newInstance();\n+        return (AnyObjectDAO) Class.forName(env.getProperty(\"anyObject.dao\")).getConstructor().newInstance();\n     }\n \n     @Bean\n     public ConfDAO confDAO()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n-        return (ConfDAO) Class.forName(env.getProperty(\"conf.dao\")).newInstance();\n+        return (ConfDAO) Class.forName(env.getProperty(\"conf.dao\")).getConstructor().newInstance();\n     }\n \n     @Bean"},{"sha":"61dcfbda655869851bc38b516d384de418712228","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/openjpa/BooleanValueHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -41,7 +41,7 @@ public static BooleanValueHandler getInstance() {\n     /**\n      * {@inheritDoc}\n      *\n-     * @deprecated\n+     * @Deprecated\n      */\n     @Override\n     public Column[] map(final ValueMapping vm, final String name, final ColumnIO io, final boolean adapt) {"},{"sha":"42cba53a76c1081881b48dd3cc7090152432949c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/openjpa/LocaleValueHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -42,7 +42,7 @@ public static LocaleValueHandler getInstance() {\n     /**\n      * {@inheritDoc}\n      *\n-     * @deprecated\n+     * @Deprecated\n      */\n     @Override\n     public Column[] map(final ValueMapping vm, final String name, final ColumnIO io, final boolean adapt) {"},{"sha":"14cd84ee54e7cbd4ceeb5ec5ea6935577a2e9bbc","filename":"core/provisioning-java/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fprovisioning-java%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fprovisioning-java%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fpom.xml?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -71,6 +71,10 @@ under the License.\n       <groupId>org.codehaus.groovy</groupId>\n       <artifactId>groovy-templates</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.codehaus.groovy</groupId>\n+      <artifactId>groovy-xml</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.codehaus.groovy</groupId>\n       <artifactId>groovy-bsf</artifactId>"},{"sha":"5fde51d3ed7c07fd2cf457f2cdc36c8aaf1dadad","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"modified","additions":22,"deletions":14,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java;\n \n+import java.lang.reflect.InvocationTargetException;\n import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n@@ -53,57 +54,64 @@ public void setEnvironment(final Environment env) {\n \n     @Bean\n     public PropagationTaskExecutor propagationTaskExecutor()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n         return (PropagationTaskExecutor) Class.forName(env.getProperty(\"propagationTaskExecutor\")).\n-                newInstance();\n+                getConstructor().newInstance();\n     }\n \n     @Bean\n     public UserProvisioningManager userProvisioningManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n         return (UserProvisioningManager) Class.forName(env.getProperty(\"userProvisioningManager\")).\n-                newInstance();\n+                getConstructor().newInstance();\n     }\n \n     @Bean\n     public GroupProvisioningManager groupProvisioningManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n         return (GroupProvisioningManager) Class.forName(env.getProperty(\"groupProvisioningManager\")).\n-                newInstance();\n+                getConstructor().newInstance();\n     }\n \n     @Bean\n     public AnyObjectProvisioningManager anyObjectProvisioningManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n         return (AnyObjectProvisioningManager) Class.forName(env.getProperty(\"anyObjectProvisioningManager\")).\n-                newInstance();\n+                getConstructor().newInstance();\n     }\n \n     @Bean\n     public VirAttrCache virAttrCache()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n         return (VirAttrCache) Class.forName(env.getProperty(\"virAttrCache\")).\n-                newInstance();\n+                getConstructor().newInstance();\n     }\n \n     @Bean\n     public NotificationManager notificationManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n         return (NotificationManager) Class.forName(env.getProperty(\"notificationManager\")).\n-                newInstance();\n+                getConstructor().newInstance();\n     }\n \n     @Bean\n     public AuditManager auditManager()\n-            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException,\n+            IllegalArgumentException, InvocationTargetException {\n \n         return (AuditManager) Class.forName(env.getProperty(\"auditManager\")).\n-                newInstance();\n+                getConstructor().newInstance();\n     }\n }"},{"sha":"2bd489bb351b4dfc2a65569d9092872fdc519b56","filename":"core/starter/src/main/java/org/apache/syncope/core/starter/SyncopeCoreApplication.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.starter;\n \n import java.io.IOException;\n+import org.apache.cxf.spring.boot.autoconfigure.openapi.OpenApiAutoConfiguration;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n@@ -38,6 +39,7 @@\n @EnableAutoConfiguration(exclude = {\n     ErrorMvcAutoConfiguration.class,\n     HttpMessageConvertersAutoConfiguration.class,\n+    OpenApiAutoConfiguration.class,\n     DataSourceAutoConfiguration.class,\n     DataSourceTransactionManagerAutoConfiguration.class,\n     JdbcTemplateAutoConfiguration.class,"},{"sha":"0935f8c1ff6d6b69025e88d9b5a39efa5d0a1408","filename":"core/upgrade/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fupgrade%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/core%2Fupgrade%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fpom.xml?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -49,6 +49,11 @@ under the License.\n     </dependency>\n       \n     <!-- TEST -->\n+    <dependency>\n+      <groupId>javax.annotation</groupId>\n+      <artifactId>javax.annotation-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n     <dependency>\n       <groupId>com.h2database</groupId>\n       <artifactId>h2</artifactId>"},{"sha":"5a9021519b0aa86d5d4f70fbe63cb33ef0e90af5","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/CodeConsumer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -105,7 +105,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n                 e.printStackTrace(response.getWriter());\n             } else {\n                 response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8.name()));\n+                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n             }\n         }\n     }"},{"sha":"ceea8d5cd873de1a7deefec785221e8f9d6e2c17","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Login.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -80,7 +80,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n                 e.printStackTrace(response.getWriter());\n             } else {\n                 response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8.name()));\n+                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n             }\n         }\n     }"},{"sha":"d948b308153c713e8aaa1fed2bd17e3ecfaaef3d","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Logout.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -57,7 +57,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n                 e.printStackTrace(response.getWriter());\n             } else {\n                 response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8.name()));\n+                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n             }\n         }\n     }"},{"sha":"c29c07ad0597f0d557d539f57fd42b7d02c7cc88","filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/panels/OIDCSSOLoginFormPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCSSOLoginFormPanel.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -93,7 +93,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         RequestCycle.get().scheduleRequestHandlerAfterCurrent(new RedirectRequestHandler(\n                                 UrlUtils.rewriteToContextRelative(\"oidcclient/login?op=\"\n                                         + URLEncoder.encode(\n-                                                model.getObject().getName(), StandardCharsets.UTF_8.name()),\n+                                                model.getObject().getName(), StandardCharsets.UTF_8),\n                                         RequestCycle.get())));\n                     } catch (Exception e) {\n                         LOG.error(\"Could not redirect to the selected OP {}\", model.getObject().getName(), e);"},{"sha":"d625eb69b14531917b70db015fae86cd56662d78","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAbstractSAML2SPServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAbstractSAML2SPServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAbstractSAML2SPServlet.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -87,7 +87,7 @@ protected SAML2ReceivedResponseTO extract(\n \n         String samlResponse = params.getFirst(SSOConstants.SAML_RESPONSE);\n         if (StringUtils.isNotBlank(samlResponse)) {\n-            samlResponse = URLDecoder.decode(samlResponse, StandardCharsets.UTF_8.name());\n+            samlResponse = URLDecoder.decode(samlResponse, StandardCharsets.UTF_8);\n             LOG.debug(\"Received SAML Response: {}\", samlResponse);\n         }\n "},{"sha":"15203687c4a4126437fc48a6a6f29247d70d68c0","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AssertionConsumer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -91,7 +91,7 @@ protected void doPost(final HttpServletRequest request, final HttpServletRespons\n                 e.printStackTrace(response.getWriter());\n             } else {\n                 response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8.name()));\n+                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n             }\n         }\n     }"},{"sha":"2c0eb6c3674738da67b17860f8b0da986638a302","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -57,7 +57,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n                 e.printStackTrace(response.getWriter());\n             } else {\n                 response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8.name()));\n+                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n             }\n         }\n     }"},{"sha":"324a0eef94569d509b530885db587029bf6f4639","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -70,7 +70,7 @@ private void doLogout(\n                 e.printStackTrace(response.getWriter());\n             } else {\n                 response.sendRedirect(errorURL + \"?errorMessage=\"\n-                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8.name()));\n+                        + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n             }\n         }\n     }\n@@ -106,7 +106,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n                     e.printStackTrace(response.getWriter());\n                 } else {\n                     response.sendRedirect(errorURL + \"?errorMessage=\"\n-                            + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8.name()));\n+                            + URLEncoder.encode(e.getMessage(), StandardCharsets.UTF_8));\n                 }\n             }\n         } else { // process REDIRECT binding logout response"},{"sha":"16ba28c6c55d7637c5086ce42c64be588b6e2a14","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/SAMLSSOLoginFormPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAMLSSOLoginFormPanel.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -84,7 +84,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         RequestCycle.get().scheduleRequestHandlerAfterCurrent(new RedirectRequestHandler(\n                                 UrlUtils.rewriteToContextRelative(\"saml2sp/login?idp=\"\n                                         + URLEncoder.encode(\n-                                                model.getObject().getEntityID(), StandardCharsets.UTF_8.name()),\n+                                                model.getObject().getEntityID(), StandardCharsets.UTF_8),\n                                         RequestCycle.get())));\n                     } catch (Exception e) {\n                         LOG.error(\"Could not redirect to the selected IdP {}\", model.getObject().getEntityID(), e);"},{"sha":"c3592ff9fcca01646bfad9b45760351914dd0219","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -332,13 +332,13 @@ public SAML2RequestTO createLoginRequest(final String spEntityID, final String i\n             // 4. sign and encode AuthnRequest\n             switch (idp.getBindingType()) {\n                 case REDIRECT:\n-                    requestTO.setRelayState(URLEncoder.encode(relayState.getLeft(), StandardCharsets.UTF_8.name()));\n+                    requestTO.setRelayState(URLEncoder.encode(relayState.getLeft(), StandardCharsets.UTF_8));\n                     requestTO.setContent(URLEncoder.encode(\n-                            saml2rw.encode(authnRequest, true), StandardCharsets.UTF_8.name()));\n-                    requestTO.setSignAlg(URLEncoder.encode(saml2rw.getSigAlgo(), StandardCharsets.UTF_8.name()));\n+                            saml2rw.encode(authnRequest, true), StandardCharsets.UTF_8));\n+                    requestTO.setSignAlg(URLEncoder.encode(saml2rw.getSigAlgo(), StandardCharsets.UTF_8));\n                     requestTO.setSignature(URLEncoder.encode(\n                             saml2rw.sign(requestTO.getContent(), requestTO.getRelayState()),\n-                            StandardCharsets.UTF_8.name()));\n+                            StandardCharsets.UTF_8));\n                     break;\n \n                 case POST:"},{"sha":"7ed0faa1f6449f14d8b5c57dfdcf30dc80e042d2","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2ReaderWriter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2ReaderWriter.java?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -197,7 +197,7 @@ public String sign(final String request, final String relayState)\n         String requestToSign =\n                 SSOConstants.SAML_REQUEST + \"=\" + request + \"&\"\n                 + SSOConstants.RELAY_STATE + \"=\" + relayState + \"&\"\n-                + SSOConstants.SIG_ALG + \"=\" + URLEncoder.encode(sigAlgo, StandardCharsets.UTF_8.name());\n+                + SSOConstants.SIG_ALG + \"=\" + URLEncoder.encode(sigAlgo, StandardCharsets.UTF_8);\n         signature.update(requestToSign.getBytes(StandardCharsets.UTF_8));\n         return Base64.getEncoder().encodeToString(signature.sign());\n     }"},{"sha":"261414e1ff9bb05cfba33a0f6f84ee00a0aedda1","filename":"fit/build-tools/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -167,6 +167,10 @@ under the License.\n       <groupId>org.codehaus.groovy</groupId>\n       <artifactId>groovy-templates</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.codehaus.groovy</groupId>\n+      <artifactId>groovy-xml</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.codehaus.groovy</groupId>\n       <artifactId>groovy-bsf</artifactId>"},{"sha":"9847010eff56a48ca15a46f79e960d8cd775b9f7","filename":"pom.xml","status":"modified","additions":41,"deletions":59,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=5bd85029d0ad879456ab2b2fcc548cba7f1ff1fd","patch":"@@ -389,15 +389,15 @@ under the License.\n     <connid.scimv11.version>1.0.1</connid.scimv11.version>\n     <connid.servicenow.version>1.0.0</connid.servicenow.version>\n \n-    <cxf.version>3.2.7</cxf.version>\n+    <cxf.version>3.3.0-SNAPSHOT</cxf.version>\n \n     <jackson.version>2.9.8</jackson.version>\n \n     <spring.version>5.1.4.RELEASE</spring.version>\n     <spring-security.version>5.1.3.RELEASE</spring-security.version>\n     <spring-boot.version>2.1.2.RELEASE</spring-boot.version>\n \n-    <openjpa.version>3.0.0</openjpa.version>\n+    <openjpa.version>3.0.1-SNAPSHOT</openjpa.version>\n     <hikaricp.version>3.3.0</hikaricp.version>\n     <hibernate-validator.version>6.0.13.Final</hibernate-validator.version>\n \n@@ -534,14 +534,19 @@ under the License.\n     <secretKey>1abcdefghilmnopqrstuvz2!</secretKey>\n     <jwsKey>ZW7pRixehFuNUtnY5Se47IemgMryTzazPPJ9CGX5LTCmsOJpOgHAQEuPQeV9A28f</jwsKey>\n \n-    <targetJdk>1.8</targetJdk>\n+    <targetJdk>11</targetJdk>\n     <rootpom.basedir>${basedir}</rootpom.basedir>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n   </properties>\n \n   <dependencyManagement>\n \n     <dependencies>\n+      <dependency>\n+        <groupId>javax.annotation</groupId>\n+        <artifactId>javax.annotation-api</artifactId>\n+        <version>1.3.2</version>\n+      </dependency>\n       <dependency>\n         <groupId>javax.validation</groupId>\n         <artifactId>validation-api</artifactId>\n@@ -1166,6 +1171,17 @@ under the License.\n         <groupId>org.codehaus.groovy</groupId>\n         <artifactId>groovy-templates</artifactId>\n         <version>${groovy.version}</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>org.codehaus.groovy</groupId>\n+            <artifactId>groovy-xml</artifactId>\n+          </exclusion>    \n+        </exclusions>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.codehaus.groovy</groupId>\n+        <artifactId>groovy-xml</artifactId>\n+        <version>${groovy.version}</version>\n       </dependency>\n       <dependency>\n         <groupId>org.codehaus.groovy</groupId>\n@@ -1843,8 +1859,7 @@ under the License.\n           <artifactId>maven-compiler-plugin</artifactId>\n           <version>3.8.0</version> \n           <configuration>\n-            <source>${targetJdk}</source>\n-            <target>${targetJdk}</target>\n+            <release>${targetJdk}</release>\n             <useIncrementalCompilation>false</useIncrementalCompilation>\n             <showWarnings>true</showWarnings>\n             <showDeprecation>true</showDeprecation>\n@@ -2124,8 +2139,11 @@ under the License.\n             </goals>\n             <configuration>\n               <rules>\n+                <requireJavaVersion>\n+                  <version>11</version>                  \n+                </requireJavaVersion>\n                 <requireMavenVersion>\n-                  <version>3.0</version>\n+                  <version>3.5.0</version>\n                 </requireMavenVersion>\n               </rules>    \n             </configuration>\n@@ -2172,14 +2190,16 @@ under the License.\n       </plugin>\n \n       <plugin>\n-        <groupId>org.codehaus.gmaven</groupId>\n-        <artifactId>gmaven-plugin</artifactId>\n-        <version>1.5</version>\n+        <groupId>org.codehaus.gmavenplus</groupId>\n+        <artifactId>gmavenplus-plugin</artifactId>\n+        <version>1.6.2</version>\n         <dependencies>\n           <dependency>\n             <groupId>org.codehaus.groovy</groupId>\n             <artifactId>groovy-all</artifactId>\n-            <version>1.5.8</version>\n+            <version>${groovy.version}</version>\n+            <scope>runtime</scope>\n+            <type>pom</type>\n           </dependency>\n         </dependencies>\n         <executions>\n@@ -2189,7 +2209,8 @@ under the License.\n               <goal>execute</goal>\n             </goals>\n             <configuration>\n-              <source>\n+              <scripts>\n+                <script><![CDATA[\n                 import java.util.Date\n                 import java.text.MessageFormat\n                 def year = MessageFormat.format(\"{0,date,yyyy}\", new Date()) \n@@ -2201,7 +2222,8 @@ under the License.\n \n                 if (!project.properties.containsKey('buildNumber'))\n                 project.properties['buildNumber'] = \"\"\n-              </source>\n+                ]]></script>\n+              </scripts>\n             </configuration>\n           </execution>\n         </executions>\n@@ -2371,10 +2393,10 @@ under the License.\n           <detectLinks>true</detectLinks>\n           <detectJavaApiLink>true</detectJavaApiLink>\n           <links>\n-            <link>http://docs.oracle.com/javaee/7/api/</link>\n+            <link>https://javaee.github.io/javaee-spec/javadocs/</link>\n             <link>http://www.slf4j.org/api/</link>\n             <link>http://connid.tirasa.net/apidocs/1.4/</link>\n-            <link>http://cxf.apache.org/javadoc/latest-3.2.x/</link>\n+            <link>http://cxf.apache.org/javadoc/latest/</link>\n             <link>http://fasterxml.github.io/jackson-core/javadoc/2.9/</link>\n             <link>http://fasterxml.github.io/jackson-databind/javadoc/2.9/</link>\n             <link>http://fasterxml.github.io/jackson-annotations/javadoc/2.9/</link>\n@@ -2387,13 +2409,14 @@ under the License.\n             <link>https://commons.apache.org/proper/commons-lang/javadocs/api-release/</link>\n             <link>https://commons.apache.org/proper/commons-io/javadocs/api-2.6/</link>\n             <link>https://commons.apache.org/proper/commons-jexl/apidocs/</link>\n-            <link>https://tika.apache.org/1.19/api/</link>\n-            <link>https://docs.spring.io/spring/docs/5.0.x/javadoc-api/</link>\n-            <link>https://docs.spring.io/spring-security/site/docs/5.0.x/api/</link>\n+            <link>https://tika.apache.org/1.20/api/</link>\n+            <link>https://docs.spring.io/spring-boot/docs/current/api/</link>\n+            <link>https://docs.spring.io/spring/docs/current/javadoc-api/</link>\n+            <link>https://docs.spring.io/spring-security/site/docs/current/api/</link>\n             <link>http://www.flowable.org/docs/javadocs/</link>\n             <link>https://build.shibboleth.net/nexus/content/sites/site/java-opensaml/3.3.0/apidocs/</link>\n             <link>https://artifacts.elastic.co/javadoc/org/elasticsearch/elasticsearch/6.5.4/index.html</link>\n-            <link>http://docs.swagger.io/swagger-core/v2.0.5/apidocs/</link>\n+            <link>http://docs.swagger.io/swagger-core/v2.0.6/apidocs/</link>\n           </links>\n         </configuration>\n         <reportSets>\n@@ -2636,47 +2659,6 @@ under the License.\n         <module>docker</module>\n       </modules>\n     </profile>\n-    \n-    <profile>\n-      <id>java9-plus</id>\n-\n-      <activation>\n-        <jdk>[9,)</jdk>\n-      </activation>\n-\n-      <dependencies>\n-        <dependency>\n-          <groupId>javax.xml.bind</groupId>\n-          <artifactId>jaxb-api</artifactId>\n-          <version>2.3.1</version>\n-        </dependency>\n-        <dependency>\n-          <groupId>com.sun.xml.bind</groupId>\n-          <artifactId>jaxb-core</artifactId>\n-          <version>2.3.0.1</version>\n-        </dependency>\n-        <dependency>\n-          <groupId>com.sun.xml.bind</groupId>\n-          <artifactId>jaxb-impl</artifactId>\n-          <version>2.3.0.1</version>\n-        </dependency>\n-        <dependency>\n-          <groupId>javax.annotation</groupId>\n-          <artifactId>javax.annotation-api</artifactId>\n-          <version>1.3.2</version>\n-        </dependency>\n-        <dependency>\n-          <groupId>javax.xml.ws</groupId>\n-          <artifactId>jaxws-api</artifactId>\n-          <version>2.3.1</version>\n-        </dependency>\n-        <dependency>\n-          <groupId>javax.activation</groupId>\n-          <artifactId>activation</artifactId>\n-          <version>1.1.1</version>\n-        </dependency>\n-      </dependencies>\n-    </profile>\n   </profiles>\n   \n   <modules>"}]}