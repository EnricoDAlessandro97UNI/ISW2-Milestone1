{"sha":"862a0067e057c38508a95376811f503db9f94f18","node_id":"C_kwDOJfYA1toAKDg2MmEwMDY3ZTA1N2MzODUwOGE5NTM3NjgxMWY1MDNkYjlmOTRmMTg","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2023-03-17T15:02:21Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-03-17T15:08:56Z"},"message":"[SYNCOPE-1743] Ticket Expiration Policy (#428)","tree":{"sha":"aae09c05402cd55e4f3ce0ceea944cdc183310f1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/aae09c05402cd55e4f3ce0ceea944cdc183310f1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/862a0067e057c38508a95376811f503db9f94f18","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/862a0067e057c38508a95376811f503db9f94f18","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/862a0067e057c38508a95376811f503db9f94f18","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/862a0067e057c38508a95376811f503db9f94f18/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"72ab59ebcf8edb0e2e595692c1e4b1df8f697d8e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/72ab59ebcf8edb0e2e595692c1e4b1df8f697d8e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/72ab59ebcf8edb0e2e595692c1e4b1df8f697d8e"}],"stats":{"total":1405,"additions":1281,"deletions":124},"files":[{"sha":"36f1620a89942efcce11097829b84973b2dcacd6","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppModalPanelBuilder.java","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -112,6 +112,17 @@ protected Map<String, String> load() {\n         }\n     };\n \n+    private final IModel<Map<String, String>> ticketExpirationPolicies = new LoadableDetachableModel<>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected Map<String, String> load() {\n+            return PolicyRestClient.list(PolicyType.TICKET_EXPIRATION).stream().\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n+        }\n+    };\n+\n     private final BaseModal<T> modal;\n \n     private final ClientAppType type;\n@@ -220,10 +231,16 @@ protected Iterator<String> getChoices(final String input) {\n                     \"field\", \"authPolicy\", new PropertyModel<>(clientAppTO, \"authPolicy\"), false);\n             authPolicy.setChoiceRenderer(new PolicyRenderer(authPolicies.getObject()));\n             authPolicy.setChoices(new ArrayList<>(authPolicies.getObject().keySet()));\n-            authPolicy.setRequired(true);\n-            ((AbstractSingleSelectChoice<?>) authPolicy.getField()).setNullValid(true);\n             fields.add(authPolicy);\n \n+            AjaxDropDownChoicePanel<String> ticketExpirationPolicy = new AjaxDropDownChoicePanel<>(\n+                    \"field\", \"ticketExpirationPolicy\",\n+                    new PropertyModel<>(clientAppTO, \"ticketExpirationPolicy\"), false);\n+            ticketExpirationPolicy.setChoiceRenderer(new PolicyRenderer(ticketExpirationPolicies.getObject()));\n+            ticketExpirationPolicy.setChoices(new ArrayList<>(ticketExpirationPolicies.getObject().keySet()));\n+            ((AbstractSingleSelectChoice<?>) ticketExpirationPolicy.getField()).setNullValid(true);\n+            fields.add(ticketExpirationPolicy);\n+\n             switch (type) {\n                 case CASSP:\n                     fields.add(new AjaxTextFieldPanel("},{"sha":"8fdb177220c637e42c9171e150890284b4ac3e4a","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMPolicyTabProvider.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMPolicyTabProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMPolicyTabProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMPolicyTabProvider.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -23,6 +23,7 @@\n import org.apache.syncope.client.console.policies.AccessPolicyDirectoryPanel;\n import org.apache.syncope.client.console.policies.AttrReleasePolicyDirectoryPanel;\n import org.apache.syncope.client.console.policies.AuthPolicyDirectoryPanel;\n+import org.apache.syncope.client.console.policies.TicketExpirationPolicyDirectoryPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n@@ -33,11 +34,6 @@ public class AMPolicyTabProvider implements PolicyTabProvider {\n \n     private static final long serialVersionUID = 2822554006571803418L;\n \n-    @Override\n-    public int getOrder() {\n-        return 200;\n-    }\n-\n     @Override\n     public List<ITab> buildTabList(final PageReference pageRef) {\n         List<ITab> tabs = new ArrayList<>();\n@@ -72,6 +68,16 @@ public Panel getPanel(final String panelId) {\n             }\n         });\n \n+        tabs.add(new AbstractTab(new ResourceModel(\"policy.ticketExpiration\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new TicketExpirationPolicyDirectoryPanel(panelId, pageRef);\n+            }\n+        });\n+\n         return tabs;\n     }\n }"},{"sha":"f58f87a00fbd5f8b75838700ac79352cdee0374d","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMRealmPolicyProvider.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -76,5 +76,17 @@ public void add(final RealmTO realmTO, final RepeatingView view) {\n         authPolicy.setChoices(authPolicies.keySet().stream().collect(Collectors.toList()));\n         ((AbstractSingleSelectChoice<?>) authPolicy.getField()).setNullValid(true);\n         view.add(authPolicy);\n+\n+        Map<String, String> ticketExpirationPolicies = PolicyRestClient.list(PolicyType.TICKET_EXPIRATION).stream().\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n+        AjaxDropDownChoicePanel<String> ticketExpirationPolicy = new AjaxDropDownChoicePanel<>(\n+                view.newChildId(),\n+                new ResourceModel(\"ticketExpirationPolicy\", \"ticketExpirationPolicy\").getObject(),\n+                new PropertyModel<>(realmTO, \"ticketExpirationPolicy\"),\n+                false);\n+        ticketExpirationPolicy.setChoiceRenderer(new PolicyRenderer(ticketExpirationPolicies));\n+        ticketExpirationPolicy.setChoices(ticketExpirationPolicies.keySet().stream().collect(Collectors.toList()));\n+        ((AbstractSingleSelectChoice<?>) ticketExpirationPolicy.getField()).setNullValid(true);\n+        view.add(ticketExpirationPolicy);\n     }\n }"},{"sha":"f4199fe7bb0a727902549a54331c42a553542fe1","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/TicketExpirationPolicyDirectoryPanel.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyDirectoryPanel.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.policies;\n+\n+import org.apache.syncope.client.console.rest.PolicyRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class TicketExpirationPolicyDirectoryPanel extends PolicyDirectoryPanel<TicketExpirationPolicyTO> {\n+\n+    private static final long serialVersionUID = 4984337552918213290L;\n+\n+    public TicketExpirationPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, PolicyType.TICKET_EXPIRATION, pageRef);\n+\n+        TicketExpirationPolicyTO defaultItem = new TicketExpirationPolicyTO();\n+\n+        this.addNewItemPanelBuilder(\n+                new PolicyModalPanelBuilder<>(PolicyType.TICKET_EXPIRATION, defaultItem, modal, pageRef), true);\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, IdRepoEntitlement.POLICY_CREATE);\n+\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected void addCustomActions(\n+            final ActionsPanel<TicketExpirationPolicyTO> panel,\n+            final IModel<TicketExpirationPolicyTO> model) {\n+\n+        panel.add(new ActionLink<>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final TicketExpirationPolicyTO ignore) {\n+                model.setObject(PolicyRestClient.read(type, model.getObject().getKey()));\n+                if (model.getObject().getConf() == null) {\n+                    model.getObject().setConf(new DefaultTicketExpirationPolicyConf());\n+                }\n+                target.add(policySpecModal.setContent(\n+                        new TicketExpirationPolicyModalPanel(policySpecModal, model, pageRef)));\n+                policySpecModal.header(new Model<>(getString(\"ticketExpirationPolicyConf.title\", model)));\n+                policySpecModal.show(true);\n+            }\n+        }, ActionLink.ActionType.CHANGE_VIEW, IdRepoEntitlement.POLICY_UPDATE);\n+    }\n+}"},{"sha":"1431c6628719711dd543b8afcaa63c3770de5f99","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/TicketExpirationPolicyModalPanel.java","status":"added","additions":108,"deletions":0,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyModalPanel.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.policies;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.panels.BeanPanel;\n+import org.apache.syncope.client.console.rest.PolicyRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class TicketExpirationPolicyModalPanel extends AbstractModalPanel<TicketExpirationPolicyTO> {\n+\n+    private static final long serialVersionUID = 2668291404983623500L;\n+\n+    private final IModel<TicketExpirationPolicyTO> model;\n+\n+    public TicketExpirationPolicyModalPanel(\n+            final BaseModal<TicketExpirationPolicyTO> modal,\n+            final IModel<TicketExpirationPolicyTO> model,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+        this.model = model;\n+\n+        conf(\"tgtConf\", new DefaultTicketExpirationPolicyConf.TGTConf());\n+        conf(\"stConf\", new DefaultTicketExpirationPolicyConf.STConf());\n+        conf(\"proxyTgtConf\", new DefaultTicketExpirationPolicyConf.TGTConf());\n+        conf(\"proxyStConf\", new DefaultTicketExpirationPolicyConf.STConf());\n+    }\n+\n+    private <T extends Serializable> void conf(final String field, final T newInstance) {\n+        PropertyModel<T> beanPanelModel = new PropertyModel<>(model.getObject(), \"conf.\" + field);\n+\n+        AjaxCheckBoxPanel enable = new AjaxCheckBoxPanel(\"enable.\" + field, \"enable.\" + field, new IModel<Boolean>() {\n+\n+            private static final long serialVersionUID = -7126718045816207110L;\n+\n+            @Override\n+            public Boolean getObject() {\n+                return beanPanelModel.getObject() != null;\n+            }\n+\n+            @Override\n+            public void setObject(final Boolean object) {\n+                // nothing to do\n+            }\n+        });\n+        enable.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                if (beanPanelModel.getObject() == null) {\n+                    beanPanelModel.setObject(newInstance);\n+                } else {\n+                    beanPanelModel.setObject(null);\n+                }\n+                target.add(TicketExpirationPolicyModalPanel.this);\n+            }\n+        });\n+        add(enable);\n+\n+        add(new BeanPanel<>(\"bean.\" + field, beanPanelModel).setRenderBodyOnly(true));\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target) {\n+        try {\n+            PolicyRestClient.update(PolicyType.TICKET_EXPIRATION, model.getObject());\n+\n+            SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While updating Ticket Expiration Policy {}\", model.getObject().getKey(), e);\n+            SyncopeConsoleSession.get().onException(e);\n+        }\n+        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+    }\n+}"},{"sha":"aa30bbf83ca5a54cb79ee8d1ecddc045e52b74f0","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -64,3 +64,4 @@ informationUrl=Information URL\n privacyUrl=Privacy URL\n compose.title=username attribute provider\n usernameAttributeProviderConf.title=Username Attribute Provider for ${name}\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"cc70107032f6032431e178e043095af0d5a4805c","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_fr_CA.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_fr_CA.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -64,3 +64,4 @@ informationUrl=Information URL\n privacyUrl=Privacy URL\n compose.title=username attribute provider\n usernameAttributeProviderConf.title=Username Attribute Provider for ${name}\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"d8257a201b6728037b207875d84db57b8e65f623","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_it.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -64,3 +64,4 @@ informationUrl=URL informativa\n privacyUrl=URL privacy\n compose.title=username attribute provider\n usernameAttributeProviderConf.title=Username Attribute Provider per ${name}\n+ticketExpirationPolicy=Politica Ticket Expiration"},{"sha":"58bcac414ac66b7a9451c48d0f86f7a94039df72","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ja.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -64,3 +64,4 @@ informationUrl=Information URL\n privacyUrl=Privacy URL\n compose.title=username attribute provider\n usernameAttributeProviderConf.title=Username Attribute Provider for ${name}\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"aa30bbf83ca5a54cb79ee8d1ecddc045e52b74f0","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_pt_BR.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -64,3 +64,4 @@ informationUrl=Information URL\n privacyUrl=Privacy URL\n compose.title=username attribute provider\n usernameAttributeProviderConf.title=Username Attribute Provider for ${name}\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"9aac43a7e182090294c7f5db29d7b4dc25634f01","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ru.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -65,3 +65,4 @@ informationUrl=Information URL\n privacyUrl=Privacy URL\n compose.title=username attribute provider\n usernameAttributeProviderConf.title=Username Attribute Provider for ${name}\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"7416cfa810b83d2760e3c88f6b51c1d97d8adf41","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/TicketExpirationPolicyModalPanel.html","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FTicketExpirationPolicyModalPanel.html?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n+  <wicket:extend>\n+    <span wicket:id=\"enable.tgtConf\"/>\n+    <span wicket:id=\"bean.tgtConf\"/>\n+    <span wicket:id=\"enable.stConf\"/>\n+    <span wicket:id=\"bean.stConf\"/>\n+    <span wicket:id=\"enable.proxyTgtConf\"/>\n+    <span wicket:id=\"bean.proxyTgtConf\"/>\n+    <span wicket:id=\"enable.proxyStConf\"/>\n+    <span wicket:id=\"bean.proxyStConf\"/>\n+  </wicket:extend>\n+</html>"},{"sha":"15a10e62bc20a9261f4c65831eb62d16494b367a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMPolicyTabProvider.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMPolicyTabProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMPolicyTabProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMPolicyTabProvider.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -33,11 +33,6 @@ public class IdMPolicyTabProvider implements PolicyTabProvider {\n \n     private static final long serialVersionUID = 2822554006571803418L;\n \n-    @Override\n-    public int getOrder() {\n-        return 300;\n-    }\n-\n     @Override\n     public List<ITab> buildTabList(final PageReference pageRef) {\n         List<ITab> tabs = new ArrayList<>();"},{"sha":"e22d10104e6355e023ea89c51a950a8e9c2ce5c0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoPolicyTabProvider.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoPolicyTabProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoPolicyTabProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoPolicyTabProvider.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -32,11 +32,6 @@ public class IdRepoPolicyTabProvider implements PolicyTabProvider {\n \n     private static final long serialVersionUID = 5017230231088263303L;\n \n-    @Override\n-    public int getOrder() {\n-        return 100;\n-    }\n-\n     @Override\n     public List<ITab> buildTabList(final PageReference pageRef) {\n         List<ITab> tabs = new ArrayList<>();"},{"sha":"c36944da6415b3bb3a3117122bcb421c2f7f154d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/PolicyTabProvider.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPolicyTabProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPolicyTabProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPolicyTabProvider.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,9 +22,8 @@\n import java.util.List;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n-import org.springframework.core.Ordered;\n \n-public interface PolicyTabProvider extends Serializable, Ordered {\n+public interface PolicyTabProvider extends Serializable {\n \n     List<ITab> buildTabList(PageReference pageRef);\n }"},{"sha":"ec680736c3b559d496f4de953b3110ba170f00ad","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Policies.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -24,7 +24,6 @@\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n-import org.apache.syncope.client.console.commons.PolicyTabProvider;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -43,9 +42,9 @@ public Policies(final PageParameters parameters) {\n         content.setMarkupId(\"policies\");\n \n         List<ITab> tabs = SyncopeWebApplication.get().getPolicyTabProviders().stream().\n-                sorted(Comparator.comparing(PolicyTabProvider::getOrder)).\n                 map(p -> p.buildTabList(getPageReference())).\n                 flatMap(List::stream).\n+                sorted(Comparator.comparing(tab -> tab.getTitle().getObject())).\n                 collect(Collectors.toList());\n         content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", tabs));\n "},{"sha":"0f8d43457cbbdf13af047cb64c0c42a66ff1af2c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ policy.access=Access\n policy.attrRelease=Attribute Release\n policy.auth=Authentication\n policy.propagation=Propagation\n+policy.ticketExpiration=Ticket Expiration"},{"sha":"db16fe95fea78899e0b119c88c7cb6a03fad119b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_it.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ policy.access=Accesso\n policy.attrRelease=Rilascio Attributi\n policy.auth=Autenticazione\n policy.propagation=Propagazione\n+policy.ticketExpiration=Scadenza Ticket"},{"sha":"76212b4d7faca54f3b660c10fb8404e64cdb4317","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ja.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ policy.access=Access\n policy.attrRelease=Attribute Release\n policy.auth=Authentication\n policy.propagation=Propagation\n+policy.ticketExpiration=Ticket Expiration"},{"sha":"0f8d43457cbbdf13af047cb64c0c42a66ff1af2c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_pt_BR.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ policy.access=Access\n policy.attrRelease=Attribute Release\n policy.auth=Authentication\n policy.propagation=Propagation\n+policy.ticketExpiration=Ticket Expiration"},{"sha":"0d5f9b2223187beb37f07f4551ee6fcfda921742","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/Policies_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FPolicies_ru.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -23,3 +23,4 @@ policy.access=Access\n policy.attrRelease=Attribute Release\n policy.auth=Authentication\n policy.propagation=Propagation\n+policy.ticketExpiration=Ticket Expiration"},{"sha":"96cd961bcf14dbea4b2a2c42f1a1114d1c816686","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ resources=Assigned resources\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"67f58c653a59d997cd66ca981661cd4465f50aa3","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_fr_CA.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_fr_CA.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ resources=Ressources assign\\u00e9es\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"6fe3561459babd04ffcd46e68e033f21cc204b30","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ resources=Risorse assegnate\n authPolicy=Politica Autenticazione\n accessPolicy=Politica Accesso\n attrReleasePolicy=Politica Rilascio Attributi\n+ticketExpirationPolicy=Politica Ticket Expiration"},{"sha":"5c96552b72683ae2199117bf6406b6b74eb280c9","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ja.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ resources=\\u5272\\u308a\\u5f53\\u3066\\u3089\\u308c\\u305f\\u30ea\\u30bd\\u30fc\\u30b9\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"e9a09dbc90ed44c2973a38c73fb4575f46ec8ce8","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,3 +22,4 @@ resources=Assigned resources\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"dd2b0208f7330c7ced5e8f8baa1ad0a0911c4fd9","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -23,3 +23,4 @@ resources=\\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+ticketExpirationPolicy=Ticket Expiration Policy"},{"sha":"5c77be269114b26fe6737b6d6c77d0664db4e0bb","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.properties","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -47,5 +47,10 @@ backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n-accessPolicyConf.title=Access Policy Configuration\n+accessPolicyConf.title=Access Policy ${name} Configuration\n releaseAttrs=Attributes to Release\n+ticketExpirationPolicyConf.title=Ticket Expiration ${name} Configuration\n+enable.tgtConf=Enable TGT\n+enable.stConf=Enable ST\n+enable.proxyTgtConf=Enable Proxy TGT\n+enable.proxyStConf=Enable Proxy ST"},{"sha":"75b107a18896caa880fed2dc4a927d30d3d4a8a8","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_fr_CA.properties","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -47,5 +47,10 @@ backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n-accessPolicyConf.title=Access Policy Configuration\n+accessPolicyConf.title=Access Policy ${name} Configuration\n releaseAttrs=Attributes to Release\n+ticketExpirationPolicyConf.title=Ticket Expiration ${name} Configuration\n+enable.tgtConf=Enable TGT\n+enable.stConf=Enable ST\n+enable.proxyTgtConf=Enable Proxy TGT\n+enable.proxyStConf=Enable Proxy ST"},{"sha":"340c0e4a81b6c24b083ebb50780d295f72fa61c3","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_it.properties","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -47,5 +47,10 @@ backOffStrategy=Strategia di BackOff\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configurazione\n-accessPolicyConf.title=Configurazione Accesso\n+accessPolicyConf.title=Configurazione Politica di Accesso ${name}\n releaseAttrs=Attributi da Rilasciare\n+ticketExpirationPolicyConf.title=Configurazione Ticket Expiration ${name}\n+enable.tgtConf=Abilita TGT\n+enable.stConf=Abilita ST\n+enable.proxyTgtConf=Abilita Proxy TGT\n+enable.proxyStConf=Abilita Proxy ST"},{"sha":"07a09662015f666a151d76d2070c03e45fdb7ffe","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_ja.properties","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -47,5 +47,10 @@ backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n-accessPolicyConf.title=Access Policy Configuration\n+accessPolicyConf.title=Access Policy ${name} Configuration\n releaseAttrs=Attributes to Release\n+ticketExpirationPolicyConf.title=Ticket Expiration ${name} Configuration\n+enable.tgtConf=Enable TGT\n+enable.stConf=Enable ST\n+enable.proxyTgtConf=Enable Proxy TGT\n+enable.proxyStConf=Enable Proxy ST"},{"sha":"df24f1a1facdbee206c1e3f5de68b144a6cdf9ac","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_pt_BR.properties","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -47,5 +47,10 @@ backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n-accessPolicyConf.title=Access Policy Configuration\n+accessPolicyConf.title=Access Policy ${name} Configuration\n releaseAttrs=Attributes to Release\n+ticketExpirationPolicyConf.title=Ticket Expiration ${name} Configuration\n+enable.tgtConf=Enable TGT\n+enable.stConf=Enable ST\n+enable.proxyTgtConf=Enable Proxy TGT\n+enable.proxyStConf=Enable Proxy ST"},{"sha":"a0748b7f6d56192382ff5170a1c19de37bc934a5","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_ru.properties","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -48,5 +48,10 @@ backOffStrategy=BackOff Strategy\n fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n-accessPolicyConf.title=Access Policy Configuration\n+accessPolicyConf.title=Access Policy ${name} Configuration\n releaseAttrs=Attributes to Release\n+ticketExpirationPolicyConf.title=Ticket Expiration ${name} Configuration\n+enable.tgtConf=Enable TGT\n+enable.stConf=Enable ST\n+enable.proxyTgtConf=Enable Proxy TGT\n+enable.proxyStConf=Enable Proxy ST"},{"sha":"e67740ecbfcaf519bf81a408f1ba5209ad14490a","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultTicketExpirationPolicyConf.java","status":"added","additions":102,"deletions":0,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultTicketExpirationPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultTicketExpirationPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultTicketExpirationPolicyConf.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+import java.io.Serializable;\n+\n+public class DefaultTicketExpirationPolicyConf implements TicketExpirationPolicyConf {\n+\n+    private static final long serialVersionUID = -6177632746685440169L;\n+\n+    public static class TGTConf implements Serializable {\n+\n+        private static final long serialVersionUID = 4020295776618112940L;\n+\n+        /**\n+         * TTL of this ticket, in seconds.\n+         */\n+        private long maxTimeToLiveInSeconds;\n+\n+        public long getMaxTimeToLiveInSeconds() {\n+            return maxTimeToLiveInSeconds;\n+        }\n+\n+        public void setMaxTimeToLiveInSeconds(final long maxTimeToLiveInSeconds) {\n+            this.maxTimeToLiveInSeconds = maxTimeToLiveInSeconds;\n+        }\n+    }\n+\n+    public static class STConf extends TGTConf {\n+\n+        private static final long serialVersionUID = -9141008704559934825L;\n+\n+        /**\n+         * Number of times this ticket can be used.\n+         */\n+        private long numberOfUses;\n+\n+        public long getNumberOfUses() {\n+            return numberOfUses;\n+        }\n+\n+        public void setNumberOfUses(final long numberOfUses) {\n+            this.numberOfUses = numberOfUses;\n+        }\n+    }\n+\n+    private TGTConf tgtConf;\n+\n+    private STConf stConf;\n+\n+    private TGTConf proxyTgtConf;\n+\n+    private STConf proxyStConf;\n+\n+    public TGTConf getTgtConf() {\n+        return tgtConf;\n+    }\n+\n+    public void setTgtConf(final TGTConf tgtConf) {\n+        this.tgtConf = tgtConf;\n+    }\n+\n+    public STConf getStConf() {\n+        return stConf;\n+    }\n+\n+    public void setStConf(final STConf stConf) {\n+        this.stConf = stConf;\n+    }\n+\n+    public TGTConf getProxyTgtConf() {\n+        return proxyTgtConf;\n+    }\n+\n+    public void setProxyTgtConf(final TGTConf proxyTgtConf) {\n+        this.proxyTgtConf = proxyTgtConf;\n+    }\n+\n+    public STConf getProxyStConf() {\n+        return proxyStConf;\n+    }\n+\n+    public void setProxyStConf(final STConf proxySTConf) {\n+        this.proxyStConf = proxySTConf;\n+    }\n+}"},{"sha":"656fb3dd3b688a813fee034d94ed442b32516fc2","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/TicketExpirationPolicyConf.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTicketExpirationPolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTicketExpirationPolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTicketExpirationPolicyConf.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import org.apache.syncope.common.lib.BaseBean;\n+\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"_class\")\n+public interface TicketExpirationPolicyConf extends BaseBean {\n+}"},{"sha":"04f48c1db57e9d87f1d34a5dbdf84d9ffecae051","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/TicketExpirationPolicyTO.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTicketExpirationPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTicketExpirationPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FTicketExpirationPolicyTO.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,49 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import io.swagger.v3.oas.annotations.media.Schema;\n+\n+@Schema(allOf = { PolicyTO.class })\n+public class TicketExpirationPolicyTO extends PolicyTO {\n+\n+    private static final long serialVersionUID = -6711411162433533300L;\n+\n+    private TicketExpirationPolicyConf conf;\n+\n+    @JacksonXmlProperty(localName = \"_class\", isAttribute = true)\n+    @JsonProperty(\"_class\")\n+    @Schema(name = \"_class\", requiredMode = Schema.RequiredMode.REQUIRED,\n+            example = \"org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO\")\n+    @Override\n+    public String getDiscriminator() {\n+        return getClass().getName();\n+    }\n+\n+    public TicketExpirationPolicyConf getConf() {\n+        return conf;\n+    }\n+\n+    public void setConf(final TicketExpirationPolicyConf conf) {\n+        this.conf = conf;\n+    }\n+}"},{"sha":"3a73302a9dd996fa2917c0ab39d94d4f2a08a02e","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/ClientAppTO.java","status":"modified","additions":36,"deletions":24,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FClientAppTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FClientAppTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FClientAppTO.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -70,6 +70,8 @@ public abstract class ClientAppTO implements NamedEntityTO {\n \n     private String attrReleasePolicy;\n \n+    private String ticketExpirationPolicy;\n+\n     private final List<Attr> properties = new ArrayList<>();\n \n     @Schema(name = \"_class\", requiredMode = Schema.RequiredMode.REQUIRED)\n@@ -79,30 +81,6 @@ public void setDiscriminator(final String discriminator) {\n         // do nothing\n     }\n \n-    public String getAttrReleasePolicy() {\n-        return attrReleasePolicy;\n-    }\n-\n-    public void setAttrReleasePolicy(final String attrReleasePolicy) {\n-        this.attrReleasePolicy = attrReleasePolicy;\n-    }\n-\n-    public String getAccessPolicy() {\n-        return accessPolicy;\n-    }\n-\n-    public void setAccessPolicy(final String accessPolicy) {\n-        this.accessPolicy = accessPolicy;\n-    }\n-\n-    public String getAuthPolicy() {\n-        return authPolicy;\n-    }\n-\n-    public void setAuthPolicy(final String authPolicy) {\n-        this.authPolicy = authPolicy;\n-    }\n-\n     @Override\n     public String getKey() {\n         return key;\n@@ -188,6 +166,38 @@ public void setUsernameAttributeProviderConf(final UsernameAttributeProviderConf\n         this.usernameAttributeProviderConf = usernameAttributeProviderConf;\n     }\n \n+    public String getAttrReleasePolicy() {\n+        return attrReleasePolicy;\n+    }\n+\n+    public void setAttrReleasePolicy(final String attrReleasePolicy) {\n+        this.attrReleasePolicy = attrReleasePolicy;\n+    }\n+\n+    public String getAccessPolicy() {\n+        return accessPolicy;\n+    }\n+\n+    public void setAccessPolicy(final String accessPolicy) {\n+        this.accessPolicy = accessPolicy;\n+    }\n+\n+    public String getAuthPolicy() {\n+        return authPolicy;\n+    }\n+\n+    public void setAuthPolicy(final String authPolicy) {\n+        this.authPolicy = authPolicy;\n+    }\n+\n+    public String getTicketExpirationPolicy() {\n+        return ticketExpirationPolicy;\n+    }\n+\n+    public void setTicketExpirationPolicy(final String ticketExpirationPolicy) {\n+        this.ticketExpirationPolicy = ticketExpirationPolicy;\n+    }\n+\n     @JacksonXmlElementWrapper(localName = \"properties\")\n     @JacksonXmlProperty(localName = \"property\")\n     public List<Attr> getProperties() {\n@@ -211,6 +221,7 @@ public int hashCode() {\n                 .append(authPolicy)\n                 .append(accessPolicy)\n                 .append(attrReleasePolicy)\n+                .append(ticketExpirationPolicy)\n                 .append(properties)\n                 .toHashCode();\n     }\n@@ -242,6 +253,7 @@ public boolean equals(final Object obj) {\n                 .append(this.authPolicy, rhs.authPolicy)\n                 .append(this.accessPolicy, rhs.accessPolicy)\n                 .append(this.attrReleasePolicy, rhs.attrReleasePolicy)\n+                .append(this.ticketExpirationPolicy, rhs.ticketExpirationPolicy)\n                 .append(this.properties, rhs.properties)\n                 .isEquals();\n     }"},{"sha":"5780d8c82357d51a53a0866ec7d7986197a58496","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/WAClientApp.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n import org.apache.syncope.common.lib.policy.AttrReleasePolicyTO;\n import org.apache.syncope.common.lib.policy.AuthPolicyTO;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n import org.apache.syncope.common.lib.to.AuthModuleTO;\n import org.apache.syncope.common.lib.to.ClientAppTO;\n \n@@ -43,6 +44,8 @@ public class WAClientApp implements BaseBean {\n \n     private AttrReleasePolicyTO attrReleasePolicy;\n \n+    private TicketExpirationPolicyTO ticketExpirationPolicy;\n+\n     public ClientAppTO getClientAppTO() {\n         return clientAppTO;\n     }\n@@ -80,4 +83,12 @@ public AttrReleasePolicyTO getAttrReleasePolicy() {\n     public void setAttrReleasePolicy(final AttrReleasePolicyTO attrReleasePolicy) {\n         this.attrReleasePolicy = attrReleasePolicy;\n     }\n+\n+    public TicketExpirationPolicyTO getTicketExpirationPolicy() {\n+        return ticketExpirationPolicy;\n+    }\n+\n+    public void setTicketExpirationPolicy(final TicketExpirationPolicyTO ticketExpirationPolicy) {\n+        this.ticketExpirationPolicy = ticketExpirationPolicy;\n+    }\n }"},{"sha":"f3769928c101c3ca09f1491c54f9612caaf606c6","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RealmTO.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -50,6 +50,8 @@ public class RealmTO implements NamedEntityTO, TemplatableTO {\n \n     private String attrReleasePolicy;\n \n+    private String ticketExpirationPolicy;\n+\n     private final List<String> actions = new ArrayList<>();\n \n     private final Map<String, AnyTO> templates = new HashMap<>();\n@@ -133,6 +135,14 @@ public void setAttrReleasePolicy(final String attrReleasePolicy) {\n         this.attrReleasePolicy = attrReleasePolicy;\n     }\n \n+    public String getTicketExpirationPolicy() {\n+        return ticketExpirationPolicy;\n+    }\n+\n+    public void setTicketExpirationPolicy(final String ticketExpirationPolicy) {\n+        this.ticketExpirationPolicy = ticketExpirationPolicy;\n+    }\n+\n     @JacksonXmlElementWrapper(localName = \"actions\")\n     @JacksonXmlProperty(localName = \"action\")\n     public List<String> getActions() {\n@@ -172,6 +182,7 @@ public boolean equals(final Object obj) {\n                 append(authPolicy, other.authPolicy).\n                 append(accessPolicy, other.accessPolicy).\n                 append(attrReleasePolicy, other.attrReleasePolicy).\n+                append(ticketExpirationPolicy, other.ticketExpirationPolicy).\n                 append(actions, other.actions).\n                 append(templates, other.templates).\n                 append(resources, other.resources).\n@@ -190,6 +201,7 @@ public int hashCode() {\n                 append(authPolicy).\n                 append(accessPolicy).\n                 append(attrReleasePolicy).\n+                append(ticketExpirationPolicy).\n                 append(actions).\n                 append(templates).\n                 append(resources)."},{"sha":"383a790c987de2fb65affb3f20f231ad2bff2b9b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/PolicyType.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPolicyType.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -40,6 +40,10 @@ public enum PolicyType {\n      * How access policies should be defined.\n      */\n     ACCESS,\n+    /**\n+     * Controls expiration of access tickets.\n+     */\n+    TICKET_EXPIRATION,\n     /**\n      * For handling propagation behavior.\n      */"},{"sha":"b679cb6f6f77c48d9b9a524213d0798ebbc9ebb6","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/PolicyLogic.java","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -20,6 +20,7 @@\n \n import java.lang.reflect.Method;\n import java.util.List;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -68,10 +69,8 @@ public <T extends PolicyTO> T create(final PolicyType type, final T policyTO) {\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.POLICY_UPDATE + \"')\")\n     public PolicyTO update(final PolicyType type, final PolicyTO policyTO) {\n-        Policy policy = policyDAO.find(policyTO.getKey());\n-        if (policy == null) {\n-            throw new NotFoundException(\"Policy \" + policyTO.getKey() + \" not found\");\n-        }\n+        Policy policy = Optional.ofNullable(policyDAO.<Policy>find(policyTO.getKey())).\n+                orElseThrow(() -> new NotFoundException(\"Policy \" + policyTO.getKey() + \" not found\"));\n \n         PolicyUtils policyUtils = policyUtilsFactory.getInstance(policy);\n         if (policyUtils.getType() != type) {\n@@ -95,10 +94,8 @@ public <T extends PolicyTO> List<T> list(final PolicyType type) {\n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.POLICY_READ + \"')\")\n     @Transactional(readOnly = true)\n     public <T extends PolicyTO> T read(final PolicyType type, final String key) {\n-        Policy policy = policyDAO.find(key);\n-        if (policy == null) {\n-            throw new NotFoundException(\"Policy \" + key + \" not found\");\n-        }\n+        Policy policy = Optional.ofNullable(policyDAO.<Policy>find(key)).\n+                orElseThrow(() -> new NotFoundException(\"Policy \" + key + \" not found\"));\n \n         PolicyUtils policyUtils = policyUtilsFactory.getInstance(policy);\n         if (type != null && policyUtils.getType() != type) {\n@@ -112,10 +109,8 @@ public <T extends PolicyTO> T read(final PolicyType type, final String key) {\n \n     @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.POLICY_DELETE + \"')\")\n     public <T extends PolicyTO> T delete(final PolicyType type, final String key) {\n-        Policy policy = policyDAO.find(key);\n-        if (policy == null) {\n-            throw new NotFoundException(\"Policy \" + key + \" not found\");\n-        }\n+        Policy policy = Optional.ofNullable(policyDAO.<Policy>find(key)).\n+                orElseThrow(() -> new NotFoundException(\"Policy \" + key + \" not found\"));\n \n         PolicyUtils policyUtils = policyUtilsFactory.getInstance(policy);\n         if (type != null && policyUtils.getType() != type) {"},{"sha":"d513688fd1ab082882e2cb8d4b0b36fa0c74b6d0","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Realm.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRealm.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n \n public interface Realm extends Entity {\n \n@@ -46,17 +47,21 @@ public interface Realm extends Entity {\n \n     void setPasswordPolicy(PasswordPolicy passwordPolicy);\n \n+    AuthPolicy getAuthPolicy();\n+\n     void setAuthPolicy(AuthPolicy authPolicy);\n \n-    AuthPolicy getAuthPolicy();\n+    AccessPolicy getAccessPolicy();\n \n     void setAccessPolicy(AccessPolicy accessPolicy);\n \n-    AccessPolicy getAccessPolicy();\n+    AttrReleasePolicy getAttrReleasePolicy();\n \n     void setAttrReleasePolicy(AttrReleasePolicy policy);\n \n-    AttrReleasePolicy getAttrReleasePolicy();\n+    TicketExpirationPolicy getTicketExpirationPolicy();\n+\n+    void setTicketExpirationPolicy(TicketExpirationPolicy policy);\n \n     boolean add(Implementation action);\n "},{"sha":"493b74c5fec7b83a13984ca9cd5249b259f3e276","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/am/ClientApp.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fam%2FClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fam%2FClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fam%2FClientApp.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AccessPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n \n public interface ClientApp extends Entity {\n \n@@ -73,6 +74,10 @@ public interface ClientApp extends Entity {\n \n     void setAttrReleasePolicy(AttrReleasePolicy policy);\n \n+    TicketExpirationPolicy getTicketExpirationPolicy();\n+\n+    void setTicketExpirationPolicy(TicketExpirationPolicy policy);\n+\n     Realm getRealm();\n \n     void setRealm(Realm realm);"},{"sha":"2b947381fbb92b7c33b00eb343392ddb34ac7004","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/policy/TicketExpirationPolicy.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FTicketExpirationPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FTicketExpirationPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FTicketExpirationPolicy.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.entity.policy;\n+\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyConf;\n+\n+public interface TicketExpirationPolicy extends Policy {\n+\n+    TicketExpirationPolicyConf getConf();\n+\n+    void setConf(TicketExpirationPolicyConf conf);\n+}"},{"sha":"eae6345b18c30eb14e68c380ee07c487432d76ef","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractClientAppDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractClientAppDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractClientAppDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractClientAppDAO.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.Policy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n \n public abstract class AbstractClientAppDAO<C extends ClientApp> extends AbstractDAO<C> implements ClientAppDAO<C> {\n \n@@ -44,6 +45,8 @@ protected StringBuilder getByPolicyQuery(\n             query.append(\"accessPolicy\");\n         } else if (AttrReleasePolicy.class.isAssignableFrom(policyClass)) {\n             query.append(\"attrReleasePolicy\");\n+        } else if (TicketExpirationPolicy.class.isAssignableFrom(policyClass)) {\n+            query.append(\"ticketExpirationPolicy\");\n         }\n \n         return query;"},{"sha":"4c651b446252dae58f2158deb6cdfbb48e66810d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPolicyDAO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPolicyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPolicyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPolicyDAO.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PropagationPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PushPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.JPAExternalResource;\n import org.apache.syncope.core.persistence.jpa.entity.policy.AbstractPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAccessPolicy;\n@@ -50,6 +51,7 @@\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPullPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPushCorrelationRuleEntity;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPushPolicy;\n+import org.apache.syncope.core.persistence.jpa.entity.policy.JPATicketExpirationPolicy;\n \n public class JPAPolicyDAO extends AbstractDAO<Policy> implements PolicyDAO {\n \n@@ -70,6 +72,8 @@ protected static <T extends Policy> Class<? extends AbstractPolicy> getEntityRef\n                 ? JPAAccessPolicy.class\n                 : AttrReleasePolicy.class.isAssignableFrom(reference)\n                 ? JPAAttrReleasePolicy.class\n+                : TicketExpirationPolicy.class.isAssignableFrom(reference)\n+                ? JPATicketExpirationPolicy.class\n                 : null;\n     }\n \n@@ -218,6 +222,11 @@ public <T extends Policy> void delete(final T policy) {\n             casSPClientAppDAO.findByPolicy(policy).forEach(clientApp -> clientApp.setAttrReleasePolicy(null));\n             oidcRPClientAppDAO.findByPolicy(policy).forEach(clientApp -> clientApp.setAttrReleasePolicy(null));\n             saml2SPClientAppDAO.findByPolicy(policy).forEach(clientApp -> clientApp.setAttrReleasePolicy(null));\n+        } else if (policy instanceof TicketExpirationPolicy) {\n+            realmDAO.findByPolicy(policy).forEach(realm -> realm.setTicketExpirationPolicy(null));\n+            casSPClientAppDAO.findByPolicy(policy).forEach(clientApp -> clientApp.setTicketExpirationPolicy(null));\n+            oidcRPClientAppDAO.findByPolicy(policy).forEach(clientApp -> clientApp.setTicketExpirationPolicy(null));\n+            saml2SPClientAppDAO.findByPolicy(policy).forEach(clientApp -> clientApp.setTicketExpirationPolicy(null));\n         }\n \n         entityManager().remove(policy);"},{"sha":"614c7af5d7566d6842ccd2e00800e98d45ad64e4","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARealmDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.Policy;\n import org.apache.syncope.core.persistence.api.entity.policy.PropagationPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.ProvisioningPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -160,6 +161,8 @@ public <T extends Policy> List<Realm> findByPolicy(final T policy) {\n             policyColumn = \"accessPolicy\";\n         } else if (policy instanceof AttrReleasePolicy) {\n             policyColumn = \"attrReleasePolicy\";\n+        } else if (policy instanceof TicketExpirationPolicy) {\n+            policyColumn = \"ticketExpirationPolicy\";\n         }\n \n         TypedQuery<Realm> query = entityManager().createQuery("},{"sha":"3ca3f275c2a095c0af491584c7aaa45bb80b2687","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -83,6 +83,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PushCorrelationRuleEntity;\n import org.apache.syncope.core.persistence.api.entity.policy.PushPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.persistence.api.entity.task.AnyTemplatePullTask;\n import org.apache.syncope.core.persistence.api.entity.task.MacroTask;\n import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n@@ -136,6 +137,7 @@\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPullPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPushCorrelationRuleEntity;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPushPolicy;\n+import org.apache.syncope.core.persistence.jpa.entity.policy.JPATicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplatePullTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAMacroTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPANotificationTask;\n@@ -311,6 +313,8 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n             result = (E) new JPAAccessPolicy();\n         } else if (reference.equals(AttrReleasePolicy.class)) {\n             result = (E) new JPAAttrReleasePolicy();\n+        } else if (reference.equals(TicketExpirationPolicy.class)) {\n+            result = (E) new JPATicketExpirationPolicy();\n         } else if (reference.equals(OIDCRPClientApp.class)) {\n             result = (E) new JPAOIDCRPClientApp();\n         } else if (reference.equals(CASSPClientApp.class)) {"},{"sha":"528bad83319a307c77fe6f3e730a430fbf498533","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPARealm.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARealm.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -47,11 +47,13 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAccessPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAccountPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAttrReleasePolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAuthPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPasswordPolicy;\n+import org.apache.syncope.core.persistence.jpa.entity.policy.JPATicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.validation.entity.RealmCheck;\n \n @Entity\n@@ -86,6 +88,9 @@ public class JPARealm extends AbstractGeneratedKeyEntity implements Realm {\n     @ManyToOne(fetch = FetchType.EAGER)\n     private JPAAttrReleasePolicy attrReleasePolicy;\n \n+    @ManyToOne(fetch = FetchType.EAGER)\n+    private JPATicketExpirationPolicy ticketExpirationPolicy;\n+\n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(name = TABLE + \"Action\",\n             joinColumns =\n@@ -221,6 +226,17 @@ public AttrReleasePolicy getAttrReleasePolicy() {\n         return this.attrReleasePolicy;\n     }\n \n+    @Override\n+    public TicketExpirationPolicy getTicketExpirationPolicy() {\n+        return this.ticketExpirationPolicy;\n+    }\n+\n+    @Override\n+    public void setTicketExpirationPolicy(final TicketExpirationPolicy policy) {\n+        checkType(policy, JPATicketExpirationPolicy.class);\n+        this.ticketExpirationPolicy = (JPATicketExpirationPolicy) policy;\n+    }\n+\n     @Override\n     public boolean add(final ExternalResource resource) {\n         checkType(resource, JPAExternalResource.class);"},{"sha":"959546852434d907d85dc6bd8669871bddeb2bdf","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/am/AbstractClientApp.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FAbstractClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FAbstractClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FAbstractClientApp.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -34,11 +34,13 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AccessPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractGeneratedKeyEntity;\n import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAccessPolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAttrReleasePolicy;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAuthPolicy;\n+import org.apache.syncope.core.persistence.jpa.entity.policy.JPATicketExpirationPolicy;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @MappedSuperclass\n@@ -80,6 +82,9 @@ public class AbstractClientApp extends AbstractGeneratedKeyEntity implements Cli\n     @ManyToOne(fetch = FetchType.EAGER)\n     private JPAAttrReleasePolicy attrReleasePolicy;\n \n+    @ManyToOne(fetch = FetchType.EAGER)\n+    private JPATicketExpirationPolicy ticketExpirationPolicy;\n+\n     @Lob\n     private String properties;\n \n@@ -197,6 +202,17 @@ public void setAttrReleasePolicy(final AttrReleasePolicy policy) {\n         this.attrReleasePolicy = (JPAAttrReleasePolicy) policy;\n     }\n \n+    @Override\n+    public TicketExpirationPolicy getTicketExpirationPolicy() {\n+        return this.ticketExpirationPolicy;\n+    }\n+\n+    @Override\n+    public void setTicketExpirationPolicy(final TicketExpirationPolicy policy) {\n+        checkType(policy, JPATicketExpirationPolicy.class);\n+        this.ticketExpirationPolicy = (JPATicketExpirationPolicy) policy;\n+    }\n+\n     @Override\n     public Realm getRealm() {\n         return realm;"},{"sha":"e6bd285d2878013d2ed3e3658ab8f9ae126b1c80","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPAPolicyUtils.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPolicyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPolicyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPolicyUtils.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PropagationPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PushPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n \n public class JPAPolicyUtils implements PolicyUtils {\n \n@@ -61,6 +62,9 @@ public Class<? extends Policy> policyClass() {\n             case ACCESS:\n                 return AccessPolicy.class;\n \n+            case TICKET_EXPIRATION:\n+                return TicketExpirationPolicy.class;\n+\n             case PROPAGATION:\n                 return PropagationPolicy.class;\n "},{"sha":"0a0de4440f27ce5ac6d054ddc96a2cad7f567968","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPAPolicyUtilsFactory.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPolicyUtilsFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPolicyUtilsFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPolicyUtilsFactory.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.common.lib.policy.PropagationPolicyTO;\n import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.policy.PushPolicyTO;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.core.persistence.api.entity.policy.AccessPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n@@ -39,6 +40,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PropagationPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PushPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n \n public class JPAPolicyUtilsFactory implements PolicyUtilsFactory {\n \n@@ -66,6 +68,8 @@ public PolicyUtils getInstance(final Policy policy) {\n             type = PolicyType.ACCESS;\n         } else if (policy instanceof AttrReleasePolicy) {\n             type = PolicyType.ATTR_RELEASE;\n+        } else if (policy instanceof TicketExpirationPolicy) {\n+            type = PolicyType.TICKET_EXPIRATION;\n         } else {\n             throw new IllegalArgumentException(\"Invalid policy: \" + policy);\n         }\n@@ -92,6 +96,8 @@ public PolicyUtils getInstance(final Class<? extends PolicyTO> policyClass) {\n             type = PolicyType.ACCESS;\n         } else if (policyClass == AttrReleasePolicyTO.class) {\n             type = PolicyType.ATTR_RELEASE;\n+        } else if (policyClass == TicketExpirationPolicyTO.class) {\n+            type = PolicyType.TICKET_EXPIRATION;\n         } else {\n             throw new IllegalArgumentException(\"Invalid PolicyTO class: \" + policyClass.getName());\n         }"},{"sha":"0a0ddf9b5b85e4ed398a271b5d657c3928c84308","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPATicketExpirationPolicy.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPATicketExpirationPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPATicketExpirationPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPATicketExpirationPolicy.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity.policy;\n+\n+import jakarta.persistence.Entity;\n+import jakarta.persistence.Lob;\n+import jakarta.persistence.Table;\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyConf;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+\n+@Entity\n+@Table(name = JPATicketExpirationPolicy.TABLE)\n+public class JPATicketExpirationPolicy extends AbstractPolicy implements TicketExpirationPolicy {\n+\n+    private static final long serialVersionUID = -4190607009908888884L;\n+\n+    public static final String TABLE = \"TicketExpiration\";\n+\n+    @Lob\n+    private String jsonConf;\n+\n+    @Override\n+    public TicketExpirationPolicyConf getConf() {\n+        return Optional.ofNullable(jsonConf).\n+                map(c -> POJOHelper.deserialize(c, TicketExpirationPolicyConf.class)).\n+                orElse(null);\n+    }\n+\n+    @Override\n+    public void setConf(final TicketExpirationPolicyConf conf) {\n+        jsonConf = Optional.ofNullable(conf).map(POJOHelper::serialize).orElse(null);\n+    }\n+}"},{"sha":"53c6668c8e40aeda5bb39eb512df1100cf04cc52","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AbstractClientAppTest.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -22,10 +22,12 @@\n import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.entity.policy.AccessPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n import org.springframework.beans.factory.annotation.Autowired;\n \n@@ -72,4 +74,21 @@ protected AuthPolicy buildAndSaveAuthPolicy() {\n \n         return policyDAO.save(authPolicy);\n     }\n+\n+    protected TicketExpirationPolicy buildAndSaveTicketExpirationPolicy() {\n+        TicketExpirationPolicy ticketExpirationPolicy = entityFactory.newEntity(TicketExpirationPolicy.class);\n+        ticketExpirationPolicy.setName(\"TicketExpirationPolicyTest\");\n+\n+        DefaultTicketExpirationPolicyConf conf = new DefaultTicketExpirationPolicyConf();\n+        DefaultTicketExpirationPolicyConf.TGTConf tgtConf = new DefaultTicketExpirationPolicyConf.TGTConf();\n+        tgtConf.setMaxTimeToLiveInSeconds(110);\n+        conf.setTgtConf(tgtConf);\n+        DefaultTicketExpirationPolicyConf.STConf stConf = new DefaultTicketExpirationPolicyConf.STConf();\n+        stConf.setMaxTimeToLiveInSeconds(0);\n+        stConf.setNumberOfUses(1);\n+        conf.setStConf(stConf);\n+        ticketExpirationPolicy.setConf(conf);\n+\n+        return policyDAO.save(ticketExpirationPolicy);\n+    }\n }"},{"sha":"d79748f99b26c3d42ecf374919f30a9b43fd2c50","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PolicyTest.java","status":"modified","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf;\n import org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf;\n import org.apache.syncope.common.lib.policy.DefaultPushCorrelationRuleConf;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.BackOffStrategy;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n@@ -52,6 +53,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PushCorrelationRuleEntity;\n import org.apache.syncope.core.persistence.api.entity.policy.PushPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n import org.apache.syncope.core.provisioning.api.rules.PullCorrelationRule;\n import org.apache.syncope.core.provisioning.api.rules.PushCorrelationRule;\n@@ -153,6 +155,10 @@ public void findByType() {\n         List<AttrReleasePolicy> attrReleasePolicies = policyDAO.find(AttrReleasePolicy.class);\n         assertNotNull(attrReleasePolicies);\n         assertEquals(2, attrReleasePolicies.size());\n+\n+        List<TicketExpirationPolicy> ticketExpirationPolicies = policyDAO.find(TicketExpirationPolicy.class);\n+        assertNotNull(ticketExpirationPolicies);\n+        assertEquals(0, ticketExpirationPolicies.size());\n     }\n \n     @Test\n@@ -328,6 +334,34 @@ public void createAttrRelease() {\n         assertEquals(afterCount, beforeCount + 1);\n     }\n \n+    @Test\n+    public void createTicketExpiration() {\n+        int beforeCount = policyDAO.findAll().size();\n+\n+        TicketExpirationPolicy ticketExpirationPolicy = entityFactory.newEntity(TicketExpirationPolicy.class);\n+        ticketExpirationPolicy.setName(\"TicketExpirationPolicyTest\");\n+\n+        DefaultTicketExpirationPolicyConf ticketExpirationPolicyConf = new DefaultTicketExpirationPolicyConf();\n+        DefaultTicketExpirationPolicyConf.TGTConf tgtConf = new DefaultTicketExpirationPolicyConf.TGTConf();\n+        tgtConf.setMaxTimeToLiveInSeconds(110);\n+        ticketExpirationPolicyConf.setTgtConf(tgtConf);\n+        DefaultTicketExpirationPolicyConf.STConf stConf = new DefaultTicketExpirationPolicyConf.STConf();\n+        stConf.setMaxTimeToLiveInSeconds(0);\n+        stConf.setNumberOfUses(1);\n+        ticketExpirationPolicyConf.setStConf(stConf);\n+        ticketExpirationPolicy.setConf(ticketExpirationPolicyConf);\n+\n+        ticketExpirationPolicy = policyDAO.save(ticketExpirationPolicy);\n+\n+        assertNotNull(ticketExpirationPolicy);\n+        assertNotNull(ticketExpirationPolicy.getKey());\n+        assertNotNull(((DefaultTicketExpirationPolicyConf) ticketExpirationPolicy.getConf()).getTgtConf());\n+        assertNotNull(((DefaultTicketExpirationPolicyConf) ticketExpirationPolicy.getConf()).getStConf());\n+\n+        int afterCount = policyDAO.findAll().size();\n+        assertEquals(afterCount, beforeCount + 1);\n+    }\n+\n     @Test\n     public void update() {\n         PasswordPolicy policy = policyDAO.find(\"ce93fcda-dc3a-4369-a7b0-a6108c261c85\");"},{"sha":"e603c1a7dfbe0bbf8496532e0ff76816ce29b8b0","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PolicyTest.java","status":"modified","additions":17,"deletions":3,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPolicyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPolicyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPolicyTest.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AccessPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.persistence.jpa.inner.AbstractClientAppTest;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -69,11 +70,13 @@ public void removePolicyFromRealm() {\n         AuthPolicy authPolicy = buildAndSaveAuthPolicy();\n         AccessPolicy accessPolicy = buildAndSaveAccessPolicy();\n         AttrReleasePolicy attrPolicy = buildAndSaveAttrRelPolicy();\n+        TicketExpirationPolicy ticketExpirationPolicy = buildAndSaveTicketExpirationPolicy();\n \n         Realm realm = realmDAO.getRoot();\n         realm.setAuthPolicy(authPolicy);\n         realm.setAccessPolicy(accessPolicy);\n         realm.setAttrReleasePolicy(attrPolicy);\n+        realm.setTicketExpirationPolicy(ticketExpirationPolicy);\n \n         realm = realmDAO.save(realm);\n         assertNotNull(realm.getAuthPolicy());\n@@ -83,19 +86,22 @@ public void removePolicyFromRealm() {\n         policyDAO.delete(authPolicy);\n         policyDAO.delete(accessPolicy);\n         policyDAO.delete(attrPolicy);\n+        policyDAO.delete(ticketExpirationPolicy);\n         entityManager().flush();\n \n         realm = realmDAO.getRoot();\n         assertNull(realm.getAuthPolicy());\n         assertNull(realm.getAccessPolicy());\n         assertNull(realm.getAttrReleasePolicy());\n+        assertNull(realm.getTicketExpirationPolicy());\n     }\n \n     @Test\n     public void removePolicyFromApps() {\n         // Create new policy\n         AccessPolicy accessPolicy = buildAndSaveAccessPolicy();\n         AuthPolicy authPolicy = buildAndSaveAuthPolicy();\n+        TicketExpirationPolicy ticketExpirationPolicy = buildAndSaveTicketExpirationPolicy();\n \n         // Create new client app and assign policy\n         OIDCRPClientApp rp = entityFactory.newEntity(OIDCRPClientApp.class);\n@@ -106,14 +112,22 @@ public void removePolicyFromApps() {\n         rp.setClientSecret(\"secret\");\n         rp.setAccessPolicy(accessPolicy);\n         rp.setAuthPolicy(authPolicy);\n+        rp.setTicketExpirationPolicy(ticketExpirationPolicy);\n \n         rp = oidcRelyingPartyDAO.save(rp);\n-        assertNotNull(rp);\n+        assertNotNull(rp.getAuthPolicy());\n+        assertNotNull(rp.getAccessPolicy());\n+        assertNotNull(rp.getTicketExpirationPolicy());\n \n         policyDAO.delete(accessPolicy);\n-        entityManager().flush();\n-\n         policyDAO.delete(authPolicy);\n+        policyDAO.delete(ticketExpirationPolicy);\n         entityManager().flush();\n+\n+        rp = oidcRelyingPartyDAO.find(rp.getKey());\n+        assertNotNull(rp);\n+        assertNull(rp.getAuthPolicy());\n+        assertNull(rp.getAccessPolicy());\n+        assertNull(rp.getTicketExpirationPolicy());\n     }\n }"},{"sha":"7d695694d9a7a110e4b3b9f91c7ab5c04e1d7ae5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ClientAppDataBinderImpl.java","status":"modified","additions":29,"deletions":10,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.Policy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.provisioning.api.data.ClientAppDataBinder;\n \n public class ClientAppDataBinderImpl implements ClientAppDataBinder {\n@@ -62,13 +63,15 @@ public ClientAppDataBinderImpl(\n     public <T extends ClientApp> T create(final ClientAppTO clientAppTO) {\n         if (clientAppTO instanceof SAML2SPClientAppTO) {\n             return (T) doCreate((SAML2SPClientAppTO) clientAppTO);\n-        } else if (clientAppTO instanceof OIDCRPClientAppTO) {\n+        }\n+        if (clientAppTO instanceof OIDCRPClientAppTO) {\n             return (T) doCreate((OIDCRPClientAppTO) clientAppTO);\n-        } else if (clientAppTO instanceof CASSPClientAppTO) {\n+        }\n+        if (clientAppTO instanceof CASSPClientAppTO) {\n             return (T) doCreate((CASSPClientAppTO) clientAppTO);\n-        } else {\n-            throw new IllegalArgumentException(\"Unsupported client app: \" + clientAppTO.getClass().getName());\n         }\n+\n+        throw new IllegalArgumentException(\"Unsupported client app: \" + clientAppTO.getClass().getName());\n     }\n \n     @Override\n@@ -162,12 +165,14 @@ protected void copyToTO(final ClientApp clientApp, final ClientAppTO clientAppTO\n         clientAppTO.setPrivacyUrl(clientApp.getPrivacyUrl());\n         clientAppTO.setUsernameAttributeProviderConf(clientApp.getUsernameAttributeProviderConf());\n \n-        clientAppTO.setAuthPolicy(\n-                Optional.ofNullable(clientApp.getAuthPolicy()).map(AuthPolicy::getKey).orElse(null));\n-        clientAppTO.setAccessPolicy(\n-                Optional.ofNullable(clientApp.getAccessPolicy()).map(AccessPolicy::getKey).orElse(null));\n-        clientAppTO.setAttrReleasePolicy(\n-                Optional.ofNullable(clientApp.getAttrReleasePolicy()).map(AttrReleasePolicy::getKey).orElse(null));\n+        clientAppTO.setAuthPolicy(Optional.ofNullable(clientApp.getAuthPolicy()).\n+                map(AuthPolicy::getKey).orElse(null));\n+        clientAppTO.setAccessPolicy(Optional.ofNullable(clientApp.getAccessPolicy()).\n+                map(AccessPolicy::getKey).orElse(null));\n+        clientAppTO.setAttrReleasePolicy(Optional.ofNullable(clientApp.getAttrReleasePolicy()).\n+                map(AttrReleasePolicy::getKey).orElse(null));\n+        clientAppTO.setTicketExpirationPolicy(Optional.ofNullable(clientApp.getTicketExpirationPolicy()).\n+                map(TicketExpirationPolicy::getKey).orElse(null));\n \n         clientAppTO.getProperties().addAll(clientApp.getProperties());\n     }\n@@ -323,6 +328,20 @@ protected void copyToEntity(final ClientApp clientApp, final ClientAppTO clientA\n             }\n         }\n \n+        if (clientAppTO.getTicketExpirationPolicy() == null) {\n+            clientApp.setTicketExpirationPolicy(null);\n+        } else {\n+            Policy policy = policyDAO.find(clientAppTO.getTicketExpirationPolicy());\n+            if (policy instanceof TicketExpirationPolicy) {\n+                clientApp.setTicketExpirationPolicy((TicketExpirationPolicy) policy);\n+            } else {\n+                SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n+                sce.getElements().add(\"Expected \" + TicketExpirationPolicy.class.getSimpleName()\n+                        + \", found \" + policy.getClass().getSimpleName());\n+                throw sce;\n+            }\n+        }\n+\n         clientApp.setProperties(clientAppTO.getProperties());\n     }\n }"},{"sha":"c3a5dcf1576476bc6621f5f2a9f842d4b0de7389","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/PolicyDataBinderImpl.java","status":"modified","additions":19,"deletions":1,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.common.lib.policy.PropagationPolicyTO;\n import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.policy.PushPolicyTO;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n@@ -49,6 +50,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PushCorrelationRuleEntity;\n import org.apache.syncope.core.persistence.api.entity.policy.PushPolicy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.provisioning.api.data.PolicyDataBinder;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -252,6 +254,15 @@ protected <T extends Policy> T getPolicy(final T policy, final PolicyTO policyTO\n             attrReleasePolicy.setOrder(attrReleasePolicyTO.getOrder());\n             attrReleasePolicy.setStatus(attrReleasePolicyTO.getStatus());\n             attrReleasePolicy.setConf(attrReleasePolicyTO.getConf());\n+        } else if (policyTO instanceof TicketExpirationPolicyTO) {\n+            if (result == null) {\n+                result = (T) entityFactory.newEntity(TicketExpirationPolicy.class);\n+            }\n+\n+            TicketExpirationPolicy ticketExpirationPolicy = TicketExpirationPolicy.class.cast(result);\n+            TicketExpirationPolicyTO ticketExpirationPolicyTO = TicketExpirationPolicyTO.class.cast(policyTO);\n+\n+            ticketExpirationPolicy.setConf(ticketExpirationPolicyTO.getConf());\n         }\n \n         if (result != null) {\n@@ -345,6 +356,12 @@ public <T extends PolicyTO> T getPolicyTO(final Policy policy) {\n             attrReleasePolicyTO.setOrder(attrReleasePolicy.getOrder());\n             attrReleasePolicyTO.setStatus(attrReleasePolicy.getStatus());\n             attrReleasePolicyTO.setConf(attrReleasePolicy.getConf());\n+        } else if (policy instanceof TicketExpirationPolicy) {\n+            TicketExpirationPolicy ticketExpirationPolicy = TicketExpirationPolicy.class.cast(policy);\n+            TicketExpirationPolicyTO ticketExpirationPolicyTO = new TicketExpirationPolicyTO();\n+            policyTO = (T) ticketExpirationPolicyTO;\n+\n+            ticketExpirationPolicyTO.setConf(ticketExpirationPolicy.getConf());\n         }\n \n         if (policyTO != null) {\n@@ -353,7 +370,8 @@ public <T extends PolicyTO> T getPolicyTO(final Policy policy) {\n \n             if (!(policy instanceof AuthPolicy)\n                     && !(policy instanceof AccessPolicy)\n-                    && !(policy instanceof AttrReleasePolicy)) {\n+                    && !(policy instanceof AttrReleasePolicy)\n+                    && !(policy instanceof TicketExpirationPolicy)) {\n \n                 policyTO.getUsedByResources().addAll(\n                         resourceDAO.findByPolicy(policy).stream()."},{"sha":"efd902a9e3f29d78519ea5393e7b13a4faae394f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RealmDataBinderImpl.java","status":"modified","additions":40,"deletions":7,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRealmDataBinderImpl.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.data;\n \n+import java.util.Optional;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -39,6 +40,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.Policy;\n+import org.apache.syncope.core.persistence.api.entity.policy.TicketExpirationPolicy;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.provisioning.api.data.RealmDataBinder;\n import org.apache.syncope.core.provisioning.java.utils.TemplateUtils;\n@@ -163,6 +165,17 @@ public Realm create(final Realm parent, final RealmTO realmTO) {\n                 throw sce;\n             }\n         }\n+        if (realmTO.getTicketExpirationPolicy() != null) {\n+            Policy policy = policyDAO.find(realmTO.getTicketExpirationPolicy());\n+            if (policy instanceof TicketExpirationPolicy) {\n+                realm.setTicketExpirationPolicy((TicketExpirationPolicy) policy);\n+            } else {\n+                SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n+                sce.getElements().add(\"Expected \" + TicketExpirationPolicy.class.getSimpleName()\n+                        + \", found \" + policy.getClass().getSimpleName());\n+                throw sce;\n+            }\n+        }\n \n         realmTO.getActions().forEach(logicActionsKey -> {\n             Implementation logicAction = implementationDAO.find(logicActionsKey);\n@@ -262,6 +275,20 @@ public PropagationByResource<String> update(final Realm realm, final RealmTO rea\n             }\n         }\n \n+        if (realmTO.getTicketExpirationPolicy() == null) {\n+            realm.setTicketExpirationPolicy(null);\n+        } else {\n+            Policy policy = policyDAO.find(realmTO.getTicketExpirationPolicy());\n+            if (policy instanceof TicketExpirationPolicy) {\n+                realm.setTicketExpirationPolicy((TicketExpirationPolicy) policy);\n+            } else {\n+                SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n+                sce.getElements().add(\"Expected \" + TicketExpirationPolicy.class.getSimpleName()\n+                        + \", found \" + policy.getClass().getSimpleName());\n+                throw sce;\n+            }\n+        }\n+\n         realmTO.getActions().forEach(logicActionsKey -> {\n             Implementation logicActions = implementationDAO.find(logicActionsKey);\n             if (logicActions == null) {\n@@ -304,16 +331,22 @@ public RealmTO getRealmTO(final Realm realm, final boolean admin) {\n \n         realmTO.setKey(realm.getKey());\n         realmTO.setName(realm.getName());\n-        realmTO.setParent(realm.getParent() == null ? null : realm.getParent().getKey());\n+        Optional.ofNullable(realm.getParent()).ifPresent(parent -> realmTO.setParent(parent.getKey()));\n         realmTO.setFullPath(realm.getFullPath());\n \n         if (admin) {\n-            realmTO.setAccountPolicy(realm.getAccountPolicy() == null ? null : realm.getAccountPolicy().getKey());\n-            realmTO.setPasswordPolicy(realm.getPasswordPolicy() == null ? null : realm.getPasswordPolicy().getKey());\n-            realmTO.setAuthPolicy(realm.getAuthPolicy() == null ? null : realm.getAuthPolicy().getKey());\n-            realmTO.setAccessPolicy(realm.getAccessPolicy() == null ? null : realm.getAccessPolicy().getKey());\n-            realmTO.setAttrReleasePolicy(\n-                    realm.getAttrReleasePolicy() == null ? null : realm.getAttrReleasePolicy().getKey());\n+            Optional.ofNullable(realm.getAccountPolicy()).\n+                    ifPresent(policy -> realmTO.setAccountPolicy(policy.getKey()));\n+            Optional.ofNullable(realm.getPasswordPolicy()).\n+                    ifPresent(policy -> realmTO.setPasswordPolicy(policy.getKey()));\n+            Optional.ofNullable(realm.getAuthPolicy()).\n+                    ifPresent(policy -> realmTO.setAuthPolicy(policy.getKey()));\n+            Optional.ofNullable(realm.getAccessPolicy()).\n+                    ifPresent(policy -> realmTO.setAccessPolicy(policy.getKey()));\n+            Optional.ofNullable(realm.getAttrReleasePolicy()).\n+                    ifPresent(policy -> realmTO.setAttrReleasePolicy(policy.getKey()));\n+            Optional.ofNullable(realm.getTicketExpirationPolicy()).\n+                    ifPresent(policy -> realmTO.setTicketExpirationPolicy(policy.getKey()));\n \n             realm.getActions().forEach(action -> realmTO.getActions().add(action.getKey()));\n "},{"sha":"a053d29871996996c5ded43ddd7eb638b1e54c36","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/wa/WAClientAppDataBinderImpl.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -93,6 +93,14 @@ public WAClientApp getWAClientApp(final ClientApp clientApp) {\n                 waClientApp.setAttrReleasePolicy(\n                         policyDataBinder.getPolicyTO(clientApp.getRealm().getAttrReleasePolicy()));\n             }\n+\n+            if (clientApp.getTicketExpirationPolicy() != null) {\n+                waClientApp.setTicketExpirationPolicy(\n+                        policyDataBinder.getPolicyTO(clientApp.getTicketExpirationPolicy()));\n+            } else if (clientApp.getRealm() != null && clientApp.getRealm().getTicketExpirationPolicy() != null) {\n+                waClientApp.setTicketExpirationPolicy(\n+                        policyDataBinder.getPolicyTO(clientApp.getRealm().getTicketExpirationPolicy()));\n+            }\n         } catch (Exception e) {\n             LOG.error(\"While building the configuration from an application's policy \", e);\n         }"},{"sha":"cd4558f9091286ee46a31732586388b0459e018c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -73,7 +73,9 @@\n import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n import org.apache.syncope.common.lib.policy.PolicyTO;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n import org.apache.syncope.common.lib.request.AnyObjectCR;\n import org.apache.syncope.common.lib.request.AnyObjectUR;\n import org.apache.syncope.common.lib.request.AttrPatch;\n@@ -961,6 +963,23 @@ protected static AccessPolicyTO buildAccessPolicyTO() {\n         return policy;\n     }\n \n+    protected static TicketExpirationPolicyTO buildTicketExpirationPolicyTO() {\n+        TicketExpirationPolicyTO policy = new TicketExpirationPolicyTO();\n+        policy.setName(\"Test Ticket Expiration policy\");\n+\n+        DefaultTicketExpirationPolicyConf conf = new DefaultTicketExpirationPolicyConf();\n+        DefaultTicketExpirationPolicyConf.TGTConf tgtConf = new DefaultTicketExpirationPolicyConf.TGTConf();\n+        tgtConf.setMaxTimeToLiveInSeconds(110);\n+        conf.setTgtConf(tgtConf);\n+        DefaultTicketExpirationPolicyConf.STConf stConf = new DefaultTicketExpirationPolicyConf.STConf();\n+        stConf.setMaxTimeToLiveInSeconds(0);\n+        stConf.setNumberOfUses(1);\n+        conf.setStConf(stConf);\n+        policy.setConf(conf);\n+\n+        return policy;\n+    }\n+\n     protected static List<AuditEntry> query(final AuditQuery query, final int maxWaitSeconds) {\n         if (IS_ELASTICSEARCH_ENABLED) {\n             try {"},{"sha":"d146eabf425d559701f97eb9e601644e33476bb8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -42,7 +42,7 @@ public void login() {\n     }\n \n     private static void createAccountPolicy(final String name) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n@@ -99,7 +99,7 @@ private static void createAccountPolicy(final String name) {\n     }\n \n     private static void createPasswordPolicy(final String name) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:4:link\");\n         TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n@@ -194,7 +194,7 @@ private static void createPullPolicy(final String name) {\n     }\n \n     private static void deleteAccountPolicy(final String name) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         Component component = findComponentByProp(\"name\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", name);\n@@ -219,7 +219,7 @@ private static void deleteAccountPolicy(final String name) {\n     }\n \n     private static void deletePasswordPolicy(final String name) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:4:link\");\n         Component component = findComponentByProp(\"name\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", name);\n@@ -270,6 +270,7 @@ private static void deletePullPolicy(final String name) {\n \n     @Test\n     public void read() {\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         assertNotNull(findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"an account policy\"));\n     }\n@@ -511,7 +512,7 @@ private static void composeDefaultAccountPolicy(final String policyDescription)\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n-        \n+\n         assertSuccessMessage();\n         TESTER.cleanupFeedbackMessages();\n "},{"sha":"e47c3a9dc24880592828429182c7a1714e5d9ff4","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PolicyITCase.java","status":"modified","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -42,10 +42,12 @@\n import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n import org.apache.syncope.common.lib.policy.PropagationPolicyTO;\n import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.policy.PushPolicyTO;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.BackOffStrategy;\n@@ -213,6 +215,15 @@ public void create() throws IOException {\n         AccessPolicyTO accessPolicyTO = createPolicy(PolicyType.ACCESS, buildAccessPolicyTO());\n         assertNotNull(accessPolicyTO);\n         assertEquals(\"Test Access policy\", accessPolicyTO.getName());\n+\n+        AttrReleasePolicyTO attrReleasePolicyTO = createPolicy(PolicyType.ATTR_RELEASE, buildAttrReleasePolicyTO());\n+        assertNotNull(attrReleasePolicyTO);\n+        assertEquals(\"Test Attribute Release policy\", attrReleasePolicyTO.getName());\n+\n+        TicketExpirationPolicyTO ticketExpirationPolicyTO =\n+                createPolicy(PolicyType.TICKET_EXPIRATION, buildTicketExpirationPolicyTO());\n+        assertNotNull(ticketExpirationPolicyTO);\n+        assertEquals(\"Test Ticket Expiration policy\", ticketExpirationPolicyTO.getName());\n     }\n \n     @Test\n@@ -308,6 +319,24 @@ public void updateAttrReleasePolicy() {\n         assertTrue(policyConf.getIncludeOnlyAttrs().contains(\"cn\"));\n     }\n \n+    @Test\n+    public void updateTicketExpirationPolicy() {\n+        TicketExpirationPolicyTO newPolicyTO =\n+                createPolicy(PolicyType.TICKET_EXPIRATION, buildTicketExpirationPolicyTO());\n+        assertNotNull(newPolicyTO);\n+\n+        DefaultTicketExpirationPolicyConf policyConf = (DefaultTicketExpirationPolicyConf) newPolicyTO.getConf();\n+        policyConf.getStConf().setNumberOfUses(2);\n+\n+        // update new policy\n+        POLICY_SERVICE.update(PolicyType.TICKET_EXPIRATION, newPolicyTO);\n+        newPolicyTO = POLICY_SERVICE.read(PolicyType.TICKET_EXPIRATION, newPolicyTO.getKey());\n+        assertNotNull(newPolicyTO);\n+\n+        policyConf = (DefaultTicketExpirationPolicyConf) newPolicyTO.getConf();\n+        assertEquals(2, policyConf.getStConf().getNumberOfUses());\n+    }\n+\n     @Test\n     public void delete() throws IOException {\n         PullPolicyTO policy = buildPullPolicyTO();\n@@ -349,6 +378,31 @@ public void delete() throws IOException {\n         } catch (SyncopeClientException e) {\n             assertNotNull(e);\n         }\n+\n+        AttrReleasePolicyTO attrReleasePolicyTO = createPolicy(PolicyType.ATTR_RELEASE, buildAttrReleasePolicyTO());\n+        assertNotNull(attrReleasePolicyTO);\n+\n+        POLICY_SERVICE.delete(PolicyType.ATTR_RELEASE, attrReleasePolicyTO.getKey());\n+\n+        try {\n+            POLICY_SERVICE.read(PolicyType.ATTR_RELEASE, attrReleasePolicyTO.getKey());\n+            fail(\"This should not happen\");\n+        } catch (SyncopeClientException e) {\n+            assertNotNull(e);\n+        }\n+\n+        TicketExpirationPolicyTO ticketExpirationPolicyTO =\n+                createPolicy(PolicyType.TICKET_EXPIRATION, buildTicketExpirationPolicyTO());\n+        assertNotNull(ticketExpirationPolicyTO);\n+\n+        POLICY_SERVICE.delete(PolicyType.TICKET_EXPIRATION, ticketExpirationPolicyTO.getKey());\n+\n+        try {\n+            POLICY_SERVICE.read(PolicyType.TICKET_EXPIRATION, ticketExpirationPolicyTO.getKey());\n+            fail(\"This should not happen\");\n+        } catch (SyncopeClientException e) {\n+            assertNotNull(e);\n+        }\n     }\n \n     @Test"},{"sha":"b27545aa54627d650804d74d42a1655daad039fe","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/wa/WAClientAppITCase.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWAClientAppITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWAClientAppITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWAClientAppITCase.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -32,6 +32,8 @@\n import org.apache.syncope.common.lib.policy.AttrReleasePolicyTO;\n import org.apache.syncope.common.lib.policy.AuthPolicyTO;\n import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n import org.apache.syncope.common.lib.to.OIDCRPClientAppTO;\n import org.apache.syncope.common.lib.to.SAML2SPClientAppTO;\n import org.apache.syncope.common.lib.types.ClientAppType;\n@@ -104,20 +106,29 @@ public void readWithPolicies() {\n \n         AttrReleasePolicyTO attrReleasePolicyTO = createPolicy(PolicyType.ATTR_RELEASE, buildAttrReleasePolicyTO());\n \n+        TicketExpirationPolicyTO ticketExpirationPolicyTO =\n+                createPolicy(PolicyType.TICKET_EXPIRATION, buildTicketExpirationPolicyTO());\n+\n         oidcrpto.setAuthPolicy(authPolicyTO.getKey());\n         oidcrpto.setAccessPolicy(accessPolicyTO.getKey());\n         oidcrpto.setAttrReleasePolicy(attrReleasePolicyTO.getKey());\n+        oidcrpto.setTicketExpirationPolicy(ticketExpirationPolicyTO.getKey());\n \n         oidcrpto = createClientApp(ClientAppType.OIDCRP, oidcrpto);\n \n         WAClientApp waClientApp = WA_CLIENT_APP_SERVICE.read(oidcrpto.getClientAppId(), null);\n         assertNotNull(waClientApp);\n         assertTrue(waClientApp.getAttrReleasePolicy().getConf() instanceof DefaultAttrReleasePolicyConf);\n+        assertTrue(waClientApp.getTicketExpirationPolicy().getConf() instanceof DefaultTicketExpirationPolicyConf);\n \n         DefaultAttrReleasePolicyConf attrReleasePolicyConf =\n                 (DefaultAttrReleasePolicyConf) waClientApp.getAttrReleasePolicy().getConf();\n         assertFalse(attrReleasePolicyConf.getReleaseAttrs().isEmpty());\n         assertEquals(\"username\", attrReleasePolicyConf.getReleaseAttrs().get(\"uid\"));\n         assertEquals(\"fullname\", attrReleasePolicyConf.getReleaseAttrs().get(\"cn\"));\n+\n+        DefaultTicketExpirationPolicyConf ticketExpirationPolicyConf =\n+                (DefaultTicketExpirationPolicyConf) waClientApp.getTicketExpirationPolicy().getConf();\n+        assertEquals(110, ticketExpirationPolicyConf.getTgtConf().getMaxTimeToLiveInSeconds());\n     }\n }"},{"sha":"e0edddc6c9782fcb6b68aed8dc3f623eabb51370","filename":"pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -1380,7 +1380,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-compiler-plugin</artifactId>\n-          <version>3.10.1</version>\n+          <version>3.11.0</version>\n           <configuration>\n             <release>${targetJdk}</release>\n             <useIncrementalCompilation>false</useIncrementalCompilation>\n@@ -1674,7 +1674,7 @@ under the License.\n             <dependency>\n               <groupId>com.puppycrawl.tools</groupId>\n               <artifactId>checkstyle</artifactId>\n-              <version>10.9.0</version>\n+              <version>10.9.1</version>\n             </dependency>\n           </dependencies>\n           <configuration>"},{"sha":"d3fccd0f65071a868dd8df9805a3fd07919b9ed4","filename":"src/main/asciidoc/reference-guide/concepts/clientapplications.adoc","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fclientapplications.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fclientapplications.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fclientapplications.adoc?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -38,6 +38,7 @@ https://apereo.github.io/cas/6.6.x/integration/Attribute-Release-PrincipalId-Att\n . <<policies-authentication,authentication policy>>\n . <<policies-access,access policy>>\n . <<policies-attribute-release,attribute release policy>>\n+. <<policies-ticket-expiration,ticket expiration policy>>\n . additional properties\n \n More parameters are required to be specified depending on the actual client application type."},{"sha":"de5297b4e02dfac1a210e26965914be595a473c6","filename":"src/main/asciidoc/reference-guide/concepts/policies.adoc","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -470,3 +470,12 @@ https://github.com/apache/syncope/blob/master/core/provisioning-api/src/main/jav\n endif::[]\n interface.\n ====\n+\n+[[policies-ticket-expiration]]\n+==== Ticket Expiration\n+\n+Ticket Expiration policies control the duration of various types of WA sessions.\n+\n+[NOTE]\n+Ticket Expiration Policy instances are dynamically translated into\n+https://apereo.github.io/cas/6.6.x/ticketing/Configuring-Ticket-Expiration-Policy.html[their CAS equivalent^]."},{"sha":"c8c946b8d4841d635e5ddd10b7b3fdc345a8126e","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/config/WAContext.java","status":"modified","additions":27,"deletions":10,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FWAContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FWAContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FWAContext.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -56,11 +56,14 @@\n import org.apache.syncope.wa.starter.mapping.DefaultAccessMapper;\n import org.apache.syncope.wa.starter.mapping.DefaultAttrReleaseMapper;\n import org.apache.syncope.wa.starter.mapping.DefaultAuthMapper;\n+import org.apache.syncope.wa.starter.mapping.DefaultTicketExpirationMapper;\n import org.apache.syncope.wa.starter.mapping.HttpRequestAccessMapper;\n import org.apache.syncope.wa.starter.mapping.OIDCRPClientAppTOMapper;\n import org.apache.syncope.wa.starter.mapping.RegisteredServiceMapper;\n import org.apache.syncope.wa.starter.mapping.RemoteEndpointAccessMapper;\n import org.apache.syncope.wa.starter.mapping.SAML2SPClientAppTOMapper;\n+import org.apache.syncope.wa.starter.mapping.TicketExpirationMapFor;\n+import org.apache.syncope.wa.starter.mapping.TicketExpirationMapper;\n import org.apache.syncope.wa.starter.mapping.TimeBasedAccessMapper;\n import org.apache.syncope.wa.starter.oidc.WAOIDCJWKSGeneratorService;\n import org.apache.syncope.wa.starter.pac4j.saml.WASAML2ClientCustomizer;\n@@ -172,6 +175,12 @@ public AuthMapper defaultAuthMapper() {\n         return new DefaultAuthMapper();\n     }\n \n+    @ConditionalOnMissingBean\n+    @Bean\n+    public TicketExpirationMapper defaultTicketExpirationMapper() {\n+        return new DefaultTicketExpirationMapper();\n+    }\n+\n     @ConditionalOnMissingBean(name = \"casSPClientAppTOMapper\")\n     @Bean\n     public ClientAppMapper casSPClientAppTOMapper() {\n@@ -200,26 +209,33 @@ public RegisteredServiceMapper registeredServiceMapper(\n \n         Map<String, AuthMapper> authPolicyConfMappers = new HashMap<>();\n         ctx.getBeansOfType(AuthMapper.class).forEach((name, bean) -> {\n-            AuthMapFor authMapFor = ctx.findAnnotationOnBean(name, AuthMapFor.class);\n-            if (authMapFor != null) {\n-                authPolicyConfMappers.put(authMapFor.authPolicyConfClass().getName(), bean);\n+            AuthMapFor amf = ctx.findAnnotationOnBean(name, AuthMapFor.class);\n+            if (amf != null) {\n+                authPolicyConfMappers.put(amf.authPolicyConfClass().getName(), bean);\n             }\n         });\n \n         Map<String, AccessMapper> accessPolicyConfMappers = new HashMap<>();\n         ctx.getBeansOfType(AccessMapper.class).forEach((name, bean) -> {\n-            AccessMapFor accessMapFor = ctx.findAnnotationOnBean(name, AccessMapFor.class);\n-            if (accessMapFor != null) {\n-                accessPolicyConfMappers.put(accessMapFor.accessPolicyConfClass().getName(), bean);\n+            AccessMapFor amf = ctx.findAnnotationOnBean(name, AccessMapFor.class);\n+            if (amf != null) {\n+                accessPolicyConfMappers.put(amf.accessPolicyConfClass().getName(), bean);\n             }\n         });\n \n         Map<String, AttrReleaseMapper> attrReleasePolicyConfMappers = new HashMap<>();\n         ctx.getBeansOfType(AttrReleaseMapper.class).forEach((name, bean) -> {\n-            AttrReleaseMapFor attrReleaseMapFor =\n-                    ctx.findAnnotationOnBean(name, AttrReleaseMapFor.class);\n-            if (attrReleaseMapFor != null) {\n-                attrReleasePolicyConfMappers.put(attrReleaseMapFor.attrReleasePolicyConfClass().getName(), bean);\n+            AttrReleaseMapFor armpf = ctx.findAnnotationOnBean(name, AttrReleaseMapFor.class);\n+            if (armpf != null) {\n+                attrReleasePolicyConfMappers.put(armpf.attrReleasePolicyConfClass().getName(), bean);\n+            }\n+        });\n+\n+        Map<String, TicketExpirationMapper> ticketExpirationPolicyConfMappers = new HashMap<>();\n+        ctx.getBeansOfType(TicketExpirationMapper.class).forEach((name, bean) -> {\n+            TicketExpirationMapFor temf = ctx.findAnnotationOnBean(name, TicketExpirationMapFor.class);\n+            if (temf != null) {\n+                ticketExpirationPolicyConfMappers.put(temf.ticketExpirationPolicyConfClass().getName(), bean);\n             }\n         });\n \n@@ -239,6 +255,7 @@ public RegisteredServiceMapper registeredServiceMapper(\n                 authPolicyConfMappers,\n                 accessPolicyConfMappers,\n                 attrReleasePolicyConfMappers,\n+                ticketExpirationPolicyConfMappers,\n                 clientAppTOMappers);\n     }\n "},{"sha":"f3ef455a5820f3b3053d432bd871706d13841d7f","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/AbstractClientAppMapper.java","status":"modified","additions":31,"deletions":12,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -24,12 +24,17 @@\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.ClientAppTO;\n import org.apereo.cas.services.BaseWebBasedRegisteredService;\n+import org.apereo.cas.services.CasRegisteredService;\n import org.apereo.cas.services.DefaultRegisteredServiceProperty;\n import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n import org.apereo.cas.services.RegisteredServiceMultifactorPolicy;\n import org.apereo.cas.services.RegisteredServiceProperty;\n+import org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceTicketGrantingTicketExpirationPolicy;\n \n abstract class AbstractClientAppMapper implements ClientAppMapper {\n \n@@ -59,19 +64,33 @@ protected void setPolicies(\n             final RegisteredServiceAuthenticationPolicy authPolicy,\n             final RegisteredServiceMultifactorPolicy mfaPolicy,\n             final RegisteredServiceAccessStrategy accessStrategy,\n-            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy) {\n+            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy,\n+            final RegisteredServiceTicketGrantingTicketExpirationPolicy tgtExpirationPolicy,\n+            final RegisteredServiceServiceTicketExpirationPolicy stExpirationPolicy,\n+            final RegisteredServiceProxyGrantingTicketExpirationPolicy tgtProxyExpirationPolicy,\n+            final RegisteredServiceProxyTicketExpirationPolicy stProxyExpirationPolicy) {\n \n-        if (authPolicy != null) {\n-            service.setAuthenticationPolicy(authPolicy);\n-        }\n-        if (mfaPolicy != null) {\n-            service.setMultifactorAuthenticationPolicy(mfaPolicy);\n-        }\n-        if (accessStrategy != null) {\n-            service.setAccessStrategy(accessStrategy);\n-        }\n-        if (attributeReleasePolicy != null) {\n-            service.setAttributeReleasePolicy(attributeReleasePolicy);\n+        Optional.ofNullable(authPolicy).ifPresent(service::setAuthenticationPolicy);\n+\n+        Optional.ofNullable(mfaPolicy).ifPresent(service::setMultifactorAuthenticationPolicy);\n+\n+        Optional.ofNullable(accessStrategy).ifPresent(service::setAccessStrategy);\n+\n+        Optional.ofNullable(attributeReleasePolicy).ifPresent(service::setAttributeReleasePolicy);\n+\n+        Optional.ofNullable(tgtExpirationPolicy).ifPresent(service::setTicketGrantingTicketExpirationPolicy);\n+\n+        if (service instanceof CasRegisteredService) {\n+            CasRegisteredService casRegisteredService = (CasRegisteredService) service;\n+\n+            Optional.ofNullable(stExpirationPolicy).\n+                    ifPresent(casRegisteredService::setServiceTicketExpirationPolicy);\n+\n+            Optional.ofNullable(tgtProxyExpirationPolicy).\n+                    ifPresent(casRegisteredService::setProxyGrantingTicketExpirationPolicy);\n+\n+            Optional.ofNullable(stProxyExpirationPolicy).\n+                    ifPresent(casRegisteredService::setProxyTicketExpirationPolicy);\n         }\n     }\n }"},{"sha":"a3a4bd70e70afb64a6adb07e148fc8b53b260849","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/CASSPClientAppTOMapper.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPClientAppTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPClientAppTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPClientAppTOMapper.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -26,6 +26,10 @@\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n import org.apereo.cas.services.RegisteredServiceMultifactorPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceTicketGrantingTicketExpirationPolicy;\n import org.springframework.context.ConfigurableApplicationContext;\n \n @ClientAppMapFor(clientAppClass = CASSPClientAppTO.class)\n@@ -38,15 +42,20 @@ public RegisteredService map(\n             final RegisteredServiceAuthenticationPolicy authPolicy,\n             final RegisteredServiceMultifactorPolicy mfaPolicy,\n             final RegisteredServiceAccessStrategy accessStrategy,\n-            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy) {\n+            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy,\n+            final RegisteredServiceTicketGrantingTicketExpirationPolicy tgtExpirationPolicy,\n+            final RegisteredServiceServiceTicketExpirationPolicy stExpirationPolicy,\n+            final RegisteredServiceProxyGrantingTicketExpirationPolicy tgtProxyExpirationPolicy,\n+            final RegisteredServiceProxyTicketExpirationPolicy stProxyExpirationPolicy) {\n \n         CASSPClientAppTO cas = CASSPClientAppTO.class.cast(clientApp.getClientAppTO());\n \n         CasRegisteredService service = new CasRegisteredService();\n         service.setServiceId(cas.getServiceId());\n         setCommon(service, cas);\n \n-        setPolicies(service, authPolicy, mfaPolicy, accessStrategy, attributeReleasePolicy);\n+        setPolicies(service, authPolicy, mfaPolicy, accessStrategy, attributeReleasePolicy,\n+                tgtExpirationPolicy, stExpirationPolicy, tgtProxyExpirationPolicy, stProxyExpirationPolicy);\n \n         return service;\n     }"},{"sha":"d3d0010b0b8ad6bd20c288bbea95f59202976cfb","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/ClientAppMapper.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FClientAppMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FClientAppMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FClientAppMapper.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -24,6 +24,10 @@\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n import org.apereo.cas.services.RegisteredServiceMultifactorPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceTicketGrantingTicketExpirationPolicy;\n import org.springframework.context.ConfigurableApplicationContext;\n \n @FunctionalInterface\n@@ -35,5 +39,9 @@ RegisteredService map(\n             RegisteredServiceAuthenticationPolicy authPolicy,\n             RegisteredServiceMultifactorPolicy mfaPolicy,\n             RegisteredServiceAccessStrategy accessStrategy,\n-            RegisteredServiceAttributeReleasePolicy attributeReleasePolicy);\n+            RegisteredServiceAttributeReleasePolicy attributeReleasePolicy,\n+            RegisteredServiceTicketGrantingTicketExpirationPolicy tgtExpirationPolicy,\n+            RegisteredServiceServiceTicketExpirationPolicy stExpirationPolicy,\n+            RegisteredServiceProxyGrantingTicketExpirationPolicy tgtProxyExpirationPolicy,\n+            RegisteredServiceProxyTicketExpirationPolicy stProxyExpirationPolicy);\n }"},{"sha":"5a0a3ec4b12e1b2dbf4512f8e5a07aa324853be7","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/DefaultTicketExpirationMapper.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultTicketExpirationMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultTicketExpirationMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultTicketExpirationMapper.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.wa.starter.mapping;\n+\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n+import org.apereo.cas.services.DefaultRegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.DefaultRegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.DefaultRegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.DefaultRegisteredServiceTicketGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceTicketGrantingTicketExpirationPolicy;\n+\n+@TicketExpirationMapFor(ticketExpirationPolicyConfClass = DefaultTicketExpirationPolicyConf.class)\n+public class DefaultTicketExpirationMapper implements TicketExpirationMapper {\n+\n+    protected Optional<DefaultTicketExpirationPolicyConf> conf(final TicketExpirationPolicyTO policy) {\n+        if (policy.getConf() instanceof DefaultTicketExpirationPolicyConf) {\n+            return Optional.of((DefaultTicketExpirationPolicyConf) policy.getConf());\n+        }\n+        return Optional.empty();\n+    }\n+\n+    @Override\n+    public RegisteredServiceTicketGrantingTicketExpirationPolicy buildTGT(final TicketExpirationPolicyTO policy) {\n+        return conf(policy).flatMap(conf -> Optional.ofNullable(conf.getTgtConf())).\n+                map(conf -> {\n+                    DefaultRegisteredServiceTicketGrantingTicketExpirationPolicy result =\n+                            new DefaultRegisteredServiceTicketGrantingTicketExpirationPolicy();\n+                    result.setMaxTimeToLiveInSeconds(conf.getMaxTimeToLiveInSeconds());\n+                    return result;\n+                }).\n+                orElse(null);\n+    }\n+\n+    @Override\n+    public RegisteredServiceServiceTicketExpirationPolicy buildST(final TicketExpirationPolicyTO policy) {\n+        return conf(policy).flatMap(conf -> Optional.ofNullable(conf.getStConf())).\n+                map(conf -> {\n+                    DefaultRegisteredServiceServiceTicketExpirationPolicy result =\n+                            new DefaultRegisteredServiceServiceTicketExpirationPolicy();\n+                    result.setNumberOfUses(conf.getNumberOfUses());\n+                    result.setTimeToLive(Long.toString(conf.getMaxTimeToLiveInSeconds()));\n+                    return result;\n+                }).\n+                orElse(null);\n+    }\n+\n+    @Override\n+    public RegisteredServiceProxyGrantingTicketExpirationPolicy buildProxyTGT(final TicketExpirationPolicyTO policy) {\n+        return conf(policy).flatMap(conf -> Optional.ofNullable(conf.getProxyTgtConf())).\n+                map(conf -> {\n+                    DefaultRegisteredServiceProxyGrantingTicketExpirationPolicy result =\n+                            new DefaultRegisteredServiceProxyGrantingTicketExpirationPolicy();\n+                    result.setMaxTimeToLiveInSeconds(conf.getMaxTimeToLiveInSeconds());\n+                    return result;\n+                }).\n+                orElse(null);\n+    }\n+\n+    @Override\n+    public RegisteredServiceProxyTicketExpirationPolicy buildProxyST(final TicketExpirationPolicyTO policy) {\n+        return conf(policy).flatMap(conf -> Optional.ofNullable(conf.getProxyStConf())).\n+                map(conf -> {\n+                    DefaultRegisteredServiceProxyTicketExpirationPolicy result =\n+                            new DefaultRegisteredServiceProxyTicketExpirationPolicy();\n+                    result.setNumberOfUses(conf.getNumberOfUses());\n+                    result.setTimeToLive(Long.toString(conf.getMaxTimeToLiveInSeconds()));\n+                    return result;\n+                }).\n+                orElse(null);\n+    }\n+}"},{"sha":"8a9d1c04b05ff9301ee936fb0677a9bb6968914d","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/OIDCRPClientAppTOMapper.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -44,6 +44,10 @@\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n import org.apereo.cas.services.RegisteredServiceMultifactorPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceTicketGrantingTicketExpirationPolicy;\n import org.apereo.cas.services.ReturnAllowedAttributeReleasePolicy;\n import org.springframework.context.ConfigurableApplicationContext;\n \n@@ -59,7 +63,11 @@ public RegisteredService map(\n             final RegisteredServiceAuthenticationPolicy authPolicy,\n             final RegisteredServiceMultifactorPolicy mfaPolicy,\n             final RegisteredServiceAccessStrategy accessStrategy,\n-            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy) {\n+            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy,\n+            final RegisteredServiceTicketGrantingTicketExpirationPolicy tgtExpirationPolicy,\n+            final RegisteredServiceServiceTicketExpirationPolicy stExpirationPolicy,\n+            final RegisteredServiceProxyGrantingTicketExpirationPolicy tgtProxyExpirationPolicy,\n+            final RegisteredServiceProxyTicketExpirationPolicy stProxyExpirationPolicy) {\n \n         OIDCRPClientAppTO rp = OIDCRPClientAppTO.class.cast(clientApp.getClientAppTO());\n         OidcRegisteredService service = new OidcRegisteredService();\n@@ -151,7 +159,8 @@ public RegisteredService map(\n                     CUSTOM_SCOPE, customClaims.stream().collect(Collectors.toList())));\n         }\n \n-        setPolicies(service, authPolicy, mfaPolicy, accessStrategy, chain);\n+        setPolicies(service, authPolicy, mfaPolicy, accessStrategy, chain,\n+                tgtExpirationPolicy, stExpirationPolicy, tgtProxyExpirationPolicy, stProxyExpirationPolicy);\n \n         return service;\n     }"},{"sha":"b0a9fd8cf6e53719baaade74f5edff1059818ab6","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/RegisteredServiceMapper.java","status":"modified","additions":34,"deletions":1,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -31,6 +31,10 @@\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n import org.apereo.cas.services.RegisteredServiceDelegatedAuthenticationPolicy;\n import org.apereo.cas.services.RegisteredServiceMultifactorPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceTicketGrantingTicketExpirationPolicy;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.ObjectProvider;\n@@ -52,6 +56,8 @@ public class RegisteredServiceMapper {\n \n     protected final Map<String, AttrReleaseMapper> attrReleasePolicyConfMappers;\n \n+    protected final Map<String, TicketExpirationMapper> ticketExpirationPolicyConfMappers;\n+\n     protected final Map<String, ClientAppMapper> clientAppTOMappers;\n \n     public RegisteredServiceMapper(\n@@ -61,6 +67,7 @@ public RegisteredServiceMapper(\n             final Map<String, AuthMapper> authPolicyConfMappers,\n             final Map<String, AccessMapper> accessPolicyConfMappers,\n             final Map<String, AttrReleaseMapper> attrReleasePolicyConfMappers,\n+            final Map<String, TicketExpirationMapper> ticketExpirationPolicyConfMappers,\n             final Map<String, ClientAppMapper> clientAppTOMappers) {\n \n         this.ctx = ctx;\n@@ -69,6 +76,7 @@ public RegisteredServiceMapper(\n         this.authPolicyConfMappers = authPolicyConfMappers;\n         this.accessPolicyConfMappers = accessPolicyConfMappers;\n         this.attrReleasePolicyConfMappers = attrReleasePolicyConfMappers;\n+        this.ticketExpirationPolicyConfMappers = ticketExpirationPolicyConfMappers;\n         this.clientAppTOMappers = clientAppTOMappers;\n     }\n \n@@ -128,6 +136,31 @@ public RegisteredService toRegisteredService(final WAClientApp clientApp) {\n                         map(mapper -> mapper.build(attrReleasePolicyTO)).\n                         orElse(null);\n \n-        return clientAppMapper.map(ctx, clientApp, authPolicy, mfaPolicy, accessStrategy, attributeReleasePolicy);\n+        RegisteredServiceTicketGrantingTicketExpirationPolicy tgtExpirationPolicy = null;\n+        RegisteredServiceServiceTicketExpirationPolicy stExpirationPolicy = null;\n+        RegisteredServiceProxyGrantingTicketExpirationPolicy tgtProxyExpirationPolicy = null;\n+        RegisteredServiceProxyTicketExpirationPolicy stProxyExpirationPolicy = null;\n+        if (clientApp.getTicketExpirationPolicy() != null) {\n+            TicketExpirationMapper ticketExpirationMapper = ticketExpirationPolicyConfMappers.get(\n+                    clientApp.getTicketExpirationPolicy().getConf().getClass().getName());\n+            if (ticketExpirationMapper != null) {\n+                tgtExpirationPolicy = ticketExpirationMapper.buildTGT(clientApp.getTicketExpirationPolicy());\n+                stExpirationPolicy = ticketExpirationMapper.buildST(clientApp.getTicketExpirationPolicy());\n+                tgtProxyExpirationPolicy = ticketExpirationMapper.buildProxyTGT(clientApp.getTicketExpirationPolicy());\n+                stProxyExpirationPolicy = ticketExpirationMapper.buildProxyST(clientApp.getTicketExpirationPolicy());\n+            }\n+        }\n+\n+        return clientAppMapper.map(\n+                ctx,\n+                clientApp,\n+                authPolicy,\n+                mfaPolicy,\n+                accessStrategy,\n+                attributeReleasePolicy,\n+                tgtExpirationPolicy,\n+                stExpirationPolicy,\n+                tgtProxyExpirationPolicy,\n+                stProxyExpirationPolicy);\n     }\n }"},{"sha":"51eaebb3339c43c3d4ce30af8ec84c693423627f","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/SAML2SPClientAppTOMapper.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPClientAppTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPClientAppTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPClientAppTOMapper.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -27,6 +27,10 @@\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n import org.apereo.cas.services.RegisteredServiceMultifactorPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceTicketGrantingTicketExpirationPolicy;\n import org.apereo.cas.support.saml.services.SamlRegisteredService;\n import org.apereo.cas.util.model.TriStateBoolean;\n import org.springframework.context.ConfigurableApplicationContext;\n@@ -41,7 +45,11 @@ public RegisteredService map(\n             final RegisteredServiceAuthenticationPolicy authPolicy,\n             final RegisteredServiceMultifactorPolicy mfaPolicy,\n             final RegisteredServiceAccessStrategy accessStrategy,\n-            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy) {\n+            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy,\n+            final RegisteredServiceTicketGrantingTicketExpirationPolicy tgtExpirationPolicy,\n+            final RegisteredServiceServiceTicketExpirationPolicy stExpirationPolicy,\n+            final RegisteredServiceProxyGrantingTicketExpirationPolicy tgtProxyExpirationPolicy,\n+            final RegisteredServiceProxyTicketExpirationPolicy stProxyExpirationPolicy) {\n \n         SAML2SPClientAppTO sp = SAML2SPClientAppTO.class.cast(clientApp.getClientAppTO());\n         SamlRegisteredService service = new SamlRegisteredService();\n@@ -64,7 +72,8 @@ public RegisteredService map(\n         }\n         service.setServiceProviderNameIdQualifier(sp.getServiceProviderNameIdQualifier());\n \n-        setPolicies(service, authPolicy, mfaPolicy, accessStrategy, attributeReleasePolicy);\n+        setPolicies(service, authPolicy, mfaPolicy, accessStrategy, attributeReleasePolicy,\n+                tgtExpirationPolicy, stExpirationPolicy, tgtProxyExpirationPolicy, stProxyExpirationPolicy);\n \n         return service;\n     }"},{"sha":"b13b2fe106708d0dee73243191edfb35957c6c4e","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/TicketExpirationMapFor.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTicketExpirationMapFor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTicketExpirationMapFor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTicketExpirationMapFor.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.wa.starter.mapping;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyConf;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface TicketExpirationMapFor {\n+\n+    Class<? extends TicketExpirationPolicyConf> ticketExpirationPolicyConfClass();\n+}"},{"sha":"fc040b0a86f1a1b49af233a0b7eec2ed8b50be17","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/TicketExpirationMapper.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTicketExpirationMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTicketExpirationMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FTicketExpirationMapper.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.wa.starter.mapping;\n+\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n+import org.apereo.cas.services.RegisteredServiceProxyGrantingTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProxyTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceServiceTicketExpirationPolicy;\n+import org.apereo.cas.services.RegisteredServiceTicketGrantingTicketExpirationPolicy;\n+\n+public interface TicketExpirationMapper {\n+\n+    RegisteredServiceTicketGrantingTicketExpirationPolicy buildTGT(TicketExpirationPolicyTO policy);\n+\n+    RegisteredServiceServiceTicketExpirationPolicy buildST(TicketExpirationPolicyTO policy);\n+\n+    RegisteredServiceProxyGrantingTicketExpirationPolicy buildProxyTGT(TicketExpirationPolicyTO policy);\n+\n+    RegisteredServiceProxyTicketExpirationPolicy buildProxyST(TicketExpirationPolicyTO policy);\n+}"},{"sha":"635338055f22dc41207ed2c2967f9d0d2fead733","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/WAServiceRegistryTest.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/862a0067e057c38508a95376811f503db9f94f18/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java?ref=862a0067e057c38508a95376811f503db9f94f18","patch":"@@ -34,6 +34,8 @@\n import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n+import org.apache.syncope.common.lib.policy.DefaultTicketExpirationPolicyConf;\n+import org.apache.syncope.common.lib.policy.TicketExpirationPolicyTO;\n import org.apache.syncope.common.lib.to.AuthModuleTO;\n import org.apache.syncope.common.lib.to.OIDCRPClientAppTO;\n import org.apache.syncope.common.lib.to.SAML2SPClientAppTO;\n@@ -125,6 +127,14 @@ private static void addPolicies(\n             attrReleasePolicy.setConf(attrReleasePolicyConf);\n             waClientApp.setAttrReleasePolicy(attrReleasePolicy);\n         }\n+\n+        TicketExpirationPolicyTO ticketExpirationPolicy = new TicketExpirationPolicyTO();\n+        DefaultTicketExpirationPolicyConf ticketExpirationPolicyConf = new DefaultTicketExpirationPolicyConf();\n+        DefaultTicketExpirationPolicyConf.TGTConf tgtConf = new DefaultTicketExpirationPolicyConf.TGTConf();\n+        tgtConf.setMaxTimeToLiveInSeconds(110);\n+        ticketExpirationPolicyConf.setTgtConf(tgtConf);\n+        ticketExpirationPolicy.setConf(ticketExpirationPolicyConf);\n+        waClientApp.setTicketExpirationPolicy(ticketExpirationPolicy);\n     }\n \n     @Autowired\n@@ -274,5 +284,7 @@ public void delegatedAuthentication() {\n         assertNotNull(delegatedAuthPolicy);\n         assertEquals(1, delegatedAuthPolicy.getAllowedProviders().size());\n         assertTrue(delegatedAuthPolicy.getAllowedProviders().contains(authModuleTO.getKey()));\n+\n+        assertNotNull(service.getTicketGrantingTicketExpirationPolicy());\n     }\n }"}]}