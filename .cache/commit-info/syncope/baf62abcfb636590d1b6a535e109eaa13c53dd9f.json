{"sha":"baf62abcfb636590d1b6a535e109eaa13c53dd9f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJhZjYyYWJjZmI2MzY1OTBkMWI2YTUzNWUxMDllYWExM2M1M2RkOWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-27T08:24:43Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-27T08:24:43Z"},"message":"[SYNCOPE-156] Fixing appearance of key columns when no pref cookie is set yet","tree":{"sha":"6a633524c12205296f85a7622e6081cbe6184c94","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6a633524c12205296f85a7622e6081cbe6184c94"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/baf62abcfb636590d1b6a535e109eaa13c53dd9f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/baf62abcfb636590d1b6a535e109eaa13c53dd9f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/baf62abcfb636590d1b6a535e109eaa13c53dd9f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/baf62abcfb636590d1b6a535e109eaa13c53dd9f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8b98a337a9c796df38f67e81910ff807bb417c1a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b98a337a9c796df38f67e81910ff807bb417c1a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8b98a337a9c796df38f67e81910ff807bb417c1a"}],"stats":{"total":105,"additions":44,"deletions":61},"files":[{"sha":"ff834f6cd09248c0a3873d0389041c13b833617e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":38,"deletions":9,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/baf62abcfb636590d1b6a535e109eaa13c53dd9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/baf62abcfb636590d1b6a535e109eaa13c53dd9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=baf62abcfb636590d1b6a535e109eaa13c53dd9f","patch":"@@ -20,8 +20,10 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n+import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Date;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -31,6 +33,10 @@\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n@@ -42,11 +48,14 @@\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public abstract class AnyDirectoryPanel<T extends AnyTO>\n-        extends DirectoryPanel<T, AnyHandler<T>, AnyDataProvider<T>, AbstractAnyRestClient<T>> {\n+public abstract class AnyDirectoryPanel<A extends AnyTO>\n+        extends DirectoryPanel<A, AnyHandler<A>, AnyDataProvider<A>, AbstractAnyRestClient<A>> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n@@ -73,7 +82,7 @@\n \n     protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"outer\");\n \n-    protected AnyDirectoryPanel(final String id, final Builder<T> builder) {\n+    protected AnyDirectoryPanel(final String id, final Builder<A> builder) {\n         super(id, builder);\n         this.realm = builder.realm;\n         this.type = builder.type;\n@@ -98,9 +107,29 @@ protected AnyDirectoryPanel(final String id, final Builder<T> builder) {\n         initResultTable();\n     }\n \n+    protected void addPropertyColumn(\n+            final String name,\n+            final Field field,\n+            final List<IColumn<A, String>> columns) {\n+\n+        if (\"key\".equalsIgnoreCase(name)) {\n+            columns.add(new KeyPropertyColumn<A>(new ResourceModel(name, name), name, name));\n+        } else if (\"token\".equalsIgnoreCase(name)) {\n+            columns.add(new TokenColumn<A>(new ResourceModel(name, name), name));\n+        } else if (field != null\n+                && (field.getType().equals(Boolean.class) || field.getType().equals(boolean.class))) {\n+\n+            columns.add(new BooleanPropertyColumn<A>(new ResourceModel(name, name), name, name));\n+        } else if (field != null && field.getType().equals(Date.class)) {\n+            columns.add(new DatePropertyColumn<A>(new ResourceModel(name, name), name, name));\n+        } else {\n+            columns.add(new PropertyColumn<A, String>(new ResourceModel(name, name), name, name));\n+        }\n+    }\n+\n     @Override\n-    protected AnyDataProvider<T> dataProvider() {\n-        final AnyDataProvider<T> dp = new AnyDataProvider<>(restClient, rows, filtered, realm, type);\n+    protected AnyDataProvider<A> dataProvider() {\n+        final AnyDataProvider<A> dp = new AnyDataProvider<>(restClient, rows, filtered, realm, type);\n         return dp.setFIQL(this.fiql);\n     }\n \n@@ -168,17 +197,17 @@ public List<AnyTypeClassTO> getAnyTypeClassTOs() {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    protected Panel customResultBody(final String panelId, final AnyHandler<T> item, final Serializable result) {\n+    protected Panel customResultBody(final String panelId, final AnyHandler<A> item, final Serializable result) {\n         if (!(result instanceof ProvisioningResult)) {\n             throw new IllegalStateException(\"Unsupported result type\");\n         }\n \n         return new StatusPanel(\n                 panelId,\n-                ((ProvisioningResult<T>) result).getAny(),\n+                ((ProvisioningResult<A>) result).getAny(),\n                 new ListModel<>(new ArrayList<StatusBean>()),\n                 CollectionUtils.collect(\n-                        ((ProvisioningResult<T>) result).getPropagationStatuses(),\n+                        ((ProvisioningResult<A>) result).getPropagationStatuses(),\n                         new SerializableTransformer<PropagationStatus, Pair<ConnObjectTO, ConnObjectWrapper>>() {\n \n                     private static final long serialVersionUID = -4931455531906427515L;\n@@ -187,7 +216,7 @@ protected Panel customResultBody(final String panelId, final AnyHandler<T> item,\n                     public Pair<ConnObjectTO, ConnObjectWrapper> transform(final PropagationStatus input) {\n                         ConnObjectTO before = input.getBeforeObj();\n                         ConnObjectWrapper afterObjWrapper = new ConnObjectWrapper(\n-                                ((ProvisioningResult<T>) result).getAny(),\n+                                ((ProvisioningResult<A>) result).getAny(),\n                                 input.getResource(),\n                                 input.getAfterObj());\n                         return Pair.of(before, afterObjWrapper);"},{"sha":"1e5c161d2d41428dbf11d3da84b595a983031cf2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/baf62abcfb636590d1b6a535e109eaa13c53dd9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/baf62abcfb636590d1b6a535e109eaa13c53dd9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=baf62abcfb636590d1b6a535e109eaa13c53dd9f","patch":"@@ -19,10 +19,8 @@\n package org.apache.syncope.client.console.panels;\n \n import java.io.Serializable;\n-import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -34,7 +32,6 @@\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -52,7 +49,6 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n@@ -80,15 +76,7 @@ protected List<IColumn<AnyObjectTO, String>> getColumns() {\n         for (String name : prefMan.getList(\n                 getRequest(), String.format(Constants.PREF_ANY_OBJECT_DETAILS_VIEW, type))) {\n \n-            final Field field = ReflectionUtils.findField(AnyObjectTO.class, name);\n-\n-            if (\"key\".equalsIgnoreCase(name)) {\n-                columns.add(new KeyPropertyColumn<AnyObjectTO>(new ResourceModel(name, name), name, name));\n-            } else if (field != null && field.getType().equals(Date.class)) {\n-                columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n-            } else {\n-                columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n-            }\n+            addPropertyColumn(name, ReflectionUtils.findField(AnyObjectTO.class, name), columns);\n         }\n \n         for (String name : prefMan.getList(\n@@ -110,7 +98,7 @@ protected List<IColumn<AnyObjectTO, String>> getColumns() {\n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n+                addPropertyColumn(name, ReflectionUtils.findField(AnyObjectTO.class, name), columns);\n             }\n \n             prefMan.setList(getRequest(), getResponse(),"},{"sha":"52587ed9cd2b9153992b935c7b2113756a6d96df","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":2,"deletions":15,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/baf62abcfb636590d1b6a535e109eaa13c53dd9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/baf62abcfb636590d1b6a535e109eaa13c53dd9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=baf62abcfb636590d1b6a535e109eaa13c53dd9f","patch":"@@ -19,10 +19,8 @@\n package org.apache.syncope.client.console.panels;\n \n import java.io.Serializable;\n-import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -34,8 +32,6 @@\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -53,7 +49,6 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n@@ -79,15 +74,7 @@ protected List<IColumn<GroupTO, String>> getColumns() {\n         final List<IColumn<GroupTO, String>> columns = new ArrayList<>();\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DETAILS_VIEW)) {\n-            final Field field = ReflectionUtils.findField(GroupTO.class, name);\n-\n-            if (\"key\".equalsIgnoreCase(name)) {\n-                columns.add(new KeyPropertyColumn<GroupTO>(new ResourceModel(name, name), name, name));\n-            } else if (field != null && field.getType().equals(Date.class)) {\n-                columns.add(new DatePropertyColumn<GroupTO>(new ResourceModel(name, name), name, name));\n-            } else {\n-                columns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(name, name), name, name));\n-            }\n+            addPropertyColumn(name, ReflectionUtils.findField(GroupTO.class, name), columns);\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_PLAIN_ATTRS_VIEW)) {\n@@ -105,7 +92,7 @@ protected List<IColumn<GroupTO, String>> getColumns() {\n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : GroupDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                columns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(name, name), name, name));\n+                addPropertyColumn(name, ReflectionUtils.findField(GroupTO.class, name), columns);\n             }\n \n             prefMan.setList(getRequest(), getResponse(), Constants.PREF_GROUP_DETAILS_VIEW,"},{"sha":"e5f8583abbb40afdaf5a6dbd5f3777415afda97b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/baf62abcfb636590d1b6a535e109eaa13c53dd9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/baf62abcfb636590d1b6a535e109eaa13c53dd9f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=baf62abcfb636590d1b6a535e109eaa13c53dd9f","patch":"@@ -19,11 +19,9 @@\n package org.apache.syncope.client.console.panels;\n \n import java.io.Serializable;\n-import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n-import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -35,10 +33,6 @@\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -55,7 +49,6 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n@@ -93,21 +86,7 @@ protected List<IColumn<UserTO, String>> getColumns() {\n         final List<IColumn<UserTO, String>> columns = new ArrayList<>();\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n-            final Field field = ReflectionUtils.findField(UserTO.class, name);\n-\n-            if (\"key\".equalsIgnoreCase(name)) {\n-                columns.add(new KeyPropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n-            } else if (\"token\".equalsIgnoreCase(name)) {\n-                columns.add(new TokenColumn<UserTO>(new ResourceModel(name, name), name));\n-            } else if (field != null\n-                    && (field.getType().equals(Boolean.class) || field.getType().equals(boolean.class))) {\n-\n-                columns.add(new BooleanPropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n-            } else if (field != null && field.getType().equals(Date.class)) {\n-                columns.add(new DatePropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n-            } else {\n-                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n-            }\n+            addPropertyColumn(name, ReflectionUtils.findField(UserTO.class, name), columns);\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_PLAIN_ATTRS_VIEW)) {\n@@ -125,7 +104,7 @@ protected List<IColumn<UserTO, String>> getColumns() {\n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : UserDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n+                addPropertyColumn(name, ReflectionUtils.findField(UserTO.class, name), columns);\n             }\n \n             prefMan.setList(getRequest(), getResponse(), Constants.PREF_USERS_DETAILS_VIEW,"}]}