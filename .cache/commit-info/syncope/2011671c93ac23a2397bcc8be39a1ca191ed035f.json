{"sha":"2011671c93ac23a2397bcc8be39a1ca191ed035f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIwMTE2NzFjOTNhYzIzYTIzOTdiY2M4YmUzOWExY2ExOTFlZDAzNWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-15T10:05:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-15T10:05:33Z"},"message":"[SYNCOPE-710] Merge from 1_2_X","tree":{"sha":"1b6aaf18596fa7c077725a7eeff5882b224c172f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1b6aaf18596fa7c077725a7eeff5882b224c172f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2011671c93ac23a2397bcc8be39a1ca191ed035f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2011671c93ac23a2397bcc8be39a1ca191ed035f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2011671c93ac23a2397bcc8be39a1ca191ed035f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2011671c93ac23a2397bcc8be39a1ca191ed035f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4133c2402e491342d0c32a1a6c5a9bb7d5a8870b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4133c2402e491342d0c32a1a6c5a9bb7d5a8870b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4133c2402e491342d0c32a1a6c5a9bb7d5a8870b"},{"sha":"2524280ebeaff46bc351f4692fb4f966148bc87e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2524280ebeaff46bc351f4692fb4f966148bc87e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2524280ebeaff46bc351f4692fb4f966148bc87e"}],"stats":{"total":372,"additions":188,"deletions":184},"files":[{"sha":"d332e2339487c0796ce51f1b8c3bc8afdee00a08","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultAnyObjectProvisioningManager.java","status":"modified","additions":11,"deletions":17,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -105,6 +105,17 @@ public Pair<Long, List<PropagationStatus>> update(\n \n         WorkflowResult<Long> updated = awfAdapter.update(anyObjectPatch);\n \n+        // SYNCOPE-459: take care of user virtual attributes ...\n+        PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n+                updated.getResult(),\n+                AnyTypeKind.ANY_OBJECT,\n+                anyObjectPatch.getVirAttrs());\n+        if (updated.getPropByRes() == null) {\n+            updated.setPropByRes(propByResVirAttr);\n+        } else {\n+            updated.getPropByRes().merge(propByResVirAttr);\n+        }\n+\n         List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n                 AnyTypeKind.ANY_OBJECT,\n                 updated.getResult(),\n@@ -113,23 +124,6 @@ public Pair<Long, List<PropagationStatus>> update(\n                 updated.getPropByRes(),\n                 anyObjectPatch.getVirAttrs(),\n                 excludedResources);\n-        if (tasks.isEmpty()) {\n-            // SYNCOPE-459: take care of user virtual attributes ...\n-            PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n-                    updated.getResult(),\n-                    AnyTypeKind.ANY_OBJECT,\n-                    anyObjectPatch.getVirAttrs());\n-            tasks.addAll(!propByResVirAttr.isEmpty()\n-                    ? propagationManager.getUpdateTasks(\n-                            AnyTypeKind.ANY_OBJECT,\n-                            updated.getResult(),\n-                            false,\n-                            null,\n-                            updated.getPropByRes(),\n-                            anyObjectPatch.getVirAttrs(),\n-                            null)\n-                    : Collections.<PropagationTask>emptyList());\n-        }\n \n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);"},{"sha":"0fff2a3a46dfc42909dc5f2b33094aa166338dd1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultGroupProvisioningManager.java","status":"modified","additions":11,"deletions":17,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultGroupProvisioningManager.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -137,6 +137,17 @@ public Pair<Long, List<PropagationStatus>> update(\n \n         WorkflowResult<Long> updated = gwfAdapter.update(groupPatch);\n \n+        // SYNCOPE-459: take care of user virtual attributes ...\n+        PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n+                updated.getResult(),\n+                AnyTypeKind.GROUP,\n+                groupPatch.getVirAttrs());\n+        if (updated.getPropByRes() == null) {\n+            updated.setPropByRes(propByResVirAttr);\n+        } else {\n+            updated.getPropByRes().merge(propByResVirAttr);\n+        }\n+\n         List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n                 AnyTypeKind.GROUP,\n                 updated.getResult(),\n@@ -145,23 +156,6 @@ public Pair<Long, List<PropagationStatus>> update(\n                 updated.getPropByRes(),\n                 groupPatch.getVirAttrs(),\n                 excludedResources);\n-        if (tasks.isEmpty()) {\n-            // SYNCOPE-459: take care of user virtual attributes ...\n-            PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n-                    updated.getResult(),\n-                    AnyTypeKind.GROUP,\n-                    groupPatch.getVirAttrs());\n-            tasks.addAll(!propByResVirAttr.isEmpty()\n-                    ? propagationManager.getUpdateTasks(\n-                            AnyTypeKind.GROUP,\n-                            updated.getResult(),\n-                            false,\n-                            null,\n-                            updated.getPropByRes(),\n-                            groupPatch.getVirAttrs(),\n-                            excludedResources)\n-                    : Collections.<PropagationTask>emptyList());\n-        }\n \n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);"},{"sha":"a59337c1c04610afed7e17697003bfab7adb8d5b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":19,"deletions":23,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -119,17 +119,19 @@ public Pair<Long, List<PropagationStatus>> create(final UserTO userTO, final boo\n     public Pair<Long, List<PropagationStatus>> update(final UserPatch userPatch) {\n         WorkflowResult<Pair<UserPatch, Boolean>> updated = uwfAdapter.update(userPatch);\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n-        if (tasks.isEmpty()) {\n-            // SYNCOPE-459: take care of user virtual attributes ...\n-            PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n-                    updated.getResult().getKey().getKey(),\n-                    AnyTypeKind.USER,\n-                    userPatch.getVirAttrs());\n-            if (!propByResVirAttr.isEmpty()) {\n-                tasks.addAll(propagationManager.getUserUpdateTasks(updated, false, null));\n-            }\n+        // SYNCOPE-459: take care of user virtual attributes ...\n+        PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n+                updated.getResult().getKey().getKey(),\n+                AnyTypeKind.USER,\n+                userPatch.getVirAttrs());\n+        if (updated.getPropByRes() == null) {\n+            updated.setPropByRes(propByResVirAttr);\n+        } else {\n+            updated.getPropByRes().merge(propByResVirAttr);\n         }\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n+\n         PropagationReporter propagationReporter = ApplicationContextProvider.getBeanFactory().\n                 getBean(PropagationReporter.class);\n         if (!tasks.isEmpty()) {\n@@ -279,17 +281,17 @@ public Pair<Long, List<PropagationStatus>> suspend(final StatusPatch statusPatch\n     }\n \n     protected List<PropagationStatus> propagateStatus(final StatusPatch statusPatch) {\n-        Collection<String> noPropResourceNames = CollectionUtils.removeAll(\n-                userDAO.findAllResourceNames(userDAO.find(statusPatch.getKey())), statusPatch.getResources());\n-\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.addAll(ResourceOperation.UPDATE, statusPatch.getResources());\n         List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n                 AnyTypeKind.USER,\n                 statusPatch.getKey(),\n                 false,\n                 statusPatch.getType() != StatusPatchType.SUSPEND,\n+                propByRes,\n                 null,\n-                null,\n-                noPropResourceNames);\n+                null);\n+\n         PropagationReporter propReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         try {\n@@ -391,16 +393,10 @@ public void requestPasswordReset(final Long key) {\n \n     @Override\n     public void confirmPasswordReset(final Long key, final String token, final String password) {\n-        uwfAdapter.confirmPasswordReset(key, token, password);\n+        WorkflowResult<Pair<UserPatch, Boolean>> updated = uwfAdapter.confirmPasswordReset(key, token, password);\n \n-        UserPatch userPatch = new UserPatch();\n-        userPatch.setKey(key);\n-        userPatch.setPassword(new PasswordPatch.Builder().value(password).build());\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n-                new WorkflowResult<Pair<UserPatch, Boolean>>(\n-                        new ImmutablePair<UserPatch, Boolean>(userPatch, null), null, \"confirmPasswordReset\"),\n-                true, null);\n         PropagationReporter propReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         try {"},{"sha":"3420d2718c338abfae62d0608a2b588cde1703a9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -264,21 +264,24 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n \n         // password\n         if (userPatch.getPassword() != null && StringUtils.isNotBlank(userPatch.getPassword().getValue())) {\n-            setPassword(user, userPatch.getPassword().getValue(), scce);\n-            user.setChangePwdDate(new Date());\n-            propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n+            if (userPatch.getPassword().isOnSyncope()) {\n+                setPassword(user, userPatch.getPassword().getValue(), scce);\n+                user.setChangePwdDate(new Date());\n+            }\n+\n+            propByRes.addAll(ResourceOperation.UPDATE, userPatch.getPassword().getResources());\n         }\n \n         // username\n         if (userPatch.getUsername() != null && StringUtils.isNotBlank(userPatch.getUsername().getValue())) {\n-            propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n-\n             String oldUsername = user.getUsername();\n             user.setUsername(userPatch.getUsername().getValue());\n \n             if (oldUsername.equals(AuthContextUtils.getUsername())) {\n                 AuthContextUtils.updateUsername(userPatch.getUsername().getValue());\n             }\n+\n+            propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n         }\n \n         // security question / answer:"},{"sha":"0d15ffd71f1a142f96af56edc1526279786f977c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -268,13 +268,7 @@ protected List<PropagationTask> getUpdateTasks(\n         PropagationByResource localPropByRes = virAttrHandler.updateVirtual(\n                 any,\n                 vAttrs == null ? Collections.<AttrPatch>emptySet() : vAttrs);\n-\n-        if (propByRes == null || propByRes.isEmpty()) {\n-            localPropByRes.addAll(ResourceOperation.UPDATE, any.getResourceNames());\n-        } else {\n-            localPropByRes.merge(propByRes);\n-        }\n-\n+        localPropByRes.merge(propByRes);\n         if (noPropResourceNames != null) {\n             localPropByRes.removeAll(noPropResourceNames);\n         }"},{"sha":"48092eed0fd7356c5c91f4f19c57d7d64d3d5ec2","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":15,"deletions":2,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -371,15 +371,28 @@ protected void doRequestPasswordReset(final User user) {\n     }\n \n     @Override\n-    protected void doConfirmPasswordReset(final User user, final String token, final String password) {\n+    protected WorkflowResult<Pair<UserPatch, Boolean>> doConfirmPasswordReset(\n+            final User user, final String token, final String password) {\n+\n         Map<String, Object> variables = new HashMap<>(4);\n         variables.put(TOKEN, token);\n         variables.put(PASSWORD, password);\n         variables.put(USER_TO, userDataBinder.getUserTO(user, true));\n         variables.put(EVENT, \"confirmPasswordReset\");\n \n-        doExecuteTask(user, \"confirmPasswordReset\", variables);\n+        Set<String> tasks = doExecuteTask(user, \"confirmPasswordReset\", variables);\n+\n         userDAO.save(user);\n+\n+        PropagationByResource propByRes = engine.getRuntimeService().getVariable(\n+                user.getWorkflowId(), PROP_BY_RESOURCE, PropagationByResource.class);\n+        UserPatch updatedPatch = engine.getRuntimeService().getVariable(\n+                user.getWorkflowId(), USER_PATCH, UserPatch.class);\n+        Boolean propagateEnable = engine.getRuntimeService().getVariable(\n+                user.getWorkflowId(), PROPAGATE_ENABLE, Boolean.class);\n+\n+        return new WorkflowResult<Pair<UserPatch, Boolean>>(\n+                new ImmutablePair<>(updatedPatch, propagateEnable), propByRes, tasks);\n     }\n \n     @Override"},{"sha":"91b4bf4e421821b8927e2772150879ffbdee5445","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/task/PasswordReset.java","status":"modified","additions":23,"deletions":1,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -18,14 +18,26 @@\n  */\n package org.apache.syncope.core.workflow.activiti.task;\n \n+import org.apache.syncope.common.lib.patch.PasswordPatch;\n+import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.types.PropagationByResource;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.apache.syncope.core.workflow.activiti.ActivitiUserWorkflowAdapter;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class PasswordReset extends AbstractActivitiServiceTask {\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Autowired\n+    private UserDataBinder dataBinder;\n+\n     @Override\n     protected void doExecute(final String executionId) {\n         User user = engine.getRuntimeService().\n@@ -40,8 +52,18 @@ protected void doExecute(final String executionId) {\n         }\n \n         user.removeToken();\n-        user.setPassword(password, user.getCipherAlgorithm());\n+\n+        UserPatch userPatch = new UserPatch();\n+        userPatch.setKey(user.getKey());\n+        userPatch.setPassword(new PasswordPatch.Builder().\n+                onSyncope(true).resources(userDAO.findAllResourceNames(user)).value(password).build());\n+\n+        PropagationByResource propByRes = dataBinder.update(user, userPatch);\n+\n+        // report updated user and propagation by resource as result\n         engine.getRuntimeService().setVariable(executionId, ActivitiUserWorkflowAdapter.USER, user);\n+        engine.getRuntimeService().setVariable(executionId, ActivitiUserWorkflowAdapter.USER_PATCH, userPatch);\n+        engine.getRuntimeService().setVariable(executionId, ActivitiUserWorkflowAdapter.PROP_BY_RESOURCE, propByRes);\n     }\n \n }"},{"sha":"44489389ff954d7a56d55ab6354ab6c316f58dd7","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/task/Update.java","status":"modified","additions":2,"deletions":19,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FUpdate.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.workflow.activiti.task;\n \n-import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n@@ -41,26 +39,11 @@ protected void doExecute(final String executionId) {\n         UserPatch userPatch = engine.getRuntimeService().\n                 getVariable(executionId, ActivitiUserWorkflowAdapter.USER_PATCH, UserPatch.class);\n \n-        // update password internally only if required\n-        UserPatch updatedPatch = SerializationUtils.clone(userPatch);\n-        PasswordPatch updatedPwd = updatedPatch.getPassword();\n-        if (updatedPatch.getPassword() != null && !updatedPatch.getPassword().isOnSyncope()) {\n-            updatedPatch.setPassword(null);\n-        }\n-        // update user\n-        PropagationByResource propByRes = dataBinder.update(user, updatedPatch);\n-        if (updatedPatch.getPassword() != null && !updatedPatch.getPassword().getResources().isEmpty()) {\n-            if (updatedPwd == null) {\n-                updatedPwd = updatedPatch.getPassword();\n-            } else {\n-                updatedPwd.getResources().addAll(updatedPatch.getPassword().getResources());\n-            }\n-        }\n-        updatedPatch.setPassword(updatedPwd);\n+        PropagationByResource propByRes = dataBinder.update(user, userPatch);\n \n         // report updated user and propagation by resource as result\n         engine.getRuntimeService().setVariable(executionId, ActivitiUserWorkflowAdapter.USER, user);\n-        engine.getRuntimeService().setVariable(executionId, ActivitiUserWorkflowAdapter.USER_PATCH, updatedPatch);\n+        engine.getRuntimeService().setVariable(executionId, ActivitiUserWorkflowAdapter.USER_PATCH, userPatch);\n         engine.getRuntimeService().setVariable(executionId, ActivitiUserWorkflowAdapter.PROP_BY_RESOURCE, propByRes);\n     }\n }"},{"sha":"91a83aa6b8327e8442791e5a5f42a00ba00d2d05","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/UserWorkflowAdapter.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowAdapter.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -123,8 +123,9 @@ WorkflowResult<Pair<Long, Boolean>> create(\n      * @param userKey user confirming password reset\n      * @param token security token\n      * @param password new password value\n+     * @return user just updated and propagations to be performed\n      */\n-    void confirmPasswordReset(Long userKey, String token, String password);\n+    WorkflowResult<Pair<UserPatch, Boolean>> confirmPasswordReset(Long userKey, String token, String password);\n \n     /**\n      * Delete an user."},{"sha":"716090f7146faf7a048d1d6605a097ae80e82c7c","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractUserWorkflowAdapter.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -134,11 +134,14 @@ public void requestPasswordReset(final Long key) {\n         doRequestPasswordReset(userDAO.authFind(key));\n     }\n \n-    protected abstract void doConfirmPasswordReset(User user, String token, String password);\n+    protected abstract WorkflowResult<Pair<UserPatch, Boolean>> doConfirmPasswordReset(\n+            User user, String token, String password);\n \n     @Override\n-    public void confirmPasswordReset(final Long key, final String token, final String password) {\n-        doConfirmPasswordReset(userDAO.authFind(key), token, password);\n+    public WorkflowResult<Pair<UserPatch, Boolean>> confirmPasswordReset(\n+            final Long key, final String token, final String password) {\n+\n+        return doConfirmPasswordReset(userDAO.authFind(key), token, password);\n     }\n \n     protected abstract void doDelete(User user);"},{"sha":"5592eefe123a72b78a21d60d930f014e9f0fdc3a","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":12,"deletions":21,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -21,7 +21,6 @@\n import java.io.OutputStream;\n import java.util.Collections;\n import java.util.List;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n@@ -107,27 +106,12 @@ protected WorkflowResult<Long> doActivate(final User user, final String token) {\n \n     @Override\n     protected WorkflowResult<Pair<UserPatch, Boolean>> doUpdate(final User user, final UserPatch userPatch) {\n-        // update password internally only if required\n-        UserPatch updatedPatch = SerializationUtils.clone(userPatch);\n-        PasswordPatch updatedPwd = updatedPatch.getPassword();\n-        if (updatedPatch.getPassword() != null && !updatedPatch.getPassword().isOnSyncope()) {\n-            updatedPatch.setPassword(null);\n-        }\n-        // update User\n-        PropagationByResource propByRes = dataBinder.update(user, updatedPatch);\n-        if (updatedPatch.getPassword() != null && !updatedPatch.getPassword().getResources().isEmpty()) {\n-            if (updatedPwd == null) {\n-                updatedPwd = updatedPatch.getPassword();\n-            } else {\n-                updatedPwd.getResources().addAll(updatedPatch.getPassword().getResources());\n-            }\n-        }\n-        updatedPatch.setPassword(updatedPwd);\n+        PropagationByResource propByRes = dataBinder.update(user, userPatch);\n \n         userDAO.save(user);\n \n         return new WorkflowResult<Pair<UserPatch, Boolean>>(\n-                new ImmutablePair<>(updatedPatch, !user.isSuspended()), propByRes, \"update\");\n+                new ImmutablePair<>(userPatch, !user.isSuspended()), propByRes, \"update\");\n     }\n \n     @Override\n@@ -155,14 +139,21 @@ protected void doRequestPasswordReset(final User user) {\n     }\n \n     @Override\n-    protected void doConfirmPasswordReset(final User user, final String token, final String password) {\n+    protected WorkflowResult<Pair<UserPatch, Boolean>> doConfirmPasswordReset(\n+            final User user, final String token, final String password) {\n+\n         if (!user.checkToken(token)) {\n             throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n         }\n \n         user.removeToken();\n-        user.setPassword(password, user.getCipherAlgorithm());\n-        userDAO.save(user);\n+\n+        UserPatch userPatch = new UserPatch();\n+        userPatch.setKey(user.getKey());\n+        userPatch.setPassword(new PasswordPatch.Builder().\n+                onSyncope(true).resources(userDAO.findAllResourceNames(user)).value(password).build());\n+\n+        return doUpdate(user, userPatch);\n     }\n \n     @Override"},{"sha":"158cc09e398f7d5b0095b399aba33740597ac7b8","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectUpdateProcessor.java","status":"modified","additions":11,"deletions":18,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.provisioning.camel.processor;\n \n-import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import org.apache.camel.Exchange;\n@@ -61,6 +60,17 @@ public void process(final Exchange exchange) {\n         AnyObjectPatch anyObjectPatch = exchange.getProperty(\"anyPatch\", AnyObjectPatch.class);\n         Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n \n+        // SYNCOPE-459: take care of user virtual attributes ...\n+        PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n+                updated.getResult(),\n+                AnyTypeKind.ANY_OBJECT,\n+                anyObjectPatch.getVirAttrs());\n+        if (updated.getPropByRes() == null) {\n+            updated.setPropByRes(propByResVirAttr);\n+        } else {\n+            updated.getPropByRes().merge(propByResVirAttr);\n+        }\n+\n         List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n                 AnyTypeKind.ANY_OBJECT,\n                 updated.getResult(),\n@@ -69,23 +79,6 @@ public void process(final Exchange exchange) {\n                 updated.getPropByRes(),\n                 anyObjectPatch.getVirAttrs(),\n                 excludedResources);\n-        if (tasks.isEmpty()) {\n-            // SYNCOPE-459: take care of user virtual attributes ...\n-            PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n-                    updated.getResult(),\n-                    AnyTypeKind.ANY_OBJECT,\n-                    anyObjectPatch.getVirAttrs());\n-            tasks.addAll(!propByResVirAttr.isEmpty()\n-                    ? propagationManager.getUpdateTasks(\n-                            AnyTypeKind.ANY_OBJECT,\n-                            updated.getResult(),\n-                            false,\n-                            null,\n-                            updated.getPropByRes(),\n-                            anyObjectPatch.getVirAttrs(),\n-                            null)\n-                    : Collections.<PropagationTask>emptyList());\n-        }\n \n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);"},{"sha":"22868bff7edd5dc48bf1054c2b78c556df32aab0","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupUpdateProcessor.java","status":"modified","additions":11,"deletions":18,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.provisioning.camel.processor;\n \n-import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import org.apache.camel.Exchange;\n@@ -61,6 +60,17 @@ public void process(final Exchange exchange) {\n         GroupPatch groupPatch = exchange.getProperty(\"anyPatch\", GroupPatch.class);\n         Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n \n+        // SYNCOPE-459: take care of user virtual attributes ...\n+        PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n+                updated.getResult(),\n+                AnyTypeKind.GROUP,\n+                groupPatch.getVirAttrs());\n+        if (updated.getPropByRes() == null) {\n+            updated.setPropByRes(propByResVirAttr);\n+        } else {\n+            updated.getPropByRes().merge(propByResVirAttr);\n+        }\n+\n         List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n                 AnyTypeKind.GROUP,\n                 updated.getResult(),\n@@ -69,23 +79,6 @@ public void process(final Exchange exchange) {\n                 updated.getPropByRes(),\n                 groupPatch.getVirAttrs(),\n                 excludedResources);\n-        if (tasks.isEmpty()) {\n-            // SYNCOPE-459: take care of user virtual attributes ...\n-            PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n-                    updated.getResult(),\n-                    AnyTypeKind.GROUP,\n-                    groupPatch.getVirAttrs());\n-            tasks.addAll(!propByResVirAttr.isEmpty()\n-                    ? propagationManager.getUpdateTasks(\n-                            AnyTypeKind.GROUP,\n-                            updated.getResult(),\n-                            false,\n-                            null,\n-                            updated.getPropByRes(),\n-                            groupPatch.getVirAttrs(),\n-                            excludedResources)\n-                    : Collections.<PropagationTask>emptyList());\n-        }\n \n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);"},{"sha":"8a1960969d3ac127a17fbbd3ec5daab56d063448","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserConfirmPwdResetProcessor.java","status":"modified","additions":3,"deletions":11,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserConfirmPwdResetProcessor.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -21,9 +21,7 @@\n import java.util.List;\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n@@ -50,17 +48,11 @@ public class UserConfirmPwdResetProcessor implements Processor {\n \n     @Override\n     public void process(final Exchange exchange) {\n-        Long key = exchange.getProperty(\"userKey\", Long.class);\n+        @SuppressWarnings(\"unchecked\")\n+        WorkflowResult<Pair<UserPatch, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();\n \n-        UserPatch userPatch = new UserPatch();\n-        userPatch.setKey(key);\n-        userPatch.setPassword(new PasswordPatch.Builder().\n-                value(exchange.getProperty(\"password\", String.class)).build());\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n-                new WorkflowResult<Pair<UserPatch, Boolean>>(\n-                        new ImmutablePair<UserPatch, Boolean>(userPatch, null), null, \"confirmPasswordReset\"),\n-                true, null);\n         PropagationReporter propReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         try {"},{"sha":"068f003c55148ef3a34cb793f1a93b29aed208aa","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserStatusPropagationProcessor.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.core.provisioning.camel.processor;\n \n-import java.util.Collection;\n import java.util.List;\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n-import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.PropagationByResource;\n+import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.StatusPatchType;\n import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n@@ -59,20 +59,19 @@ public class UserStatusPropagationProcessor implements Processor {\n     public void process(final Exchange exchange) {\n         WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n \n-        Long key = exchange.getProperty(\"userKey\", Long.class);\n         StatusPatch statusPatch = exchange.getProperty(\"statusPatch\", StatusPatch.class);\n \n-        Collection<String> noPropResourceNames = CollectionUtils.removeAll(\n-                userDAO.findAllResourceNames(userDAO.find(key)), statusPatch.getResources());\n-\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.addAll(ResourceOperation.UPDATE, statusPatch.getResources());\n         List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n                 AnyTypeKind.USER,\n                 statusPatch.getKey(),\n                 false,\n                 statusPatch.getType() != StatusPatchType.SUSPEND,\n+                propByRes,\n                 null,\n-                null,\n-                noPropResourceNames);\n+                null);\n+\n         PropagationReporter propReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         try {"},{"sha":"bd0df76ac069c91c5a7966bed0a155a15dfd9926","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserUpdateProcessor.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -59,18 +59,19 @@ public void process(final Exchange exchange) {\n         WorkflowResult<Pair<UserPatch, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();\n         UserPatch userPatch = exchange.getProperty(\"actual\", UserPatch.class);\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n-        if (tasks.isEmpty()) {\n-            // SYNCOPE-459: take care of user virtual attributes ...\n-            PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n-                    updated.getResult().getKey().getKey(),\n-                    AnyTypeKind.USER,\n-                    userPatch.getVirAttrs());\n-            if (!propByResVirAttr.isEmpty()) {\n-                tasks.addAll(propagationManager.getUserUpdateTasks(updated, false, null));\n-            }\n+        // SYNCOPE-459: take care of user virtual attributes ...\n+        PropagationByResource propByResVirAttr = virtAttrHandler.updateVirtual(\n+                updated.getResult().getKey().getKey(),\n+                AnyTypeKind.USER,\n+                userPatch.getVirAttrs());\n+        if (updated.getPropByRes() == null) {\n+            updated.setPropByRes(propByResVirAttr);\n+        } else {\n+            updated.getPropByRes().merge(propByResVirAttr);\n         }\n \n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n+\n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         if (!tasks.isEmpty()) {"},{"sha":"7de863edf2edc7bc8f89badab2cb702a859d903d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":33,"deletions":1,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -704,7 +704,7 @@ public void updatePasswordOnly() {\n \n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(userTO.getKey());\n-        userPatch.setPassword(new PasswordPatch.Builder().value(\"newPassword123\").build());\n+        userPatch.setPassword(new PasswordPatch.Builder().value(\"newPassword123\").resource(RESOURCE_NAME_WS2).build());\n \n         userTO = updateUser(userPatch);\n \n@@ -2555,4 +2555,36 @@ public void issueSYNCOPE686() {\n             configurationService.set(pwdCipherAlgo);\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE710() {\n+        // 1. create groups for indirect resource assignment\n+        GroupTO ldapGroup = GroupITCase.getBasicSampleTO(\"syncope710.ldap\");\n+        ldapGroup.getResources().add(RESOURCE_NAME_LDAP);\n+        ldapGroup = createGroup(ldapGroup);\n+\n+        GroupTO dbGroup = GroupITCase.getBasicSampleTO(\"syncope710.db\");\n+        dbGroup.getResources().add(RESOURCE_NAME_TESTDB);\n+        dbGroup = createGroup(dbGroup);\n+\n+        // 2. create user with memberships for the groups created above\n+        UserTO userTO = getUniqueSampleTO(\"syncope710@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getMemberships().add(new MembershipTO.Builder().group(ldapGroup.getKey()).build());\n+        userTO.getMemberships().add(new MembershipTO.Builder().group(dbGroup.getKey()).build());\n+\n+        userTO = createUser(userTO);\n+        assertEquals(2, userTO.getPropagationStatusTOs().size());\n+\n+        // 3. request to propagate passwod only to db\n+        UserPatch userPatch = new UserPatch();\n+        userPatch.setKey(userTO.getKey());\n+        userPatch.setPassword(new PasswordPatch.Builder().\n+                onSyncope(false).resource(RESOURCE_NAME_TESTDB).value(\"newpassword123\").build());\n+\n+        userTO = updateUser(userPatch);\n+        assertEquals(1, userTO.getPropagationStatusTOs().size());\n+        assertEquals(RESOURCE_NAME_TESTDB, userTO.getPropagationStatusTOs().get(0).getResource());\n+    }\n }"},{"sha":"1856eee293cb5967f67b2b3a7e7632e06ae6ff64","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/VirAttrITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2011671c93ac23a2397bcc8be39a1ca191ed035f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2011671c93ac23a2397bcc8be39a1ca191ed035f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java?ref=2011671c93ac23a2397bcc8be39a1ca191ed035f","patch":"@@ -284,7 +284,7 @@ public void issueSYNCOPE397() {\n             assertTrue(found);\n \n             // create a new user\n-            UserTO userTO = UserITCase.getUniqueSampleTO(\"syncope397@syncope.apache.org\");\n+            UserTO userTO = UserITCase.getUniqueSampleTO(\"397@syncope.apache.org\");\n             userTO.getAuxClasses().add(\"csv\");\n             userTO.getResources().clear();\n             userTO.getMemberships().clear();\n@@ -323,7 +323,7 @@ public void issueSYNCOPE397() {\n \n             toBeUpdated = updateUser(userPatch);\n             assertNotNull(toBeUpdated);\n-            assertEquals(\"test@testoneone.com\", toBeUpdated.getVirAttrs().iterator().next().getValues().get(0));\n+            assertTrue(toBeUpdated.getVirAttrs().iterator().next().getValues().contains(\"test@testoneone.com\"));\n             // check if propagates correctly with assertEquals on size of tasks list\n             assertEquals(2, toBeUpdated.getPropagationStatusTOs().size());\n         } finally {"}]}