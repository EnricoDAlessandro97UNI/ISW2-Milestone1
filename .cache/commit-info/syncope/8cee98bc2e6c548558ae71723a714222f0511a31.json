{"sha":"8cee98bc2e6c548558ae71723a714222f0511a31","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhjZWU5OGJjMmU2YzU0ODU1OGFlNzE3MjNhNzE0MjIyZjA1MTFhMzE=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-15T15:31:16Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-15T15:31:16Z"},"message":"[SYNCOPE-730] Replaced the Bootstrap DateTimePicker with the YUI DateTimePicker","tree":{"sha":"f884047d65abe8cbb587b8fc48e0b7837d669065","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f884047d65abe8cbb587b8fc48e0b7837d669065"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8cee98bc2e6c548558ae71723a714222f0511a31","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8cee98bc2e6c548558ae71723a714222f0511a31","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8cee98bc2e6c548558ae71723a714222f0511a31","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8cee98bc2e6c548558ae71723a714222f0511a31/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"355ffbb9c42fceb2b13767435c10346471eef2ff","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/355ffbb9c42fceb2b13767435c10346471eef2ff","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/355ffbb9c42fceb2b13767435c10346471eef2ff"}],"stats":{"total":1045,"additions":806,"deletions":239},"files":[{"sha":"3f38b5fc740724a7614f6f37aed6ab236904466c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardAttrStep.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardAttrStep.java?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -22,12 +22,14 @@\n import java.util.Date;\n import java.util.List;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.DateTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.wicket.extensions.wizard.WizardStep;\n@@ -91,8 +93,17 @@ private Panel getFieldPanel(final String id, final AttrTO attrTO, final PlainSch\n         final FieldPanel panel;\n         switch (plainSchemaTO.getType()) {\n             case Date:\n-                panel = new AjaxDateFieldPanel(\n-                        id, valueHeaderName, new Model<Date>(), plainSchemaTO.getConversionPattern());\n+                final String dataPattern = plainSchemaTO.getConversionPattern() == null\n+                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n+                        : plainSchemaTO.getConversionPattern();\n+\n+                if (dataPattern.contains(\"H\")) {\n+                    panel = new DateTimeFieldPanel(\n+                            id, valueHeaderName, new Model<Date>(), dataPattern);\n+                } else {\n+                    panel = new DateTextFieldPanel(\n+                            \"panel\", valueHeaderName, new Model<Date>(), dataPattern);\n+                }\n                 break;\n             case Boolean:\n                 panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<String>(), false);"},{"sha":"972c3f749912f64d9300b6ccb04472939d23f8c4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDetailsPanel.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -23,12 +23,14 @@\n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.DateTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n@@ -78,8 +80,15 @@ private Panel getFieldPanel(final String id, final AttrTO attrTO) {\n         final FieldPanel panel;\n         switch (schemaTO.getType()) {\n             case Date:\n-                panel = new AjaxDateFieldPanel(\n-                        id, valueHeaderName, new Model<Date>(), schemaTO.getConversionPattern());\n+                final String dataPattern = schemaTO.getConversionPattern() == null\n+                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n+                        : schemaTO.getConversionPattern();\n+\n+                if (dataPattern.contains(\"H\")) {\n+                    panel = new DateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+                } else {\n+                    panel = new DateTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+                }\n                 break;\n             case Boolean:\n                 panel = new AjaxDropDownChoicePanel<>(id, valueHeaderName, new Model<String>(), false);"},{"sha":"341e4cddab804e0719fe9ccce7cd26b43ec8f800","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/StartAtTogglePanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FStartAtTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FStartAtTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FStartAtTogglePanel.java?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n@@ -51,8 +51,9 @@ public StartAtTogglePanel(final WebMarkupContainer container) {\n \n         final Model<Date> startAtDateModel = new Model<>();\n \n-        final AjaxDateFieldPanel startAtDate = new AjaxDateFieldPanel(\n-                \"startAtDate\", \"startAtDate\", startAtDateModel, SyncopeConstants.DATE_PATTERNS[3]);\n+        final DateTimeFieldPanel startAtDate =\n+                new DateTimeFieldPanel(\n+                        \"startAtDate\", \"startAtDate\", startAtDateModel, SyncopeConstants.DATE_PATTERNS[3]);\n \n         startAtDate.setReadOnly(true).hideLabel();\n         form.add(startAtDate);"},{"sha":"0cb5118d99dc17a3e2077238ef61d4e41e76be89","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateFieldPanel.java","status":"removed","additions":0,"deletions":209,"changes":209,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/355ffbb9c42fceb2b13767435c10346471eef2ff/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/355ffbb9c42fceb2b13767435c10346471eef2ff/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java?ref=355ffbb9c42fceb2b13767435c10346471eef2ff","patch":"@@ -1,209 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.markup.html.form;\n-\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.DateTextField;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.DateTextFieldConfig;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.datetime.DatetimePicker;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.datetime.DatetimePickerConfig;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.datetime.DatetimePickerIconConfig;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.icon.FontAwesomeIconType;\n-import java.io.Serializable;\n-import java.text.DateFormat;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n-import java.util.Date;\n-import java.util.List;\n-import java.util.Locale;\n-import org.apache.commons.lang3.time.FastDateFormat;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.util.convert.IConverter;\n-import org.apache.wicket.util.convert.converter.DateConverter;\n-\n-public class AjaxDateFieldPanel extends FieldPanel<Date> {\n-\n-    private static final long serialVersionUID = -428975732068281726L;\n-\n-    private final String datePattern;\n-\n-    public AjaxDateFieldPanel(final String id, final String name, final IModel<Date> model, final String pattern) {\n-        super(id, name, model);\n-\n-        this.datePattern = pattern == null ? SyncopeConstants.DEFAULT_DATE_PATTERN : pattern;\n-\n-        if (this.datePattern.contains(\"H\")) {\n-            field = new DatetimePicker(\"date\", model, new DatetimePickerConfig().\n-                    withFormat(this.datePattern.replaceAll(\"'\", \"\")).\n-                    setShowToday(true).\n-                    useSideBySide(true).\n-                    with(new DatetimePickerIconConfig()\n-                            .useDateIcon(FontAwesomeIconType.calendar)\n-                            .useTimeIcon(FontAwesomeIconType.clock_o)\n-                            .useUpIcon(FontAwesomeIconType.arrow_up)\n-                            .useDownIcon(FontAwesomeIconType.arrow_down)\n-                    )) {\n-\n-                private static final long serialVersionUID = -6308790460702853262L;\n-\n-                // T0DO: trying to fix SYNCOPE-730\n-                // Check if SimpleDateFormat can be replaced by FastDateFormat (see usage below)\n-                @Override\n-                @SuppressWarnings(\"unchecked\")\n-                public <C> IConverter<C> getConverter(final Class<C> type) {\n-                    return (IConverter<C>) new DateConverter() {\n-\n-                        private static final long serialVersionUID = 8025900377461981157L;\n-\n-                        @Override\n-                        public DateFormat getDateFormat(final Locale locale) {\n-                            return new SimpleDateFormat(\n-                                    datePattern,\n-                                    locale == null ? SyncopeConsoleSession.get().getLocale() : locale);\n-                        }\n-                    };\n-                }\n-            };\n-        } else {\n-            field = new DateTextField(\"date\", model, new DateTextFieldConfig()\n-                    .withFormat(this.datePattern)\n-                    .highlightToday(true)\n-                    .autoClose(true)\n-                    .showTodayButton(DateTextFieldConfig.TodayButton.TRUE));\n-        }\n-\n-        add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n-        add(field);\n-    }\n-\n-    // todo: Evaluate the actual needs to keep this override.\n-    @Override\n-    public FieldPanel<Date> setNewModel(final List<Serializable> list) {\n-        final SimpleDateFormat formatter = datePattern == null\n-                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n-                : new SimpleDateFormat(datePattern, Locale.getDefault());\n-\n-        IModel<Date> model = new Model<Date>() {\n-\n-            private static final long serialVersionUID = 6799404673615637845L;\n-\n-            @Override\n-            public Date getObject() {\n-                Date date = null;\n-                final Object obj = list == null || list.isEmpty() ? null : list.get(0);\n-\n-                if (obj != null && !obj.toString().isEmpty()) {\n-                    if (obj instanceof String) {\n-                        // Parse string using datePattern\n-                        try {\n-                            date = formatter.parse(obj.toString());\n-                        } catch (ParseException e) {\n-                            LOG.error(\"While parsing date\", e);\n-                        }\n-                    } else if (obj instanceof Date) {\n-                        // Don't parse anything\n-                        date = (Date) obj;\n-                    } else {\n-                        // consider Long\n-                        date = new Date((Long) obj);\n-                    }\n-                }\n-                return date;\n-            }\n-\n-            @Override\n-            public void setObject(final Date object) {\n-                super.setObject(object);\n-            }\n-        };\n-\n-        field.setModel(model);\n-        return this;\n-    }\n-\n-    // todo: Evaluate the actual needs to keep this override.\n-    @SuppressWarnings(\"rawtypes\")\n-    @Override\n-    public FieldPanel<Date> setNewModel(final ListItem item) {\n-        final FastDateFormat formatter = datePattern == null\n-                ? FastDateFormat.getInstance(\n-                        SyncopeConstants.DEFAULT_DATE_PATTERN, SyncopeConsoleSession.get().getLocale())\n-                : FastDateFormat.getInstance(\n-                        datePattern, SyncopeConsoleSession.get().getLocale());\n-\n-        IModel<Date> model = new Model<Date>() {\n-\n-            private static final long serialVersionUID = 6799404673615637845L;\n-\n-            @Override\n-            public Date getObject() {\n-                Date date = null;\n-\n-                final Object obj = item.getModelObject();\n-\n-                if (obj != null && !obj.toString().isEmpty()) {\n-                    if (obj instanceof String) {\n-                        // Parse string using datePattern\n-                        try {\n-                            date = formatter.parse(obj.toString());\n-                        } catch (ParseException e) {\n-                            LOG.error(\"While parsing date\", e);\n-                        }\n-                    } else if (obj instanceof Date) {\n-                        // Don't parse anything\n-                        date = (Date) obj;\n-                    } else {\n-                        // consider Long\n-                        date = new Date((Long) obj);\n-                    }\n-                }\n-\n-                return date;\n-            }\n-\n-            @Override\n-            @SuppressWarnings(\"unchecked\")\n-            public void setObject(final Date object) {\n-                item.setModelObject(object != null ? formatter.format(object) : null);\n-            }\n-        };\n-\n-        field.setModel(model);\n-        return this;\n-    }\n-\n-    @Override\n-    public FieldPanel<Date> clone() {\n-        final FieldPanel<Date> panel = new AjaxDateFieldPanel(getId(), name, new Model<Date>(null), datePattern);\n-\n-        panel.setRequired(isRequired());\n-        panel.setReadOnly(isReadOnly());\n-        panel.setTitle(title);\n-\n-        if (isRequiredLabelAdded) {\n-            panel.addRequiredLabel();\n-        }\n-\n-        return panel;\n-    }\n-}"},{"sha":"2d18b4436799c0c35c7ebeeec9990c3c9e0495c2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateFieldPanel.java","status":"added","additions":132,"deletions":0,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,132 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Locale;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.springframework.util.StringUtils;\n+\n+public class DateFieldPanel extends FieldPanel<Date> {\n+\n+    private static final long serialVersionUID = -428975732068281726L;\n+\n+    protected final String name;\n+\n+    protected final String datePattern;\n+\n+    protected DateFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, name, model);\n+        this.name = name;\n+        this.datePattern = datePattern;\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> setNewModel(final List<Serializable> list) {\n+        final SimpleDateFormat formatter = datePattern == null\n+                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n+                : new SimpleDateFormat(datePattern, Locale.getDefault());\n+\n+        setNewModel(new Model<Date>() {\n+\n+            private static final long serialVersionUID = 527651414610325237L;\n+\n+            @Override\n+            public Date getObject() {\n+                Date date = null;\n+\n+                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n+                    try {\n+                        // Parse string using datePattern\n+                        date = formatter.parse(list.get(0).toString());\n+                    } catch (ParseException e) {\n+                        LOG.error(\"invalid parse exception\", e);\n+                    }\n+                }\n+\n+                return date;\n+            }\n+\n+            @Override\n+            public void setObject(final Date object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(formatter.format(object));\n+                }\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public FieldPanel<Date> setNewModel(final ListItem item) {\n+        final SimpleDateFormat formatter = datePattern == null\n+                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n+                : new SimpleDateFormat(datePattern, Locale.getDefault());\n+\n+        IModel<Date> model = new Model<Date>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public Date getObject() {\n+                Date date = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        // Parse string using datePattern\n+                        try {\n+                            date = formatter.parse(obj.toString());\n+                        } catch (ParseException e) {\n+                            LOG.error(\"While parsing date\", e);\n+                        }\n+                    } else if (obj instanceof Date) {\n+                        // Don't parse anything\n+                        date = (Date) obj;\n+                    } else {\n+                        // consider Long\n+                        date = new Date((Long) obj);\n+                    }\n+                }\n+\n+                return date;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final Date object) {\n+                item.setModelObject(object != null ? formatter.format(object) : null);\n+            }\n+        };\n+\n+        field.setModel(model);\n+        return this;\n+    }\n+}"},{"sha":"464bf554114969d3d4217d42d5302d4583c3b2a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTextFieldPanel.java","status":"added","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,112 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.Date;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.datetime.markup.html.form.DateTextField;\n+import org.apache.wicket.extensions.yui.calendar.DatePicker;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.request.Response;\n+\n+public class DateTextFieldPanel extends DateFieldPanel {\n+\n+    private static final long serialVersionUID = 1919852712185883648L;\n+\n+    public DateTextFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, name, model, datePattern);\n+\n+        field = DateTextField.forDatePattern(\"field\", model, datePattern);\n+\n+        if (!isReadOnly()) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+\n+        field.add(getDatePicker());\n+\n+        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n+    }\n+\n+    /**\n+     * Setup a DatePicker component.\n+     */\n+    private DatePicker getDatePicker() {\n+        final DatePicker picker = new DatePicker() {\n+\n+            private static final long serialVersionUID = 4166072895162221956L;\n+\n+            @Override\n+            protected boolean enableMonthYearSelection() {\n+                return true;\n+            }\n+\n+            @Override\n+            public void afterRender(final Component component) {\n+                Response response = component.getResponse();\n+                response.write(\"\\n<span class=\\\"yui-skin-sam\\\">&nbsp;<span style=\\\"\");\n+\n+                if (renderOnLoad()) {\n+                    response.write(\"display:block;\");\n+                } else {\n+                    response.write(\"display:none;\");\n+                    response.write(\"position:absolute;\");\n+                }\n+\n+                response.write(\"z-index: 99999;\\\" id=\\\"\");\n+                response.write(getEscapedComponentMarkupId());\n+                response.write(\"Dp\\\"></span>\");\n+\n+                if (renderOnLoad()) {\n+                    response.write(\"<br style=\\\"clear:left;\\\"/>\");\n+                }\n+                response.write(\"</span>\");\n+            }\n+        };\n+\n+        picker.setShowOnFieldClick(true);\n+\n+        return picker;\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> clone() {\n+        final FieldPanel<Date> panel = new DateTextFieldPanel(getId(), name, new Model<Date>(), datePattern);\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+}"},{"sha":"4e13a6b3191b1758e032afa00cd4823f7ca29efb","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"added","additions":187,"deletions":0,"changes":187,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.Calendar;\n+import java.util.Date;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.markup.html.form.validation.AbstractFormValidator;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.validation.IValidationError;\n+import org.apache.wicket.validation.ValidationError;\n+\n+public class DateTimeFieldPanel extends DateFieldPanel {\n+\n+    private static final long serialVersionUID = -428975732068281726L;\n+\n+    private Form<?> form = null;\n+\n+    public DateTimeFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n+        super(id, name, model, datePattern);\n+\n+        field = new DateTimePickerField(\"field\", model); \n+\n+        final Calendar cal = Calendar.getInstance();\n+\n+        field.get(\"hours\").add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @SuppressWarnings(\"deprecation\")\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                final Integer hours = ((DateTimeField) field).getHours();\n+                if (hours != null) {\n+                    cal.set(hours > 12 ? Calendar.HOUR_OF_DAY : Calendar.HOUR, hours);\n+                    field.setModelObject(cal.getTime());\n+                }\n+            }\n+        });\n+\n+        field.get(\"minutes\").add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @SuppressWarnings(\"deprecation\")\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                final Integer minutes = ((DateTimeField) field).getMinutes();\n+                if (minutes != null) {\n+                    cal.set(Calendar.MINUTE, minutes);\n+                    field.setModelObject(cal.getTime());\n+                }\n+            }\n+        });\n+\n+        field.get(\"date\").add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @SuppressWarnings(\"deprecation\")\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                final Date date = ((DateTimeField) field).getDate();\n+                if (date == null) {\n+                    field.setModelObject(null);\n+                } else {\n+                    cal.setTime(date);\n+                    cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm())\n+                            ? Calendar.PM\n+                            : Calendar.AM);\n+                    field.setModelObject(cal.getTime());\n+                }\n+            }\n+        });\n+\n+        field.get(\"amOrPmChoice\").add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @SuppressWarnings(\"deprecation\")\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n+                        : Calendar.AM);\n+                field.setModelObject(cal.getTime());\n+            }\n+        });\n+\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+    }\n+\n+    /**\n+     * Custom form validator for registering and handling DateTimeField components that are in it.\n+     */\n+    private class DateTimeFormValidator extends AbstractFormValidator {\n+\n+        private static final long serialVersionUID = 6842264694946633582L;\n+\n+        private FormComponent<?>[] dateTimeComponents;\n+\n+        DateTimeFormValidator(final DateTimeField dateTimeComponent) {\n+            if (dateTimeComponent == null) {\n+                throw new IllegalArgumentException(\"argument dateTimeComponent cannot be null\");\n+            }\n+\n+            dateTimeComponents = new FormComponent<?>[] { dateTimeComponent };\n+        }\n+\n+        @Override\n+        public FormComponent<?>[] getDependentFormComponents() {\n+            return dateTimeComponents;\n+        }\n+\n+        /**\n+         * Validation rule : all 3 fields (date,hours,minutes) must be not-null.\n+         *\n+         * @param form\n+         */\n+        @SuppressWarnings(\"deprecation\")\n+        @Override\n+        public void validate(final Form<?> form) {\n+            final DateTimeField dateTimeField = (DateTimeField) dateTimeComponents[0];\n+\n+            if (!(dateTimeField.getDate() != null && dateTimeField.getHours() != null\n+                    && dateTimeField.getMinutes() != null)) {\n+\n+                ValidationError ve = new ValidationError();\n+                ve.setVariables(DateTimeFormValidator.this.variablesMap());\n+                ve.addKey(resourceKey());\n+                dateTimeComponents[0].error((IValidationError) ve);\n+            }\n+        }\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    public FieldPanel<Date> setFormValidator(final Form<?> form) {\n+        if (field == null) {\n+            LOG.error(\"Error setting form validator\");\n+        } else {\n+            form.add(new DateTimeFormValidator(((DateTimeField) field)));\n+            this.form = form;\n+        }\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public FieldPanel<Date> clone() {\n+        final FieldPanel<Date> panel = new DateTimeFieldPanel(getId(), name, new Model<Date>(null), datePattern);\n+\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        if (form != null && isRequired()) {\n+            ((DateTimeFieldPanel) panel).setFormValidator(form);\n+        }\n+\n+        return panel;\n+    }\n+}"},{"sha":"d59dc0ee27c5dcd28ee906c8ac20299f1342a463","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/DateTimePickerField.java","status":"added","additions":89,"deletions":0,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.java?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.Date;\n+import java.util.Map;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.extensions.yui.calendar.DatePicker;\n+import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.request.Response;\n+import org.apache.wicket.util.string.Strings;\n+\n+public class DateTimePickerField extends DateTimeField {\n+\n+    private static final long serialVersionUID = 3733881705516982654L;\n+\n+    public DateTimePickerField(final String id) {\n+        this(id, null);\n+    }\n+\n+    public DateTimePickerField(final String id, final IModel<Date> model) {\n+        super(id, model);\n+    }\n+\n+    @Override\n+    protected DatePicker newDatePicker() {\n+        return new DatePicker() {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void configure(final Map<String, Object> widgetProperties,\n+                    final IHeaderResponse response, final Map<String, Object> initVariables) {\n+                super.configure(widgetProperties, response, initVariables);\n+            }\n+\n+            @Override\n+            public void afterRender(final Component component) {\n+                Response response = component.getResponse();\n+                response.write(\"\\n<span class=\\\"yui-skin-sam\\\">&nbsp;<span style=\\\"\");\n+\n+                if (renderOnLoad()) {\n+                    response.write(\"display:block;\");\n+                } else {\n+                    response.write(\"display:none;\");\n+                    response.write(\"position:absolute;\");\n+                }\n+\n+                response.write(\"z-index: 99999;\\\" id=\\\"\");\n+                response.write(getEscapedComponentMarkupId());\n+                response.write(\"Dp\\\"></span><i class=\\\"glyphicon glyphicon-calendar icon-top-position\\\"\");\n+                response.write(\" id=\\\"\");\n+                response.write(getIconId());\n+                response.write(\"\\\" \");\n+                response.write(\" alt=\\\"\");\n+                CharSequence alt = getIconAltText();\n+                response.write(Strings.escapeMarkup((alt != null) ? alt.toString() : \"\"));\n+                response.write(\"\\\" title=\\\"\");\n+                CharSequence title = getIconTitle();\n+                response.write(Strings.escapeMarkup((title != null) ? title.toString() : \"\"));\n+                response.write(\"\\\"/>\");\n+\n+                if (renderOnLoad()) {\n+                    response.write(\"<br style=\\\"clear:left;\\\"/>\");\n+                }\n+                response.write(\"</span>\");\n+            }\n+\n+        };\n+    }\n+}"},{"sha":"1a2f6d070f85151c0f31fb81171f9ec935ff8f07","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":17,"deletions":3,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -33,14 +33,16 @@\n import org.apache.syncope.client.console.commons.Mode;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDateFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.BinaryFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.DateTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -200,8 +202,20 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n                 panel.setRequired(required);\n                 break;\n             case Date:\n-                panel = new AjaxDateFieldPanel(\n-                        \"panel\", schemaTO.getKey(), new Model<Date>(), schemaTO.getConversionPattern());\n+                final String dataPattern = schemaTO.getConversionPattern() == null\n+                        ? SyncopeConstants.DEFAULT_DATE_PATTERN\n+                        : schemaTO.getConversionPattern();\n+\n+                if (dataPattern.contains(\"H\")) {\n+                    panel = new DateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+                } else {\n+                    panel = new DateTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<Date>(), dataPattern);\n+                }\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                \n                 break;\n             case Enum:\n                 panel = new AjaxDropDownChoicePanel<>(\"panel\", schemaTO.getKey(), new Model<String>(), false);"},{"sha":"83cf0b6b1c431bd5c60d1641e65d6300955bea85","filename":"client/console/src/main/resources/META-INF/resources/css/search.css","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fsearch.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fsearch.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Fsearch.css?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -61,6 +61,10 @@\n   width: 220px;\n }\n \n+.clause .textvalue{\n+  width: 45px;\n+}\n+\n .clause .action{\n   float: left;\n   padding: 0px 7px 0px;"},{"sha":"9785f26023e7df975a4daef74431de95713017a4","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -541,3 +541,96 @@ END - Result page\n   background-color: #dbffdb;\n   border-color: #c1e9c1;\n }\n+\n+/**\n+START - AjaxDateTimePicker\n+*/\n+.input-auto-width {\n+  width: auto !important;\n+}\n+\n+.icon-top-position {\n+  top: 5px !important;\n+}\n+\n+/**\n+END - AjaxDateTimePicker\n+*/\n+\n+/**\n+START - Search - AjaxDateTimePicker\n+*/\n+.searchBox .col-xs-12{\n+  padding-left: 0px !important;\n+  padding-right: 0px !important;\n+}\n+\n+.clause{\n+  display: block;\n+  line-height: 34px;\n+  width: 100%;\n+}\n+\n+.clause .operator{\n+  width: 65px !important;\n+}\n+\n+.clause .operator .checkbox{\n+  margin: 0px !important;\n+}\n+\n+.clause .field {\n+  line-height: 34px;\n+  float: left;\n+  padding: 0 3px 0px 0px;\n+  display: inline-block !important;\n+}\n+\n+.clause .type{\n+  width: 120px !important;\n+}\n+\n+.clause .property{\n+  width: 190px;\n+}\n+\n+.clause .comparator{\n+  width: 100px;\n+}\n+\n+.clause .comparator button{\n+  width: 100px !important;\n+}\n+\n+.clause .value{\n+  width: 220px;\n+}\n+\n+.clause .date{\n+  width: 160px;\n+}\n+\n+.clause .hours{\n+  width: 45px;\n+}\n+\n+.clause .separator{\n+  width: 20px;\n+  padding-left: 12px;\n+}\n+\n+.clause .action{\n+  float: left;\n+  padding: 0px 7px 0px;\n+}\n+\n+.searchBox .input-group-addon:last-child{\n+  border: 1px solid #ccc !important;\n+}\n+\n+.searchBox .input-group{\n+  margin-top: 1px;\n+}\n+/**\n+END - Search - AjaxDateTimePicker\n+*/"},{"sha":"190a28f378fd94741550f06605b4d09196859224","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.html","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.html?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -19,9 +19,6 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <head><title></title></head>\n   <body>\n-    <wicket:head>\n-      <link href=\"css/search.css\" rel=\"stylesheet\" type=\"text/css\" />\n-    </wicket:head>\n     <wicket:panel>\n       <span class=\"searchBox\">\n         <div class=\"col-xs-12\">"},{"sha":"5cde8f1168fe25c7c5172d0797bcdf9f40d45668","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTextFieldPanel.html","status":"renamed","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.html?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -17,18 +17,17 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head>\n-    <title>Ajaxt text field panel</title>\n-  </head>\n-  <body>\n-    <wicket:extend>\n-      <wicket:enclosure child=\"field-label\">\n-        <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n-        <span wicket:id=\"externalAction\"/>\n-      </wicket:enclosure>\n-      <fieldset class=\"input-group\">\n-        <input class=\"form-control\" type=\"datetime\" wicket:id=\"date\"/>\n-      </fieldset>\n-    </wicket:extend>\n-  </body>\n-</html>\n+  <wicket:extend>\n+    <wicket:enclosure child=\"field-label\">\n+      <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+      <span wicket:id=\"externalAction\"/>\n+    </wicket:enclosure>\n+    <span class=\"clause\">\n+      <span style=\"white-space: nowrap;\">\n+        <span>\n+          <input class=\"form-control datepicker\" type=\"text\" wicket:id=\"field\" size=\"12\" style=\"float: left\"/>\n+        </span>\n+      </span>\n+    </span>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateFieldPanel.html"},{"sha":"1b11685af357d327d13f0356a1a3d2e1bcc9599e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel.html","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.html?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,36 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style type=\"text/css\">\n+      div.input-group-addon:last-child {\n+        border: 1px solid #ccc !important;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:extend>\n+    <wicket:enclosure child=\"field-label\">\n+      <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+      <span wicket:id=\"externalAction\"/>\n+    </wicket:enclosure>\n+    <div class=\"input-group\">\n+      <span wicket:id=\"field\"/>\n+    </div>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"9a39f4cb9f27939fa2cbee863f766fc7b9f87675","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.properties?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+field.DateTimeFieldPanel$DateTimeFormValidator=Field '${label0}' must be fully valued"},{"sha":"c52483466934a5d808dc2cd04457fa757dab571b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_it.properties?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+field.DateTimeFieldPanel$DateTimeFormValidator=Il campo '${label0}' dev'essere completamente valorizzato"},{"sha":"95be43734c0655d1cc5eee5068e8ff3cb73a3873","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimeFieldPanel_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel_pt_BR.properties?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+field.DateTimeFieldPanel$DateTimeFormValidator=Campo'${label0}' precisa ser preenchido "},{"sha":"fc9fbde22547719618a0f991f9904ff508ac6ee5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/DateTimePickerField.html","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8cee98bc2e6c548558ae71723a714222f0511a31/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimePickerField.html?ref=8cee98bc2e6c548558ae71723a714222f0511a31","patch":"@@ -0,0 +1,41 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span class=\"clause\">\n+      <span style=\"white-space: nowrap;\">\n+        <span class=\"field date\">\n+          <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"date\" size=\"12\" style=\"float: left\"/>\n+        </span>\n+        <span class=\"field hours\">\n+          <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"hours\" size=\"2\" maxlength=\"2\"/>\n+        </span>\n+        <span class=\"field separator\">\n+          <span wicket:id=\"hoursSeparator\">:</span>\n+        </span>\n+        <span class=\"field hours\">\n+          <input class=\"form-control input-auto-width\" type=\"text\" wicket:id=\"minutes\" size=\"2\" maxlength=\"2\"/>\n+        </span>\n+        <span class=\"field hours\">\n+          <select class=\"form-control input-auto-width\" wicket:id=\"amOrPmChoice\"></select>\n+        </span>\n+      </span>\n+    </span>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"}]}