{"sha":"7198828c487e797583c2ff025b9aa126b01ada82","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcxOTg4MjhjNDg3ZTc5NzU4M2MyZmYwMjViOWFhMTI2YjAxYWRhODI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2020-12-31T11:14:20Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-12-31T11:14:20Z"},"message":"Upgrade Jackson to 2.12 (#230)","tree":{"sha":"042022a27ba64a6607a9a127b7d6d7bafe89cc08","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/042022a27ba64a6607a9a127b7d6d7bafe89cc08"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7198828c487e797583c2ff025b9aa126b01ada82","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf7bKMCRBK7hj4Ov3rIwAAdHIIAChE65fmG0vQbZI8/03GUKXj\nKJG5UYrV0NOj80Jz9FLJaxoDqgpd/LzALMz8VIt09VJvwl/ENjOMiLy4htH4EVjl\neriJ6e28TnaICxUq9k0/la2TJRg0r5e84zpAWGSm/0HhM3BAWT6ZqILnp4LYR/mT\nQk2EGQBz7sxbQ+oIQZ/o1Qx/ad2QOOvTu/eRNBlTsh1xlj2sWEU3zMQpIzFW+gws\nFMZbVdsyrk5CEiJlbIQDYw1BrHZYKxaWzJ/OpDjA6Txj6hGRGymhipN4+0MEhsYW\nwonPLbgpj5OTsqwKexnEzfApK1De3k6l9Vi63Q/OaJIT2YzOPk8e9TCvLmIFF4Q=\n=4Ebo\n-----END PGP SIGNATURE-----\n","payload":"tree 042022a27ba64a6607a9a127b7d6d7bafe89cc08\nparent 4b0ac3f15da028906ccc8899dac3b857dcf5c67b\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1609413260 +0100\ncommitter GitHub <noreply@github.com> 1609413260 +0100\n\nUpgrade Jackson to 2.12 (#230)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7198828c487e797583c2ff025b9aa126b01ada82","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7198828c487e797583c2ff025b9aa126b01ada82","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7198828c487e797583c2ff025b9aa126b01ada82/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"4b0ac3f15da028906ccc8899dac3b857dcf5c67b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4b0ac3f15da028906ccc8899dac3b857dcf5c67b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4b0ac3f15da028906ccc8899dac3b857dcf5c67b"}],"stats":{"total":115,"additions":62,"deletions":53},"files":[{"sha":"b835f5ed08c7cfce23b688d7bf0161f408e2c425","filename":"common/am/lib/src/test/java/org/apache/syncope/common/lib/XMLTest.java","status":"modified","additions":2,"deletions":13,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -18,24 +18,13 @@\n  */\n package org.apache.syncope.common.lib;\n \n-import com.fasterxml.jackson.annotation.JsonSetter;\n-import com.fasterxml.jackson.annotation.Nulls;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import org.apache.syncope.common.lib.jackson.SyncopeXmlMapper;\n \n public class XMLTest extends SerializationTest {\n \n-    private static final XmlMapper XML_MAPPER;\n-\n-    static {\n-        XML_MAPPER = new XmlMapper();\n-        XML_MAPPER.configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-        XML_MAPPER.configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-        XML_MAPPER.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-    }\n+    private static final XmlMapper XML_MAPPER = new SyncopeXmlMapper();\n \n     @Override\n     protected ObjectMapper objectMapper() {"},{"sha":"a8cce7ecd98b15234ef6831fe07f8c435094464e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jackson/SyncopeObjectMapper.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeObjectMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeObjectMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeObjectMapper.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -22,8 +22,6 @@\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.SerializationFeature;\n-import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n-import com.fasterxml.jackson.module.afterburner.AfterburnerModule;\n import java.io.File;\n import java.io.IOException;\n import java.io.OutputStream;\n@@ -41,9 +39,8 @@ public class SyncopeObjectMapper extends ObjectMapper {\n     public SyncopeObjectMapper() {\n         super();\n \n-        registerModule(new AfterburnerModule());\n+        findAndRegisterModules();\n \n-        registerModule(new JavaTimeModule());\n         configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n     }\n "},{"sha":"71836076514ea57cc97d1afbfd1e0798f8cefa61","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jackson/SyncopeXmlMapper.java","status":"modified","additions":20,"deletions":5,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeXmlMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeXmlMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeXmlMapper.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -18,30 +18,45 @@\n  */\n package org.apache.syncope.common.lib.jackson;\n \n+import com.ctc.wstx.stax.WstxOutputFactory;\n import com.fasterxml.jackson.annotation.JsonSetter;\n import com.fasterxml.jackson.annotation.Nulls;\n import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.dataformat.xml.XmlFactory;\n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n-import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n-import com.fasterxml.jackson.module.afterburner.AfterburnerModule;\n+import com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser;\n+import com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLOutputFactory;\n \n public class SyncopeXmlMapper extends XmlMapper {\n \n     private static final long serialVersionUID = 1022020055828974308L;\n \n     public SyncopeXmlMapper() {\n-        super();\n+        super(new XmlFactory() {\n \n-        registerModule(new AfterburnerModule());\n+            private static final long serialVersionUID = 1022020055828974306L;\n+\n+            @Override\n+            protected void _initFactories(final XMLInputFactory xmlIn, final XMLOutputFactory xmlOut) {\n+                super._initFactories(xmlIn, xmlOut);\n+                xmlOut.setProperty(WstxOutputFactory.P_AUTOMATIC_EMPTY_ELEMENTS, Boolean.FALSE);\n+            }\n+        });\n+\n+        findAndRegisterModules();\n \n-        registerModule(new JavaTimeModule());\n         configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n \n         configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n         configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n         configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n+\n+        enable(ToXmlGenerator.Feature.WRITE_XML_DECLARATION);\n+        enable(FromXmlParser.Feature.EMPTY_ELEMENT_AS_NULL);\n     }\n }"},{"sha":"9678c460b74bd89047cbfbe40a6f4d571e99f3ad","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/jackson/SyncopeYAMLMapper.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeYAMLMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeYAMLMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjackson%2FSyncopeYAMLMapper.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -20,8 +20,6 @@\n \n import com.fasterxml.jackson.databind.SerializationFeature;\n import com.fasterxml.jackson.dataformat.yaml.YAMLMapper;\n-import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n-import com.fasterxml.jackson.module.afterburner.AfterburnerModule;\n \n public class SyncopeYAMLMapper extends YAMLMapper {\n \n@@ -30,9 +28,8 @@ public class SyncopeYAMLMapper extends YAMLMapper {\n     public SyncopeYAMLMapper() {\n         super();\n \n-        registerModule(new AfterburnerModule());\n+        findAndRegisterModules();\n \n-        registerModule(new JavaTimeModule());\n         configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n     }\n }"},{"sha":"abc014ef820e3bfaec5876e68686a04e38a809fa","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/AnyObjectCR.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectCR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectCR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FAnyObjectCR.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -146,6 +146,7 @@ public List<MembershipTO> getMemberships() {\n         return memberships;\n     }\n \n+    @JsonIgnore\n     @Override\n     public List<MembershipTO> getDynMemberships() {\n         return List.of();"},{"sha":"666cf748ef277abaf90872fa2cee2a75fc872803","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/UserCR.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserCR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserCR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FUserCR.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -246,6 +246,7 @@ public List<MembershipTO> getMemberships() {\n         return memberships;\n     }\n \n+    @JsonIgnore\n     @Override\n     public List<MembershipTO> getDynMemberships() {\n         return List.of();"},{"sha":"1d24582216df59f3d13e253480561e0565cbbcc5","filename":"common/idrepo/lib/src/test/java/org/apache/syncope/common/lib/SerializationTest.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -25,7 +25,11 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n import java.io.StringWriter;\n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.UUID;\n+import org.apache.syncope.common.lib.log.LoggerTO;\n+import org.apache.syncope.common.lib.request.AnyObjectCR;\n import org.apache.syncope.common.lib.request.GroupUR;\n import org.apache.syncope.common.lib.request.PasswordPatch;\n import org.apache.syncope.common.lib.request.StringPatchItem;\n@@ -43,6 +47,33 @@ public abstract class SerializationTest {\n \n     protected abstract ObjectMapper objectMapper();\n \n+    @Test\n+    public void emptyListAsRoot() throws IOException {\n+        List<LoggerTO> original = new ArrayList<>();\n+\n+        StringWriter writer = new StringWriter();\n+        objectMapper().writeValue(writer, original);\n+\n+        List<LoggerTO> actual = objectMapper().readValue(writer.toString(),\n+                new TypeReference<List<LoggerTO>>() {\n+        });\n+        assertEquals(original, actual);\n+    }\n+\n+    @Test\n+    public void nonEmptyListAsMember() throws IOException {\n+        AnyObjectCR original = new AnyObjectCR();\n+        original.setName(\"newPrinter\");\n+        original.setType(\"PRINTER\");\n+        original.getPlainAttrs().add(new Attr.Builder(\"location\").value(\"new\").build());\n+\n+        StringWriter writer = new StringWriter();\n+        objectMapper().writeValue(writer, original);\n+\n+        AnyObjectCR actual = objectMapper().readValue(writer.toString(), AnyObjectCR.class);\n+        assertEquals(original, actual);\n+    }\n+\n     @Test\n     public void map() throws IOException {\n         GroupUR req = new GroupUR();"},{"sha":"b835f5ed08c7cfce23b688d7bf0161f408e2c425","filename":"common/idrepo/lib/src/test/java/org/apache/syncope/common/lib/XMLTest.java","status":"modified","additions":2,"deletions":13,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FXMLTest.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -18,24 +18,13 @@\n  */\n package org.apache.syncope.common.lib;\n \n-import com.fasterxml.jackson.annotation.JsonSetter;\n-import com.fasterxml.jackson.annotation.Nulls;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import org.apache.syncope.common.lib.jackson.SyncopeXmlMapper;\n \n public class XMLTest extends SerializationTest {\n \n-    private static final XmlMapper XML_MAPPER;\n-\n-    static {\n-        XML_MAPPER = new XmlMapper();\n-        XML_MAPPER.configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-        XML_MAPPER.configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-        XML_MAPPER.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-    }\n+    private static final XmlMapper XML_MAPPER = new SyncopeXmlMapper();\n \n     @Override\n     protected ObjectMapper objectMapper() {"},{"sha":"2a47b305e49e0f9715caee7327f07c559de24cec","filename":"ext/flowable/common-lib/src/test/java/org/apache/syncope/common/lib/to/XMLTest.java","status":"modified","additions":2,"deletions":13,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FXMLTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FXMLTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FXMLTest.java?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -18,24 +18,13 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonSetter;\n-import com.fasterxml.jackson.annotation.Nulls;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import org.apache.syncope.common.lib.jackson.SyncopeXmlMapper;\n \n public class XMLTest extends SerializationTest {\n \n-    private static final XmlMapper XML_MAPPER;\n-\n-    static {\n-        XML_MAPPER = new XmlMapper();\n-        XML_MAPPER.configOverride(List.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-        XML_MAPPER.configOverride(Set.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-        XML_MAPPER.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY));\n-    }\n+    private static final XmlMapper XML_MAPPER = new SyncopeXmlMapper();\n \n     @Override\n     protected ObjectMapper objectMapper() {"},{"sha":"7547a061bf5b03df09b92992c9ba87aae9c3c874","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7198828c487e797583c2ff025b9aa126b01ada82/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7198828c487e797583c2ff025b9aa126b01ada82/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=7198828c487e797583c2ff025b9aa126b01ada82","patch":"@@ -407,7 +407,7 @@ under the License.\n     <cxf.version>3.4.2</cxf.version>\n     <bouncycastle.version>1.68</bouncycastle.version>\n \n-    <jackson.version>2.11.4</jackson.version>\n+    <jackson.version>2.12.1-SNAPSHOT</jackson.version>\n \n     <spring.version>5.2.12.RELEASE</spring.version>\n     <spring-security.version>5.4.2</spring-security.version>"}]}