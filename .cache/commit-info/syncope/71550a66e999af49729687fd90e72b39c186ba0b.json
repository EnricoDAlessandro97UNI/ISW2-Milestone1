{"sha":"71550a66e999af49729687fd90e72b39c186ba0b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcxNTUwYTY2ZTk5OWFmNDk3Mjk2ODdmZDkwZTcyYjM5YzE4NmJhMGI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-04-19T14:00:15Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-04-19T14:00:15Z"},"message":"[SYNCOPE-363] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1469831 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"185e9e09c84e781a422dcfbbbd5f3011e9706a5d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/185e9e09c84e781a422dcfbbbd5f3011e9706a5d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/71550a66e999af49729687fd90e72b39c186ba0b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/71550a66e999af49729687fd90e72b39c186ba0b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/71550a66e999af49729687fd90e72b39c186ba0b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/71550a66e999af49729687fd90e72b39c186ba0b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"99088a6c1a6d60dad108a1e7636c2f3840dd7bb5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/99088a6c1a6d60dad108a1e7636c2f3840dd7bb5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/99088a6c1a6d60dad108a1e7636c2f3840dd7bb5"},{"sha":"f4b36e580aa875b8384f6ad10abf53813f6be8fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f4b36e580aa875b8384f6ad10abf53813f6be8fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f4b36e580aa875b8384f6ad10abf53813f6be8fb"}],"stats":{"total":22,"additions":15,"deletions":7},"files":[{"sha":"d3e0e1ff157e405e58bea010005505192f55b552","filename":"build-tools/src/main/java/org/apache/syncope/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":15,"deletions":7,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/71550a66e999af49729687fd90e72b39c186ba0b/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/71550a66e999af49729687fd90e72b39c186ba0b/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java?ref=71550a66e999af49729687fd90e72b39c186ba0b","patch":"@@ -153,9 +153,12 @@ private void addIndex(final Partition partition, final String... attrs) {\n      * partitions.\n      *\n      * @param workDir the directory to be used for storing the data\n+     * @param loadDefaultContent if default content should be loaded\n      * @throws Exception if there were some problems while initializing\n      */\n-    private void initDirectoryService(final ServletContext servletContext, final File workDir) throws Exception {\n+    private void initDirectoryService(final ServletContext servletContext, final File workDir,\n+            final boolean loadDefaultContent) throws Exception {\n+\n         // Initialize the LDAP service\n         service = new DefaultDirectoryService();\n         service.setWorkingDirectory(workDir);\n@@ -180,10 +183,12 @@ private void initDirectoryService(final ServletContext servletContext, final Fil\n         service.startup();\n \n         // Finally, load content LDIF\n-        final LdifURLLoader contentLoader = new LdifURLLoader(service.getAdminSession(),\n-                servletContext.getResource(\"/WEB-INF/classes/content.ldif\"));\n-        final int numEntries = contentLoader.execute();\n-        LOG.info(\"Successfully created {} entries\", numEntries);\n+        if (loadDefaultContent) {\n+            final LdifURLLoader contentLoader = new LdifURLLoader(service.getAdminSession(),\n+                    servletContext.getResource(\"/WEB-INF/classes/content.ldif\"));\n+            final int numEntries = contentLoader.execute();\n+            LOG.info(\"Successfully created {} entries\", numEntries);\n+        }\n     }\n \n     /**\n@@ -195,13 +200,16 @@ private void initDirectoryService(final ServletContext servletContext, final Fil\n     public void contextInitialized(final ServletContextEvent sce) {\n         File workDir = (File) sce.getServletContext().getAttribute(\"javax.servlet.context.tempdir\");\n         workDir = new File(workDir, \"server-work\");\n-        if (!workDir.mkdirs()) {\n+        \n+        final boolean loadDefaultContent = !workDir.exists();\n+        \n+        if (loadDefaultContent && !workDir.mkdirs()) {\n             throw new RuntimeException(\"Could not create \" + workDir.getAbsolutePath());\n         }\n \n         Entry result;\n         try {\n-            initDirectoryService(sce.getServletContext(), workDir);\n+            initDirectoryService(sce.getServletContext(), workDir, loadDefaultContent);\n \n             server = new LdapServer();\n             server.setTransports("}]}