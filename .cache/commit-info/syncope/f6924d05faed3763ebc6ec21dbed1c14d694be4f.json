{"sha":"f6924d05faed3763ebc6ec21dbed1c14d694be4f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY2OTI0ZDA1ZmFlZDM3NjNlYmM2ZWMyMWRiZWQxYzE0ZDY5NGJlNGY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-02T15:53:00Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-02T15:53:00Z"},"message":"Fixing sched task update","tree":{"sha":"a633c8782414bec4a29a792ad71b9158871b65fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a633c8782414bec4a29a792ad71b9158871b65fb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f6924d05faed3763ebc6ec21dbed1c14d694be4f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f6924d05faed3763ebc6ec21dbed1c14d694be4f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f6924d05faed3763ebc6ec21dbed1c14d694be4f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f6924d05faed3763ebc6ec21dbed1c14d694be4f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5c53413463eb19c2f7fe128d58bcaebf5de1d57f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5c53413463eb19c2f7fe128d58bcaebf5de1d57f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5c53413463eb19c2f7fe128d58bcaebf5de1d57f"}],"stats":{"total":45,"additions":16,"deletions":29},"files":[{"sha":"5101a98da4d26e56b79c59447e397944eed07066","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6924d05faed3763ebc6ec21dbed1c14d694be4f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6924d05faed3763ebc6ec21dbed1c14d694be4f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=f6924d05faed3763ebc6ec21dbed1c14d694be4f","patch":"@@ -31,7 +31,6 @@\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -119,12 +118,7 @@ public <T extends SchedTaskTO> T createSchedTask(final T taskTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_UPDATE + \"')\")\n-    public SyncTaskTO updateSync(final SyncTaskTO taskTO) {\n-        return updateSched(taskTO);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_UPDATE + \"')\")\n-    public <T extends SchedTaskTO> T updateSched(final SchedTaskTO taskTO) {\n+    public <T extends SchedTaskTO> T updateSchedTask(final SchedTaskTO taskTO) {\n         SchedTask task = taskDAO.find(taskTO.getKey());\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + taskTO.getKey());"},{"sha":"b07fffbd32900e83472e011bf6ea29af23592b43","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":11,"deletions":17,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6924d05faed3763ebc6ec21dbed1c14d694be4f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6924d05faed3763ebc6ec21dbed1c14d694be4f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=f6924d05faed3763ebc6ec21dbed1c14d694be4f","patch":"@@ -23,6 +23,7 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.core.provisioning.api.data.TaskDataBinder;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractProvisioningTaskTO;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -193,8 +194,7 @@ public boolean evaluate(final AnyTemplate anyTemplate) {\n     public SchedTask createSchedTask(final SchedTaskTO taskTO, final TaskUtils taskUtils) {\n         Class<? extends AbstractTaskTO> taskTOClass = taskUtils.taskTOClass();\n         if (taskTOClass == null || !taskTOClass.equals(taskTO.getClass())) {\n-            throw new IllegalArgumentException(\n-                    String.format(\"taskUtils is type %s but task is not: %s\", taskTOClass, taskTO.getClass()));\n+            throw new IllegalArgumentException(String.format(\"Expected %s, found %s\", taskTOClass, taskTO.getClass()));\n         }\n \n         SchedTask task = taskUtils.newTask();\n@@ -223,26 +223,20 @@ public SchedTask createSchedTask(final SchedTaskTO taskTO, final TaskUtils taskU\n \n     @Override\n     public void updateSchedTask(final SchedTask task, final SchedTaskTO taskTO, final TaskUtils taskUtils) {\n-        Class<? extends Task> taskClass = taskUtils.taskClass();\n         Class<? extends AbstractTaskTO> taskTOClass = taskUtils.taskTOClass();\n-\n-        if (taskClass == null || !taskClass.isAssignableFrom(task.getClass())) {\n-            throw new IllegalArgumentException(\n-                    String.format(\"taskUtils is type %s but task is not: %s\", taskClass, task.getClass()));\n-        }\n-\n         if (taskTOClass == null || !taskTOClass.equals(taskTO.getClass())) {\n-            throw new IllegalArgumentException(\n-                    String.format(\"taskUtils is type %s but task is not: %s\", taskTOClass, taskTO.getClass()));\n+            throw new IllegalArgumentException(String.format(\"Expected %s, found %s\", taskTOClass, taskTO.getClass()));\n         }\n \n-        task.setCronExpression(taskTO.getCronExpression());\n-        if (StringUtils.isNotBlank(taskTO.getName())) {\n-            task.setName(taskTO.getName());\n-        }\n-        if (StringUtils.isNotBlank(taskTO.getDescription())) {\n-            task.setDescription(taskTO.getDescription());\n+        if (StringUtils.isBlank(taskTO.getName())) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n+            sce.getElements().add(\"name\");\n+            throw sce;\n         }\n+        task.setName(taskTO.getName());\n+        task.setDescription(taskTO.getDescription());\n+        task.setCronExpression(taskTO.getCronExpression());\n+        task.setActive(taskTO.isActive());\n \n         if (task instanceof ProvisioningTask) {\n             fill((ProvisioningTask) task, (AbstractProvisioningTaskTO) taskTO);"},{"sha":"495fff88222006240d9002d27db02be59f559aae","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6924d05faed3763ebc6ec21dbed1c14d694be4f/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6924d05faed3763ebc6ec21dbed1c14d694be4f/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=f6924d05faed3763ebc6ec21dbed1c14d694be4f","patch":"@@ -102,10 +102,8 @@ public <T extends AbstractTaskTO> T read(final Long key, final boolean details)\n \n     @Override\n     public void update(final AbstractTaskTO taskTO) {\n-        if (taskTO instanceof SyncTaskTO) {\n-            logic.updateSync((SyncTaskTO) taskTO);\n-        } else if (taskTO instanceof SchedTaskTO) {\n-            logic.updateSched((SchedTaskTO) taskTO);\n+        if (taskTO instanceof SchedTaskTO) {\n+            logic.updateSchedTask((SchedTaskTO) taskTO);\n         } else {\n             throw new BadRequestException();\n         }"},{"sha":"903093a6402e597f1f8080e56794ff5a35ee3491","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SchedTaskITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f6924d05faed3763ebc6ec21dbed1c14d694be4f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f6924d05faed3763ebc6ec21dbed1c14d694be4f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java?ref=f6924d05faed3763ebc6ec21dbed1c14d694be4f","patch":"@@ -76,7 +76,8 @@ public void update() {\n         assertNotNull(task);\n \n         SchedTaskTO taskMod = new SchedTaskTO();\n-        taskMod.setKey(5L);\n+        taskMod.setKey(SCHED_TASK_ID);\n+        taskMod.setName(task.getName());\n         taskMod.setCronExpression(null);\n \n         taskService.update(taskMod);"}]}