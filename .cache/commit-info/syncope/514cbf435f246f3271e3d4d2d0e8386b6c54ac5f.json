{"sha":"514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUxNGNiZjQzNWYyNDZmMzI3MWUzZDRkMmQwZTgzODZiNmM1NGFjNWY=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-05-31T16:01:25Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-05-31T16:01:25Z"},"message":"[SYNCOPE-846] removed flickering by providing two new behaviors","tree":{"sha":"5428ee25a838f17c847b8776f71b168cf844785f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5428ee25a838f17c847b8776f71b168cf844785f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"07ca73d5c96071e3ca102beb654f7afbb702f13c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/07ca73d5c96071e3ca102beb654f7afbb702f13c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/07ca73d5c96071e3ca102beb654f7afbb702f13c"}],"stats":{"total":246,"additions":234,"deletions":12},"files":[{"sha":"46f84c344c3c811c7e645a9766b77140fe065962","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -80,6 +80,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                                 SyncopeConsoleSession.get().getService(AnyTypeClassService.class).update(modelObject);\n                             }\n                             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            AnyTypeClassesPanel.this.updateResultTable(target);\n                             modal.close(target);\n                         } catch (Exception e) {\n                             LOG.error(\"While creating or updating AnyTypeClassTO\", e);"},{"sha":"2238ad70b1ecdbeb7b9e9757f238fd3d307db388","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -81,6 +81,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                                 SyncopeConsoleSession.get().getService(AnyTypeService.class).update(modelObject);\n                             }\n                             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            AnyTypesPanel.this.updateResultTable(target);\n                             modal.close(target);\n                         } catch (Exception e) {\n                             LOG.error(\"While creating or updating {}\", modelObject, e);"},{"sha":"e09246c292159cf7031f377a470323f983309a85","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -88,7 +88,7 @@ public Panel getPanel(final String panelId) {\n                             public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n                                 onClickTemplate(target);\n                             }\n-                        }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.REALM_CREATE).\n+                        }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.REALM_UPDATE).\n                         add(new ActionLink<RealmTO>(realmTO) {\n \n                             private static final long serialVersionUID = 2802988981431379827L;"},{"sha":"a068e0fadd5ac1ad197f66abe95f56c477c3011d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -84,6 +84,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                                         getService(RelationshipTypeService.class).update(modelObject);\n                             }\n                             SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            RelationshipTypesPanel.this.updateResultTable(target);\n                             modal.close(target);\n                         } catch (Exception e) {\n                             LOG.error(\"While creating or updating {}\", modelObject, e);"},{"sha":"c955b522b1ad8fe4daaf8e9aadcd8ad0d4aaf5dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -115,7 +115,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                                             SchemaService.class).update(schemaType, modelObject);\n                                 }\n \n-                                updateResultTable(target);\n+                                SchemaTypePanel.this.updateResultTable(target);\n                                 SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                                 modal.close(target);\n                             } catch (Exception e) {"},{"sha":"e33141b27d3b7bc20f8643de9cb4644d4071968e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/IndicatorAutoCompleteBehavior.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAutoCompleteBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAutoCompleteBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAutoCompleteBehavior.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.ajax.form;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteBehavior;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteSettings;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.IAutoCompleteRenderer;\n+\n+/**\n+ * An {@link AutoCompleteBehavior} not show in veil.\n+ *\n+ * @param <T> element type.\n+ */\n+public abstract class IndicatorAutoCompleteBehavior<T extends Serializable>\n+        extends AutoCompleteBehavior<T> implements IAjaxIndicatorAware {\n+\n+    private static final long serialVersionUID = -5144403874783384604L;\n+\n+    private final String indicator;\n+\n+    public IndicatorAutoCompleteBehavior(final IAutoCompleteRenderer<T> renderer, final AutoCompleteSettings settings) {\n+        this(renderer, settings, StringUtils.EMPTY);\n+    }\n+\n+    public IndicatorAutoCompleteBehavior(\n+            final IAutoCompleteRenderer<T> renderer,\n+            final AutoCompleteSettings settings,\n+            final String indicator) {\n+        super(renderer, settings);\n+        this.indicator = indicator;\n+    }\n+\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return indicator;\n+    }\n+}"},{"sha":"a5da3664b8583f8626229a232f2e638c09c9dd86","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/IndicatorModalCloseBehavior.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorModalCloseBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorModalCloseBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorModalCloseBehavior.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.ajax.form;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n+\n+/**\n+ * An {@link AjaxEventBehavior} not show in veil.\n+ */\n+public abstract class IndicatorModalCloseBehavior extends AjaxEventBehavior implements IAjaxIndicatorAware {\n+\n+    private static final long serialVersionUID = -5144403874783384604L;\n+\n+    private final String indicator;\n+\n+    /**\n+     * Constructor.\n+     */\n+    public IndicatorModalCloseBehavior() {\n+        this(StringUtils.EMPTY);\n+    }\n+\n+    /**\n+     * Constructor.\n+     *\n+     * @param indicator indicator.\n+     */\n+    public IndicatorModalCloseBehavior(final String indicator) {\n+        super(\"hidden.bs.modal\");\n+        this.indicator = indicator;\n+    }\n+\n+    @Override\n+    protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n+        super.updateAjaxAttributes(attributes);\n+        attributes.setEventPropagation(AjaxRequestAttributes.EventPropagation.BUBBLE);\n+    }\n+\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return indicator;\n+    }\n+}"},{"sha":"2022801dae8e00de008ef64b8e7fb75f2bd46532","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/buttons/DefaultModalCloseButton.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fbuttons%2FDefaultModalCloseButton.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -19,10 +19,12 @@\n package org.apache.syncope.client.console.wicket.markup.html.bootstrap.buttons;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.ModalCloseButton;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n import org.apache.wicket.behavior.AttributeAppender;\n import org.apache.wicket.model.ResourceModel;\n \n-public class DefaultModalCloseButton extends ModalCloseButton {\n+public class DefaultModalCloseButton extends ModalCloseButton implements IAjaxIndicatorAware {\n \n     private static final long serialVersionUID = -1097993976905448580L;\n \n@@ -31,4 +33,9 @@ public DefaultModalCloseButton() {\n         add(new AttributeAppender(\"class\", \" pull-left\"));\n         setOutputMarkupId(true);\n     }\n+\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return StringUtils.EMPTY;\n+    }\n }"},{"sha":"e63d69a17c0ccb519cb530d6612b4f171393c9aa","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":74,"deletions":1,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -45,6 +45,10 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.apache.syncope.client.console.panels.SubmitableModalPanel;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorModalCloseBehavior;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n \n public class BaseModal<T extends Serializable> extends Modal<T> {\n \n@@ -73,6 +77,8 @@\n \n     private final DefaultModalCloseButton defaultModalCloseButton;\n \n+    private AjaxEventBehavior closeBehavior;\n+\n     public BaseModal(final String id) {\n         super(id);\n \n@@ -90,7 +96,7 @@ public BaseModal(final String id) {\n \n         form.add(content);\n \n-        setUseCloseHandler(true);\n+        useCloseHandler(true);\n         this.windowClosedCallback = null;\n         components = new ArrayList<>();\n \n@@ -265,4 +271,71 @@ public AjaxRequestTarget getTarget() {\n             return target;\n         }\n     }\n+\n+    //--------------------------------------------------------\n+    // Reqired for SYNCOPE-846\n+    //--------------------------------------------------------\n+    /**\n+     * Sets whether the close handler is used or not. Default is false.\n+     *\n+     * @param useCloseHandler True if close handler should be used\n+     * @return This\n+     */\n+    public final Modal<T> useCloseHandler(final boolean useCloseHandler) {\n+        if (useCloseHandler) {\n+            if (closeBehavior == null) {\n+                closeBehavior = new IndicatorModalCloseBehavior() {\n+\n+                    private static final long serialVersionUID = -4955472558917915340L;\n+\n+                    @Override\n+                    protected void onEvent(final AjaxRequestTarget target) {\n+                        if (isVisible()) {\n+                            onClose(target);\n+                            appendCloseDialogJavaScript(target);\n+                        }\n+                    }\n+                };\n+                add(closeBehavior);\n+            }\n+        } else if (closeBehavior != null) {\n+            remove(closeBehavior);\n+            closeBehavior = null;\n+        }\n+        return this;\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        response.render(OnDomReadyHeaderItem.forScript(createInitializerScript(getMarkupId(true))));\n+    }\n+\n+    /**\n+     * creates the initializer script of the modal dialog.\n+     *\n+     * @param markupId The component's markup id\n+     * @return initializer script\n+     */\n+    private String createInitializerScript(final String markupId) {\n+        return addCloseHandlerScript(markupId, createBasicInitializerScript(markupId));\n+    }\n+\n+    /**\n+     * adds close handler to initializer script, if use of close handler has been defined.\n+     *\n+     * @param markupId markup id\n+     * @param script base script to prepend\n+     * @return close handler script\n+     */\n+    private String addCloseHandlerScript(final String markupId, final String script) {\n+        if (closeBehavior != null) {\n+            return script + \";$('#\" + markupId + \"').on('hidden', function () { \"\n+                    + \"  Wicket.Ajax.ajax({'u':'\" + closeBehavior.getCallbackUrl() + \"','c':'\" + markupId + \"'});\"\n+                    + \"})\";\n+        }\n+\n+        return script;\n+    }\n+    //--------------------------------------------------------\n }"},{"sha":"4b85f667cd0a8373986731f570ffac8e5d80ae23","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":29,"deletions":8,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/514cbf435f246f3271e3d4d2d0e8386b6c54ac5f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=514cbf435f246f3271e3d4d2d0e8386b6c54ac5f","patch":"@@ -26,10 +26,13 @@\n import java.util.regex.Pattern;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAutoCompleteBehavior;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteSettings;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.IAutoCompleteRenderer;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.validation.IValidator;\n@@ -63,17 +66,21 @@ public AjaxTextFieldPanel(\n \n             @Override\n             protected Iterator<String> getChoices(final String input) {\n-                final Pattern pattern = Pattern.compile(\".*\" + Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n+                return AjaxTextFieldPanel.this.getChoices(input);\n+            }\n \n-                final List<String> result = new ArrayList<>();\n+            @Override\n+            protected AutoCompleteBehavior<String> newAutoCompleteBehavior(\n+                    final IAutoCompleteRenderer<String> renderer, final AutoCompleteSettings settings) {\n+                return new IndicatorAutoCompleteBehavior<String>(renderer, settings) {\n \n-                for (String choice : choices) {\n-                    if (pattern.matcher(choice).matches()) {\n-                        result.add(choice);\n-                    }\n-                }\n+                    private static final long serialVersionUID = 1070808433195962931L;\n \n-                return result.iterator();\n+                    @Override\n+                    protected Iterator<String> getChoices(final String input) {\n+                        return AjaxTextFieldPanel.this.getChoices(input);\n+                    }\n+                };\n             }\n         };\n         add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n@@ -106,6 +113,20 @@ public FieldPanel<String> enableJexlHelp() {\n         return this;\n     }\n \n+    protected Iterator<String> getChoices(final String input) {\n+        final Pattern pattern = Pattern.compile(\".*\" + Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n+\n+        final List<String> result = new ArrayList<>();\n+\n+        for (String choice : choices) {\n+            if (pattern.matcher(choice).matches()) {\n+                result.add(choice);\n+            }\n+        }\n+\n+        return result.iterator();\n+    }\n+\n     @Override\n     public FieldPanel<String> clone() {\n         final AjaxTextFieldPanel panel = (AjaxTextFieldPanel) super.clone();"}]}