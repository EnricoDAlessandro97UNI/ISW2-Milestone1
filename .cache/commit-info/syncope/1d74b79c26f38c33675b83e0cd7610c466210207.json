{"sha":"1d74b79c26f38c33675b83e0cd7610c466210207","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFkNzRiNzljMjZmMzhjMzM2NzViODNlMGNkNzYxMGM0NjYyMTAyMDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-17T07:50:02Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-17T08:34:27Z"},"message":"[SYNCOPE-1138] Replacing left and right with otherEnd","tree":{"sha":"99b3a1d38ae5f28359f088f2d7549923770e24b2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/99b3a1d38ae5f28359f088f2d7549923770e24b2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1d74b79c26f38c33675b83e0cd7610c466210207","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1d74b79c26f38c33675b83e0cd7610c466210207","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1d74b79c26f38c33675b83e0cd7610c466210207","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1d74b79c26f38c33675b83e0cd7610c466210207/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fdc991aa67cb9d3093948d7bb87f6b70317aa825","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fdc991aa67cb9d3093948d7bb87f6b70317aa825","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fdc991aa67cb9d3093948d7bb87f6b70317aa825"}],"stats":{"total":297,"additions":153,"deletions":144},"files":[{"sha":"2e77c8cc8523ec1cd96e4f72b8515482a65618ad","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -205,7 +205,7 @@ public void renderHead(final IHeaderResponse response) {\n \n     protected List<String> getMembershipAuxClasses(final MembershipTO membershipTO, final String anyType) {\n         try {\n-            final GroupTO groupTO = groupRestClient.read(membershipTO.getRightKey());\n+            final GroupTO groupTO = groupRestClient.read(membershipTO.getGroupKey());\n             return groupTO.getTypeExtension(anyType).get().getAuxClasses();\n         } catch (Exception e) {\n             return Collections.emptyList();"},{"sha":"eb99715f0c59454fa925d08c060e26e72f920de7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -268,8 +268,8 @@ private void reloadMemberships() {\n             // set group names in membership TOs and remove membership not assignable\n             List<MembershipTO> toBeRemoved = new ArrayList<>();\n             GroupableRelatableTO.class.cast(anyTO).getMemberships().forEach(membership -> {\n-                if (assignedGroups.containsKey(membership.getRightKey())) {\n-                    membership.setGroupName(assignedGroups.get(membership.getRightKey()).getName());\n+                if (assignedGroups.containsKey(membership.getGroupKey())) {\n+                    membership.setGroupName(assignedGroups.get(membership.getGroupKey()).getName());\n                 } else {\n                     toBeRemoved.add(membership);\n                 }"},{"sha":"7d64b7d3aec46ea1f7b555b6cad499d045186f48","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -255,15 +255,15 @@ public Specification() {\n                     filter(anyType -> anyType.getKind() != AnyTypeKind.GROUP\n                     && anyType.getKind() != AnyTypeKind.USER).collect(Collectors.toList());\n \n-            final AjaxDropDownChoicePanel<AnyTypeTO> rightType = new AjaxDropDownChoicePanel<>(\n-                    \"rightType\", \"rightType\", new PropertyModel<AnyTypeTO>(rel, \"rightType\") {\n+            final AjaxDropDownChoicePanel<AnyTypeTO> otherType = new AjaxDropDownChoicePanel<>(\n+                    \"otherType\", \"otherType\", new PropertyModel<AnyTypeTO>(rel, \"otherType\") {\n \n                 private static final long serialVersionUID = -5861057041758169508L;\n \n                 @Override\n                 public AnyTypeTO getObject() {\n                     for (AnyTypeTO obj : availableTypes) {\n-                        if (obj.getKey().equals(rel.getRightType())) {\n+                        if (obj.getKey().equals(rel.getOtherEndType())) {\n                             return obj;\n                         }\n                     }\n@@ -272,11 +272,11 @@ public AnyTypeTO getObject() {\n \n                 @Override\n                 public void setObject(final AnyTypeTO object) {\n-                    rel.setRightType(object == null ? null : object.getKey());\n+                    rel.setOtherEndType(object == null ? null : object.getKey());\n                 }\n             }, false);\n-            rightType.setChoices(availableTypes);\n-            rightType.setChoiceRenderer(new IChoiceRenderer<AnyTypeTO>() {\n+            otherType.setChoices(availableTypes);\n+            otherType.setChoiceRenderer(new IChoiceRenderer<AnyTypeTO>() {\n \n                 private static final long serialVersionUID = -734743540442190178L;\n \n@@ -296,9 +296,9 @@ public AnyTypeTO getObject(final String id, final IModel<? extends List<? extend\n                             filter(anyTypeTO -> id.equals(anyTypeTO.getKey())).findAny().orElse(null);\n                 }\n             });\n-            // enable \"rightType\" dropdown only if \"type\" option is selected - SYNCOPE-1140\n-            rightType.setEnabled(false);\n-            add(rightType);\n+            // enable \"otherType\" dropdown only if \"type\" option is selected - SYNCOPE-1140\n+            otherType.setEnabled(false);\n+            add(otherType);\n \n             final WebMarkupContainer container = new WebMarkupContainer(\"searchPanelContainer\");\n             container.setOutputMarkupId(true);\n@@ -315,21 +315,21 @@ public AnyTypeTO getObject(final String id, final IModel<? extends List<? extend\n                 protected void onUpdate(final AjaxRequestTarget target) {\n                     Fragment emptyFragment = new Fragment(\"searchPanel\", \"emptyFragment\", Specification.this);\n                     container.addOrReplace(emptyFragment.setRenderBodyOnly(true));\n-                    rightType.setModelObject(null);\n-                    // enable \"rightType\" dropdown only if \"type\" option is selected - SYNCOPE-1140\n-                    rightType.setEnabled(type.getModelObject() != null && !type.getModelObject().isEmpty());\n-                    target.add(rightType);\n+                    otherType.setModelObject(null);\n+                    // enable \"otherType\" dropdown only if \"type\" option is selected - SYNCOPE-1140\n+                    otherType.setEnabled(type.getModelObject() != null && !type.getModelObject().isEmpty());\n+                    target.add(otherType);\n                     target.add(container);\n                 }\n             });\n \n-            rightType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+            otherType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                 private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n-                    final AnyTypeTO anyType = rightType.getModelObject();\n+                    final AnyTypeTO anyType = otherType.getModelObject();\n                     if (anyType == null) {\n                         Fragment emptyFragment = new Fragment(\"searchPanel\", \"emptyFragment\", Specification.this);\n                         container.addOrReplace(emptyFragment.setRenderBodyOnly(true));\n@@ -371,7 +371,7 @@ public void onEvent(final IEvent<?> event) {\n                         getPayload()).getTarget();\n \n                 AnyTO right = AnySelectionDirectoryPanel.ItemSelection.class.cast(event.getPayload()).getSelection();\n-                rel.setRightKey(right.getKey());\n+                rel.setOtherEndKey(right.getKey());\n \n                 Relationships.this.addNewRelationships(rel);\n "},{"sha":"83ab31d4698e1fb1446aca662d82ec2cb59d825d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Relationships$Specification.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships%24Specification.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships%24Specification.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships%24Specification.html?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -25,7 +25,7 @@\n       </div>\n \n       <div class=\"form-group\">\n-        <span wicket:id=\"rightType\"/>\n+        <span wicket:id=\"otherType\"/>\n       </div>\n \n       <div wicket:id=\"searchPanelContainer\">"},{"sha":"acf8a061fb2954a53d111802a0e1301a55114b34","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -221,7 +221,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         GroupService.getGroups(realm).then(function (response) {\n           $scope.dynamicForm.groups = new Array();\n           for (var i in response) {\n-            $scope.dynamicForm.groups.push({\"rightKey\": response[i].key, \"groupName\": response[i].name});\n+            $scope.dynamicForm.groups.push({\"groupKey\": response[i].key, \"groupName\": response[i].name});\n           }\n           $scope.dynamicForm.groups.sort(function (a, b) {\n             var x = a.groupName;\n@@ -284,7 +284,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           for (var index in $scope.user.memberships) {\n             $scope.dynamicForm.selectedGroups.push(\n                     {\n-                      \"rightKey\": $scope.user.memberships[index][\"rightKey\"].toString(),\n+                      \"groupKey\": $scope.user.memberships[index][\"groupKey\"].toString(),\n                       \"groupName\": $scope.user.memberships[index][\"groupName\"]\n                     });\n           }"},{"sha":"8cb89a936387e16a3d72861bf15b516956f46376","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/groups.js","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -33,10 +33,10 @@ angular.module('self')\n                   $scope.user.memberships = new Array();\n                 }\n               };\n-              \n+\n               $scope.addGroup = function (item, model) {\n                 var membership = item;\n-                $scope.user.memberships.push({\"rightKey\": membership.rightKey, \"groupName\": membership.groupName});\n+                $scope.user.memberships.push({\"groupKey\": membership.groupKey, \"groupName\": membership.groupName});\n                 $scope.$emit(\"groupAdded\", membership.groupName);\n               };\n "},{"sha":"51e01593ad3431f497677c1b59505452bd417426","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/filters/propsFilter.js","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Ffilters%2FpropsFilter.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Ffilters%2FpropsFilter.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Ffilters%2FpropsFilter.js?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -29,23 +29,22 @@\n angular.module(\"self\")\n         .filter('propsFilter', function () {\n           return function (items, props) {\n-            var out = [];            \n+            var out = [];\n             if (items && items.length && props.selected && props.selected.length) {\n-              var selected = props.selected;              \n+              var selected = props.selected;\n               for (var i = 0; i < items.length; i++) {\n                 var item = items[i], itemMisses = true;\n                 for (var j = 0; j < selected.length; j++) {\n-                  if (item.rightKey == selected[j].rightKey) {\n+                  if (item.groupKey == selected[j].groupKey) {\n                     itemMisses = false;\n                     break;\n                   }\n                 }\n-                if(itemMisses){\n+                if (itemMisses) {\n                   out.push(item);\n                 }\n               }\n-            }\n-            else{\n+            } else {\n               out = items;\n             }\n             return out;"},{"sha":"38e6a29910337ca0e98a339f08a6b19ade34de49","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/groups.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fgroups.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fgroups.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fgroups.html?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -25,7 +25,7 @@\n       {{$item.groupName}}\n     </ui-select-match>\n     <ui-select-choices repeat=\"group in dynamicForm.groups | propsFilter: {selected: dynamicForm.selectedGroups} \n-                       track by group.rightKey\" class=\"ui-select-choices\">\n+                       track by group.groupKey\" class=\"ui-select-choices\">\n       <div id=\"{{group.groupName}}\" ng-bind-html=\"group.groupName | highlight: $select.search\"></div>\n     </ui-select-choices>\n   </ui-select>"},{"sha":"e5b2beea700f92dc9b58339f1deb2609d41bd76e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/EntityTOUtils.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -40,15 +40,14 @@ public static Map<Pair<String, String>, RelationshipTO> buildRelationshipMap(\n             final Collection<RelationshipTO> relationships) {\n \n         Map<Pair<String, String>, RelationshipTO> result = new HashMap<>(relationships.size());\n-        relationships.forEach(\n-                relationship -> result.put(Pair.of(relationship.getType(), relationship.getRightKey()), relationship));\n+        relationships.forEach(rel -> result.put(Pair.of(rel.getType(), rel.getOtherEndKey()), rel));\n \n         return Collections.unmodifiableMap(result);\n     }\n \n     public static Map<String, MembershipTO> buildMembershipMap(final Collection<MembershipTO> memberships) {\n         Map<String, MembershipTO> result = new HashMap<>(memberships.size());\n-        memberships.forEach(membership -> result.put(membership.getRightKey(), membership));\n+        memberships.forEach(memb -> result.put(memb.getGroupKey(), memb));\n \n         return Collections.unmodifiableMap(result);\n     }"},{"sha":"61d8eb148830fe55c3bdd624e29106bc706a4009","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyObjectTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -52,9 +52,9 @@ public void setName(final String name) {\n \n     @JsonIgnore\n     @Override\n-    public Optional<RelationshipTO> getRelationship(final String type, final String rightKey) {\n+    public Optional<RelationshipTO> getRelationship(final String type, final String otherKey) {\n         return relationships.stream().filter(\n-                relationship -> type.equals(relationship.getType()) && rightKey.equals(relationship.getRightKey())).\n+                relationship -> type.equals(relationship.getType()) && otherKey.equals(relationship.getOtherEndKey())).\n                 findFirst();\n     }\n "},{"sha":"85ccb18d668404fee8958b8ac2dbfdb43c1c6dea","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupableRelatableTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableRelatableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableRelatableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableRelatableTO.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -29,7 +29,7 @@ public interface GroupableRelatableTO {\n \n     List<MembershipTO> getDynMemberships();\n \n-    Optional<RelationshipTO> getRelationship(String type, String rightKey);\n+    Optional<RelationshipTO> getRelationship(String type, String otherKey);\n \n     List<RelationshipTO> getRelationships();\n }"},{"sha":"c60685134175941b022c062286bb824c9bad092c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":8,"deletions":27,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -27,11 +27,11 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"membership\")\n @XmlType\n-public class MembershipTO extends RelationshipTO implements AttributableTO {\n+public class MembershipTO extends AbstractBaseBean implements AttributableTO {\n \n     private static final long serialVersionUID = 5992828670273935861L;\n \n@@ -40,12 +40,12 @@ public static class Builder {\n         private final MembershipTO instance = new MembershipTO();\n \n         public Builder group(final String groupKey) {\n-            instance.setRightKey(groupKey);\n+            instance.setGroupKey(groupKey);\n             return this;\n         }\n \n         public Builder group(final String groupKey, final String groupName) {\n-            instance.setRightKey(groupKey);\n+            instance.setGroupKey(groupKey);\n             instance.setGroupName(groupName);\n             return this;\n         }\n@@ -55,6 +55,8 @@ public MembershipTO build() {\n         }\n     }\n \n+    private String groupKey;\n+\n     private String groupName;\n \n     private final Set<AttrTO> plainAttrs = new HashSet<>();\n@@ -63,33 +65,12 @@ public MembershipTO build() {\n \n     private final Set<AttrTO> virAttrs = new HashSet<>();\n \n-    @Override\n-    public String getType() {\n-        return \"Membership\";\n-    }\n-\n-    @Override\n-    public void setType(final String relationshipType) {\n-        // ignore\n-    }\n-\n-    @Override\n-    public String getRightType() {\n-        return AnyTypeKind.GROUP.name();\n-    }\n-\n-    @Override\n-    public void setRightType(final String rightType) {\n-        // ignore\n-    }\n-\n-    @JsonIgnore\n     public String getGroupKey() {\n-        return getRightKey();\n+        return groupKey;\n     }\n \n     public void setGroupKey(final String groupKey) {\n-        setRightKey(groupKey);\n+        this.groupKey = groupKey;\n     }\n \n     public String getGroupName() {"},{"sha":"015e18c3339ffe643bb82090842cc4d7f7f15ccc","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTO.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -2,7 +2,7 @@\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n+ * regarding copyother ownership.  The ASF licenses this file\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n@@ -37,9 +37,9 @@ public Builder type(final String type) {\n             return this;\n         }\n \n-        public Builder right(final String rightType, final String rightKey) {\n-            instance.setRightType(rightType);\n-            instance.setRightKey(rightKey);\n+        public Builder otherEnd(final String otherEndType, final String otherEndKey) {\n+            instance.setOtherEndType(otherEndType);\n+            instance.setOtherEndKey(otherEndKey);\n             return this;\n         }\n \n@@ -50,9 +50,9 @@ public RelationshipTO build() {\n \n     private String type;\n \n-    private String rightType;\n+    private String otherEndType;\n \n-    private String rightKey;\n+    private String otherEndKey;\n \n     public String getType() {\n         return type;\n@@ -62,20 +62,20 @@ public void setType(final String type) {\n         this.type = type;\n     }\n \n-    public String getRightType() {\n-        return rightType;\n+    public String getOtherEndType() {\n+        return otherEndType;\n     }\n \n-    public void setRightType(final String rightType) {\n-        this.rightType = rightType;\n+    public void setOtherEndType(final String otherEndType) {\n+        this.otherEndType = otherEndType;\n     }\n \n-    public String getRightKey() {\n-        return rightKey;\n+    public String getOtherEndKey() {\n+        return otherEndKey;\n     }\n \n-    public void setRightKey(final String rightKey) {\n-        this.rightKey = rightKey;\n+    public void setOtherEndKey(final String otherEndKey) {\n+        this.otherEndKey = otherEndKey;\n     }\n \n }"},{"sha":"a5add3ad37e4b8ca496fcf317a0a3df2bdb91c8a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -195,9 +195,9 @@ public void setMustChangePassword(final boolean mustChangePassword) {\n \n     @JsonIgnore\n     @Override\n-    public Optional<RelationshipTO> getRelationship(final String type, final String rightKey) {\n+    public Optional<RelationshipTO> getRelationship(final String type, final String otherKey) {\n         return relationships.stream().filter(\n-                relationship -> type.equals(relationship.getType()) && rightKey.equals(relationship.getRightKey())).\n+                relationship -> type.equals(relationship.getType()) && otherKey.equals(relationship.getOtherEndKey())).\n                 findFirst();\n     }\n "},{"sha":"f001204ba0f4cad15ab0f9d5c2d04b5defe0c518","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyObjectDAO.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -23,8 +23,9 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n+import org.apache.syncope.core.persistence.api.entity.Relationship;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n@@ -45,7 +46,7 @@ public interface AnyObjectDAO extends AnyDAO<AnyObject> {\n \n     List<Group> findDynGroups(String key);\n \n-    List<ARelationship> findAllRelationships(AnyObject anyObject);\n+    List<Relationship<Any<?>, Any<?>>> findAllRelationships(AnyObject anyObject);\n \n     Collection<Group> findAllGroups(AnyObject anyObject);\n "},{"sha":"972a0fb13765e8864a8be6f03a57469f8b8afb68","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":21,"deletions":6,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -39,9 +39,11 @@\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n+import org.apache.syncope.core.persistence.api.entity.Relationship;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n@@ -166,13 +168,26 @@ public AnyObject findByName(final String name) {\n     }\n \n     @Override\n-    public List<ARelationship> findAllRelationships(final AnyObject anyObject) {\n-        TypedQuery<ARelationship> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPAARelationship.class.getSimpleName()\n-                + \" e WHERE e.rightEnd=:anyObject OR e.leftEnd=:anyObject\", ARelationship.class);\n-        query.setParameter(\"anyObject\", anyObject);\n+    public List<Relationship<Any<?>, Any<?>>> findAllRelationships(final AnyObject anyObject) {\n+        List<Relationship<Any<?>, Any<?>>> result = new ArrayList<>();\n \n-        return query.getResultList();\n+        @SuppressWarnings(\"unchecked\")\n+        TypedQuery<Relationship<Any<?>, Any<?>>> aquery =\n+                (TypedQuery<Relationship<Any<?>, Any<?>>>) entityManager().createQuery(\n+                        \"SELECT e FROM \" + JPAARelationship.class.getSimpleName()\n+                        + \" e WHERE e.rightEnd=:anyObject OR e.leftEnd=:anyObject\");\n+        aquery.setParameter(\"anyObject\", anyObject);\n+        result.addAll(aquery.getResultList());\n+\n+        @SuppressWarnings(\"unchecked\")\n+        TypedQuery<Relationship<Any<?>, Any<?>>> uquery =\n+                (TypedQuery<Relationship<Any<?>, Any<?>>>) entityManager().createQuery(\n+                        \"SELECT e FROM \" + JPAURelationship.class.getSimpleName()\n+                        + \" e WHERE e.rightEnd=:anyObject\");\n+        uquery.setParameter(\"anyObject\", anyObject);\n+        result.addAll(uquery.getResultList());\n+\n+        return result;\n     }\n \n     @Override"},{"sha":"160ae0722c68c7cd3e8a09f2dd135ece73f70402","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractGroupableRelatable.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGroupableRelatable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGroupableRelatable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractGroupableRelatable.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -90,14 +90,6 @@ public Optional<? extends M> getMembership(final String groupKey) {\n                 -> groupKey != null && groupKey.equals(membership.getRightEnd().getKey())).findFirst();\n     }\n \n-    @Override\n-    public Optional<? extends REL> getRelationship(final RelationshipType relationshipType, final String otherEndKey) {\n-        return getRelationships().stream().filter(relationship\n-                -> otherEndKey != null && otherEndKey.equals(relationship.getRightEnd().getKey())\n-                && ((relationshipType == null && relationship.getType() == null)\n-                || (relationshipType != null && relationshipType.equals(relationship.getType())))).findFirst();\n-    }\n-\n     @Override\n     public Collection<? extends REL> getRelationships(final RelationshipType relationshipType) {\n         return getRelationships().stream().filter(relationship"},{"sha":"d72e36a888098e69cc36e68b0e0f6595486c527c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAAnyObject.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Optional;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n import javax.persistence.Column;\n@@ -35,6 +36,7 @@\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttr;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n@@ -151,6 +153,16 @@ public boolean add(final ARelationship relationship) {\n         return this.relationships.add((JPAARelationship) relationship);\n     }\n \n+    @Override\n+    public Optional<? extends ARelationship> getRelationship(\n+            final RelationshipType relationshipType, final String otherEndKey) {\n+\n+        return getRelationships().stream().filter(relationship -> relationshipType.equals(relationship.getType())\n+                && otherEndKey != null\n+                && (otherEndKey.equals(relationship.getLeftEnd().getKey())\n+                || otherEndKey.equals(relationship.getRightEnd().getKey()))).findFirst();\n+    }\n+\n     @Override\n     public List<? extends ARelationship> getRelationships() {\n         return relationships;"},{"sha":"8168f37970a886136e543c7354fc0af5d68153ca","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUser.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -22,6 +22,7 @@\n import java.util.Calendar;\n import java.util.Date;\n import java.util.List;\n+import java.util.Optional;\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n@@ -58,6 +59,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n@@ -510,6 +512,15 @@ public boolean add(final URelationship relationship) {\n         return this.relationships.add((JPAURelationship) relationship);\n     }\n \n+    @Override\n+    public Optional<? extends URelationship> getRelationship(\n+            final RelationshipType relationshipType, final String otherEndKey) {\n+\n+        return getRelationships().stream().filter(relationship -> relationshipType.equals(relationship.getType())\n+                && otherEndKey != null && otherEndKey.equals(relationship.getRightEnd().getKey())).\n+                findFirst();\n+    }\n+\n     @Override\n     public List<? extends URelationship> getRelationships() {\n         return relationships;"},{"sha":"fd3c0c4f6f1f16965cc10dcbbcc9a9f7c80191a1","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -1180,7 +1180,7 @@ under the License.\n         jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"3a6173a9-8c34-4e37-b3b1-0c2ea385fac0\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"rightType\":\"GROUP\",\"rightKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"groupKey\":\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\",\"groupName\":null}],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"b3772d66-ec06-4133-bf38-b3273845ac5b\"\n                        pullTask_id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" anyType_id=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>"},{"sha":"0bc577ae73f0e52c8df764a255d9ceca9ab5937d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -66,9 +66,7 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n-import org.apache.syncope.core.persistence.api.entity.Relationship;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n-import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n@@ -593,10 +591,9 @@ protected void fillTO(\n         });\n     }\n \n-    protected RelationshipTO getRelationshipTO(final Relationship<? extends Any<?>, AnyObject> relationship) {\n+    protected RelationshipTO getRelationshipTO(final String relationshipType, final Any<?> otherEnd) {\n         return new RelationshipTO.Builder().\n-                type(relationship.getType().getKey()).\n-                right(relationship.getRightEnd().getType().getKey(), relationship.getRightEnd().getKey()).\n+                type(relationshipType).otherEnd(otherEnd.getType().getKey(), otherEnd.getKey()).\n                 build();\n     }\n "},{"sha":"729cf2c297354cf531605c02325c1ed913d991b2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":21,"deletions":17,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -101,7 +101,11 @@ public AnyObjectTO getAnyObjectTO(final AnyObject anyObject, final boolean detai\n \n             // relationships\n             anyObjectTO.getRelationships().addAll(\n-                    anyObject.getRelationships().stream().map(relationship -> getRelationshipTO(relationship)).\n+                    anyObject.getRelationships().stream().map(relationship -> getRelationshipTO(\n+                    relationship.getType().getKey(),\n+                    relationship.getLeftEnd().getKey().equals(anyObject.getKey())\n+                    ? relationship.getRightEnd()\n+                    : relationship.getLeftEnd())).\n                             collect(Collectors.toList()));\n \n             // memberships\n@@ -161,19 +165,19 @@ public void create(final AnyObject anyObject, final AnyObjectTO anyObjectTO) {\n         if (anyObject.getRealm() != null) {\n             // relationships\n             anyObjectTO.getRelationships().forEach(relationshipTO -> {\n-                if (StringUtils.isBlank(relationshipTO.getRightType())\n-                        || AnyTypeKind.USER.name().equals(relationshipTO.getRightType())\n-                        || AnyTypeKind.GROUP.name().equals(relationshipTO.getRightType())) {\n+                if (StringUtils.isBlank(relationshipTO.getOtherEndType())\n+                        || AnyTypeKind.USER.name().equals(relationshipTO.getOtherEndType())\n+                        || AnyTypeKind.GROUP.name().equals(relationshipTO.getOtherEndType())) {\n \n                     SyncopeClientException invalidAnyType =\n                             SyncopeClientException.build(ClientExceptionType.InvalidAnyType);\n                     invalidAnyType.getElements().add(AnyType.class.getSimpleName()\n-                            + \" not allowed for relationship: \" + relationshipTO.getRightType());\n+                            + \" not allowed for relationship: \" + relationshipTO.getOtherEndType());\n                     scce.addException(invalidAnyType);\n                 } else {\n-                    AnyObject otherEnd = anyObjectDAO.find(relationshipTO.getRightKey());\n+                    AnyObject otherEnd = anyObjectDAO.find(relationshipTO.getOtherEndKey());\n                     if (otherEnd == null) {\n-                        LOG.debug(\"Ignoring invalid anyObject \" + relationshipTO.getRightKey());\n+                        LOG.debug(\"Ignoring invalid anyObject \" + relationshipTO.getOtherEndKey());\n                     } else if (anyObject.getRealm().getFullPath().startsWith(otherEnd.getRealm().getFullPath())) {\n                         RelationshipType relationshipType = relationshipTypeDAO.find(relationshipTO.getType());\n                         if (relationshipType == null) {\n@@ -199,12 +203,12 @@ public void create(final AnyObject anyObject, final AnyObjectTO anyObjectTO) {\n \n             // memberships\n             anyObjectTO.getMemberships().forEach(membershipTO -> {\n-                Group group = membershipTO.getRightKey() == null\n+                Group group = membershipTO.getGroupKey() == null\n                         ? groupDAO.findByName(membershipTO.getGroupName())\n-                        : groupDAO.find(membershipTO.getRightKey());\n+                        : groupDAO.find(membershipTO.getGroupKey());\n                 if (group == null) {\n                     LOG.debug(\"Ignoring invalid group \"\n-                            + membershipTO.getRightKey() + \" / \" + membershipTO.getGroupName());\n+                            + membershipTO.getGroupKey() + \" / \" + membershipTO.getGroupName());\n                 } else if (anyObject.getRealm().getFullPath().startsWith(group.getRealm().getFullPath())) {\n                     AMembership membership = entityFactory.newEntity(AMembership.class);\n                     membership.setRightEnd(group);\n@@ -271,26 +275,26 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n                 LOG.debug(\"Ignoring invalid relationship type {}\", patch.getRelationshipTO().getType());\n             } else {\n                 Optional<? extends ARelationship> relationship =\n-                        anyObject.getRelationship(relationshipType, patch.getRelationshipTO().getRightKey());\n+                        anyObject.getRelationship(relationshipType, patch.getRelationshipTO().getOtherEndKey());\n                 if (relationship.isPresent()) {\n                     anyObject.getRelationships().remove(relationship.get());\n                     relationship.get().setLeftEnd(null);\n                 }\n \n                 if (patch.getOperation() == PatchOperation.ADD_REPLACE) {\n-                    if (StringUtils.isBlank(patch.getRelationshipTO().getRightType())\n-                            || AnyTypeKind.USER.name().equals(patch.getRelationshipTO().getRightType())\n-                            || AnyTypeKind.GROUP.name().equals(patch.getRelationshipTO().getRightType())) {\n+                    if (StringUtils.isBlank(patch.getRelationshipTO().getOtherEndType())\n+                            || AnyTypeKind.USER.name().equals(patch.getRelationshipTO().getOtherEndType())\n+                            || AnyTypeKind.GROUP.name().equals(patch.getRelationshipTO().getOtherEndType())) {\n \n                         SyncopeClientException invalidAnyType =\n                                 SyncopeClientException.build(ClientExceptionType.InvalidAnyType);\n                         invalidAnyType.getElements().add(AnyType.class.getSimpleName()\n-                                + \" not allowed for relationship: \" + patch.getRelationshipTO().getRightType());\n+                                + \" not allowed for relationship: \" + patch.getRelationshipTO().getOtherEndType());\n                         scce.addException(invalidAnyType);\n                     } else {\n-                        AnyObject otherEnd = anyObjectDAO.find(patch.getRelationshipTO().getRightKey());\n+                        AnyObject otherEnd = anyObjectDAO.find(patch.getRelationshipTO().getOtherEndKey());\n                         if (otherEnd == null) {\n-                            LOG.debug(\"Ignoring invalid any object {}\", patch.getRelationshipTO().getRightKey());\n+                            LOG.debug(\"Ignoring invalid any object {}\", patch.getRelationshipTO().getOtherEndKey());\n                         } else if (anyObject.getRealm().getFullPath().startsWith(otherEnd.getRealm().getFullPath())) {\n                             ARelationship newRelationship = entityFactory.newEntity(ARelationship.class);\n                             newRelationship.setType(relationshipType);"},{"sha":"044bc99e8a9695198939d51391288933557d3c17","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -206,9 +206,9 @@ public void create(final User user, final UserTO userTO, final boolean storePass\n         if (user.getRealm() != null) {\n             // relationships\n             userTO.getRelationships().forEach(relationshipTO -> {\n-                AnyObject otherEnd = anyObjectDAO.find(relationshipTO.getRightKey());\n+                AnyObject otherEnd = anyObjectDAO.find(relationshipTO.getOtherEndKey());\n                 if (otherEnd == null) {\n-                    LOG.debug(\"Ignoring invalid anyObject \" + relationshipTO.getRightKey());\n+                    LOG.debug(\"Ignoring invalid anyObject \" + relationshipTO.getOtherEndKey());\n                 } else if (user.getRealm().getFullPath().startsWith(otherEnd.getRealm().getFullPath())) {\n                     RelationshipType relationshipType = relationshipTypeDAO.find(relationshipTO.getType());\n                     if (relationshipType == null) {\n@@ -233,12 +233,12 @@ public void create(final User user, final UserTO userTO, final boolean storePass\n \n             // memberships\n             userTO.getMemberships().forEach(membershipTO -> {\n-                Group group = membershipTO.getRightKey() == null\n+                Group group = membershipTO.getGroupKey() == null\n                         ? groupDAO.findByName(membershipTO.getGroupName())\n-                        : groupDAO.find(membershipTO.getRightKey());\n+                        : groupDAO.find(membershipTO.getGroupKey());\n                 if (group == null) {\n                     LOG.debug(\"Ignoring invalid group \"\n-                            + membershipTO.getRightKey() + \" / \" + membershipTO.getGroupName());\n+                            + membershipTO.getGroupKey() + \" / \" + membershipTO.getGroupName());\n                 } else if (user.getRealm().getFullPath().startsWith(group.getRealm().getFullPath())) {\n                     UMembership membership = entityFactory.newEntity(UMembership.class);\n                     membership.setRightEnd(group);\n@@ -374,16 +374,16 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n                 LOG.debug(\"Ignoring invalid relationship type {}\", patch.getRelationshipTO().getType());\n             } else {\n                 Optional<? extends URelationship> relationship =\n-                        user.getRelationship(relationshipType, patch.getRelationshipTO().getRightKey());\n+                        user.getRelationship(relationshipType, patch.getRelationshipTO().getOtherEndKey());\n                 if (relationship.isPresent()) {\n                     user.getRelationships().remove(relationship.get());\n                     relationship.get().setLeftEnd(null);\n                 }\n \n                 if (patch.getOperation() == PatchOperation.ADD_REPLACE) {\n-                    AnyObject otherEnd = anyObjectDAO.find(patch.getRelationshipTO().getRightKey());\n+                    AnyObject otherEnd = anyObjectDAO.find(patch.getRelationshipTO().getOtherEndKey());\n                     if (otherEnd == null) {\n-                        LOG.debug(\"Ignoring invalid any object {}\", patch.getRelationshipTO().getRightKey());\n+                        LOG.debug(\"Ignoring invalid any object {}\", patch.getRelationshipTO().getOtherEndKey());\n                     } else if (user.getRealm().getFullPath().startsWith(otherEnd.getRealm().getFullPath())) {\n                         URelationship newRelationship = entityFactory.newEntity(URelationship.class);\n                         newRelationship.setType(relationshipType);\n@@ -605,7 +605,8 @@ public UserTO getUserTO(final User user, final boolean details) {\n \n             // relationships\n             userTO.getRelationships().addAll(\n-                    user.getRelationships().stream().map(relationship -> getRelationshipTO(relationship)).\n+                    user.getRelationships().stream().map(relationship -> getRelationshipTO(\n+                    relationship.getType().getKey(), relationship.getRightEnd())).\n                             collect(Collectors.toList()));\n \n             // memberships"},{"sha":"3f9384bf7b07fbd84361c4f5b6b7100845498691","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/UserReportlet.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -260,11 +260,11 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n                     atts.clear();\n \n                     atts.addAttribute(\"\", \"\", \"anyObjectKey\",\n-                            ReportXMLConst.XSD_STRING, rel.getRightKey());\n+                            ReportXMLConst.XSD_STRING, rel.getOtherEndKey());\n                     handler.startElement(\"\", \"\", \"relationship\", atts);\n \n                     if (conf.getFeatures().contains(Feature.resources)) {\n-                        for (URelationship actualRel : user.getRelationships(rel.getRightKey())) {\n+                        for (URelationship actualRel : user.getRelationships(rel.getOtherEndKey())) {\n                             doExtractResources(\n                                     handler, anyObjectDataBinder.getAnyObjectTO(actualRel.getRightEnd(), true));\n                         }\n@@ -282,15 +282,15 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n                     atts.clear();\n \n                     atts.addAttribute(\"\", \"\", \"groupKey\",\n-                            ReportXMLConst.XSD_STRING, memb.getRightKey());\n+                            ReportXMLConst.XSD_STRING, memb.getGroupKey());\n                     atts.addAttribute(\"\", \"\", \"groupName\", ReportXMLConst.XSD_STRING, memb.getGroupName());\n                     handler.startElement(\"\", \"\", \"membership\", atts);\n \n                     if (conf.getFeatures().contains(Feature.resources)) {\n-                        UMembership actualMemb = user.getMembership(memb.getRightKey()).orElse(null);\n+                        UMembership actualMemb = user.getMembership(memb.getGroupKey()).orElse(null);\n                         if (actualMemb == null) {\n                             LOG.warn(\"Unexpected: cannot find membership for group {} for user {}\",\n-                                    memb.getRightKey(), user);\n+                                    memb.getGroupKey(), user);\n                         } else {\n                             doExtractResources(handler, groupDataBinder.getGroupTO(actualMemb.getRightEnd(), true));\n                         }"},{"sha":"5c69268a3c4ed0d9bb2b6b27167c248bd794c0a6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/TemplateUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -108,8 +108,8 @@ private void fill(final AnyTO anyTO, final AnyTO template) {\n \n     private void fillRelationships(final GroupableRelatableTO any, final GroupableRelatableTO template) {\n         template.getRelationships().stream().\n-                filter(relationship\n-                        -> !any.getRelationship(relationship.getRightKey(), relationship.getRightKey()).isPresent()).\n+                filter(relationship -> !any.getRelationship(\n+                relationship.getOtherEndKey(), relationship.getOtherEndKey()).isPresent()).\n                 forEachOrdered(relationship -> {\n                     any.getRelationships().add(relationship);\n                 });"},{"sha":"e51b53f5f082d7faebbf491233f3a69a1d339f20","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchUtils.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -112,11 +112,8 @@ public XContentBuilder builder(final Any<?> any) throws IOException {\n \n             List<Object> relationships = new ArrayList<>();\n             List<Object> relationshipTypes = new ArrayList<>();\n-            anyObjectDAO.findAllRelationships(anyObject).stream().\n-                    map(relationship -> {\n-                        relationships.add(relationship.getRightEnd().getKey());\n-                        return relationship;\n-                    }).forEachOrdered(relationship -> {\n+            anyObjectDAO.findAllRelationships(anyObject).forEach(relationship -> {\n+                relationships.add(relationship.getRightEnd().getKey());\n                 relationshipTypes.add(relationship.getType().getKey());\n             });\n             builder = builder.field(\"relationships\", relationships);"},{"sha":"e97ebd8e3fef1188a212b3b489a99a9422f4f2c0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyObjectITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -203,7 +203,7 @@ public void deleteAttr() {\n     @Test\n     public void issueSYNCOPE756() {\n         AnyObjectTO anyObjectTO = getSampleTO(\"issueSYNCOPE756\");\n-        anyObjectTO.getRelationships().add(new RelationshipTO.Builder().right(\n+        anyObjectTO.getRelationships().add(new RelationshipTO.Builder().otherEnd(\n                 AnyTypeKind.USER.name(), \"1417acbe-cbf6-4277-9372-e75e04f97000\").build());\n \n         try {"},{"sha":"5bd3e7bdaeba14c5243e623be6dd503b9b9f209b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -258,7 +258,7 @@ public void fromCSV() throws Exception {\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_WS2));\n             assertEquals(1, userTO.getMemberships().size());\n-            assertEquals(\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\", userTO.getMemberships().get(0).getRightKey());\n+            assertEquals(\"f779c0d4-633b-4be5-8f57-32eb478a3ca5\", userTO.getMemberships().get(0).getGroupKey());\n \n             // Unmatching --> Assign (link) - SYNCOPE-658\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_CSV));"},{"sha":"c4a21c4478c440a84fc5c74f255d51cba6dbe2ae","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserWorkflowITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d74b79c26f38c33675b83e0cd7610c466210207/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d74b79c26f38c33675b83e0cd7610c466210207/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java?ref=1d74b79c26f38c33675b83e0cd7610c466210207","patch":"@@ -76,7 +76,7 @@ public void createWithReject() {\n         userTO = createUser(userTO).getEntity();\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getMemberships().size());\n-        assertEquals(\"0cbcabd2-4410-4b6b-8f05-a052b451d18f\", userTO.getMemberships().get(0).getRightKey());\n+        assertEquals(\"0cbcabd2-4410-4b6b-8f05-a052b451d18f\", userTO.getMemberships().get(0).getGroupKey());\n         assertEquals(\"createApproval\", userTO.getStatus());\n \n         // 2. request if there is any pending task for user just created\n@@ -156,7 +156,7 @@ public void createWithApproval() {\n         assertNotNull(result);\n         userTO = result.getEntity();\n         assertEquals(1, userTO.getMemberships().size());\n-        assertEquals(\"0cbcabd2-4410-4b6b-8f05-a052b451d18f\", userTO.getMemberships().get(0).getRightKey());\n+        assertEquals(\"0cbcabd2-4410-4b6b-8f05-a052b451d18f\", userTO.getMemberships().get(0).getGroupKey());\n         assertEquals(\"createApproval\", userTO.getStatus());\n         assertEquals(Collections.singleton(RESOURCE_NAME_TESTDB), userTO.getResources());\n "}]}