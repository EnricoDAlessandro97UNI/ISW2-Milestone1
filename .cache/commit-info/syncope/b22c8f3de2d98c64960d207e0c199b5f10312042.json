{"sha":"b22c8f3de2d98c64960d207e0c199b5f10312042","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIyMmM4ZjNkZTJkOThjNjQ5NjBkMjA3ZTBjMTk5YjVmMTAzMTIwNDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-09T11:03:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-09T11:03:19Z"},"message":"[SYNCOPE-263] Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1430783 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2fb72f9f9c5912944167b60677e806dab7323798","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2fb72f9f9c5912944167b60677e806dab7323798"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b22c8f3de2d98c64960d207e0c199b5f10312042","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b22c8f3de2d98c64960d207e0c199b5f10312042","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b22c8f3de2d98c64960d207e0c199b5f10312042","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b22c8f3de2d98c64960d207e0c199b5f10312042/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6a623c0ac50b65566f895ad7fa6902aa1e4b2655","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a623c0ac50b65566f895ad7fa6902aa1e4b2655","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6a623c0ac50b65566f895ad7fa6902aa1e4b2655"}],"stats":{"total":41,"additions":25,"deletions":16},"files":[{"sha":"dcc423bd8d5817256385abab8617fb70f6982b4d","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":23,"deletions":14,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b22c8f3de2d98c64960d207e0c199b5f10312042/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b22c8f3de2d98c64960d207e0c199b5f10312042/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=b22c8f3de2d98c64960d207e0c199b5f10312042","patch":"@@ -24,8 +24,8 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.Notification;\n import org.apache.syncope.core.persistence.beans.NotificationTask;\n import org.apache.syncope.core.persistence.beans.SyncopeConf;\n@@ -85,6 +85,9 @@ public class NotificationManager {\n     @Autowired\n     private UserDAO userDAO;\n \n+    /**\n+     * User data binder.\n+     */\n     @Autowired\n     private UserDataBinder userDataBinder;\n \n@@ -125,28 +128,29 @@ public class NotificationManager {\n     private NotificationTask getNotificationTask(final Notification notification, final SyncopeUser user) {\n         connObjectUtil.retrieveVirAttrValues(user, AttributableUtil.getInstance(AttributableType.USER));\n \n-        final List<AbstractAttributable> recipients = new ArrayList<AbstractAttributable>();\n+        final List<SyncopeUser> recipients = new ArrayList<SyncopeUser>();\n \n         if (notification.getRecipients() != null) {\n-            recipients.addAll(searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n+            recipients.addAll(searchDAO.<SyncopeUser>search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                     notification.getRecipients(), AttributableUtil.getInstance(AttributableType.USER)));\n         }\n \n         if (notification.isSelfAsRecipient()) {\n             recipients.add(user);\n         }\n \n-        Set<String> recipientEmails = new HashSet<String>();\n-\n-        for (AbstractAttributable recipient : recipients) {\n+        final Set<String> recipientEmails = new HashSet<String>();\n+        final List<UserTO> recipientTOs = new ArrayList<UserTO>(recipients.size());\n+        for (SyncopeUser recipient : recipients) {\n             connObjectUtil.retrieveVirAttrValues(recipient, AttributableUtil.getInstance(AttributableType.USER));\n \n             String email = getRecipientEmail(notification.getRecipientAttrType(),\n-                    notification.getRecipientAttrName(), (SyncopeUser) recipient);\n+                    notification.getRecipientAttrName(), recipient);\n             if (email == null) {\n                 LOG.warn(\"{} cannot be notified: {} not found\", recipient, notification.getRecipientAttrName());\n             } else {\n                 recipientEmails.add(email);\n+                recipientTOs.add(userDataBinder.getUserTO(recipient));\n             }\n         }\n \n@@ -159,7 +163,7 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n         final Map<String, Object> model = new HashMap<String, Object>();\n         model.put(\"user\", userDataBinder.getUserTO(user));\n         model.put(\"syncopeConf\", this.findAllSyncopeConfs());\n-        model.put(\"recipients\", recipientEmails);\n+        model.put(\"recipients\", recipientTOs);\n         model.put(\"events\", notification.getEvents());\n \n         String htmlBody;\n@@ -214,7 +218,7 @@ public void createTasks(final Long userId, final Set<String> performedTasks)\n     private String getRecipientEmail(\n             final IntMappingType recipientAttrType, final String recipientAttrName, final SyncopeUser user) {\n \n-        final String email;\n+        String email = null;\n \n         switch (recipientAttrType) {\n             case Username:\n@@ -223,21 +227,26 @@ private String getRecipientEmail(\n \n             case UserSchema:\n                 UAttr attr = user.getAttribute(recipientAttrName);\n-                email = attr == null || attr.getValuesAsStrings().isEmpty() ? null : attr.getValuesAsStrings().get(0);\n+                if (attr != null && !attr.getValuesAsStrings().isEmpty()) {\n+                    email = attr.getValuesAsStrings().get(0);\n+                }\n                 break;\n \n             case UserVirtualSchema:\n                 UVirAttr virAttr = user.getVirtualAttribute(recipientAttrName);\n-                email = virAttr == null || virAttr.getValues().isEmpty() ? null : virAttr.getValues().get(0);\n+                if (virAttr != null && !virAttr.getValues().isEmpty()) {\n+                    email = virAttr.getValues().get(0);\n+                }\n                 break;\n \n             case UserDerivedSchema:\n                 UDerAttr derAttr = user.getDerivedAttribute(recipientAttrName);\n-                email = derAttr == null ? null : derAttr.getValue(user.getAttributes());\n+                if (derAttr != null) {\n+                    email = derAttr.getValue(user.getAttributes());\n+                }\n                 break;\n \n             default:\n-                email = null;\n         }\n \n         return email;\n@@ -269,7 +278,7 @@ public void setTaskExecuted(final Long taskId) {\n         taskDAO.save(task);\n     }\n \n-    public Map<String, String> findAllSyncopeConfs() {\n+    protected Map<String, String> findAllSyncopeConfs() {\n         Map<String, String> syncopeConfMap = new HashMap<String, String>();\n         for (SyncopeConf conf : confDAO.findAll()) {\n             syncopeConfMap.put(conf.getKey(), conf.getValue());"},{"sha":"3ee3128ec80bcfeb48cf3b292fedaf5142fafe1f","filename":"core/src/main/resources/mailTemplates/optin.html.vm","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b22c8f3de2d98c64960d207e0c199b5f10312042/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.html.vm","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b22c8f3de2d98c64960d207e0c199b5f10312042/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.html.vm","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.html.vm?ref=b22c8f3de2d98c64960d207e0c199b5f10312042","patch":"@@ -30,7 +30,7 @@ under the License.\n     This message was sent to the following recipients:\n <ul>\n #foreach($recipient in $recipients)\n-  <li>$recipient</i>\n+  <li>$recipient.getAttributeMap().get(\"email\").getValues().get(0)</li>\n #end\n </ul>\n "},{"sha":"cd96d80c7b68b95f2da355bab3b30f2712fb192d","filename":"core/src/main/resources/mailTemplates/optin.txt.vm","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b22c8f3de2d98c64960d207e0c199b5f10312042/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.txt.vm","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b22c8f3de2d98c64960d207e0c199b5f10312042/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.txt.vm","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.txt.vm?ref=b22c8f3de2d98c64960d207e0c199b5f10312042","patch":"@@ -16,7 +16,7 @@ Your email address is $user.getAttributeMap().get(\"email\").getValues().get(0).\n \n This message was sent to the following recipients:\n #foreach($recipient in $recipients)\n-   * $recipient\n+   * $recipient.getAttributeMap().get(\"surname\").getValues().get(0)\n #end\n \n becase one of the following events occurred:"}]}