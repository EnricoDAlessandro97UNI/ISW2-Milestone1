{"sha":"dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRiZTJiNmM0Mjg5NTllYjhhOWYxYWNlMTI3YmQ3YzhmNmUwMjM1YjY=","commit":{"author":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2013-05-17T08:07:29Z"},"committer":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2013-05-17T08:07:29Z"},"message":"code enhancement\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1483684 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"54433486cc5d241553c4fc473280701166156ea5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/54433486cc5d241553c4fc473280701166156ea5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/comments","author":null,"committer":null,"parents":[{"sha":"fca00b0156a41f7828ae273ac3ce025c6f9de039","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fca00b0156a41f7828ae273ac3ce025c6f9de039","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fca00b0156a41f7828ae273ac3ce025c6f9de039"}],"stats":{"total":123,"additions":63,"deletions":60},"files":[{"sha":"56e32ec85e1fb83f1d11b981e3a625c8e4e84a37","filename":"common/src/main/java/org/apache/syncope/common/search/NodeCond.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FNodeCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FNodeCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FNodeCond.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -29,6 +29,8 @@\n @XmlType\r\n public class NodeCond extends AbstractBaseBean {\r\n \r\n+    private static final long serialVersionUID = 661560782247499526L;\r\n+\r\n     @XmlEnum\r\n     @XmlType(name = \"nodeConditionType\")\r\n     public enum Type {\r"},{"sha":"50fa83ddb675d4a96d84c4ba270b17a2476c126e","filename":"common/src/main/java/org/apache/syncope/common/search/ResourceCond.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FResourceCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FResourceCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fsearch%2FResourceCond.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -30,6 +30,8 @@\n @XmlType\r\n public class ResourceCond extends AbstractBaseBean implements SearchCond {\r\n \r\n+    private static final long serialVersionUID = 466054166309460002L;\r\n+\r\n     private String resourceName;\r\n \r\n     public String getResourceName() {\r"},{"sha":"45aa5c87aa2087f117ad433544244c2d5c29a483","filename":"common/src/main/java/org/apache/syncope/common/services/NotificationService.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n-import javax.ws.rs.NotFoundException;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r"},{"sha":"9784adcfa4dac5e32c140afd03050ae7f07e01d8","filename":"common/src/main/java/org/apache/syncope/common/types/AccountPolicySpec.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -91,31 +91,31 @@ public boolean isAllLowerCase() {\n         return allLowerCase;\r\n     }\r\n \r\n-    public void setAllLowerCase(boolean allLowerCase) {\r\n+    public void setAllLowerCase(final boolean allLowerCase) {\r\n         this.allLowerCase = allLowerCase;\r\n     }\r\n \r\n     public boolean isAllUpperCase() {\r\n         return allUpperCase;\r\n     }\r\n \r\n-    public void setAllUpperCase(boolean allUpperCase) {\r\n+    public void setAllUpperCase(final boolean allUpperCase) {\r\n         this.allUpperCase = allUpperCase;\r\n     }\r\n \r\n     public int getMaxLength() {\r\n         return maxLength;\r\n     }\r\n \r\n-    public void setMaxLength(int maxLength) {\r\n+    public void setMaxLength(final int maxLength) {\r\n         this.maxLength = maxLength;\r\n     }\r\n \r\n     public int getMinLength() {\r\n         return minLength;\r\n     }\r\n \r\n-    public void setMinLength(int minLength) {\r\n+    public void setMinLength(final int minLength) {\r\n         this.minLength = minLength;\r\n     }\r\n \r\n@@ -128,7 +128,7 @@ public List<String> getPrefixesNotPermitted() {\n         return prefixesNotPermitted;\r\n     }\r\n \r\n-    public void setPrefixesNotPermitted(List<String> prefixesNotPermitted) {\r\n+    public void setPrefixesNotPermitted(final List<String> prefixesNotPermitted) {\r\n         this.prefixesNotPermitted = prefixesNotPermitted;\r\n     }\r\n \r\n@@ -141,7 +141,7 @@ public List<String> getSchemasNotPermitted() {\n         return schemasNotPermitted;\r\n     }\r\n \r\n-    public void setSchemasNotPermitted(List<String> schemasNotPermitted) {\r\n+    public void setSchemasNotPermitted(final List<String> schemasNotPermitted) {\r\n         this.schemasNotPermitted = schemasNotPermitted;\r\n     }\r\n \r\n@@ -154,7 +154,7 @@ public List<String> getSuffixesNotPermitted() {\n         return suffixesNotPermitted;\r\n     }\r\n \r\n-    public void setSuffixesNotPermitted(List<String> suffixesNotPermitted) {\r\n+    public void setSuffixesNotPermitted(final List<String> suffixesNotPermitted) {\r\n         this.suffixesNotPermitted = suffixesNotPermitted;\r\n     }\r\n \r\n@@ -167,23 +167,23 @@ public List<String> getWordsNotPermitted() {\n         return wordsNotPermitted;\r\n     }\r\n \r\n-    public void setWordsNotPermitted(List<String> wordsNotPermitted) {\r\n+    public void setWordsNotPermitted(final List<String> wordsNotPermitted) {\r\n         this.wordsNotPermitted = wordsNotPermitted;\r\n     }\r\n \r\n     public boolean isPropagateSuspension() {\r\n         return propagateSuspension;\r\n     }\r\n \r\n-    public void setPropagateSuspension(boolean propagateSuspension) {\r\n+    public void setPropagateSuspension(final boolean propagateSuspension) {\r\n         this.propagateSuspension = propagateSuspension;\r\n     }\r\n \r\n     public int getPermittedLoginRetries() {\r\n         return permittedLoginRetries;\r\n     }\r\n \r\n-    public void setPermittedLoginRetries(int permittedLoginRetries) {\r\n+    public void setPermittedLoginRetries(final int permittedLoginRetries) {\r\n         this.permittedLoginRetries = permittedLoginRetries;\r\n     }\r\n }\r"},{"sha":"519c361c653688fd52b483a9809f7ee29258629d","filename":"common/src/main/java/org/apache/syncope/common/types/AttributableType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAttributableType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAttributableType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAttributableType.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -27,7 +27,7 @@ public enum AttributableType {\n     ROLE,\r\n     MEMBERSHIP;\r\n \r\n-    public static AttributableType fromString(String value) {\r\n+    public static AttributableType fromString(final String value) {\r\n         return valueOf(value.toUpperCase());\r\n     }\r\n \r"},{"sha":"8425a13bd7f25217686cc66e68a4d9d53115efba","filename":"common/src/main/java/org/apache/syncope/common/types/ConflictResolutionAction.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConflictResolutionAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConflictResolutionAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConflictResolutionAction.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -32,7 +32,7 @@ public enum ConflictResolutionAction {\n     // sync all\r\n     ALL;\r\n \r\n-    public static ConflictResolutionAction fromString(String value) {\r\n+    public static ConflictResolutionAction fromString(final String value) {\r\n         return ConflictResolutionAction.valueOf(value.toUpperCase());\r\n     }\r\n }\r"},{"sha":"f5119fdae42cb715751de7d2960250862b386b39","filename":"common/src/main/java/org/apache/syncope/common/types/ConnectorCapability.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -35,7 +35,7 @@ public enum ConnectorCapability {\n     SEARCH,\r\n     SYNC;\r\n \r\n-    public static ConnectorCapability fromString(String value) {\r\n+    public static ConnectorCapability fromString(final String value) {\r\n         return ConnectorCapability.valueOf(value.toUpperCase());\r\n     }\r\n \r"},{"sha":"815e22955424a620546f99fddf754af3a60c9dde","filename":"common/src/main/java/org/apache/syncope/common/types/LoggerType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -35,7 +35,7 @@ public enum LoggerType {\n      */\r\n     AUDIT;\r\n \r\n-    public static LoggerType fromString(String value) {\r\n+    public static LoggerType fromString(final String value) {\r\n         return LoggerType.valueOf(value.toUpperCase());\r\n     }\r\n }\r"},{"sha":"705cb37b6e720c3fcb92798ed0f6bbfbd3f984cd","filename":"common/src/main/java/org/apache/syncope/common/types/PasswordPolicySpec.java","status":"modified","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPasswordPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPasswordPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPasswordPolicySpec.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -155,103 +155,103 @@ public boolean isDigitRequired() {\n         return digitRequired;\r\n     }\r\n \r\n-    public void setDigitRequired(boolean digitRequired) {\r\n+    public void setDigitRequired(final boolean digitRequired) {\r\n         this.digitRequired = digitRequired;\r\n     }\r\n \r\n     public boolean isLowercaseRequired() {\r\n         return lowercaseRequired;\r\n     }\r\n \r\n-    public void setLowercaseRequired(boolean lowercaseRequired) {\r\n+    public void setLowercaseRequired(final boolean lowercaseRequired) {\r\n         this.lowercaseRequired = lowercaseRequired;\r\n     }\r\n \r\n     public int getMaxLength() {\r\n         return maxLength;\r\n     }\r\n \r\n-    public void setMaxLength(int maxLength) {\r\n+    public void setMaxLength(final int maxLength) {\r\n         this.maxLength = maxLength;\r\n     }\r\n \r\n     public int getMinLength() {\r\n         return minLength;\r\n     }\r\n \r\n-    public void setMinLength(int minLength) {\r\n+    public void setMinLength(final int minLength) {\r\n         this.minLength = minLength;\r\n     }\r\n \r\n     public boolean isMustEndWithDigit() {\r\n         return mustEndWithDigit;\r\n     }\r\n \r\n-    public void setMustEndWithDigit(boolean mustEndWithDigit) {\r\n+    public void setMustEndWithDigit(final boolean mustEndWithDigit) {\r\n         this.mustEndWithDigit = mustEndWithDigit;\r\n     }\r\n \r\n     public boolean isMustEndWithNonAlpha() {\r\n         return mustEndWithNonAlpha;\r\n     }\r\n \r\n-    public void setMustEndWithNonAlpha(boolean mustEndWithNonAlpha) {\r\n+    public void setMustEndWithNonAlpha(final boolean mustEndWithNonAlpha) {\r\n         this.mustEndWithNonAlpha = mustEndWithNonAlpha;\r\n     }\r\n \r\n     public boolean isMustStartWithDigit() {\r\n         return mustStartWithDigit;\r\n     }\r\n \r\n-    public void setMustStartWithDigit(boolean mustStartWithDigit) {\r\n+    public void setMustStartWithDigit(final boolean mustStartWithDigit) {\r\n         this.mustStartWithDigit = mustStartWithDigit;\r\n     }\r\n \r\n     public boolean isMustStartWithNonAlpha() {\r\n         return mustStartWithNonAlpha;\r\n     }\r\n \r\n-    public void setMustStartWithNonAlpha(boolean mustStartWithNonAlpha) {\r\n+    public void setMustStartWithNonAlpha(final boolean mustStartWithNonAlpha) {\r\n         this.mustStartWithNonAlpha = mustStartWithNonAlpha;\r\n     }\r\n \r\n     public boolean isMustntEndWithDigit() {\r\n         return mustntEndWithDigit;\r\n     }\r\n \r\n-    public void setMustntEndWithDigit(boolean mustntEndWithDigit) {\r\n+    public void setMustntEndWithDigit(final boolean mustntEndWithDigit) {\r\n         this.mustntEndWithDigit = mustntEndWithDigit;\r\n     }\r\n \r\n     public boolean isMustntEndWithNonAlpha() {\r\n         return mustntEndWithNonAlpha;\r\n     }\r\n \r\n-    public void setMustntEndWithNonAlpha(boolean mustntEndWithNonAlpha) {\r\n+    public void setMustntEndWithNonAlpha(final boolean mustntEndWithNonAlpha) {\r\n         this.mustntEndWithNonAlpha = mustntEndWithNonAlpha;\r\n     }\r\n \r\n     public boolean isMustntStartWithDigit() {\r\n         return mustntStartWithDigit;\r\n     }\r\n \r\n-    public void setMustntStartWithDigit(boolean mustntStartWithDigit) {\r\n+    public void setMustntStartWithDigit(final boolean mustntStartWithDigit) {\r\n         this.mustntStartWithDigit = mustntStartWithDigit;\r\n     }\r\n \r\n     public boolean isMustntStartWithNonAlpha() {\r\n         return mustntStartWithNonAlpha;\r\n     }\r\n \r\n-    public void setMustntStartWithNonAlpha(boolean mustntStartWithNonAlpha) {\r\n+    public void setMustntStartWithNonAlpha(final boolean mustntStartWithNonAlpha) {\r\n         this.mustntStartWithNonAlpha = mustntStartWithNonAlpha;\r\n     }\r\n \r\n     public boolean isNonAlphanumericRequired() {\r\n         return nonAlphanumericRequired;\r\n     }\r\n \r\n-    public void setNonAlphanumericRequired(boolean nonAlphanumericRequired) {\r\n+    public void setNonAlphanumericRequired(final boolean nonAlphanumericRequired) {\r\n         this.nonAlphanumericRequired = nonAlphanumericRequired;\r\n     }\r\n \r\n@@ -264,7 +264,7 @@ public List<String> getPrefixesNotPermitted() {\n         return prefixesNotPermitted;\r\n     }\r\n \r\n-    public void setPrefixesNotPermitted(List<String> prefixesNotPermitted) {\r\n+    public void setPrefixesNotPermitted(final List<String> prefixesNotPermitted) {\r\n         this.prefixesNotPermitted = prefixesNotPermitted;\r\n     }\r\n \r\n@@ -277,7 +277,7 @@ public List<String> getSchemasNotPermitted() {\n         return schemasNotPermitted;\r\n     }\r\n \r\n-    public void setSchemasNotPermitted(List<String> schemasNotPermitted) {\r\n+    public void setSchemasNotPermitted(final List<String> schemasNotPermitted) {\r\n         this.schemasNotPermitted = schemasNotPermitted;\r\n     }\r\n \r\n@@ -290,15 +290,15 @@ public List<String> getSuffixesNotPermitted() {\n         return suffixesNotPermitted;\r\n     }\r\n \r\n-    public void setSuffixesNotPermitted(List<String> suffixesNotPermitted) {\r\n+    public void setSuffixesNotPermitted(final List<String> suffixesNotPermitted) {\r\n         this.suffixesNotPermitted = suffixesNotPermitted;\r\n     }\r\n \r\n     public boolean isUppercaseRequired() {\r\n         return uppercaseRequired;\r\n     }\r\n \r\n-    public void setUppercaseRequired(boolean uppercaseRequired) {\r\n+    public void setUppercaseRequired(final boolean uppercaseRequired) {\r\n         this.uppercaseRequired = uppercaseRequired;\r\n     }\r\n \r\n@@ -311,55 +311,55 @@ public List<String> getWordsNotPermitted() {\n         return wordsNotPermitted;\r\n     }\r\n \r\n-    public void setWordsNotPermitted(List<String> wordsNotPermitted) {\r\n+    public void setWordsNotPermitted(final List<String> wordsNotPermitted) {\r\n         this.wordsNotPermitted = wordsNotPermitted;\r\n     }\r\n \r\n     public boolean isAlphanumericRequired() {\r\n         return alphanumericRequired;\r\n     }\r\n \r\n-    public void setAlphanumericRequired(boolean alphanumericRequired) {\r\n+    public void setAlphanumericRequired(final boolean alphanumericRequired) {\r\n         this.alphanumericRequired = alphanumericRequired;\r\n     }\r\n \r\n     public boolean isMustEndWithAlpha() {\r\n         return mustEndWithAlpha;\r\n     }\r\n \r\n-    public void setMustEndWithAlpha(boolean mustEndWithAlpha) {\r\n+    public void setMustEndWithAlpha(final boolean mustEndWithAlpha) {\r\n         this.mustEndWithAlpha = mustEndWithAlpha;\r\n     }\r\n \r\n     public boolean isMustStartWithAlpha() {\r\n         return mustStartWithAlpha;\r\n     }\r\n \r\n-    public void setMustStartWithAlpha(boolean mustStartWithAlpha) {\r\n+    public void setMustStartWithAlpha(final boolean mustStartWithAlpha) {\r\n         this.mustStartWithAlpha = mustStartWithAlpha;\r\n     }\r\n \r\n     public boolean isMustntEndWithAlpha() {\r\n         return mustntEndWithAlpha;\r\n     }\r\n \r\n-    public void setMustntEndWithAlpha(boolean mustntEndWithAlpha) {\r\n+    public void setMustntEndWithAlpha(final boolean mustntEndWithAlpha) {\r\n         this.mustntEndWithAlpha = mustntEndWithAlpha;\r\n     }\r\n \r\n     public boolean isMustntStartWithAlpha() {\r\n         return mustntStartWithAlpha;\r\n     }\r\n \r\n-    public void setMustntStartWithAlpha(boolean mustntStartWithAlpha) {\r\n+    public void setMustntStartWithAlpha(final boolean mustntStartWithAlpha) {\r\n         this.mustntStartWithAlpha = mustntStartWithAlpha;\r\n     }\r\n \r\n     public int getHistoryLength() {\r\n         return historyLength;\r\n     }\r\n \r\n-    public void setHistoryLength(int historyLength) {\r\n+    public void setHistoryLength(final int historyLength) {\r\n         this.historyLength = historyLength;\r\n     }\r\n }\r"},{"sha":"ee7eb917f062c425ff89830b843117beccad90c6","filename":"common/src/main/java/org/apache/syncope/common/types/PolicyType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPolicyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPolicyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPolicyType.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -52,7 +52,7 @@ public String getDescription() {\n         return description;\r\n     }\r\n \r\n-    public static PolicyType fromString(String value) {\r\n+    public static PolicyType fromString(final String value) {\r\n         return PolicyType.valueOf(value.toUpperCase());\r\n     }\r\n }\r"},{"sha":"f809475e6336c35548a8ddf75545b8b19735e909","filename":"common/src/main/java/org/apache/syncope/common/types/PropagationTaskExecStatus.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationTaskExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationTaskExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FPropagationTaskExecStatus.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -43,7 +43,7 @@ public boolean isSuccessful() {\n         return this == SUCCESS || this == SUBMITTED;\r\n     }\r\n \r\n-    public static PropagationTaskExecStatus fromString(String value) {\r\n+    public static PropagationTaskExecStatus fromString(final String value) {\r\n         return PropagationTaskExecStatus.valueOf(value.toUpperCase());\r\n     }\r\n }\r"},{"sha":"492d49527878ddb95c9c9adca5cfc941bee598a5","filename":"common/src/main/java/org/apache/syncope/common/types/ReportExecStatus.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecStatus.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -28,7 +28,7 @@ public enum ReportExecStatus {\n     SUCCESS,\r\n     FAILURE;\r\n \r\n-    public static ReportExecStatus fromString(String value) {\r\n+    public static ReportExecStatus fromString(final String value) {\r\n         return ReportExecStatus.valueOf(value.toUpperCase());\r\n     }\r\n }\r"},{"sha":"6836c18c28d03118acdc934cdce6cf900e507bd2","filename":"common/src/main/java/org/apache/syncope/common/types/ResourceOperation.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FResourceOperation.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -27,7 +27,7 @@ public enum ResourceOperation {\n     UPDATE,\r\n     DELETE;\r\n \r\n-    public static ResourceOperation fromString(String value) {\r\n+    public static ResourceOperation fromString(final String value) {\r\n         return ResourceOperation.valueOf(value.toUpperCase());\r\n     }\r\n }\r"},{"sha":"d25fa5f4a8089e1328d5d42f44353804862a20aa","filename":"common/src/main/java/org/apache/syncope/common/types/SyncPolicySpec.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncPolicySpec.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -77,7 +77,7 @@ public List<String> getuAltSearchSchemas() {\n         return uAltSearchSchemas;\r\n     }\r\n \r\n-    public void setuAltSearchSchemas(List<String> uAltSearchSchemas) {\r\n+    public void setuAltSearchSchemas(final List<String> uAltSearchSchemas) {\r\n         this.uAltSearchSchemas = uAltSearchSchemas;\r\n     }\r\n \r\n@@ -87,7 +87,7 @@ public List<String> getrAltSearchSchemas() {\n         return rAltSearchSchemas;\r\n     }\r\n \r\n-    public void setrAltSearchSchemas(List<String> rAltSearchSchemas) {\r\n+    public void setrAltSearchSchemas(final List<String> rAltSearchSchemas) {\r\n         this.rAltSearchSchemas = rAltSearchSchemas;\r\n     }\r\n \r\n@@ -96,15 +96,15 @@ public String getRoleJavaRule() {\n         return roleJavaRule;\r\n     }\r\n \r\n-    public void setRoleJavaRule(String roleJavaRule) {\r\n+    public void setRoleJavaRule(final String roleJavaRule) {\r\n         this.roleJavaRule = roleJavaRule;\r\n     }\r\n \r\n     public String getUserJavaRule() {\r\n         return userJavaRule;\r\n     }\r\n \r\n-    public void setUserJavaRule(String userJavaRule) {\r\n+    public void setUserJavaRule(final String userJavaRule) {\r\n         this.userJavaRule = userJavaRule;\r\n     }\r\n }\r"},{"sha":"8a02780e830e43ba24c13031ea8d8073ec42a5f8","filename":"common/src/main/java/org/apache/syncope/common/types/TaskType.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FTaskType.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -30,7 +30,7 @@ public enum TaskType {\n \r\n     private String name;\r\n \r\n-    private TaskType(String name) {\r\n+    private TaskType(final String name) {\r\n         this.name = name;\r\n     }\r\n \r\n@@ -39,7 +39,7 @@ public String toString() {\n         return name;\r\n     }\r\n \r\n-    public static TaskType fromString(String name) {\r\n+    public static TaskType fromString(final String name) {\r\n         if (name != null) {\r\n             for (TaskType t : TaskType.values()) {\r\n                 if (t.name.equalsIgnoreCase(name)) {\r"},{"sha":"d2b6700ff7b2eea089d3c7ee675cf61c9b3a8fbd","filename":"common/src/main/java/org/apache/syncope/common/types/UserRequestType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FUserRequestType.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -27,7 +27,7 @@ public enum UserRequestType {\n     UPDATE,\r\n     DELETE;\r\n \r\n-    public static UserRequestType fromString(String value) {\r\n+    public static UserRequestType fromString(final String value) {\r\n         return UserRequestType.valueOf(value.toUpperCase());\r\n     }\r\n \r"},{"sha":"fb9bf89d4b6c2f2405b4e71f42e5fedb2250a91c","filename":"common/src/main/java/org/apache/syncope/common/validation/SyncopeClientCompositeErrorException.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientCompositeErrorException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientCompositeErrorException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientCompositeErrorException.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -31,7 +31,7 @@ public class SyncopeClientCompositeErrorException extends HttpClientErrorExcepti\n \r\n     private Set<SyncopeClientException> exceptions;\r\n \r\n-    public SyncopeClientCompositeErrorException(HttpStatus statusCode) {\r\n+    public SyncopeClientCompositeErrorException(final HttpStatus statusCode) {\r\n         super(statusCode);\r\n         exceptions = new HashSet<SyncopeClientException>();\r\n     }\r\n@@ -40,11 +40,11 @@ public boolean hasExceptions() {\n         return !exceptions.isEmpty();\r\n     }\r\n \r\n-    public boolean hasException(SyncopeClientExceptionType exceptionType) {\r\n+    public boolean hasException(final SyncopeClientExceptionType exceptionType) {\r\n         return getException(exceptionType) != null;\r\n     }\r\n \r\n-    public SyncopeClientException getException(SyncopeClientExceptionType exceptionType) {\r\n+    public SyncopeClientException getException(final SyncopeClientExceptionType exceptionType) {\r\n         boolean found = false;\r\n         SyncopeClientException syncopeClientException = null;\r\n         for (Iterator<SyncopeClientException> itor = exceptions.iterator(); itor.hasNext() && !found;) {\r\n@@ -63,7 +63,7 @@ public Set<SyncopeClientException> getExceptions() {\n         return exceptions;\r\n     }\r\n \r\n-    public boolean addException(SyncopeClientException exception) {\r\n+    public boolean addException(final SyncopeClientException exception) {\r\n         if (exception.getType() == null) {\r\n             throw new IllegalArgumentException(exception + \" does not have the right \"\r\n                     + SyncopeClientExceptionType.class.getName() + \" set\");\r"},{"sha":"dd4833e914fc81b5c8763fa1f2f6dd6ecddf2194","filename":"common/src/main/java/org/apache/syncope/common/validation/SyncopeClientException.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fvalidation%2FSyncopeClientException.java?ref=dbe2b6c428959eb8a9f1ace127bd7c8f6e0235b6","patch":"@@ -36,7 +36,7 @@ public SyncopeClientException() {\n         elements = new HashSet<String>();\r\n     }\r\n \r\n-    public SyncopeClientException(SyncopeClientExceptionType type) {\r\n+    public SyncopeClientException(final SyncopeClientExceptionType type) {\r\n         this();\r\n         setType(type);\r\n     }\r\n@@ -45,27 +45,27 @@ public SyncopeClientExceptionType getType() {\n         return type;\r\n     }\r\n \r\n-    public final void setType(SyncopeClientExceptionType type) {\r\n+    public final void setType(final SyncopeClientExceptionType type) {\r\n         this.type = type;\r\n     }\r\n \r\n-    public boolean addElement(String element) {\r\n+    public boolean addElement(final String element) {\r\n         return elements.add(element);\r\n     }\r\n \r\n-    public boolean removeElement(String element) {\r\n+    public boolean removeElement(final String element) {\r\n         return elements.remove(element);\r\n     }\r\n \r\n     public Set<String> getElements() {\r\n         return elements;\r\n     }\r\n \r\n-    public void setElements(Set<String> elements) {\r\n+    public void setElements(final Set<String> elements) {\r\n         this.elements = elements;\r\n     }\r\n \r\n-    public void setElements(List<String> elements) {\r\n+    public void setElements(final List<String> elements) {\r\n         this.elements.addAll(elements);\r\n     }\r\n \r"}]}