{"sha":"17174c7a3f2288a598cc6b1e216fdb811f18659d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE3MTc0YzdhM2YyMjg4YTU5OGNjNmIxZTIxNmZkYjgxMWYxODY1OWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-19T14:00:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-20T14:57:48Z"},"message":"[SYNCOPE-956] PullCorrelationRule as AccountRule and PasswordRule","tree":{"sha":"01a113debf2ab8eb88a269c6e51913f70de3587c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/01a113debf2ab8eb88a269c6e51913f70de3587c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/17174c7a3f2288a598cc6b1e216fdb811f18659d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17174c7a3f2288a598cc6b1e216fdb811f18659d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/17174c7a3f2288a598cc6b1e216fdb811f18659d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17174c7a3f2288a598cc6b1e216fdb811f18659d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3f47e9bdee9e8ffeb606b2717e34ecbfe2801fb4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3f47e9bdee9e8ffeb606b2717e34ecbfe2801fb4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3f47e9bdee9e8ffeb606b2717e34ecbfe2801fb4"}],"stats":{"total":1515,"additions":852,"deletions":663},"files":[{"sha":"415e7c4bc659f6aa29612de929353ea80714f4c6","filename":"client/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.client.console.widgets.BaseExtWidget;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -65,6 +66,8 @@ public class ClassPathScanImplementationLookup {\n \n     private Map<String, Class<? extends PasswordRuleConf>> passwordRuleConfs;\n \n+    private Map<String, Class<? extends PullCorrelationRuleConf>> pullCorrelationRuleConfs;\n+\n     /**\n      * This method can be overridden by subclasses to customize classpath scan.\n      *\n@@ -84,6 +87,7 @@ public void load() {\n         reportletConfs = new HashMap<>();\n         accountRuleConfs = new HashMap<>();\n         passwordRuleConfs = new HashMap<>();\n+        pullCorrelationRuleConfs = new HashMap<>();\n \n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n         scanner.addIncludeFilter(new AssignableTypeFilter(BasePage.class));\n@@ -94,6 +98,7 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(ReportletConf.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AccountRuleConf.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PasswordRuleConf.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(PullCorrelationRuleConf.class));\n \n         scanner.findCandidateComponents(getBasePackage()).forEach(bd -> {\n             try {\n@@ -128,6 +133,8 @@ public void load() {\n                         accountRuleConfs.put(clazz.getName(), (Class<? extends AccountRuleConf>) clazz);\n                     } else if (PasswordRuleConf.class.isAssignableFrom(clazz)) {\n                         passwordRuleConfs.put(clazz.getName(), (Class<? extends PasswordRuleConf>) clazz);\n+                    } else if (PullCorrelationRuleConf.class.isAssignableFrom(clazz)) {\n+                        pullCorrelationRuleConfs.put(clazz.getName(), (Class<? extends PullCorrelationRuleConf>) clazz);\n                     }\n                 }\n             } catch (Throwable t) {\n@@ -154,6 +161,7 @@ public void load() {\n         reportletConfs = Collections.unmodifiableMap(reportletConfs);\n         accountRuleConfs = Collections.unmodifiableMap(accountRuleConfs);\n         passwordRuleConfs = Collections.unmodifiableMap(passwordRuleConfs);\n+        pullCorrelationRuleConfs = Collections.unmodifiableMap(pullCorrelationRuleConfs);\n \n         LOG.debug(\"Binary previewers found: {}\", previewers);\n         LOG.debug(\"Extension pages found: {}\", extPages);\n@@ -162,6 +170,7 @@ public void load() {\n         LOG.debug(\"Reportlet configurations found: {}\", reportletConfs);\n         LOG.debug(\"Account Rule configurations found: {}\", accountRuleConfs);\n         LOG.debug(\"Password Rule configurations found: {}\", passwordRuleConfs);\n+        LOG.debug(\"Pull Correlation Rule configurations found: {}\", pullCorrelationRuleConfs);\n     }\n \n     public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n@@ -206,4 +215,8 @@ public Map<String, Class<? extends PasswordRuleConf>> getPasswordRuleConfs() {\n         return passwordRuleConfs;\n     }\n \n+    public Map<String, Class<? extends PullCorrelationRuleConf>> getPullCorrelationRuleConfs() {\n+        return pullCorrelationRuleConfs;\n+    }\n+\n }"},{"sha":"96ee931189711dfb1fbfea1e9570dd186126c864","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -45,7 +45,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.report.Schema;\n+import org.apache.syncope.common.lib.Schema;\n import org.apache.syncope.common.lib.report.SearchCondition;\n import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;"},{"sha":"0e23e1bd0bdb4887e1fa896a3c1484526dab75c7","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationModalPanel.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -86,6 +86,7 @@ public ImplementationModalPanel(\n                 : implementation.getType() == ImplementationType.REPORTLET\n                 || implementation.getType() == ImplementationType.ACCOUNT_RULE\n                 || implementation.getType() == ImplementationType.PASSWORD_RULE\n+                || implementation.getType() == ImplementationType.PULL_CORRELATION_RULE\n                 ? ViewMode.JSON_BODY\n                 : ViewMode.JAVA_CLASS;\n         this.create = implementation.getKey() == null;\n@@ -122,6 +123,11 @@ public ImplementationModalPanel(\n                             collect(Collectors.toList());\n                     break;\n \n+                case PULL_CORRELATION_RULE:\n+                    classes = implementationLookup.getPullCorrelationRuleConfs().keySet().stream().\n+                            collect(Collectors.toList());\n+                    break;\n+\n                 default:\n             }\n         }\n@@ -266,6 +272,10 @@ protected void onEvent(final AjaxRequestTarget target) {\n                         clazz = implementationLookup.getPasswordRuleConfs().get(jsonClass.getModelObject());\n                         break;\n \n+                    case PULL_CORRELATION_RULE:\n+                        clazz = implementationLookup.getPullCorrelationRuleConfs().get(jsonClass.getModelObject());\n+                        break;\n+\n                     default:\n                 }\n "},{"sha":"3fcb08e817915dfdef245797de6280a1711b444f","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyModalPanelBuilder.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -18,7 +18,9 @@\n  */\n package org.apache.syncope.client.console.policies;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n@@ -31,6 +33,7 @@\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -40,7 +43,9 @@\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n+import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -115,9 +120,7 @@ public Profile(final T policyTO, final BaseModal<T> modal, final PageReference p\n                         \"field\",\n                         new PropertyModel<List<String>>(policyTO, \"passthroughResources\"),\n                         new ListModel<String>(resources.getObject())));\n-            }\n-\n-            if (policyTO instanceof PasswordPolicyTO) {\n+            } else if (policyTO instanceof PasswordPolicyTO) {\n                 fields.add(new AjaxSpinnerFieldPanel.Builder<Integer>().build(\n                         \"field\",\n                         \"historyLength\",\n@@ -129,6 +132,12 @@ public Profile(final T policyTO, final BaseModal<T> modal, final PageReference p\n                         \"allowNullPassword\",\n                         new PropertyModel<>(policyTO, \"allowNullPassword\"),\n                         false));\n+            } else if (policyTO instanceof PullPolicyTO) {\n+                fields.add(new AjaxDropDownChoicePanel<>(\n+                        \"field\",\n+                        \"conflictResolutionAction\",\n+                        new PropertyModel<>(policyTO, \"conflictResolutionAction\")).\n+                        setChoices(Arrays.asList((Serializable[]) ConflictResolutionAction.values())));\n             }\n \n             add(new ListView<Component>(\"fields\", fields) {"},{"sha":"1cddad3bd020ceec89572f6a80340518a127e184","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -26,7 +26,6 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.stream.Collectors;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -134,19 +133,6 @@ public void populateItem(\n     public ActionsPanel<PolicyRuleWrapper> getActions(final IModel<PolicyRuleWrapper> model) {\n         final ActionsPanel<PolicyRuleWrapper> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<PolicyRuleWrapper>() {\n-\n-            private static final long serialVersionUID = -3722207913631435501L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n-                RuleConf clone = SerializationUtils.clone(model.getObject().getConf());\n-\n-                PolicyRuleDirectoryPanel.this.getTogglePanel().close(target);\n-                send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(new PolicyRuleWrapper(true).setConf(clone), target));\n-            }\n-        }, ActionLink.ActionType.CLONE, StandardEntitlement.POLICY_CREATE);\n         panel.add(new ActionLink<PolicyRuleWrapper>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"4280996c90e0a902de43fa3877e002c2e63d367e","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicySpecModalPanel.java","status":"removed","additions":0,"deletions":344,"changes":344,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3f47e9bdee9e8ffeb606b2717e34ecbfe2801fb4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3f47e9bdee9e8ffeb606b2717e34ecbfe2801fb4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java?ref=3f47e9bdee9e8ffeb606b2717e34ecbfe2801fb4","patch":"@@ -1,344 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.policies;\n-\n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.IOException;\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.rest.ImplementationRestClient;\n-import org.apache.syncope.client.console.rest.PolicyRestClient;\n-import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.MultiPanel;\n-import org.apache.syncope.common.lib.policy.PullPolicyTO;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n-import org.apache.syncope.common.lib.types.ImplementationType;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-\n-public class PolicySpecModalPanel extends AbstractModalPanel<PullPolicyTO> {\n-\n-    private static final long serialVersionUID = 5945391813567245081L;\n-\n-    private enum CorrelationRuleType {\n-        PLAIN_ATTRIBUTES,\n-        CUSTOM;\n-\n-    }\n-\n-    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n-\n-    private final IModel<List<CorrelationRule>> model;\n-\n-    private final PolicyRestClient restClient = new PolicyRestClient();\n-\n-    public PolicySpecModalPanel(\n-            final PullPolicyTO policyTO, final BaseModal<PullPolicyTO> modal, final PageReference pageRef) {\n-\n-        super(modal, pageRef);\n-        modal.setFormModel(policyTO);\n-\n-        add(new AjaxDropDownChoicePanel<>(\n-                \"conflictResolutionAction\",\n-                \"conflictResolutionAction\",\n-                new PropertyModel<>(policyTO, \"conflictResolutionAction\")).\n-                setChoices(Arrays.asList((Serializable[]) ConflictResolutionAction.values())));\n-\n-        model = new PropertyModel<List<CorrelationRule>>(policyTO, \"correlationRules\") {\n-\n-            private static final long serialVersionUID = -8168676563540297301L;\n-\n-            private List<CorrelationRule> rules = policyTO.getCorrelationRules().keySet().stream().\n-                    map(rule -> new CorrelationRule(rule, policyTO.getCorrelationRules().get(rule))).\n-                    collect(Collectors.toList());\n-\n-            @Override\n-            public List<CorrelationRule> getObject() {\n-                return rules;\n-            }\n-\n-            @Override\n-            public void setObject(final List<CorrelationRule> object) {\n-                policyTO.getCorrelationRules().clear();\n-                rules.forEach(rule -> {\n-                    policyTO.getCorrelationRules().put(rule.getAny(), rule.getRule());\n-                });\n-            }\n-        };\n-\n-        add(new MultiPanel<CorrelationRule>(\"correlationRules\", \"correlationRules\", model) {\n-\n-            private static final long serialVersionUID = -2481579077338205547L;\n-\n-            @Override\n-            protected CorrelationRule newModelObject() {\n-                return new CorrelationRule();\n-            }\n-\n-            @Override\n-            protected CorrelationRulePanel getItemPanel(final ListItem<CorrelationRule> item) {\n-                return new CorrelationRulePanel(\"panel\", Model.of(item.getModelObject()));\n-            }\n-        });\n-    }\n-\n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        try {\n-            getItem().getCorrelationRules().clear();\n-            model.getObject().forEach(rule -> {\n-                getItem().getCorrelationRules().put(rule.getAny(), rule.getRule());\n-            });\n-            restClient.updatePolicy(getItem());\n-            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-            this.modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While creating/updating policy\", e);\n-            SyncopeConsoleSession.get().error(\n-                    StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n-        }\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-    }\n-\n-    public static class CorrelationRulePanel extends Panel {\n-\n-        private static final long serialVersionUID = -4708008994320210839L;\n-\n-        private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n-\n-        CorrelationRulePanel(final String id, final IModel<CorrelationRule> rule) {\n-            super(id);\n-\n-            AjaxDropDownChoicePanel<String> anyType = new AjaxDropDownChoicePanel<>(\n-                    \"anyType\", \"any.type\", new PropertyModel<String>(rule.getObject(), \"any\")).\n-                    setNullValid(true).\n-                    setChoices(new AnyTypeRestClient().list());\n-            add(anyType);\n-\n-            final AjaxDropDownChoicePanel<CorrelationRuleType> ruleType = new AjaxDropDownChoicePanel<>(\n-                    \"ruleType\", \"rule.type\", new PropertyModel<CorrelationRuleType>(rule.getObject(), \"type\"), false).\n-                    setNullValid(true).\n-                    setChoices(Arrays.stream(CorrelationRuleType.values()).collect(Collectors.toList()));\n-            add(ruleType);\n-\n-            // ---------------------------------------------------------------\n-            // Custom rule palette\n-            // ---------------------------------------------------------------\n-            List<String> rules = implRestClient.list(ImplementationType.PULL_CORRELATION_RULE).stream().\n-                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n-            final AjaxDropDownChoicePanel<String> customRule = new AjaxDropDownChoicePanel<>(\n-                    \"customRule\", \"rule.custom\", new PropertyModel<String>(rule.getObject(), \"rule\")).setChoices(rules);\n-            customRule.setOutputMarkupPlaceholderTag(true);\n-            add(customRule.setVisible(CorrelationRuleType.CUSTOM == rule.getObject().getType()));\n-            // ---------------------------------------------------------------\n-\n-            // ---------------------------------------------------------------\n-            // JSON rule palette\n-            // ---------------------------------------------------------------\n-            AjaxPalettePanel.Builder<String> jsonRuleBuilder =\n-                    new AjaxPalettePanel.Builder<String>().setName(\"rule.json\");\n-\n-            final PropertyModel<List<String>> jsonRuleModel =\n-                    new PropertyModel<List<String>>(rule.getObject(), \"rule\") {\n-\n-                private static final long serialVersionUID = 3799387950428254072L;\n-\n-                @Override\n-                public List<String> getObject() {\n-                    final List<String> res = new ArrayList<>();\n-                    try {\n-                        JsonNode obj = OBJECT_MAPPER.readTree(rule.getObject().getRule());\n-                        if (obj.isArray()) {\n-                            for (final JsonNode objNode : obj) {\n-                                res.add(objNode.asText());\n-                            }\n-                        }\n-                    } catch (IOException e) {\n-                        LOG.warn(\"Error deserializing json tree\", e);\n-                    }\n-                    return res;\n-                }\n-\n-                @Override\n-                public void setObject(final List<String> object) {\n-                    final StringBuilder bld = new StringBuilder();\n-                    bld.append(\"[\");\n-\n-                    boolean comma = false;\n-                    for (String obj : object) {\n-                        if (comma) {\n-                            bld.append(\",\");\n-                        } else {\n-                            comma = true;\n-                        }\n-                        bld.append(\"\\\"\").append(obj).append(\"\\\"\");\n-                    }\n-                    bld.append(\"]\");\n-                    rule.getObject().setRule(bld.toString());\n-                }\n-            };\n-\n-            final AjaxPalettePanel<String> jsonRule =\n-                    jsonRuleBuilder.build(\"jsonRule\", jsonRuleModel, new AjaxPalettePanel.Builder.Query<String>() {\n-\n-                        private static final long serialVersionUID = -7223078772249308813L;\n-\n-                        @Override\n-                        public List<String> execute(final String filter) {\n-                            return getPlainSchemas(rule.getObject());\n-                        }\n-                    });\n-            jsonRule.hideLabel().setOutputMarkupPlaceholderTag(true);\n-\n-            anyType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                private static final long serialVersionUID = -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(final AjaxRequestTarget target) {\n-                    if (jsonRule.isVisibleInHierarchy()) {\n-                        rule.getObject().setRule(\"[]\");\n-                        jsonRule.reload(target);\n-                        target.add(jsonRule);\n-                    }\n-                }\n-            });\n-\n-            add(jsonRule.setVisible(CorrelationRuleType.PLAIN_ATTRIBUTES == rule.getObject().getType()));\n-            // ---------------------------------------------------------------\n-\n-            ruleType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                private static final long serialVersionUID = -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(final AjaxRequestTarget target) {\n-                    switch (ruleType.getModelObject()) {\n-                        case PLAIN_ATTRIBUTES:\n-                            jsonRule.setVisible(true);\n-                            customRule.setVisible(false);\n-                            jsonRule.reload(target);\n-                            break;\n-\n-                        case CUSTOM:\n-                            jsonRule.setVisible(false);\n-                            customRule.setVisible(true);\n-                            break;\n-\n-                        default:\n-                            customRule.setVisible(false);\n-                            jsonRule.setVisible(false);\n-\n-                    }\n-                    target.add(jsonRule);\n-                    target.add(customRule);\n-                }\n-            });\n-        }\n-\n-        private static List<String> getPlainSchemas(final CorrelationRule rule) {\n-            final List<String> choices = StringUtils.isEmpty(rule.getAny())\n-                    ? new ArrayList<>()\n-                    : new SchemaRestClient().getSchemas(SchemaType.PLAIN,\n-                            rule.getAny().equals(AnyTypeKind.USER.name())\n-                            ? AnyTypeKind.USER\n-                            : rule.getAny().equals(AnyTypeKind.GROUP.name())\n-                            ? AnyTypeKind.GROUP\n-                            : AnyTypeKind.ANY_OBJECT).stream().map(EntityTO::getKey).\n-                            collect(Collectors.toList());\n-\n-            choices.add(\"key\");\n-            choices.add(rule.getAny().equals(AnyTypeKind.USER.name()) ? \"username\" : \"name\");\n-            Collections.sort(choices);\n-            return choices;\n-        }\n-    }\n-\n-    private static class CorrelationRule implements Serializable {\n-\n-        private static final long serialVersionUID = 5250228867297353011L;\n-\n-        private String any;\n-\n-        private CorrelationRuleType type;\n-\n-        private String rule;\n-\n-        CorrelationRule() {\n-            this.any = AnyTypeKind.USER.name();\n-            this.type = CorrelationRuleType.PLAIN_ATTRIBUTES;\n-            this.rule = \"[]\";\n-        }\n-\n-        CorrelationRule(final String any, final String rule) {\n-            this.any = any;\n-            this.type = StringUtils.isEmpty(rule) || rule.trim().startsWith(\"[\") ? CorrelationRuleType.PLAIN_ATTRIBUTES\n-                    : CorrelationRuleType.CUSTOM;\n-            this.rule = rule;\n-        }\n-\n-        public String getAny() {\n-            return any;\n-        }\n-\n-        public CorrelationRuleType getType() {\n-            return type;\n-        }\n-\n-        public String getRule() {\n-            return rule;\n-        }\n-\n-        public void setAny(final String any) {\n-            this.any = any;\n-        }\n-\n-        public void setType(final CorrelationRuleType type) {\n-            this.type = type;\n-        }\n-\n-        public void setRule(final String rule) {\n-            this.rule = rule;\n-        }\n-    }\n-}"},{"sha":"735aa2491953ce7ae442296c36d436f43fb70afe","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PullPolicyDirectoryPanel.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.policies;\n \n+import java.util.List;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.policy.PullPolicyTO;\n@@ -26,6 +27,8 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n@@ -49,6 +52,12 @@ public PullPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n         initResultTable();\n     }\n \n+    @Override\n+    protected void addCustomColumnFields(final List<IColumn<PullPolicyTO, String>> columns) {\n+        columns.add(new PropertyColumn<>(new StringResourceModel(\n+                \"conflictResolutionAction\", this), \"conflictResolutionAction\", \"conflictResolutionAction\"));\n+    }\n+\n     @Override\n     protected void addCustomActions(final ActionsPanel<PullPolicyTO> panel, final IModel<PullPolicyTO> model) {\n         panel.add(new ActionLink<PullPolicyTO>() {\n@@ -58,7 +67,7 @@ protected void addCustomActions(final ActionsPanel<PullPolicyTO> panel, final IM\n             @Override\n             public void onClick(final AjaxRequestTarget target, final PullPolicyTO ignore) {\n                 target.add(policySpecModal.setContent(\n-                        new PolicySpecModalPanel(model.getObject(), policySpecModal, pageRef)));\n+                        new PullPolicyModalPanel(model.getObject(), policySpecModal, pageRef)));\n \n                 policySpecModal.header(new StringResourceModel(\n                         \"policy.rules\", PullPolicyDirectoryPanel.this, Model.of(model.getObject())));"},{"sha":"23a228363ab6f94aee102cb4d22778c5bdca62ab","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PullPolicyModalPanel.java","status":"added","additions":338,"deletions":0,"changes":338,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -0,0 +1,338 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.policies;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n+import org.apache.syncope.client.console.rest.PolicyRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiPanel;\n+import org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf;\n+import org.apache.syncope.common.lib.policy.PullPolicyTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.ImplementationTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.ImplementationEngine;\n+import org.apache.syncope.common.lib.types.ImplementationType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class PullPolicyModalPanel extends AbstractModalPanel<PullPolicyTO> {\n+\n+    private static final long serialVersionUID = 2988891313881271124L;\n+\n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n+\n+    private final PolicyRestClient restClient = new PolicyRestClient();\n+\n+    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    private final LoadableDetachableModel<Map<String, ImplementationTO>> implementations =\n+            new LoadableDetachableModel<Map<String, ImplementationTO>>() {\n+\n+        private static final long serialVersionUID = 5275935387613157437L;\n+\n+        @Override\n+        protected Map<String, ImplementationTO> load() {\n+            return implRestClient.list(ImplementationType.PULL_CORRELATION_RULE).stream().\n+                    collect(Collectors.toMap(EntityTO::getKey, Function.identity()));\n+        }\n+    };\n+\n+    private final IModel<List<CorrelationRule>> model;\n+\n+    public PullPolicyModalPanel(\n+            final PullPolicyTO policyTO,\n+            final BaseModal<PullPolicyTO> modal,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+        modal.setFormModel(policyTO);\n+\n+        model = new PropertyModel<List<CorrelationRule>>(policyTO, \"correlationRules\") {\n+\n+            private static final long serialVersionUID = -8168676563540297301L;\n+\n+            private final List<CorrelationRule> rules = policyTO.getCorrelationRules().keySet().stream().\n+                    map(anyType -> new CorrelationRule(anyType,\n+                    implementations.getObject().get(policyTO.getCorrelationRules().get(anyType)))).\n+                    collect(Collectors.toList());\n+\n+            @Override\n+            public List<CorrelationRule> getObject() {\n+                return rules;\n+            }\n+\n+            @Override\n+            public void setObject(final List<CorrelationRule> object) {\n+                policyTO.getCorrelationRules().clear();\n+                rules.forEach(rule -> {\n+                    policyTO.getCorrelationRules().put(rule.getAnyType(), rule.getImpl().getKey());\n+                });\n+            }\n+        };\n+\n+        add(new MultiPanel<CorrelationRule>(\"correlationRules\", \"correlationRules\", model) {\n+\n+            private static final long serialVersionUID = -2481579077338205547L;\n+\n+            @Override\n+            protected CorrelationRule newModelObject() {\n+                return new CorrelationRule();\n+            }\n+\n+            @Override\n+            protected CorrelationRulePanel getItemPanel(final ListItem<CorrelationRule> item) {\n+                return new CorrelationRulePanel(\"panel\", Model.of(item.getModelObject()));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        try {\n+            getItem().getCorrelationRules().clear();\n+            model.getObject().forEach(rule -> {\n+                getItem().getCorrelationRules().put(rule.getAnyType(), rule.getImplKey());\n+\n+                if (rule.getImpl().getEngine() == ImplementationEngine.JAVA && rule.getDefaultRuleConf() != null) {\n+                    try {\n+                        implRestClient.update(rule.getImpl());\n+                    } catch (Exception e) {\n+                        throw new RuntimeException(e);\n+                    }\n+                }\n+            });\n+            restClient.updatePolicy(getItem());\n+\n+            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+            this.modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating/updating policy\", e);\n+            SyncopeConsoleSession.get().error(\n+                    StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+        }\n+        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+    }\n+\n+    protected class CorrelationRulePanel extends Panel {\n+\n+        private static final long serialVersionUID = -5380414818290018189L;\n+\n+        CorrelationRulePanel(final String id, final IModel<CorrelationRule> correlationRule) {\n+            super(id);\n+\n+            AjaxDropDownChoicePanel<String> anyType = new AjaxDropDownChoicePanel<>(\n+                    \"anyType\", \"anyType\", new PropertyModel<String>(correlationRule.getObject(), \"anyType\")).\n+                    setNullValid(true).\n+                    setChoices(new AnyTypeRestClient().list());\n+            anyType.setNullValid(false);\n+            anyType.setRequired(true);\n+            anyType.setOutputMarkupId(true);\n+            add(anyType);\n+\n+            AjaxDropDownChoicePanel<String> rule = new AjaxDropDownChoicePanel<>(\n+                    \"rule\", \"rule\", new PropertyModel<String>(correlationRule.getObject(), \"implKey\")).\n+                    setChoices(implementations.getObject().keySet().stream().sorted().collect(Collectors.toList()));\n+            rule.setNullValid(false);\n+            rule.setRequired(true);\n+            rule.setOutputMarkupId(true);\n+            add(rule);\n+\n+            PropertyModel<List<String>> defaultRuleConfModel =\n+                    new PropertyModel<List<String>>(correlationRule.getObject().getDefaultRuleConf(), \"schemas\") {\n+\n+                private static final long serialVersionUID = 3799387950428254072L;\n+\n+                @Override\n+                public List<String> getObject() {\n+                    List<String> schemas = new ArrayList<>();\n+                    if (correlationRule.getObject().getDefaultRuleConf() != null) {\n+                        schemas.addAll(correlationRule.getObject().getDefaultRuleConf().getSchemas());\n+                    }\n+                    return schemas;\n+                }\n+\n+                @Override\n+                public void setObject(final List<String> object) {\n+                    if (correlationRule.getObject().getDefaultRuleConf() != null) {\n+                        correlationRule.getObject().getDefaultRuleConf().getSchemas().clear();\n+                        correlationRule.getObject().getDefaultRuleConf().getSchemas().addAll(object);\n+                    }\n+                }\n+            };\n+\n+            AjaxPalettePanel<String> defaultRuleConf = new AjaxPalettePanel.Builder<String>().\n+                    setName(\"defaultRuleConf\").build(\"defaultRuleConf\",\n+                    defaultRuleConfModel, new AjaxPalettePanel.Builder.Query<String>() {\n+\n+                private static final long serialVersionUID = -7223078772249308813L;\n+\n+                @Override\n+                public List<String> execute(final String filter) {\n+                    return getSchemas(correlationRule.getObject());\n+                }\n+            });\n+            defaultRuleConf.hideLabel().setOutputMarkupPlaceholderTag(true);\n+            add(defaultRuleConf.setVisible(correlationRule.getObject().getDefaultRuleConf() != null));\n+\n+            anyType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    if (defaultRuleConf.isVisibleInHierarchy()) {\n+                        correlationRule.getObject().setImpl(null);\n+                        defaultRuleConf.reload(target);\n+                        target.add(defaultRuleConf);\n+                    }\n+                }\n+            });\n+\n+            rule.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    if (correlationRule.getObject().getDefaultRuleConf() == null) {\n+                        defaultRuleConf.setVisible(false);\n+                    } else {\n+                        defaultRuleConf.setVisible(true);\n+                    }\n+                    target.add(defaultRuleConf);\n+                }\n+            });\n+        }\n+\n+        private List<String> getSchemas(final CorrelationRule rule) {\n+            List<String> choices = StringUtils.isEmpty(rule.getAnyType())\n+                    ? new ArrayList<>()\n+                    : schemaRestClient.getSchemas(SchemaType.PLAIN,\n+                            rule.getAnyType().equals(AnyTypeKind.USER.name())\n+                            ? AnyTypeKind.USER\n+                            : rule.getAnyType().equals(AnyTypeKind.GROUP.name())\n+                            ? AnyTypeKind.GROUP\n+                            : AnyTypeKind.ANY_OBJECT).stream().map(EntityTO::getKey).\n+                            collect(Collectors.toList());\n+            choices.add(\"key\");\n+            choices.add(rule.getAnyType().equals(AnyTypeKind.USER.name()) ? \"username\" : \"name\");\n+            Collections.sort(choices);\n+            return choices;\n+        }\n+    }\n+\n+    private class CorrelationRule implements Serializable {\n+\n+        private static final long serialVersionUID = 4221521483948294336L;\n+\n+        private String anyType;\n+\n+        private ImplementationTO impl;\n+\n+        private DefaultPullCorrelationRuleConf defaultRuleConf;\n+\n+        CorrelationRule() {\n+            this.anyType = AnyTypeKind.USER.name();\n+        }\n+\n+        CorrelationRule(final String anyType, final ImplementationTO impl) {\n+            this.anyType = anyType;\n+            setImpl(impl);\n+        }\n+\n+        public String getAnyType() {\n+            return anyType;\n+        }\n+\n+        public void setAnyType(final String anyType) {\n+            this.anyType = anyType;\n+        }\n+\n+        public String getImplKey() {\n+            return impl == null ? null : impl.getKey();\n+        }\n+\n+        public void setImplKey(final String key) {\n+            setImpl(implementations.getObject().get(key));\n+        }\n+\n+        public final void setImpl(final ImplementationTO impl) {\n+            this.impl = impl;\n+            if (impl != null) {\n+                this.defaultRuleConf = null;\n+                try {\n+                    this.defaultRuleConf = OBJECT_MAPPER.readValue(\n+                            impl.getBody(), DefaultPullCorrelationRuleConf.class);\n+                } catch (Exception e) {\n+                    LOG.debug(\"Could not deserialize {} as {}\",\n+                            impl.getBody(), DefaultPullCorrelationRuleConf.class.getName());\n+                }\n+            }\n+        }\n+\n+        public ImplementationTO getImpl() {\n+            if (defaultRuleConf != null) {\n+                try {\n+                    this.impl.setBody(OBJECT_MAPPER.writeValueAsString(defaultRuleConf));\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not serialize {}\", defaultRuleConf);\n+                }\n+            }\n+            return impl;\n+        }\n+\n+        public void setDefaultRuleConf(final DefaultPullCorrelationRuleConf defaultRuleConf) {\n+            this.defaultRuleConf = defaultRuleConf;\n+        }\n+\n+        public DefaultPullCorrelationRuleConf getDefaultRuleConf() {\n+            return defaultRuleConf;\n+        }\n+\n+    }\n+}"},{"sha":"db7f4b80b52017e009bdf2f70b6eee5f9e7cabb2","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":0,"deletions":15,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -26,7 +26,6 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.stream.Collectors;\n-import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -131,20 +130,6 @@ public void populateItem(\n     public ActionsPanel<ReportletWrapper> getActions(final IModel<ReportletWrapper> model) {\n         final ActionsPanel<ReportletWrapper> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<ReportletWrapper>() {\n-\n-            private static final long serialVersionUID = -3722207913631435501L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n-                ReportletDirectoryPanel.this.getTogglePanel().close(target);\n-                ReportletConf clone = SerializationUtils.clone(model.getObject().getConf());\n-\n-                send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                new ReportletWrapper(true).setConf(clone), target));\n-            }\n-        }, ActionLink.ActionType.CLONE, StandardEntitlement.REPORT_CREATE);\n         panel.add(new ActionLink<ReportletWrapper>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"06e126b06af009ef27b221c3b85fef2f36afdf92","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -136,7 +136,7 @@ private Fragment getViewFragment() {\n                 public Panel getPanel(final String panelId) {\n                     return new ListViewPanel.Builder<>(RelationshipTO.class, pageRef).\n                             setItems(relationships.get(relationship)).\n-                            includes(\"rightType\", \"rightKey\").\n+                            includes(\"otherEndType\", \"otherEndKey\").\n                             addAction(new ActionLink<RelationshipTO>() {\n \n                                 private static final long serialVersionUID = -6847033126124401556L;"},{"sha":"bb56ebe04e7b21880aca401d68ffd3dbdbac411b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPullCorrelationRule.groovy","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -17,15 +17,16 @@\n  * under the License.\n  */\n import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond\n-import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision\n import org.identityconnectors.framework.common.objects.ConnectorObject\n \n @CompileStatic\n class MyPullCorrelationRule implements PullCorrelationRule {\n \n   @Override\n-  SearchCond getSearchCond(ConnectorObject connObj) {\n+  SearchCond getSearchCond(ConnectorObject connObj, Provision provision) {\n     \n   }\n }"},{"sha":"b9074b2a55815876ba51a2936d9364e62905b300","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -28,3 +28,4 @@ any.new=New Policy\n any.finish=Submit ${description}\n any.cancel=Cancel ${description}\n compose.title=rules\n+conflictResolutionAction=Conflict Resolution Action"},{"sha":"f93168d16a59759f23bace98e9150a667cca0e16","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -28,3 +28,4 @@ any.new=Nuova Policy\n any.finish=Invia ${description}\n any.cancel=Annulla ${description}\n compose.title=regole\n+conflictResolutionAction=Azione di Risoluzione Conflitti"},{"sha":"b9074b2a55815876ba51a2936d9364e62905b300","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -28,3 +28,4 @@ any.new=New Policy\n any.finish=Submit ${description}\n any.cancel=Cancel ${description}\n compose.title=rules\n+conflictResolutionAction=Conflict Resolution Action"},{"sha":"d161fdc904cbe07fe475eb6908ca43f20ea33b46","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -29,3 +29,4 @@ any.new=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u043f\\u043e\\u043b\\u0438\\u044\n any.finish=\\u0421\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c ${description}\n any.cancel=\\u041e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${description}\n compose.title=rules\n+conflictResolutionAction=Conflict Resolution Action"},{"sha":"00924175b949957781324aaa816e121afe7edb85","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PullPolicyModalPanel$CorrelationRulePanel.html","status":"renamed","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel%24CorrelationRulePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel%24CorrelationRulePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel%24CorrelationRulePanel.html?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -22,11 +22,10 @@\n       <span wicket:id=\"anyType\"/>\n     </div>\n     <div class=\"form-group\">\n-      <span wicket:id=\"ruleType\"/>\n+      <span wicket:id=\"rule\"/>\n     </div>\n     <div class=\"form-group\">\n-      <span wicket:id=\"customRule\"/>\n-      <span wicket:id=\"jsonRule\"/>\n+      <span wicket:id=\"defaultRuleConf\"/>\n     </div>\n   </wicket:panel>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel$CorrelationRulePanel.html"},{"sha":"5ade68c39851211f33185cf482e674000446f8da","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PullPolicyModalPanel.html","status":"renamed","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.html?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -18,9 +18,6 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"form-group\">\n-      <span wicket:id=\"conflictResolutionAction\"/>\n-    </div>\n     <div class=\"form-group\">\n       <span wicket:id=\"correlationRules\"/>\n     </div>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel.html"},{"sha":"a661523628f50b794ea995aec6d19dc338f86671","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PullPolicyModalPanel.properties","status":"renamed","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel.properties?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -14,9 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-rule.custom=Custom\n-rule.json=Plain attributes\n-rule.type=Rule Type\n-any.type=Applies to\n+rule=Rule\n+anyType=Applies to\n correlationRules=Correlation Rules\n-conflictResolutionAction=Conflict Resolution Action","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_pt_BR.properties"},{"sha":"18420ca962cf9680094f0600b238fdb67f44b2ba","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PullPolicyModalPanel_it.properties","status":"renamed","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_it.properties?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -14,9 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-rule.custom=Custom\n-rule.json=Attributi\n-rule.type=Tipo Regola\n-any.type=Applicata a\n+#\n+rule=Regola\n+anyType=Applicata a\n correlationRules=Regole di Correlazione\n-conflictResolutionAction=Azione di Risoluzione Conflitti","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_it.properties"},{"sha":"e8338c279d854da56eba3d8d144384cb2c4d5d66","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PullPolicyModalPanel_pt_BR.properties","status":"renamed","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_pt_BR.properties?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -14,9 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-rule.custom=Custom\n-rule.json=Plain attributes\n-rule.type=Rule Type\n-any.type=Applies to\n+#\n+rule=Rule\n+anyType=Applies to\n correlationRules=Correlation Rules\n-conflictResolutionAction=Conflict Resolution Action","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel.properties"},{"sha":"39701d7dfb46349e0b0ade7e4cc1b8436eb02a53","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PullPolicyModalPanel_ru.properties","status":"renamed","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyModalPanel_ru.properties?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -15,9 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-rule.custom=Custom\n-rule.json=\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u043e JSON\n-rule.type=\\u0422\\u0438\\u043f \\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\n-any.type=\\u041e\\u0431\\u044a\\u0435\\u043a\\u0442 \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u044f \\u043f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0438\n+rule=Rule\n+anyType=\\u041e\\u0431\\u044a\\u0435\\u043a\\u0442 \\u043f\\u0440\\u0438\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u044f \\u043f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0438\n correlationRules=\\u041f\\u0440\\u0430\\u0432\\u0438\\u043b\\u0430 \\u043a\\u043e\\u0440\\u0440\\u0435\\u043b\\u044f\\u0446\\u0438\\u0438\n-conflictResolutionAction=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043f\\u0440\\u0438 \\u0440\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043d\\u0438\\u0438 \\u043a\\u043e\\u043d\\u0444\\u043b\\u0438\\u043a\\u0442\\u043e\\u0432","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_ru.properties"},{"sha":"625e31dbe46f6034944e002cc12f2c16d35005fe","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/Schema.java","status":"renamed","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSchema.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.common.lib.report;\n+package org.apache.syncope.common.lib;\n \n import java.lang.annotation.ElementType;\n import java.lang.annotation.Retention;\n@@ -31,5 +31,7 @@\n \n     SchemaType[] type() default { SchemaType.PLAIN };\n \n-    AnyTypeKind anyTypeKind();\n+    AnyTypeKind anyTypeKind() default AnyTypeKind.USER;\n+\n+    boolean includeFields() default false;\n }","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/Schema.java"},{"sha":"c545b9d0284c6d1867ee49547d1f9367ffc98fa3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractPullCorrelationRuleConf.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPullCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPullCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPullCorrelationRuleConf.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+import javax.xml.bind.annotation.XmlSeeAlso;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+@XmlType\n+@XmlSeeAlso({ DefaultPullCorrelationRuleConf.class })\n+public abstract class AbstractPullCorrelationRuleConf extends AbstractBaseBean implements PullCorrelationRuleConf {\n+\n+    private static final long serialVersionUID = -4080475005967851092L;\n+\n+    private String name;\n+\n+    public AbstractPullCorrelationRuleConf() {\n+        this(StringUtils.EMPTY);\n+        setName(getClass().getName());\n+    }\n+\n+    public AbstractPullCorrelationRuleConf(final String name) {\n+        super();\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public final String getName() {\n+        return name;\n+    }\n+\n+    public final void setName(final String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"81b86c2608fc51ce6baa14936002af2055d13b97","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAccountRuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccountRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccountRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAccountRuleConf.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -25,7 +25,7 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.report.Schema;\n+import org.apache.syncope.common.lib.Schema;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n "},{"sha":"71e74880ddd55738f2914f607e5a02b5fecb074f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPasswordRuleConf.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPasswordRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPasswordRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPasswordRuleConf.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -25,7 +25,7 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.report.Schema;\n+import org.apache.syncope.common.lib.Schema;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n "},{"sha":"c781f50557546c18518b280b23e1e1e898ba48a8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPullCorrelationRuleConf.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.Schema;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+\n+@XmlRootElement(name = \"defaultPullCorrelationRuleConf\")\n+@XmlType\n+public class DefaultPullCorrelationRuleConf extends AbstractPullCorrelationRuleConf implements PullCorrelationRuleConf {\n+\n+    private static final long serialVersionUID = 429126085793346273L;\n+\n+    @Schema(type = { SchemaType.PLAIN }, includeFields = true)\n+    private final List<String> schemas = new ArrayList<>();\n+\n+    @XmlElementWrapper(name = \"schemas\")\n+    @XmlElement(name = \"schema\")\n+    @JsonProperty(\"schemas\")\n+    public List<String> getSchemas() {\n+        return schemas;\n+    }\n+\n+}"},{"sha":"6b840fea848fde49ca15f62f89287b272db56221","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/PullCorrelationRuleConf.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullCorrelationRuleConf.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.policy;\n+\n+public interface PullCorrelationRuleConf extends RuleConf {\n+\n+}"},{"sha":"69b2c45fb8569db94a40b249a76f63ca9f881b42","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/GroupReportletConf.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n+import org.apache.syncope.common.lib.Schema;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.List;"},{"sha":"1608563262e1fe1a64e17976ab6bacb994689d1f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/UserReportletConf.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -26,6 +26,7 @@\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.Schema;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n "},{"sha":"3b824c5d1e97878b856fcca7767543127d15f09a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":25,"deletions":9,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -27,6 +27,7 @@\n import java.util.Set;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.logic.audit.AuditAppender;\n@@ -44,12 +45,12 @@\n import org.apache.syncope.core.provisioning.api.notification.RecipientsProvider;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n-import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRuleConfClass;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconFilterBuilder;\n import org.apache.syncope.core.provisioning.java.data.JEXLItemTransformerImpl;\n import org.apache.syncope.core.provisioning.java.job.GroupMemberProvisionTaskJobDelegate;\n-import org.apache.syncope.core.provisioning.java.pushpull.PlainAttrsPullCorrelationRule;\n import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n import org.apache.syncope.core.spring.security.JWTSSOProvider;\n@@ -78,6 +79,8 @@ public class ClassPathScanImplementationLookup implements ImplementationLookup {\n \n     private Map<Class<? extends PasswordRuleConf>, Class<? extends PasswordRule>> passwordRuleClasses;\n \n+    private Map<Class<? extends PullCorrelationRuleConf>, Class<? extends PullCorrelationRule>> correlationRuleClasses;\n+\n     private Set<Class<?>> auditAppenderClasses;\n \n     @Override\n@@ -106,21 +109,22 @@ public void load() {\n         reportletClasses = new HashMap<>();\n         accountRuleClasses = new HashMap<>();\n         passwordRuleClasses = new HashMap<>();\n+        correlationRuleClasses = new HashMap<>();\n         auditAppenderClasses = new HashSet<>();\n \n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n         scanner.addIncludeFilter(new AssignableTypeFilter(JWTSSOProvider.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(Reportlet.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AccountRule.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PasswordRule.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(PullCorrelationRule.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(ItemTransformer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(SchedTaskJobDelegate.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(ReconFilterBuilder.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(LogicActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PropagationActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PullActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PushActions.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(PullCorrelationRule.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(Validator.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(RecipientsProvider.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AuditAppender.class));\n@@ -166,6 +170,16 @@ public void load() {\n                     }\n                 }\n \n+                if (PullCorrelationRule.class.isAssignableFrom(clazz) && !isAbstractClazz) {\n+                    PullCorrelationRuleConfClass annotation = clazz.getAnnotation(PullCorrelationRuleConfClass.class);\n+                    if (annotation == null) {\n+                        LOG.warn(\"Found pull correlation rule {} without declared configuration\", clazz.getName());\n+                    } else {\n+                        classNames.get(ImplementationType.ACCOUNT_RULE).add(clazz.getName());\n+                        correlationRuleClasses.put(annotation.value(), (Class<? extends PullCorrelationRule>) clazz);\n+                    }\n+                }\n+\n                 if (ItemTransformer.class.isAssignableFrom(clazz) && !isAbstractClazz\n                         && !clazz.equals(JEXLItemTransformerImpl.class)) {\n \n@@ -200,12 +214,6 @@ public void load() {\n                     classNames.get(ImplementationType.PUSH_ACTIONS).add(bd.getBeanClassName());\n                 }\n \n-                if (PullCorrelationRule.class.isAssignableFrom(clazz) && !isAbstractClazz\n-                        && !PlainAttrsPullCorrelationRule.class.isAssignableFrom(clazz)) {\n-\n-                    classNames.get(ImplementationType.PULL_CORRELATION_RULE).add(bd.getBeanClassName());\n-                }\n-\n                 if (Validator.class.isAssignableFrom(clazz) && !isAbstractClazz) {\n                     classNames.get(ImplementationType.VALIDATOR).add(bd.getBeanClassName());\n                 }\n@@ -230,6 +238,7 @@ public void load() {\n         reportletClasses = Collections.unmodifiableMap(reportletClasses);\n         accountRuleClasses = Collections.unmodifiableMap(accountRuleClasses);\n         passwordRuleClasses = Collections.unmodifiableMap(passwordRuleClasses);\n+        correlationRuleClasses = Collections.unmodifiableMap(correlationRuleClasses);\n         auditAppenderClasses = Collections.unmodifiableSet(auditAppenderClasses);\n     }\n \n@@ -264,6 +273,13 @@ public Class<? extends PasswordRule> getPasswordRuleClass(\n         return passwordRuleClasses.get(passwordRuleConfClass);\n     }\n \n+    @Override\n+    public Class<? extends PullCorrelationRule> getPullCorrelationRuleClass(\n+            final Class<? extends PullCorrelationRuleConf> correlationRuleConfClass) {\n+\n+        return correlationRuleClasses.get(correlationRuleConfClass);\n+    }\n+\n     @Override\n     public Set<Class<?>> getAuditAppenderClasses() {\n         return auditAppenderClasses;"},{"sha":"fce4be4f66520528d4186c158862b3aa7aff91b5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/ImplementationLookup.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -21,10 +21,12 @@\n import java.util.Set;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.persistence.api.dao.AccountRule;\n import org.apache.syncope.core.persistence.api.dao.PasswordRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.Reportlet;\n \n public interface ImplementationLookup extends SyncopeLoader {\n@@ -33,11 +35,17 @@ public interface ImplementationLookup extends SyncopeLoader {\n \n     Set<Class<?>> getJWTSSOProviderClasses();\n \n-    Class<? extends Reportlet> getReportletClass(Class<? extends ReportletConf> reportletConfClass);\n+    Class<? extends Reportlet> getReportletClass(\n+            Class<? extends ReportletConf> reportletConfClass);\n \n-    Class<? extends AccountRule> getAccountRuleClass(Class<? extends AccountRuleConf> accountRuleConfClass);\n+    Class<? extends AccountRule> getAccountRuleClass(\n+            Class<? extends AccountRuleConf> accountRuleConfClass);\n \n-    Class<? extends PasswordRule> getPasswordRuleClass(Class<? extends PasswordRuleConf> passwordRuleConfClass);\n+    Class<? extends PasswordRule> getPasswordRuleClass(\n+            Class<? extends PasswordRuleConf> passwordRuleConfClass);\n+\n+    Class<? extends PullCorrelationRule> getPullCorrelationRuleClass(\n+            Class<? extends PullCorrelationRuleConf> pullCorrelationRuleConfClass);\n \n     Set<Class<?>> getAuditAppenderClasses();\n }"},{"sha":"83a82f71b19432f8adcb6b6b31ca14f16ced4b5e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PullCorrelationRule.java","status":"renamed","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRule.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -16,21 +16,27 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.api.pushpull;\n+package org.apache.syncope.core.persistence.api.dao;\n \n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n \n /**\n  * Interface for correlation rule to be evaluated during PullJob execution.\n  */\n public interface PullCorrelationRule {\n \n+    default void setConf(PullCorrelationRuleConf conf) {\n+    }\n+\n     /**\n      * Return a search condition.\n      *\n      * @param connObj connector object.\n+     * @param provision resource provision\n      * @return search condition.\n      */\n-    SearchCond getSearchCond(ConnectorObject connObj);\n+    SearchCond getSearchCond(ConnectorObject connObj, Provision provision);\n }","previous_filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullCorrelationRule.java"},{"sha":"b96a699756784ec62b63c60820700fe18b466309","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PullCorrelationRuleConfClass.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRuleConfClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRuleConfClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRuleConfClass.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.dao;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface PullCorrelationRuleConfClass {\n+\n+    Class<? extends PullCorrelationRuleConf> value();\n+\n+}"},{"sha":"636b78874fe5d752372131d96348319c113b83dd","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultAccountRule.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultAccountRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultAccountRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultAccountRule.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -43,7 +43,6 @@ public void setConf(final AccountRuleConf conf) {\n             throw new IllegalArgumentException(\n                     DefaultAccountRuleConf.class.getName() + \" expected, got \" + conf.getClass().getName());\n         }\n-\n     }\n \n     @Transactional(readOnly = true)"},{"sha":"02cc56888b90a13c85598efda955c71ece1033d0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultPullCorrelationRule.java","status":"renamed","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -16,44 +16,47 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java.pushpull;\n+package org.apache.syncope.core.persistence.jpa.dao;\n \n-import java.util.Arrays;\n-import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n+import org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n-import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n-import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n-import org.apache.syncope.core.provisioning.api.data.ItemTransformer;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRuleConfClass;\n \n-public class PlainAttrsPullCorrelationRule implements PullCorrelationRule {\n+@PullCorrelationRuleConfClass(DefaultPullCorrelationRuleConf.class)\n+public class DefaultPullCorrelationRule implements PullCorrelationRule {\n \n-    private final List<String> plainSchemaNames;\n+    private DefaultPullCorrelationRuleConf conf;\n \n-    private final Provision provision;\n-\n-    public PlainAttrsPullCorrelationRule(final String[] plainSchemaNames, final Provision provision) {\n-        this.plainSchemaNames = Arrays.asList(plainSchemaNames);\n-        this.provision = provision;\n+    @Override\n+    public void setConf(final PullCorrelationRuleConf conf) {\n+        if (conf instanceof DefaultPullCorrelationRuleConf) {\n+            this.conf = DefaultPullCorrelationRuleConf.class.cast(conf);\n+        } else {\n+            throw new IllegalArgumentException(\n+                    DefaultPullCorrelationRuleConf.class.getName() + \" expected, got \" + conf.getClass().getName());\n+        }\n     }\n \n     @Override\n-    public SearchCond getSearchCond(final ConnectorObject connObj) {\n+    public SearchCond getSearchCond(final ConnectorObject connObj, final Provision provision) {\n         Map<String, Item> mappingItems = provision.getMapping().getItems().stream().\n                 collect(Collectors.toMap(Item::getIntAttrName, Function.identity()));\n \n         // search for anys by attribute(s) specified in the policy\n         SearchCond searchCond = null;\n \n-        for (String schema : plainSchemaNames) {\n+        for (String schema : conf.getSchemas()) {\n             Item mappingItem = mappingItems.get(schema);\n             Attribute attr = mappingItem == null\n                     ? null\n@@ -63,21 +66,18 @@ public SearchCond getSearchCond(final ConnectorObject connObj) {\n                         \"Connector object does not contains the attributes to perform the search: \" + schema);\n             }\n \n-            List<Object> values = attr.getValue();\n-            for (ItemTransformer transformer : MappingUtils.getItemTransformers(mappingItem)) {\n-                values = transformer.beforePull(mappingItem, null, values);\n-            }\n-\n             AttributeCond.Type type;\n             String expression = null;\n \n-            if (values == null || values.isEmpty() || (values.size() == 1 && values.get(0) == null)) {\n+            if (attr.getValue() == null || attr.getValue().isEmpty()\n+                    || (attr.getValue().size() == 1 && attr.getValue().get(0) == null)) {\n+\n                 type = AttributeCond.Type.ISNULL;\n             } else {\n                 type = AttributeCond.Type.EQ;\n-                expression = values.size() > 1\n-                        ? values.toString()\n-                        : values.get(0).toString();\n+                expression = attr.getValue().size() > 1\n+                        ? attr.getValue().toString()\n+                        : attr.getValue().get(0).toString();\n             }\n \n             SearchCond nodeCond;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PlainAttrsPullCorrelationRule.java"},{"sha":"5b47a752b3ed58c21ecf2476db0570db76744154","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/DummyImplementationLookup.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyImplementationLookup.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -22,14 +22,17 @@\n import java.util.Set;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.dao.AccountRule;\n import org.apache.syncope.core.persistence.api.dao.PasswordRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.Reportlet;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultAccountRule;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultPasswordRule;\n+import org.apache.syncope.core.persistence.jpa.dao.DefaultPullCorrelationRule;\n import org.springframework.stereotype.Component;\n \n @Component\n@@ -76,6 +79,13 @@ public Class<? extends PasswordRule> getPasswordRuleClass(\n         return DefaultPasswordRule.class;\n     }\n \n+    @Override\n+    public Class<? extends PullCorrelationRule> getPullCorrelationRuleClass(\n+            final Class<? extends PullCorrelationRuleConf> pullCorrelationRuleConfClass) {\n+\n+        return DefaultPullCorrelationRule.class;\n+    }\n+\n     @Override\n     public Set<Class<?>> getAuditAppenderClasses() {\n         return Collections.emptySet();"},{"sha":"13013950dd60f59f7a878d5bbf59b7d042b1e3b6","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PolicyTest.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -26,8 +26,8 @@\n \n import java.util.List;\n import java.util.UUID;\n-import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.syncope.common.lib.types.ImplementationType;\n@@ -44,7 +44,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n-import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n \n @Transactional(\"Master\")\n public class PolicyTest extends AbstractTest {\n@@ -72,11 +72,12 @@ public void findByKey() {\n \n         CorrelationRule rule = policy.getCorrelationRule(anyTypeDAO.findUser()).orElse(null);\n         assertNotNull(rule);\n-        String[] plainSchemas = POJOHelper.deserialize(rule.getImplementation().getBody(), String[].class);\n-        assertNotNull(plainSchemas);\n-        assertEquals(2, plainSchemas.length);\n-        assertTrue(ArrayUtils.contains(plainSchemas, \"username\"));\n-        assertTrue(ArrayUtils.contains(plainSchemas, \"firstname\"));\n+        DefaultPullCorrelationRuleConf ruleConf =\n+                POJOHelper.deserialize(rule.getImplementation().getBody(), DefaultPullCorrelationRuleConf.class);\n+        assertNotNull(ruleConf);\n+        assertEquals(2, ruleConf.getSchemas().size());\n+        assertTrue(ruleConf.getSchemas().contains(\"username\"));\n+        assertTrue(ruleConf.getSchemas().contains(\"firstname\"));\n     }\n \n     @Test"},{"sha":"7c2298d7736e0d7612cad0ce825c505a7691603c","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -635,7 +635,7 @@ under the License.\n   <PullPolicy id=\"66691e96-285f-4464-bc19-e68384ea4c85\" description=\"a pull policy\" conflictResolutionAction=\"IGNORE\"/>\n   <PullPolicy id=\"880f8553-069b-4aed-9930-2cd53873f544\" description=\"another pull policy\" conflictResolutionAction=\"ALL\"/>\n   <Implementation id=\"TestPullCorrelationRule\" type=\"PULL_CORRELATION_RULE\" engine=\"JAVA\"\n-                  body='[\"username\",\"firstname\"]'/>\n+                  body='{\"@class\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"name\":\"org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf\",\"schemas\":[\"username\",\"firstname\"]}'/>\n   <CorrelationRule id=\"10e3d196-7486-4c88-aefd-59e40d93a0c1\" pullPolicy_id=\"880f8553-069b-4aed-9930-2cd53873f544\" \n                    anyType_id=\"USER\" implementation_id=\"TestPullCorrelationRule\"/>\n   <PullPolicy id=\"4ad10d94-e002-4b3f-b771-16089cc71da9\" description=\"pull policy 1\" conflictResolutionAction=\"IGNORE\"/>"},{"sha":"73d653ef843ad64f894117e5003b93580f2213bd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ImplementationDataBinderImpl.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FImplementationDataBinderImpl.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -39,7 +39,7 @@\n import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n-import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconFilterBuilder;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n@@ -151,11 +151,13 @@ public void update(final Implementation implementation, final ImplementationTO i\n                     throw sce;\n                 }\n             } else if (implementation.getType() == ImplementationType.ACCOUNT_RULE\n-                    || implementation.getType() == ImplementationType.PASSWORD_RULE) {\n+                    || implementation.getType() == ImplementationType.PASSWORD_RULE\n+                    || implementation.getType() == ImplementationType.PULL_CORRELATION_RULE) {\n \n                 RuleConf rule = POJOHelper.deserialize(implementation.getBody(), RuleConf.class);\n                 if (rule == null) {\n-                    sce.getElements().add(\"Could not deserialize as neither Account nor Password RuleConf\");\n+                    sce.getElements().\n+                            add(\"Could not deserialize as neither Account, Password nor PullCorrelation RuleConf\");\n                     throw sce;\n                 }\n             } else {"},{"sha":"e39f3291acf7b1e2181b07e25e2c82fbb8eef05f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/PolicyDataBinderImpl.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n@@ -142,18 +143,16 @@ private <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO po\n                     CorrelationRule correlationRule = pullPolicy.getCorrelationRule(anyType).orElse(null);\n                     if (correlationRule == null) {\n                         correlationRule = entityFactory.newEntity(CorrelationRule.class);\n-                        correlationRule.setAnyType(anyTypeDAO.find(entry.getKey()));\n+                        correlationRule.setAnyType(anyType);\n                         correlationRule.setPullPolicy(pullPolicy);\n                         pullPolicy.add(correlationRule);\n                     }\n \n                     Implementation implementation = implementationDAO.find(entry.getValue());\n                     if (implementation == null) {\n-                        LOG.debug(\"Invalid \" + Implementation.class.getSimpleName() + \" {}, ignoring...\",\n-                                entry.getValue());\n-                    } else {\n-                        correlationRule.setImplementation(implementation);\n+                        throw new NotFoundException(\"Implementation \" + entry.getValue());\n                     }\n+                    correlationRule.setImplementation(implementation);\n                 }\n             });\n             // remove all rules not contained in the TO"},{"sha":"094e88b18383d6e9cc1eca54fee6645eea59ab81","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":14,"deletions":17,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -24,7 +24,6 @@\n import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n@@ -66,7 +65,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n-import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.apache.syncope.core.provisioning.api.data.ItemTransformer;\n import org.apache.syncope.core.spring.ImplementationManager;\n@@ -267,9 +266,12 @@ private List<String> findByConnObjectKeyItem(\n     }\n \n     private List<String> findByCorrelationRule(\n-            final ConnectorObject connObj, final PullCorrelationRule rule, final AnyTypeKind type) {\n+            final ConnectorObject connObj,\n+            final Provision provision,\n+            final PullCorrelationRule rule,\n+            final AnyTypeKind type) {\n \n-        return searchDAO.search(rule.getSearchCond(connObj), type).stream().\n+        return searchDAO.search(rule.getSearchCond(connObj, provision), type).stream().\n                 map(Entity::getKey).collect(Collectors.toList());\n     }\n \n@@ -292,24 +294,19 @@ public List<String> findExisting(\n                 ? Optional.empty()\n                 : provision.getResource().getPullPolicy().getCorrelationRule(provision.getAnyType());\n \n-        PullCorrelationRule rule = null;\n+        Optional<PullCorrelationRule> rule = Optional.empty();\n         if (correlationRule.isPresent()) {\n-            if (correlationRule.get().getImplementation().getBody().charAt(0) == '[') {\n-                rule = new PlainAttrsPullCorrelationRule(POJOHelper.deserialize(\n-                        correlationRule.get().getImplementation().getBody(), String[].class), provision);\n-            } else {\n-                try {\n-                    rule = ImplementationManager.build(correlationRule.get().getImplementation());\n-                } catch (Exception e) {\n-                    LOG.error(\"While building {}\", correlationRule.get().getImplementation(), e);\n-                }\n+            try {\n+                rule = ImplementationManager.buildPullCorrelationRule(correlationRule.get().getImplementation());\n+            } catch (Exception e) {\n+                LOG.error(\"While building {}\", correlationRule.get().getImplementation(), e);\n             }\n         }\n \n         try {\n-            return rule == null\n-                    ? findByConnObjectKeyItem(uid, provision, anyUtils)\n-                    : findByCorrelationRule(connObj, rule, anyUtils.getAnyTypeKind());\n+            return rule.isPresent()\n+                    ? findByCorrelationRule(connObj, provision, rule.get(), anyUtils.getAnyTypeKind())\n+                    : findByConnObjectKeyItem(uid, provision, anyUtils);\n         } catch (RuntimeException e) {\n             return Collections.<String>emptyList();\n         }"},{"sha":"51ac7add85eea07ab0e8bb15e76e22d3af68815e","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/DummyImplementationLookup.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyImplementationLookup.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -22,14 +22,17 @@\n import java.util.Set;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.dao.AccountRule;\n import org.apache.syncope.core.persistence.api.dao.PasswordRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.Reportlet;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultAccountRule;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultPasswordRule;\n+import org.apache.syncope.core.persistence.jpa.dao.DefaultPullCorrelationRule;\n import org.springframework.stereotype.Component;\n \n @Component\n@@ -76,6 +79,13 @@ public Class<? extends PasswordRule> getPasswordRuleClass(\n         return DefaultPasswordRule.class;\n     }\n \n+    @Override\n+    public Class<? extends PullCorrelationRule> getPullCorrelationRuleClass(\n+            final Class<? extends PullCorrelationRuleConf> pullCorrelationRuleConfClass) {\n+\n+        return DefaultPullCorrelationRule.class;\n+    }\n+\n     @Override\n     public Set<Class<?>> getAuditAppenderClasses() {\n         return Collections.emptySet();"},{"sha":"dfa4eadd14c9dfa7bac7367039a2d1a9ab596c8a","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/ImplementationManager.java","status":"modified","additions":38,"deletions":1,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FImplementationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FImplementationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FImplementationManager.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -25,12 +25,14 @@\n import java.util.Optional;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.dao.AccountRule;\n import org.apache.syncope.core.persistence.api.dao.PasswordRule;\n import org.apache.syncope.core.persistence.api.dao.Reportlet;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -93,7 +95,7 @@ public static Optional<AccountRule> buildAccountRule(final Implementation impl)\n                 Class<? extends AccountRule> ruleClass = ApplicationContextProvider.getApplicationContext().\n                         getBean(ImplementationLookup.class).getAccountRuleClass(ruleConf.getClass());\n                 if (ruleClass == null) {\n-                    LOG.warn(\"Could not find matching password rule for {}\", impl.getClass());\n+                    LOG.warn(\"Could not find matching account rule for {}\", impl.getClass());\n                 } else {\n                     // fetch (or create) rule\n                     if (ApplicationContextProvider.getBeanFactory().containsSingleton(ruleClass.getName())) {\n@@ -146,6 +148,41 @@ public static Optional<PasswordRule> buildPasswordRule(final Implementation impl\n         }\n     }\n \n+    public static Optional<PullCorrelationRule> buildPullCorrelationRule(final Implementation impl)\n+            throws InstantiationException, IllegalAccessException {\n+\n+        switch (impl.getEngine()) {\n+            case GROOVY:\n+                return Optional.of(ImplementationManager.<PullCorrelationRule>buildGroovy(impl));\n+\n+            case JAVA:\n+            default:\n+                PullCorrelationRule rule = null;\n+\n+                PullCorrelationRuleConf ruleConf =\n+                        POJOHelper.deserialize(impl.getBody(), PullCorrelationRuleConf.class);\n+                Class<? extends PullCorrelationRule> ruleClass = ApplicationContextProvider.getApplicationContext().\n+                        getBean(ImplementationLookup.class).getPullCorrelationRuleClass(ruleConf.getClass());\n+                if (ruleClass == null) {\n+                    LOG.warn(\"Could not find matching pull correlation rule for {}\", impl.getClass());\n+                } else {\n+                    // fetch (or create) rule\n+                    if (ApplicationContextProvider.getBeanFactory().containsSingleton(ruleClass.getName())) {\n+                        rule = (PullCorrelationRule) ApplicationContextProvider.getBeanFactory().\n+                                getSingleton(ruleClass.getName());\n+                    } else {\n+                        rule = (PullCorrelationRule) ApplicationContextProvider.getBeanFactory().\n+                                createBean(ruleClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+                        ApplicationContextProvider.getBeanFactory().\n+                                registerSingleton(ruleClass.getName(), rule);\n+                    }\n+                    rule.setConf(ruleConf);\n+                }\n+\n+                return Optional.ofNullable(rule);\n+        }\n+    }\n+\n     public static <T> T build(final Implementation impl)\n             throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n "},{"sha":"1f0d38322c14b93a9e348279b12a53afc20da136","filename":"core/spring/src/test/java/org/apache/syncope/core/spring/security/DummyImplementationLookup.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDummyImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDummyImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDummyImplementationLookup.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -22,11 +22,13 @@\n import java.util.Set;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.dao.AccountRule;\n import org.apache.syncope.core.persistence.api.dao.PasswordRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.Reportlet;\n \n public class DummyImplementationLookup implements ImplementationLookup {\n@@ -72,6 +74,13 @@ public Class<? extends PasswordRule> getPasswordRuleClass(\n         return TestPasswordRule.class;\n     }\n \n+    @Override\n+    public Class<? extends PullCorrelationRule> getPullCorrelationRuleClass(\n+            final Class<? extends PullCorrelationRuleConf> pullCorrelationRuleConfClass) {\n+\n+        return null;\n+    }\n+\n     @Override\n     public Set<Class<?>> getAuditAppenderClasses() {\n         return Collections.emptySet();"},{"sha":"293003839b812afe10be30b45d34a9d915617289","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/DummyPullCorrelationRule.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRule.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRuleConfClass;\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n+\n+@PullCorrelationRuleConfClass(DummyPullCorrelationRuleConf.class)\n+public class DummyPullCorrelationRule implements PullCorrelationRule {\n+\n+    @Override\n+    public SearchCond getSearchCond(final ConnectorObject connObj, final Provision provision) {\n+        return new SearchCond();\n+    }\n+\n+}"},{"sha":"e54482344db69c9a93db5b8f6cc8116da05f76ee","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/DummyPullCorrelationRuleConf.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRuleConf.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import org.apache.syncope.common.lib.policy.AbstractPullCorrelationRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n+\n+public class DummyPullCorrelationRuleConf\n+        extends AbstractPullCorrelationRuleConf implements PullCorrelationRuleConf {\n+\n+    private static final long serialVersionUID = -2984203196323732531L;\n+\n+}"},{"sha":"d285ba6b82815bda4c10d952b9e4b4df41186b88","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -28,7 +28,9 @@\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.DefaultAccountRuleConf;\n import org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.DefaultPullCorrelationRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.AuditReportletConf;\n import org.apache.syncope.common.lib.report.GroupReportletConf;\n import org.apache.syncope.common.lib.report.ReconciliationReportletConf;\n@@ -51,6 +53,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.PasswordRule;\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.Reportlet;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n@@ -59,6 +62,7 @@\n import org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultAccountRule;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultPasswordRule;\n+import org.apache.syncope.core.persistence.jpa.dao.DefaultPullCorrelationRule;\n import org.apache.syncope.core.provisioning.java.propagation.DBPasswordPropagationActions;\n import org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions;\n import org.apache.syncope.core.provisioning.java.propagation.LDAPPasswordPropagationActions;\n@@ -116,6 +120,18 @@ public class ITImplementationLookup implements ImplementationLookup {\n         }\n     };\n \n+    private static final Map<\n+            Class<? extends PullCorrelationRuleConf>, Class<? extends PullCorrelationRule>> CORRELATION_RULE_CLASSES =\n+            new HashMap<Class<? extends PullCorrelationRuleConf>, Class<? extends PullCorrelationRule>>() {\n+\n+        private static final long serialVersionUID = 3109256773218160485L;\n+\n+        {\n+            put(DummyPullCorrelationRuleConf.class, DummyPullCorrelationRule.class);\n+            put(DefaultPullCorrelationRuleConf.class, DefaultPullCorrelationRule.class);\n+        }\n+    };\n+\n     private static final Set<Class<?>> AUDITAPPENDER_CLASSES = new HashSet<>(\n             Arrays.asList(TestFileAuditAppender.class, TestFileRewriteAuditAppender.class));\n \n@@ -176,6 +192,7 @@ public class ITImplementationLookup implements ImplementationLookup {\n             put(ImplementationType.PUSH_ACTIONS, classNames);\n \n             classNames = new HashSet<>();\n+            classNames.add(DummyPullCorrelationRule.class.getName());\n             put(ImplementationType.PULL_CORRELATION_RULE, classNames);\n \n             classNames = new HashSet<>();\n@@ -277,6 +294,13 @@ public Class<? extends PasswordRule> getPasswordRuleClass(\n         return PASSWORD_RULE_CLASSES.get(passwordRuleConfClass);\n     }\n \n+    @Override\n+    public Class<? extends PullCorrelationRule> getPullCorrelationRuleClass(\n+            final Class<? extends PullCorrelationRuleConf> pullCorrelationRuleConfClass) {\n+\n+        return CORRELATION_RULE_CLASSES.get(pullCorrelationRuleConfClass);\n+    }\n+\n     @Override\n     public Set<Class<?>> getAuditAppenderClasses() {\n         return AUDITAPPENDER_CLASSES;"},{"sha":"ca6f63d7783c4862f43ca1da1b1668c7e21e600e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":15,"deletions":54,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.Policies;\n import org.apache.syncope.client.console.pages.Realms;\n-import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.TextField;\n@@ -457,8 +456,7 @@ public void createUpdateDeleteAccountPolicy() {\n         deleteAccountPolicy(description);\n     }\n \n-    private void composeDefaultAccountPolicy(final String policyDescription, final String ruleName) {\n-\n+    private void composeDefaultAccountPolicy(final String policyDescription) {\n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", policyDescription);\n \n@@ -477,27 +475,16 @@ private void composeDefaultAccountPolicy(final String policyDescription, final S\n \n         FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n-        formTester.setValue(\"view:name:textField\", ruleName);\n-        formTester.setValue(\"view:configuration:dropDownChoiceField\", \"0\");\n+        formTester.setValue(\"view:rule:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:\"\n-                + \"container:content:wizard:form:view:bean:propView:1:value:spinner\", 0);\n-\n         formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n-        formTester.setValue(\"view:bean:propView:1:value:spinner\", \"6\");\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n-                + \"content:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n-                ruleName);\n-\n-        assertNotNull(component);\n-\n         TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:exit\");\n \n@@ -508,7 +495,7 @@ private void composeDefaultAccountPolicy(final String policyDescription, final S\n     public void createComposeDeleteAccountPolicy() {\n         final String description = \"Account Policy To Be Composed\";\n         createAccountPolicy(description);\n-        composeDefaultAccountPolicy(description, \"myrule\");\n+        composeDefaultAccountPolicy(description);\n         deleteAccountPolicy(description);\n     }\n \n@@ -585,26 +572,16 @@ public void createComposeDeletePasswordPolicy() {\n \n         FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n-        formTester.setValue(\"view:name:textField\", \"myrule\");\n-        formTester.setValue(\"view:configuration:dropDownChoiceField\", \"0\");\n+        formTester.setValue(\"view:rule:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:\"\n-                + \"container:content:wizard:form:view:bean:propView:0:value:spinner\", 0);\n-\n         formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n-                + \"content:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n-                \"myrule\");\n-\n-        assertNotNull(component);\n-\n         TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:exit\");\n \n@@ -670,8 +647,8 @@ public void createComposeDeletePullPolicy() {\n \n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n-\n         assertNotNull(component);\n+\n         TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n@@ -687,9 +664,15 @@ public void createComposeDeletePullPolicy() {\n         TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:content:\"\n                 + \"correlationRules:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n \n-        formTester.setValue(\"content:conflictResolutionAction:dropDownChoiceField\", \"1\");\n-        formTester.setValue(\"content:correlationRules:multiValueContainer:innerForm:content:view:0:panel:\"\n-                + \"jsonRule:paletteField:recorder\", \"fullname\");\n+        component = findComponentById(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:content:\"\n+                + \"correlationRules:multiValueContainer:innerForm:content:view:0:panel:rule\",\n+                \"dropDownChoiceField\");\n+        assertNotNull(component);\n+\n+        formTester.setValue(component, \"0\");\n+        TESTER.executeAjaxEvent(component, Constants.ON_CHANGE);\n+        formTester.setValue(component, \"0\");\n \n         TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:footer:inputs:0:submit\");\n@@ -699,28 +682,6 @@ public void createComposeDeletePullPolicy() {\n \n         closeCallBack(modal);\n \n-        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n-                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n-\n-        assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n-                + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n-\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\", Modal.class);\n-\n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:\"\n-                + \"content:conflictResolutionAction:dropDownChoiceField\", ConflictResolutionAction.FIRSTMATCH);\n-\n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:\"\n-                + \"content:correlationRules:multiValueContainer:innerForm:content:view:0:panel:\"\n-                + \"jsonRule:paletteField:recorder\", \"fullname\");\n-\n-        TESTER.clickLink(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:footer:buttons:0:button\");\n-\n-        closeCallBack(modal);\n-\n         deletePullPolicy(description);\n     }\n \n@@ -729,7 +690,7 @@ public void issueSYNCOPE1030() {\n         final String description = \"SYNCOPE-1030\";\n         // Create account policy\n         createAccountPolicy(description);\n-        composeDefaultAccountPolicy(description, \"issue\");\n+        composeDefaultAccountPolicy(description);\n \n         // goto realms\n         TESTER.clickLink(\"body:realmsLI:realms\");"},{"sha":"6d75a0cf055341beb2429a43731d232cf7c31794","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ReportsITCase.java","status":"modified","additions":0,"deletions":119,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -91,41 +91,6 @@ private void delete(final String name) {\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteReport\"));\n     }\n \n-    private void deleteReportlet(final String report, final String reportlet) {\n-        TESTER.clickLink(\"body:reportsLI:reports\");\n-\n-        Component result = findComponentByProp(\n-                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n-                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", report);\n-\n-        assertNotNull(result);\n-\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n-                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n-\n-        result = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n-                + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n-                + \"groupForm:checkgroup:dataTable\", reportlet);\n-\n-        assertNotNull(result);\n-\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:\"\n-                + \"form:content:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:actions:\"\n-                + \"actions:actionRepeater:2:action:action\"));\n-\n-        TESTER.assertInfoMessages(\"Operation executed successfully\");\n-        TESTER.cleanupFeedbackMessages();\n-\n-        assertNull(findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n-                + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n-                + \"groupForm:checkgroup:dataTable\", reportlet));\n-    }\n-\n     @Test\n     public void read() {\n         Component result = findComponentByProp(\n@@ -161,90 +126,6 @@ public void read() {\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"reconciliation\"));\n     }\n \n-    @Test\n-    public void cloneReportlets() {\n-        final String report = \"test\";\n-        final String reportlet = \"myClone\";\n-\n-        Component result = findComponentByProp(\n-                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n-                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", report);\n-\n-        assertNotNull(result);\n-\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n-                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n-\n-        result = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n-                + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n-                + \"groupForm:checkgroup:dataTable\", \"testUserReportlet\");\n-\n-        assertNotNull(result);\n-\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form:\"\n-                + \"content:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:actions:\"\n-                + \"actions:actionRepeater:0:action:action\");\n-\n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n-                + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n-\n-        formTester.setValue(\"view:name:textField\", reportlet);\n-        formTester.submit(\"buttons:finish\");\n-\n-        TESTER.assertInfoMessages(\"Operation executed successfully\");\n-        TESTER.cleanupFeedbackMessages();\n-\n-        deleteReportlet(report, reportlet);\n-\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n-                + \"outer:form:content:container:content:exit\");\n-\n-        TESTER.assertRenderedPage(Reports.class);\n-    }\n-\n-    @Test\n-    public void createReportlets() {\n-        final String report = \"test\";\n-        final String reportlet = \"myNewReportlet\";\n-\n-        Component result = findComponentByProp(\n-                \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n-                + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", report);\n-\n-        assertNotNull(result);\n-\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n-                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n-\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n-                + \"outer:form:content:container:content:add\");\n-\n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n-                + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n-\n-        formTester.setValue(\"view:name:textField\", reportlet);\n-        formTester.setValue(\"view:configuration:dropDownChoiceField\", \"1\");\n-        formTester.submit(\"buttons:next\");\n-\n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n-                + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n-        formTester.submit(\"buttons:finish\");\n-\n-        TESTER.assertInfoMessages(\"Operation executed successfully\");\n-        TESTER.cleanupFeedbackMessages();\n-\n-        deleteReportlet(report, reportlet);\n-\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n-                + \"outer:form:content:container:content:exit\");\n-\n-        TESTER.assertRenderedPage(Reports.class);\n-    }\n-\n     @Test\n     public void update() {\n         createReport(\"updateReport\");"},{"sha":"ff417f6b4a887cb9e13bb6c12cdb75366da2a4d7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -443,7 +443,7 @@ public void createSchedTask() {\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"test\");\n-        formTester.select(\"view:jobDelegateClassName:dropDownChoiceField\", 0);\n+        formTester.select(\"view:jobDelegate:dropDownChoiceField\", 0);\n \n         formTester.submit(\"buttons:next\");\n         TESTER.cleanupFeedbackMessages();"},{"sha":"d1c07ba9ce1f509d94aa1f8ee12a9be1d7c43b0c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -152,7 +152,6 @@ public void editRelationships() {\n         formTester.setValue(\"view:relationships:specification:type:dropDownChoiceField\", \"1\");\n         TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n                 + \"specification:type:dropDownChoiceField\", Constants.ON_CHANGE);\n-\n         // The ON_CHANGE above should enable this component, but it doesn't; doing it by hand\n         Component otherType = findComponentById(\n                 TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:specification\","},{"sha":"3afec6d40954d579bea8c69931f1e3868894e446","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PolicyITCase.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -29,6 +29,7 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.SerializationUtils;\n@@ -47,6 +48,7 @@\n import org.apache.syncope.common.rest.api.service.ImplementationService;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.fit.AbstractITCase;\n+import org.apache.syncope.fit.core.reference.DummyPullCorrelationRule;\n import org.junit.jupiter.api.Test;\n \n public class PolicyITCase extends AbstractITCase {\n@@ -166,8 +168,10 @@ public void delete() throws IOException {\n \n     @Test\n     public void getPullCorrelationRuleJavaClasses() {\n-        assertTrue(syncopeService.platform().\n-                getJavaImplInfo(ImplementationType.PULL_CORRELATION_RULE).get().getClasses().isEmpty());\n+        Set<String> classes = syncopeService.platform().\n+                getJavaImplInfo(ImplementationType.PULL_CORRELATION_RULE).get().getClasses();\n+        assertEquals(1, classes.size());\n+        assertEquals(DummyPullCorrelationRule.class.getName(), classes.iterator().next());\n     }\n \n     @Test"},{"sha":"04b1d9e814a3f879b8da7952fc660a1eb27124c5","filename":"fit/core-reference/src/test/resources/TestPullRule.groovy","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FTestPullRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FTestPullRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FTestPullRule.groovy?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -1,3 +1,4 @@\n+\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n@@ -17,10 +18,11 @@\n  * under the License.\n  */\n import groovy.transform.CompileStatic\n+import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n-import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n \n /**\n  * Test pull rule relying on <tt>email</tt> attribute value.\n@@ -29,7 +31,7 @@ import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n class TestPullRule implements PullCorrelationRule {\n \n   @Override\n-  SearchCond getSearchCond(final ConnectorObject connObj) {\n+  SearchCond getSearchCond(final ConnectorObject connObj, final Provision provision) {\n     AttributeCond cond = new AttributeCond();\n     cond.setSchema(\"email\");\n     cond.setType(AttributeCond.Type.EQ);"},{"sha":"385f3ef169b4e5af04a4e194bf1b4a93a18a8d51","filename":"fit/core-reference/src/test/resources/log4j2.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17174c7a3f2288a598cc6b1e216fdb811f18659d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml?ref=17174c7a3f2288a598cc6b1e216fdb811f18659d","patch":"@@ -41,6 +41,10 @@ under the License.\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n \n+    <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n     <asyncLogger name=\"org.apache.syncope.fit\" additivity=\"false\" level=\"DEBUG\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>"}]}