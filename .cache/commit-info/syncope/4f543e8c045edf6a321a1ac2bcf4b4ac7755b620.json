{"sha":"4f543e8c045edf6a321a1ac2bcf4b4ac7755b620","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRmNTQzZThjMDQ1ZWRmNmEzMjFhMWFjMmJjZjRiNGFjNzc1NWI2MjA=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-21T10:28:40Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-21T10:28:40Z"},"message":"refactoring of installation process, SYNCOPE-158","tree":{"sha":"9f7154d5b9a6fbbf35119a2081ac4d20f41ad1ee","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9f7154d5b9a6fbbf35119a2081ac4d20f41ad1ee"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"3f58b93c195d2d80f010b3362aa8d445cfff6970","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3f58b93c195d2d80f010b3362aa8d445cfff6970","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3f58b93c195d2d80f010b3362aa8d445cfff6970"}],"stats":{"total":448,"additions":235,"deletions":213},"files":[{"sha":"0caba9f4f96ab066311a58fc291f44543795a1b0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallCommand.java","status":"modified","additions":2,"deletions":213,"changes":215,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java?ref=4f543e8c045edf6a321a1ac2bcf4b4ac7755b620","patch":"@@ -18,21 +18,11 @@\n  */\n package org.apache.syncope.client.cli.commands.install;\n \n-import java.io.FileNotFoundException;\n-import java.io.UnsupportedEncodingException;\n-import java.net.ConnectException;\n-import java.net.UnknownHostException;\n-import java.util.Scanner;\n-import javax.ws.rs.ProcessingException;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.cli.Command;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.SyncopeServices;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n import org.apache.syncope.client.cli.commands.logger.LoggerCommand;\n-import org.apache.syncope.client.cli.util.FileSystemUtils;\n-import org.apache.syncope.client.cli.util.JasyptUtils;\n-import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -46,222 +36,21 @@ public class InstallCommand extends AbstractCommand {\n             + \"    --help \\n\"\n             + \"    --setup\";\n \n-    private String syncopeAdminUser;\n-\n-    private String syncopeAdminPassword;\n-\n-    private String syncopeServerSchema;\n-\n-    private String syncopeServerHostname = \"localhost\";\n-\n-    private String syncopeServerPort = \"8080\";\n-\n-    private String syncopeServerRestContext = \"/syncope/rest/\";\n-\n     @Override\n     public void execute(final Input input) {\n-        LOG.debug(\"Option: {}\", input.getOption());\n-        LOG.debug(\"Parameters:\");\n-        for (final String parameter : input.getParameters()) {\n-            LOG.debug(\"   > \" + parameter);\n-        }\n-\n         if (StringUtils.isBlank(input.getOption())) {\n             input.setOption(Options.HELP.getOptionName());\n         }\n \n         switch (Options.fromName(input.getOption())) {\n             case INSTALL:\n-                final Scanner scanIn = new Scanner(System.in);\n-\n-                System.out.println(\"\");\n-                System.out.println(\"###############################################\");\n-                System.out.println(\"#                                             #\");\n-                System.out.println(\"# Welcome to Syncope CLI installation process #\");\n-                System.out.println(\"#                                             #\");\n-                System.out.println(\"###############################################\");\n-                System.out.println(\"\");\n-\n-                System.out.println(\"Path to config files of Syncope CLI client will be: \"\n-                        + InstallConfigFileTemplate.DIR_PATH);\n-\n-                if (!FileSystemUtils.canWrite(InstallConfigFileTemplate.DIR_PATH)) {\n-                    System.out.println(\"Permission denied on \" + InstallConfigFileTemplate.DIR_PATH);\n-                    break;\n-                }\n-                System.out.println(\"- File system permission checked\");\n-                System.out.println(\"\");\n-\n-                System.out.println(\"Syncope server schema [http/https]:\");\n-                String syncopeServerSchemaFromSystemIn = scanIn.nextLine();\n-                boolean schemaFounded = false;\n-                while (!schemaFounded) {\n-                    if ((\"http\".equalsIgnoreCase(syncopeServerSchemaFromSystemIn))\n-                            || (\"https\".equalsIgnoreCase(syncopeServerSchemaFromSystemIn))) {\n-                        syncopeServerSchema = syncopeServerSchemaFromSystemIn;\n-                        schemaFounded = true;\n-                    } else {\n-                        System.out.println(\"Please use one of below values:\");\n-                        System.out.println(\"   - http\");\n-                        System.out.println(\"   - https\");\n-                        syncopeServerSchemaFromSystemIn = scanIn.nextLine();\n-                    }\n-                }\n-\n-                System.out.println(\"Syncope server hostname [e.g. \" + syncopeServerHostname + \"]:\");\n-                String syncopeServerHostnameFromSystemIn = scanIn.nextLine();\n-                boolean syncopeServerHostnameFounded = false;\n-                while (!syncopeServerHostnameFounded) {\n-                    if (StringUtils.isNotBlank(syncopeServerHostnameFromSystemIn)) {\n-                        syncopeServerHostname = syncopeServerHostnameFromSystemIn;\n-                        syncopeServerHostnameFounded = true;\n-                    } else {\n-                        System.out.println(\"Syncope server hostname [e.g. \" + syncopeServerHostname + \"]:\");\n-                        syncopeServerHostnameFromSystemIn = scanIn.nextLine();\n-                    }\n-                }\n-\n-                System.out.println(\"Syncope server port [e.g. \" + syncopeServerPort + \"]:\");\n-                String syncopeServerPortFromSystemIn = scanIn.nextLine();\n-                boolean syncopeServerPortFounded = false;\n-                while (!syncopeServerPortFounded) {\n-                    if (StringUtils.isNotBlank(syncopeServerPortFromSystemIn)) {\n-                        syncopeServerPort = syncopeServerPortFromSystemIn;\n-                        syncopeServerPortFounded = true;\n-                    } else if (!StringUtils.isNumeric(syncopeServerPortFromSystemIn)) {\n-                        System.out.println(syncopeServerPortFromSystemIn + \" is not a numeric string, try again\");\n-                        syncopeServerPortFromSystemIn = scanIn.nextLine();\n-                    } else {\n-                        System.out.println(\"Syncope server port [e.g. \" + syncopeServerPort + \"]:\");\n-                        syncopeServerPortFromSystemIn = scanIn.nextLine();\n-                    }\n-                }\n-\n-                System.out.println(\"Syncope server rest context [e.g. \" + syncopeServerRestContext + \"]:\");\n-                String syncopeServerRestContextFromSystemIn = scanIn.nextLine();\n-                boolean syncopeServerRestContextFounded = false;\n-                while (!syncopeServerRestContextFounded) {\n-                    if (StringUtils.isNotBlank(syncopeServerRestContextFromSystemIn)) {\n-                        syncopeServerRestContext = syncopeServerRestContextFromSystemIn;\n-                        syncopeServerRestContextFounded = true;\n-                    } else {\n-                        System.out.println(\"Syncope server port [e.g. \" + syncopeServerRestContext + \"]:\");\n-                        syncopeServerRestContextFromSystemIn = scanIn.nextLine();\n-                    }\n-                }\n-\n-                System.out.println(\"Syncope admin user:\");\n-                String syncopeAdminUserFromSystemIn = scanIn.nextLine();\n-                boolean syncopeAdminUserFounded = false;\n-                while (!syncopeAdminUserFounded) {\n-                    if (StringUtils.isNotBlank(syncopeAdminUserFromSystemIn)) {\n-                        syncopeAdminUser = syncopeAdminUserFromSystemIn;\n-                        syncopeAdminUserFounded = true;\n-                    } else {\n-                        System.out.println(\"Syncope admin user:\");\n-                        syncopeAdminUserFromSystemIn = scanIn.nextLine();\n-                    }\n-                }\n-\n-                System.out.println(\"Syncope admin password:\");\n-                String syncopeAdminPasswordFromSystemIn = scanIn.nextLine();\n-                boolean syncopeAdminPasswordFounded = false;\n-                while (!syncopeAdminPasswordFounded) {\n-                    if (StringUtils.isNotBlank(syncopeAdminPasswordFromSystemIn)) {\n-                        syncopeAdminPassword = syncopeAdminPasswordFromSystemIn;\n-                        syncopeAdminPasswordFounded = true;\n-                    } else {\n-                        System.out.println(\"Syncope admin user:\");\n-                        syncopeAdminPasswordFromSystemIn = scanIn.nextLine();\n-                    }\n-                }\n-\n-                scanIn.close();\n-\n-                final JasyptUtils jasyptUtils = JasyptUtils.getJasyptUtils();\n-\n-                try {\n-                    FileSystemUtils.createNewDirectory(InstallConfigFileTemplate.DIR_PATH);\n-                    final String contentCliPropertiesFile = InstallConfigFileTemplate.createFile(\n-                            syncopeServerSchema,\n-                            syncopeServerHostname,\n-                            syncopeServerPort,\n-                            syncopeServerRestContext,\n-                            syncopeAdminUser,\n-                            jasyptUtils.encrypt(syncopeAdminPassword));\n-                    FileSystemUtils.createFileWith(InstallConfigFileTemplate.FILE_PATH, contentCliPropertiesFile);\n-\n-                } catch (final FileNotFoundException | UnsupportedEncodingException ex) {\n-                    System.out.println(ex.getMessage());\n-                }\n-\n-                try {\n-                    final SyncopeService syncopeService = SyncopeServices.get(SyncopeService.class);\n-                    System.out.println(\"Provided parameters checked on Syncope core version: \"\n-                            + syncopeService.info().getVersion());\n-                    System.out.println(\"\");\n-                    System.out.println(\"###############################################\");\n-                    System.out.println(\"#                                             #\");\n-                    System.out.println(\"#           Installation successful           #\");\n-                    System.out.println(\"#     now you can use Syncope CLI client      #\");\n-                    System.out.println(\"#                                             #\");\n-                    System.out.println(\"###############################################\");\n-                    System.out.println(\"\");\n-                } catch (final ProcessingException ex) {\n-                    if (ex.getCause() instanceof UnknownHostException) {\n-                        final String unknownHost = ex.getCause().getMessage().split(\":\")[3];\n-                        System.out.println(\"\");\n-                        System.out.println(\"Provided host:\" + unknownHost);\n-                        System.out.println(\"\");\n-                        System.out.println(\"###############################################\");\n-                        System.out.println(\"#                                             #\");\n-                        System.out.println(\"#            Provided unknown host!           #\");\n-                        System.out.println(\"#        START AGAIN the installation!        #\");\n-                        System.out.println(\"#                                             #\");\n-                        System.out.println(\"###############################################\");\n-                        System.out.println(\"\");\n-                    } else if (ex.getCause() instanceof ConnectException) {\n-                        System.out.println(\"\");\n-                        System.out.println(\"Provided address :\" + SyncopeServices.getAddress());\n-                        System.out.println(\"\");\n-                        System.out.println(\"###############################################\");\n-                        System.out.println(\"#                                             #\");\n-                        System.out.println(\"#       Provided address is unreachable!      #\");\n-                        System.out.println(\"#         Check it and if it is wrong         #\");\n-                        System.out.println(\"#        START AGAIN the installation!        #\");\n-                        System.out.println(\"#                                             #\");\n-                        System.out.println(\"###############################################\");\n-                        System.out.println(\"\");\n-                    }\n-                } catch (final Exception e) {\n-                    if (e.getMessage().contains(\"not authenticated\")) {\n-                        System.out.println(\"\");\n-                        System.out.println(\"###############################################\");\n-                        System.out.println(\"#                                             #\");\n-                        System.out.println(\"#   Username or password provided are wrong   #\");\n-                        System.out.println(\"#        START AGAIN the installation!        #\");\n-                        System.out.println(\"#                                             #\");\n-                        System.out.println(\"###############################################\");\n-                        System.out.println(\"\");\n-                    } else {\n-                        System.out.println(\"\");\n-                        System.out.println(\"###############################################\");\n-                        System.out.println(\"#                                             #\");\n-                        System.out.println(\"#                Something wrong              #\");\n-                        System.out.println(\"#        START AGAIN the installation!        #\");\n-                        System.out.println(\"#                                             #\");\n-                        System.out.println(\"###############################################\");\n-                        System.out.println(\"\");\n-                    }\n-                }\n+                new InstallSetup().setup();\n                 break;\n             case HELP:\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                System.out.println(input.getOption() + \" is not a valid option.\");\n-                System.out.println(\"\");\n-                System.out.println(HELP_MESSAGE);\n+                new InstallResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"994aca6508f61c5e8d6cad3d482c58ff0bf98b20","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallResultManager.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java?ref=4f543e8c045edf6a321a1ac2bcf4b4ac7755b620","patch":"@@ -0,0 +1,72 @@\n+package org.apache.syncope.client.cli.commands.install;\n+\n+import java.net.ConnectException;\n+import java.net.UnknownHostException;\n+import javax.ws.rs.ProcessingException;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+\n+public class InstallResultManager extends CommonsResultManager {\n+\n+    public void installationSuccessful(final String version) {\n+        System.out.println(\"Installation parameters checked on Syncope core version: \" + version);\n+        System.out.println(\"\");\n+        System.out.println(\"###############################################\");\n+        System.out.println(\"#                                             #\");\n+        System.out.println(\"#           Installation successful           #\");\n+        System.out.println(\"#     now you can use Syncope CLI client      #\");\n+        System.out.println(\"#                                             #\");\n+        System.out.println(\"###############################################\");\n+        System.out.println(\"\");\n+    }\n+\n+    public void manageProcessingException(final ProcessingException ex) {\n+        if (ex.getCause() instanceof UnknownHostException) {\n+            final String unknownHost = ex.getCause().getMessage().split(\":\")[3];\n+            System.out.println(\"\");\n+            System.out.println(\"Provided host:\" + unknownHost);\n+            System.out.println(\"\");\n+            System.out.println(\"###############################################\");\n+            System.out.println(\"#                                             #\");\n+            System.out.println(\"#            Provided unknown host!           #\");\n+            System.out.println(\"#        START AGAIN the installation!        #\");\n+            System.out.println(\"#                                             #\");\n+            System.out.println(\"###############################################\");\n+            System.out.println(\"\");\n+        } else if (ex.getCause() instanceof ConnectException) {\n+            System.out.println(\"\");\n+            System.out.println(\"Provided address :\" + SyncopeServices.getAddress());\n+            System.out.println(\"\");\n+            System.out.println(\"###############################################\");\n+            System.out.println(\"#                                             #\");\n+            System.out.println(\"#       Provided address is unreachable!      #\");\n+            System.out.println(\"#         Check it and if it is wrong         #\");\n+            System.out.println(\"#        START AGAIN the installation!        #\");\n+            System.out.println(\"#                                             #\");\n+            System.out.println(\"###############################################\");\n+            System.out.println(\"\");\n+        }\n+    }\n+\n+    public void manageException(final Exception e) {\n+        if (e.getMessage().contains(\"not authenticated\")) {\n+            System.out.println(\"\");\n+            System.out.println(\"###############################################\");\n+            System.out.println(\"#                                             #\");\n+            System.out.println(\"#   Username or password provided are wrong   #\");\n+            System.out.println(\"#        START AGAIN the installation!        #\");\n+            System.out.println(\"#                                             #\");\n+            System.out.println(\"###############################################\");\n+            System.out.println(\"\");\n+        } else {\n+            System.out.println(\"\");\n+            System.out.println(\"###############################################\");\n+            System.out.println(\"#                                             #\");\n+            System.out.println(\"#                Something wrong              #\");\n+            System.out.println(\"#        START AGAIN the installation!        #\");\n+            System.out.println(\"#                                             #\");\n+            System.out.println(\"###############################################\");\n+            System.out.println(\"\");\n+        }\n+    }\n+}"},{"sha":"2a4079eac436c9292df1943e276827c1977e18a8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetup.java","status":"added","additions":161,"deletions":0,"changes":161,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f543e8c045edf6a321a1ac2bcf4b4ac7755b620/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java?ref=4f543e8c045edf6a321a1ac2bcf4b4ac7755b620","patch":"@@ -0,0 +1,161 @@\n+package org.apache.syncope.client.cli.commands.install;\n+\n+import java.io.FileNotFoundException;\n+import java.io.UnsupportedEncodingException;\n+import java.util.Scanner;\n+import javax.ws.rs.ProcessingException;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.client.cli.util.FileSystemUtils;\n+import org.apache.syncope.client.cli.util.JasyptUtils;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+\n+public class InstallSetup {\n+\n+    private final InstallResultManager installResultManager = new InstallResultManager();\n+\n+    private String syncopeAdminUser;\n+\n+    private String syncopeAdminPassword;\n+\n+    private String syncopeServerSchema;\n+\n+    private String syncopeServerHostname = \"localhost\";\n+\n+    private String syncopeServerPort = \"8080\";\n+\n+    private String syncopeServerRestContext = \"/syncope/rest/\";\n+\n+    public void setup() {\n+        final Scanner scanIn = new Scanner(System.in);\n+\n+        System.out.println(\"\");\n+        System.out.println(\"###############################################\");\n+        System.out.println(\"#                                             #\");\n+        System.out.println(\"# Welcome to Syncope CLI installation process #\");\n+        System.out.println(\"#                                             #\");\n+        System.out.println(\"###############################################\");\n+        System.out.println(\"\");\n+\n+        System.out.println(\"Path to config files of Syncope CLI client will be: \"\n+                + InstallConfigFileTemplate.DIR_PATH);\n+\n+        if (!FileSystemUtils.canWrite(InstallConfigFileTemplate.DIR_PATH)) {\n+            System.out.println(\"Permission denied on \" + InstallConfigFileTemplate.DIR_PATH);\n+        }\n+        System.out.println(\"- File system permission checked\");\n+        System.out.println(\"\");\n+\n+        System.out.println(\"Syncope server schema [http/https]:\");\n+        String syncopeServerSchemaFromSystemIn = scanIn.nextLine();\n+        boolean schemaFounded = false;\n+        while (!schemaFounded) {\n+            if ((\"http\".equalsIgnoreCase(syncopeServerSchemaFromSystemIn))\n+                    || (\"https\".equalsIgnoreCase(syncopeServerSchemaFromSystemIn))) {\n+                syncopeServerSchema = syncopeServerSchemaFromSystemIn;\n+                schemaFounded = true;\n+            } else {\n+                System.out.println(\"Please use one of below values:\");\n+                System.out.println(\"   - http\");\n+                System.out.println(\"   - https\");\n+                syncopeServerSchemaFromSystemIn = scanIn.nextLine();\n+            }\n+        }\n+\n+        System.out.println(\"Syncope server hostname [e.g. \" + syncopeServerHostname + \"]:\");\n+        String syncopeServerHostnameFromSystemIn = scanIn.nextLine();\n+        boolean syncopeServerHostnameFounded = false;\n+        while (!syncopeServerHostnameFounded) {\n+            if (StringUtils.isNotBlank(syncopeServerHostnameFromSystemIn)) {\n+                syncopeServerHostname = syncopeServerHostnameFromSystemIn;\n+                syncopeServerHostnameFounded = true;\n+            } else {\n+                System.out.println(\"Syncope server hostname [e.g. \" + syncopeServerHostname + \"]:\");\n+                syncopeServerHostnameFromSystemIn = scanIn.nextLine();\n+            }\n+        }\n+\n+        System.out.println(\"Syncope server port [e.g. \" + syncopeServerPort + \"]:\");\n+        String syncopeServerPortFromSystemIn = scanIn.nextLine();\n+        boolean syncopeServerPortFounded = false;\n+        while (!syncopeServerPortFounded) {\n+            if (StringUtils.isNotBlank(syncopeServerPortFromSystemIn)) {\n+                syncopeServerPort = syncopeServerPortFromSystemIn;\n+                syncopeServerPortFounded = true;\n+            } else if (!StringUtils.isNumeric(syncopeServerPortFromSystemIn)) {\n+                System.out.println(syncopeServerPortFromSystemIn + \" is not a numeric string, try again\");\n+                syncopeServerPortFromSystemIn = scanIn.nextLine();\n+            } else {\n+                System.out.println(\"Syncope server port [e.g. \" + syncopeServerPort + \"]:\");\n+                syncopeServerPortFromSystemIn = scanIn.nextLine();\n+            }\n+        }\n+\n+        System.out.println(\"Syncope server rest context [e.g. \" + syncopeServerRestContext + \"]:\");\n+        String syncopeServerRestContextFromSystemIn = scanIn.nextLine();\n+        boolean syncopeServerRestContextFounded = false;\n+        while (!syncopeServerRestContextFounded) {\n+            if (StringUtils.isNotBlank(syncopeServerRestContextFromSystemIn)) {\n+                syncopeServerRestContext = syncopeServerRestContextFromSystemIn;\n+                syncopeServerRestContextFounded = true;\n+            } else {\n+                System.out.println(\"Syncope server port [e.g. \" + syncopeServerRestContext + \"]:\");\n+                syncopeServerRestContextFromSystemIn = scanIn.nextLine();\n+            }\n+        }\n+\n+        System.out.println(\"Syncope admin user:\");\n+        String syncopeAdminUserFromSystemIn = scanIn.nextLine();\n+        boolean syncopeAdminUserFounded = false;\n+        while (!syncopeAdminUserFounded) {\n+            if (StringUtils.isNotBlank(syncopeAdminUserFromSystemIn)) {\n+                syncopeAdminUser = syncopeAdminUserFromSystemIn;\n+                syncopeAdminUserFounded = true;\n+            } else {\n+                System.out.println(\"Syncope admin user:\");\n+                syncopeAdminUserFromSystemIn = scanIn.nextLine();\n+            }\n+        }\n+\n+        System.out.println(\"Syncope admin password:\");\n+        String syncopeAdminPasswordFromSystemIn = scanIn.nextLine();\n+        boolean syncopeAdminPasswordFounded = false;\n+        while (!syncopeAdminPasswordFounded) {\n+            if (StringUtils.isNotBlank(syncopeAdminPasswordFromSystemIn)) {\n+                syncopeAdminPassword = syncopeAdminPasswordFromSystemIn;\n+                syncopeAdminPasswordFounded = true;\n+            } else {\n+                System.out.println(\"Syncope admin user:\");\n+                syncopeAdminPasswordFromSystemIn = scanIn.nextLine();\n+            }\n+        }\n+\n+        scanIn.close();\n+\n+        final JasyptUtils jasyptUtils = JasyptUtils.getJasyptUtils();\n+\n+        try {\n+            FileSystemUtils.createNewDirectory(InstallConfigFileTemplate.DIR_PATH);\n+            final String contentCliPropertiesFile = InstallConfigFileTemplate.createFile(\n+                    syncopeServerSchema,\n+                    syncopeServerHostname,\n+                    syncopeServerPort,\n+                    syncopeServerRestContext,\n+                    syncopeAdminUser,\n+                    jasyptUtils.encrypt(syncopeAdminPassword));\n+            FileSystemUtils.createFileWith(InstallConfigFileTemplate.FILE_PATH, contentCliPropertiesFile);\n+\n+        } catch (final FileNotFoundException | UnsupportedEncodingException ex) {\n+            System.out.println(ex.getMessage());\n+        }\n+\n+        try {\n+            final SyncopeService syncopeService = SyncopeServices.get(SyncopeService.class);\n+            installResultManager.installationSuccessful(syncopeService.info().getVersion());\n+        } catch (final ProcessingException ex) {\n+            installResultManager.manageProcessingException(ex);\n+        } catch (final Exception e) {\n+            installResultManager.manageException(e);\n+        }\n+    }\n+}"}]}