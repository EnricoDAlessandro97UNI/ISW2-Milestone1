{"sha":"0f8dbd498792dd4988c9ead0ea357b9f4aaa24fc","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBmOGRiZDQ5ODc5MmRkNDk4OGM5ZWFkMGVhMzU3YjlmNGFhYTI0ZmM=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-01-21T15:13:07Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-01-21T15:13:07Z"},"message":"[SYNCOPE-156] Removed configuration parameters from AnyTypeClassDetailsPanel","tree":{"sha":"bcd27c12bfe8e7e336efa6b8e5b5c23182bab216","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bcd27c12bfe8e7e336efa6b8e5b5c23182bab216"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0f8dbd498792dd4988c9ead0ea357b9f4aaa24fc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f8dbd498792dd4988c9ead0ea357b9f4aaa24fc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f8dbd498792dd4988c9ead0ea357b9f4aaa24fc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f8dbd498792dd4988c9ead0ea357b9f4aaa24fc/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"e4373b321d9dc9072d8ee7f53e6d506d2f350589","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e4373b321d9dc9072d8ee7f53e6d506d2f350589","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e4373b321d9dc9072d8ee7f53e6d506d2f350589"}],"stats":{"total":24,"additions":24,"deletions":0},"files":[{"sha":"620afabc0fbbdd3e21ab7bdabc123444c76bfe2f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f8dbd498792dd4988c9ead0ea357b9f4aaa24fc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f8dbd498792dd4988c9ead0ea357b9f4aaa24fc/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java?ref=0f8dbd498792dd4988c9ead0ea357b9f4aaa24fc","patch":"@@ -18,13 +18,19 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.apache.syncope.common.rest.api.service.ConfigurationService;\n import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -46,6 +52,10 @@ public class AnyTypeClassDetailsPanel extends Panel {\n \n     private final List<String> availableVirSchemas = schemaRestClient.getVirSchemaNames();\n \n+    private static final List<String> LAYOUT_PARAMETERS =\n+            Arrays.asList(new String[] { \"admin.user.layout\", \"self.user.layout\",\n+        \"admin.group.layout\", \"self.group.layout\", \"admin.membership.layout\", \"self.membership.layout\" });\n+\n     public AnyTypeClassDetailsPanel(final String id, final AnyTypeClassTO anyTypeClassTO) {\n         super(id);\n \n@@ -106,12 +116,26 @@ public AnyTypeClassDetailsPanel(final String id, final AnyTypeClassTO anyTypeCla\n \n     private void buildAvailableSchemas(final String key) {\n \n+        List<String> configurationSchemas = new ArrayList<>();\n+        CollectionUtils.collect(SyncopeConsoleSession.get().\n+                getService(ConfigurationService.class).list(),\n+                new Transformer<AttrTO, String>() {\n+\n+            @Override\n+            public String transform(final AttrTO attrTO) {\n+                return attrTO.getSchema();\n+            }\n+        }, configurationSchemas);\n+\n         for (AnyTypeClassTO item : SyncopeConsoleSession.get().getService(AnyTypeClassService.class).list()) {\n             if (key == null || !item.getKey().equals(key)) {\n                 availablePlainSchemas.removeAll(item.getPlainSchemas());\n                 availableDerSchemas.removeAll(item.getDerSchemas());\n                 availableVirSchemas.removeAll(item.getVirSchemas());\n             }\n         }\n+\n+        availablePlainSchemas.removeAll(configurationSchemas);\n+        availablePlainSchemas.removeAll(LAYOUT_PARAMETERS);\n     }\n }"}]}