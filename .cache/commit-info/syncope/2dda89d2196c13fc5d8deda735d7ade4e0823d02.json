{"sha":"2dda89d2196c13fc5d8deda735d7ade4e0823d02","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJkZGE4OWQyMTk2YzEzZmM1ZDhkZWRhNzM1ZDdhZGU0ZTA4MjNkMDI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-28T08:03:45Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-28T08:03:57Z"},"message":"Upgrading swagger-jaxrs2 - with possible bug https://github.com/ilgrosso/swagger-core/issues/1","tree":{"sha":"564006fe095debe80f24b20687ff06170370ab2c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/564006fe095debe80f24b20687ff06170370ab2c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2dda89d2196c13fc5d8deda735d7ade4e0823d02","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2dda89d2196c13fc5d8deda735d7ade4e0823d02","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2dda89d2196c13fc5d8deda735d7ade4e0823d02","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2dda89d2196c13fc5d8deda735d7ade4e0823d02/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4a7a5c4a675a7099a35b3b6e5df01c7d52d9a1f8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a7a5c4a675a7099a35b3b6e5df01c7d52d9a1f8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4a7a5c4a675a7099a35b3b6e5df01c7d52d9a1f8"}],"stats":{"total":111,"additions":67,"deletions":44},"files":[{"sha":"eb84fcbfe2d42adecc80d3272891ab4f523382a0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/PolicyTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -65,7 +65,7 @@ public void setDiscriminator(final String discriminator) {\n         // do nothing\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @Override\n     public String getKey() {\n         return key;\n@@ -87,15 +87,15 @@ public void setDescription(final String description) {\n         this.description = description;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"usedByResources\")\n     @XmlElement(name = \"resource\")\n     @JsonProperty(\"usedByResources\")\n     public List<String> getUsedByResources() {\n         return usedByResources;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"usedByRealms\")\n     @XmlElement(name = \"group\")\n     @JsonProperty(\"usedByRealms\")"},{"sha":"92529bce8db50b31e51dbb886ddf81d041644ef8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractAnnotatedBean.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -65,7 +65,7 @@ public class AbstractAnnotatedBean extends AbstractBaseBean {\n      */\n     private Date lastChangeDate;\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getCreator() {\n         return creator;\n     }\n@@ -74,7 +74,7 @@ public void setCreator(final String creator) {\n         this.creator = creator;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getCreationDate() {\n         if (creationDate != null) {\n             return new Date(creationDate.getTime());\n@@ -90,7 +90,7 @@ public void setCreationDate(final Date creationDate) {\n         }\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getLastModifier() {\n         return lastModifier;\n     }\n@@ -99,7 +99,7 @@ public void setLastModifier(final String lastModifier) {\n         this.lastModifier = lastModifier;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getLastChangeDate() {\n         if (lastChangeDate != null) {\n             return new Date(lastChangeDate.getTime());"},{"sha":"efdec0c0ee1f9e51f71959cc906e6186ebe180d9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractStartEndBean.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -32,7 +32,7 @@ public class AbstractStartEndBean extends AbstractBaseBean {\n \n     private Date end;\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getStart() {\n         return start == null\n                 ? null\n@@ -45,7 +45,7 @@ public void setStart(final Date start) {\n                 : new Date(start.getTime());\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getEnd() {\n         return end == null\n                 ? null"},{"sha":"3d903b1d3f725e1f9230fb1ce1eaefcbf837dd37","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyObjectTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -91,7 +91,7 @@ public List<MembershipTO> getMemberships() {\n         return memberships;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"dynMemberships\")\n     @XmlElement(name = \"dynMembership\")\n     @JsonProperty(\"dynMemberships\")"},{"sha":"928e877bc37457ee84a67da5a2e2767689e512f1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -74,7 +74,7 @@ public void setDiscriminator(final String discriminator) {\n         // do nothing\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @Override\n     public String getKey() {\n         return key;\n@@ -85,7 +85,7 @@ public void setKey(final String key) {\n         this.key = key;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getType() {\n         return type;\n     }\n@@ -102,15 +102,15 @@ public void setRealm(final String realm) {\n         this.realm = realm;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"dynRealms\")\n     @XmlElement(name = \"dynRealmF\")\n     @JsonProperty(\"dynRealms\")\n     public List<String> getDynRealms() {\n         return dynRealms;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getStatus() {\n         return status;\n     }"},{"sha":"f44258ca0ac14aac2cc1c60601def216446ae005","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AttrTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -89,7 +89,7 @@ public AttrTO build() {\n     /**\n      * @return schema information for this attribute; may be {@code NULL}\n      */\n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public SchemaTO getSchemaInfo() {\n         return schemaInfo;\n     }"},{"sha":"95d234d8eab84e9c3ff8be3c38de4ee3e40d4f85","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -113,7 +113,7 @@ public void setUDynMembershipCond(final String uDynMembershipCond) {\n         this.udynMembershipCond = uDynMembershipCond;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public int getStaticUserMembershipCount() {\n         return staticUserMembershipCount;\n     }\n@@ -122,7 +122,7 @@ public void setStaticUserMembershipCount(final int staticUserMembershipCount) {\n         this.staticUserMembershipCount = staticUserMembershipCount;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public int getDynamicUserMembershipCount() {\n         return dynamicUserMembershipCount;\n     }\n@@ -131,7 +131,7 @@ public void setDynamicUserMembershipCount(final int dynamicUserMembershipCount)\n         this.dynamicUserMembershipCount = dynamicUserMembershipCount;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public int getStaticAnyObjectMembershipCount() {\n         return staticAnyObjectMembershipCount;\n     }\n@@ -140,7 +140,7 @@ public void setStaticAnyObjectMembershipCount(final int staticAnyObjectMembershi\n         this.staticAnyObjectMembershipCount = staticAnyObjectMembershipCount;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public int getDynamicAnyObjectMembershipCount() {\n         return dynamicAnyObjectMembershipCount;\n     }"},{"sha":"ddab19a0fb5e30a853707cd9d3f370fff52f0efa","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTaskTO.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -65,7 +65,7 @@ public String getDiscriminator() {\n         return getClass().getName();\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getNotification() {\n         return notification;\n     }\n@@ -74,7 +74,7 @@ public void setNotification(final String notification) {\n         this.notification = notification;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public AnyTypeKind getAnyTypeKind() {\n         return anyTypeKind;\n     }\n@@ -83,7 +83,7 @@ public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n         this.anyTypeKind = anyTypeKind;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getEntityKey() {\n         return entityKey;\n     }\n@@ -92,15 +92,15 @@ public void setEntityKey(final String entityKey) {\n         this.entityKey = entityKey;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"recipients\")\n     @XmlElement(name = \"recipient\")\n     @JsonProperty(\"recipients\")\n     public Set<String> getRecipients() {\n         return recipients;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getSender() {\n         return sender;\n     }\n@@ -109,7 +109,7 @@ public void setSender(final String sender) {\n         this.sender = sender;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getSubject() {\n         return subject;\n     }\n@@ -118,7 +118,7 @@ public void setSubject(final String subject) {\n         this.subject = subject;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getTextBody() {\n         return textBody;\n     }\n@@ -127,7 +127,7 @@ public void setTextBody(final String textBody) {\n         this.textBody = textBody;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getHtmlBody() {\n         return htmlBody;\n     }\n@@ -136,7 +136,7 @@ public void setHtmlBody(final String htmlBody) {\n         this.htmlBody = htmlBody;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public boolean isExecuted() {\n         return executed;\n     }\n@@ -145,7 +145,7 @@ public void setExecuted(final boolean executed) {\n         this.executed = executed;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public TraceLevel getTraceLevel() {\n         return traceLevel;\n     }"},{"sha":"b4f94ece205fb023801c0d110b966bf657f31b29","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PrivilegeTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import io.swagger.v3.oas.annotations.media.Schema;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n@@ -54,6 +55,7 @@ public void setDescription(final String description) {\n         this.description = description;\n     }\n \n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getApplication() {\n         return application;\n     }"},{"sha":"e0a35c6f28f6895ad7d48e14d2a179cb9ec2c2c7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SchedTaskTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -83,7 +83,7 @@ public void setJobDelegate(final String jobDelegate) {\n         this.jobDelegate = jobDelegate;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getLastExec() {\n         return lastExec == null ? null : new Date(lastExec.getTime());\n     }\n@@ -92,7 +92,7 @@ public void setLastExec(final Date lastExec) {\n         this.lastExec = lastExec == null ? null : new Date(lastExec.getTime());\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getNextExec() {\n         return nextExec == null ? null : new Date(nextExec.getTime());\n     }"},{"sha":"d3f98204084bf2447e06111a02dbfe37b98d0da1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/TaskTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -61,7 +61,7 @@ public void setDiscriminator(final String discriminator) {\n         // do nothing\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @Override\n     public String getKey() {\n         return key;\n@@ -73,7 +73,7 @@ public void setKey(final String key) {\n         this.key = key;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getLatestExecStatus() {\n         return latestExecStatus;\n     }\n@@ -82,7 +82,7 @@ public void setLatestExecStatus(final String latestExecStatus) {\n         this.latestExecStatus = latestExecStatus;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"executions\")\n     @XmlElement(name = \"execution\")\n     @JsonProperty(\"executions\")"},{"sha":"b47f042b4c7456c0b1c8ed12b882cc3786aa0808","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -108,7 +108,7 @@ public List<String> getRoles() {\n         return roles;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"dynRoles\")\n     @XmlElement(name = \"role\")\n     @JsonProperty(\"dynRoles\")\n@@ -123,7 +123,7 @@ public Set<String> getPrivileges() {\n         return privileges;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public String getToken() {\n         return token;\n     }\n@@ -132,7 +132,7 @@ public void setToken(final String token) {\n         this.token = token;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getTokenExpireTime() {\n         if (tokenExpireTime != null) {\n             return new Date(tokenExpireTime.getTime());\n@@ -158,20 +158,20 @@ public void setUsername(final String username) {\n         this.username = username;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getChangePwdDate() {\n         if (changePwdDate != null) {\n             return new Date(changePwdDate.getTime());\n         }\n         return null;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Integer getFailedLogins() {\n         return failedLogins;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public Date getLastLoginDate() {\n         if (lastLoginDate != null) {\n             return new Date(lastLoginDate.getTime());\n@@ -215,7 +215,7 @@ public void setSecurityAnswer(final String securityAnswer) {\n         this.securityAnswer = securityAnswer;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public boolean isSuspended() {\n         return suspended;\n     }\n@@ -224,7 +224,7 @@ public void setSuspended(final boolean suspended) {\n         this.suspended = suspended;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     public boolean isMustChangePassword() {\n         return mustChangePassword;\n     }\n@@ -263,7 +263,7 @@ public List<MembershipTO> getMemberships() {\n         return memberships;\n     }\n \n-    @Schema(readOnly = true)\n+    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n     @XmlElementWrapper(name = \"dynMemberships\")\n     @XmlElement(name = \"dynMembership\")\n     @JsonProperty(\"dynMemberships\")"},{"sha":"ee7d8402ba75e9638e8b7aab79584e14b54a8cb5","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/JAXRSService.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -18,6 +18,27 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.headers.Header;\n+import io.swagger.v3.oas.annotations.media.Content;\n+import io.swagger.v3.oas.annotations.media.Schema;\n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n+import org.apache.syncope.common.lib.to.ErrorTO;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+\n+@ApiResponses(\n+        @ApiResponse(responseCode = \"400\",\n+                description = \"An error occurred; HTTP status code can vary depending on the actual error: \"\n+                + \"400, 403, 404, 409, 412\",\n+                content =\n+                @Content(schema =\n+                        @Schema(implementation = ErrorTO.class)),\n+                headers = {\n+                    @Header(name = RESTHeaders.ERROR_CODE, schema =\n+                            @Schema(type = \"string\"), description = \"Error code\"),\n+                    @Header(name = RESTHeaders.ERROR_INFO, schema =\n+                            @Schema(type = \"string\"), description = \"Error message\") })\n+)\n public interface JAXRSService {\n \n     String PARAM_FIQL = \"fiql\";"},{"sha":"492dd780ec29aa55ed18de837a1bb6cb7b33b5d7","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2dda89d2196c13fc5d8deda735d7ade4e0823d02/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2dda89d2196c13fc5d8deda735d7ade4e0823d02/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=2dda89d2196c13fc5d8deda735d7ade4e0823d02","patch":"@@ -418,7 +418,7 @@ under the License.\n     <log.directory>${project.build.directory}/log</log.directory>\n     <flowable-modeler.directory>${project.build.directory}/flowable-modeler</flowable-modeler.directory>    \n \n-    <swagger-core.version>2.0.0-rc4</swagger-core.version>    \n+    <swagger-core.version>2.0.0</swagger-core.version>    \n     <swagger-ui.version>3.13.0</swagger-ui.version>\n     <guava.version>20.0</guava.version>\n "}]}