{"sha":"3843ab5d8a47012a8e469c710861dda88da65b59","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM4NDNhYjVkOGE0NzAxMmE4ZTQ2OWM3MTA4NjFkZGE4OGRhNjViNTk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-10T06:53:58Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-10T06:53:58Z"},"message":"Change name refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246075 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4028a25b534bcb426ae82e07ad8616eb8402a0f5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4028a25b534bcb426ae82e07ad8616eb8402a0f5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3843ab5d8a47012a8e469c710861dda88da65b59","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3843ab5d8a47012a8e469c710861dda88da65b59","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3843ab5d8a47012a8e469c710861dda88da65b59","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3843ab5d8a47012a8e469c710861dda88da65b59/comments","author":null,"committer":null,"parents":[{"sha":"298bd2fb2b99296b143c26313a1bcf7551ba3f05","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/298bd2fb2b99296b143c26313a1bcf7551ba3f05","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/298bd2fb2b99296b143c26313a1bcf7551ba3f05"}],"stats":{"total":756,"additions":378,"deletions":378},"files":[{"sha":"c702ce0eea7d122bd99e19acb3414ac809025eb5","filename":"core/src/main/java/org/syncope/core/persistence/beans/Attribute.java","status":"renamed","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -30,24 +30,24 @@\n import org.syncope.core.persistence.validation.ValidationException;\n \n @Entity\n-public class UserAttribute implements Serializable {\n+public class Attribute implements Serializable {\n \n     private static final Logger log = LoggerFactory.getLogger(\n-            UserAttribute.class);\n+            Attribute.class);\n     @Id\n     @GeneratedValue(strategy = GenerationType.AUTO)\n     private Long id;\n     @ManyToOne(fetch = FetchType.EAGER)\n-    private UserAttributeSchema schema;\n+    private AttributeSchema schema;\n     @OneToMany(cascade = CascadeType.ALL,\n     fetch = FetchType.EAGER)\n-    private Set<UserAttributeValue> values;\n+    private Set<AttributeValue> values;\n \n-    protected UserAttribute() {\n-        values = new HashSet<UserAttributeValue>();\n+    protected Attribute() {\n+        values = new HashSet<AttributeValue>();\n     }\n \n-    public UserAttribute(UserAttributeSchema schema)\n+    public Attribute(AttributeSchema schema)\n             throws ClassNotFoundException {\n \n         this();\n@@ -58,26 +58,26 @@ public Long getId() {\n         return id;\n     }\n \n-    public UserAttributeSchema getSchema() {\n+    public AttributeSchema getSchema() {\n         return schema;\n     }\n \n-    public void setSchema(UserAttributeSchema schema) {\n+    public void setSchema(AttributeSchema schema) {\n         this.schema = schema;\n     }\n \n-    public Set<UserAttributeValue> getValues() {\n+    public Set<AttributeValue> getValues() {\n         return values;\n     }\n \n-    public void setValues(Set<UserAttributeValue> values) {\n+    public void setValues(Set<AttributeValue> values) {\n         this.values = values;\n     }\n \n     public void addValue(Object value)\n             throws ValidationException {\n \n-        UserAttributeValue actualValue =\n+        AttributeValue actualValue =\n                 getSchema().getValidator().getValue(value);\n \n         if (!schema.isMultivalue()) {\n@@ -90,7 +90,7 @@ public void addValue(Object value)\n     public void removeValue(Object value)\n             throws ValidationException {\n \n-        UserAttributeValue actualValue =\n+        AttributeValue actualValue =\n                 getSchema().getValidator().getValue(value);\n \n         values.remove(actualValue);\n@@ -107,7 +107,7 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserAttribute other = (UserAttribute) obj;\n+        final Attribute other = (Attribute) obj;\n         if (this.id != other.id\n                 && (this.id == null || !this.id.equals(other.id))) {\n ","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserAttribute.java"},{"sha":"f3ce556eb92c8db6931269447312a7cb71f068b1","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeSchema.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -29,15 +29,15 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.syncope.core.persistence.AttributeType;\n-import org.syncope.core.persistence.validation.UserAttributeBasicValidator;\n-import org.syncope.core.persistence.validation.UserAttributeValidator;\n+import org.syncope.core.persistence.validation.AttributeBasicValidator;\n+import org.syncope.core.persistence.validation.AttributeValidator;\n import org.syncope.core.persistence.validation.ValidatorInstantiationException;\n \n @Entity\n-public class UserAttributeSchema implements Serializable {\n+public class AttributeSchema implements Serializable {\n \n     private static final Logger log = LoggerFactory.getLogger(\n-            UserAttributeSchema.class);\n+            AttributeSchema.class);\n     @Id\n     private String name;\n     @Column(nullable = false)\n@@ -48,9 +48,9 @@ public class UserAttributeSchema implements Serializable {\n     private String conversionPattern;\n     private String validatorClass;\n     @Transient\n-    private UserAttributeValidator validator;\n+    private AttributeValidator validator;\n \n-    public UserAttributeSchema() {\n+    public AttributeSchema() {\n         type = AttributeType.String;\n         mandatory = false;\n         multivalue = false;\n@@ -88,7 +88,7 @@ public void setMultivalue(Boolean multivalue) {\n         this.multivalue = multivalue;\n     }\n \n-    public UserAttributeValidator getValidator()\n+    public AttributeValidator getValidator()\n             throws ValidatorInstantiationException {\n \n         if (validator != null) {\n@@ -100,15 +100,15 @@ public UserAttributeValidator getValidator()\n                 Constructor validatorConstructor =\n                         Class.forName(getValidatorClass()).getConstructor(\n                         new Class[]{getClass()});\n-                validator = (UserAttributeValidator) validatorConstructor.newInstance(this);\n+                validator = (AttributeValidator) validatorConstructor.newInstance(this);\n             } catch (Exception e) {\n                 throw new ValidatorInstantiationException(\n                         \"Could not instantiate validator of type \"\n                         + getValidatorClass(), e);\n             }\n         } else {\n             try {\n-                validator = new UserAttributeBasicValidator(this);\n+                validator = new AttributeBasicValidator(this);\n             } catch (ClassNotFoundException cnfe) {\n                 throw new ValidatorInstantiationException(\n                         \"Could not instantiate basic validator\", cnfe);\n@@ -186,7 +186,7 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserAttributeSchema other = (UserAttributeSchema) obj;\n+        final AttributeSchema other = (AttributeSchema) obj;\n         if ((this.name == null) ? (other.name != null)\n                 : !this.name.equals(other.name)) {\n ","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserAttributeSchema.java"},{"sha":"b1725dbdf0cb90b0ea690f821d0871d532e9ad77","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValue.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -24,7 +24,7 @@\n \n @Entity\n @Inheritance(strategy = InheritanceType.JOINED)\n-public abstract class UserAttributeValue implements Serializable {\n+public abstract class AttributeValue implements Serializable {\n \n     @Id\n     @GeneratedValue(strategy = GenerationType.AUTO)\n@@ -42,7 +42,7 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserAttributeValue other = (UserAttributeValue) obj;\n+        final AttributeValue other = (AttributeValue) obj;\n         if (this.id != other.id\n                 && (this.id == null || !this.id.equals(other.id))) {\n ","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserAttributeValue.java"},{"sha":"d829968f8d585042801d19d3edf0f3a6813a0ec1","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsBoolean.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsBoolean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsBoolean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsBoolean.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -18,15 +18,15 @@\n import javax.persistence.Entity;\n \n @Entity\n-public class UserAttributeValueAsBoolean\n-        extends UserAttributeValue implements Serializable {\n+public class AttributeValueAsBoolean\n+        extends AttributeValue implements Serializable {\n \n     Boolean actualValue;\n \n-    public UserAttributeValueAsBoolean() {\n+    public AttributeValueAsBoolean() {\n     }\n \n-    public UserAttributeValueAsBoolean(Boolean actualValue) {\n+    public AttributeValueAsBoolean(Boolean actualValue) {\n         super();\n         this.actualValue = actualValue;\n     }\n@@ -51,8 +51,8 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserAttributeValueAsBoolean other =\n-                (UserAttributeValueAsBoolean) obj;\n+        final AttributeValueAsBoolean other =\n+                (AttributeValueAsBoolean) obj;\n         if (this.actualValue != other.actualValue\n                 && (this.actualValue == null\n                 || !this.actualValue.equals(other.actualValue))) {","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserAttributeValueAsBoolean.java"},{"sha":"1832bbc5f579b98690c7cdd073468624248b1a2c","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsDate.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDate.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -21,16 +21,16 @@\n import javax.persistence.TemporalType;\n \n @Entity\n-public class UserAttributeValueAsDate\n-        extends UserAttributeValue implements Serializable {\n+public class AttributeValueAsDate\n+        extends AttributeValue implements Serializable {\n \n     @Temporal(TemporalType.TIMESTAMP)\n     Date actualValue;\n \n-    public UserAttributeValueAsDate() {\n+    public AttributeValueAsDate() {\n     }\n \n-    public UserAttributeValueAsDate(Date actualValue) {\n+    public AttributeValueAsDate(Date actualValue) {\n         super();\n         this.actualValue = actualValue;\n     }\n@@ -55,7 +55,7 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserAttributeValueAsDate other = (UserAttributeValueAsDate) obj;\n+        final AttributeValueAsDate other = (AttributeValueAsDate) obj;\n         if (this.actualValue != other.actualValue\n                 && (this.actualValue == null\n                 || !this.actualValue.equals(other.actualValue))) {","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserAttributeValueAsDate.java"},{"sha":"3416ddd332bab7a0c8c693aab5159653386edbf3","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsDouble.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDouble.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDouble.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDouble.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -18,15 +18,15 @@\n import javax.persistence.Entity;\n \n @Entity\n-public class UserAttributeValueAsDouble\n-        extends UserAttributeValue implements Serializable {\n+public class AttributeValueAsDouble\n+        extends AttributeValue implements Serializable {\n \n     Double actualValue;\n \n-    public UserAttributeValueAsDouble() {\n+    public AttributeValueAsDouble() {\n     }\n \n-    public UserAttributeValueAsDouble(Double actualValue) {\n+    public AttributeValueAsDouble(Double actualValue) {\n         super();\n         this.actualValue = actualValue;\n     }\n@@ -51,8 +51,8 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserAttributeValueAsDouble other =\n-                (UserAttributeValueAsDouble) obj;\n+        final AttributeValueAsDouble other =\n+                (AttributeValueAsDouble) obj;\n         if (this.actualValue != other.actualValue\n                 && (this.actualValue == null\n                 || !this.actualValue.equals(other.actualValue))) {","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserAttributeValueAsDouble.java"},{"sha":"c86cfff030732eaf7b0459ee041469dd48d3fabe","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsLong.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsLong.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsLong.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsLong.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -18,15 +18,15 @@\n import javax.persistence.Entity;\n \n @Entity\n-public class UserAttributeValueAsLong\n-        extends UserAttributeValue implements Serializable {\n+public class AttributeValueAsLong\n+        extends AttributeValue implements Serializable {\n \n     Long actualValue;\n \n-    public UserAttributeValueAsLong() {\n+    public AttributeValueAsLong() {\n     }\n \n-    public UserAttributeValueAsLong(Long actualValue) {\n+    public AttributeValueAsLong(Long actualValue) {\n         super();\n         this.actualValue = actualValue;\n     }\n@@ -51,7 +51,7 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserAttributeValueAsLong other = (UserAttributeValueAsLong) obj;\n+        final AttributeValueAsLong other = (AttributeValueAsLong) obj;\n         if (this.actualValue != other.actualValue\n                 && (this.actualValue == null\n                 || !this.actualValue.equals(other.actualValue))) {","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserAttributeValueAsLong.java"},{"sha":"30d77cee710c0146def02e194f476287e254e5cd","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsString.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsString.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsString.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsString.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -18,15 +18,15 @@\n import javax.persistence.Entity;\n \n @Entity\n-public class UserAttributeValueAsString\n-        extends UserAttributeValue implements Serializable {\n+public class AttributeValueAsString\n+        extends AttributeValue implements Serializable {\n \n     String actualValue;\n \n-    public UserAttributeValueAsString() {\n+    public AttributeValueAsString() {\n     }\n \n-    public UserAttributeValueAsString(String actualValue) {\n+    public AttributeValueAsString(String actualValue) {\n         super();\n         this.actualValue = actualValue;\n     }\n@@ -51,8 +51,8 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserAttributeValueAsString other =\n-                (UserAttributeValueAsString) obj;\n+        final AttributeValueAsString other =\n+                (AttributeValueAsString) obj;\n         if ((this.actualValue == null)\n                 ? (other.actualValue != null)\n                 : !this.actualValue.equals(other.actualValue)) {","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserAttributeValueAsString.java"},{"sha":"8c7670e42c89dadc3f155863aa226e4069e9344d","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttribute.java","status":"renamed","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -33,7 +33,7 @@\n  * @see http://commons.apache.org/jexl/reference/index.html\n  */\n @Entity\n-public class UserDerivedAttribute implements Serializable {\n+public class DerivedAttribute implements Serializable {\n \n     private static final JexlEngine jexlEngine = new JexlEngine();\n \n@@ -48,7 +48,7 @@ public class UserDerivedAttribute implements Serializable {\n     @ManyToOne\n     private SyncopeUser owner;\n     @ManyToOne(fetch = FetchType.EAGER)\n-    private UserDerivedAttributeSchema schema;\n+    private DerivedAttributeSchema schema;\n \n     /**\n      * @see http://commons.apache.org/jexl/reference/index.html\n@@ -59,39 +59,39 @@ public String getValue() {\n                 schema.getExpression());\n         JexlContext jexlContext = new MapContext();\n \n-        Set<UserAttribute> attributes = owner.getAttributes();\n-        Set<UserAttributeValue> attributeValues = null;\n+        Set<Attribute> attributes = owner.getAttributes();\n+        Set<AttributeValue> attributeValues = null;\n         String expressionValue = null;\n-        UserAttributeValue userAttributeValue = null;\n-        for (UserAttribute attribute : attributes) {\n+        AttributeValue attributeValue = null;\n+        for (Attribute attribute : attributes) {\n             attributeValues = attribute.getValues();\n             if (attributeValues.isEmpty()) {\n                 expressionValue = \"\";\n             } else {\n-                userAttributeValue = attributeValues.iterator().next();\n+                attributeValue = attributeValues.iterator().next();\n                 switch (attribute.getSchema().getType()) {\n                     case Boolean:\n                         expressionValue =\n-                                ((UserAttributeValueAsBoolean) userAttributeValue).getActualValue().toString();\n+                                ((AttributeValueAsBoolean) attributeValue).getActualValue().toString();\n                         break;\n                     case Date:\n                         expressionValue = attribute.getSchema().getFormatter(\n                                 SimpleDateFormat.class).format(\n-                                ((UserAttributeValueAsDate) userAttributeValue).getActualValue());\n+                                ((AttributeValueAsDate) attributeValue).getActualValue());\n                         break;\n                     case Double:\n                         expressionValue = attribute.getSchema().getFormatter(\n                                 DecimalFormat.class).format(\n-                                ((UserAttributeValueAsDouble) userAttributeValue).getActualValue());\n+                                ((AttributeValueAsDouble) attributeValue).getActualValue());\n                         break;\n                     case Long:\n                         expressionValue = attribute.getSchema().getFormatter(\n                                 DecimalFormat.class).format(\n-                                ((UserAttributeValueAsDouble) userAttributeValue).getActualValue());\n+                                ((AttributeValueAsDouble) attributeValue).getActualValue());\n                         break;\n                     case String:\n                         expressionValue =\n-                                ((UserAttributeValueAsString) userAttributeValue).getActualValue();\n+                                ((AttributeValueAsString) attributeValue).getActualValue();\n                         break;\n                 }\n             }\n@@ -118,11 +118,11 @@ public void setOwner(SyncopeUser owner) {\n         this.owner = owner;\n     }\n \n-    public UserDerivedAttributeSchema getSchema() {\n+    public DerivedAttributeSchema getSchema() {\n         return schema;\n     }\n \n-    public void setSchema(UserDerivedAttributeSchema attributeSchema) {\n+    public void setSchema(DerivedAttributeSchema attributeSchema) {\n         this.schema = attributeSchema;\n     }\n \n@@ -134,7 +134,7 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserDerivedAttribute other = (UserDerivedAttribute) obj;\n+        final DerivedAttribute other = (DerivedAttribute) obj;\n         if (this.id != other.id\n                 && (this.id == null || !this.id.equals(other.id))) {\n ","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserDerivedAttribute.java"},{"sha":"e6d11ef7a13a69aa551bec91672a1ad07ac40486","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttributeSchema.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -19,7 +19,7 @@\n import javax.persistence.Id;\n \n @Entity\n-public class UserDerivedAttributeSchema implements Serializable {\n+public class DerivedAttributeSchema implements Serializable {\n \n     @Id\n     private String name;\n@@ -49,8 +49,8 @@ public boolean equals(Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final UserDerivedAttributeSchema other = \n-                (UserDerivedAttributeSchema) obj;\n+        final DerivedAttributeSchema other =\n+                (DerivedAttributeSchema) obj;\n         \n         if ((this.name == null)\n                 ? (other.name != null) : !this.name.equals(other.name)) {","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/UserDerivedAttributeSchema.java"},{"sha":"4b595c587340419a3cf0df3f5b018ba4d72a0a5d","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeUser.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -35,52 +35,52 @@ public class SyncopeUser implements Serializable {\n     private Long id;\n     @OneToMany(cascade = CascadeType.ALL,\n     fetch = FetchType.EAGER)\n-    private Set<UserAttribute> attributes;\n+    private Set<Attribute> attributes;\n     @OneToMany(cascade = CascadeType.ALL,\n     fetch = FetchType.EAGER, mappedBy = \"owner\")\n-    private Set<UserDerivedAttribute> derivedAttributes;\n+    private Set<DerivedAttribute> derivedAttributes;\n \n     public SyncopeUser() {\n-        attributes = new HashSet<UserAttribute>();\n-        derivedAttributes = new HashSet<UserDerivedAttribute>();\n+        attributes = new HashSet<Attribute>();\n+        derivedAttributes = new HashSet<DerivedAttribute>();\n     }\n \n     public Long getId() {\n         return id;\n     }\n \n-    public UserAttribute getAttribute(String name)\n+    public Attribute getAttribute(String name)\n             throws NoSuchElementException {\n \n-        UserAttribute result = null;\n-        UserAttribute userAttribute = null;\n-        for (Iterator<UserAttribute> itor = attributes.iterator();\n+        Attribute result = null;\n+        Attribute attribute = null;\n+        for (Iterator<Attribute> itor = attributes.iterator();\n                 result == null && itor.hasNext();) {\n \n-            userAttribute = itor.next();\n+            attribute = itor.next();\n \n-            if (name.equals(userAttribute.getSchema().getName())) {\n-                result = userAttribute;\n+            if (name.equals(attribute.getSchema().getName())) {\n+                result = attribute;\n             }\n         }\n \n         return result;\n     }\n \n-    public Set<UserAttribute> getAttributes() {\n+    public Set<Attribute> getAttributes() {\n         return attributes;\n     }\n \n-    public void setAttributes(Set<UserAttribute> attributes) {\n+    public void setAttributes(Set<Attribute> attributes) {\n         this.attributes = attributes;\n     }\n \n-    public Set<UserDerivedAttribute> getDerivedAttributes() {\n+    public Set<DerivedAttribute> getDerivedAttributes() {\n         return derivedAttributes;\n     }\n \n     public void setDerivedAttributes(\n-            Set<UserDerivedAttribute> derivedAttributes) {\n+            Set<DerivedAttribute> derivedAttributes) {\n \n         this.derivedAttributes = derivedAttributes;\n     }"},{"sha":"f9101aef50675f27a9f9cc7ec2e88c3d18870a64","filename":"core/src/main/java/org/syncope/core/persistence/dao/AttributeDAO.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeDAO.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -15,15 +15,15 @@\n package org.syncope.core.persistence.dao;\n \n import java.util.List;\n-import org.syncope.core.persistence.beans.UserAttribute;\n+import org.syncope.core.persistence.beans.Attribute;\n \n-public interface UserAttributeDAO extends DAO {\n+public interface AttributeDAO extends DAO {\n \n-    UserAttribute find(long id);\n+    Attribute find(long id);\n \n-    List<UserAttribute> findAll();\n+    List<Attribute> findAll();\n \n-    UserAttribute save(UserAttribute attribute);\n+    Attribute save(Attribute attribute);\n \n     void delete(long id);\n }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/UserAttributeDAO.java"},{"sha":"57d2ede65c8074f43ff577e531bcd14ba873555c","filename":"core/src/main/java/org/syncope/core/persistence/dao/AttributeSchemaDAO.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeSchemaDAO.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -15,15 +15,15 @@\n package org.syncope.core.persistence.dao;\n \n import java.util.List;\n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n \n-public interface UserAttributeSchemaDAO extends DAO {\n+public interface AttributeSchemaDAO extends DAO {\n \n-    UserAttributeSchema find(String name);\n+    AttributeSchema find(String name);\n \n-    List<UserAttributeSchema> findAll();\n+    List<AttributeSchema> findAll();\n \n-    UserAttributeSchema save(UserAttributeSchema userAttributeSchema);\n+    AttributeSchema save(AttributeSchema attributeSchema);\n \n     void delete(String name);\n }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/UserAttributeSchemaDAO.java"},{"sha":"a43d969d9219c531a195ea194db9dcff0c2818b6","filename":"core/src/main/java/org/syncope/core/persistence/dao/DerivedAttributeDAO.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerivedAttributeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerivedAttributeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerivedAttributeDAO.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -15,15 +15,15 @@\n package org.syncope.core.persistence.dao;\n \n import java.util.List;\n-import org.syncope.core.persistence.beans.UserDerivedAttribute;\n+import org.syncope.core.persistence.beans.DerivedAttribute;\n \n-public interface UserDerivedAttributeDAO extends DAO {\n+public interface DerivedAttributeDAO extends DAO {\n \n-    UserDerivedAttribute find(long id);\n+    DerivedAttribute find(long id);\n \n-    List<UserDerivedAttribute> findAll();\n+    List<DerivedAttribute> findAll();\n \n-    UserDerivedAttribute save(UserDerivedAttribute attribute);\n+    DerivedAttribute save(DerivedAttribute attribute);\n \n     void delete(long id);\n }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/UserDerivedAttributeDAO.java"},{"sha":"f9f710b0c476db95c6c3bdd9e7c623732dbb10f0","filename":"core/src/main/java/org/syncope/core/persistence/dao/DerivedAttributeSchemaDAO.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerivedAttributeSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerivedAttributeSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerivedAttributeSchemaDAO.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -15,15 +15,15 @@\n package org.syncope.core.persistence.dao;\n \n import java.util.List;\n-import org.syncope.core.persistence.beans.UserDerivedAttributeSchema;\n+import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n \n-public interface UserDerivedAttributeSchemaDAO extends DAO {\n+public interface DerivedAttributeSchemaDAO extends DAO {\n \n-    UserDerivedAttributeSchema find(String name);\n+    DerivedAttributeSchema find(String name);\n \n-    List<UserDerivedAttributeSchema> findAll();\n+    List<DerivedAttributeSchema> findAll();\n \n-    UserDerivedAttributeSchema save(UserDerivedAttributeSchema attributeSchema);\n+    DerivedAttributeSchema save(DerivedAttributeSchema attributeSchema);\n \n     void delete(String name);\n }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/UserDerivedAttributeSchemaDAO.java"},{"sha":"eece84110b6cad4144643b7cd6dbd08d61cc92f0","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeDAOImpl.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -18,29 +18,29 @@\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.UserAttribute;\n-import org.syncope.core.persistence.dao.UserAttributeDAO;\n+import org.syncope.core.persistence.beans.Attribute;\n+import org.syncope.core.persistence.dao.AttributeDAO;\n \n @Repository\n-public class UserAttributeDAOImpl extends AbstractDAOImpl\n-        implements UserAttributeDAO {\n+public class AttributeDAOImpl extends AbstractDAOImpl\n+        implements AttributeDAO {\n \n     @Override\n-    public UserAttribute find(long id) {\n-        return entityManager.find(UserAttribute.class, id);\n+    public Attribute find(long id) {\n+        return entityManager.find(Attribute.class, id);\n     }\n \n     @Override\n-    public List<UserAttribute> findAll() {\n+    public List<Attribute> findAll() {\n         Query query = entityManager.createQuery(\n-                \"SELECT e FROM UserAttribute e\");\n+                \"SELECT e FROM Attribute e\");\n         return query.getResultList();\n     }\n \n     @Override\n     @Transactional\n-    public UserAttribute save(UserAttribute attribute) {\n-        UserAttribute result = entityManager.merge(attribute);\n+    public Attribute save(Attribute attribute) {\n+        Attribute result = entityManager.merge(attribute);\n         entityManager.flush();\n         return result;\n     }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserAttributeDAOImpl.java"},{"sha":"47652358715287e09fefe98a00d444d3e149c377","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeSchemaDAOImpl.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -18,29 +18,29 @@\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n-import org.syncope.core.persistence.dao.UserAttributeSchemaDAO;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n \n @Repository\n-public class UserAttributeSchemaDAOImpl extends AbstractDAOImpl\n-        implements UserAttributeSchemaDAO {\n+public class AttributeSchemaDAOImpl extends AbstractDAOImpl\n+        implements AttributeSchemaDAO {\n \n     @Override\n-    public UserAttributeSchema find(String name) {\n-        return entityManager.find(UserAttributeSchema.class, name);\n+    public AttributeSchema find(String name) {\n+        return entityManager.find(AttributeSchema.class, name);\n     }\n \n     @Override\n-    public List<UserAttributeSchema> findAll() {\n+    public List<AttributeSchema> findAll() {\n         Query query = entityManager.createQuery(\n-                \"SELECT e FROM UserAttributeSchema e\");\n+                \"SELECT e FROM AttributeSchema e\");\n         return query.getResultList();\n     }\n \n     @Override\n     @Transactional\n-    public UserAttributeSchema save(UserAttributeSchema userAttributeSchema) {\n-        UserAttributeSchema result = entityManager.merge(userAttributeSchema);\n+    public AttributeSchema save(AttributeSchema attributeSchema) {\n+        AttributeSchema result = entityManager.merge(attributeSchema);\n         entityManager.flush();\n         return result;\n     }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserAttributeSchemaDAOImpl.java"},{"sha":"03328ccba3dbd17e6ee8f29bfbb50f418bee396a","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerivedAttributeDAOImpl.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -18,29 +18,29 @@\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.UserDerivedAttribute;\n-import org.syncope.core.persistence.dao.UserDerivedAttributeDAO;\n+import org.syncope.core.persistence.beans.DerivedAttribute;\n+import org.syncope.core.persistence.dao.DerivedAttributeDAO;\n \n @Repository\n-public class UserDerivedAttributeDAOImpl extends AbstractDAOImpl\n-        implements UserDerivedAttributeDAO {\n+public class DerivedAttributeDAOImpl extends AbstractDAOImpl\n+        implements DerivedAttributeDAO {\n \n     @Override\n-    public UserDerivedAttribute find(long id) {\n-        return entityManager.find(UserDerivedAttribute.class, id);\n+    public DerivedAttribute find(long id) {\n+        return entityManager.find(DerivedAttribute.class, id);\n     }\n \n     @Override\n-    public List<UserDerivedAttribute> findAll() {\n+    public List<DerivedAttribute> findAll() {\n         Query query = entityManager.createQuery(\n-                \"SELECT e FROM UserDerivedAttribute e\");\n+                \"SELECT e FROM DerivedAttribute e\");\n         return query.getResultList();\n     }\n \n     @Override\n     @Transactional\n-    public UserDerivedAttribute save(UserDerivedAttribute attribute) {\n-        UserDerivedAttribute result = entityManager.merge(attribute);\n+    public DerivedAttribute save(DerivedAttribute attribute) {\n+        DerivedAttribute result = entityManager.merge(attribute);\n         entityManager.flush();\n         return result;\n     }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDerivedAttributeDAOImpl.java"},{"sha":"5fa8683db0d13a6cdca6540c3ddd7750e7df6a39","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerivedAttributeSchemaDAOImpl.java","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeSchemaDAOImpl.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -18,31 +18,31 @@\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.UserDerivedAttributeSchema;\n-import org.syncope.core.persistence.dao.UserDerivedAttributeSchemaDAO;\n+import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n+import org.syncope.core.persistence.dao.DerivedAttributeSchemaDAO;\n \n @Repository\n-public class UserDerivedAttributeSchemaDAOImpl extends AbstractDAOImpl\n-        implements UserDerivedAttributeSchemaDAO {\n+public class DerivedAttributeSchemaDAOImpl extends AbstractDAOImpl\n+        implements DerivedAttributeSchemaDAO {\n \n     @Override\n-    public UserDerivedAttributeSchema find(String name) {\n-        return entityManager.find(UserDerivedAttributeSchema.class, name);\n+    public DerivedAttributeSchema find(String name) {\n+        return entityManager.find(DerivedAttributeSchema.class, name);\n     }\n \n     @Override\n-    public List<UserDerivedAttributeSchema> findAll() {\n+    public List<DerivedAttributeSchema> findAll() {\n         Query query = entityManager.createQuery(\n-                \"SELECT e FROM UserDerivedAttributeSchema e\");\n+                \"SELECT e FROM DerivedAttributeSchema e\");\n         return query.getResultList();\n     }\n \n     @Override\n     @Transactional\n-    public UserDerivedAttributeSchema save(\n-            UserDerivedAttributeSchema attributeSchema) {\n+    public DerivedAttributeSchema save(\n+            DerivedAttributeSchema attributeSchema) {\n \n-        UserDerivedAttributeSchema result = entityManager.merge(attributeSchema);\n+        DerivedAttributeSchema result = entityManager.merge(attributeSchema);\n         entityManager.flush();\n         return result;\n     }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDerivedAttributeSchemaDAOImpl.java"},{"sha":"3f1a89276f280e70087a1f2c8759a29401af86d5","filename":"core/src/main/java/org/syncope/core/persistence/validation/AlwaysTrueValidator.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAlwaysTrueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAlwaysTrueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAlwaysTrueValidator.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -16,27 +16,27 @@\n  */\n package org.syncope.core.persistence.validation;\n \n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n-import org.syncope.core.persistence.beans.UserAttributeValue;\n-import org.syncope.core.persistence.beans.UserAttributeValueAsBoolean;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.AttributeValue;\n+import org.syncope.core.persistence.beans.AttributeValueAsBoolean;\n \n-public class AlwaysTrueValidator extends UserAttributeValidator {\n+public class AlwaysTrueValidator extends AttributeValidator {\n \n-    public AlwaysTrueValidator(UserAttributeSchema schema)\n+    public AlwaysTrueValidator(AttributeSchema schema)\n             throws ClassNotFoundException {\n \n         super(schema);\n     }\n \n     @Override\n-    protected void doValidate(UserAttributeValue userAttributeValue)\n+    protected void doValidate(AttributeValue attributeValue)\n             throws ValidationFailedException {\n \n         Boolean value =\n-                ((UserAttributeValueAsBoolean) userAttributeValue).getActualValue();\n+                ((AttributeValueAsBoolean) attributeValue).getActualValue();\n \n         if (!value) {\n-            throw new ValidationFailedException(userAttributeValue);\n+            throw new ValidationFailedException(attributeValue);\n         }\n     }\n }"},{"sha":"35735dd6a202ec9d8f95c32e04e451a090abccda","filename":"core/src/main/java/org/syncope/core/persistence/validation/AttributeBasicValidator.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeBasicValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeBasicValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeBasicValidator.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -14,19 +14,19 @@\n  */\n package org.syncope.core.persistence.validation;\n \n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n-import org.syncope.core.persistence.beans.UserAttributeValue;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.AttributeValue;\n \n-public class UserAttributeBasicValidator extends UserAttributeValidator {\n+public class AttributeBasicValidator extends AttributeValidator {\n \n-    public UserAttributeBasicValidator(UserAttributeSchema schema) \n+    public AttributeBasicValidator(AttributeSchema schema)\n             throws ClassNotFoundException {\n         \n         super(schema);\n     }\n \n     @Override\n-    protected void doValidate(UserAttributeValue userAttributeValue)\n+    protected void doValidate(AttributeValue attributeValue)\n             throws ValidationFailedException {\n     }\n }","previous_filename":"core/src/main/java/org/syncope/core/persistence/validation/UserAttributeBasicValidator.java"},{"sha":"9dced1e45ec7be828115536f176985d1e8065da2","filename":"core/src/main/java/org/syncope/core/persistence/validation/AttributeValidator.java","status":"renamed","additions":31,"deletions":31,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeValidator.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -17,65 +17,65 @@\n import java.text.DecimalFormat;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n-import org.syncope.core.persistence.beans.UserAttributeValue;\n-import org.syncope.core.persistence.beans.UserAttributeValueAsBoolean;\n-import org.syncope.core.persistence.beans.UserAttributeValueAsDate;\n-import org.syncope.core.persistence.beans.UserAttributeValueAsDouble;\n-import org.syncope.core.persistence.beans.UserAttributeValueAsLong;\n-import org.syncope.core.persistence.beans.UserAttributeValueAsString;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.AttributeValue;\n+import org.syncope.core.persistence.beans.AttributeValueAsBoolean;\n+import org.syncope.core.persistence.beans.AttributeValueAsDate;\n+import org.syncope.core.persistence.beans.AttributeValueAsDouble;\n+import org.syncope.core.persistence.beans.AttributeValueAsLong;\n+import org.syncope.core.persistence.beans.AttributeValueAsString;\n \n-public abstract class UserAttributeValidator {\n+public abstract class AttributeValidator {\n \n-    final protected UserAttributeSchema schema;\n-    final protected Class userAttributeClass;\n+    final protected AttributeSchema schema;\n+    final protected Class attributeClass;\n \n-    public UserAttributeValidator(UserAttributeSchema schema)\n+    public AttributeValidator(AttributeSchema schema)\n             throws ClassNotFoundException {\n \n         this.schema = schema;\n-        this.userAttributeClass = Class.forName(\n+        this.attributeClass = Class.forName(\n                 schema.getType().getClassName());\n     }\n \n-    public UserAttributeValue getValue(Object value)\n+    public AttributeValue getValue(Object value)\n             throws ValidationException {\n \n-        if (!userAttributeClass.isInstance(value)) {\n+        if (!attributeClass.isInstance(value)) {\n             throw new ParseException(\n                     new ClassCastException(\"Passed value is instance of \"\n                     + value.getClass().getName()\n                     + \", while this attribute has type \"\n-                    + userAttributeClass.getName()));\n+                    + attributeClass.getName()));\n         }\n \n-        UserAttributeValue result = value instanceof String\n+        AttributeValue result = value instanceof String\n                 ? parseValue((String) value) : parseValue(value);\n         doValidate(result);\n \n         return result;\n     }\n \n-    protected UserAttributeValue parseValue(String value)\n+    protected AttributeValue parseValue(String value)\n             throws ParseException {\n \n-        UserAttributeValue result = null;\n+        AttributeValue result = null;\n         Exception exception = null;\n \n         switch (schema.getType()) {\n \n             case String:\n-                result = new UserAttributeValueAsString(value);\n+                result = new AttributeValueAsString(value);\n                 break;\n \n             case Boolean:\n-                result = new UserAttributeValueAsBoolean(\n+                result = new AttributeValueAsBoolean(\n                         Boolean.parseBoolean(value));\n                 break;\n \n             case Long:\n                 try {\n-                    result = new UserAttributeValueAsLong(\n+                    result = new AttributeValueAsLong(\n                             Long.valueOf(schema.getFormatter(\n                             DecimalFormat.class).parse(value).longValue()));\n                 } catch (java.text.ParseException pe) {\n@@ -85,7 +85,7 @@ protected UserAttributeValue parseValue(String value)\n \n             case Double:\n                 try {\n-                    result = new UserAttributeValueAsDouble(\n+                    result = new AttributeValueAsDouble(\n                             Double.valueOf(schema.getFormatter(\n                             DecimalFormat.class).parse(value).doubleValue()));\n                 } catch (java.text.ParseException pe) {\n@@ -95,7 +95,7 @@ protected UserAttributeValue parseValue(String value)\n \n             case Date:\n                 try {\n-                    result = new UserAttributeValueAsDate(\n+                    result = new AttributeValueAsDate(\n                             new Date(schema.getFormatter(\n                             SimpleDateFormat.class).parse(value).getTime()));\n                 } catch (java.text.ParseException pe) {\n@@ -112,38 +112,38 @@ protected UserAttributeValue parseValue(String value)\n         return result;\n     }\n \n-    protected UserAttributeValue parseValue(Object value)\n+    protected AttributeValue parseValue(Object value)\n             throws ParseException {\n \n-        UserAttributeValue result = null;\n+        AttributeValue result = null;\n \n         switch (schema.getType()) {\n \n             case String:\n-                result = new UserAttributeValueAsString((String) value);\n+                result = new AttributeValueAsString((String) value);\n                 break;\n \n             case Boolean:\n-                result = new UserAttributeValueAsBoolean((Boolean) value);\n+                result = new AttributeValueAsBoolean((Boolean) value);\n                 break;\n \n             case Long:\n-                result = new UserAttributeValueAsLong((Long) value);\n+                result = new AttributeValueAsLong((Long) value);\n                 break;\n \n             case Double:\n-                result = new UserAttributeValueAsDouble((Double) value);\n+                result = new AttributeValueAsDouble((Double) value);\n                 break;\n \n             case Date:\n-                result = new UserAttributeValueAsDate((Date) value);\n+                result = new AttributeValueAsDate((Date) value);\n                 break;\n         }\n \n         return result;\n     }\n \n     protected abstract void doValidate(\n-            UserAttributeValue userAttributeValue)\n+            AttributeValue attributeValue)\n             throws ValidationFailedException;\n }","previous_filename":"core/src/main/java/org/syncope/core/persistence/validation/UserAttributeValidator.java"},{"sha":"229df990218cb62a5010f77820b0e83f4eaf546e","filename":"core/src/main/java/org/syncope/core/persistence/validation/EmailAddressValidator.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FEmailAddressValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FEmailAddressValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FEmailAddressValidator.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -16,32 +16,32 @@\n \n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n-import org.syncope.core.persistence.beans.UserAttributeValue;\n-import org.syncope.core.persistence.beans.UserAttributeValueAsString;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.AttributeValue;\n+import org.syncope.core.persistence.beans.AttributeValueAsString;\n \n-public class EmailAddressValidator extends UserAttributeValidator {\n+public class EmailAddressValidator extends AttributeValidator {\n \n     final private static Pattern emailValidationPattern = Pattern.compile(\n             \"^[\\\\w\\\\-]([\\\\.\\\\w])+[\\\\w]+@([\\\\w\\\\-]+\\\\.)+[A-Z]{2,4}$\",\n             Pattern.CASE_INSENSITIVE);\n \n-    public EmailAddressValidator(UserAttributeSchema schema) \n+    public EmailAddressValidator(AttributeSchema schema)\n             throws ClassNotFoundException {\n         \n         super(schema);\n     }\n \n     @Override\n-    protected void doValidate(UserAttributeValue userAttributeValue)\n+    protected void doValidate(AttributeValue attributeValue)\n             throws ValidationFailedException {\n \n         CharSequence emailAddress =\n-                ((UserAttributeValueAsString) userAttributeValue).getActualValue();\n+                ((AttributeValueAsString) attributeValue).getActualValue();\n         Matcher matcher = emailValidationPattern.matcher(emailAddress);\n \n         if (!matcher.matches()) {\n-            throw new ValidationFailedException(userAttributeValue);\n+            throw new ValidationFailedException(attributeValue);\n         }\n     }\n }"},{"sha":"1df2f58a47317cbf75be0393276d5277e8f3f974","filename":"core/src/main/java/org/syncope/core/persistence/validation/ValidationFailedException.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FValidationFailedException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FValidationFailedException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FValidationFailedException.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -14,11 +14,11 @@\n  */\n package org.syncope.core.persistence.validation;\n \n-import org.syncope.core.persistence.beans.UserAttributeValue;\n+import org.syncope.core.persistence.beans.AttributeValue;\n \n public class ValidationFailedException extends ValidationException {\n \n-    public ValidationFailedException(UserAttributeValue userAttributeValue) {\n-        super(\"Could not validate \" + userAttributeValue);\n+    public ValidationFailedException(AttributeValue attributeValue) {\n+        super(\"Could not validate \" + attributeValue);\n     }\n }"},{"sha":"e06285a850469b3c40ea109dc83275eaee02b698","filename":"core/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -16,7 +16,7 @@\n         <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n         <init-param>\n             <param-name>contextConfigLocation</param-name>\n-            <param-value>/WEB-INF/classes/restContext.xml</param-value>\n+            <param-value>/WEB-INF/classes/*Context.xml</param-value>\n         </init-param>\n \n         <load-on-startup>1</load-on-startup>"},{"sha":"cace583fe7d60aedeceeec36fdd4ff873fbe579e","filename":"core/src/test/java/org/syncope/core/persistence/test/AbstractDAOTest.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -100,13 +100,13 @@ public void setUpTestDataWithinTransaction() throws Exception {\n \n             String[] tableNames = new String[]{\n                 \"SyncopeUser\",\n-                \"UserAttributeSchema\",\n-                \"UserAttribute\",\n-                \"UserAttributeValue\",\n-                \"UserAttributeValueAsString\",\n-                \"UserAttributeValueAsDate\",\n-                \"UserAttribute_UserAttributeValue\",\n-                \"SyncopeUser_UserAttribute\"};\n+                \"AttributeSchema\",\n+                \"Attribute\",\n+                \"AttributeValue\",\n+                \"AttributeValueAsString\",\n+                \"AttributeValueAsDate\",\n+                \"Attribute_AttributeValue\",\n+                \"SyncopeUser_Attribute\"};\n             for (int i = 0; i < tableNames.length; i++) {\n                 logTableContent(conn, tableNames[i]);\n             }"},{"sha":"90a9d00eac3dd11d242059877405619d90b22e79","filename":"core/src/test/java/org/syncope/core/persistence/test/AttributeDAOTest.java","status":"renamed","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -21,56 +21,56 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.AttributeType;\n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n-import org.syncope.core.persistence.beans.UserAttribute;\n-import org.syncope.core.persistence.dao.UserAttributeSchemaDAO;\n-import org.syncope.core.persistence.dao.UserAttributeDAO;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.Attribute;\n+import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n+import org.syncope.core.persistence.dao.AttributeDAO;\n import org.syncope.core.persistence.validation.ValidationException;\n \n @Transactional\n-public class UserAttributeDAOTest extends AbstractDAOTest {\n+public class AttributeDAOTest extends AbstractDAOTest {\n \n     @Autowired\n-    UserAttributeDAO userAttributeDAO;\n+    AttributeDAO attributeDAO;\n     @Autowired\n-    UserAttributeSchemaDAO userAttributeSchemaDAO;\n+    AttributeSchemaDAO attributeSchemaDAO;\n \n     @Test\n     public final void testFindAll() {\n-        List<UserAttribute> list = userAttributeDAO.findAll();\n+        List<Attribute> list = attributeDAO.findAll();\n         assertEquals(\"did not get expected number of attributes \",\n                 5, list.size());\n     }\n \n     @Test\n     public final void testFindById() {\n-        UserAttribute attribute = userAttributeDAO.find(100L);\n+        Attribute attribute = attributeDAO.find(100L);\n         assertNotNull(\"did not find expected attribute schema\",\n                 attribute);\n-        attribute = userAttributeDAO.find(200L);\n+        attribute = attributeDAO.find(200L);\n         assertNotNull(\"did not find expected attribute schema\",\n                 attribute);\n     }\n \n     @Test\n     public final void testSave() throws ClassNotFoundException {\n-        UserAttributeSchema emailSchema = new UserAttributeSchema();\n+        AttributeSchema emailSchema = new AttributeSchema();\n         emailSchema.setName(\"email\");\n         emailSchema.setType(AttributeType.String);\n         emailSchema.setValidatorClass(\n                 \"org.syncope.core.persistence.validation.EmailAddressValidator\");\n         emailSchema.setMandatory(false);\n         emailSchema.setMultivalue(true);\n \n-        userAttributeSchemaDAO.save(emailSchema);\n+        attributeSchemaDAO.save(emailSchema);\n \n-        UserAttributeSchema actualEmailSchema =\n-                userAttributeSchemaDAO.find(\"email\");\n+        AttributeSchema actualEmailSchema =\n+                attributeSchemaDAO.find(\"email\");\n         assertNotNull(\"expected save to work for e-mail schema\",\n                 actualEmailSchema);\n \n-        UserAttribute attribute =\n-                new UserAttribute(actualEmailSchema);\n+        Attribute attribute =\n+                new Attribute(actualEmailSchema);\n \n         Exception thrown = null;\n         try {\n@@ -90,34 +90,34 @@ public final void testSave() throws ClassNotFoundException {\n         }\n         assertNotNull(\"validation exception expected here \", thrown);\n \n-        attribute = userAttributeDAO.save(attribute);\n+        attribute = attributeDAO.save(attribute);\n \n-        UserAttribute actual = userAttributeDAO.find(attribute.getId());\n+        Attribute actual = attributeDAO.find(attribute.getId());\n         assertNotNull(\"expected save to work\", actual);\n         assertEquals(attribute, actual);\n     }\n \n     @Test\n     public final void testDelete() {\n-        UserAttribute attribute = userAttributeDAO.find(100L);\n+        Attribute attribute = attributeDAO.find(100L);\n \n-        userAttributeDAO.delete(attribute.getId());\n+        attributeDAO.delete(attribute.getId());\n \n-        UserAttribute actual = userAttributeDAO.find(100L);\n+        Attribute actual = attributeDAO.find(100L);\n         assertNull(\"delete did not work\", actual);\n     }\n \n     @Test\n     public final void testRelationships() {\n-        UserAttribute attribute = userAttributeDAO.find(200L);\n+        Attribute attribute = attributeDAO.find(200L);\n         String attributeSchemaName =\n                 attribute.getSchema().getName();\n \n-        userAttributeDAO.delete(attribute.getId());\n+        attributeDAO.delete(attribute.getId());\n \n-        UserAttributeSchema userAttributeSchema =\n-                userAttributeSchemaDAO.find(attributeSchemaName);\n+        AttributeSchema attributeSchema =\n+                attributeSchemaDAO.find(attributeSchemaName);\n         assertNotNull(\"user attribute schema deleted when deleting values\",\n-                userAttributeSchema);\n+                attributeSchema);\n     }\n }","previous_filename":"core/src/test/java/org/syncope/core/persistence/test/UserAttributeDAOTest.java"},{"sha":"1c2d00021c515636f9e240a0bd1cbb0f06b89b8d","filename":"core/src/test/java/org/syncope/core/persistence/test/AttributeSchemaDAOTest.java","status":"renamed","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -20,56 +20,56 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n-import org.syncope.core.persistence.dao.UserAttributeSchemaDAO;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n import org.syncope.core.persistence.AttributeType;\n \n @Transactional\n-public class UserAttributeSchemaDAOTest extends AbstractDAOTest {\n+public class AttributeSchemaDAOTest extends AbstractDAOTest {\n \n     @Autowired\n-    UserAttributeSchemaDAO userAttributeSchemaDAO;\n+    AttributeSchemaDAO attributeSchemaDAO;\n \n     @Test\n     public final void testFindAll() {\n-        List<UserAttributeSchema> list = userAttributeSchemaDAO.findAll();\n+        List<AttributeSchema> list = attributeSchemaDAO.findAll();\n         assertEquals(\"did not get expected number of attribute schemas \",\n                 4, list.size());\n     }\n \n     @Test\n     public final void testFindByName() {\n-        UserAttributeSchema userAttributeSchema = \n-                userAttributeSchemaDAO.find(\"username\");\n+        AttributeSchema attributeSchema =\n+                attributeSchemaDAO.find(\"username\");\n         assertNotNull(\"did not find expected attribute schema\",\n-                userAttributeSchema);\n+                attributeSchema);\n     }\n \n     @Test\n     public final void testSave() {\n-        UserAttributeSchema userAttributeSchema = new UserAttributeSchema();\n-        userAttributeSchema.setName(\"email\");\n-        userAttributeSchema.setType(AttributeType.String);\n-        userAttributeSchema.setValidatorClass(\n+        AttributeSchema attributeSchema = new AttributeSchema();\n+        attributeSchema.setName(\"email\");\n+        attributeSchema.setType(AttributeType.String);\n+        attributeSchema.setValidatorClass(\n                 \"org.syncope.core.validation.EmailAddressValidator\");\n-        userAttributeSchema.setMandatory(false);\n-        userAttributeSchema.setMultivalue(true);\n+        attributeSchema.setMandatory(false);\n+        attributeSchema.setMultivalue(true);\n \n-        userAttributeSchemaDAO.save(userAttributeSchema);\n+        attributeSchemaDAO.save(attributeSchema);\n \n-        UserAttributeSchema actual = userAttributeSchemaDAO.find(\"email\");\n+        AttributeSchema actual = attributeSchemaDAO.find(\"email\");\n         assertNotNull(\"expected save to work\", actual);\n-        assertEquals(userAttributeSchema, actual);\n+        assertEquals(attributeSchema, actual);\n     }\n \n     @Test\n     public final void testDelete() {\n-        UserAttributeSchema userAttributeSchema = \n-                userAttributeSchemaDAO.find(\"username\");\n+        AttributeSchema attributeSchema =\n+                attributeSchemaDAO.find(\"username\");\n \n-        userAttributeSchemaDAO.delete(userAttributeSchema.getName());\n+        attributeSchemaDAO.delete(attributeSchema.getName());\n \n-        UserAttributeSchema actual = userAttributeSchemaDAO.find(\"username\");\n+        AttributeSchema actual = attributeSchemaDAO.find(\"username\");\n         assertNull(\"delete did not work\", actual);\n     }\n }","previous_filename":"core/src/test/java/org/syncope/core/persistence/test/UserAttributeSchemaDAOTest.java"},{"sha":"8c3d8b0293571b19917ae0bfec33d1d68e7bccf6","filename":"core/src/test/java/org/syncope/core/persistence/test/DerivedAttributeDAOTest.java","status":"renamed","additions":31,"deletions":31,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -21,69 +21,69 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.SyncopeUser;\n-import org.syncope.core.persistence.beans.UserAttributeValueAsString;\n-import org.syncope.core.persistence.beans.UserDerivedAttribute;\n-import org.syncope.core.persistence.beans.UserDerivedAttributeSchema;\n+import org.syncope.core.persistence.beans.AttributeValueAsString;\n+import org.syncope.core.persistence.beans.DerivedAttribute;\n+import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n-import org.syncope.core.persistence.dao.UserDerivedAttributeDAO;\n-import org.syncope.core.persistence.dao.UserDerivedAttributeSchemaDAO;\n+import org.syncope.core.persistence.dao.DerivedAttributeDAO;\n+import org.syncope.core.persistence.dao.DerivedAttributeSchemaDAO;\n \n @Transactional\n-public class UserDerivedAttributeDAOTest extends AbstractDAOTest {\n+public class DerivedAttributeDAOTest extends AbstractDAOTest {\n \n     @Autowired\n-    UserDerivedAttributeDAO userDerivedAttributeDAO;\n+    DerivedAttributeDAO derivedAttributeDAO;\n     @Autowired\n     SyncopeUserDAO syncopeUserDAO;\n     @Autowired\n-    UserDerivedAttributeSchemaDAO userDerivedAttributeSchemaDAO;\n+    DerivedAttributeSchemaDAO derivedAttributeSchemaDAO;\n \n     @Test\n     public final void testFindAll() {\n-        List<UserDerivedAttribute> list = userDerivedAttributeDAO.findAll();\n+        List<DerivedAttribute> list = derivedAttributeDAO.findAll();\n         assertEquals(\"did not get expected number of derived attributes \",\n                 1, list.size());\n     }\n \n     @Test\n     public final void testFindById() {\n-        UserDerivedAttribute attribute = userDerivedAttributeDAO.find(1000L);\n+        DerivedAttribute attribute = derivedAttributeDAO.find(1000L);\n         assertNotNull(\"did not find expected attribute schema\",\n                 attribute);\n     }\n \n     @Test\n     public final void testSave() throws ClassNotFoundException {\n-        UserDerivedAttributeSchema userDerivedAttributeSchema =\n-                new UserDerivedAttributeSchema();\n-        userDerivedAttributeSchema.setName(\"cn2\");\n-        userDerivedAttributeSchema.setExpression(\"firstname + \\\" \\\" + surname\");\n+        DerivedAttributeSchema derivedAttributeSchema =\n+                new DerivedAttributeSchema();\n+        derivedAttributeSchema.setName(\"cn2\");\n+        derivedAttributeSchema.setExpression(\"firstname + \\\" \\\" + surname\");\n \n-        userDerivedAttributeSchemaDAO.save(userDerivedAttributeSchema);\n+        derivedAttributeSchemaDAO.save(derivedAttributeSchema);\n \n-        UserDerivedAttributeSchema actualCN2Schema =\n-                userDerivedAttributeSchemaDAO.find(\"cn2\");\n+        DerivedAttributeSchema actualCN2Schema =\n+                derivedAttributeSchemaDAO.find(\"cn2\");\n         assertNotNull(\"expected save to work for CN2 schema\",\n                 actualCN2Schema);\n \n         SyncopeUser owner = syncopeUserDAO.find(3L);\n         assertNotNull(\"did not get expected user\", owner);\n \n-        UserDerivedAttribute derivedAttribute = new UserDerivedAttribute();\n-        derivedAttribute.setSchema(userDerivedAttributeSchema);\n+        DerivedAttribute derivedAttribute = new DerivedAttribute();\n+        derivedAttribute.setSchema(derivedAttributeSchema);\n         derivedAttribute.setOwner(owner);\n \n-        derivedAttribute = userDerivedAttributeDAO.save(derivedAttribute);\n+        derivedAttribute = derivedAttributeDAO.save(derivedAttribute);\n \n-        UserDerivedAttribute actual = userDerivedAttributeDAO.find(derivedAttribute.getId());\n+        DerivedAttribute actual = derivedAttributeDAO.find(derivedAttribute.getId());\n         assertNotNull(\"expected save to work\", actual);\n         assertEquals(derivedAttribute, actual);\n \n-        UserAttributeValueAsString firstnameAttribute =\n-                (UserAttributeValueAsString) owner.getAttribute(\n+        AttributeValueAsString firstnameAttribute =\n+                (AttributeValueAsString) owner.getAttribute(\n                 \"firstname\").getValues().iterator().next();\n-        UserAttributeValueAsString surnameAttribute =\n-                (UserAttributeValueAsString) owner.getAttribute(\n+        AttributeValueAsString surnameAttribute =\n+                (AttributeValueAsString) owner.getAttribute(\n                 \"surname\").getValues().iterator().next();\n \n         assertEquals(\"expected derived value\",\n@@ -94,18 +94,18 @@ public final void testSave() throws ClassNotFoundException {\n \n     @Test\n     public final void testDeleteAndRelationships() {\n-        UserDerivedAttribute attribute = userDerivedAttributeDAO.find(1000L);\n+        DerivedAttribute attribute = derivedAttributeDAO.find(1000L);\n         String attributeSchemaName =\n                 attribute.getSchema().getName();\n \n-        userDerivedAttributeDAO.delete(attribute.getId());\n+        derivedAttributeDAO.delete(attribute.getId());\n \n-        UserDerivedAttribute actual = userDerivedAttributeDAO.find(1000L);\n+        DerivedAttribute actual = derivedAttributeDAO.find(1000L);\n         assertNull(\"delete did not work\", actual);\n \n-        UserDerivedAttributeSchema userAttributeSchema =\n-                userDerivedAttributeSchemaDAO.find(attributeSchemaName);\n+        DerivedAttributeSchema attributeSchema =\n+                derivedAttributeSchemaDAO.find(attributeSchemaName);\n         assertNotNull(\"user derived attribute schema deleted when deleting values\",\n-                userAttributeSchema);\n+                attributeSchema);\n     }\n }","previous_filename":"core/src/test/java/org/syncope/core/persistence/test/UserDerivedAttributeDAOTest.java"},{"sha":"bd01b8ab377e346e77f39cfffac744aa6f670eb5","filename":"core/src/test/java/org/syncope/core/persistence/test/DerivedAttributeSchemaDAOTest.java","status":"renamed","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -20,55 +20,55 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.UserDerivedAttributeSchema;\n-import org.syncope.core.persistence.dao.UserDerivedAttributeSchemaDAO;\n+import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n+import org.syncope.core.persistence.dao.DerivedAttributeSchemaDAO;\n \n @Transactional\n-public class UserDerivedAttributeSchemaDAOTest extends AbstractDAOTest {\n+public class DerivedAttributeSchemaDAOTest extends AbstractDAOTest {\n \n     @Autowired\n-    UserDerivedAttributeSchemaDAO userDerivedAttributeSchemaDAO;\n+    DerivedAttributeSchemaDAO derivedAttributeSchemaDAO;\n \n     @Test\n     public final void testFindAll() {\n-        List<UserDerivedAttributeSchema> list =\n-                userDerivedAttributeSchemaDAO.findAll();\n+        List<DerivedAttributeSchema> list =\n+                derivedAttributeSchemaDAO.findAll();\n         assertEquals(\"did not get expected number of derived attribute schemas \",\n                 1, list.size());\n     }\n \n     @Test\n     public final void testFindByName() {\n-        UserDerivedAttributeSchema userAttributeSchema =\n-                userDerivedAttributeSchemaDAO.find(\"cn\");\n+        DerivedAttributeSchema attributeSchema =\n+                derivedAttributeSchemaDAO.find(\"cn\");\n         assertNotNull(\"did not find expected derived attribute schema\",\n-                userAttributeSchema);\n+                attributeSchema);\n     }\n \n     @Test\n     public final void testSave() {\n-        UserDerivedAttributeSchema userDerivedAttributeSchema =\n-                new UserDerivedAttributeSchema();\n-        userDerivedAttributeSchema.setName(\"cn2\");\n-        userDerivedAttributeSchema.setExpression(\"name surname\");\n+        DerivedAttributeSchema derivedAttributeSchema =\n+                new DerivedAttributeSchema();\n+        derivedAttributeSchema.setName(\"cn2\");\n+        derivedAttributeSchema.setExpression(\"name surname\");\n \n-        userDerivedAttributeSchemaDAO.save(userDerivedAttributeSchema);\n+        derivedAttributeSchemaDAO.save(derivedAttributeSchema);\n \n-        UserDerivedAttributeSchema actual =\n-                userDerivedAttributeSchemaDAO.find(\"cn2\");\n+        DerivedAttributeSchema actual =\n+                derivedAttributeSchemaDAO.find(\"cn2\");\n         assertNotNull(\"expected save to work\", actual);\n-        assertEquals(userDerivedAttributeSchema, actual);\n+        assertEquals(derivedAttributeSchema, actual);\n     }\n \n     @Test\n     public final void testDelete() {\n-        UserDerivedAttributeSchema userAttributeSchema =\n-                userDerivedAttributeSchemaDAO.find(\"cn\");\n+        DerivedAttributeSchema attributeSchema =\n+                derivedAttributeSchemaDAO.find(\"cn\");\n \n-        userDerivedAttributeSchemaDAO.delete(userAttributeSchema.getName());\n+        derivedAttributeSchemaDAO.delete(attributeSchema.getName());\n \n-        UserDerivedAttributeSchema actual =\n-                userDerivedAttributeSchemaDAO.find(\"cn\");\n+        DerivedAttributeSchema actual =\n+                derivedAttributeSchemaDAO.find(\"cn\");\n         assertNull(\"delete did not work\", actual);\n     }\n }","previous_filename":"core/src/test/java/org/syncope/core/persistence/test/UserDerivedAttributeSchemaDAOTest.java"},{"sha":"c2af0d520decde325b846e5eb2c5eb81eb67fd98","filename":"core/src/test/java/org/syncope/core/persistence/test/SyncopeUserDAOTest.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -22,21 +22,21 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.SyncopeUser;\n-import org.syncope.core.persistence.beans.UserAttributeSchema;\n-import org.syncope.core.persistence.beans.UserAttribute;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.Attribute;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n-import org.syncope.core.persistence.dao.UserAttributeSchemaDAO;\n-import org.syncope.core.persistence.dao.UserAttributeDAO;\n+import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n+import org.syncope.core.persistence.dao.AttributeDAO;\n \n @Transactional\n public class SyncopeUserDAOTest extends AbstractDAOTest {\n \n     @Autowired\n     SyncopeUserDAO syncopeUserDAO;\n     @Autowired\n-    UserAttributeDAO userAttributeDAO;\n+    AttributeDAO attributeDAO;\n     @Autowired\n-    UserAttributeSchemaDAO userAttributeSchemaDAO;\n+    AttributeSchemaDAO attributeSchemaDAO;\n \n     @Test\n     public final void testFindAll() {\n@@ -77,27 +77,27 @@ public final void testDelete() {\n     @Test\n     public final void testRelationships() {\n         SyncopeUser user = syncopeUserDAO.find(2L);\n-        Set<UserAttribute> attributes =\n+        Set<Attribute> attributes =\n                 user.getAttributes();\n         int originalAttributesSize = attributes.size();\n \n-        UserAttribute attribute = attributes.iterator().next();\n+        Attribute attribute = attributes.iterator().next();\n         String attributeSchemaName =\n                 attribute.getSchema().getName();\n \n-        userAttributeDAO.delete(attribute.getId());\n-        UserAttribute actualAttribute =\n-                userAttributeDAO.find(attribute.getId());\n+        attributeDAO.delete(attribute.getId());\n+        Attribute actualAttribute =\n+                attributeDAO.find(attribute.getId());\n         assertNull(\"expected delete to work\", actualAttribute);\n \n         user = syncopeUserDAO.find(2L);\n         attributes = user.getAttributes();\n         assertEquals(\"number of attributes differs\",\n                 originalAttributesSize, attributes.size());\n \n-        UserAttributeSchema userAttributeSchema =\n-                userAttributeSchemaDAO.find(attributeSchemaName);\n+        AttributeSchema attributeSchema =\n+                attributeSchemaDAO.find(attributeSchemaName);\n         assertNotNull(\"user attribute schema deleted when deleting values\",\n-                userAttributeSchema);\n+                attributeSchema);\n     }\n }"},{"sha":"a7fa0a8acf594f048923ad0c37b4a006e73725ec","filename":"core/src/test/resources/dbunitTestData.xml","status":"modified","additions":53,"deletions":53,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3843ab5d8a47012a8e469c710861dda88da65b59/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml?ref=3843ab5d8a47012a8e469c710861dda88da65b59","patch":"@@ -4,67 +4,67 @@\n     <SyncopeUser id=\"2\"/>\n     <SyncopeUser id=\"3\"/>\n \n-    <UserAttributeSchema name=\"username\" type=\"String\"\n-                         mandatory=\"true\" multivalue=\"false\"\n-                         conversionPattern=\"NULL\" validatorClass=\"NULL\"/>\n-    <UserAttributeSchema name=\"loginDate\" type=\"Date\"\n-                         mandatory=\"false\" multivalue=\"true\"\n-                         conversionPattern=\"yyyy-MM-dd\" validatorClass=\"NULL\"/>\n-    <UserAttributeSchema name=\"firstname\" type=\"String\"\n-                         mandatory=\"false\" multivalue=\"false\"\n-                         conversionPattern=\"NULL\" validatorClass=\"NULL\"/>\n-    <UserAttributeSchema name=\"surname\" type=\"String\"\n-                         mandatory=\"true\" multivalue=\"false\"\n-                         conversionPattern=\"NULL\" validatorClass=\"NULL\"/>\n+    <AttributeSchema name=\"username\" type=\"String\"\n+                     mandatory=\"true\" multivalue=\"false\"\n+                     conversionPattern=\"NULL\" validatorClass=\"NULL\"/>\n+    <AttributeSchema name=\"loginDate\" type=\"Date\"\n+                     mandatory=\"false\" multivalue=\"true\"\n+                     conversionPattern=\"yyyy-MM-dd\" validatorClass=\"NULL\"/>\n+    <AttributeSchema name=\"firstname\" type=\"String\"\n+                     mandatory=\"false\" multivalue=\"false\"\n+                     conversionPattern=\"NULL\" validatorClass=\"NULL\"/>\n+    <AttributeSchema name=\"surname\" type=\"String\"\n+                     mandatory=\"true\" multivalue=\"false\"\n+                     conversionPattern=\"NULL\" validatorClass=\"NULL\"/>\n \n-    <UserAttribute id=\"100\" schema_name=\"username\"/>\n-    <UserAttribute id=\"200\" schema_name=\"loginDate\"/>\n-    <UserAttribute id=\"300\" schema_name=\"username\"/>\n-    <UserAttribute id=\"400\" schema_name=\"firstname\"/>\n-    <UserAttribute id=\"500\" schema_name=\"surname\"/>\n+    <Attribute id=\"100\" schema_name=\"username\"/>\n+    <Attribute id=\"200\" schema_name=\"loginDate\"/>\n+    <Attribute id=\"300\" schema_name=\"username\"/>\n+    <Attribute id=\"400\" schema_name=\"firstname\"/>\n+    <Attribute id=\"500\" schema_name=\"surname\"/>\n \n \n-    <UserAttributeValue id=\"10\"/>\n-    <UserAttributeValue id=\"11\"/>\n-    <UserAttributeValue id=\"20\"/>\n-    <UserAttributeValue id=\"21\"/>\n-    <UserAttributeValue id=\"30\"/>\n-    <UserAttributeValue id=\"31\"/>\n+    <AttributeValue id=\"10\"/>\n+    <AttributeValue id=\"11\"/>\n+    <AttributeValue id=\"20\"/>\n+    <AttributeValue id=\"21\"/>\n+    <AttributeValue id=\"30\"/>\n+    <AttributeValue id=\"31\"/>\n \n-    <UserAttributeValueAsString id=\"10\" actualValue=\"chicchiricco\"/>\n-    <UserAttributeValueAsString id=\"11\" actualValue=\"fabio.martelli\"/>\n+    <AttributeValueAsString id=\"10\" actualValue=\"chicchiricco\"/>\n+    <AttributeValueAsString id=\"11\" actualValue=\"fabio.martelli\"/>\n \n-    <UserAttributeValueAsDate id=\"20\" actualValue=\"2009-05-26\"/>\n-    <UserAttributeValueAsDate id=\"21\" actualValue=\"2010-05-26 15:40:04\"/>\n+    <AttributeValueAsDate id=\"20\" actualValue=\"2009-05-26\"/>\n+    <AttributeValueAsDate id=\"21\" actualValue=\"2010-05-26 15:40:04\"/>\n \n-    <UserAttributeValueAsString id=\"30\" actualValue=\"John\"/>\n-    <UserAttributeValueAsString id=\"31\" actualValue=\"Doe\"/>\n+    <AttributeValueAsString id=\"30\" actualValue=\"John\"/>\n+    <AttributeValueAsString id=\"31\" actualValue=\"Doe\"/>\n \n-    <UserAttribute_UserAttributeValue\n-        UserAttribute_id=\"100\" values_id=\"10\"/>\n-    <UserAttribute_UserAttributeValue\n-        UserAttribute_id=\"200\" values_id=\"20\"/>\n-    <UserAttribute_UserAttributeValue\n-        UserAttribute_id=\"200\" values_id=\"21\"/>\n-    <UserAttribute_UserAttributeValue\n-        UserAttribute_id=\"300\" values_id=\"11\"/>\n-    <UserAttribute_UserAttributeValue\n-        UserAttribute_id=\"400\" values_id=\"30\"/>\n-    <UserAttribute_UserAttributeValue\n-        UserAttribute_id=\"500\" values_id=\"31\"/>\n+    <Attribute_AttributeValue\n+        Attribute_id=\"100\" values_id=\"10\"/>\n+    <Attribute_AttributeValue\n+        Attribute_id=\"200\" values_id=\"20\"/>\n+    <Attribute_AttributeValue\n+        Attribute_id=\"200\" values_id=\"21\"/>\n+    <Attribute_AttributeValue\n+        Attribute_id=\"300\" values_id=\"11\"/>\n+    <Attribute_AttributeValue\n+        Attribute_id=\"400\" values_id=\"30\"/>\n+    <Attribute_AttributeValue\n+        Attribute_id=\"500\" values_id=\"31\"/>\n \n-    <SyncopeUser_UserAttribute SyncopeUser_id='1'\n-                               attributes_id='100'/>\n-    <SyncopeUser_UserAttribute SyncopeUser_id='1'\n-                               attributes_id='200'/>\n-    <SyncopeUser_UserAttribute SyncopeUser_id='2'\n-                               attributes_id='300'/>\n-    <SyncopeUser_UserAttribute SyncopeUser_id='3'\n-                               attributes_id='400'/>\n-    <SyncopeUser_UserAttribute SyncopeUser_id='3'\n-                               attributes_id='500'/>\n+    <SyncopeUser_Attribute SyncopeUser_id='1'\n+                           attributes_id='100'/>\n+    <SyncopeUser_Attribute SyncopeUser_id='1'\n+                           attributes_id='200'/>\n+    <SyncopeUser_Attribute SyncopeUser_id='2'\n+                           attributes_id='300'/>\n+    <SyncopeUser_Attribute SyncopeUser_id='3'\n+                           attributes_id='400'/>\n+    <SyncopeUser_Attribute SyncopeUser_id='3'\n+                           attributes_id='500'/>\n \n-    <UserDerivedAttributeSchema name=\"cn\" expression=\"surname + ', ' + firstname\"/>\n+    <DerivedAttributeSchema name=\"cn\" expression=\"surname + ', ' + firstname\"/>\n \n-    <UserDerivedAttribute id=\"1000\" owner_id=\"3\" schema_name=\"cn\"/>\n+    <DerivedAttribute id=\"1000\" owner_id=\"3\" schema_name=\"cn\"/>\n </dataset>"}]}