{"sha":"daecdbbc02f6b9011b8b3e721d6c8ec89abf9169","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRhZWNkYmJjMDJmNmI5MDExYjhiM2U3MjFkNmM4ZWM4OWFiZjkxNjk=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-04-22T09:20:45Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-04-22T09:20:45Z"},"message":"[SYNCOPE-801] provides fix for provision rules management","tree":{"sha":"565e8f21d08c8e782d8a28fe8543459166f19187","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/565e8f21d08c8e782d8a28fe8543459166f19187"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"0139df76876234e593b8592502bcd476db50b407","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0139df76876234e593b8592502bcd476db50b407","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0139df76876234e593b8592502bcd476db50b407"}],"stats":{"total":122,"additions":75,"deletions":47},"files":[{"sha":"3ecbf11f97be18c806c2976bec7bfcc028510753","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=daecdbbc02f6b9011b8b3e721d6c8ec89abf9169","patch":"@@ -67,6 +67,8 @@ public class TopologyTogglePanel extends TogglePanel<Serializable> {\n \n     protected final BaseModal<Serializable> taskModal;\n \n+    protected final BaseModal<Serializable> provisionModal;\n+\n     public TopologyTogglePanel(final String id, final PageReference pageRef) {\n         super(id);\n         this.pageRef = pageRef;\n@@ -79,6 +81,11 @@ public TopologyTogglePanel(final String id, final PageReference pageRef) {\n         taskModal.size(Modal.Size.Large);\n         addOuterObject(taskModal);\n \n+        provisionModal = new BaseModal<>(\"outer\");\n+        provisionModal.size(Modal.Size.Large);\n+        provisionModal.addSumbitButton();\n+        addOuterObject(provisionModal);\n+\n         container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupPlaceholderTag(true);\n         addInnerObject(container);\n@@ -307,16 +314,16 @@ public void onClick(final AjaxRequestTarget target) {\n                 ResourceTO modelObject = resourceRestClient.read(node.getKey().toString());\n \n                 IModel<ResourceTO> model = new CompoundPropertyModel<>(modelObject);\n-                taskModal.setFormModel(model);\n+                provisionModal.setFormModel(model);\n \n-                target.add(taskModal.setContent(new ResourceProvisionPanel(taskModal, modelObject, pageRef)));\n+                target.add(provisionModal.setContent(new ResourceProvisionPanel(provisionModal, modelObject, pageRef)));\n \n-                taskModal.header(new Model<>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));\n+                provisionModal.header(new Model<>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));\n \n                 MetaDataRoleAuthorizationStrategy.\n-                        authorize(taskModal.getForm(), ENABLE, StandardEntitlement.RESOURCE_UPDATE);\n+                        authorize(provisionModal.getForm(), ENABLE, StandardEntitlement.RESOURCE_UPDATE);\n \n-                taskModal.show(true);\n+                provisionModal.show(true);\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(edit, ENABLE, StandardEntitlement.RESOURCE_UPDATE);"},{"sha":"97680bd646ba7dd0a240a1d407199c9855cdbf7f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=daecdbbc02f6b9011b8b3e721d6c8ec89abf9169","patch":"@@ -19,32 +19,46 @@\n package org.apache.syncope.client.console.wizards.resources;\n \n import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.List;\n+import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.panels.ListViewPanel;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.StringResourceModel;\n \n public class ResourceProvisionPanel extends AbstractModalPanel<Serializable> {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n+    private final ResourceTO resourceTO;\n+\n     public ResourceProvisionPanel(\n             final BaseModal<Serializable> modal,\n             final ResourceTO resourceTO,\n             final PageReference pageRef) {\n         super(modal, pageRef);\n+        this.resourceTO = resourceTO;\n+\n         setOutputMarkupId(true);\n \n         final ProvisionWizardBuilder wizard = new ProvisionWizardBuilder(resourceTO, pageRef);\n@@ -127,4 +141,46 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n \n         add(list);\n     }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        try {\n+            boolean connObjectKeyError = false;\n+\n+            final Collection<ProvisionTO> provisions = new ArrayList<>(resourceTO.getProvisions());\n+\n+            for (ProvisionTO provision : provisions) {\n+                if (provision != null) {\n+                    if (provision.getMapping() == null || provision.getMapping().getItems().isEmpty()) {\n+                        resourceTO.getProvisions().remove(provision);\n+                    } else {\n+                        long uConnObjectKeyCount = IterableUtils.countMatches(\n+                                provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n+\n+                            @Override\n+                            public boolean evaluate(final MappingItemTO item) {\n+                                return item.isConnObjectKey();\n+                            }\n+                        });\n+\n+                        connObjectKeyError = uConnObjectKeyCount != 1;\n+                    }\n+                }\n+            }\n+\n+            final ResourceTO res;\n+            if (connObjectKeyError) {\n+                throw new RuntimeException(new StringResourceModel(\"connObjectKeyValidation\").getString());\n+            } else {\n+                new ResourceRestClient().update(resourceTO);\n+                res = resourceTO;\n+            }\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating or updating {}\", resourceTO, e);\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+        }\n+        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+    }\n }"},{"sha":"a990fd7b729daa2fd38fc1f0c8c312b33d4f2eb6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceWizardBuilder.java","status":"modified","additions":3,"deletions":37,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java?ref=daecdbbc02f6b9011b8b3e721d6c8ec89abf9169","patch":"@@ -19,24 +19,17 @@\n package org.apache.syncope.client.console.wizards.resources;\n \n import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import org.apache.commons.collections4.IterableUtils;\n-import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.topology.TopologyNode;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.common.lib.to.MappingItemTO;\n-import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.model.StringResourceModel;\n \n /**\n  * Resource wizard builder.\n@@ -95,39 +88,12 @@ protected void onComponentTag(final ComponentTag tag) {\n     @Override\n     protected ResourceTO onApplyInternal(final Serializable modelObject) {\n         final ResourceTO resourceTO = ResourceTO.class.cast(modelObject);\n-        boolean connObjectKeyError = false;\n-\n-        final Collection<ProvisionTO> provisions = new ArrayList<>(resourceTO.getProvisions());\n-\n-        for (ProvisionTO provision : provisions) {\n-            if (provision != null) {\n-                if (provision.getMapping() == null || provision.getMapping().getItems().isEmpty()) {\n-                    resourceTO.getProvisions().remove(provision);\n-                } else {\n-                    long uConnObjectKeyCount = IterableUtils.countMatches(\n-                            provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n-\n-                        @Override\n-                        public boolean evaluate(final MappingItemTO item) {\n-                            return item.isConnObjectKey();\n-                        }\n-                    });\n-\n-                    connObjectKeyError = uConnObjectKeyCount != 1;\n-                }\n-            }\n-        }\n-\n-        final ResourceTO res;\n-        if (connObjectKeyError) {\n-            throw new RuntimeException(new StringResourceModel(\"connObjectKeyValidation\").getString());\n-        } else if (createFlag) {\n-            res = resourceRestClient.create(resourceTO);\n+        if (createFlag) {\n+            return resourceRestClient.create(resourceTO);\n         } else {\n             resourceRestClient.update(resourceTO);\n-            res = resourceTO;\n+            return resourceTO;\n         }\n-        return res;\n     }\n \n     @Override"},{"sha":"1a3a41077990b1074b1f5bf7b2203947f7833827","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/daecdbbc02f6b9011b8b3e721d6c8ec89abf9169/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=daecdbbc02f6b9011b8b3e721d6c8ec89abf9169","patch":"@@ -79,15 +79,14 @@ public void editProvisioning() {\n         wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:provision:container:\"\n+        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:1:outer:form:content:\"\n-                + \"provision:container:content:wizard:form\");\n+        FormTester formTester = wicketTester.newFormTester(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:provision:\"\n+        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1\", WebMarkupContainer.class);\n     }\n "}]}