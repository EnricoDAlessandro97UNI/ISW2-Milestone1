{"sha":"df35381a8f49d76e05484f4dfc897849c42e3db9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRmMzUzODFhOGY0OWQ3NmUwNTQ4NGY0ZGZjODk3ODQ5YzQyZTNkYjk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-01T14:07:08Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-01T14:07:08Z"},"message":"Merge from branch 0_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246555 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f3bfc03ace057cacc2df38874e86812c521ddd98","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f3bfc03ace057cacc2df38874e86812c521ddd98"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/df35381a8f49d76e05484f4dfc897849c42e3db9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df35381a8f49d76e05484f4dfc897849c42e3db9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df35381a8f49d76e05484f4dfc897849c42e3db9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df35381a8f49d76e05484f4dfc897849c42e3db9/comments","author":null,"committer":null,"parents":[{"sha":"ef9b4d4c592bcad24db55ac92567be65d36b9e60","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ef9b4d4c592bcad24db55ac92567be65d36b9e60","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ef9b4d4c592bcad24db55ac92567be65d36b9e60"}],"stats":{"total":826,"additions":562,"deletions":264},"files":[{"sha":"072e7d71405470202b062d62fdbbe57b76aa7b44","filename":"client/src/main/java/org/syncope/client/to/ConnectorInstanceTO.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnectorInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnectorInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnectorInstanceTO.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -28,6 +28,7 @@ public class ConnectorInstanceTO extends AbstractBaseBean {\n     private String connectorName;\n     private Set<PropertyTO> configuration;\n     private Set<ConnectorCapability> capabilities;\n+    private String displayName;\n \n     public ConnectorInstanceTO() {\n         configuration = new HashSet<PropertyTO>();\n@@ -105,4 +106,11 @@ public void setCapabilities(Set<ConnectorCapability> capabilities) {\n             this.capabilities = capabilities;\n         }\n     }\n+\n+    public void setDisplayName(final String displayName) {\n+    }\n+\n+    public String getDisplayName() {\n+        return getId() + \" | \" + getConnectorName();\n+    }\n }"},{"sha":"246fd8534a66ca6128c0841b0480764d45e1f3d3","filename":"console/src/main/java/org/syncope/console/commons/SearchConditionWrapper.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchConditionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchConditionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchConditionWrapper.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -0,0 +1,66 @@\n+/* \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+\n+package org.syncope.console.commons;\n+\n+import org.syncope.client.to.LeafSearchCondition.Type;\n+\n+/**\n+ * Generic search condition wrapper class.\n+ */\n+public class SearchConditionWrapper {\n+\n+    public enum ConditionType {AND,OR,NOT};\n+\n+    private ConditionType conditionType;\n+\n+    private Type type;\n+\n+    private String schemaName;\n+\n+    private String schemaValue;\n+\n+    public ConditionType getConditionType() {\n+        return conditionType;\n+    }\n+\n+    public void setConditionType(ConditionType expressionType) {\n+        this.conditionType = expressionType;\n+    }\n+    \n+    public String getSchemaName() {\n+        return schemaName;\n+    }\n+\n+    public void setSchemaName(String schemaName) {\n+        this.schemaName = schemaName;\n+    }\n+\n+    public String getSchemaValue() {\n+        return schemaValue;\n+    }\n+\n+    public void setSchemaValue(String schemaValue) {\n+        this.schemaValue = schemaValue;\n+    }\n+\n+    public Type getType() {\n+        return type;\n+    }\n+\n+    public void setType(Type type) {\n+        this.type = type;\n+    }\n+}"},{"sha":"ad7832997e162d0c77131f881d09fb7834930d14","filename":"console/src/main/java/org/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -102,7 +102,7 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n      */\n     public void setupSelections(){\n \n-        configuration = restClient.readConfiguration();\n+        configuration = restClient.readConfiguration(\"users.attributes.view\");\n \n         if(configuration != null) {\n             String conf = configuration.getConfValue();"},{"sha":"d57c0bbeeb9b92948cbbf01bba7b207e59f3c8b3","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -149,7 +149,7 @@ protected Object load() {\n         forceMandatoryConstraint.setOutputMarkupId(true);\n         resourceForm.add(forceMandatoryConstraint);\n \n-        ChoiceRenderer renderer = new ChoiceRenderer(\"connectorName\", \"id\");\n+        ChoiceRenderer renderer = new ChoiceRenderer(\"displayName\", \"id\");\n         connector = new DropDownChoice(\"connectors\", new Model(connectorTO), connectors, renderer);\n         connector.setEnabled(createFlag);\n         connector.setModel(new IModel() {"},{"sha":"a02ca4fb5396120ea45d55b49b7bf60c997f133a","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":64,"deletions":35,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -124,8 +124,6 @@ public UserModalPage(final BasePage basePage, final ModalWindow window,\n \n         setupRolesMap();\n \n-        schemaWrappers = new ArrayList<SchemaWrapper>();\n-\n         add(createUserWin = new ModalWindow(\"membershipWin\"));\n \n         createUserWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n@@ -185,7 +183,7 @@ public void setObject(Serializable object) {\n                                     Boolean val = (Boolean) object;\n                                     item.setModelObject(val.toString());\n                                 }\n-                            }, schemaTO.isMandatory());\n+                            }, schemaTO.isMandatory(), schemaTO.isReadonly());\n \n                         } else if (schemaTO.getType().getClassName().equals(\"java.util.Date\")) {\n                             panel = new DateFieldPanel(\"panel\", schemaTO.getName(),\n@@ -217,7 +215,7 @@ public void setObject(Serializable object) {\n                                             String val = formatter.format(date);\n                                             item.setModelObject(val);\n                                         }\n-                                    }, schemaTO.isMandatory());\n+                                    }, schemaTO.isMandatory(),schemaTO.isReadonly());\n                         }\n \n                         item.add(panel);\n@@ -260,6 +258,11 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n                     dropButton.setVisible(false);\n                 }\n \n+                if(schemaTO.isReadonly()) {\n+                    addButton.setEnabled(false);\n+                    dropButton.setEnabled(false);\n+                }\n+\n                 item.add(addButton);\n                 item.add(dropButton);\n             }\n@@ -392,7 +395,8 @@ protected void populateItem(final ListItem item) {\n                         (MembershipTO) item.getDefaultModelObject();\n \n                 item.add(new Label(\"roleId\", new Model(membershipTO.getRoleId())));\n-                item.add(new Label(\"roleName\", new Model((String) rolesMap.get(membershipTO.getRoleId()))));\n+                item.add(new Label(\"roleName\", new Model((String) rolesMap\n+                        .get(membershipTO.getRoleId()))));\n \n                 AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n@@ -464,7 +468,9 @@ public List<ResourceTO> getAvailableResources(UserTO userTO) {\n \n         List<ResourceTO> resources = new ArrayList<ResourceTO>();\n \n-        ResourcesRestClient resourcesRestClient = (ResourcesRestClient) ((SyncopeApplication) Application.get()).getApplicationContext().getBean(\"resourcesRestClient\");\n+        ResourcesRestClient resourcesRestClient = (ResourcesRestClient) \n+                ((SyncopeApplication) Application.get()).getApplicationContext()\n+                .getBean(\"resourcesRestClient\");\n \n         ResourceTOs resourcesTos = resourcesRestClient.getAllResources();\n \n@@ -481,15 +487,18 @@ public List<ResourceTO> getAvailableResources(UserTO userTO) {\n     public void cloneOldUserTO(UserTO userTO) {\n \n         oldUser = new UserTO();\n+\n         oldUser.setId(userTO.getId());\n         oldUser.setPassword(userTO.getPassword());\n         oldUser.setAttributes(userTO.getAttributes());\n-\n+        oldUser.setResources(userTO.getResources());\n         oldUser.setMemberships(new HashSet<MembershipTO>());\n+        \n         MembershipTO membership;\n \n         for (MembershipTO membershipTO : userTO.getMemberships()) {\n             membership = new MembershipTO();\n+            membership.setId(membershipTO.getId());\n             membership.setRoleId(membershipTO.getRoleId());\n             membership.setAttributes(membershipTO.getAttributes());\n             oldUser.getMemberships().add(membership);\n@@ -537,7 +546,9 @@ public void setupSchemaWrappers(boolean create, UserTO userTO) {\n         schemaWrappers = new ArrayList<SchemaWrapper>();\n         SchemaWrapper schemaWrapper;\n \n-        SchemaRestClient schemaRestClient = (SchemaRestClient) ((SyncopeApplication) Application.get()).getApplicationContext().getBean(\"schemaRestClient\");\n+        SchemaRestClient schemaRestClient = (SchemaRestClient) \n+                ((SyncopeApplication) Application.get()).getApplicationContext()\n+                .getBean(\"schemaRestClient\");\n \n         SchemaTOs schemas = schemaRestClient.getAllUserSchemas();\n \n@@ -607,6 +618,7 @@ public Set<AttributeTO> getUserAttributesSet() {\n             attribute = new AttributeTO();\n             attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n             attribute.setValues(new HashSet<String>());\n+            attribute.setReadonly(schemaWrapper.getSchemaTO().isReadonly());\n \n             for (String value : schemaWrapper.getValues()) {\n                 attribute.getValues().add(value);\n@@ -690,7 +702,6 @@ public void setupUserMod(UserTO userTO) {\n             searchAndUpdateMembership(membership);\n         }\n \n-        //5.Drop user's memberships marked\n         for (MembershipTO membership : oldUser.getMemberships()) {\n             searchAndDropMembership(membership, userTO);\n         }\n@@ -699,27 +710,38 @@ public void setupUserMod(UserTO userTO) {\n \n     public void searchAndUpdateAttribute(AttributeTO attributeTO) {\n         boolean found = false;\n+        boolean changed = false;\n \n         AttributeMod attributeMod = new AttributeMod();\n         attributeMod.setSchema(attributeTO.getSchema());\n \n         for (AttributeTO oldAttribute : oldUser.getAttributes()) {\n             if (attributeTO.getSchema().equals(oldAttribute.getSchema())) {\n \n-                if (!attributeTO.equals(oldAttribute)) {\n-                    attributeMod.setValuesToBeAdded(attributeTO.getValues());\n+                if (!attributeTO.equals(oldAttribute) && !oldAttribute.isReadonly()) {\n+\n+                    if (attributeTO.getValues().size() > 1)\n+                        attributeMod.setValuesToBeAdded(attributeTO.getValues());\n+                    else\n+                        attributeMod.addValueToBeAdded(attributeTO.getValues().iterator().next());\n \n                     userMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n                     userMod.addAttributeToBeUpdated(attributeMod);\n-                }\n \n-                found = true;\n+                    changed = true;\n+                    break;\n+                }\n+                    found = true;\n             }\n         }\n \n-        if (!found) {\n-            attributeMod.setValuesToBeAdded(attributeTO.getValues());\n-            userMod.addAttributeToBeUpdated(attributeMod);\n+        if (!found & !changed && !attributeTO.isReadonly() && attributeTO.getValues() != null) {\n+\n+            if(attributeTO.getValues().iterator().next() != null ){\n+                attributeMod.setValuesToBeAdded(attributeTO.getValues());\n+                userMod.addAttributeToBeUpdated(attributeMod);\n+            }\n+            else attributeMod = null;\n         }\n     }\n \n@@ -768,47 +790,54 @@ public void searchAndDropResource(String resource, UserTO userTO) {\n      * Update the Membership.\n      * @param new membershipTO\n      */\n-    public void searchAndUpdateMembership(MembershipTO membershipTO) {\n+    public void searchAndUpdateMembership(MembershipTO newMembership) {\n         boolean found = false;\n+\n         MembershipMod membershipMod = new MembershipMod();\n-        membershipMod.setRole(membershipTO.getRoleId());\n+        membershipMod.setRole(newMembership.getRoleId());\n \n         AttributeMod attributeMod;\n \n-        //1. If the membership exists and it's changed, update it\n+        //1. If the membership exists (and it's changed) update it\n         for (MembershipTO oldMembership : oldUser.getMemberships()) {\n-            if (membershipTO.getRoleId() == oldMembership.getRoleId()) {\n+            if (newMembership.getRoleId() == oldMembership.getRoleId()) {\n \n                 for (AttributeTO oldAttribute : oldMembership.getAttributes()) {\n-                    for (AttributeTO newAttribute : membershipTO.getAttributes()) {\n-                        if (!oldAttribute.equals(newAttribute)) {\n+                    for (AttributeTO newAttribute : newMembership.getAttributes()) {\n+\n+                        if(oldAttribute.getSchema().equals(newAttribute.getSchema())) {\n+\n                             attributeMod = new AttributeMod();\n                             attributeMod.setSchema(newAttribute.getSchema());\n \n-                            attributeMod.setValuesToBeRemoved(oldAttribute.getValues());\n                             attributeMod.setValuesToBeAdded(newAttribute.getValues());\n \n                             membershipMod.addAttributeToBeUpdated(attributeMod);\n-\n-                            userMod.addMembershipToBeAdded(membershipMod);\n-                            userMod.addMembershipToBeRemoved(oldMembership.getId());\n+                            //membershipMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n+                            break;\n                         }\n+\n                     }\n                 }\n+                \n+                userMod.addMembershipToBeRemoved(oldMembership.getId());\n+                userMod.addMembershipToBeAdded(membershipMod);\n+                \n                 found = true;\n+                break;\n             }\n         }\n \n         //2.Otherwise, if it doesn't exist, create it from scratch\n         if (!found) {\n             Set<AttributeMod> attributes = new HashSet<AttributeMod>();\n-            AttributeMod attrMod;\n-            for (AttributeTO attr : membershipTO.getAttributes()) {\n-                attrMod = new AttributeMod();\n-                attrMod.setSchema(attr.getSchema());\n-                attrMod.setValuesToBeAdded(attr.getValues());\n+            \n+            for (AttributeTO newAttribute : newMembership.getAttributes()) {\n+                attributeMod = new AttributeMod();\n+                attributeMod.setSchema(newAttribute.getSchema());\n+                attributeMod.setValuesToBeAdded(newAttribute.getValues());\n \n-                attributes.add(attrMod);\n+                attributes.add(attributeMod);\n             }\n \n             membershipMod.setAttributesToBeUpdated(attributes);\n@@ -821,18 +850,18 @@ public void searchAndUpdateMembership(MembershipTO membershipTO) {\n      * @param membershipTO\n      * @param userTO\n      */\n-    public void searchAndDropMembership(MembershipTO membershipTO, UserTO userTO) {\n+    public void searchAndDropMembership(MembershipTO oldMembership, UserTO userTO) {\n         boolean found = false;\n \n         //Check if the current resource was existent before the update\n         for (MembershipTO newMembership : userTO.getMemberships()) {\n-            if (newMembership.getId() == membershipTO.getId()) {\n+            if (newMembership.getId() == oldMembership.getId()) {\n                 found = true;\n             }\n         }\n \n         if (!found) {\n-            userMod.addMembershipToBeRemoved(membershipTO.getId());\n+            userMod.addMembershipToBeRemoved(oldMembership.getId());\n         }\n     }\n "},{"sha":"163b92e7b7538f1c4a26a3b831de11bf46dc5845","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":40,"deletions":9,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -27,18 +27,21 @@\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.UserTO;\n+\n+import org.syncope.console.commons.SearchConditionWrapper;\n+import org.syncope.console.rest.SchemaRestClient;\n+\n import org.syncope.console.rest.ConfigurationsRestClient;\n+\n import org.syncope.console.rest.UsersRestClient;\n \n /**\n@@ -49,6 +52,9 @@ public class Users extends BasePage {\n     @SpringBean(name = \"usersRestClient\")\n     UsersRestClient usersRestClient;\n \n+    @SpringBean(name = \"schemaRestClient\")\n+    SchemaRestClient schemaRestClient;\n+\n     @SpringBean(name = \"configurationsRestClient\")\n     ConfigurationsRestClient configurationsRestClient;\n \n@@ -66,17 +72,23 @@ public class Users extends BasePage {\n \n     List<String> columnsList;\n \n-    /** Response flag set by the Modal Window after the operation is completed  */\n+    /** Response flag set by the Modal Window after the operation is completed*/\n     boolean operationResult = false;\n \n     FeedbackPanel feedbackPanel;\n+\n+    final ModalWindow searchUsersWin;\n+    List<SearchConditionWrapper> searchConditionsList;\n     \n     public Users(PageParameters parameters) {\n         super(parameters);\n \n+        setupSearchConditions();\n+\n         add(createUserWin = new ModalWindow(\"createUserWin\"));\n         add(editUserWin = new ModalWindow(\"editUserWin\"));\n         add(changeAttribsViewWin = new ModalWindow(\"changeAttributesViewWin\"));\n+        add(searchUsersWin = new ModalWindow(\"searchUsersWin\"));\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n         feedbackPanel.setOutputMarkupId( true );\n@@ -87,7 +99,9 @@ public Users(PageParameters parameters) {\n         final IModel columns = new LoadableDetachableModel() {\n \n             protected Object load() {\n-                ConfigurationTO configuration = configurationsRestClient.readConfiguration();\n+\n+                ConfigurationTO configuration = configurationsRestClient.readConfiguration(\"users.attributes.view\");\n+\n                 columnsList = new ArrayList<String>();\n \n                 if (configuration != null && !configuration.getConfValue().equals(\"\")) {\n@@ -224,6 +238,12 @@ public void onClick(AjaxRequestTarget target) {\n         changeAttribsViewWin.setPageMapName(\"change-attribs-modal\");\n         changeAttribsViewWin.setCookieName(\"change-attribs-modal\");\n \n+        searchUsersWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        searchUsersWin.setInitialHeight(WIN_USER_HEIGHT);\n+        searchUsersWin.setInitialWidth(WIN_USER_HEIGHT);\n+        searchUsersWin.setPageMapName(\"search-users-modal\");\n+        searchUsersWin.setCookieName(\"search-users-modal\");\n+\n         setWindowClosedCallback(createUserWin, usersContainer);\n         setWindowClosedCallback(editUserWin, usersContainer);\n \n@@ -266,10 +286,10 @@ public Page createPage() {\n                 changeAttribsViewWin.show(target);\n             }\n         });\n-\n-        //TAB 2 - Search Start\n-        add(new TextField(\"search\", new Model(getString(\"search\"))));\n-\n+        \n+       //TAB 2 - Search section start \n+       /* PLACE SEARCH CODE HERE */\n+        \n     }\n \n     /**\n@@ -281,7 +301,9 @@ public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n         Set<AttributeTO> attributes = user.getAttributes();\n         List<AttributeWrapper> attributesList = new ArrayList<AttributeWrapper>();\n \n-        ConfigurationTO configuration = configurationsRestClient.readConfiguration();\n+\n+        ConfigurationTO configuration = configurationsRestClient.readConfiguration(\"users.attributes.view\");\n+\n         columnsList = new ArrayList<String>();\n         \n         if (configuration != null && !configuration.getConfValue().equals(\"\")) {\n@@ -357,6 +379,15 @@ public void setOperationResult(boolean operationResult) {\n         this.operationResult = operationResult;\n     }\n \n+    /**\n+     * Init search conditions list.\n+     */\n+    private void setupSearchConditions() {\n+        searchConditionsList = new ArrayList<SearchConditionWrapper>();\n+\n+        searchConditionsList.add(new SearchConditionWrapper());\n+    }\n+\n     /**\n      * Wrapper class for displaying attribute\n      */"},{"sha":"b2e351e6f3e90400df1cfdcb96604019dd0a5ad4","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationsRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -45,13 +45,13 @@ public ConfigurationTOs getAllConfigurations() {\n      * Load an existent configuration.\n      * @return ConfigurationTO object if the configuration exists, null otherwise\n      */\n-    public ConfigurationTO readConfiguration() {\n+    public ConfigurationTO readConfiguration(String confKey) {\n \n         ConfigurationTO configurationTO;\n         try {\n             configurationTO = restClient.getRestTemplate().getForObject(\n                     restClient.getBaseURL() + \"configuration/read/{confKey}.json\",\n-                    ConfigurationTO.class, \"users.attributes.view\");\n+                    ConfigurationTO.class, confKey);\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n             return null;"},{"sha":"3d27c3e6f4bc98192a6789b7b7c8bb46499b0e34","filename":"console/src/main/java/org/syncope/console/rest/UsersRestClient.java","status":"modified","additions":63,"deletions":1,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -80,13 +80,14 @@ public void createUser(UserTO userTO) {\n      */\n     public boolean updateUser(UserMod userModTO) {\n         UserTO newUserTO = null;\n-        \n+\n         try {\n         newUserTO = restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n                 + \"user/update\", userModTO, UserTO.class);\n         }\n         catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n+            throw e;\n         }\n \n         return (userModTO.getId() == newUserTO.getId())?true:false;\n@@ -116,6 +117,67 @@ public UserTO getUser(String id) {\n         return userTO;\n     }\n \n+    /**\n+     * Create a new configuration.\n+     * @param configurationTO\n+     * @return true if the operation ends succesfully, false otherwise\n+     */\n+    public boolean createConfigurationAttributes(ConfigurationTO configurationTO) {\n+\n+        ConfigurationTO newConfigurationTO = restClient.getRestTemplate().postForObject(\n+                restClient.getBaseURL() + \"configuration/create\",\n+                configurationTO, ConfigurationTO.class);\n+\n+        return (configurationTO.equals(newConfigurationTO))?true:false;\n+    }\n+\n+    /**\n+     * Update an existent configuration.\n+     * @param configurationTO\n+     * @return true if the operation ends succesfully, false otherwise\n+     */\n+    public boolean updateConfigurationAttributes(ConfigurationTO configurationTO) {\n+\n+        ConfigurationTO newConfigurationTO = restClient.getRestTemplate().postForObject(\n+                 restClient.getBaseURL() + \"configuration/update\",\n+                 configurationTO, ConfigurationTO.class);\n+\n+        return (configurationTO.equals(newConfigurationTO))?true:false;\n+    }\n+\n+    /**\n+     * Load an existent configuration.\n+     * @return ConfigurationTO object if the configuration exists, null otherwise\n+     */\n+    public ConfigurationTO readConfigurationDisplayAttributes() {\n+        \n+        ConfigurationTO configurationTO;\n+        try {\n+            configurationTO = restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"configuration/read/{confKey}.json\",\n+                    ConfigurationTO.class, \"users.attributes.view\");\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            e.printStackTrace();\n+            return null;\n+        }\n+\n+        return configurationTO;\n+    }\n+\n+    /**\n+     * Search an user by its schema values.\n+     * @param userTO\n+     * @return UserTOs\n+     */\n+    public UserTOs searchUsers(UserTO userTO) {\n+\n+        UserTOs matchedUsers = restClient.getRestTemplate().postForObject(\n+                restClient.getBaseURL() + \"user/search\",\n+                null, UserTOs.class);\n+\n+        return matchedUsers;\n+    }\n+\n     public RestClient getRestClient() {\n         return restClient;\n     }"},{"sha":"fa3ceee97009995effb340ee9ec59409ba05986e","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":19,"deletions":16,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -22,9 +22,9 @@\n                 </a>\n             </li>\n             <li><span class=\"users\">\n-                <a href=#\" wicket:id=\"users\"><img src=\"img/menu/users.png\" alt=\"Users\" width=\"80\" height=\"80\" /><br />\n-                    <wicket:message key=\"users\"/>\n-                </a>\n+                    <a href=#\" wicket:id=\"users\"><img src=\"img/menu/users.png\" alt=\"Users\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"users\"/>\n+                    </a>\n                 </span>\n             </li>\n             <li>\n@@ -61,7 +61,7 @@\n     </div>\n \n     <div wicket:id=\"feedback\"/>\n-    \n+\n     <div id=\"tabs\">\n         <ul>\n             <li  class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n@@ -71,20 +71,20 @@\n \n             <div id=\"users-contain\" class=\"ui-widget\">\n \n-                <h1><wicket:message key=\"title\"/></h1>\n+                <h1><wicket:message key=\"users_title\"/></h1>\n \n                 <table id=\"users\" class=\"ui-widget ui-widget-content\" wicket:id=\"usersContainer\">\n                     <thead>\n                         <tr class=\"ui-widget-header\">\n                             <th><wicket:message key=\"id\"/></th>\n-                            <th><wicket:message key=\"status\"/></th>\n-                            <th><wicket:message key=\"token\"/></th>\n-                            <th wicket:id=\"usersSchema\">\n-                                <span wicket:id=\"attribute\"/>\n-                            </th>\n-                            <th><wicket:message key=\"edit\"/></th>\n-                            <th><wicket:message key=\"delete\"/></th>\n-                        </tr>\n+                    <th><wicket:message key=\"status\"/></th>\n+                    <th><wicket:message key=\"token\"/></th>\n+                    <th wicket:id=\"usersSchema\">\n+                        <span wicket:id=\"attribute\"/>\n+                    </th>\n+                    <th><wicket:message key=\"edit\"/></th>\n+                    <th><wicket:message key=\"delete\"/></th>\n+                    </tr>\n                     </thead>\n                     <tbody>\n                         <tr wicket:id=\"users\">\n@@ -117,6 +117,7 @@ <h1><wicket:message key=\"title\"/></h1>\n \n             <div wicket:id=\"createUserWin\">[Show modal window for creating user]</div>\n             <div wicket:id=\"editUserWin\">[Show modal window for editing user]</div>\n+            <div wicket:id=\"searchUsersWin\">[Show modal window for searching users]</div>\n             <div wicket:id=\"changeAttributesViewWin\">[Show modal window for editing user]</div>\n \n             <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"createUserLink\">\n@@ -128,10 +129,12 @@ <h1><wicket:message key=\"title\"/></h1>\n             </a>\n \n         </div>\n+        \n         <div id=\"tabs-2\">\n-            <div id=\"searchBox\">\n-                <label for=\"search\"><wicket:message key=\"search\"/></label>\n-                <input type=\"text\" wicket:id=\"search\" id=\"search\" />\n+            <!-- PLACE SEARCH FORM HERE -->\n+            <div style=\"margin:auto;vertical-align: middle\">\n+                <img src=\"img/under-construction.jpg\" alt=\"under_construction\"\n+                     style=\"display:block; margin:auto;\"/>\n             </div>\n         </div>\n     </div>"},{"sha":"5b661b9de2447c1f710614d33f2238447aeb2125","filename":"console/src/main/resources/org/syncope/console/pages/Users.properties","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -15,4 +15,8 @@ token=Token\n change_attributes=Change attributes view\n tokenValued=valued\n tokenNotValued=Not valued\n-title=Users\n+#tab2\n+search_title=Set criteria for user search\n+users_title=Existing Users\n+addButton=+\n+dropButton=-\n\\ No newline at end of file"},{"sha":"1a73a54f8ec7d85e9e1dc7bff5b913efb7ed91f9","filename":"console/src/main/resources/org/syncope/console/pages/Users_it.properties","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -1,9 +1,8 @@\n #Tabs\n tab1=Elenco utenti\n tab2=Ricerca utente\n-#tab1\n+#tab2\n search=Ricerca\n-\n firstname=Nome\n surname=Cognome\n create_user=Crea nuovo utente\n@@ -16,4 +15,7 @@ status=Stato\n token=Token\n tokenValued=Impostato\n tokenNotValued=Non impostato\n-title=Utenti\n+search_title=Impostare i criteri di ricerca\n+users_title=Utenti esistenti\n+addButton=+\n+dropButton=-\n\\ No newline at end of file"},{"sha":"e29b5222bbc1543c3e825ed0f1ca90c4a2b96914","filename":"core/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -33,7 +33,7 @@\n \n         <jetty.port>8888</jetty.port>\n \n-        <cargo.servlet.port>8080</cargo.servlet.port>\n+        <cargo.servlet.port>9080</cargo.servlet.port>\n         <cargo.log>/tmp/syncope-core-cargo.log</cargo.log>\n         <cargo.output>/tmp/syncope-core-cargo-output.log</cargo.output>\n "},{"sha":"9c94d86bc87adb00a500cf7f05815c7c7a10d765","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -41,8 +41,8 @@ public <T extends AbstractAttribute> T getAttribute(String schemaName) {\n                 result == null && itor.hasNext();) {\n \n             attribute = (T) itor.next();\n-            if (attribute.getSchema() != null &&\n-                    schemaName.equals(attribute.getSchema().getName())) {\n+            if (attribute.getSchema() != null\n+                    && schemaName.equals(attribute.getSchema().getName())) {\n \n                 result = attribute;\n             }\n@@ -61,8 +61,8 @@ public <T extends AbstractDerivedAttribute> T getDerivedAttribute(\n                 result == null && itor.hasNext();) {\n \n             derivedAttribute = (T) itor.next();\n-            if (derivedAttribute.getDerivedSchema() != null &&\n-                    derivedSchemaName.equals(\n+            if (derivedAttribute.getDerivedSchema() != null\n+                    && derivedSchemaName.equals(\n                     derivedAttribute.getDerivedSchema().getName())) {\n \n                 result = derivedAttribute;\n@@ -105,6 +105,8 @@ public void setResources(Set<TargetResource> resources) {\n         this.targetResources = resources;\n     }\n \n+    public abstract Long getId();\n+\n     public abstract <T extends AbstractAttribute> boolean addAttribute(\n             T attribute);\n "},{"sha":"6fe1f73abc268604f07ad20e2d3535f6a887660d","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -57,6 +57,7 @@ public Membership() {\n         targetResources = Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Long getId() {\n         return id;\n     }"},{"sha":"398b1dba8410750cfe8c307d2dd53781919b249d","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -70,6 +70,7 @@ public SyncopeRole() {\n         inheritDerivedAttributes = getBooleanAsCharacter(false);\n     }\n \n+    @Override\n     public Long getId() {\n         return id;\n     }"},{"sha":"993963196a38de97d2f98d7a8738fb94b1788e87","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -102,6 +102,7 @@ public SyncopeUser() {\n         derivedAttributes = new ArrayList<UserDerivedAttribute>();\n     }\n \n+    @Override\n     public Long getId() {\n         return id;\n     }"},{"sha":"b8569d0184b81593dd8a99b93105806ad6153332","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeValueDAOImpl.java","status":"modified","additions":21,"deletions":8,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -14,7 +14,9 @@\n  */\n package org.syncope.core.persistence.dao.impl;\n \n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n@@ -36,16 +38,22 @@ public <T extends AbstractAttributeValue> T find(\n     @Override\n     @Transactional(readOnly = true)\n     public <T extends AbstractAttributeValue> boolean nonUniqueAttributeValue(\n-            T attributeValue) {\n+            final T attributeValue) {\n \n         Query query = entityManager.createQuery(\n-                \"SELECT DISTINCT e FROM \" + attributeValue.getClass().getSimpleName()\n+                \"SELECT DISTINCT e FROM \"\n+                + attributeValue.getClass().getSimpleName()\n                 + \" e WHERE e.attribute.schema = :schema AND \"\n-                + \" ((e.stringValue IS NOT NULL AND e.stringValue = :stringValue)\"\n-                + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n-                + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n-                + \" OR (e.longValue IS NOT NULL AND e.longValue = :longValue)\"\n-                + \" OR (e.doubleValue IS NOT NULL AND e.doubleValue = :doubleValue))\");\n+                + \" ((e.stringValue IS NOT NULL \"\n+                + \"AND e.stringValue = :stringValue)\"\n+                + \" OR (e.booleanValue IS NOT NULL \"\n+                + \"AND e.booleanValue = :booleanValue)\"\n+                + \" OR (e.dateValue IS NOT NULL \"\n+                + \"AND e.dateValue = :dateValue)\"\n+                + \" OR (e.longValue IS NOT NULL \"\n+                + \"AND e.longValue = :longValue)\"\n+                + \" OR (e.doubleValue IS NOT NULL \"\n+                + \"AND e.doubleValue = :doubleValue))\");\n \n         query.setParameter(\"schema\", attributeValue.getAttribute().getSchema());\n         query.setParameter(\"stringValue\", attributeValue.getStringValue());\n@@ -54,7 +62,12 @@ public <T extends AbstractAttributeValue> boolean nonUniqueAttributeValue(\n         query.setParameter(\"longValue\", attributeValue.getLongValue());\n         query.setParameter(\"doubleValue\", attributeValue.getDoubleValue());\n \n-        return query.getResultList().size() > 1;\n+        Set<Long> distinctOwners = new HashSet<Long>();\n+        for (Object foundValue : query.getResultList()) {\n+            distinctOwners.add(\n+                    ((T) foundValue).getAttribute().getOwner().getId());\n+        }\n+        return distinctOwners.size() > 1;\n     }\n \n     @Override"},{"sha":"ec2655a08545259e832e5244bc6fc475f6890968","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":22,"deletions":11,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -50,14 +50,12 @@ public class PropagationManager {\n     public enum PropagationMode {\n \n         SYNC, ASYNC\n-\n     }\n     /**\n      * Logger.\n      */\n     private static final Logger LOG =\n             LoggerFactory.getLogger(PropagationManager.class);\n-\n     /**\n      * Schema DAO.\n      */\n@@ -126,6 +124,23 @@ public Set<String> update(SyncopeUser user,\n         return provision(user, resourceOperations, syncResourceNames);\n     }\n \n+    public Set<String> delete(SyncopeUser user, Set<String> syncResourceNames)\n+            throws PropagationException {\n+\n+        Set<TargetResource> resources = new HashSet<TargetResource>();\n+        for (TargetResource resource : user.getTargetResources()) {\n+            resources.add(resource);\n+        }\n+        for (Membership membership : user.getMemberships()) {\n+            resources.addAll(membership.getSyncopeRole().getTargetResources());\n+        }\n+\n+        ResourceOperations resourceOperations = new ResourceOperations();\n+        resourceOperations.set(ResourceOperations.Type.DELETE, resources);\n+\n+        return provision(user, resourceOperations, syncResourceNames);\n+    }\n+\n     /**\n      * Implementation of the provisioning feature.\n      * @param user\n@@ -299,7 +314,8 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n \n                 try {\n                     // check for schema or constants (AccountId/Password)\n-                    schemaType.getSchemaClass().asSubclass(AbstractSchema.class);\n+                    schemaType.getSchemaClass().asSubclass(\n+                            AbstractSchema.class);\n \n                     schema = schemaDAO.find(schemaName,\n                             schemaType.getSchemaClass());\n@@ -449,15 +465,10 @@ private void propagate(TargetResource resource,\n                     \"Connector instance bean not found\");\n         }\n \n-        Uid userUid = null;\n-\n         switch (resourceOperationType) {\n             case CREATE:\n-                userUid = connector.create(operationMode,\n-                        ObjectClass.ACCOUNT, attrs, null);\n-                break;\n-\n             case UPDATE:\n+                Uid userUid = null;\n                 try {\n                     userUid = connector.resolveUsername(\n                             ObjectClass.ACCOUNT,\n@@ -472,10 +483,10 @@ private void propagate(TargetResource resource,\n                 }\n \n                 if (userUid != null) {\n-                    userUid = connector.update(operationMode,\n+                    connector.update(operationMode,\n                             ObjectClass.ACCOUNT, userUid, attrs, null);\n                 } else {\n-                    userUid = connector.create(operationMode,\n+                    connector.create(operationMode,\n                             ObjectClass.ACCOUNT, attrs, null);\n                 }\n "},{"sha":"c2db68f33fa53d24ccc82d2b17adaff3a3e59321","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ResourceOperations.java","status":"modified","additions":25,"deletions":12,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -24,12 +24,9 @@ public class ResourceOperations {\n     public enum Type {\n \n         CREATE, UPDATE, DELETE\n-\n     }\n     private Set<TargetResource> toBeCreated;\n-\n     private Set<TargetResource> toBeUpdated;\n-\n     private Set<TargetResource> toBeDeleted;\n \n     public ResourceOperations() {\n@@ -43,7 +40,7 @@ public ResourceOperations() {\n      * resource for which a delete is requested, and by not doing any create\n      * on any resource for which an update is requested.\n      */\n-    public void purge() {\n+    public final void purge() {\n         for (TargetResource resource : toBeDeleted) {\n             toBeCreated.remove(resource);\n             toBeUpdated.remove(resource);\n@@ -53,7 +50,9 @@ public void purge() {\n         }\n     }\n \n-    public boolean add(Type type, TargetResource resource) {\n+    public final boolean add(final Type type,\n+            final TargetResource resource) {\n+\n         boolean result = false;\n \n         switch (type) {\n@@ -66,6 +65,7 @@ public boolean add(Type type, TargetResource resource) {\n             case DELETE:\n                 result = toBeDeleted.add(resource);\n                 break;\n+            default:\n         }\n \n         return result;\n@@ -89,7 +89,9 @@ public boolean addAll(Type type, Set<TargetResource> resource) {\n         return result;\n     }\n \n-    public boolean remove(Type type, TargetResource resource) {\n+    public final boolean remove(final Type type,\n+            final TargetResource resource) {\n+\n         boolean result = false;\n \n         switch (type) {\n@@ -102,12 +104,13 @@ public boolean remove(Type type, TargetResource resource) {\n             case DELETE:\n                 result = toBeDeleted.remove(resource);\n                 break;\n+            default:\n         }\n \n         return result;\n     }\n \n-    public Set<TargetResource> get(Type type) {\n+    public final Set<TargetResource> get(final Type type) {\n         Set<TargetResource> result = Collections.EMPTY_SET;\n \n         switch (type) {\n@@ -120,12 +123,15 @@ public Set<TargetResource> get(Type type) {\n             case DELETE:\n                 result = toBeDeleted;\n                 break;\n+            default:\n         }\n \n         return result;\n     }\n \n-    public void set(Type type, Set<TargetResource> resources) {\n+    public final void set(final Type type,\n+            final Set<TargetResource> resources) {\n+\n         switch (type) {\n             case CREATE:\n                 toBeCreated.clear();\n@@ -139,19 +145,26 @@ public void set(Type type, Set<TargetResource> resources) {\n                 toBeDeleted.clear();\n                 toBeDeleted.addAll(resources);\n                 break;\n+            default:\n         }\n     }\n \n-    public void merge(ResourceOperations resourceOperations) {\n+    public final void merge(final ResourceOperations resourceOperations) {\n         toBeCreated.addAll(resourceOperations.get(Type.CREATE));\n         toBeUpdated.addAll(resourceOperations.get(Type.UPDATE));\n         toBeDeleted.addAll(resourceOperations.get(Type.DELETE));\n     }\n \n+    public final boolean isEmpty() {\n+        return toBeCreated.isEmpty()\n+                && toBeUpdated.isEmpty()\n+                && toBeUpdated.isEmpty();\n+    }\n+\n     @Override\n     public String toString() {\n-        return \"To Be Created: \" + toBeCreated + \";\" +\n-                \"To Be Updated: \" + toBeUpdated + \";\" +\n-                \"To Be Deleted: \" + toBeDeleted;\n+        return \"To Be Created: \" + toBeCreated + \";\"\n+                + \"To Be Updated: \" + toBeUpdated + \";\"\n+                + \"To Be Deleted: \" + toBeDeleted;\n     }\n }"},{"sha":"0f01abe24ce5a2ad5a6ede637cb1c5a81eb3aaa6","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":57,"deletions":23,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -109,8 +109,7 @@ public SyncopeUser doExecuteAction(final String actionName,\n \n         SyncopeUser user = syncopeUserDAO.find(userId);\n         if (user == null) {\n-            LOG.error(\"Could not find user '\" + userId + \"'\");\n-            throw new NotFoundException(String.valueOf(userId));\n+            throw new NotFoundException(\"User \" + userId);\n         }\n \n         Map<String, Object> inputs = new HashMap<String, Object>();\n@@ -204,11 +203,8 @@ public UserTO read(@PathVariable(\"userId\") Long userId)\n             throws NotFoundException {\n \n         SyncopeUser user = syncopeUserDAO.find(userId);\n-\n         if (user == null) {\n-            LOG.error(\"Could not find user '\" + userId + \"'\");\n-\n-            throw new NotFoundException(String.valueOf(userId));\n+            throw new NotFoundException(\"User \" + userId);\n         }\n \n         return userDataBinder.getUserTO(user, userWorkflow);\n@@ -221,8 +217,7 @@ public WorkflowActionsTO getActions(@PathVariable(\"userId\") Long userId)\n \n         SyncopeUser user = syncopeUserDAO.find(userId);\n         if (user == null) {\n-            LOG.error(\"Could not find user '\" + userId + \"'\");\n-            throw new NotFoundException(String.valueOf(userId));\n+            throw new NotFoundException(\"User \" + userId);\n         }\n \n         WorkflowActionsTO result = new WorkflowActionsTO();\n@@ -270,8 +265,7 @@ public ModelAndView getStatus(@PathVariable(\"userId\") Long userId)\n \n         SyncopeUser user = syncopeUserDAO.find(userId);\n         if (user == null) {\n-            LOG.error(\"Could not find user '\" + userId + \"'\");\n-            throw new NotFoundException(String.valueOf(userId));\n+            throw new NotFoundException(\"User \" + userId);\n         }\n \n         List<Step> currentSteps = userWorkflow.getCurrentSteps(\n@@ -353,13 +347,15 @@ public UserTO create(HttpServletResponse response,\n             switch (wie.getExceptionOperation()) {\n \n                 case OVERWRITE:\n-                    Integer resetActionId = findWorkflowAction(\n+                    final Integer resetActionId = findWorkflowAction(\n                             wie.getWorkflowId(), Constants.ACTION_RESET);\n                     if (resetActionId != null) {\n-                        doExecuteAction(Constants.ACTION_RESET,\n+                        syncopeUserDAO.save(\n+                                doExecuteAction(\n+                                Constants.ACTION_RESET,\n                                 wie.getSyncopeUserId(),\n                                 Collections.singletonMap(Constants.USER_TO,\n-                                (Object) userTO));\n+                                (Object) userTO)));\n                     }\n \n                     userTO.setId(wie.getSyncopeUserId());\n@@ -380,7 +376,21 @@ public UserTO create(HttpServletResponse response,\n             }\n         }\n \n-        SyncopeUser user = userDataBinder.create(userTO);\n+        // Check if UserTO has a valued id: if so,\n+        // try to read the user from the db\n+        SyncopeUser user = null;\n+        if (userTO.getId() == 0) {\n+            user = new SyncopeUser();\n+        } else {\n+            user = syncopeUserDAO.find(userTO.getId());\n+            if (user == null) {\n+                throw new NotFoundException(\"User \" + userTO.getId());\n+            }\n+        }\n+\n+        ResourceOperations resourceOperations =\n+                userDataBinder.create(user, userTO);\n+\n         user.setWorkflowId(workflowId);\n         user = syncopeUserDAO.save(user);\n \n@@ -396,8 +406,10 @@ public UserTO create(HttpServletResponse response,\n                     + syncResourceNames);\n         }\n \n-        Set<String> propagatedResources =\n-                propagationManager.create(user, syncResourceNames);\n+        Set<String> propagatedResources = resourceOperations.isEmpty()\n+                ? propagationManager.create(user, syncResourceNames)\n+                : propagationManager.update(user, resourceOperations,\n+                syncResourceNames);\n \n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Propagated onto resources \" + propagatedResources);\n@@ -434,8 +446,13 @@ public UserTO update(@RequestBody UserMod userMod,\n             LOG.debug(\"update called with parameter \" + userMod);\n         }\n \n+        SyncopeUser user = syncopeUserDAO.find(userMod.getId());\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + userMod.getId());\n+        }\n+\n         // First of all, let's check if update is allowed\n-        SyncopeUser user = doExecuteAction(Constants.ACTION_UPDATE,\n+        user = doExecuteAction(Constants.ACTION_UPDATE,\n                 userMod.getId(), Collections.singletonMap(Constants.USER_MOD,\n                 (Object) userMod));\n \n@@ -467,21 +484,38 @@ public UserTO update(@RequestBody UserMod userMod,\n \n     @RequestMapping(method = RequestMethod.DELETE,\n     value = \"/delete/{userId}\")\n-    public void delete(@PathVariable(\"userId\") Long userId)\n-            throws NotFoundException {\n+    public void delete(@PathVariable(\"userId\") Long userId,\n+            @RequestParam(value = \"syncRoles\",\n+            required = false) Set<Long> syncRoles,\n+            @RequestParam(value = \"syncResources\",\n+            required = false) Set<String> syncResources)\n+            throws NotFoundException, WorkflowException, PropagationException {\n \n         SyncopeUser user = syncopeUserDAO.find(userId);\n-\n         if (user == null) {\n-            LOG.error(\"Could not find user '\" + userId + \"'\");\n+            throw new NotFoundException(\"User \" + userId);\n+        }\n+\n+        doExecuteAction(Constants.ACTION_DELETE, userId, null);\n \n-            throw new NotFoundException(String.valueOf(userId));\n+        // Propagate delete\n+        Set<String> syncResourceNames =\n+                getSyncResourceNames(user, syncRoles, syncResources);\n+        if (LOG.isDebugEnabled() && !syncResourceNames.isEmpty()) {\n+            LOG.debug(\"About to propagate synchronously onto resources \"\n+                    + syncResourceNames);\n         }\n \n+        Set<String> propagatedResources =\n+                propagationManager.delete(user, syncResourceNames);\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Propagated onto resources \" + propagatedResources);\n+        }\n+\n+        // Now that delete has been propagated, let's remove everything\n         if (workflowStore != null && user.getWorkflowId() != null) {\n             workflowStore.delete(user.getWorkflowId());\n         }\n-\n         syncopeUserDAO.delete(userId);\n     }\n }"},{"sha":"5afc31e464f16b1e83e9846ac080a0d7a86f0967","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -172,7 +172,7 @@ private void fillAttribute(\n                     LOG.error(\"Invalid value for attribute \"\n                             + schema.getName() + \": \" + value, e);\n \n-                    invalidValues.addElement(value);\n+                    invalidValues.addElement(schema.getName() + \": \" + value);\n                 }\n             }\n         }\n@@ -480,8 +480,8 @@ protected AbstractAttributable fill(AbstractAttributable attributable,\n         AbstractSchema schema = null;\n         AbstractAttribute attribute = null;\n         AbstractAttributeValue attributeValue = null;\n-        for (AttributeTO attributeTO : attributableTO.getAttributes()) // Only consider attributeTO with values\n-        {\n+        // Only consider attributeTO with values\n+        for (AttributeTO attributeTO : attributableTO.getAttributes()) {\n             if (attributeTO.getValues() != null\n                     && !attributeTO.getValues().isEmpty()) {\n "},{"sha":"d28caebfae2f6be4e0ab207060088fa8163244ac","filename":"core/src/main/java/org/syncope/core/rest/data/ConnectorInstanceDataBinder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnectorInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnectorInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnectorInstanceDataBinder.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -42,7 +42,8 @@ public class ConnectorInstanceDataBinder {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(\n             ConnectorInstanceDataBinder.class);\n-    private static final String[] ignoreProperties = {\"id\", \"resources\"};\n+    private static final String[] ignoreProperties = {\n+        \"id\", \"resources\", \"displayName\"};\n     @Autowired\n     private ConnectorInstanceDAO connectorInstanceDAO;\n "},{"sha":"706e24f8fe13e3a6536b9a7d908cf8e6c3706138","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":26,"deletions":41,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -16,7 +16,6 @@\n \n import com.opensymphony.workflow.Workflow;\n import com.opensymphony.workflow.spi.Step;\n-import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -41,7 +40,7 @@\n @Component\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n-    public SyncopeUser create(UserTO userTO)\n+    public ResourceOperations create(SyncopeUser user, UserTO userTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException {\n \n         SyncopeClientCompositeErrorException scce =\n@@ -50,33 +49,17 @@ public SyncopeUser create(UserTO userTO)\n \n         // In case of overwrite, take into account memberships formerly\n         // assigned to this user\n-        Set<Long> formerMembershipIds = Collections.EMPTY_SET;\n-\n-        // Check if UserTO has a valued id: if so,\n-        // try to read the user from the db\n-        SyncopeUser user = null;\n-        if (userTO.getId() == 0) {\n-            user = new SyncopeUser();\n-        } else {\n-            user = syncopeUserDAO.find(userTO.getId());\n-            if (user == null) {\n-                LOG.error(\"Could not find user '\" + userTO.getId() + \"'\");\n-\n-                throw new NotFoundException(String.valueOf(userTO.getId()));\n-            }\n-\n-            formerMembershipIds = new HashSet<Long>();\n-            for (Membership membership : user.getMemberships()) {\n-                formerMembershipIds.add(membership.getId());\n-            }\n+        Set<Long> formerMembershipIds = new HashSet<Long>();\n+        for (Membership membership : user.getMemberships()) {\n+            formerMembershipIds.add(membership.getId());\n         }\n \n         // password\n         // TODO: check password policies\n         SyncopeClientException invalidPassword = new SyncopeClientException(\n                 SyncopeClientExceptionType.InvalidPassword);\n-        if (userTO.getPassword() == null ||\n-                userTO.getPassword().length() == 0) {\n+        if (userTO.getPassword() == null\n+                || userTO.getPassword().length() == 0) {\n \n             LOG.error(\"No password provided\");\n \n@@ -96,8 +79,8 @@ public SyncopeUser create(UserTO userTO)\n \n             if (role == null) {\n                 if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Ignoring invalid role \" +\n-                            membershipTO.getRoleName());\n+                    LOG.debug(\"Ignoring invalid role \"\n+                            + membershipTO.getRoleName());\n                 }\n             } else {\n                 Membership membership = null;\n@@ -118,17 +101,19 @@ public SyncopeUser create(UserTO userTO)\n                         AttributableUtil.MEMBERSHIP, scce);\n             }\n         }\n-        // Remove from the DB any former membership that has not been\n-        // renewed in this overwrite\n-        for (Long membershipId : formerMembershipIds) {\n-            membershipDAO.delete(membershipId);\n-        }\n \n         // attributes, derived attributes and resources\n         user = (SyncopeUser) fill(\n                 user, userTO, AttributableUtil.USER, scce);\n \n-        return user;\n+        // remove from the DB any former membership that has not been\n+        // renewed in this overwrite\n+        UserMod userMod = new UserMod();\n+        for (Long membershipId : formerMembershipIds) {\n+            userMod.addMembershipToBeRemoved(membershipId);\n+        }\n+\n+        return update(user, userMod);\n     }\n \n     public ResourceOperations update(SyncopeUser user, UserMod userMod)\n@@ -153,16 +138,16 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n                 userMod.getMembershipsToBeRemoved()) {\n \n             if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Membership to be removed: \" +\n-                        membershipToBeRemovedId);\n+                LOG.debug(\"Membership to be removed: \"\n+                        + membershipToBeRemovedId);\n             }\n \n             membership = membershipDAO.find(membershipToBeRemovedId);\n             if (membership == null) {\n                 if (LOG.isDebugEnabled()) {\n                     LOG.debug(\n-                            \"Invalid membership id specified to be removed: \" +\n-                            membershipToBeRemovedId);\n+                            \"Invalid membership id specified to be removed: \"\n+                            + membershipToBeRemovedId);\n                 }\n             } else {\n                 for (TargetResource resource :\n@@ -190,15 +175,15 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n                 userMod.getMembershipsToBeAdded()) {\n \n             if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Membership to be added: role(\" +\n-                        membershipMod.getRole() + \")\");\n+                LOG.debug(\"Membership to be added: role(\"\n+                        + membershipMod.getRole() + \")\");\n             }\n \n             role = syncopeRoleDAO.find(membershipMod.getRole());\n             if (role == null) {\n                 if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Ignoring invalid role \" +\n-                            membershipMod.getRole());\n+                    LOG.debug(\"Ignoring invalid role \"\n+                            + membershipMod.getRole());\n                 }\n             } else {\n                 membership = membershipDAO.find(user, role);\n@@ -239,8 +224,8 @@ public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n                 LOG.error(\"Could not find status information for \" + user);\n             }\n         } catch (EntityNotFoundException e) {\n-            LOG.error(\"Could not find workflow entry with id \" +\n-                    user.getWorkflowId());\n+            LOG.error(\"Could not find workflow entry with id \"\n+                    + user.getWorkflowId());\n         }\n         userTO.setStatus(status);\n "},{"sha":"a2ced8131be88220abc273734d59de67d388d072","filename":"core/src/main/java/org/syncope/core/workflow/BaseSendEmail.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -91,7 +91,9 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         Email email = null;\n         try {\n             email = getHtmlEmail(transientVars, args, ps);\n-            email.send();\n+            if (email != null) {\n+                email.send();\n+            }\n         } catch (EmailException e) {\n             LOG.error(\"Could not send e-mail \" + email, e);\n         }"},{"sha":"2b17083673f6f9b0898087f855c37700946d8ab2","filename":"core/src/main/java/org/syncope/core/workflow/Constants.java","status":"modified","additions":21,"deletions":14,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -14,19 +14,26 @@\n  */\n package org.syncope.core.workflow;\n \n-public class Constants {\n+/**\n+ * Commonly used workflow constants.\n+ */\n+public final class Constants {\n+\n+    public static final String ACTION_ACTIVATE = \"activate\";\n+    public static final String ACTION_GENERATE_TOKEN = \"generateToken\";\n+    public static final String ACTION_RESET = \"reset\";\n+    public static final String ACTION_DELETE = \"delete\";\n+    public static final String ACTION_UPDATE = \"update\";\n+    public static final String ACTION_VERIFY_TOKEN = \"verifyToken\";\n+    public static final String ENTRY = \"entry\";\n+    public static final String SYNCOPE_USER = \"syncopeUser\";\n+    public static final String SYNCOPE_ROLE = \"syncopeRole\";\n+    public static final String MEMBERSHIP = \"membership\";\n+    public static final String TOKEN = \"token\";\n+    public static final String USER_TO = \"userTO\";\n+    public static final String USER_MOD = \"userMod\";\n+    public static final String USER_WORKFLOW = \"userWorkflow\";\n \n-    final public static String ACTION_ACTIVATE = \"activate\";\n-    final public static String ACTION_GENERATE_TOKEN = \"generateToken\";\n-    final public static String ACTION_RESET = \"reset\";\n-    final public static String ACTION_UPDATE = \"update\";\n-    final public static String ACTION_VERIFY_TOKEN = \"verifyToken\";\n-    final public static String ENTRY = \"entry\";\n-    final public static String SYNCOPE_USER = \"syncopeUser\";\n-    final public static String SYNCOPE_ROLE = \"syncopeRole\";\n-    final public static String MEMBERSHIP = \"membership\";\n-    final public static String TOKEN = \"token\";\n-    final public static String USER_TO = \"userTO\";\n-    final public static String USER_MOD = \"userMod\";\n-    final public static String USER_WORKFLOW = \"userWorkflow\";\n+    private Constants() {\n+    }\n }"},{"sha":"ace7eb9c3525ff2ac409373bde201c236a6592f0","filename":"core/src/test/java/org/syncope/core/test/rest/AbstractTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FAbstractTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FAbstractTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FAbstractTestITCase.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -35,7 +35,7 @@ public abstract class AbstractTestITCase {\n     protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractTestITCase.class);\n     protected static final String BASE_URL =\n-            \"http://localhost:8080/syncope/rest/\";\n+            \"http://localhost:9080/syncope/rest/\";\n     @Autowired\n     protected RestTemplate restTemplate;\n }"},{"sha":"f100bceff9ec5f19e2dc9f54a6a219bc2883a861","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -206,10 +206,17 @@ public final void delete() {\n             assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n         }\n \n-        restTemplate.delete(BASE_URL + \"user/delete/{userId}\", 2);\n+        UserTO userTO = getSampleTO(\"qqgf.z@nn.com\");\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n+                userTO, UserTO.class);\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/activate\",\n+                userTO, UserTO.class);\n+\n+        restTemplate.delete(BASE_URL + \"user/delete/{userId}\", userTO.getId());\n         try {\n             restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\",\n-                    UserTO.class, 2);\n+                    UserTO.class, userTO.getId());\n         } catch (HttpStatusCodeException e) {\n             assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n         }\n@@ -323,9 +330,8 @@ public final void update() {\n \n         assertEquals(\"newPassword\", userTO.getPassword());\n         assertTrue(userTO.getMemberships().size() == 1);\n-        assertTrue(\n-                userTO.getMemberships().iterator().next().getAttributes().size()\n-                == 1);\n+        assertEquals(1, userTO.getMemberships().iterator().next().\n+                getAttributes().size());\n         assertTrue(userTO.getDerivedAttributes().size() == 1);\n         boolean attributeFound = false;\n         for (AttributeTO attributeTO : userTO.getAttributes()) {"},{"sha":"5477c77c733f2e773df4525571bd4b9960905a99","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -24,7 +24,7 @@\n     <SyncopeConfiguration confKey=\"token.length\" confValue=\"256\"/>\n     <SyncopeConfiguration confKey=\"token.expireTime\" confValue=\"60\"/>\n     <SyncopeConfiguration confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n-    <SyncopeConfiguration confKey=\"mail.templates.url\" confValue=\"http://localhost:8080/syncope/mailTemplates/\"/>\n+    <SyncopeConfiguration confKey=\"mail.templates.url\" confValue=\"http://localhost:9080/syncope/mailTemplates/\"/>\n     <SyncopeConfiguration confKey=\"activate.email.from\" confValue=\"syncope@googlecode.com\"/>\n     <SyncopeConfiguration confKey=\"activate.email.subject\" confValue=\"Welcome to Syncope!\"/>\n     <SyncopeConfiguration confKey=\"activate.email.template.html\" confValue=\"registration.html\"/>"},{"sha":"f0b362f198317dc5363f8a0204a49e9569277b57","filename":"identityconnectors/bundles/staticws/ws-target-resource/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/wstarget/ProvisioningImpl.java","status":"modified","additions":85,"deletions":69,"changes":154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df35381a8f49d76e05484f4dfc897849c42e3db9/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df35381a8f49d76e05484f4dfc897849c42e3db9/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java?ref=df35381a8f49d76e05484f4dfc897849c42e3db9","patch":"@@ -38,14 +38,16 @@\n serviceName = \"Provisioning\")\n public class ProvisioningImpl implements Provisioning {\n \n-    private static final Logger log =\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n             LoggerFactory.getLogger(Provisioning.class);\n \n     @Override\n     public String delete(String accountid) throws ProvisioningException {\n-\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         Connection conn = null;\n@@ -58,8 +60,8 @@ public String delete(String accountid) throws ProvisioningException {\n             String query =\n                     \"DELETE FROM user WHERE userId='\" + accountid + \"';\";\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Execute query: \" + query);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Execute query: \" + query);\n             }\n \n             statement.executeUpdate(query);\n@@ -83,33 +85,33 @@ public String delete(String accountid) throws ProvisioningException {\n \n     @Override\n     public Boolean isSyncSupported() {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         return Boolean.FALSE;\n     }\n \n     @Override\n     public String checkAlive() {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         try {\n \n             close(connect());\n \n-            if (log.isInfoEnabled()) {\n-                log.info(\"Services available\");\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Services available\");\n             }\n \n             return \"OK\";\n \n         } catch (Exception e) {\n \n-            if (log.isInfoEnabled()) {\n-                log.info(\"Services not available\");\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Services not available\");\n             }\n \n             return \"KO\";\n@@ -120,42 +122,49 @@ public String checkAlive() {\n     public String update(String accountid, List<WSAttributeValue> data)\n             throws ProvisioningException {\n \n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n+        }\n+\n+        if (data == null || data.isEmpty()) {\n+            LOG.warn(\"Empty data recevied\");\n+            return accountid;\n         }\n \n         Connection conn = null;\n \n         try {\n-\n             conn = connect();\n             Statement statement = conn.createStatement();\n \n-            StringBuffer set = new StringBuffer();\n-\n+            StringBuilder set = new StringBuilder();\n             for (WSAttributeValue attr : data) {\n                 if (!attr.isKey()) {\n-\n-                    if (set.length() > 0) set.append(\",\");\n-                    set.append(attr.getName() + \"='\" + attr.getValue().toString() + \"'\");\n-\n+                    if (set.length() > 0 && attr.getValue() != null) {\n+                        set.append(\",\");\n+                    }\n+                    if (attr.getValue() != null) {\n+                        set.append(attr.getName()\n+                                + \"='\"\n+                                + attr.getValue().toString()\n+                                + \"'\");\n+                    }\n                 }\n             }\n \n             String query =\n-                    \"UPDATE user SET \" + set.toString() +\n-                    \" WHERE userId='\" + accountid + \"';\";\n+                    \"UPDATE user SET \" + set.toString()\n+                    + \" WHERE userId='\" + accountid + \"';\";\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Execute query: \" + query);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Execute query: \" + query);\n             }\n \n             statement.executeUpdate(query);\n \n             return accountid;\n-\n         } catch (SQLException ex) {\n-            log.error(\"Update failed\", ex);\n+            LOG.error(\"Update failed\", ex);\n             throw new ProvisioningException(\"Update operation failed\");\n         } finally {\n \n@@ -172,8 +181,8 @@ public String update(String accountid, List<WSAttributeValue> data)\n \n     @Override\n     public List<WSUser> query(Operand query) {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         List<WSUser> results = new ArrayList<WSUser>();\n@@ -184,12 +193,13 @@ public List<WSUser> query(Operand query) {\n             String queryString =\n                     \"SELECT * FROM user WHERE \" + query.toString();\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Execute query: \" + queryString);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Execute query: \" + queryString);\n             }\n \n-            if (queryString == null || queryString.length() == 0)\n+            if (queryString == null || queryString.length() == 0) {\n                 throw new SQLException(\"Invalid query [\" + queryString + \"]\");\n+            }\n \n             conn = connect();\n             Statement statement = conn.createStatement();\n@@ -198,8 +208,8 @@ public List<WSUser> query(Operand query) {\n \n             ResultSetMetaData metaData = rs.getMetaData();\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Metadata: \" + metaData.toString());\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Metadata: \" + metaData.toString());\n             }\n \n             WSUser user = null;\n@@ -226,12 +236,12 @@ public List<WSUser> query(Operand query) {\n                 results.add(user);\n             }\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Retrieved users: \" + results);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Retrieved users: \" + results);\n             }\n \n         } catch (SQLException ex) {\n-            log.error(\"Search operation failed\", ex);\n+            LOG.error(\"Search operation failed\", ex);\n         } finally {\n \n             if (conn != null) {\n@@ -251,8 +261,8 @@ public List<WSUser> query(Operand query) {\n     public String create(List<WSAttributeValue> data)\n             throws ProvisioningException {\n \n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         Connection conn = null;\n@@ -266,33 +276,37 @@ public String create(List<WSAttributeValue> data)\n             String accountid = null;\n \n             for (WSAttributeValue attr : data) {\n-                if (keys.length() > 0) keys.append(\",\");\n+                if (keys.length() > 0) {\n+                    keys.append(\",\");\n+                }\n                 keys.append(attr.getName());\n \n-                if (values.length() > 0) values.append(\",\");\n+                if (values.length() > 0) {\n+                    values.append(\",\");\n+                }\n                 values.append(\n-                        \"'\" +\n-                        (attr.getValue() == null ? null : attr.getValue().toString()) +\n-                        \"'\");\n+                        \"'\"\n+                        + (attr.getValue() == null ? null : attr.getValue().toString())\n+                        + \"'\");\n \n                 if (attr.isKey()) {\n                     accountid = attr.getValue().toString();\n                 }\n             }\n \n             String query =\n-                    \"INSERT INTO user (\" + keys.toString() + \")\" +\n-                    \"VALUES (\" + values.toString() + \");\";\n+                    \"INSERT INTO user (\" + keys.toString() + \")\"\n+                    + \"VALUES (\" + values.toString() + \");\";\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Execute query: \" + query);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Execute query: \" + query);\n             }\n \n             statement.executeUpdate(query);\n \n             return accountid;\n         } catch (SQLException ex) {\n-            log.error(\"Creation failed\", ex);\n+            LOG.error(\"Creation failed\", ex);\n             throw new ProvisioningException(\"Create operation failed\");\n         } finally {\n \n@@ -309,26 +323,26 @@ public String create(List<WSAttributeValue> data)\n \n     @Override\n     public int getLatestChangeNumber() throws ProvisioningException {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         return 0;\n     }\n \n     @Override\n     public List<WSChange> sync() throws ProvisioningException {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         return Collections.EMPTY_LIST;\n     }\n \n     @Override\n     public String resolve(String username) throws ProvisioningException {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         Connection conn = null;\n@@ -340,16 +354,17 @@ public String resolve(String username) throws ProvisioningException {\n             String query =\n                     \"SELECT userId FROM user WHERE userId='\" + username + \"';\";\n \n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Execute query: \" + query);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Execute query: \" + query);\n             }\n \n             ResultSet rs = statement.executeQuery(query);\n \n-            if (rs.next())\n+            if (rs.next()) {\n                 return rs.getString(1);\n-            else\n+            } else {\n                 return null;\n+            }\n \n         } catch (SQLException ex) {\n             throw new ProvisioningException(\"Resolve operation failed\");\n@@ -368,8 +383,8 @@ public String resolve(String username) throws ProvisioningException {\n \n     @Override\n     public List<WSAttribute> schema() {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         List<WSAttribute> attrs = new ArrayList<WSAttribute>();\n@@ -566,17 +581,18 @@ public List<WSAttribute> schema() {\n     @Override\n     public String authenticate(String username, String password)\n             throws ProvisioningException {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         return username;\n     }\n \n     @Override\n     public Boolean isAuthenticationSupported() {\n-        if (log.isInfoEnabled()) {\n-            log.info(\"Operation request received\");\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Operation request received\");\n         }\n \n         return Boolean.FALSE;\n@@ -591,15 +607,15 @@ public Boolean isAuthenticationSupported() {\n     private Connection connect() throws SQLException {\n \n         if (DefaultContentLoader.localDataSource == null) {\n-            log.error(\"Data Source is null\");\n+            LOG.error(\"Data Source is null\");\n             return null;\n         }\n \n         Connection conn = DataSourceUtils.getConnection(\n                 DefaultContentLoader.localDataSource);\n \n         if (conn == null) {\n-            log.error(\"Connection is null\");\n+            LOG.error(\"Connection is null\");\n         }\n \n         return conn;"}]}