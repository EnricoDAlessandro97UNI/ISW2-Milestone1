{"sha":"7aa0db378d8ab7931c78d570c6f5968e2967bc7b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdhYTBkYjM3OGQ4YWI3OTMxYzc4ZDU3MGM2ZjU5NjhlMjk2N2JjN2I=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2014-12-22T16:48:14Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2014-12-22T16:48:14Z"},"message":"Code formatting with netbeans","tree":{"sha":"2d248562e3a0310f6c15430d954226e4e2a9f609","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2d248562e3a0310f6c15430d954226e4e2a9f609"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7aa0db378d8ab7931c78d570c6f5968e2967bc7b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7aa0db378d8ab7931c78d570c6f5968e2967bc7b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7aa0db378d8ab7931c78d570c6f5968e2967bc7b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"b7d6578e340f08933f572ffe99a83b04419b4a9a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b7d6578e340f08933f572ffe99a83b04419b4a9a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b7d6578e340f08933f572ffe99a83b04419b4a9a"}],"stats":{"total":2557,"additions":1291,"deletions":1266},"files":[{"sha":"16281848df97c8887a8db5d68a01be8f5931f461","filename":"core/pom.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -118,7 +118,7 @@ under the License.\n       <artifactId>cxf-rt-rs-client</artifactId>\n     </dependency>  \n        \n-     <dependency>\n+    <dependency>\n       <groupId>org.apache.camel</groupId>\n       <artifactId>camel-core</artifactId>\n     </dependency>\n@@ -127,14 +127,14 @@ under the License.\n       <artifactId>camel-spring</artifactId>\n     </dependency>\n     <dependency>\n-            <groupId>javax.xml.bind</groupId>\n-            <artifactId>jaxb-api</artifactId>\n-            <version>2.2.7</version>\n+      <groupId>javax.xml.bind</groupId>\n+      <artifactId>jaxb-api</artifactId>\n+      <version>2.2.7</version>\n     </dependency>\n     <dependency>\n-       <groupId>com.sun.xml.bind</groupId>\n-       <artifactId>jaxb-impl</artifactId>\n-       <version>2.2.7</version>\n+      <groupId>com.sun.xml.bind</groupId>\n+      <artifactId>jaxb-impl</artifactId>\n+      <version>2.2.7</version>\n     </dependency>\n \n     <dependency>"},{"sha":"5f63e0df5a3fecd693614194151b9c67eafed617","filename":"core/src/main/java/org/apache/syncope/core/init/CamelRouteLoader.java","status":"modified","additions":37,"deletions":37,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.init;\n \n import java.io.File;\n@@ -47,60 +46,61 @@\n \n @Component\n public class CamelRouteLoader {\n-    \n+\n     private static final Logger LOG = LoggerFactory.getLogger(CamelRouteLoader.class);\n-    \n+\n     @Autowired\n     private RouteDAO routeDAO;\n-    \n+\n     @Autowired\n     private DataSource dataSource;\n-    \n+\n     @Transactional\n-    public void load(){\n-        \n+    public void load() {\n+\n         //if(routeDAO.findAll().isEmpty()){\n-            URL url = getClass().getResource(\"/camelRoute.xml\");                                   \n+        URL url = getClass().getResource(\"/camelRoute.xml\");\n+\n+        File file = new File(url.getPath());\n+        String query = \"INSERT INTO CamelRoute(ID, NAME, ROUTECONTENT) VALUES (?, ?, ?)\";\n+        try {\n+\n+            DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n+            Document doc = dBuilder.parse(file);\n+            doc.getDocumentElement().normalize();\n \n-            File file = new File(url.getPath());\n-            String query= \"INSERT INTO CamelRoute(ID, NAME, ROUTECONTENT) VALUES (?, ?, ?)\";\n-            try{\n-                \n-                DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n-                Document doc = dBuilder.parse(file);\n-                doc.getDocumentElement().normalize();\n+            JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n \n-                JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n+            NodeList listOfRoutes = doc.getElementsByTagName(\"route\");\n+            for (int s = 0; s < listOfRoutes.getLength(); s++) {\n+                //getting the route node element\n+                Node routeEl = listOfRoutes.item(s);\n+                //crate an instance of CamelRoute Entity\n+                CamelRoute route = new CamelRoute();\n+                route.setName(((Element) routeEl).getAttribute(\"id\"));\n+                route.setRouteContent(nodeToString(listOfRoutes.item(s)));\n \n-                NodeList listOfRoutes = doc.getElementsByTagName(\"route\");\n-                for(int s=0; s<listOfRoutes.getLength(); s++){\n-                    //getting the route node element\n-                    Node routeEl = listOfRoutes.item(s);\n-                    //crate an instance of CamelRoute Entity\n-                    CamelRoute route = new CamelRoute();                                 \n-                    route.setName(((Element)routeEl).getAttribute(\"id\"));        \n-                    route.setRouteContent(nodeToString(listOfRoutes.item(s)));\n-                    \n-                    jdbcTemplate.update(query, new Object[]{s+1,((Element)routeEl).getAttribute(\"id\"),  nodeToString(listOfRoutes.item(s))});\n-                    LOG.info(\"Route Registration Successed\");\n-                }\n-            } catch (DataAccessException e) {\n-                LOG.error(\"While trying to perform {}\", query, e);\n-            } catch (Exception e) {\n-                LOG.error(\"Route Registration failed {}\",e.getMessage());\n+                jdbcTemplate.update(query, new Object[] { s + 1, ((Element) routeEl).getAttribute(\"id\"), nodeToString(\n+                    listOfRoutes.item(s)) });\n+                LOG.info(\"Route Registration Successed\");\n             }\n+        } catch (DataAccessException e) {\n+            LOG.error(\"While trying to perform {}\", query, e);\n+        } catch (Exception e) {\n+            LOG.error(\"Route Registration failed {}\", e.getMessage());\n+        }\n         //}\n     }\n-    \n-  private String nodeToString(Node node) {\n+\n+    private String nodeToString(Node node) {\n         StringWriter sw = new StringWriter();\n-        try{\n+        try {\n             Transformer t = TransformerFactory.newInstance().newTransformer();\n             t.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\n             t.transform(new DOMSource(node), new StreamResult(sw));\n-        }catch (TransformerException te) {\n+        } catch (TransformerException te) {\n             System.out.println(\"nodeToString Transformer Exception\");\n         }\n         return sw.toString();\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"30c568efb9754e23517d239deab5b814b073ab1b","filename":"core/src/main/java/org/apache/syncope/core/init/ImplementationClassNamesLoader.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -114,7 +114,6 @@ public void load() {\n                     }\n \n                     // TODO: add push correlation rules management\n-\n                     if (interfaces.contains(PropagationActions.class) && !metadata.isAbstract()) {\n                         classNames.get(Type.PROPAGATION_ACTIONS).add(metadata.getClassName());\n                     }"},{"sha":"dc99e343f8a31e381058104bc104da0b25ee4380","filename":"core/src/main/java/org/apache/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -49,7 +49,7 @@ public class SpringContextInitializer implements InitializingBean {\n \n     @Autowired\n     private WorkflowAdapterLoader workflowAdapterLoader;\n-    \n+\n     @Autowired\n     private CamelRouteLoader routeLoader;\n \n@@ -63,7 +63,7 @@ public void afterPropertiesSet() throws Exception {\n         classNamesLoader.load();\n \n         routeLoader.load();\n-        \n+\n         workflowAdapterLoader.init();\n     }\n }"},{"sha":"8942cda4d5085490289fbccb5d6eb0ef9deb3fbe","filename":"core/src/main/java/org/apache/syncope/core/persistence/SQLSchemaGenerator.java","status":"modified","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2FSQLSchemaGenerator.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -60,7 +60,7 @@ private static List<File> findEntityClassFiles(final String base) {\n         }\n \n         @SuppressWarnings(\"unchecked\")\n-        Iterator<File> itor = FileUtils.iterateFiles(baseDir, new String[] {\"class\"}, true);\n+        Iterator<File> itor = FileUtils.iterateFiles(baseDir, new String[] { \"class\" }, true);\n         List<File> entityClasses = new ArrayList<File>();\n         while (itor.hasNext()) {\n             entityClasses.add(itor.next());\n@@ -127,7 +127,7 @@ private static String[] getFilePaths(final List<File> files) {\n         for (int i = 0; i < files.size(); i++) {\n             File file = files.get(i);\n \n-            args[ i] = file.getAbsolutePath();\n+            args[i] = file.getAbsolutePath();\n         }\n         return args;\n     }\n@@ -140,7 +140,6 @@ private static void mappingTool(final List<File> files,\n             final String connectionProperties) {\n \n         //extendRealmClasspath();\n-\n         Options opts = new Options();\n         opts.put(OPTION_PROPERTIES_FILE, persistenceXmlFile);\n         opts.put(OPTION_CONNECTION_DRIVER_NAME, connectionDriverName);\n@@ -156,16 +155,16 @@ private static void mappingTool(final List<File> files,\n         boolean ok = Configurations.runAgainstAllAnchors(opts,\n                 new Configurations.Runnable() {\n \n-            @Override\n-            public boolean run(final Options opts) throws IOException, SQLException {\n-                JDBCConfiguration conf = new JDBCConfigurationImpl();\n-                try {\n-                    return MappingTool.run(conf, args, opts);\n-                } finally {\n-                    conf.close();\n-                }\n-            }\n-        });\n+                    @Override\n+                    public boolean run(final Options opts) throws IOException, SQLException {\n+                        JDBCConfiguration conf = new JDBCConfigurationImpl();\n+                        try {\n+                            return MappingTool.run(conf, args, opts);\n+                        } finally {\n+                            conf.close();\n+                        }\n+                    }\n+                });\n \n         if (!ok) {\n             throw new IllegalStateException(\"The OpenJPA MappingTool detected an error!\");"},{"sha":"e3e71a1db5f0582da4c87e9780c9f96ba733160b","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttrValue.java","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -195,21 +195,21 @@ public <T> T getValue() {\n         return (T) (booleanValue != null\n                 ? getBooleanValue()\n                 : dateValue != null\n-                ? getDateValue()\n-                : doubleValue != null\n-                ? getDoubleValue()\n-                : longValue != null\n-                ? getLongValue()\n-                : binaryValue != null\n-                ? getBinaryValue()\n-                : stringValue);\n+                        ? getDateValue()\n+                        : doubleValue != null\n+                                ? getDoubleValue()\n+                                : longValue != null\n+                                        ? getLongValue()\n+                                        : binaryValue != null\n+                                                ? getBinaryValue()\n+                                                : stringValue);\n     }\n \n     public String getValueAsString() {\n         final AttributeSchemaType type = getAttribute() == null || getAttribute().getSchema() == null\n                 || getAttribute().getSchema().getType() == null\n-                ? AttributeSchemaType.String\n-                : getAttribute().getSchema().getType();\n+                        ? AttributeSchemaType.String\n+                        : getAttribute().getSchema().getType();\n \n         return getValueAsString(type);\n     }\n@@ -228,22 +228,23 @@ public String getValueAsString(final AttributeSchemaType type) {\n             case Long:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? getLongValue().toString()\n-                        : DataFormat.format(getLongValue(), getAttribute().getSchema().getConversionPattern());\n+                                ? getLongValue().toString()\n+                                : DataFormat.format(getLongValue(), getAttribute().getSchema().getConversionPattern());\n                 break;\n \n             case Double:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? getDoubleValue().toString()\n-                        : DataFormat.format(getDoubleValue(), getAttribute().getSchema().getConversionPattern());\n+                                ? getDoubleValue().toString()\n+                                : DataFormat.format(getDoubleValue(), getAttribute().getSchema().getConversionPattern());\n                 break;\n \n             case Date:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? DataFormat.format(getDateValue())\n-                        : DataFormat.format(getDateValue(), false, getAttribute().getSchema().getConversionPattern());\n+                                ? DataFormat.format(getDateValue())\n+                                : DataFormat.format(getDateValue(), false, getAttribute().getSchema().\n+                                        getConversionPattern());\n                 break;\n \n             case Binary:"},{"sha":"af2727aafa3a2f0e01bb41d65b23e6b8b7f83270","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractBaseBean.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -73,7 +73,7 @@ private String[] getExcludeFields() {\n             }\n         }\n \n-        return excludeFields.toArray(new String[]{});\n+        return excludeFields.toArray(new String[] {});\n     }\n \n     @Override"},{"sha":"33fff55b3b198fa81e4c7ff69dedb9c93c4d9b93","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/CamelRoute.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.persistence.beans;\n \n import javax.persistence.Entity;\n@@ -26,13 +25,12 @@\n import javax.persistence.GenerationType;\n import javax.persistence.Column;\n \n-\n @Entity\n public class CamelRoute {\n \n     @Id\n     @GeneratedValue(strategy = GenerationType.AUTO)\n-    @Column(name=\"id\")\n+    @Column(name = \"id\")\n     private Long id;\n \n     private String name;"},{"sha":"e35eefe5510b77e55f9b9f950c4f0a8d3dff2a65","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -323,7 +323,7 @@ public Set<ConnConfProperty> getConnInstanceConfiguration() {\n         return StringUtils.isBlank(jsonConf)\n                 ? Collections.<ConnConfProperty>emptySet()\n                 : new HashSet<ConnConfProperty>(\n-                Arrays.asList(POJOHelper.deserialize(jsonConf, ConnConfProperty[].class)));\n+                        Arrays.asList(POJOHelper.deserialize(jsonConf, ConnConfProperty[].class)));\n     }\n \n     public void setConnInstanceConfiguration(final Set<ConnConfProperty> properties) {"},{"sha":"f548b0055d1bbcd0bf86f5865cc06aef60df6575","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/Notification.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -85,7 +85,7 @@ public class Notification extends AbstractBaseBean {\n     @NotNull\n     @Enumerated(EnumType.STRING)\n     private TraceLevel traceLevel;\n-    \n+\n     @Column(nullable = false)\n     @Basic\n     @Min(0)\n@@ -168,7 +168,8 @@ public List<String> getStaticRecipients() {\n     }\n \n     public boolean addStaticRecipient(String staticRecipient) {\n-        return staticRecipient != null && !staticRecipients.contains(staticRecipient) && staticRecipients.add(staticRecipient);\n+        return staticRecipient != null && !staticRecipients.contains(staticRecipient) && staticRecipients.add(\n+                staticRecipient);\n     }\n \n     public boolean removeStaticRecipient(String staticRecipient) {"},{"sha":"eff48627d076bab9fa438802274f24381ca8e839","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/package-info.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -17,4 +17,3 @@\n  * under the License.\n  */\n package org.apache.syncope.core.persistence.beans;\n-"},{"sha":"3a783b926aa7e710eb15e22db6f9f841fdc967d6","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/ConnectorRegistry.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnectorRegistry.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -40,4 +40,4 @@ public interface ConnectorRegistry {\n      * @param id Spring bean id\n      */\n     void unregisterConnector(String id);\n-}\n\\ No newline at end of file\n+}"},{"sha":"7d30a0143c06841a95fca2d89a37d799ffd514af","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RouteDAOImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -37,7 +37,8 @@ public CamelRoute find(final Long id) {\n     @Transactional(readOnly = true)\n     @Override\n     public List<CamelRoute> findAll() {\n-        TypedQuery<CamelRoute> query = entityManager.createQuery(\"SELECT e FROM \" + CamelRoute.class.getSimpleName() + \" e\", CamelRoute.class);\n+        TypedQuery<CamelRoute> query = entityManager.createQuery(\"SELECT e FROM \" + CamelRoute.class.getSimpleName()\n+                + \" e\", CamelRoute.class);\n         return query.getResultList();\n     }\n "},{"sha":"d7e172b8e5037b514c9204aca91101007a61b108","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AbstractSyncTaskCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = AbstractSyncTaskValidator.class)\n @Documented"},{"sha":"9088a44d93a7ad88680c76404d7fc02807113aa1","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AbstractSyncTaskValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -60,8 +60,8 @@ public boolean isValid(final AbstractSyncTask object, final ConstraintValidatorC\n                         isAssignable = object instanceof SyncTask\n                                 ? SyncActions.class.isAssignableFrom(actionsClass)\n                                 : object instanceof PushTask\n-                                ? PushActions.class.isAssignableFrom(actionsClass)\n-                                : false;\n+                                        ? PushActions.class.isAssignableFrom(actionsClass)\n+                                        : false;\n                     } catch (Exception e) {\n                         LOG.error(\"Invalid SyncActions specified\", e);\n                         isValid = false;"},{"sha":"f0131dd1c8b3381e16c627fb5296de17adc1468b","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AttrCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = AttrValidator.class)\n @Documented"},{"sha":"b5efbca832f5d3de7134e24b7198b76f8be5f871","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AttrValueCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = AttrValueValidator.class)\n @Documented"},{"sha":"172d44ec90d1d8e2300a2236041145cd6fcce349","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ConnInstanceCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FConnInstanceCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({ElementType.TYPE})\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = ConnInstanceValidator.class)\n @Documented"},{"sha":"59be7fbdae5bd7c4e04e93ea11601074c0c3bcaf","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ExternalResourceCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = ExternalResourceValidator.class)\n @Documented"},{"sha":"8c10eb87903c5c16b9a4b80daebbe876281f5fea","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/NotificationCheck.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = NotificationValidator.class)\n @Documented\n@@ -38,4 +38,4 @@\n     Class<?>[] groups() default {};\n \n     Class<? extends Payload>[] payload() default {};\n-}\n\\ No newline at end of file\n+}"},{"sha":"ef55fb16d070edb866239427c0d6566bd15197d1","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/PolicyCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = PolicyValidator.class)\n @Documented"},{"sha":"ac0a0dedcca62c0cad49a6df3ca36f20a86aa42f","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/PropagationTaskCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = PropagationTaskValidator.class)\n @Documented"},{"sha":"9f00b67a8762566d7edc00a4db446224d993464d","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ReportCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = ReportValidator.class)\n @Documented"},{"sha":"76f012a27e9c5a55ce22229de91dad79a4554ff9","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchedTaskCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchedTaskValidator.class)\n @Documented"},{"sha":"e092ec9b03587ac8631d173a514382611674bf62","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchemaCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchemaValidator.class)\n @Documented"},{"sha":"65def91f199f26ed572c9378c4f44b922c8a1e02","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchemaNameCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchemaNameValidator.class)\n @Documented"},{"sha":"ae7e282a9558e30c8478553d010a9211e899b7ed","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeRoleCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeRoleCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({ElementType.TYPE})\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SyncopeRoleValidator.class)\n @Documented"},{"sha":"5a709b7fa8d6242c14cd63e47b81b6fdd6cd270c","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeUserCheck.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -27,8 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-\n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SyncopeUserValidator.class)\n @Documented"},{"sha":"abf7b1d94ac92423e0859465bc26d572127d29cb","filename":"core/src/main/java/org/apache/syncope/core/policy/PolicyEvaluator.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -52,7 +52,7 @@ public <T extends AbstractPolicySpec> T evaluate(final Policy policy, final Abst\n                 final PasswordPolicySpec ppSpec = policy.getSpecification(PasswordPolicySpec.class);\n                 final PasswordPolicySpec evaluatedPPSpec = new PasswordPolicySpec();\n \n-                BeanUtils.copyProperties(ppSpec, evaluatedPPSpec, new String[]{\"schemasNotPermitted\"});\n+                BeanUtils.copyProperties(ppSpec, evaluatedPPSpec, new String[] { \"schemasNotPermitted\" });\n \n                 for (String schema : ppSpec.getSchemasNotPermitted()) {\n                     AbstractAttr attribute = attributable.getAttr(schema);\n@@ -65,7 +65,6 @@ public <T extends AbstractPolicySpec> T evaluate(final Policy policy, final Abst\n                 }\n \n                 // Password history verification and update\n-\n                 if (!(attributable instanceof SyncopeUser)) {\n                     LOG.error(\"Cannot check previous passwords. attributable is not a user object: {}\",\n                             attributable.getClass().getName());\n@@ -83,7 +82,7 @@ public <T extends AbstractPolicySpec> T evaluate(final Policy policy, final Abst\n                 final AccountPolicySpec spec = policy.getSpecification(AccountPolicySpec.class);\n                 final AccountPolicySpec accountPolicy = new AccountPolicySpec();\n \n-                BeanUtils.copyProperties(spec, accountPolicy, new String[]{\"schemasNotPermitted\"});\n+                BeanUtils.copyProperties(spec, accountPolicy, new String[] { \"schemasNotPermitted\" });\n \n                 for (String schema : spec.getSchemasNotPermitted()) {\n                     AbstractAttr attribute = attributable.getAttr(schema);"},{"sha":"e1e0890607e29d64769de4616fc751b5189cc2b8","filename":"core/src/main/java/org/apache/syncope/core/policy/PolicyPattern.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyPattern.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyPattern.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FPolicyPattern.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -43,4 +43,5 @@ public class PolicyPattern {\n     public static final Pattern FIRST_NON_ALPHANUMERIC = Pattern.compile(\"\\\\W.*\");\n \n     public static final Pattern LAST_NON_ALPHANUMERIC = Pattern.compile(\".*\\\\W\");\n+\n }"},{"sha":"e8c985d0ce4bbe93fd12071eba47a575e09e3999","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationReporter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationReporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationReporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationReporter.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -44,7 +44,7 @@ void onSuccessOrSecondaryResourceFailures(String resourceName, PropagationTaskEx\n \n     /**\n      * Report propagation status after executions in case blocking failure (e.g. on primary resources).\n-     * \n+     *\n      * @param tasks propagation tasks performed before failure\n      */\n     void onPrimaryResourceFailure(List<PropagationTask> tasks);"},{"sha":"9ccb14670c114a4cdea3176b99497009a6cf0278","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/DBPasswordPropagationActions.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDBPasswordPropagationActions.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -46,7 +46,7 @@\n  * cipher algorithm property of the DB Connector.\n  */\n public class DBPasswordPropagationActions extends DefaultPropagationActions {\n-    \n+\n     private static final String CLEARTEXT = \"CLEARTEXT\";\n \n     @Autowired\n@@ -59,12 +59,12 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n \n         if (AttributableType.USER == task.getSubjectType()) {\n             SyncopeUser user = userDAO.find(task.getSubjectId());\n-            \n+\n             if (user != null && user.getPassword() != null) {\n                 Attribute missing = AttributeUtil.find(\n                         PropagationTaskExecutor.MANDATORY_MISSING_ATTR_NAME,\n                         task.getAttributes());\n-                \n+\n                 ConnInstance connInstance = task.getResource().getConnector();\n                 if (missing != null && missing.getValue() != null && missing.getValue().size() == 1\n                         && missing.getValue().get(0).equals(OperationalAttributes.PASSWORD_NAME)\n@@ -86,7 +86,7 @@ && cipherAlgorithmMatches(getCipherAlgorithm(connInstance), user.getCipherAlgori\n             }\n         }\n     }\n-    \n+\n     private String getCipherAlgorithm(ConnInstance connInstance) {\n         String cipherAlgorithm = CLEARTEXT;\n         for (Iterator<ConnConfProperty> propertyIterator = connInstance.getConfiguration().iterator();\n@@ -101,21 +101,21 @@ private String getCipherAlgorithm(ConnInstance connInstance) {\n         }\n         return cipherAlgorithm;\n     }\n-    \n+\n     private boolean cipherAlgorithmMatches(String connectorAlgorithm, CipherAlgorithm userAlgorithm) {\n         if (userAlgorithm == null) {\n             return false;\n         }\n-    \n+\n         if (connectorAlgorithm.equals(userAlgorithm.name())) {\n             return true;\n         }\n-        \n+\n         // Special check for \"SHA\" (user sync'd from LDAP)\n         if (\"SHA1\".equals(connectorAlgorithm) && \"SHA\".equals(userAlgorithm.name())) {\n             return true;\n         }\n-        \n+\n         return false;\n     }\n "},{"sha":"8fd4f1898b92895098e801f03f69f0c223e99bcf","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PriorityPropagationTaskExecutor.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -75,7 +75,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     null,\n                     result,\n                     reporter instanceof DefaultPropagationReporter\n-                    ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n+                            ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n                     tasks);\n \n             auditManager.audit(\n@@ -85,7 +85,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     null,\n                     result,\n                     reporter instanceof DefaultPropagationReporter\n-                    ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n+                            ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n                     tasks);\n         }\n     }\n@@ -112,8 +112,8 @@ public int compare(final PropagationTask task1, final PropagationTask task2) {\n             return prop1 > prop2\n                     ? 1\n                     : prop1 == prop2\n-                    ? 0\n-                    : -1;\n+                            ? 0\n+                            : -1;\n         }\n     }\n }"},{"sha":"169c4e85f42424eabe2c489ec532c473329531e1","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -388,8 +388,8 @@ public List<PropagationTask> getUpdateTaskIds(final AbstractSubject subject,\n         PropagationByResource localPropByRes = binder.fillVirtual(subject, vAttrsToBeRemoved == null\n                 ? Collections.<String>emptySet()\n                 : vAttrsToBeRemoved, vAttrsToBeUpdated == null\n-                ? Collections.<AttributeMod>emptySet()\n-                : vAttrsToBeUpdated, AttributableUtil.getInstance(subject));\n+                        ? Collections.<AttributeMod>emptySet()\n+                        : vAttrsToBeUpdated, AttributableUtil.getInstance(subject));\n \n         // SYNCOPE-458 fill membership virtual attributes\n         if (subject instanceof SyncopeUser) {\n@@ -402,8 +402,8 @@ public List<PropagationTask> getUpdateTaskIds(final AbstractSubject subject,\n                                 ? Collections.<String>emptySet()\n                                 : membershipMod.getVirAttrsToRemove(),\n                                 membershipMod.getVirAttrsToUpdate() == null ? Collections.<AttributeMod>emptySet()\n-                                : membershipMod.getVirAttrsToUpdate(), AttributableUtil.getInstance(\n-                                AttributableType.MEMBERSHIP));\n+                                        : membershipMod.getVirAttrsToUpdate(), AttributableUtil.getInstance(\n+                                        AttributableType.MEMBERSHIP));\n                     }\n                 }\n             }"},{"sha":"92d1db5fddf032bc8da892137c67badb5b159f95","filename":"core/src/main/java/org/apache/syncope/core/propagation/package-info.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -17,4 +17,3 @@\n  * under the License.\n  */\n package org.apache.syncope.core.propagation;\n-"},{"sha":"5986b8e7dfcf8c4e30621d58cf00695968cfcd0f","filename":"core/src/main/java/org/apache/syncope/core/provisioning/DefaultRoleProvisioningManager.java","status":"modified","additions":30,"deletions":26,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning;\n \n import java.util.AbstractMap;\n@@ -48,28 +47,33 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.apache.commons.lang3.StringUtils;\n \n-public class DefaultRoleProvisioningManager implements RoleProvisioningManager{\n+public class DefaultRoleProvisioningManager implements RoleProvisioningManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultRoleProvisioningManager.class);\n+\n     @Autowired\n     protected RoleWorkflowAdapter rwfAdapter;\n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n-    protected PropagationTaskExecutor taskExecutor;    \n+    protected PropagationTaskExecutor taskExecutor;\n+\n     @Autowired\n     protected RoleDAO roleDAO;\n+\n     @Autowired\n     protected RoleDataBinder binder;\n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject) {\n         return create(subject, Collections.<String>emptySet());\n     }\n \n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject, Set<String> excludedResources) {\n-        \n+\n         WorkflowResult<Long> created = rwfAdapter.create(subject);\n \n         EntitlementUtil.extendAuthContext(created.getResult());\n@@ -86,15 +90,16 @@ public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject, Set<Strin\n \n         final RoleTO savedTO = binder.getRoleTO(created.getResult());\n         savedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n-        \n+\n         Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n                 created.getResult(), propagationReporter.getStatuses());\n         return result;\n     }\n-    \n+\n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<Long, String> roleOwnerMap,Set<String> excludedResources) throws PropagationException{\n-        \n+    public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<Long, String> roleOwnerMap,\n+            Set<String> excludedResources) throws PropagationException {\n+\n         WorkflowResult<Long> created = rwfAdapter.create((RoleTO) roleTO);\n         AttributeTO roleOwner = roleTO.getAttrMap().get(StringUtils.EMPTY);\n         if (roleOwner != null) {\n@@ -107,21 +112,21 @@ public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<\n                 roleTO.getVirAttrs(), excludedResources);\n \n         taskExecutor.execute(tasks);\n-        \n+\n         Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n                 created.getResult(), null);\n         return result;\n     }\n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod) {\n-        \n+\n         return update(subjectMod, Collections.<String>emptySet());\n     }\n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources) {\n-                \n+\n         WorkflowResult<Long> updated = rwfAdapter.update(subjectMod);\n \n         List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n@@ -135,7 +140,6 @@ public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<S\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n \n-        \n         Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n                 updated.getResult(), propagationReporter.getStatuses());\n         return result;\n@@ -179,13 +183,12 @@ public List<PropagationStatus> delete(Long subjectId) {\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n \n-        try{\n+        try {\n             rwfAdapter.delete(subjectId);\n+        } catch (RuntimeException e) {\n+            throw e;\n         }\n-        catch(RuntimeException e){\n-            throw  e;\n-        }\n-        \n+\n         return propagationReporter.getStatuses();\n     }\n \n@@ -194,15 +197,16 @@ public Long unlink(RoleMod subjectMod) {\n         WorkflowResult<Long> updated = rwfAdapter.update(subjectMod);\n         return updated.getResult();\n     }\n-    \n+\n     @Override\n-    public List<PropagationStatus> deprovision(final Long roleId, final Collection<String> resources){\n+    public List<PropagationStatus> deprovision(final Long roleId, final Collection<String> resources) {\n         final SyncopeRole role = binder.getRoleFromId(roleId);\n-        \n+\n         final Set<String> noPropResourceName = role.getResourceNames();\n         noPropResourceName.removeAll(resources);\n-        \n-        final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, new HashSet<String>(resources), noPropResourceName);\n+\n+        final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, new HashSet<String>(\n+                resources), noPropResourceName);\n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n                 PropagationReporter.class);\n         try {\n@@ -218,5 +222,5 @@ public List<PropagationStatus> deprovision(final Long roleId, final Collection<S\n     public Long link(RoleMod subjectMod) {\n         return rwfAdapter.update(subjectMod).getResult();\n     }\n-    \n+\n }"},{"sha":"ff0544fea40c22600ef3038e1d1521408dced7d3","filename":"core/src/main/java/org/apache/syncope/core/provisioning/DefaultUserProvisioningManager.java","status":"modified","additions":80,"deletions":79,"changes":159,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -47,7 +47,7 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public class DefaultUserProvisioningManager implements UserProvisioningManager{\n+public class DefaultUserProvisioningManager implements UserProvisioningManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserProvisioningManager.class);\n \n@@ -59,47 +59,48 @@ public class DefaultUserProvisioningManager implements UserProvisioningManager{\n \n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n-    \n+\n     @Autowired\n-    protected UserDataBinder binder;    \n+    protected UserDataBinder binder;\n \n     @Autowired\n-    protected UserDAO userDAO;   \n+    protected UserDAO userDAO;\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO){\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO) {\n         return create(userTO, true, false, null, Collections.<String>emptySet());\n     }\n-    \n-    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, boolean storePassword) {\n-        /*WorkflowResult<Map.Entry<Long, Boolean>> created;\n-        try {\n-            created = uwfAdapter.create(userTO,storePassword);\n-        } catch (RuntimeException e) {\n-            throw e;\n-        }\n-\n-        List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n-                created, userTO.getPassword(), userTO.getVirAttrs(), userTO.getMemberships());\n \n-        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-                getBean(PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n-        }\n-\n-        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n-                created.getResult().getKey(), propagationReporter.getStatuses());\n-        return result;*/\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, boolean storePassword) {\n+        /* WorkflowResult<Map.Entry<Long, Boolean>> created;\n+         * try {\n+         * created = uwfAdapter.create(userTO,storePassword);\n+         * } catch (RuntimeException e) {\n+         * throw e;\n+         * }\n+         *\n+         * List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n+         * created, userTO.getPassword(), userTO.getVirAttrs(), userTO.getMemberships());\n+         *\n+         * PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+         * getBean(PropagationReporter.class);\n+         * try {\n+         * taskExecutor.execute(tasks, propagationReporter);\n+         * } catch (PropagationException e) {\n+         * LOG.error(\"Error propagation primary resource\", e);\n+         * propagationReporter.onPrimaryResourceFailure(tasks);\n+         * }\n+         *\n+         * Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+         * created.getResult().getKey(), propagationReporter.getStatuses());\n+         * return result; */\n         return create(userTO, storePassword, false, null, Collections.<String>emptySet());\n     }\n-    \n+\n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> create(UserTO userTO, boolean storePassword, boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources) {\n-                WorkflowResult<Map.Entry<Long, Boolean>> created;\n+    public Map.Entry<Long, List<PropagationStatus>> create(UserTO userTO, boolean storePassword,\n+            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources) {\n+        WorkflowResult<Map.Entry<Long, Boolean>> created;\n         try {\n             created = uwfAdapter.create(userTO, disablePwdPolicyCheck, enabled, storePassword);\n         } catch (RuntimeException e) {\n@@ -126,7 +127,7 @@ public Map.Entry<Long, List<PropagationStatus>> create(UserTO userTO, boolean st\n     public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod) {\n         return update(userMod, false);\n     }\n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean removeMemberships) {\n         WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n@@ -174,9 +175,9 @@ public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean\n \n         Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n                 updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n-        return result;    \n+        return result;\n     }\n-       \n+\n     @Override\n     public List<PropagationStatus> delete(final Long userId) {\n \n@@ -185,7 +186,7 @@ public List<PropagationStatus> delete(final Long userId) {\n \n     @Override\n     public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResources) {\n-        List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(subjectId,excludedResources);\n+        List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(subjectId, excludedResources);\n \n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n                 getBean(PropagationReporter.class);\n@@ -205,7 +206,6 @@ public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResour\n         return propagationReporter.getStatuses();\n     }\n \n-    \n     @Override\n     public Long unlink(UserMod userMod) {\n         WorkflowResult<Map.Entry<UserMod, Boolean>> updated = uwfAdapter.update(userMod);\n@@ -216,7 +216,7 @@ public Long unlink(UserMod userMod) {\n     public Long link(UserMod subjectMod) {\n         return uwfAdapter.update(subjectMod).getResult().getKey().getId();\n     }\n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, StatusMod statusMod) {\n         WorkflowResult<Long> updated;\n@@ -225,7 +225,7 @@ public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, Statu\n         } else {\n             updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n         }\n-  \n+\n         List<PropagationStatus> statuses = propagateStatus(user, statusMod);\n         return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult(), statuses);\n     }\n@@ -238,7 +238,7 @@ public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, Sta\n         } else {\n             updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n         }\n-        \n+\n         List<PropagationStatus> statuses = propagateStatus(user, statusMod);\n         return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult(), statuses);\n     }\n@@ -251,13 +251,13 @@ public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, Status\n         } else {\n             updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n         }\n-        \n+\n         List<PropagationStatus> statuses = propagateStatus(user, statusMod);\n         return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult(), statuses);\n     }\n-    \n-    public List<PropagationStatus> propagateStatus(SyncopeUser user, StatusMod statusMod){\n-                \n+\n+    public List<PropagationStatus> propagateStatus(SyncopeUser user, StatusMod statusMod) {\n+\n         Set<String> resourcesToBeExcluded = new HashSet<String>(user.getResourceNames());\n         resourcesToBeExcluded.removeAll(statusMod.getResourceNames());\n \n@@ -271,19 +271,19 @@ public List<PropagationStatus> propagateStatus(SyncopeUser user, StatusMod statu\n             LOG.error(\"Error propagation primary resource\", e);\n             propReporter.onPrimaryResourceFailure(tasks);\n         }\n-        \n+\n         return propReporter.getStatuses();\n-        \n+\n     }\n \n     @Override\n     public List<PropagationStatus> deprovision(Long userId, Collection<String> resources) {\n-        \n-        final SyncopeUser user = binder.getUserFromId(userId);        \n-        \n+\n+        final SyncopeUser user = binder.getUserFromId(userId);\n+\n         final Set<String> noPropResourceName = user.getResourceNames();\n         noPropResourceName.removeAll(resources);\n-        \n+\n         final List<PropagationTask> tasks =\n                 propagationManager.getUserDeleteTaskIds(userId, new HashSet<String>(resources), noPropResourceName);\n         final PropagationReporter propagationReporter =\n@@ -294,14 +294,14 @@ public List<PropagationStatus> deprovision(Long userId, Collection<String> resou\n             LOG.error(\"Error propagation primary resource\", e);\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n-        \n+\n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userMod,final Long id, \n-                                               final SyncResult result, Boolean enabled, Set<String> excludedResources){\n-        \n+    public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userMod, final Long id,\n+            final SyncResult result, Boolean enabled, Set<String> excludedResources) {\n+\n         WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n         try {\n             updated = uwfAdapter.update(userMod);\n@@ -337,40 +337,41 @@ public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userM\n             }\n         }\n \n-            PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-                    getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n \n-            List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated,updated.getResult().getKey().getPassword() != null,excludedResources);\n-               \n-            try {\n-                    taskExecutor.execute(tasks, propagationReporter);\n-            } catch (PropagationException e) {\n-                    LOG.error(\"Error propagation primary resource\", e);\n-                    propagationReporter.onPrimaryResourceFailure(tasks);\n-            }\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated, updated.getResult().getKey().\n+                getPassword() != null, excludedResources);\n \n-            \n-            return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n+\n+        return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult().getKey().getId(),\n+                propagationReporter.getStatuses());\n \n     }\n \n     @Override\n     public void innerSuspend(SyncopeUser user, boolean suspend) {\n-        \n-            final WorkflowResult<Long> updated = uwfAdapter.suspend(user);\n \n-            // propagate suspension if and only if it is required by policy\n-            if (suspend) {\n-                UserMod userMod = new UserMod();\n-                userMod.setId(updated.getResult());\n+        final WorkflowResult<Long> updated = uwfAdapter.suspend(user);\n+\n+        // propagate suspension if and only if it is required by policy\n+        if (suspend) {\n+            UserMod userMod = new UserMod();\n+            userMod.setId(updated.getResult());\n \n-                final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n-                        new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n-                                new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, Boolean.FALSE),\n-                                updated.getPropByRes(), updated.getPerformedTasks()));\n+            final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                    new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+                            new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, Boolean.FALSE),\n+                            updated.getPropByRes(), updated.getPerformedTasks()));\n \n-                taskExecutor.execute(tasks);\n-            }            \n+            taskExecutor.execute(tasks);\n+        }\n     }\n \n     @Override\n@@ -380,7 +381,7 @@ public void requestPasswordReset(Long id) {\n \n     @Override\n     public void confirmPasswordReset(SyncopeUser user, String token, String password) {\n-            \n+\n         uwfAdapter.confirmPasswordReset(user.getId(), token, password);\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, null, null);\n@@ -391,6 +392,6 @@ public void confirmPasswordReset(SyncopeUser user, String token, String password\n         } catch (PropagationException e) {\n             LOG.error(\"Error propagation primary resource\", e);\n             propReporter.onPrimaryResourceFailure(tasks);\n-        }    \n+        }\n     }\n }"},{"sha":"65f7f7d3b79a439c3ed7f35c0331515ab83e3f0f","filename":"core/src/main/java/org/apache/syncope/core/provisioning/ProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.PropagationStatus;\n \n-public interface ProvisioningManager<T extends AbstractAttributableTO, M extends AbstractAttributableMod>{\n+public interface ProvisioningManager<T extends AbstractAttributableTO, M extends AbstractAttributableMod> {\n \n     public Map.Entry<Long, List<PropagationStatus>> create(T subject);\n "},{"sha":"53029ac4bef722be1326ee1430f489322087eab9","filename":"core/src/main/java/org/apache/syncope/core/provisioning/RoleProvisioningManager.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -13,7 +13,6 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.syncope.core.provisioning;\n \n import java.util.List;\n@@ -24,12 +23,13 @@\n import org.apache.syncope.common.to.PropagationStatus;\n import org.apache.syncope.core.propagation.PropagationException;\n \n-public interface RoleProvisioningManager extends ProvisioningManager<RoleTO, RoleMod>{\n-    \n+public interface RoleProvisioningManager extends ProvisioningManager<RoleTO, RoleMod> {\n+\n     public Map.Entry<Long, List<PropagationStatus>> create(final RoleTO roleTO, Set<String> excludedResources);\n-    \n-    public Map.Entry<Long, List<PropagationStatus>> createInSync(final RoleTO roleTO, Map<Long, String> roleOwnerMap,Set<String> excludedResources) throws PropagationException;\n-    \n+\n+    public Map.Entry<Long, List<PropagationStatus>> createInSync(final RoleTO roleTO, Map<Long, String> roleOwnerMap,\n+            Set<String> excludedResources) throws PropagationException;\n+\n     public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources);\n-    \n+\n }"},{"sha":"c5b70a8f5864027488b1508f3e7dd085f935b955","filename":"core/src/main/java/org/apache/syncope/core/provisioning/UserProvisioningManager.java","status":"modified","additions":16,"deletions":15,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -13,7 +13,6 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.syncope.core.provisioning;\n \n import java.util.List;\n@@ -27,28 +26,30 @@\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.sync.SyncResult;\n \n-public interface UserProvisioningManager extends ProvisioningManager<UserTO, UserMod>{\n-    \n+public interface UserProvisioningManager extends ProvisioningManager<UserTO, UserMod> {\n+\n     public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, StatusMod statusMod);\n \n     public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, StatusMod statusMod);\n \n     public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, StatusMod statusMod);\n-    \n+\n     public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword);\n-    \n-    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword, boolean disablePwdPolicyCheck, Boolean enabled,Set<String> excludedResources);\n-    \n+\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword,\n+            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources);\n+\n     public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod, final boolean removeMemberships);\n-    \n-    public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userMod,final Long id, final SyncResult result, Boolean enabled, Set<String> excludedResources);\n \n-    public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResources);    \n-    \n+    public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userMod, final Long id,\n+            final SyncResult result, Boolean enabled, Set<String> excludedResources);\n+\n+    public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResources);\n+\n     public void innerSuspend(SyncopeUser user, boolean suspend);\n-    \n+\n     public void requestPasswordReset(final Long id);\n-    \n-    public void confirmPasswordReset(SyncopeUser user,final String token,final String password);\n-    \n+\n+    public void confirmPasswordReset(SyncopeUser user, final String token, final String password);\n+\n }"},{"sha":"33856a9c9235caac8dc687c6055b6e3f15737a35","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelRoleProvisioningManager.java","status":"modified","additions":34,"deletions":34,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel;\n \n import java.io.ByteArrayInputStream;\n@@ -65,7 +64,7 @@\n import org.w3c.dom.Node;\n import org.w3c.dom.NodeList;\n \n-public class CamelRoleProvisioningManager implements RoleProvisioningManager{\n+public class CamelRoleProvisioningManager implements RoleProvisioningManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(CamelRoleProvisioningManager.class);\n \n@@ -76,7 +75,7 @@ public class CamelRoleProvisioningManager implements RoleProvisioningManager{\n     protected Map<String, PollingConsumer> consumerMap;\n \n     protected List<String> knownUri;\n-    \n+\n     @Autowired\n     protected RouteDAO routeDAO;\n \n@@ -99,7 +98,7 @@ public void stopContext() throws Exception {\n     public CamelContext getContext() {\n         //ApplicationContext context = ApplicationContextProvider.getApplicationContext();\n         //return context.getBean(\"camel-context\", DefaultCamelContext.class);        \n-        return contextFactory.getContext(routeDAO);  \n+        return contextFactory.getContext(routeDAO);\n     }\n \n     public void changeRoute(String routePath) {\n@@ -125,12 +124,12 @@ protected void sendMessage(String uri, Object obj) {\n \n     protected void sendMessage(String uri, Object obj, Map<String, Object> properties) {\n         Exchange exc = new DefaultExchange(getContext());\n-        \n+\n         Iterator<Map.Entry<String, Object>> it = properties.entrySet().iterator();\n         while (it.hasNext()) {\n             Map.Entry<String, Object> property = it.next();\n             exc.setProperty(property.getKey(), property.getValue());\n-            LOG.info(\"Added property {}\", property.getKey());            \n+            LOG.info(\"Added property {}\", property.getKey());\n         }\n \n         DefaultMessage m = new DefaultMessage();\n@@ -158,22 +157,22 @@ protected PollingConsumer getConsumer(final String uri) {\n             return consumerMap.get(uri);\n         }\n     }\n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject) {\n-        \n-        return create(subject, Collections.<String>emptySet());        \n+\n+        return create(subject, Collections.<String>emptySet());\n     }\n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> create(RoleTO roleTO, Set<String> excludedResources) {\n-        \n+\n         String uri = \"direct:createRolePort\";\n         PollingConsumer pollingConsumer = getConsumer(uri);\n \n         Map<String, Object> props = new HashMap<String, Object>();\n         props.put(\"excludedResources\", excludedResources);\n-        \n+\n         sendMessage(\"direct:createRole\", roleTO, props);\n \n         Exchange o = pollingConsumer.receive();\n@@ -184,57 +183,58 @@ public Map.Entry<Long, List<PropagationStatus>> create(RoleTO roleTO, Set<String\n \n         return o.getIn().getBody(Map.Entry.class);\n     }\n-    \n+\n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<Long, String> roleOwnerMap, Set<String> excludedResources) throws PropagationException {\n-        \n+    public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<Long, String> roleOwnerMap,\n+            Set<String> excludedResources) throws PropagationException {\n+\n         String uri = \"direct:createRoleSyncPort\";\n         PollingConsumer pollingConsumer = getConsumer(uri);\n \n-        Map<String, Object> props = new HashMap<String, Object>();        \n+        Map<String, Object> props = new HashMap<String, Object>();\n         props.put(\"roleOwnerMap\", roleOwnerMap);\n         props.put(\"excludedResources\", excludedResources);\n-           \n+\n         sendMessage(\"direct:createRoleSync\", roleTO, props);\n \n         Exchange o = pollingConsumer.receive();\n \n-        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {            \n+        if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n             throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n         }\n-        \n+\n         return o.getIn().getBody(Map.Entry.class);\n     }\n \n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod) {\n-                \n+\n         return update(subjectMod, Collections.<String>emptySet());\n     }\n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources) {\n \n         String uri = \"direct:updateRolePort\";\n         PollingConsumer pollingConsumer = getConsumer(uri);\n-        \n+\n         Map<String, Object> props = new HashMap<String, Object>();\n         props.put(\"excludedResources\", excludedResources);\n \n-        sendMessage(\"direct:updateRole\",subjectMod, props);\n+        sendMessage(\"direct:updateRole\", subjectMod, props);\n \n         Exchange o = pollingConsumer.receive();\n \n         if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n             throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n         }\n \n-        return o.getIn().getBody(Map.Entry.class);        \n+        return o.getIn().getBody(Map.Entry.class);\n     }\n \n     @Override\n     public List<PropagationStatus> delete(Long subjectId) {\n-        \n+\n         String uri = \"direct:deleteRolePort\";\n         PollingConsumer pollingConsumer = getConsumer(uri);\n \n@@ -267,9 +267,9 @@ public Long unlink(RoleMod subjectMod) {\n \n     @Override\n     public Long link(RoleMod subjectMod) {\n-        \n+\n         String uri = \"direct:linkRolePort\";\n-        \n+\n         PollingConsumer pollingConsumer = getConsumer(uri);\n \n         sendMessage(\"direct:linkRole\", subjectMod);\n@@ -280,28 +280,28 @@ public Long link(RoleMod subjectMod) {\n             throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n         }\n \n-        return o.getIn().getBody(Long.class);  \n+        return o.getIn().getBody(Long.class);\n     }\n \n     @Override\n     public List<PropagationStatus> deprovision(final Long roleId, Collection<String> resources) {\n-                \n+\n         String uri = \"direct:deprovisionRolePort\";\n-        \n+\n         PollingConsumer pollingConsumer = getConsumer(uri);\n-        \n+\n         Map props = new HashMap<String, Object>();\n         props.put(\"resources\", resources);\n \n         sendMessage(\"direct:deprovisionRole\", roleId, props);\n-        \n+\n         Exchange o = pollingConsumer.receive();\n \n         if (o.getProperty(Exchange.EXCEPTION_CAUGHT) != null) {\n             throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n         }\n-        \n+\n         return o.getIn().getBody(List.class);\n     }\n-   \n+\n }"},{"sha":"d30c624c50495c535e88f834bb8f645768910eb3","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -55,7 +55,6 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-\n public class CamelUserProvisioningManager implements UserProvisioningManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(CamelUserProvisioningManager.class);\n@@ -70,7 +69,7 @@ public class CamelUserProvisioningManager implements UserProvisioningManager {\n \n     @Autowired\n     protected RouteDAO routeDAO;\n-    \n+\n     @Autowired\n     protected SyncopeCamelContext contextFactory;\n \n@@ -90,7 +89,7 @@ public String readerToString(Reader reader, int size) throws IOException {\n \n         return content.toString();\n     }\n-    \n+\n     public void startContext() throws Exception {\n         getContext().start();\n     }\n@@ -170,15 +169,15 @@ public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO) {\n \n         return create(userTO, true, false, null, Collections.<String>emptySet());\n     }\n-    \n-    \n+\n     public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, boolean storePassword) {\n \n         return create(userTO, storePassword, false, null, Collections.<String>emptySet());\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword, boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources) {\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword,\n+            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources) {\n         String uri = \"direct:createPort\";\n         PollingConsumer pollingConsumer = getConsumer(uri);\n \n@@ -209,13 +208,12 @@ public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, fina\n     public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod) {\n         return update(userMod, false);\n     }\n-    \n-    \n+\n     @Override\n     public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean removeMemberships) {\n         String uri = \"direct:updatePort\";\n         PollingConsumer pollingConsumer = getConsumer(uri);\n-        \n+\n         Map<String, Object> props = new HashMap<String, Object>();\n         props.put(\"removeMemberships\", removeMemberships);\n \n@@ -227,10 +225,9 @@ public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean\n             throw (RuntimeException) o.getProperty(Exchange.EXCEPTION_CAUGHT);\n         }\n \n-        return o.getIn().getBody(Map.Entry.class);    \n+        return o.getIn().getBody(Map.Entry.class);\n     }\n \n-\n     @Override\n     public List<PropagationStatus> delete(final Long userId) {\n \n@@ -286,7 +283,8 @@ public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, Statu\n         if (statusMod.isOnSyncope()) {\n             sendMessage(\"direct:activateUser\", user.getId(), props);\n         } else {\n-            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n+            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().\n+                    toLowerCase());\n             sendMessage(\"direct:statusUser\", updated, props);\n         }\n \n@@ -311,7 +309,8 @@ public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, Sta\n         if (statusMod.isOnSyncope()) {\n             sendMessage(\"direct:reactivateUser\", user.getId(), props);\n         } else {\n-            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n+            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().\n+                    toLowerCase());\n             sendMessage(\"direct:statusUser\", updated, props);\n         }\n \n@@ -337,7 +336,8 @@ public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, Status\n         if (statusMod.isOnSyncope()) {\n             sendMessage(\"direct:suspendUser\", user.getId(), props);\n         } else {\n-            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().toLowerCase());\n+            WorkflowResult<Long> updated = new WorkflowResult<Long>(user.getId(), null, statusMod.getType().name().\n+                    toLowerCase());\n             sendMessage(\"direct:statusUser\", updated, props);\n         }\n \n@@ -389,7 +389,8 @@ public List<PropagationStatus> deprovision(Long user, Collection<String> resourc\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> updateInSync(UserMod userMod, Long id, SyncResult result, Boolean enabled, Set<String> excludedResources) {\n+    public Map.Entry<Long, List<PropagationStatus>> updateInSync(UserMod userMod, Long id, SyncResult result,\n+            Boolean enabled, Set<String> excludedResources) {\n \n         String uri = \"direct:updateSyncPort\";\n         PollingConsumer pollingConsumer = getConsumer(uri);\n@@ -456,7 +457,7 @@ public void requestPasswordReset(Long id) {\n     public void confirmPasswordReset(SyncopeUser user, final String token, final String password) {\n         String uri = \"direct:confirmPwdResetPort\";\n         PollingConsumer pollingConsumer = getConsumer(uri);\n-        \n+\n         Map<String, Object> props = new HashMap<String, Object>();\n         props.put(\"user\", user);\n         props.put(\"userId\", user.getId());"},{"sha":"c529dcff93ed7b3d43a57d59d867271c2dac2d61","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/SyncopeCamelContext.java","status":"modified","additions":42,"deletions":39,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel;\n \n import java.io.ByteArrayInputStream;\n@@ -44,38 +43,39 @@\n import org.w3c.dom.Document;\n import org.w3c.dom.Node;\n \n-\n @Component\n-public class SyncopeCamelContext{\n+public class SyncopeCamelContext {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeCamelContext.class);\n \n-    private CamelContext camelContext = null;                   \n-    \n-    public SyncopeCamelContext() { \n+    private CamelContext camelContext = null;\n+\n+    public SyncopeCamelContext() {\n     }\n-    \n-    public CamelContext getContext(RouteDAO routeDAO){\n \n-        if(camelContext == null) camelContext = new SpringCamelContext(ApplicationContextProvider.getApplicationContext());              \n-        if(camelContext.getRouteDefinitions().isEmpty()){            \n-            \n+    public CamelContext getContext(RouteDAO routeDAO) {\n+\n+        if (camelContext == null) {\n+            camelContext = new SpringCamelContext(ApplicationContextProvider.getApplicationContext());\n+        }\n+        if (camelContext.getRouteDefinitions().isEmpty()) {\n+\n             List<CamelRoute> crl = routeDAO.findAll();\n-            LOG.info(\"{} route(s) are going to be loaded \", crl.size());                \n+            LOG.info(\"{} route(s) are going to be loaded \", crl.size());\n             loadContext(routeDAO, crl);\n-                \n+\n             try {\n                 camelContext.start();\n             } catch (Exception ex) {\n                 LOG.error(\"Error during staring camel context {}\", ex);\n             }\n         }\n-        \n+\n         return camelContext;\n     }\n-    \n-    public void loadContext(RouteDAO routeDAO, List<CamelRoute> crl){\n-        \n+\n+    public void loadContext(RouteDAO routeDAO, List<CamelRoute> crl) {\n+\n         try {\n             DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n             JAXBContext jaxbContext = JAXBContext.newInstance(Constants.JAXB_CONTEXT_PACKAGES);\n@@ -84,7 +84,8 @@ public void loadContext(RouteDAO routeDAO, List<CamelRoute> crl){\n \n             for (int s = 0; s < crl.size(); s++) {\n \n-                InputStream is = new ByteArrayInputStream( URLDecoder.decode(crl.get(s).getRouteContent(), \"UTF-8\").getBytes());\n+                InputStream is = new ByteArrayInputStream(URLDecoder.decode(crl.get(s).getRouteContent(), \"UTF-8\").\n+                        getBytes());\n                 Document doc = dBuilder.parse(is);\n                 doc.getDocumentElement().normalize();\n                 Node routeEl = doc.getElementsByTagName(\"route\").item(0);\n@@ -96,42 +97,44 @@ public void loadContext(RouteDAO routeDAO, List<CamelRoute> crl){\n         } catch (Exception ex) {\n             LOG.error(\"Error during loading camel context {}\", ex);\n         }\n-    \n+\n     }\n-    \n-    public void reloadContext(RouteDAO routeDAO){\n-        \n+\n+    public void reloadContext(RouteDAO routeDAO) {\n+\n         List<CamelRoute> crl = routeDAO.findAll();\n-        if(camelContext == null) getContext(routeDAO);\n-        else {            \n-            if( ! camelContext.getRouteDefinitions().isEmpty()){                    \n-                for (Iterator<RouteDefinition> it = camelContext.getRouteDefinitions().iterator(); it.hasNext(); ) {\n+        if (camelContext == null) {\n+            getContext(routeDAO);\n+        } else {\n+            if (!camelContext.getRouteDefinitions().isEmpty()) {\n+                for (Iterator<RouteDefinition> it = camelContext.getRouteDefinitions().iterator(); it.hasNext();) {\n                     RouteDefinition ard = it.next();\n-                    it.remove();                       \n-                }                    \n+                    it.remove();\n+                }\n             }\n \n             loadContext(routeDAO, crl);\n         }\n     }\n-    \n-    public void reloadContext(RouteDAO routeDAO, Long routeId){\n-        \n-        if(camelContext == null) getContext(routeDAO);\n-        else {            \n-            if( ! camelContext.getRouteDefinitions().isEmpty()){\n-                                \n+\n+    public void reloadContext(RouteDAO routeDAO, Long routeId) {\n+\n+        if (camelContext == null) {\n+            getContext(routeDAO);\n+        } else {\n+            if (!camelContext.getRouteDefinitions().isEmpty()) {\n+\n                 camelContext.getRouteDefinitions().remove(routeId.intValue());\n                 List<CamelRoute> crl = new ArrayList<CamelRoute>();\n                 crl.add(routeDAO.find(routeId));\n                 loadContext(routeDAO, crl);\n             }\n-                \n+\n         }\n-            \n+\n     }\n-    \n-    public List<RouteDefinition> getDefinitions(){\n+\n+    public List<RouteDefinition> getDefinitions() {\n         return camelContext.getRouteDefinitions();\n     }\n }"},{"sha":"2af3d37bb2da4385bf58f8b0301143c04a5ac72c","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleCreatePropagation.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreatePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreatePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreatePropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.AbstractMap;\n@@ -41,22 +40,23 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultRoleCreatePropagation  implements Processor{\n+public class DefaultRoleCreatePropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultRoleCreatePropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-        \n+    public void process(Exchange exchange) {\n+\n         WorkflowResult<Long> created = (WorkflowResult) exchange.getIn().getBody();\n         RoleTO subject = exchange.getProperty(\"subject\", RoleTO.class);\n-        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);            \n-                \n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n         EntitlementUtil.extendAuthContext(created.getResult());\n \n         List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, subject.getVirAttrs());\n@@ -68,11 +68,11 @@ public void process(Exchange exchange){\n             LOG.error(\"Error propagation primary resource\", e);\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n-        \n+\n         Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n                 created.getResult(), propagationReporter.getStatuses());\n-        \n+\n         exchange.getOut().setBody(result);\n     }\n-    \n+\n }"},{"sha":"d796d6d160bc2a8f369795e8858cc805d483aa41","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleCreateSyncPropagation.java","status":"modified","additions":15,"deletions":16,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreateSyncPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreateSyncPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleCreateSyncPropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -2,23 +2,22 @@\n \n /*\n  * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n+ * or more contributor license agreements. See the NOTICE file\n  * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n+ * regarding copyright ownership. The ASF licenses this file\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n+ * with the License. You may obtain a copy of the License at\n  *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n+ * KIND, either express or implied. See the License for the\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n import java.util.AbstractMap;\n import java.util.Collections;\n import java.util.List;\n@@ -41,25 +40,25 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultRoleCreateSyncPropagation implements Processor{\n+public class DefaultRoleCreateSyncPropagation implements Processor {\n \n-        \n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n-    \n+\n     private static final Logger LOG = LoggerFactory.getLogger(DefaultRoleCreateSyncPropagation.class);\n-    \n+\n     @Override\n-    public void process(Exchange exchange){    \n-        \n+    public void process(Exchange exchange) {\n+\n         WorkflowResult<Long> created = (WorkflowResult) exchange.getIn().getBody();\n-        \n+\n         RoleTO actual = exchange.getProperty(\"subject\", RoleTO.class);\n         Map<Long, String> roleOwnerMap = exchange.getProperty(\"roleOwnerMap\", Map.class);\n         Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n-        \n+\n         AttributeTO roleOwner = actual.getAttrMap().get(StringUtils.EMPTY);\n \n         if (roleOwner != null) {\n@@ -72,10 +71,10 @@ public void process(Exchange exchange){\n                 actual.getVirAttrs(), excludedResource);\n \n         taskExecutor.execute(tasks);\n-        \n+\n         Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n                 created.getResult(), Collections.<PropagationStatus>emptyList());\n-        \n+\n         exchange.getOut().setBody(result);\n     }\n }"},{"sha":"1c001312283be49da7ef92e7952117a970c15c28","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleDeletePropagation.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeletePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeletePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeletePropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.ArrayList;\n@@ -40,25 +39,30 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultRoleDeletePropagation implements Processor{\n+public class DefaultRoleDeletePropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultRoleDeletePropagation.class);\n+\n     @Autowired\n     protected RoleWorkflowAdapter rwfAdapter;\n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n-    protected PropagationTaskExecutor taskExecutor;    \n+    protected PropagationTaskExecutor taskExecutor;\n+\n     @Autowired\n     protected RoleDAO roleDAO;\n+\n     @Autowired\n     protected RoleDataBinder binder;\n-    \n+\n     @Override\n     public void process(Exchange exchange) throws Exception {\n-        \n+\n         Long subjectId = exchange.getIn().getBody(Long.class);\n-        \n+\n         final List<SyncopeRole> toBeDeprovisioned = new ArrayList<SyncopeRole>();\n \n         final SyncopeRole syncopeRole = roleDAO.find(subjectId);\n@@ -92,11 +96,9 @@ public void process(Exchange exchange) throws Exception {\n         } catch (PropagationException e) {\n             LOG.error(\"Error propagation primary resource\", e);\n             propagationReporter.onPrimaryResourceFailure(tasks);\n-        }      \n-        \n+        }\n+\n         exchange.setProperty(\"statuses\", propagationReporter.getStatuses());\n     }\n-    \n-    \n-    \n+\n }"},{"sha":"a7c35fb50093a49ab3d08358d3d4f6977d6121e9","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleDeprovisionPropagation.java","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeprovisionPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeprovisionPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleDeprovisionPropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.HashSet;\n@@ -38,29 +37,32 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultRoleDeprovisionPropagation implements Processor{\n+public class DefaultRoleDeprovisionPropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserDeprovisionPropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n+\n     @Autowired\n     protected RoleDataBinder binder;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-        \n+    public void process(Exchange exchange) {\n+\n         Long roleId = exchange.getIn().getBody(Long.class);\n         List<String> resources = exchange.getProperty(\"resources\", List.class);\n-        \n+\n         final SyncopeRole role = binder.getRoleFromId(roleId);\n-        \n+\n         final Set<String> noPropResourceName = role.getResourceNames();\n         noPropResourceName.removeAll(resources);\n-        \n-        final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, new HashSet<String>(resources), noPropResourceName);\n+\n+        final List<PropagationTask> tasks = propagationManager.getRoleDeleteTaskIds(roleId, new HashSet<String>(\n+                resources), noPropResourceName);\n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n                 PropagationReporter.class);\n         try {\n@@ -69,8 +71,8 @@ public void process(Exchange exchange){\n             LOG.error(\"Error propagation primary resource\", e);\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n-        \n+\n         exchange.getOut().setBody(propagationReporter.getStatuses());\n-    }    \n-    \n+    }\n+\n }"},{"sha":"90d37dd8b04edbc9f969dae798bed8571c713b7c","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultRoleUpdatePropagation.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleUpdatePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleUpdatePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultRoleUpdatePropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -40,25 +40,27 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultRoleUpdatePropagation implements Processor{\n+public class DefaultRoleUpdatePropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserUpdatePropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n+\n     @Autowired\n     protected UserDataBinder binder;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-        WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();            \n-        RoleMod subjectMod = exchange.getProperty(\"subjectMod\", RoleMod.class);   \n+    public void process(Exchange exchange) {\n+        WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n+        RoleMod subjectMod = exchange.getProperty(\"subjectMod\", RoleMod.class);\n         Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n-        \n+\n         List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n-                subjectMod.getVirAttrsToRemove(), subjectMod.getVirAttrsToUpdate(),excludedResource);\n+                subjectMod.getVirAttrsToRemove(), subjectMod.getVirAttrsToUpdate(), excludedResource);\n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().getBean(\n                 PropagationReporter.class);\n         try {\n@@ -67,11 +69,11 @@ public void process(Exchange exchange){\n             LOG.error(\"Error propagation primary resource\", e);\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n-        \n+\n         Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n                 updated.getResult(), propagationReporter.getStatuses());\n-        \n+\n         exchange.getOut().setBody(result);\n     }\n-    \n+\n }"},{"sha":"f3d9d74bd267e74c43e25833da6fecaa9ecb294f","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserConfirmPwdResetPropagation.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserConfirmPwdResetPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserConfirmPwdResetPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserConfirmPwdResetPropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -35,17 +35,18 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultUserConfirmPwdResetPropagation implements Processor{\n+public class DefaultUserConfirmPwdResetPropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserConfirmPwdResetPropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n+    public void process(Exchange exchange) {\n         SyncopeUser user = exchange.getProperty(\"user\", SyncopeUser.class);\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, null, null);\n@@ -56,6 +57,6 @@ public void process(Exchange exchange){\n         } catch (PropagationException e) {\n             LOG.error(\"Error propagation primary resource\", e);\n             propReporter.onPrimaryResourceFailure(tasks);\n-        }                \n+        }\n     }\n }"},{"sha":"82ba0ab9fc7060fc774c49ebb2efb11dd5b00424","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserCreatePropagation.java","status":"modified","additions":16,"deletions":15,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserCreatePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserCreatePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserCreatePropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.AbstractMap;\n@@ -40,24 +39,25 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultUserCreatePropagation implements Processor{\n+public class DefaultUserCreatePropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserCreatePropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-      \n-        if((exchange.getIn().getBody() instanceof WorkflowResult)){\n-            \n-            WorkflowResult<Map.Entry<Long, Boolean>> created = (WorkflowResult) exchange.getIn().getBody();            \n+    public void process(Exchange exchange) {\n+\n+        if ((exchange.getIn().getBody() instanceof WorkflowResult)) {\n+\n+            WorkflowResult<Map.Entry<Long, Boolean>> created = (WorkflowResult) exchange.getIn().getBody();\n             UserTO actual = exchange.getProperty(\"actual\", UserTO.class);\n             Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n-            \n+\n             List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n                     created, actual.getPassword(), actual.getVirAttrs(), excludedResource, actual.getMemberships());\n             PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n@@ -68,11 +68,12 @@ public void process(Exchange exchange){\n                 LOG.error(\"Error propagation primary resource {}\", e);\n                 propagationReporter.onPrimaryResourceFailure(tasks);\n             }\n-            \n-            Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(created.getResult().getKey(), propagationReporter.getStatuses());         \n+\n+            Map.Entry<Long, List<PropagationStatus>> result =\n+                    new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(created.getResult().getKey(),\n+                            propagationReporter.getStatuses());\n             exchange.getOut().setBody(result);\n-        }               \n+        }\n     }\n-    \n-    \n+\n }"},{"sha":"3f804592601b60624a55691ff0632c77d0886827","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserDeletePropagation.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeletePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeletePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeletePropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.List;\n@@ -35,28 +34,30 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultUserDeletePropagation implements Processor{\n-    \n+public class DefaultUserDeletePropagation implements Processor {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserDeletePropagation.class);\n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n-    \n+\n     @Override\n     public void process(Exchange exchange) throws Exception {\n-        \n-        Long userId = (Long) exchange.getIn().getBody();       \n+\n+        Long userId = (Long) exchange.getIn().getBody();\n         LOG.info(\"UserId {} \", userId);\n-        \n-        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);            \n-        \n+\n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n         // Note here that we can only notify about \"delete\", not any other\n         // task defined in workflow process definition: this because this\n         // information could only be available after uwfAdapter.delete(), which\n         // will also effectively remove user from db, thus making virtually\n         // impossible by NotificationManager to fetch required user information\n-        List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(userId,excludedResource);\n+        List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(userId, excludedResource);\n \n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n                 getBean(PropagationReporter.class);\n@@ -66,8 +67,8 @@ public void process(Exchange exchange) throws Exception {\n             LOG.error(\"Error propagation primary resource\", e);\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n-        \n+\n         exchange.setProperty(\"statuses\", propagationReporter.getStatuses());\n     }\n-    \n+\n }"},{"sha":"a529deae4cfb40fde6bb9b5152ea54dc13043f68","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserDeprovisionPropagation.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeprovisionPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeprovisionPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserDeprovisionPropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -37,28 +37,30 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultUserDeprovisionPropagation implements Processor{\n+public class DefaultUserDeprovisionPropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserDeprovisionPropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n+\n     @Autowired\n     protected UserDataBinder binder;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-        \n+    public void process(Exchange exchange) {\n+\n         Long userId = exchange.getIn().getBody(Long.class);\n         List<String> resources = exchange.getProperty(\"resources\", List.class);\n-        \n-        final SyncopeUser user = binder.getUserFromId(userId);        \n-        \n+\n+        final SyncopeUser user = binder.getUserFromId(userId);\n+\n         final Set<String> noPropResourceName = user.getResourceNames();\n         noPropResourceName.removeAll(resources);\n-        \n+\n         final List<PropagationTask> tasks =\n                 propagationManager.getUserDeleteTaskIds(userId, new HashSet<String>(resources), noPropResourceName);\n         final PropagationReporter propagationReporter =\n@@ -69,8 +71,8 @@ public void process(Exchange exchange){\n             LOG.error(\"Error propagation primary resource\", e);\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n-        \n+\n         exchange.getOut().setBody(propagationReporter.getStatuses());\n     }\n-    \n+\n }"},{"sha":"cc167d7b57994561a08c71e36697947f038d476d","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserStatusPropagation.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserStatusPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserStatusPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserStatusPropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.AbstractMap;\n@@ -42,22 +41,24 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultUserStatusPropagation implements Processor{\n-    \n+public class DefaultUserStatusPropagation implements Processor {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserStatusPropagation.class);\n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-        \n+    public void process(Exchange exchange) {\n+\n         WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n-        \n+\n         SyncopeUser user = exchange.getProperty(\"user\", SyncopeUser.class);\n         StatusMod statusMod = exchange.getProperty(\"statusMod\", StatusMod.class);\n-        \n+\n         Set<String> resourcesToBeExcluded = new HashSet<String>(user.getResourceNames());\n         resourcesToBeExcluded.removeAll(statusMod.getResourceNames());\n \n@@ -71,8 +72,9 @@ public void process(Exchange exchange){\n             LOG.error(\"Error propagation primary resource\", e);\n             propReporter.onPrimaryResourceFailure(tasks);\n         }\n-        \n-        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult(), propReporter.getStatuses());\n-        exchange.getOut().setBody(result); \n-    }    \n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult(), propReporter.getStatuses());\n+        exchange.getOut().setBody(result);\n+    }\n }"},{"sha":"a931a5bf09b345c1ec2b59eedbea3168caddfa4b","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserUpdateInSyncPropagation.java","status":"modified","additions":26,"deletions":22,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdateInSyncPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdateInSyncPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdateInSyncPropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.AbstractMap;\n@@ -42,39 +41,44 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultUserUpdateInSyncPropagation implements Processor{\n+public class DefaultUserUpdateInSyncPropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserUpdateInSyncPropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n+\n     @Autowired\n     protected UserDataBinder binder;\n+\n     @Autowired\n     protected UserDAO userDAO;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-                 \n-            WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();            \n+    public void process(Exchange exchange) {\n+\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();\n+\n+        Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);\n+\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n+\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated, updated.getResult().getKey().\n+                getPassword() != null, excludedResource);\n \n-            Set<String> excludedResource = exchange.getProperty(\"excludedResources\", Set.class);            \n-                              \n-            PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-                    getBean(PropagationReporter.class);\n+        try {\n+            taskExecutor.execute(tasks, propagationReporter);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propagationReporter.onPrimaryResourceFailure(tasks);\n+        }\n \n-            List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated,updated.getResult().getKey().getPassword() != null,excludedResource);\n-                \n-            try {\n-                    taskExecutor.execute(tasks, propagationReporter);\n-            } catch (PropagationException e) {\n-                    LOG.error(\"Error propagation primary resource\", e);\n-                    propagationReporter.onPrimaryResourceFailure(tasks);\n-            }\n-            \n-            Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n-            exchange.getOut().setBody(result);            \n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n+        exchange.getOut().setBody(result);\n     }\n }"},{"sha":"a94bea5a7fbd9bcce261a29aba1c5cc00292a407","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserUpdatePropagation.java","status":"modified","additions":59,"deletions":57,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdatePropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdatePropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserUpdatePropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.AbstractMap;\n@@ -45,78 +44,81 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultUserUpdatePropagation implements Processor{\n+public class DefaultUserUpdatePropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserUpdatePropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n+\n     @Autowired\n     protected UserDataBinder binder;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-                 \n-            WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();            \n-            UserMod actual = exchange.getProperty(\"actual\", UserMod.class);\n-            boolean removeMemberships = exchange.getProperty(\"removeMemberships\", boolean.class);\n-            \n-            // SYNCOPE-501: check if there are memberships to be removed with virtual attributes assigned\n-            /*for (Long membershipId : actual.getMembershipsToRemove()) {\n-                if (!binder.fillMembershipVirtual(\n-                        null,\n-                        null,\n-                        membershipId,\n-                        Collections.<String>emptySet(),\n-                        Collections.<AttributeMod>emptySet(),\n-                        true).isEmpty()) {\n+    public void process(Exchange exchange) {\n \n-                    removeMemberships = true;\n-                }\n-            }*/\n-            \n-            List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated);\n-            if (tasks.isEmpty()) {\n-                // SYNCOPE-459: take care of user virtual attributes ...\n-                final PropagationByResource propByResVirAttr = binder.fillVirtual(\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();\n+        UserMod actual = exchange.getProperty(\"actual\", UserMod.class);\n+        boolean removeMemberships = exchange.getProperty(\"removeMemberships\", boolean.class);\n+\n+        // SYNCOPE-501: check if there are memberships to be removed with virtual attributes assigned\n+            /* for (Long membershipId :\n+         * actual.getMembershipsToRemove()) {\n+         * if (!binder.fillMembershipVirtual(\n+         * null,\n+         * null,\n+         * membershipId,\n+         * Collections.<String>emptySet(),\n+         * Collections.<AttributeMod>emptySet(),\n+         * true).isEmpty()) {\n+         *\n+         * removeMemberships = true;\n+         * }\n+         * } */\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated);\n+        if (tasks.isEmpty()) {\n+            // SYNCOPE-459: take care of user virtual attributes ...\n+            final PropagationByResource propByResVirAttr = binder.fillVirtual(\n+                    updated.getResult().getKey().getId(),\n+                    actual.getVirAttrsToRemove(),\n+                    actual.getVirAttrsToUpdate());\n+            // SYNCOPE-501: update only virtual attributes (if any of them changed), password propagation is\n+            // not required, take care also of membership virtual attributes\n+            boolean addOrUpdateMemberships = false;\n+            for (MembershipMod membershipMod : actual.getMembershipsToAdd()) {\n+                if (!binder.fillMembershipVirtual(\n                         updated.getResult().getKey().getId(),\n-                        actual.getVirAttrsToRemove(),\n-                        actual.getVirAttrsToUpdate());\n-                // SYNCOPE-501: update only virtual attributes (if any of them changed), password propagation is\n-                // not required, take care also of membership virtual attributes\n-                boolean addOrUpdateMemberships = false;\n-                for (MembershipMod membershipMod : actual.getMembershipsToAdd()) {\n-                    if (!binder.fillMembershipVirtual(\n-                            updated.getResult().getKey().getId(),\n-                            membershipMod.getRole(),\n-                            null,\n-                            membershipMod.getVirAttrsToRemove(),\n-                            membershipMod.getVirAttrsToUpdate(),\n-                            false).isEmpty()) {\n+                        membershipMod.getRole(),\n+                        null,\n+                        membershipMod.getVirAttrsToRemove(),\n+                        membershipMod.getVirAttrsToUpdate(),\n+                        false).isEmpty()) {\n \n-                        addOrUpdateMemberships = true;\n-                    }\n+                    addOrUpdateMemberships = true;\n                 }\n-                tasks.addAll(!propByResVirAttr.isEmpty() || addOrUpdateMemberships || removeMemberships\n-                        ? propagationManager.getUserUpdateTaskIds(updated, false, null)\n-                        : Collections.<PropagationTask>emptyList());\n             }\n+            tasks.addAll(!propByResVirAttr.isEmpty() || addOrUpdateMemberships || removeMemberships\n+                    ? propagationManager.getUserUpdateTaskIds(updated, false, null)\n+                    : Collections.<PropagationTask>emptyList());\n+        }\n \n-            PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-                    getBean(PropagationReporter.class);\n+        PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n+                getBean(PropagationReporter.class);\n \n-            if (!tasks.isEmpty()) {\n-                try {\n-                    taskExecutor.execute(tasks, propagationReporter);\n-                } catch (PropagationException e) {\n-                    LOG.error(\"Error propagation primary resource\", e);\n-                    propagationReporter.onPrimaryResourceFailure(tasks);\n-                }\n+        if (!tasks.isEmpty()) {\n+            try {\n+                taskExecutor.execute(tasks, propagationReporter);\n+            } catch (PropagationException e) {\n+                LOG.error(\"Error propagation primary resource\", e);\n+                propagationReporter.onPrimaryResourceFailure(tasks);\n             }\n-            \n-            Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n-            exchange.getOut().setBody(result);            \n+        }\n+\n+        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n+                updated.getResult().getKey().getId(), propagationReporter.getStatuses());\n+        exchange.getOut().setBody(result);\n     }\n }"},{"sha":"88cd160ce4b961db68ca7558c4c6c91cb05f67a3","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/DefaultUserWFSuspendPropagation.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserWFSuspendPropagation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserWFSuspendPropagation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FDefaultUserWFSuspendPropagation.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.AbstractMap.SimpleEntry;\n@@ -35,19 +34,20 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class DefaultUserWFSuspendPropagation implements Processor{\n+public class DefaultUserWFSuspendPropagation implements Processor {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DefaultUserWFSuspendPropagation.class);\n-    \n+\n     @Autowired\n     protected PropagationManager propagationManager;\n+\n     @Autowired\n     protected PropagationTaskExecutor taskExecutor;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-                 \n-        WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();            \n+    public void process(Exchange exchange) {\n+\n+        WorkflowResult<Long> updated = (WorkflowResult) exchange.getIn().getBody();\n         Boolean suspend = exchange.getProperty(\"suspend\", Boolean.class);\n \n         if (suspend) {\n@@ -62,5 +62,5 @@ public void process(Exchange exchange){\n             taskExecutor.execute(tasks);\n         }\n     }\n-    \n+\n }"},{"sha":"7cb7dfaa6b3af328a56aae0a8fadf93791415f11","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/processors/UserStatusOnSync.java","status":"modified","additions":27,"deletions":27,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FUserStatusOnSync.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FUserStatusOnSync.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessors%2FUserStatusOnSync.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.provisioning.camel.processors;\n \n import java.util.Map;\n@@ -33,42 +32,43 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class UserStatusOnSync implements Processor{\n-    \n+public class UserStatusOnSync implements Processor {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(UserStatusOnSync.class);\n-    \n+\n     @Autowired\n     protected UserDAO userDAO;\n+\n     @Autowired\n     protected UserWorkflowAdapter uwfAdapter;\n-    \n+\n     @Override\n-    public void process(Exchange exchange){\n-        \n-        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();                    \n-          \n+    public void process(Exchange exchange) {\n+\n+        WorkflowResult<Map.Entry<UserMod, Boolean>> updated = (WorkflowResult) exchange.getIn().getBody();\n+\n         Boolean enabled = exchange.getProperty(\"enabled\", Boolean.class);\n         Long id = exchange.getProperty(\"id\", Long.class);\n-                \n+\n         if (enabled != null) {\n-             SyncopeUser user = userDAO.find(id);\n+            SyncopeUser user = userDAO.find(id);\n \n-             WorkflowResult<Long> enableUpdate = null;\n-             if (user.isSuspended() == null) {\n-                 enableUpdate = uwfAdapter.activate(id, null);\n-             } else if (enabled && user.isSuspended()) {\n-                 enableUpdate = uwfAdapter.reactivate(id);\n-             } else if (!enabled && !user.isSuspended()) {\n-                 enableUpdate = uwfAdapter.suspend(id);\n-             }\n+            WorkflowResult<Long> enableUpdate = null;\n+            if (user.isSuspended() == null) {\n+                enableUpdate = uwfAdapter.activate(id, null);\n+            } else if (enabled && user.isSuspended()) {\n+                enableUpdate = uwfAdapter.reactivate(id);\n+            } else if (!enabled && !user.isSuspended()) {\n+                enableUpdate = uwfAdapter.suspend(id);\n+            }\n \n-             if (enableUpdate != null) {\n-                 if (enableUpdate.getPropByRes() != null) {\n-                     updated.getPropByRes().merge(enableUpdate.getPropByRes());\n-                     updated.getPropByRes().purge();\n-                 }\n-                 updated.getPerformedTasks().addAll(enableUpdate.getPerformedTasks());\n-             }\n-       }\n+            if (enableUpdate != null) {\n+                if (enableUpdate.getPropByRes() != null) {\n+                    updated.getPropByRes().merge(enableUpdate.getPropByRes());\n+                    updated.getPropByRes().purge();\n+                }\n+                updated.getPerformedTasks().addAll(enableUpdate.getPerformedTasks());\n+            }\n+        }\n     }\n }"},{"sha":"e2121f2e9bb378f9bf268f5bccc2cf579f1d7e23","filename":"core/src/main/java/org/apache/syncope/core/quartz/package-info.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2Fpackage-info.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -17,4 +17,3 @@\n  * under the License.\n  */\n package org.apache.syncope.core.quartz;\n-"},{"sha":"e22fa92276e6be435fd075fb1ae7b6bd4243fd0a","filename":"core/src/main/java/org/apache/syncope/core/report/ReportletConfClass.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -25,7 +25,7 @@\n \n import org.apache.syncope.common.report.ReportletConf;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n public @interface ReportletConfClass {\n "},{"sha":"d6e5e4cd3421f4e86e8ffd42bf9f3effa8b64352","filename":"core/src/main/java/org/apache/syncope/core/report/cocoon/TextSerializer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -98,4 +98,4 @@ public static TextSerializer createPlainSerializer() {\n         serializer.setMethod(TXT);\n         return serializer;\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"b02bef8770ddce950900b1e475bf1760b53991fc","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/LoggerController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -217,7 +217,7 @@ public List<EventCategoryTO> listAuditEvents() {\n             final String packageSearchPath =\n                     ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX\n                     + ClassUtils.convertClassNameToResourcePath(\n-                    SystemPropertyUtils.resolvePlaceholders(this.getClass().getPackage().getName()))\n+                            SystemPropertyUtils.resolvePlaceholders(this.getClass().getPackage().getName()))\n                     + \"/\" + \"**/*.class\";\n \n             final Resource[] resources = resourcePatternResolver.getResources(packageSearchPath);\n@@ -239,7 +239,7 @@ public List<EventCategoryTO> listAuditEvents() {\n                     }\n                 }\n             }\n-            \n+\n             //SYNCOPE-608\n             final EventCategoryTO authenticationControllerEvents = new EventCategoryTO();\n             authenticationControllerEvents.setCategory(\"AuthenticationController\");"},{"sha":"3a0f9d6620e3a2cabaed28fc86273a51f833beb6","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -95,7 +95,7 @@ public class RoleController extends AbstractSubjectController<RoleTO, RoleMod> {\n \n     @Resource(name = \"anonymousUser\")\n     private String anonymousUser;\n-    \n+\n     @Resource(name = \"roleProvisioningManager\")\n     protected RoleProvisioningManager provisioningManager;\n \n@@ -259,7 +259,7 @@ public RoleTO update(final RoleMod roleMod) {\n         LOG.debug(\"Transformed: {}\", actual);\n \n         Map.Entry<Long, List<PropagationStatus>> updated = provisioningManager.update(roleMod);\n-        \n+\n         final RoleTO updatedTO = binder.getRoleTO(updated.getKey());\n         updatedTO.getPropagationStatusTOs().addAll(updated.getValue());\n         return updatedTO;\n@@ -281,7 +281,7 @@ public RoleTO delete(final Long roleId) {\n         }\n \n         List<PropagationStatus> statuses = provisioningManager.delete(roleId);\n-        \n+\n         RoleTO roleTO = new RoleTO();\n         roleTO.setId(roleId);\n \n@@ -318,7 +318,7 @@ public RoleTO unlink(final Long roleId, final Collection<String> resources) {\n         roleMod.setId(roleId);\n         roleMod.getResourcesToRemove().addAll(resources);\n         final Long updatedResult = provisioningManager.unlink(roleMod);\n- \n+\n         return binder.getRoleTO(updatedResult);\n     }\n "},{"sha":"f905f2ce77ec39714faf32db3d620852a48e9ac8","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RouteController.java","status":"modified","additions":23,"deletions":23,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.rest.controller;\n \n import java.lang.reflect.Method;\n@@ -36,57 +35,58 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-public class RouteController extends AbstractTransactionalController<RouteTO>{\n-    \n+public class RouteController extends AbstractTransactionalController<RouteTO> {\n+\n     private static final org.slf4j.Logger LOG = LoggerFactory.getLogger(RouteDataBinder.class);\n-    \n+\n     @Autowired\n     private RouteDAO routeDao;\n-    \n+\n     @Autowired\n     private RouteDataBinder binder;\n-    \n+\n     @Autowired\n     private SyncopeCamelContext context;\n-    \n-    \n+\n     @PreAuthorize(\"hasRole('ROUTE_LIST')\")\n     @Transactional(readOnly = true)\n-    public List<RouteTO> listRoutes(){\n+    public List<RouteTO> listRoutes() {\n         List<RouteTO> routes = new ArrayList<RouteTO>();\n         Iterator it = routeDao.findAll().iterator();\n-        while(it.hasNext()){\n+        while (it.hasNext()) {\n             routes.add(binder.getRouteTO((CamelRoute) it.next()));\n         }\n         return routes;\n     }\n-    \n+\n     @PreAuthorize(\"hasRole('ROUTE_READ')\")\n     @Transactional(readOnly = true)\n-    public RouteTO readRoute(Long id){\n+    public RouteTO readRoute(Long id) {\n         CamelRoute route = routeDao.find(id);\n-        if (route==null) \n-            throw new NotFoundException(\"Route with id=\"+id);\n-        \n+        if (route == null) {\n+            throw new NotFoundException(\"Route with id=\" + id);\n+        }\n+\n         return binder.getRouteTO(route);\n     }\n-    \n+\n     @PreAuthorize(\"hasRole('ROUTE_UPDATE')\")\n-    public void updateRoute(RouteTO routeTO){\n+    public void updateRoute(RouteTO routeTO) {\n \n         CamelRoute route = routeDao.find(routeTO.getId());\n-        if (route==null) \n-            throw new NotFoundException(\"Route with id=\"+route.getId());\n+        if (route == null) {\n+            throw new NotFoundException(\"Route with id=\" + route.getId());\n+        }\n         route.setRouteContent(routeTO.getRouteContent());\n-        routeDao.save(route);       \n+        routeDao.save(route);\n         LOG.info(\"UPDATING ROUTE WITH ID {} \", routeTO.getId());\n         LOG.info(\"NEW ROUTE CONTENT {} \", routeTO.getRouteContent());\n         context.reloadContext(routeDao, routeTO.getId());\n-    }   \n-    \n+    }\n+\n     @Override\n     protected RouteTO resolveReference(Method method, Object... args) throws UnresolvedReferenceException {\n         throw new UnresolvedReferenceException();\n     }\n-    \n+\n }"},{"sha":"0607a5fe9fa16e55c48e257ff2e4c21496573316","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":22,"deletions":23,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -96,7 +96,7 @@ public class UserController extends AbstractSubjectController<UserTO, UserMod> {\n \n     @Autowired\n     protected AttributableTransformer attrTransformer;\n-    \n+\n     @Resource(name = \"userProvisioningManager\")\n     protected UserProvisioningManager provisioningManager;\n \n@@ -212,8 +212,7 @@ protected UserTO doCreate(final UserTO userTO, final boolean storePassword) {\n         UserTO actual = attrTransformer.transform(userTO);\n         LOG.debug(\"Transformed: {}\", actual);\n \n-        Map.Entry<Long, List<PropagationStatus>>\n-                created = provisioningManager.create(actual,storePassword);\n+        Map.Entry<Long, List<PropagationStatus>> created = provisioningManager.create(actual, storePassword);\n \n         final UserTO savedTO = binder.getUserTO(created.getKey());\n         savedTO.getPropagationStatusTOs().addAll(created.getValue());\n@@ -238,7 +237,7 @@ public UserTO update(final UserMod userMod) {\n         // AttributableMod transformation (if configured)\n         UserMod actual = attrTransformer.transform(userMod);\n         LOG.debug(\"Transformed: {}\", actual);\n-        \n+\n         //CAMEL\n         // SYNCOPE-501: check if there are memberships to be removed with virtual attributes assigned\n         boolean removeMemberships = false;\n@@ -254,15 +253,16 @@ public UserTO update(final UserMod userMod) {\n                 removeMemberships = true;\n             }\n         }\n-        \n-        Map.Entry<Long, List<PropagationStatus>> updated = provisioningManager.update(actual,removeMemberships);\n+\n+        Map.Entry<Long, List<PropagationStatus>> updated = provisioningManager.update(actual, removeMemberships);\n \n         final UserTO updatedTO = binder.getUserTO(updated.getKey());\n         updatedTO.getPropagationStatusTOs().addAll(updated.getValue());\n         return updatedTO;\n     }\n \n-     protected Map.Entry<Long, List<PropagationStatus>> setStatusOnWfAdapter(final SyncopeUser user, final StatusMod statusMod) {\n+    protected Map.Entry<Long, List<PropagationStatus>> setStatusOnWfAdapter(final SyncopeUser user,\n+            final StatusMod statusMod) {\n         Map.Entry<Long, List<PropagationStatus>> updated;\n \n         switch (statusMod.getType()) {\n@@ -289,8 +289,7 @@ protected Map.Entry<Long, List<PropagationStatus>> setStatusOnWfAdapter(final Sy\n     public UserTO status(final StatusMod statusMod) {\n         SyncopeUser user = binder.getUserFromId(statusMod.getId());\n \n-        Map.Entry<Long, List<PropagationStatus>>\n-            updated = setStatusOnWfAdapter(user, statusMod);\n+        Map.Entry<Long, List<PropagationStatus>> updated = setStatusOnWfAdapter(user, statusMod);\n         final UserTO savedTO = binder.getUserTO(updated.getKey());\n         savedTO.getPropagationStatusTOs().addAll(updated.getValue());\n         return savedTO;\n@@ -477,8 +476,8 @@ public UserTO assign(\n     @Transactional(rollbackFor = { Throwable.class })\n     @Override\n     public UserTO deprovision(final Long userId, final Collection<String> resources) {\n-        final SyncopeUser user = binder.getUserFromId(userId);        \n-        \n+        final SyncopeUser user = binder.getUserFromId(userId);\n+\n         List<PropagationStatus> statuses = provisioningManager.deprovision(userId, resources);\n \n         final UserTO updatedUserTO = binder.getUserTO(user);\n@@ -535,18 +534,18 @@ protected UserTO resolveReference(final Method method, final Object... args) thr\n \n         throw new UnresolvedReferenceException();\n     }\n-    \n-    public PrintStream getDefinition() throws FileNotFoundException{\n-        /*String result = \"\";\n-        if(provisioningManager instanceof CamelUserProvisioningManager){\n-            List l = ((CamelUserProvisioningManager)provisioningManager).getRoutes();\n-            Iterator<CamelRoute> it = l.iterator();\n-            \n-            while(it.hasNext()){\n-                result += it.next().getRouteContent();\n-            }                        \n-        }\n-        return new PrintStream(result);*/\n+\n+    public PrintStream getDefinition() throws FileNotFoundException {\n+        /* String result = \"\";\n+         * if(provisioningManager instanceof CamelUserProvisioningManager){\n+         * List l = ((CamelUserProvisioningManager)provisioningManager).getRoutes();\n+         * Iterator<CamelRoute> it = l.iterator();\n+         *\n+         * while(it.hasNext()){\n+         * result += it.next().getRouteContent();\n+         * }\n+         * }\n+         * return new PrintStream(result); */\n         return null;\n     }\n }"},{"sha":"2d5a43391c2ea58c036f0523a1a78ab3f2238d87","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ReportDataBinder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -52,9 +52,9 @@ public class ReportDataBinder {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(ReportDataBinder.class);\n \n-    private static final String[] IGNORE_REPORT_PROPERTIES = {\"id\", \"reportlets\", \"executions\"};\n+    private static final String[] IGNORE_REPORT_PROPERTIES = { \"id\", \"reportlets\", \"executions\" };\n \n-    private static final String[] IGNORE_REPORT_EXECUTION_PROPERTIES = {\"id\", \"report\", \"execResult\"};\n+    private static final String[] IGNORE_REPORT_EXECUTION_PROPERTIES = { \"id\", \"report\", \"execResult\" };\n \n     @Autowired\n     private ReportExecDAO reportExecDAO;\n@@ -65,7 +65,7 @@ public class ReportDataBinder {\n     @Autowired\n     private ImplementationClassNamesLoader classNamesLoader;\n \n-    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public Set<Class<Reportlet>> getAllReportletClasses() {\n         Set<Class<Reportlet>> reportletClasses = new HashSet<Class<Reportlet>>();\n "},{"sha":"824bd5214043c8cca2120252a66c59849868fdb6","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RouteDataBinder.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRouteDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRouteDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRouteDataBinder.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,10 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.rest.data;\n \n-\n import org.apache.syncope.common.to.RouteTO;\n import org.apache.syncope.common.util.BeanUtils;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n@@ -28,11 +26,11 @@\n \n @Component\n public class RouteDataBinder {\n-  \n+\n     private static final org.slf4j.Logger LOG = LoggerFactory.getLogger(RouteDataBinder.class);\n-    \n-    public RouteTO getRouteTO(CamelRoute route){        \n-              \n+\n+    public RouteTO getRouteTO(CamelRoute route) {\n+\n         RouteTO routeTO = new RouteTO();\n         BeanUtils.copyProperties(route, routeTO);\n         return routeTO;"},{"sha":"e625533805f59d3fda99f7425b83e0a77e8fb15b","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/QueryResourceInfoComparator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FQueryResourceInfoComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FQueryResourceInfoComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FQueryResourceInfoComparator.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -55,8 +55,8 @@ public int compare(final OperationResourceInfo oper1, final OperationResourceInf\n         return op1Counter == op2Counter\n                 ? 0\n                 : op1Counter < op2Counter\n-                ? 1\n-                : -1;\n+                        ? 1\n+                        : -1;\n     }\n \n     /**"},{"sha":"f3a9edf6e38ac4d034d2483baac8ca1c92712180","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/RestServiceExceptionMapper.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -202,8 +202,8 @@ private ResponseBuilder processInvalidEntityExceptions(final Exception ex) {\n         if (iee != null) {\n             ClientExceptionType exType =\n                     iee.getEntityClassSimpleName().endsWith(\"Policy\")\n-                    ? ClientExceptionType.InvalidPolicy\n-                    : ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\n+                            ? ClientExceptionType.InvalidPolicy\n+                            : ClientExceptionType.valueOf(\"Invalid\" + iee.getEntityClassSimpleName());\n \n             ResponseBuilder builder = Response.status(Response.Status.BAD_REQUEST);\n             builder.header(RESTHeaders.ERROR_CODE, exType.getHeaderValue());"},{"sha":"b0a6c8ed063ea8a17cdd77514e34fd8b581521b6","filename":"core/src/main/java/org/apache/syncope/core/security/AsymmetricCipher.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FAsymmetricCipher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FAsymmetricCipher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FAsymmetricCipher.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -35,6 +35,7 @@\n public class AsymmetricCipher {\n \n     final private static String xform = \"RSA/NONE/PKCS1Padding\";\n+\n     final private static String algorithm = \"RSA\";\n \n     public static byte[] encrypt(byte[] inpBytes, PublicKey key) throws Exception {"},{"sha":"3c1b6fa489b3b2596800bcf66e06fe7ee5b06b93","filename":"core/src/main/java/org/apache/syncope/core/services/ConnectorServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -70,7 +70,7 @@ public List<SchemaTO> getSchemaNames(final Long connInstanceId, final ConnInstan\n             final boolean includeSpecial) {\n \n         connInstanceTO.setId(connInstanceId);\n-        \n+\n         List<String> schemaNames = controller.getSchemaNames(connInstanceTO, includeSpecial);\n         List<SchemaTO> result = new ArrayList<SchemaTO>(schemaNames.size());\n         for (String name : schemaNames) {"},{"sha":"020414d44dc9b1e2b87c3e1a0b11a5203722ab76","filename":"core/src/main/java/org/apache/syncope/core/services/PolicyServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -96,7 +96,7 @@ public <T extends AbstractPolicyTO> T readGlobal(final PolicyType type) {\n     @Override\n     public <T extends AbstractPolicyTO> void update(final Long policyId, final T policyTO) {\n         policyTO.setId(policyId);\n-        \n+\n         switch (policyTO.getType()) {\n             case ACCOUNT:\n             case GLOBAL_ACCOUNT:"},{"sha":"ecc323e84b66f728bc05589c80373bb9e3d1b74a","filename":"core/src/main/java/org/apache/syncope/core/services/RouteServiceImpl.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.services;\n \n import java.util.List;\n@@ -27,26 +26,26 @@\n import org.springframework.stereotype.Service;\n \n @Service\n-public class RouteServiceImpl extends AbstractServiceImpl implements RouteService{\n+public class RouteServiceImpl extends AbstractServiceImpl implements RouteService {\n \n     @Autowired\n     private RouteController controller;\n-    \n+\n     @Override\n     public List<RouteTO> getRoutes() {\n-        \n-        return  controller.listRoutes();\n+\n+        return controller.listRoutes();\n     }\n-    \n+\n     @Override\n-    public RouteTO getRoute(Long id){\n-        \n+    public RouteTO getRoute(Long id) {\n+\n         return controller.readRoute(id);\n     }\n \n     @Override\n     public void importRoute(Long id, RouteTO route) {\n         controller.updateRoute(route);\n     }\n-    \n-}\n\\ No newline at end of file\n+\n+}"},{"sha":"7ab3691071524ce65336d89324a29805cb686cbe","filename":"core/src/main/java/org/apache/syncope/core/services/WorkflowServiceImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -61,8 +61,8 @@ public Response getOptions(final SubjectType kind) {\n     public Response exportDefinition(final SubjectType kind) {\n         final MediaType accept =\n                 messageContext.getHttpHeaders().getAcceptableMediaTypes().contains(MediaType.APPLICATION_JSON_TYPE)\n-                ? MediaType.APPLICATION_JSON_TYPE\n-                : MediaType.APPLICATION_XML_TYPE;\n+                        ? MediaType.APPLICATION_JSON_TYPE\n+                        : MediaType.APPLICATION_XML_TYPE;\n \n         StreamingOutput sout = new StreamingOutput() {\n \n@@ -104,8 +104,8 @@ public void write(final OutputStream os) throws IOException {\n     public void importDefinition(final SubjectType kind, final String definition) {\n         final MediaType contentType =\n                 messageContext.getHttpHeaders().getMediaType().equals(MediaType.APPLICATION_JSON_TYPE)\n-                ? MediaType.APPLICATION_JSON_TYPE\n-                : MediaType.APPLICATION_XML_TYPE;\n+                        ? MediaType.APPLICATION_JSON_TYPE\n+                        : MediaType.APPLICATION_XML_TYPE;\n \n         if (kind == SubjectType.USER) {\n             controller.importUserDefinition(contentType, definition);"},{"sha":"0a809bec82159023292dc2222b44af55d990b7f9","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncActions.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -162,7 +162,8 @@ <T extends AbstractAttributableTO> SyncDelta beforeDelete(\n      * Action to be executed after each local user / role synchronization.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information (may be modified by 'beforeProvision/beforeUpdate/beforeDelete')\n+     * @param delta retrieved synchronization information (may be modified by\n+     * 'beforeProvision/beforeUpdate/beforeDelete')\n      * @param subject synchronized local user / role\n      * @param result global synchronization results at the current synchronization step\n      * @throws JobExecutionException in case of generic failure"},{"sha":"7f1986a9ef98c227d87c2672e64b93c408fd608c","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncResult.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -28,9 +28,12 @@\n import org.apache.syncope.common.types.TraceLevel;\n \n public class SyncResult {\n+\n     public enum Status {\n+\n         SUCCESS,\n         FAILURE\n+\n     }\n \n     private String message;\n@@ -115,8 +118,8 @@ public String getReportString(final TraceLevel level) {\n             // All\n             return String.format(\"%s %s (id/name): %d/%s %s\", operation, status, id, name,\n                     StringUtils.isBlank(message)\n-                    ? \"\"\n-                    : \"with message: \" + message);\n+                            ? \"\"\n+                            : \"with message: \" + message);\n         }\n     }\n "},{"sha":"7036ab70fa905343f53fd425adfe8cbbd618f849","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -114,7 +114,6 @@ protected final void doHandle(final long subjectId)\n         String operation = null;\n \n         // Try to read remote object (user / group) BEFORE any actual operation\n-\n         final String accountId = MappingUtil.getAccountIdValue(\n                 subject, profile.getSyncTask().getResource(), getMapping().getAccountIdItem());\n "},{"sha":"26ff30b000226eaa6dd3a59a18b2b9d088cf1825","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -316,7 +316,7 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n             } catch (Exception e) {\n                 final String msg = String.\n                         format(\"Connector instance bean for resource %s and connInstance %s not found\",\n-                        syncTask.getResource(), syncTask.getResource().getConnector());\n+                                syncTask.getResource(), syncTask.getResource().getConnector());\n \n                 throw new JobExecutionException(msg, e);\n             }"},{"sha":"0c270042317a33e8af128e8a8158055fe8476ca6","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncopeResultHandler.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -43,7 +43,7 @@\n      * Logger.\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSyncopeResultHandler.class);\n-    \n+\n     /**\n      * User data binder.\n      */\n@@ -102,10 +102,10 @@\n      * Sync profile.\n      */\n     protected SyncProfile<T, A> profile;\n-    \n+\n     @Resource(name = \"userProvisioningManager\")\n     protected UserProvisioningManager userProvisioningManager;\n-    \n+\n     @Resource(name = \"roleProvisioningManager\")\n     protected RoleProvisioningManager roleProvisioningManager;\n "},{"sha":"2304fa48788fef4c195f31ef29a6af6db4bdb4be","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPPasswordSyncActions.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -66,23 +66,23 @@ public <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n \n         return delta;\n     }\n-    \n+\n     @Transactional(readOnly = true)\n     @Override\n     public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n             final SyncProfile<?, ?> profile,\n             final SyncDelta delta,\n             final T subject,\n             final K subjectMod) throws JobExecutionException {\n-        \n+\n         if (subjectMod instanceof UserMod) {\n-            String modPassword = ((UserMod)subjectMod).getPassword();\n+            String modPassword = ((UserMod) subjectMod).getPassword();\n             parseEncodedPassword(modPassword);\n         }\n-        \n+\n         return delta;\n     }\n-    \n+\n     private void parseEncodedPassword(String password) {\n         if (password != null && password.startsWith(\"{\")) {\n             int closingBracketIndex = password.indexOf('}');"},{"sha":"4e83e66283d0bb41a214ea46a51ccf294fa405af","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/RoleSyncResultHandler.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -86,8 +86,8 @@ protected AbstractSubjectTO create(\n \n         RoleTO roleTO = RoleTO.class.cast(subjectTO);\n \n-        Map.Entry<Long, List<PropagationStatus>> created = roleProvisioningManager.createInSync\n-                           (roleTO, roleOwnerMap, Collections.singleton(profile.getSyncTask().getResource().getName()));\n+        Map.Entry<Long, List<PropagationStatus>> created = roleProvisioningManager.createInSync(roleTO, roleOwnerMap,\n+                Collections.singleton(profile.getSyncTask().getResource().getName()));\n \n         roleTO = roleDataBinder.getRoleTO(created.getKey());\n \n@@ -127,7 +127,7 @@ protected AbstractSubjectTO update(\n         RoleMod roleMod = RoleMod.class.cast(subjectMod);\n \n         Map.Entry<Long, List<PropagationStatus>> updated = roleProvisioningManager.update(roleMod);\n-                \n+\n         //moved after role provisioning manager\n         String roleOwner = null;\n         for (AttributeMod attrMod : roleMod.getAttrsToUpdate()) {\n@@ -140,7 +140,7 @@ protected AbstractSubjectTO update(\n         }\n \n         final RoleTO after = roleDataBinder.getRoleTO(updated.getKey());\n-        \n+\n         result.setName(getName(after));\n \n         return after;\n@@ -170,6 +170,6 @@ protected void delete(final Long id) {\n             LOG.error(\"Could not propagate user \" + id, e);\n         }\n \n-        roleProvisioningManager.delete(id); \n+        roleProvisioningManager.delete(id);\n     }\n }"},{"sha":"680272635176240035b9eb0aabfd24b080a7c12c","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/UserSyncResultHandler.java","status":"modified","additions":47,"deletions":47,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -82,8 +82,8 @@ protected AbstractSubjectTO create(\n \n         Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getSyncTask());\n         //Delegate User Workflow Creation and its Propagation to provisioning manager\n-        Map.Entry<Long, List<PropagationStatus>>\n-            created = userProvisioningManager.create(userTO, true, true, enabled,Collections.singleton(profile.getSyncTask().getResource().getName()));                             \n+        Map.Entry<Long, List<PropagationStatus>> created = userProvisioningManager.create(userTO, true, true, enabled,\n+                Collections.singleton(profile.getSyncTask().getResource().getName()));\n \n         userTO = userDataBinder.getUserTO(created.getKey());\n \n@@ -121,51 +121,51 @@ protected AbstractSubjectTO update(\n \n         final UserMod userMod = UserMod.class.cast(subjectMod);\n \n-        /*WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n-        try {\n-            updated = uwfAdapter.update(userMod);\n-        } catch (Exception e) {\n-            LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", before.getId(), e);\n-\n-            result.setStatus(SyncResult.Status.FAILURE);\n-            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\"\n-                    + ExceptionUtils.getRootCauseMessage(e));\n-\n-            updated = new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n-                    new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, false),\n-                    new PropagationByResource(),\n-                    new HashSet<String>());\n-        }*/\n-\n+        /* WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n+         * try {\n+         * updated = uwfAdapter.update(userMod);\n+         * } catch (Exception e) {\n+         * LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", before.getId(), e);\n+         *\n+         * result.setStatus(SyncResult.Status.FAILURE);\n+         * result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\"\n+         * + ExceptionUtils.getRootCauseMessage(e));\n+         *\n+         * updated = new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+         * new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, false),\n+         * new PropagationByResource(),\n+         * new HashSet<String>());\n+         * } */\n         final Boolean enabled = syncUtilities.readEnabled(delta.getObject(), profile.getSyncTask());\n-        /*if (enabled != null) {\n-            SyncopeUser user = userDAO.find(before.getId());\n-\n-            WorkflowResult<Long> enableUpdate = null;\n-            if (user.isSuspended() == null) {\n-                enableUpdate = uwfAdapter.activate(before.getId(), null);\n-            } else if (enabled && user.isSuspended()) {\n-                enableUpdate = uwfAdapter.reactivate(before.getId());\n-            } else if (!enabled && !user.isSuspended()) {\n-                enableUpdate = uwfAdapter.suspend(before.getId());\n-            }\n-\n-            if (enableUpdate != null) {\n-                if (enableUpdate.getPropByRes() != null) {\n-                    updated.getPropByRes().merge(enableUpdate.getPropByRes());\n-                    updated.getPropByRes().purge();\n-                }\n-                updated.getPerformedTasks().addAll(enableUpdate.getPerformedTasks());\n-            }\n-        }\n-\n-        final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n-                updated, updated.getResult().getKey().getPassword() != null,\n-                Collections.singleton(profile.getSyncTask().getResource().getName()));\n-\n-        taskExecutor.execute(tasks);*/\n-                 \n-        Map.Entry<Long, List<PropagationStatus>> updated = userProvisioningManager.updateInSync(userMod, before.getId(), result,enabled, Collections.singleton(profile.getSyncTask().getResource().getName()));        \n+        /* if (enabled != null) {\n+         * SyncopeUser user = userDAO.find(before.getId());\n+         *\n+         * WorkflowResult<Long> enableUpdate = null;\n+         * if (user.isSuspended() == null) {\n+         * enableUpdate = uwfAdapter.activate(before.getId(), null);\n+         * } else if (enabled && user.isSuspended()) {\n+         * enableUpdate = uwfAdapter.reactivate(before.getId());\n+         * } else if (!enabled && !user.isSuspended()) {\n+         * enableUpdate = uwfAdapter.suspend(before.getId());\n+         * }\n+         *\n+         * if (enableUpdate != null) {\n+         * if (enableUpdate.getPropByRes() != null) {\n+         * updated.getPropByRes().merge(enableUpdate.getPropByRes());\n+         * updated.getPropByRes().purge();\n+         * }\n+         * updated.getPerformedTasks().addAll(enableUpdate.getPerformedTasks());\n+         * }\n+         * }\n+         *\n+         * final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+         * updated, updated.getResult().getKey().getPassword() != null,\n+         * Collections.singleton(profile.getSyncTask().getResource().getName()));\n+         *\n+         * taskExecutor.execute(tasks); */\n+\n+        Map.Entry<Long, List<PropagationStatus>> updated = userProvisioningManager.updateInSync(userMod, before.getId(),\n+                result, enabled, Collections.singleton(profile.getSyncTask().getResource().getName()));\n \n         return userDataBinder.getUserTO(updated.getKey());\n     }\n@@ -189,7 +189,7 @@ protected void deprovision(\n     protected void delete(final Long id) {\n         try {\n             userProvisioningManager.\n-                    delete(id,Collections.<String>singleton(profile.getSyncTask().getResource().getName()));\n+                    delete(id, Collections.<String>singleton(profile.getSyncTask().getResource().getName()));\n         } catch (Exception e) {\n             // A propagation failure doesn't imply a synchronization failure.\n             // The propagation exception status will be reported into the propagation task execution."},{"sha":"0c148b19d8a8ed80198f63beb70d6c416ed96043","filename":"core/src/main/java/org/apache/syncope/core/util/AttributeDeserializer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributeDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributeDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributeDeserializer.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -77,8 +77,8 @@ public Attribute deserialize(final JsonParser jp, final DeserializationContext c\n         return Uid.NAME.equals(name)\n                 ? new Uid(values.isEmpty() || values.get(0) == null ? null : values.get(0).toString())\n                 : Name.NAME.equals(name)\n-                ? new Name(values.isEmpty() || values.get(0) == null ? null : values.get(0).toString())\n-                : AttributeBuilder.build(name, values);\n+                        ? new Name(values.isEmpty() || values.get(0) == null ? null : values.get(0).toString())\n+                        : AttributeBuilder.build(name, values);\n     }\n \n }"},{"sha":"ccf2e86ca36dd7ad1336080510acb577bb7fa547","filename":"core/src/main/java/org/apache/syncope/core/util/ContentLoaderHandler.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentLoaderHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentLoaderHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FContentLoaderHandler.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -57,16 +57,16 @@ private Object[] getParameters(final String tableName, final Attributes attrs) {\n         Map<String, Integer> colTypes = jdbcTemplate.query(\"SELECT * FROM \" + tableName,\n                 new ResultSetExtractor<Map<String, Integer>>() {\n \n-            @Override\n-            public Map<String, Integer> extractData(final ResultSet rs) throws SQLException, DataAccessException {\n-                Map<String, Integer> colTypes = new HashMap<String, Integer>();\n-                for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {\n-                    colTypes.put(rs.getMetaData().getColumnName(i).toUpperCase(),\n-                            rs.getMetaData().getColumnType(i));\n-                }\n-                return colTypes;\n-            }\n-        });\n+                    @Override\n+                    public Map<String, Integer> extractData(final ResultSet rs) throws SQLException, DataAccessException {\n+                        Map<String, Integer> colTypes = new HashMap<String, Integer>();\n+                        for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {\n+                            colTypes.put(rs.getMetaData().getColumnName(i).toUpperCase(),\n+                                    rs.getMetaData().getColumnType(i));\n+                        }\n+                        return colTypes;\n+                    }\n+                });\n \n         Object[] parameters = new Object[attrs.getLength()];\n         for (int i = 0; i < attrs.getLength(); i++) {"},{"sha":"397d7b01f586b09ed76605ae32839df8b95168d6","filename":"core/src/main/java/org/apache/syncope/core/util/RouteManager.java","status":"modified","additions":11,"deletions":8,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FRouteManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FRouteManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FRouteManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -16,24 +16,27 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.core.util;\n \n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n \n-\n public class RouteManager {\n+\n     private static List<CamelRoute> routelist;\n-    \n-    public static void addElement(CamelRoute route){\n-        if(routelist == null) routelist= new ArrayList<CamelRoute>();\n+\n+    public static void addElement(CamelRoute route) {\n+        if (routelist == null) {\n+            routelist = new ArrayList<CamelRoute>();\n+        }\n         routelist.add(route);\n     }\n-    \n-    public static List<CamelRoute> getRoutes(){\n-        if(routelist == null) routelist= new ArrayList<CamelRoute>();\n+\n+    public static List<CamelRoute> getRoutes() {\n+        if (routelist == null) {\n+            routelist = new ArrayList<CamelRoute>();\n+        }\n         return routelist;\n     }\n }"},{"sha":"b11d0a5ce88b90c91984667c9a990dbc4f1e9f5a","filename":"core/src/main/java/org/apache/syncope/core/util/SecureRandomUtil.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -23,21 +23,21 @@\n import org.apache.commons.lang3.RandomStringUtils;\n \n public class SecureRandomUtil {\n-    \n+\n     private static final SecureRandom RANDOM = new SecureRandom();\n \n     public static String generateRandomPassword(final int tokenLength) {\n         return RandomStringUtils.random(tokenLength, 0, 0, true, false, null, RANDOM);\n     }\n-    \n+\n     public static String generateRandomLetter() {\n         return RandomStringUtils.random(1, 0, 0, true, false, null, RANDOM);\n     }\n-    \n+\n     public static String generateRandomNumber() {\n         return RandomStringUtils.random(1, 0, 0, false, true, null, RANDOM);\n     }\n-    \n+\n     public static String generateRandomSpecialCharacter(char[] characters) {\n         return RandomStringUtils.random(1, 0, 0, false, false, characters, RANDOM);\n     }"},{"sha":"30a0324ab53b1140d62d5eb7e0d5480116538418","filename":"core/src/main/java/org/apache/syncope/core/util/SyncTokenDeserializer.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -42,19 +42,19 @@ public SyncToken deserialize(final JsonParser jp, final DeserializationContext c\n             value = node.isNull()\n                     ? null\n                     : node.isBoolean()\n-                    ? node.asBoolean()\n-                    : node.isDouble()\n-                    ? node.asDouble()\n-                    : node.isLong()\n-                    ? node.asLong()\n-                    : node.isInt()\n-                    ? node.asInt()\n-                    : node.asText();\n-            \n+                            ? node.asBoolean()\n+                            : node.isDouble()\n+                                    ? node.asDouble()\n+                                    : node.isLong()\n+                                            ? node.asLong()\n+                                            : node.isInt()\n+                                                    ? node.asInt()\n+                                                    : node.asText();\n+\n             if (value instanceof String) {\n-                byte[] bytes = ((String)value).getBytes();\n+                byte[] bytes = ((String) value).getBytes();\n                 if (Base64.isBase64(bytes)) {\n-                   value = Base64.decode(bytes);\n+                    value = Base64.decode(bytes);\n                 }\n             }\n         }"},{"sha":"2f033f26241d5dbdd44b922c907e27884b7d238e","filename":"core/src/main/java/org/apache/syncope/core/util/jexl/JexlUtil.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2Fjexl%2FJexlUtil.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -134,8 +134,8 @@ public static JexlContext addFieldsToContext(final Object attributable, final Je\n                         context.set(fieldName, fieldValue == null\n                                 ? \"\"\n                                 : (type.equals(Date.class)\n-                                ? DataFormat.format((Date) fieldValue, false)\n-                                : fieldValue));\n+                                        ? DataFormat.format((Date) fieldValue, false)\n+                                        : fieldValue));\n \n                         LOG.debug(\"Add field {} with value {}\", fieldName, fieldValue);\n "},{"sha":"b45953629b95084916777bab28967081bfb34c06","filename":"core/src/main/java/org/apache/syncope/core/workflow/package-info.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fpackage-info.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -17,4 +17,3 @@\n  * under the License.\n  */\n package org.apache.syncope.core.workflow;\n-"},{"sha":"b222100ca1c2912b74a36e1a64bb23eff0c64c18","filename":"core/src/main/java/org/apache/syncope/core/workflow/role/AbstractRoleWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FAbstractRoleWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FAbstractRoleWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FAbstractRoleWorkflowAdapter.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -30,7 +30,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public abstract class AbstractRoleWorkflowAdapter implements RoleWorkflowAdapter {\n \n     @Autowired"},{"sha":"8fbc25cc6990d8b7b4fe7be2e0cf98393c060891","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/AbstractUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -117,7 +117,7 @@ public void requestPasswordReset(final Long userId) throws UnauthorizedRoleExcep\n         doRequestPasswordReset(dataBinder.getUserFromId(userId));\n     }\n \n-    protected abstract void doConfirmPasswordReset(SyncopeUser user, String token, String password) \n+    protected abstract void doConfirmPasswordReset(SyncopeUser user, String token, String password)\n             throws WorkflowException;\n \n     @Override"},{"sha":"21573019e04ebdb0ffd9c723d4fec8ede81534f4","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -230,7 +230,8 @@ public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form)\n     }\n \n     @Override\n-    public WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO, boolean storePassword) throws UnauthorizedRoleException, WorkflowException {\n+    public WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO, boolean storePassword) throws\n+            UnauthorizedRoleException, WorkflowException {\n         return create(userTO, false, true);\n     }\n }"},{"sha":"0d48227b559526ae530759c1c1ffe69a44ecaf30","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/UserWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -152,7 +152,7 @@ WorkflowResult<Map.Entry<UserMod, Boolean>> update(UserMod userMod)\n      * @throws UnauthorizedRoleException authorization exception\n      * @throws WorkflowException workflow exception\n      */\n-    void confirmPasswordReset(Long userId, String token, String password) \n+    void confirmPasswordReset(Long userId, String token, String password)\n             throws UnauthorizedRoleException, WorkflowException;\n \n     /**"},{"sha":"adeb9f80b785c95e13362d46b753cb85a96a3c7b","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -885,7 +885,8 @@ public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form)\n     }\n \n     @Override\n-    public WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO, boolean storePassword) throws UnauthorizedRoleException, WorkflowException {\n+    public WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO, boolean storePassword) throws\n+            UnauthorizedRoleException, WorkflowException {\n         return create(userTO, false, storePassword);\n     }\n }"},{"sha":"f6702589222f174211e36ae80f80f414a55bf650","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeGroupManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeGroupManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeGroupManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeGroupManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -106,7 +106,7 @@ public void insertGroup(final Group group) {\n     public void updateGroup(final Group updatedGroup) {\n         throw new UnsupportedOperationException();\n     }\n-    \n+\n     @Override\n     public boolean isNewGroup(final Group group) {\n         throw new UnsupportedOperationException();"},{"sha":"9285ed9f7bba2f9c6a69be575cff48d7c12cbe84","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeUserManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeUserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeUserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FSyncopeUserManager.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -121,7 +121,7 @@ public boolean isNewUser(final User user) {\n     public void updateUser(final User updatedUser) {\n         throw new UnsupportedOperationException();\n     }\n-    \n+\n     @Override\n     public Picture getUserPicture(final String string) {\n         throw new UnsupportedOperationException();"},{"sha":"8fe48641cbdb2d74b6bfc7fc0f6c42238b838c43","filename":"core/src/main/resources/persistenceContextEMFactory.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContextEMFactory.xml?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -37,8 +37,8 @@ under the License.\n     <property name=\"jpaPropertyMap\">\n       <map>\n         <!--<entry key=\"openjpa.Log\" value=\"SQL=TRACE\"/>\n-        <entry key=\"openjpa.ConnectionFactoryProperties\" \n-               value=\"PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=80\"/>-->\n+ <entry key=\"openjpa.ConnectionFactoryProperties\" \n+        value=\"PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=80\"/>-->\n                 \n         <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n         <entry key=\"openjpa.AutoDetach\" value=\"close, commit, nontx-read, rollback\"/>"},{"sha":"c123d514fff660a69ebf0554bbad1535e31942ea","filename":"core/src/main/resources/report/staticReportlet2fo.xsl","status":"modified","additions":49,"deletions":49,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -23,62 +23,62 @@ under the License.\n                 xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n                 version=\"1.0\">\n \n-    <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n \n-        <fo:block font-size=\"14pt\" font-weight=\"bold\" space-after=\"0.5cm\">Reportlet: \n-            <xsl:value-of select=\"@name\"/>\n-        </fo:block>\n+    <fo:block font-size=\"14pt\" font-weight=\"bold\" space-after=\"0.5cm\">Reportlet: \n+      <xsl:value-of select=\"@name\"/>\n+    </fo:block>\n \n-        <xsl:if test=\"string-length(string/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">String value: \n-                <xsl:value-of select=\"string/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">String value: \n+        <xsl:value-of select=\"string/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(long/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">Long value: \n-                <xsl:value-of select=\"long/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(long/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">Long value: \n+        <xsl:value-of select=\"long/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(double/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">Double value: \n-                <xsl:value-of select=\"double/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(double/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">Double value: \n+        <xsl:value-of select=\"double/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(date/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">Date value: \n-                <xsl:value-of select=\"date/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(date/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">Date value: \n+        <xsl:value-of select=\"date/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n-            <fo:block font-size=\"11pt\">Enum value: \n-                <xsl:value-of select=\"enum/text()\"/>\n-            </fo:block>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n+      <fo:block font-size=\"11pt\">Enum value: \n+        <xsl:value-of select=\"enum/text()\"/>\n+      </fo:block>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(list) &gt; 0\">\n-            <fo:block font-size=\"11pt\">List values:</fo:block>\n+    <xsl:if test=\"string-length(list) &gt; 0\">\n+      <fo:block font-size=\"11pt\">List values:</fo:block>\n             \n-            <fo:list-block provisional-label-separation=\"4mm\" provisional-distance-between-starts=\"2mm\">\n-                <xsl:for-each select=\"list/string\">\n-                    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n-                        <fo:list-item>\n-                            <fo:list-item-label end-indent=\"label-end()\">\n-                                <fo:block>&#x2022;</fo:block>\n-                            </fo:list-item-label>\n-                            <fo:list-item-body start-indent=\"body-start()\">\n-                                <fo:block>\n-                                    <xsl:value-of select=\"text()\"/>\n-                                </fo:block>\n-                            </fo:list-item-body>\n-                        </fo:list-item>\n-                    </xsl:if>\n-                </xsl:for-each>\n-            </fo:list-block>\n-        </xsl:if>\n+      <fo:list-block provisional-label-separation=\"4mm\" provisional-distance-between-starts=\"2mm\">\n+        <xsl:for-each select=\"list/string\">\n+          <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+            <fo:list-item>\n+              <fo:list-item-label end-indent=\"label-end()\">\n+                <fo:block>&#x2022;</fo:block>\n+              </fo:list-item-label>\n+              <fo:list-item-body start-indent=\"body-start()\">\n+                <fo:block>\n+                  <xsl:value-of select=\"text()\"/>\n+                </fo:block>\n+              </fo:list-item-body>\n+            </fo:list-item>\n+          </xsl:if>\n+        </xsl:for-each>\n+      </fo:list-block>\n+    </xsl:if>\n         \n-    </xsl:template>\n+  </xsl:template>\n </xsl:stylesheet>\n\\ No newline at end of file"},{"sha":"da0ba8590e0a0d569bd72423fbd7c95c5f3595a6","filename":"core/src/main/resources/report/staticReportlet2html.xsl","status":"modified","additions":42,"deletions":42,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -22,53 +22,53 @@ under the License.\n <xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n                 version=\"1.0\">\n \n-    <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n-        <h2>Reportlet: \n-            <xsl:value-of select=\"@name\"/>\n-        </h2>\n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n+    <h2>Reportlet: \n+      <xsl:value-of select=\"@name\"/>\n+    </h2>\n         \n-        <xsl:if test=\"string-length(string/text()) &gt; 0\">\n-            <p>String value:                 \n-                <xsl:value-of select=\"string/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+      <p>String value:                 \n+        <xsl:value-of select=\"string/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(long/text()) &gt; 0\">\n-            <p>Long value: \n-                <xsl:value-of select=\"long/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(long/text()) &gt; 0\">\n+      <p>Long value: \n+        <xsl:value-of select=\"long/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(double/text()) &gt; 0\">\n-            <p>Double value: \n-                <xsl:value-of select=\"double/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(double/text()) &gt; 0\">\n+      <p>Double value: \n+        <xsl:value-of select=\"double/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(date/text()) &gt; 0\">\n-            <p>Date value: \n-                <xsl:value-of select=\"date/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(date/text()) &gt; 0\">\n+      <p>Date value: \n+        <xsl:value-of select=\"date/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n-            <p>Enum value: \n-                <xsl:value-of select=\"enum/text()\"/>\n-            </p>\n-        </xsl:if>\n+    <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n+      <p>Enum value: \n+        <xsl:value-of select=\"enum/text()\"/>\n+      </p>\n+    </xsl:if>\n \n-        <xsl:if test=\"string-length(list) &gt; 0\">\n-            <p>List values:</p>\n+    <xsl:if test=\"string-length(list) &gt; 0\">\n+      <p>List values:</p>\n             \n-            <ul>\n-                <xsl:for-each select=\"list/string\">\n-                    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n-                        <li>\n-                            <xsl:value-of select=\"text()\"/>\n-                        </li>\n-                    </xsl:if>\n-                </xsl:for-each>\n-            </ul>\n-        </xsl:if>\n-    </xsl:template>\n+      <ul>\n+        <xsl:for-each select=\"list/string\">\n+          <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+            <li>\n+              <xsl:value-of select=\"text()\"/>\n+            </li>\n+          </xsl:if>\n+        </xsl:for-each>\n+      </ul>\n+    </xsl:if>\n+  </xsl:template>\n </xsl:stylesheet>\n\\ No newline at end of file"},{"sha":"751cb4c680dbcc65ab689c03fab317c600b12b0e","filename":"core/src/main/resources/report/userReportlet2html.xsl","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2html.xsl?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -157,9 +157,9 @@ under the License.\n         </xsl:otherwise>\n       </xsl:choose>\n       <xsl:if test=\"string-length(resources) &gt; 0\">\n-          <xsl:call-template name=\"resources\">\n-              <xsl:with-param name=\"node\" select=\"resources/resource\"/>\n-          </xsl:call-template>\n+        <xsl:call-template name=\"resources\">\n+          <xsl:with-param name=\"node\" select=\"resources/resource\"/>\n+        </xsl:call-template>\n       </xsl:if>\n       <hr/>\n     </xsl:for-each>"},{"sha":"44cdfa4d3393e78915ec280750c8757b70a57b97","filename":"core/src/main/resources/roleRoute.xml","status":"modified","additions":136,"deletions":136,"changes":272,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -24,151 +24,151 @@ under the License.\n                            http://camel.apache.org/schema/spring\n                            http://camel.apache.org/schema/spring/camel-spring.xsd\">\n  \n+  <!--\n+      The default routes define each task involved in user creation:\n+      main operations consist in user workflow creation and its propagation.         \n+  -->\n+  <routeContext id=\"defaultRoleRoutes\" xmlns=\"http://camel.apache.org/schema/spring\"> \n     <!--\n-        The default routes define each task involved in user creation:\n-        main operations consist in user workflow creation and its propagation.         \n+        CREATE ROLE\n     -->\n-    <routeContext id=\"defaultRoleRoutes\" xmlns=\"http://camel.apache.org/schema/spring\"> \n-<!--\n-            CREATE ROLE\n-        -->\n         \n-        <route id=\"createRole\">\n-          <from uri=\"direct:createRole\"/>\n-          <setProperty propertyName=\"subject\">\n-            <simple>${body}</simple>\n-          </setProperty>\n-          <doTry>\n-            <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n-            <process ref=\"defaultRoleCreatePropagation\" />\n-            <to uri=\"direct:createRolePort\"/>\n-            <doCatch>        \n-                <exception>java.lang.RuntimeException</exception>\n-                <handled>\n-                    <constant>false</constant>\n-                </handled>\n-                <to uri=\"direct:createRolePort\"/>\n-            </doCatch>\n-          </doTry>\n-        </route> \n+    <route id=\"createRole\">\n+      <from uri=\"direct:createRole\"/>\n+      <setProperty propertyName=\"subject\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n+        <process ref=\"defaultRoleCreatePropagation\" />\n+        <to uri=\"direct:createRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n                \n-        <!--\n-            CREATE ROLE SYNC\n-        -->\n-        <route id=\"createRoleSync\">\n-          <from uri=\"direct:createRoleSync\"/>\n-          <setProperty propertyName=\"subject\">\n-            <simple>${body}</simple>\n-          </setProperty>\n-          <doTry>\n-            <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n-            <process ref=\"defaultRoleCreateSyncPropagation\" />\n-            <to uri=\"direct:createRoleSyncPort\"/>\n-            <doCatch>        \n-                <exception>java.lang.RuntimeException</exception>\n-                <handled>\n-                    <constant>false</constant>\n-                </handled>\n-                <to uri=\"direct:createRoleSyncPort\"/>\n-            </doCatch>\n-          </doTry>\n-        </route> \n+    <!--\n+        CREATE ROLE SYNC\n+    -->\n+    <route id=\"createRoleSync\">\n+      <from uri=\"direct:createRoleSync\"/>\n+      <setProperty propertyName=\"subject\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n+        <process ref=\"defaultRoleCreateSyncPropagation\" />\n+        <to uri=\"direct:createRoleSyncPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createRoleSyncPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n         \n          \n-        <!--\n-            UPDATE ROLE\n-        -->\n-        <route id=\"updateRole\">\n-            <from uri=\"direct:updateRole\"/>\n-            <setProperty propertyName=\"subjectMod\">\n-                <simple>${body}</simple>\n-            </setProperty>\n-            <doTry>\n-              <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n-              <process ref=\"defaultRoleUpdatePropagation\" />\n-              <to uri=\"direct:updateRolePort\"/>\n-              <doCatch>        \n-                  <exception>java.lang.RuntimeException</exception>\n-                  <handled>\n-                      <constant>false</constant>\n-                  </handled>\n-                  <to uri=\"direct:updateRolePort\"/>\n-              </doCatch>\n-            </doTry>\n-        </route>\n+    <!--\n+        UPDATE ROLE\n+    -->\n+    <route id=\"updateRole\">\n+      <from uri=\"direct:updateRole\"/>\n+      <setProperty propertyName=\"subjectMod\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <process ref=\"defaultRoleUpdatePropagation\" />\n+        <to uri=\"direct:updateRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updateRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n                \n-        <!--\n-            DELETE ROLE\n-        -->\n-        <route id=\"deleteRole\">\n-            <from uri=\"direct:deleteRole\"/>\n-            <doTry>\n-              <process ref=\"defaultRoleDeletePropagation\" />\n-              <bean ref=\"rwfAdapter\" method=\"delete(${body})\"/>\n-              <setBody>\n-                  <simple>${property.statuses}</simple>\n-              </setBody>\n-              <to uri=\"direct:deleteRolePort\"/>\n-              <doCatch>        \n-                  <exception>java.lang.RuntimeException</exception>\n-                  <handled>\n-                      <constant>false</constant>\n-                  </handled>\n-                  <to uri=\"direct:deleteRolePort\"/>\n-              </doCatch>\n-            </doTry>\n-        </route>\n+    <!--\n+        DELETE ROLE\n+    -->\n+    <route id=\"deleteRole\">\n+      <from uri=\"direct:deleteRole\"/>\n+      <doTry>\n+        <process ref=\"defaultRoleDeletePropagation\" />\n+        <bean ref=\"rwfAdapter\" method=\"delete(${body})\"/>\n+        <setBody>\n+          <simple>${property.statuses}</simple>\n+        </setBody>\n+        <to uri=\"direct:deleteRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:deleteRolePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n         \n-        <!-- \n-            UNLINK USER\n-        -->\n-        <route id=\"unlinkRole\">\n-            <from uri=\"direct:unlinkRole\"/>\n-            <doTry>\n-                <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n-                <setBody>\n-                   <simple>${body.getResult}</simple>\n-                </setBody>\n-                <to uri=\"direct:unlinkRolePort\"/>\n-                <doCatch>        \n-                    <exception>java.lang.RuntimeException</exception>\n-                    <handled>\n-                        <constant>false</constant>\n-                    </handled>\n-                    <to uri=\"direct:unlinkRolePort\"/>\n-                </doCatch>\n-            </doTry>            \n-        </route>\n+    <!-- \n+        UNLINK USER\n+    -->\n+    <route id=\"unlinkRole\">\n+      <from uri=\"direct:unlinkRole\"/>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult}</simple>\n+        </setBody>\n+        <to uri=\"direct:unlinkRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:unlinkRolePort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n         \n-        <!--\n-            LINK USER\n-        -->\n+    <!--\n+        LINK USER\n+    -->\n         \n-        <route id=\"linkRole\">\n-            <from uri=\"direct:linkRole\"/>\n-            <doTry>\n-                <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n-                <setBody>\n-                   <simple>${body.getResult}</simple>\n-                </setBody>\n-                <to uri=\"direct:linkRolePort\"/>\n-                <doCatch>        \n-                    <exception>java.lang.RuntimeException</exception>\n-                    <handled>\n-                        <constant>false</constant>\n-                    </handled>\n-                    <to uri=\"direct:linkRolePort\"/>\n-                </doCatch>\n-            </doTry>            \n-        </route>\n+    <route id=\"linkRole\">\n+      <from uri=\"direct:linkRole\"/>\n+      <doTry>\n+        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult}</simple>\n+        </setBody>\n+        <to uri=\"direct:linkRolePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:linkRolePort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n         \n-        <!--\n-            DEPROVISION ROLE\n-        -->\n-        <route id=\"deprovisionRole\">\n-            <from uri=\"direct:deprovisionRole\"/>            \n-              <process ref=\"defaultRoleDeprovisionPropagation\" />\n-              <to uri=\"direct:deprovisionRolePort\"/>              \n-        </route>\n-</routeContext>\n+    <!--\n+        DEPROVISION ROLE\n+    -->\n+    <route id=\"deprovisionRole\">\n+      <from uri=\"direct:deprovisionRole\"/>            \n+      <process ref=\"defaultRoleDeprovisionPropagation\" />\n+      <to uri=\"direct:deprovisionRolePort\"/>              \n+    </route>\n+  </routeContext>\n </beans>"},{"sha":"763996d447c3ef226585e06eb2545e9c9560975e","filename":"core/src/main/resources/userRoute.xml","status":"modified","additions":217,"deletions":217,"changes":434,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -24,240 +24,240 @@ under the License.\n                            http://camel.apache.org/schema/spring\n                            http://camel.apache.org/schema/spring/camel-spring.xsd\">\n  \n-    <!--\n-        The default routes define each task involved in user creation:\n-        main operations consist in user workflow creation and its propagation.         \n-    -->\n-    <routeContext id=\"defaultUserRoutes\" xmlns=\"http://camel.apache.org/schema/spring\">  \t\n-\t<route id=\"createUser\">\n-          <from uri=\"direct:createUser\"/>\n-          <setProperty propertyName=\"actual\">\n-            <simple>${body}</simple>\n-          </setProperty>\n-          <doTry>\n-            <bean ref=\"uwfAdapter\" \n-                  method=\"create(${body},${property.disablePwdPolicyCheck},\n+  <!--\n+      The default routes define each task involved in user creation:\n+      main operations consist in user workflow creation and its propagation.         \n+  -->\n+  <routeContext id=\"defaultUserRoutes\" xmlns=\"http://camel.apache.org/schema/spring\">  \t\n+    <route id=\"createUser\">\n+      <from uri=\"direct:createUser\"/>\n+      <setProperty propertyName=\"actual\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" \n+              method=\"create(${body},${property.disablePwdPolicyCheck},\n                                  ${property.enabled},${property.storePassword})\"/>\n-            <process ref=\"defaultUserCreatePropagation\" />\n-            <to uri=\"direct:createPort\"/>\n-            <doCatch>        \n-                <exception>java.lang.RuntimeException</exception>\n-                <handled>\n-                    <constant>false</constant>\n-                </handled>\n-                <to uri=\"direct:createPort\"/>\n-            </doCatch>\n-          </doTry>\n-        </route> \n+        <process ref=\"defaultUserCreatePropagation\" />\n+        <to uri=\"direct:createPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:createPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route> \n         \n-        <!--\n-            The propagation route deals with propagation of created user. In this\n-            case we used a custom processor to perform this task: it means that\n-            a custom java class contains the propagation strategy.\n-        -->\n+    <!--\n+        The propagation route deals with propagation of created user. In this\n+        case we used a custom processor to perform this task: it means that\n+        a custom java class contains the propagation strategy.\n+    -->\n        \n-        <!--\n-            UPDATE USER\n-        -->\n-        <route id=\"updateUser\">\n-            <from uri=\"direct:updateUser\"/>\n-            <setProperty propertyName=\"actual\">\n-                <simple>${body}</simple>\n-            </setProperty>\n-            <doTry>\n-              <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-              <process ref=\"defaultUserUpdatePropagation\" />\n-              <to uri=\"direct:updatePort\"/>\n-              <doCatch>        \n-                  <exception>java.lang.RuntimeException</exception>\n-                  <handled>\n-                      <constant>false</constant>\n-                  </handled>\n-                  <to uri=\"direct:updatePort\"/>\n-              </doCatch>\n-            </doTry>\n-        </route>\n+    <!--\n+        UPDATE USER\n+    -->\n+    <route id=\"updateUser\">\n+      <from uri=\"direct:updateUser\"/>\n+      <setProperty propertyName=\"actual\">\n+        <simple>${body}</simple>\n+      </setProperty>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <process ref=\"defaultUserUpdatePropagation\" />\n+        <to uri=\"direct:updatePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updatePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n         \n \n                 \n-        <!--\n-            UPDATE SYNC USER\n-        -->\n-        <route id=\"updateSyncUser\">\n-            <from uri=\"direct:updateSyncUser\"/>            \n-            <doTry>\n-              <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-              <to uri=\"direct:syncUserStatus\"/>\n-              <doCatch>        \n-                  <exception>java.lang.RuntimeException</exception>\n-                  <handled>\n-                      <constant>false</constant>\n-                  </handled>\n-                  <to uri=\"direct:updateSyncPort\"/>\n-              </doCatch>\n-            </doTry>\n-        </route>\n+    <!--\n+        UPDATE SYNC USER\n+    -->\n+    <route id=\"updateSyncUser\">\n+      <from uri=\"direct:updateSyncUser\"/>            \n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <to uri=\"direct:syncUserStatus\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:updateSyncPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n         \n-        <route id=\"syncUserStatus\">\n-            <from uri=\"direct:syncUserStatus\"/>\n-                <process ref=\"userStatusOnSync\" />\n-                <process ref=\"defaultUserUpdateSyncPropagation\" />\n-            <to uri=\"direct:updateSyncPort\"/>\n-        </route>\n-        <!--\n-            DELETE USER\n-        -->\n-        <route id=\"deleteUser\">\n-            <from uri=\"direct:deleteUser\"/>\n-            <doTry>\n-              <process ref=\"defaultUserDeletePropagation\" />\n-              <bean ref=\"uwfAdapter\" method=\"delete(${body})\"/>\n-              <setBody>\n-                  <simple>${property.statuses}</simple>\n-              </setBody>\n-              <to uri=\"direct:deletePort\"/>\n-              <doCatch>        \n-                  <exception>java.lang.RuntimeException</exception>\n-                  <handled>\n-                      <constant>false</constant>\n-                  </handled>\n-                  <to uri=\"direct:deletePort\"/>\n-              </doCatch>\n-            </doTry>\n-        </route>\n+    <route id=\"syncUserStatus\">\n+      <from uri=\"direct:syncUserStatus\"/>\n+      <process ref=\"userStatusOnSync\" />\n+      <process ref=\"defaultUserUpdateSyncPropagation\" />\n+      <to uri=\"direct:updateSyncPort\"/>\n+    </route>\n+    <!--\n+        DELETE USER\n+    -->\n+    <route id=\"deleteUser\">\n+      <from uri=\"direct:deleteUser\"/>\n+      <doTry>\n+        <process ref=\"defaultUserDeletePropagation\" />\n+        <bean ref=\"uwfAdapter\" method=\"delete(${body})\"/>\n+        <setBody>\n+          <simple>${property.statuses}</simple>\n+        </setBody>\n+        <to uri=\"direct:deletePort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:deletePort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n         \n-        <!-- \n-            UNLINK USER\n-        -->\n-        <route id=\"unlinkUser\">\n-            <from uri=\"direct:unlinkUser\"/>\n-            <doTry>\n-                <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-                <setBody>\n-                   <simple>${body.getResult.getKey}</simple>\n-                </setBody>\n-                <to uri=\"direct:unlinkPort\"/>\n-                <doCatch>        \n-                    <exception>java.lang.RuntimeException</exception>\n-                    <handled>\n-                        <constant>false</constant>\n-                    </handled>\n-                    <to uri=\"direct:unlinkPort\"/>\n-                </doCatch>\n-            </doTry>            \n-        </route>\n+    <!-- \n+        UNLINK USER\n+    -->\n+    <route id=\"unlinkUser\">\n+      <from uri=\"direct:unlinkUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult.getKey}</simple>\n+        </setBody>\n+        <to uri=\"direct:unlinkPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:unlinkPort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n         \n-        <!--\n-            LINK USER\n-        -->\n+    <!--\n+        LINK USER\n+    -->\n         \n-        <route id=\"linkUser\">\n-            <from uri=\"direct:linkUser\"/>\n-            <doTry>\n-                <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-                <setBody>\n-                   <simple>${body.getResult.getKey}</simple>\n-                </setBody>\n-                <to uri=\"direct:linkPort\"/>\n-                <doCatch>        \n-                    <exception>java.lang.RuntimeException</exception>\n-                    <handled>\n-                        <constant>false</constant>\n-                    </handled>\n-                    <to uri=\"direct:linkPort\"/>\n-                </doCatch>\n-            </doTry>            \n-        </route>\n+    <route id=\"linkUser\">\n+      <from uri=\"direct:linkUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n+        <setBody>\n+          <simple>${body.getResult.getKey}</simple>\n+        </setBody>\n+        <to uri=\"direct:linkPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:linkPort\"/>\n+        </doCatch>\n+      </doTry>            \n+    </route>\n         \n-        <!-- \n-            ACTIVATE USER\n-        -->\n-        <route id=\"activateUser\">\n-            <from uri=\"direct:activateUser\"/>\n-            <doTry>\n-                <bean ref=\"uwfAdapter\" method=\"activate(${body}, ${property.token})\"/>\n-                <to uri=\"direct:statusUser\"/>\n-                <doCatch>        \n-                   <exception>java.lang.RuntimeException</exception>\n-                   <handled>\n-                       <constant>false</constant>\n-                   </handled>\n-                   <to uri=\"direct:statusPort\"/>\n-                </doCatch>\n-            </doTry>    \n-        </route>\n-        <!-- \n-            REACTIVATE USER\n-        -->\n-        <route id=\"reactivateUser\">\n-            <from uri=\"direct:reactivateUser\"/>\n-            <doTry>\n-                <bean ref=\"uwfAdapter\" method=\"reactivate(${body})\"/>\n-                <to uri=\"direct:statusUser\"/>\n-                <doCatch>        \n-                   <exception>java.lang.RuntimeException</exception>\n-                   <handled>\n-                       <constant>false</constant>\n-                   </handled>\n-                   <to uri=\"direct:statusPort\"/>\n-                </doCatch>\n-            </doTry>    \n-        </route>\n-        <!-- \n-            SUSPEND USER\n-        -->\n-        <route id=\"suspendUser\">\n-            <from uri=\"direct:suspendUser\"/>\n-            <doTry>\n-                <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n-                <to uri=\"direct:statusUser\"/>\n-                <doCatch>        \n-                   <exception>java.lang.RuntimeException</exception>\n-                   <handled>\n-                       <constant>false</constant>\n-                   </handled>\n-                   <to uri=\"direct:statusPort\"/>\n-                </doCatch>\n-            </doTry>  \n-        </route>\n+    <!-- \n+        ACTIVATE USER\n+    -->\n+    <route id=\"activateUser\">\n+      <from uri=\"direct:activateUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"activate(${body}, ${property.token})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>    \n+    </route>\n+    <!-- \n+        REACTIVATE USER\n+    -->\n+    <route id=\"reactivateUser\">\n+      <from uri=\"direct:reactivateUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"reactivate(${body})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>    \n+    </route>\n+    <!-- \n+        SUSPEND USER\n+    -->\n+    <route id=\"suspendUser\">\n+      <from uri=\"direct:suspendUser\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n+        <to uri=\"direct:statusUser\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:statusPort\"/>\n+        </doCatch>\n+      </doTry>  \n+    </route>\n         \n-        <!-- \n-            STATUS PROPAGATION\n-        -->\n+    <!-- \n+        STATUS PROPAGATION\n+    -->\n         \n-        <route id=\"statusUser\">\n-            <from uri=\"direct:statusUser\"/>            \n-              <process ref=\"defaultUserStatusPropagation\" />\n-            <to uri=\"direct:statusPort\"/>              \n-        </route>\n+    <route id=\"statusUser\">\n+      <from uri=\"direct:statusUser\"/>            \n+      <process ref=\"defaultUserStatusPropagation\" />\n+      <to uri=\"direct:statusPort\"/>              \n+    </route>\n         \n         \n-        <!--\n-            DEPROVISION USER\n-        -->\n-        <route id=\"deprovisionUser\">\n-            <from uri=\"direct:deprovisionUser\"/>            \n-              <process ref=\"defaultUserDeprovisionPropagation\" />\n-              <to uri=\"direct:deprovisionPort\"/>              \n-        </route>\n+    <!--\n+        DEPROVISION USER\n+    -->\n+    <route id=\"deprovisionUser\">\n+      <from uri=\"direct:deprovisionUser\"/>            \n+      <process ref=\"defaultUserDeprovisionPropagation\" />\n+      <to uri=\"direct:deprovisionPort\"/>              \n+    </route>\n \n \n \n-        <route id=\"suspendUserWF\">\n-            <from uri=\"direct:suspendUserWF\"/>\n-            <doTry>\n-                <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n-                <process ref=\"defaultUserWFSuspendPropagation\"/>\n-                <to uri=\"direct:suspendWFPort\"/>\n-                <doCatch>        \n-                   <exception>java.lang.RuntimeException</exception>\n-                   <handled>\n-                       <constant>false</constant>\n-                   </handled>\n-                   <to uri=\"direct:suspendWFPort\"/>\n-                </doCatch>\n-            </doTry>  \n-        </route>\n+    <route id=\"suspendUserWF\">\n+      <from uri=\"direct:suspendUserWF\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n+        <process ref=\"defaultUserWFSuspendPropagation\"/>\n+        <to uri=\"direct:suspendWFPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:suspendWFPort\"/>\n+        </doCatch>\n+      </doTry>  \n+    </route>\n \n-</routeContext>\n+  </routeContext>\n </beans>"},{"sha":"e238b991ee45175b9a2dea176ae2b45378607256","filename":"core/src/main/resources/wadl2html/index.xsl","status":"modified","additions":40,"deletions":40,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -48,50 +48,50 @@\n \n         <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/themes/base/minified/jquery-ui.min.css\"/>\n         <style>\n-body {\n-  font-family: \"Verdana,Arial,sans-serif\";\n-  font-size: 0.9em;\n-}\n+          body {\n+          font-family: \"Verdana,Arial,sans-serif\";\n+          font-size: 0.9em;\n+          }\n \n-table {\n-  font-family: \"Verdana,Arial,sans-serif\";\n-  font-size: 0.9em;\n-  border-width: 1px;\n-  border-color: #666666;\n-  border-collapse: collapse;\n-}\n-table th {\n-  border-width: 1px;\n-  padding: 8px;\n-  border-style: solid;\n-  border-color: #666666;\n-  background-color: #dedede;\n-}\n-td {\n-  border-width: 1px;\n-  padding: 8px;\n-  border-style: solid;\n-  border-color: #666666;\n-  background-color: #ffffff;\n-  vertical-align: top;\n-}\n+          table {\n+          font-family: \"Verdana,Arial,sans-serif\";\n+          font-size: 0.9em;\n+          border-width: 1px;\n+          border-color: #666666;\n+          border-collapse: collapse;\n+          }\n+          table th {\n+          border-width: 1px;\n+          padding: 8px;\n+          border-style: solid;\n+          border-color: #666666;\n+          background-color: #dedede;\n+          }\n+          td {\n+          border-width: 1px;\n+          padding: 8px;\n+          border-style: solid;\n+          border-color: #666666;\n+          background-color: #ffffff;\n+          vertical-align: top;\n+          }\n \n-.methods {\n-  padding: 5px;\n-}\n+          .methods {\n+          padding: 5px;\n+          }\n \n-.representation-label {\n-  font-weight: bold;\n-  width: 80px;\n-}\n+          .representation-label {\n+          font-weight: bold;\n+          width: 80px;\n+          }\n \n-.ui-widget { font-size: 0.9em; }\n-.ui-tabs-vertical { width: 60em; }\n-.ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 15em; }\n-.ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }\n-.ui-tabs-vertical .ui-tabs-nav li a { display:block; }\n-.ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }\n-.ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}\n+          .ui-widget { font-size: 0.9em; }\n+          .ui-tabs-vertical { width: 60em; }\n+          .ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 15em; }\n+          .ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }\n+          .ui-tabs-vertical .ui-tabs-nav li a { display:block; }\n+          .ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }\n+          .ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}\n         </style>\n         \n         <script src=\"{$contextPath}/webjars/jquery/${jquery.version}/jquery.min.js\">"},{"sha":"ff0c09985580d793378608aa5e65cd402a501b05","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/DerSchemaTest.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -79,7 +79,6 @@ public void delete() {\n         assertNull(\"delete did not work\", actual);\n \n         // ------------- //\n-\n         RDerSchema rderiveddata = derSchemaDAO.find(\"rderiveddata\", RDerSchema.class);\n         assertNotNull(rderiveddata);\n "},{"sha":"86e725c918bf2f730cb543b4be1c9e1a26b72427","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/SecurityQuestionTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSecurityQuestionTest.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -52,7 +52,7 @@ public void findAll() {\n     public void save() {\n         SecurityQuestion securityQuestion = new SecurityQuestion();\n         securityQuestion.setContent(\"What is your favorite pet's name?\");\n-        \n+\n         SecurityQuestion actual = securityQuestionDAO.save(securityQuestion);\n         assertNotNull(actual);\n         assertNotNull(actual.getId());"},{"sha":"efae722a47d7221c78c97e03df9a446ace2c351d","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/VirSchemaTest.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -77,7 +77,6 @@ public void delete() {\n         assertNull(\"delete did not work\", actual);\n \n         // ------------- //\n-\n         RVirSchema rvirtualdata = virSchemaDAO.find(\"rvirtualdata\", RVirSchema.class);\n         assertNotNull(rvirtualdata);\n "},{"sha":"4dbf80486a9c257b648fe63cf2ed6569db49363f","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnectorTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnectorTestITCase.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -709,13 +709,13 @@ public void bulkAction() {\n \n     @Test\n     public void issueSYNCOPE605() {\n-        \n+\n         ConnInstanceTO connectorInstanceTO = connectorService.read(103L);\n         assertTrue(connectorInstanceTO.getCapabilities().isEmpty());\n-        \n+\n         connectorInstanceTO.getCapabilities().add(ConnectorCapability.SEARCH);\n         connectorService.update(connectorInstanceTO.getId(), connectorInstanceTO);\n-        \n+\n         ConnInstanceTO updatedCapabilities = connectorService.read(connectorInstanceTO.getId());\n         assertNotNull(updatedCapabilities.getCapabilities());\n         assertTrue(updatedCapabilities.getCapabilities().size() == 1);"},{"sha":"3008350c569b747261b3ac7049615d595c60c3fb","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -44,7 +44,7 @@ private NotificationTO buildNotificationTO() {\n         NotificationTO notificationTO = new NotificationTO();\n         notificationTO.setTraceLevel(TraceLevel.SUMMARY);\n         notificationTO.getEvents().add(\"create\");\n-        \n+\n         notificationTO.setUserAbout(SyncopeClient.getUserSearchConditionBuilder().\n                 is(\"fullname\").equalTo(\"*o*\").and(\"fullname\").equalTo(\"*i*\").query());\n "},{"sha":"01005380747cd787aaef44a3906f2e758e8af056","filename":"core/src/test/java/org/apache/syncope/core/rest/PolicyTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -227,12 +227,12 @@ public void issueSYNCOPE466() {\n     public void issueSYNCOPE553() {\n         AccountPolicyTO policy = new AccountPolicyTO(false);\n         policy.setDescription(\"SYNCOPE553\");\n-        \n+\n         final AccountPolicySpec accountPolicySpec = new AccountPolicySpec();\n         accountPolicySpec.setMinLength(3);\n         accountPolicySpec.setMaxLength(8);\n         policy.setSpecification(accountPolicySpec);\n-        \n+\n         policy = createPolicy(policy);\n         assertNotNull(policy);\n     }"},{"sha":"e4b915f1d96433fa713323cab82b11b1d4db888a","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7aa0db378d8ab7931c78d570c6f5968e2967bc7b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=7aa0db378d8ab7931c78d570c6f5968e2967bc7b","patch":"@@ -507,7 +507,7 @@ public void issueSYNCOPE368() {\n         item.setExtAttrName(\"cn\");\n         item.setPurpose(MappingPurpose.BOTH);\n         mapping.setAccountIdItem(item);\n-            \n+\n         item = new MappingItemTO();\n         item.setIntMappingType(IntMappingType.RoleOwnerSchema);\n         item.setExtAttrName(\"owner\");"}]}