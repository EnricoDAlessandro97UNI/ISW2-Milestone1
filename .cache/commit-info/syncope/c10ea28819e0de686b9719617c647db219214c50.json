{"sha":"c10ea28819e0de686b9719617c647db219214c50","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMxMGVhMjg4MTllMGRlNjg2Yjk3MTk2MTdjNjQ3ZGIyMTkyMTRjNTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-15T16:14:29Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-07-15T16:14:29Z"},"message":"Proper fix for notification task search - see 14649394a351d087c4c2627bb4fa45f5fc3406dd","tree":{"sha":"e4e5ce20b383ea1798e7399fa781fc2cfc56b61d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e4e5ce20b383ea1798e7399fa781fc2cfc56b61d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c10ea28819e0de686b9719617c647db219214c50","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c10ea28819e0de686b9719617c647db219214c50","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c10ea28819e0de686b9719617c647db219214c50","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c10ea28819e0de686b9719617c647db219214c50/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d72296e4b44661fe839620838c5e7892977239d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d72296e4b44661fe839620838c5e7892977239d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d72296e4b44661fe839620838c5e7892977239d9"}],"stats":{"total":127,"additions":64,"deletions":63},"files":[{"sha":"588b07ff93546ad26b6caf1fa3d0943c3fddd924","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationTasks.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -38,10 +38,10 @@ public class NotificationTasks extends Panel implements ModalPanel {\n \n     public NotificationTasks(\n             final AnyTypeKind anyTypeKind,\n-            final String anyTypeKey,\n+            final String entityKey,\n             final PageReference pageReference) {\n \n-        this(null, anyTypeKind, anyTypeKey, pageReference);\n+        this(null, anyTypeKind, entityKey, pageReference);\n     }\n \n     public NotificationTasks(\n@@ -53,15 +53,15 @@ public NotificationTasks(\n     private NotificationTasks(\n             final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final String anyTypeKey,\n+            final String entityKey,\n             final PageReference pageReference) {\n         super(BaseModal.CONTENT_ID);\n \n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n         mlp.setFirstLevel(\n-                new NotificationTaskDirectoryPanel(notification, anyTypeKind, anyTypeKey, mlp, pageReference) {\n+                new NotificationTaskDirectoryPanel(notification, anyTypeKind, entityKey, mlp, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n "},{"sha":"cfc4b82ec27279a1bf83941a2e941b1d199a6598","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n@@ -55,9 +56,9 @@ public int count(final String resource, final TaskType kind) {\n                 build()).getTotalCount();\n     }\n \n-    public int count(final AnyTypeKind anyTypeKind, final String anyTypeKey, final TaskType kind) {\n+    public int count(final AnyTypeKind anyTypeKind, final String entityKey, final TaskType kind) {\n         return getService(TaskService.class).list(\n-                new TaskQuery.Builder(kind).anyTypeKind(anyTypeKind).anyTypeKey(anyTypeKey).page(1).size(1).\n+                new TaskQuery.Builder(kind).anyTypeKind(anyTypeKind).entityKey(entityKey).page(1).size(1).\n                 build()).getTotalCount();\n     }\n \n@@ -79,27 +80,26 @@ public List<PropagationTaskTO> listPropagationTasks(\n     }\n \n     public List<PropagationTaskTO> listPropagationTasks(\n-            final AnyTypeKind anyTypeKind, final String anyTypeKey,\n+            final AnyTypeKind anyTypeKind, final String entityKey,\n             final int page, final int size, final SortParam<String> sort) {\n \n         return getService(TaskService.class).\n                 <PropagationTaskTO>list(new TaskQuery.Builder(TaskType.PROPAGATION).\n-                        anyTypeKind(anyTypeKind).anyTypeKey(anyTypeKey).\n+                        anyTypeKind(anyTypeKind).entityKey(entityKey).\n                         page(page).size(size).\n                         orderBy(toOrderBy(sort)).build()).\n                 getResult();\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    public <T extends AbstractTaskTO> List<T> listNotificationTasks(\n+    public List<NotificationTaskTO> listNotificationTasks(\n             final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final String anyTypeKey,\n+            final String entityKey,\n             final int page,\n             final int size,\n             final SortParam<String> sort) {\n \n-        final TaskQuery.Builder builder = new TaskQuery.Builder(TaskType.NOTIFICATION);\n+        TaskQuery.Builder builder = new TaskQuery.Builder(TaskType.NOTIFICATION);\n         if (notification != null) {\n             builder.notification(notification);\n         }\n@@ -108,12 +108,13 @@ public <T extends AbstractTaskTO> List<T> listNotificationTasks(\n             builder.anyTypeKind(anyTypeKind);\n         }\n \n-        if (anyTypeKey != null) {\n-            builder.anyTypeKey(anyTypeKey);\n+        if (entityKey != null) {\n+            builder.entityKey(entityKey);\n         }\n \n-        return (List<T>) getService(TaskService.class).\n-                list(builder.page(page).size(size).orderBy(toOrderBy(sort)).build()).getResult();\n+        PagedResult<NotificationTaskTO> list = getService(TaskService.class).\n+                list(builder.page(page).size(size).orderBy(toOrderBy(sort)).build());\n+        return list.getResult();\n     }\n \n     @SuppressWarnings(\"unchecked\")"},{"sha":"dbd2047e91107d39d13c54819751d0a415a79d49","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AnyPropagationTaskDirectoryPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -33,18 +33,18 @@ public abstract class AnyPropagationTaskDirectoryPanel extends PropagationTaskDi\n \n     private final AnyTypeKind anyTypeKind;\n \n-    private final String anyTypeKey;\n+    private final String entityKey;\n \n     protected AnyPropagationTaskDirectoryPanel(\n             final BaseModal<?> baseModal,\n             final MultilevelPanel multiLevelPanelRef,\n             final AnyTypeKind anyTypeKind,\n-            final String anyTypeKey,\n+            final String entityKey,\n             final PageReference pageRef) {\n \n         super(baseModal, multiLevelPanelRef, null, pageRef);\n         this.anyTypeKind = anyTypeKind;\n-        this.anyTypeKey = anyTypeKey;\n+        this.entityKey = entityKey;\n     }\n \n     @Override\n@@ -62,15 +62,15 @@ public AnyPropagationTasksProvider(final int paginatorRows) {\n \n         @Override\n         public long size() {\n-            return restClient.count(anyTypeKind, anyTypeKey, taskType);\n+            return restClient.count(anyTypeKind, entityKey, taskType);\n         }\n \n         @Override\n         public Iterator<PropagationTaskTO> iterator(final long first, final long count) {\n             final int page = ((int) first / paginatorRows);\n \n             final List<PropagationTaskTO> tasks = restClient.listPropagationTasks(\n-                    anyTypeKind, anyTypeKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+                    anyTypeKind, entityKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n \n             Collections.sort(tasks, getComparator());\n             return tasks.iterator();"},{"sha":"f187a05a3205447fd94ade167039c1812609d902","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AnyPropagationTasks.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -35,13 +35,13 @@ public class AnyPropagationTasks extends AbstractPropagationTasks {\n     public <T extends AnyTO> AnyPropagationTasks(\n             final BaseModal<?> baseModal,\n             final AnyTypeKind anyTypeKind,\n-            final String anyTypeKey,\n+            final String entityKey,\n             final PageReference pageReference) {\n \n         super(BaseModal.CONTENT_ID);\n \n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n-        mlp.setFirstLevel(new AnyPropagationTaskDirectoryPanel(baseModal, mlp, anyTypeKind, anyTypeKey, pageReference) {\n+        mlp.setFirstLevel(new AnyPropagationTaskDirectoryPanel(baseModal, mlp, anyTypeKind, entityKey, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n "},{"sha":"615e51255279dc306296163fb1ce4f9ae1d989fe","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/NotificationTaskDirectoryPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -59,19 +59,19 @@\n \n     private final AnyTypeKind anyTypeKind;\n \n-    private final String anyTypeKey;\n+    private final String entityKey;\n \n     protected NotificationTaskDirectoryPanel(\n             final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final String anyTypeKey,\n+            final String entityKey,\n             final MultilevelPanel multiLevelPanelRef,\n             final PageReference pageRef) {\n \n         super(null, multiLevelPanelRef, pageRef);\n         this.notification = notification;\n         this.anyTypeKind = anyTypeKind;\n-        this.anyTypeKey = anyTypeKey;\n+        this.entityKey = entityKey;\n         initResultTable();\n     }\n \n@@ -189,7 +189,7 @@ protected Collection<ActionType> getBulkActions() {\n \n     @Override\n     protected NotificationTasksProvider dataProvider() {\n-        return new NotificationTasksProvider(notification, anyTypeKind, anyTypeKey, rows);\n+        return new NotificationTasksProvider(notification, anyTypeKind, entityKey, rows);\n     }\n \n     @Override\n@@ -205,26 +205,26 @@ public class NotificationTasksProvider extends TaskDataProvider<NotificationTask\n \n         private final AnyTypeKind anyTypeKind;\n \n-        private final String anyTypeKey;\n+        private final String entityKey;\n \n         public NotificationTasksProvider(\n                 final String notification,\n                 final AnyTypeKind anyTypeKind,\n-                final String anyTypeKey,\n+                final String entityKey,\n                 final int paginatorRows) {\n \n             super(paginatorRows, TaskType.PROPAGATION, restClient);\n             this.notification = notification;\n             this.anyTypeKind = anyTypeKind;\n-            this.anyTypeKey = anyTypeKey;\n+            this.entityKey = entityKey;\n         }\n \n         @Override\n         public Iterator<NotificationTaskTO> iterator(final long first, final long count) {\n             final int page = ((int) first / paginatorRows);\n \n             final List<NotificationTaskTO> tasks = restClient.listNotificationTasks(\n-                    notification, anyTypeKind, anyTypeKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+                    notification, anyTypeKind, entityKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n \n             Collections.sort(tasks, getComparator());\n             return tasks.iterator();"},{"sha":"44155e49ebb7d88d1681557c500594e09a33b88e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTaskTO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -38,7 +38,7 @@ public class NotificationTaskTO extends AbstractTaskTO {\n \n     private AnyTypeKind anyTypeKind;\n \n-    private String anyKey;\n+    private String entityKey;\n \n     private final Set<String> recipients = new HashSet<>();\n \n@@ -70,12 +70,12 @@ public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n         this.anyTypeKind = anyTypeKind;\n     }\n \n-    public String getAnyKey() {\n-        return anyKey;\n+    public String getEntityKey() {\n+        return entityKey;\n     }\n \n-    public void setAnyKey(final String anyKey) {\n-        this.anyKey = anyKey;\n+    public void setEntityKey(final String entityKey) {\n+        this.entityKey = entityKey;\n     }\n \n     @XmlElementWrapper(name = \"recipients\")"},{"sha":"7674053be8e864d288a172b7cded8fad886ee44f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/TaskQuery.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -79,15 +79,15 @@ public Builder anyTypeKind(final AnyTypeKind anyTypeKind) {\n             }\n         }\n \n-        public Builder anyTypeKey(final String anyTypeKey) {\n+        public Builder entityKey(final String entityKey) {\n             switch (getInstance().getType()) {\n                 case PROPAGATION:\n                 case NOTIFICATION:\n-                    getInstance().setAnyTypeKey(anyTypeKey);\n+                    getInstance().setEntityKey(entityKey);\n                     return this;\n \n                 default:\n-                    throw new IllegalArgumentException(\"anyTypeKey not allowed for \" + getInstance().getType());\n+                    throw new IllegalArgumentException(\"entityKey not allowed for \" + getInstance().getType());\n             }\n         }\n \n@@ -114,7 +114,7 @@ public TaskQuery build() {\n \n     private AnyTypeKind anyTypeKind;\n \n-    private String anyTypeKey;\n+    private String entityKey;\n \n     private Boolean details;\n \n@@ -155,14 +155,14 @@ public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n         this.anyTypeKind = anyTypeKind;\n     }\n \n-    public String getAnyTypeKey() {\n-        return anyTypeKey;\n+    public String getEntityKey() {\n+        return entityKey;\n     }\n \n     @Min(1)\n-    @QueryParam(JAXRSService.PARAM_ANYTYPE_KEY)\n-    public void setAnyTypeKey(final String anyTypeKey) {\n-        this.anyTypeKey = anyTypeKey;\n+    @QueryParam(JAXRSService.PARAM_ENTITY_KEY)\n+    public void setEntityKey(final String entityKey) {\n+        this.entityKey = entityKey;\n     }\n \n     public Boolean getDetails() {"},{"sha":"f6133703f867e6a2668dadf53f8f68fc2f6638a7","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/JAXRSService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -34,7 +34,7 @@ public interface JAXRSService {\n \n     String PARAM_ANYTYPE_KIND = \"anyTypeKind\";\n \n-    String PARAM_ANYTYPE_KEY = \"anyTypeKey\";\n+    String PARAM_ENTITY_KEY = \"entityKey\";\n \n     String PARAM_DETAILS = \"details\";\n "},{"sha":"9a83fe7d612ffe4d5e6ab823d75647716cee2f5d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -164,14 +164,14 @@ public <T extends AbstractTaskTO> List<T> list(\n             final String resource,\n             final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final String anyTypeKey,\n+            final String entityKey,\n             final int page,\n             final int size,\n             final List<OrderByClause> orderByClauses,\n             final boolean details) {\n \n         return CollectionUtils.collect(taskDAO.findAll(\n-                type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, anyTypeKey,\n+                type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, entityKey,\n                 page, size, orderByClauses), new Transformer<Task, T>() {\n \n             @Override"},{"sha":"d13f74887bd7d005e676ac00533509dc800e35ee","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/NotificationTask.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -29,9 +29,9 @@ public interface NotificationTask extends Task {\n \n     void setNotification(Notification notification);\n \n-    String getAnyKey();\n+    String getEntityKey();\n \n-    void setAnyKey(String anyKey);\n+    void setEntityKey(String entityKey);\n \n     AnyTypeKind getAnyTypeKind();\n "},{"sha":"1f5db3b00c7b6b79da7e152db16a4c7be2bec77b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -153,8 +153,7 @@ private StringBuilder buildFindAllQuery(\n             queryString.append(\"AND t.notification=:notification \");\n         }\n         if (anyTypeKind != null && entityKey != null) {\n-            queryString.append(\"AND t.anyTypeKind=:anyTypeKind AND t.\").\n-                    append(type == TaskType.NOTIFICATION ? \"anyKey\" : \"entityKey\").append(\"=:entityKey \");\n+            queryString.append(\"AND t.anyTypeKind=:anyTypeKind AND t.entityKey=:entityKey \");\n         }\n \n         return queryString;"},{"sha":"aad2aa0b6081ebfebd629c093858856fb9323d76","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPANotificationTask.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -54,7 +54,7 @@ public class JPANotificationTask extends AbstractTask implements NotificationTas\n     @Enumerated(EnumType.STRING)\n     private AnyTypeKind anyTypeKind;\n \n-    private String anyKey;\n+    private String entityKey;\n \n     @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"address\")\n@@ -108,13 +108,13 @@ public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n     }\n \n     @Override\n-    public String getAnyKey() {\n-        return anyKey;\n+    public String getEntityKey() {\n+        return entityKey;\n     }\n \n     @Override\n-    public void setAnyKey(final String anyKey) {\n-        this.anyKey = anyKey;\n+    public void setEntityKey(final String entityKey) {\n+        this.entityKey = entityKey;\n     }\n \n     @Override"},{"sha":"40458729f8eaef43734d897337f376d7cb30a81a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -320,6 +320,7 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtils t\n \n         switch (taskUtils.getType()) {\n             case PROPAGATION:\n+                ((PropagationTaskTO) taskTO).setAnyTypeKind(((PropagationTask) task).getAnyTypeKind());\n                 ((PropagationTaskTO) taskTO).setEntityKey(((PropagationTask) task).getEntityKey());\n                 ((PropagationTaskTO) taskTO).setResource(((PropagationTask) task).getResource().getKey());\n                 ((PropagationTaskTO) taskTO).setAttributes(((PropagationTask) task).getSerializedAttributes());\n@@ -359,7 +360,7 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtils t\n             case NOTIFICATION:\n                 ((NotificationTaskTO) taskTO).setNotification(((NotificationTask) task).getNotification().getKey());\n                 ((NotificationTaskTO) taskTO).setAnyTypeKind(((NotificationTask) task).getAnyTypeKind());\n-                ((NotificationTaskTO) taskTO).setAnyKey(((NotificationTask) task).getAnyKey());\n+                ((NotificationTaskTO) taskTO).setEntityKey(((NotificationTask) task).getEntityKey());\n                 if (((NotificationTask) task).isExecuted() && StringUtils.isBlank(taskTO.getLatestExecStatus())) {\n                     taskTO.setLatestExecStatus(\"[EXECUTED]\");\n                 }"},{"sha":"e5982c4888de64912856a55e4ba162bfaa11e5e1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -227,7 +227,7 @@ private NotificationTask getNotificationTask(\n         NotificationTask task = entityFactory.newEntity(NotificationTask.class);\n         task.setNotification(notification);\n         if (any != null) {\n-            task.setAnyKey(any.getKey());\n+            task.setEntityKey(any.getKey());\n             task.setAnyTypeKind(any.getType().getKind());\n         }\n         task.setTraceLevel(notification.getTraceLevel());"},{"sha":"2dd64dd00c0f2a857110d3b28bc9be19a84bbe78","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -76,7 +76,7 @@ public <T extends AbstractTaskTO> PagedResult<T> list(final TaskQuery query) {\n                         query.getResource(),\n                         query.getNotification(),\n                         query.getAnyTypeKind(),\n-                        query.getAnyTypeKey(),\n+                        query.getEntityKey(),\n                         query.getPage(),\n                         query.getSize(),\n                         getOrderByClauses(query.getOrderBy()),\n@@ -88,7 +88,7 @@ public <T extends AbstractTaskTO> PagedResult<T> list(final TaskQuery query) {\n                         query.getResource(),\n                         query.getNotification(),\n                         query.getAnyTypeKind(),\n-                        query.getAnyTypeKey()));\n+                        query.getEntityKey()));\n     }\n \n     @Override"},{"sha":"68a5bdedfc634e85ebec712d5a09505174c1993b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PropagationTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -95,7 +95,7 @@ public void bulkAction() {\n \n         List<PropagationTaskTO> tasks = new ArrayList<>(\n                 taskService.<PropagationTaskTO>list(new TaskQuery.Builder(TaskType.PROPAGATION).\n-                        anyTypeKind(AnyTypeKind.USER).anyTypeKey(userTO.getKey()).build()).\n+                        anyTypeKind(AnyTypeKind.USER).entityKey(userTO.getKey()).build()).\n                 getResult());\n         assertFalse(tasks.isEmpty());\n "},{"sha":"febe08194c94b83176fe809a4ed6a1eb1a992333","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c10ea28819e0de686b9719617c647db219214c50/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c10ea28819e0de686b9719617c647db219214c50/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=c10ea28819e0de686b9719617c647db219214c50","patch":"@@ -129,7 +129,7 @@ public void createUserWithNoPropagation() {\n \n         // get the propagation task just created\n         PagedResult<PropagationTaskTO> tasks = taskService.list(new TaskQuery.Builder(TaskType.PROPAGATION).\n-                anyTypeKind(AnyTypeKind.USER).anyTypeKey(userTO.getKey()).page(1).size(1).build());\n+                anyTypeKind(AnyTypeKind.USER).entityKey(userTO.getKey()).page(1).size(1).build());\n         assertNotNull(tasks);\n         assertFalse(tasks.getResult().isEmpty());\n "}]}