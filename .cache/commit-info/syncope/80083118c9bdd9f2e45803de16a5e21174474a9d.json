{"sha":"80083118c9bdd9f2e45803de16a5e21174474a9d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgwMDgzMTE4YzliZGQ5ZjJlNDU4MDNkZTE2YTVlMjExNzQ0NzRhOWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-30T10:22:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-30T10:22:36Z"},"message":"[SYNCOPE-956] Restoring 'pure' classNames behavior for SAML 2 SP ext","tree":{"sha":"e667a4cd6d15f8db754fab63eade8776b68b6e0f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e667a4cd6d15f8db754fab63eade8776b68b6e0f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/80083118c9bdd9f2e45803de16a5e21174474a9d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80083118c9bdd9f2e45803de16a5e21174474a9d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/80083118c9bdd9f2e45803de16a5e21174474a9d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80083118c9bdd9f2e45803de16a5e21174474a9d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"837099618652d30078eb8d8759ca0efcaddcdc6b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/837099618652d30078eb8d8759ca0efcaddcdc6b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/837099618652d30078eb8d8759ca0efcaddcdc6b"}],"stats":{"total":134,"additions":50,"deletions":84},"files":[{"sha":"aa3dec5a8570082820edbc8e9e55a2422c8efda4","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -110,7 +110,7 @@ private final class IdP extends WizardStep {\n             fields.add(createUnmatching);\n \n             AjaxCheckBoxPanel selfRegUnmatching = new AjaxCheckBoxPanel(\n-                    \"field\", \"selfRegUnmatching\", new PropertyModel<Boolean>(idpTO, \"selfRegUnmatching\"), false);\n+                    \"field\", \"selfRegUnmatching\", new PropertyModel<>(idpTO, \"selfRegUnmatching\"), false);\n             fields.add(selfRegUnmatching);\n \n             AjaxCheckBoxPanel updateMatching = new AjaxCheckBoxPanel(\n@@ -131,14 +131,14 @@ private final class IdP extends WizardStep {\n             bindingType.setChoices(Arrays.asList(SAML2BindingType.values()));\n             fields.add(bindingType);\n \n-            AjaxPalettePanel<String> actions = new AjaxPalettePanel.Builder<String>().\n+            AjaxPalettePanel<String> actionsClassNames = new AjaxPalettePanel.Builder<String>().\n                     setAllowMoveAll(true).setAllowOrder(true).\n-                    setName(new StringResourceModel(\"actions\", directoryPanel).getString()).\n+                    setName(new StringResourceModel(\"actionsClassNames\", directoryPanel).getString()).\n                     build(\"field\",\n-                            new PropertyModel<List<String>>(idpTO, \"actions\"),\n+                            new PropertyModel<>(idpTO, \"actionsClassNames\"),\n                             new ListModel<>(actionsClasses.getObject()));\n-            actions.setOutputMarkupId(true);\n-            fields.add(actions);\n+            actionsClassNames.setOutputMarkupId(true);\n+            fields.add(actionsClassNames);\n \n             add(new ListView<Component>(\"fields\", fields) {\n "},{"sha":"c2ecfe32282c6de24c9ba204ac559c0f7b0a493e","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -24,6 +24,6 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actions=Actions\n+actionsClassNames=Actions\n template.title=user template\n selfRegUnmatching=SAML-initiated self-registration"},{"sha":"bf8fa9e474c822faf88dbe45ec07672b65d100a4","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -24,6 +24,6 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actions=Azioni\n+actionsClassNames=Azioni\n template.title=template utenti\n selfRegUnmatching=SAML-initiated self-registration"},{"sha":"48361163400b8bbdc635c1523449338e5d41c67c","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -24,6 +24,6 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actions=Actions\n+actionsClassNames=Actions\n template.title=user template\n selfRegUnmatching=SAML-initiated self-registration"},{"sha":"f0031744974bf61c20abbb87b91f4f9bd27af339","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -24,6 +24,6 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actions=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n+actionsClassNames=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n template.title=user template\n selfRegUnmatching=SAML-initiated self-registration"},{"sha":"14fe76fab091a8c079b39c6f464a645c3bd2a227","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2IdPTO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -61,7 +61,7 @@ public class SAML2IdPTO extends AbstractBaseBean implements EntityTO, ItemContai\n \n     private final List<ItemTO> items = new ArrayList<>();\n \n-    private final List<String> actions = new ArrayList<>();\n+    private final List<String> actionsClassNames = new ArrayList<>();\n \n     @Override\n     public String getKey() {\n@@ -190,11 +190,11 @@ public boolean remove(final ItemTO item) {\n         return this.items.remove(item);\n     }\n \n-    @XmlElementWrapper(name = \"actions\")\n-    @XmlElement(name = \"action\")\n+    @XmlElementWrapper(name = \"actionsClassNames\")\n+    @XmlElement(name = \"actionsClassNames\")\n     @JsonProperty(\"actions\")\n-    public List<String> getActions() {\n-        return actions;\n+    public List<String> getActionsClassNames() {\n+        return actionsClassNames;\n     }\n \n     public boolean isSupportUnsolicited() {"},{"sha":"4318069dffcaa2bfbf411f914a8ec3f02f8bb878","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2IdPEntity.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -158,8 +158,8 @@ public UserTO getUserTemplate() {\n         return idpTO.getUserTemplate();\n     }\n \n-    public List<String> getActions() {\n-        return idpTO.getActions();\n+    public List<String> getActionsClassNames() {\n+        return idpTO.getActionsClassNames();\n     }\n \n     public Endpoint getSSOLocation(final SAML2BindingType bindingType) {"},{"sha":"d3f763bebd55208e43d02b82061f0739fc04d112","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":9,"deletions":19,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -35,12 +35,10 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n-import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.SAML2IdPDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n-import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdP;\n@@ -77,9 +75,6 @@ public class SAML2UserManager {\n     @Autowired\n     private PlainSchemaDAO plainSchemaDAO;\n \n-    @Autowired\n-    private ImplementationDAO implementationDAO;\n-\n     @Autowired\n     private IntAttrNameParser intAttrNameParser;\n \n@@ -179,20 +174,15 @@ public List<String> findMatchingUser(final String keyValue, final String idpKey)\n     private List<SAML2IdPActions> getActions(final SAML2IdPEntity idp) {\n         List<SAML2IdPActions> actions = new ArrayList<>();\n \n-        idp.getActions().forEach(key -> {\n-            Implementation impl = implementationDAO.find(key);\n-            if (impl == null) {\n-                LOG.warn(\"Invalid implementation: {}\", key);\n-            } else {\n-                try {\n-                    Class<?> actionsClass = Class.forName(impl.getBody());\n-                    SAML2IdPActions idpActions = (SAML2IdPActions) ApplicationContextProvider.getBeanFactory().\n-                            createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n-\n-                    actions.add(idpActions);\n-                } catch (Exception e) {\n-                    LOG.warn(\"Class '{}' not found\", impl.getBody(), e);\n-                }\n+        idp.getActionsClassNames().forEach(className -> {\n+            try {\n+                Class<?> actionsClass = Class.forName(className);\n+                SAML2IdPActions idpActions = (SAML2IdPActions) ApplicationContextProvider.getBeanFactory().\n+                        createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n+\n+                actions.add(idpActions);\n+            } catch (Exception e) {\n+                LOG.warn(\"Class '{}' not found\", className, e);\n             }\n         });\n "},{"sha":"91bb69fd7b4bf180d3bf2092ab4c7fe2ed2ebb4e","filename":"ext/saml2sp/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/SAML2IdP.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -72,7 +72,5 @@ public interface SAML2IdP extends Entity {\n \n     List<? extends SAML2IdPItem> getItems();\n \n-    boolean add(Implementation action);\n-\n-    List<? extends Implementation> getActions();\n+    List<String> getActionsClassNames();\n }"},{"sha":"2705f5e40036e1367288b400f3fe2d8dc6e327f5","filename":"ext/saml2sp/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASAML2IdP.java","status":"modified","additions":9,"deletions":19,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -24,22 +24,20 @@\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n+import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n+import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n-import javax.persistence.JoinTable;\n import javax.persistence.Lob;\n-import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n import org.apache.commons.lang3.ArrayUtils;\n-import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n-import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdP;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdPItem;\n import org.apache.syncope.core.persistence.api.entity.SAML2UserTemplate;\n@@ -99,13 +97,12 @@ public class JPASAML2IdP extends AbstractGeneratedKeyEntity implements SAML2IdP\n     @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"idp\")\n     private JPASAML2UserTemplate userTemplate;\n \n-    @ManyToMany(fetch = FetchType.EAGER)\n-    @JoinTable(name = TABLE + \"Action\",\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    @Column(name = \"actionClassName\")\n+    @CollectionTable(name = TABLE + \"_actionsClassNames\",\n             joinColumns =\n-            @JoinColumn(name = \"idp_id\"),\n-            inverseJoinColumns =\n-            @JoinColumn(name = \"implementation_id\"))\n-    private List<JPAImplementation> actions = new ArrayList<>();\n+            @JoinColumn(name = \"saml2IdP_id\", referencedColumnName = \"id\"))\n+    private List<String> actionsClassNames = new ArrayList<>();\n \n     @Override\n     public String getEntityID() {\n@@ -231,14 +228,7 @@ public void setConnObjectKeyItem(final SAML2IdPItem item) {\n     }\n \n     @Override\n-    public boolean add(final Implementation action) {\n-        checkType(action, JPAImplementation.class);\n-        checkImplementationType(action, ImplementationType.LOGIC_ACTIONS);\n-        return this.actions.add((JPAImplementation) action);\n-    }\n-\n-    @Override\n-    public List<? extends Implementation> getActions() {\n-        return actions;\n+    public List<String> getActionsClassNames() {\n+        return actionsClassNames;\n     }\n }"},{"sha":"0d30a5073d0a17c58d6ab1a15b8044f4d07eaaa3","filename":"ext/saml2sp/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SAML2IdPDataBinderImpl.java","status":"modified","additions":14,"deletions":26,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80083118c9bdd9f2e45803de16a5e21174474a9d/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java?ref=80083118c9bdd9f2e45803de16a5e21174474a9d","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.core.provisioning.java.data;\n \n+import java.text.ParseException;\n import java.util.Base64;\n import java.util.stream.Collectors;\n-import java.text.ParseException;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -32,13 +32,16 @@\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n-import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.SAML2IdPDAO;\n-import org.apache.syncope.core.persistence.api.entity.Implementation;\n+import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n+import org.apache.syncope.core.persistence.api.entity.DerSchema;\n+import org.apache.syncope.core.persistence.api.entity.Entity;\n+import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.SAML2EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdP;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdPItem;\n import org.apache.syncope.core.persistence.api.entity.SAML2UserTemplate;\n+import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.provisioning.api.IntAttrName;\n import org.apache.syncope.core.provisioning.api.data.SAML2IdPDataBinder;\n import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n@@ -62,9 +65,6 @@ public class SAML2IdPDataBinderImpl implements SAML2IdPDataBinder {\n     @Autowired\n     private SAML2IdPDAO saml2IdPDAO;\n \n-    @Autowired\n-    private ImplementationDAO implementationDAO;\n-\n     @Autowired\n     private SAML2EntityFactory entityFactory;\n \n@@ -201,32 +201,22 @@ public SAML2IdP update(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n         AnyTypeClassTO allowedSchemas = new AnyTypeClassTO();\n         anyTypeDAO.findUser().getClasses().forEach(anyTypeClass -> {\n             allowedSchemas.getPlainSchemas().addAll(anyTypeClass.getPlainSchemas().stream().\n-                    map(s -> s.getKey()).collect(Collectors.toList()));\n+                    map(Entity::getKey).collect(Collectors.toList()));\n             allowedSchemas.getDerSchemas().addAll(anyTypeClass.getDerSchemas().stream().\n-                    map(s -> s.getKey()).collect(Collectors.toList()));\n+                    map(Entity::getKey).collect(Collectors.toList()));\n             allowedSchemas.getVirSchemas().addAll(anyTypeClass.getVirSchemas().stream().\n-                    map(s -> s.getKey()).collect(Collectors.toList()));\n+                    map(Entity::getKey).collect(Collectors.toList()));\n         });\n         populateItems(idpTO, idp, allowedSchemas);\n \n-        idpTO.getActions().forEach(implementationKey -> {\n-            Implementation implementation = implementationDAO.find(implementationKey);\n-            if (implementation == null) {\n-                LOG.debug(\"Invalid \" + Implementation.class.getSimpleName() + \"{}, ignoring...\", implementationKey);\n-            } else {\n-                idp.add(implementation);\n-            }\n-        });\n-        // remove all implementations not contained in the TO\n-        idp.getActions().removeAll(idp.getActions().stream().\n-                filter(implementation -> !idpTO.getActions().contains(implementation.getKey())).\n-                collect(Collectors.toList()));\n+        idp.getActionsClassNames().clear();\n+        idp.getActionsClassNames().addAll(idpTO.getActionsClassNames());\n \n         return saml2IdPDAO.save(idp);\n     }\n \n     private void populateItems(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n-        idp.getItems().forEach(item -> {\n+        for (SAML2IdPItem item : idp.getItems()) {\n             ItemTO itemTO = new ItemTO();\n             itemTO.setKey(item.getKey());\n             BeanUtils.copyProperties(item, itemTO, ITEM_IGNORE_PROPERTIES);\n@@ -237,7 +227,7 @@ private void populateItems(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n             } else {\n                 idpTO.add(itemTO);\n             }\n-        });\n+        }\n     }\n \n     @Override\n@@ -261,9 +251,7 @@ public SAML2IdPTO getIdPTO(final SAML2IdP idp) {\n \n         populateItems(idp, idpTO);\n \n-        idp.getActions().forEach(action -> {\n-            idpTO.getActions().add(action.getKey());\n-        });\n+        idpTO.getActionsClassNames().addAll(idp.getActionsClassNames());\n \n         return idpTO;\n     }"}]}