{"sha":"5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVlZTY2ZTExNmU4Y2Q2YTQ5YmE5NGIwMDg2ZDBiNWNjZjc0OTg2YTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-01-15T07:31:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-01-15T07:38:49Z"},"message":"[SYNCOPE-1533] Fixing checkstyle violations","tree":{"sha":"29b57ba19dcac00e265d990d43ca3de950e2b220","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/29b57ba19dcac00e265d990d43ca3de950e2b220"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c1ae2ae798f664b8a5188865d36af9d712647586","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c1ae2ae798f664b8a5188865d36af9d712647586","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c1ae2ae798f664b8a5188865d36af9d712647586"}],"stats":{"total":574,"additions":305,"deletions":269},"files":[{"sha":"d2724f07574ad0882baea59e2c59d2cf218f5120","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ConnInstanceTO.java","status":"modified","additions":22,"deletions":20,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -170,28 +170,30 @@ public void setPoolConf(final ConnPoolConfTO poolConf) {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        ConnInstanceTO that = (ConnInstanceTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        ConnInstanceTO other = (ConnInstanceTO) obj;\n         return new EqualsBuilder().\n-                append(key, that.key).\n-                append(adminRealm, that.adminRealm).\n-                append(location, that.location).\n-                append(connectorName, that.connectorName).\n-                append(bundleName, that.bundleName).\n-                append(version, that.version).\n-                append(conf, that.conf).\n-                append(capabilities, that.capabilities).\n-                append(displayName, that.displayName).\n-                append(connRequestTimeout, that.connRequestTimeout).\n-                append(poolConf, that.poolConf).\n-                isEquals();\n+                append(key, other.key).\n+                append(adminRealm, other.adminRealm).\n+                append(location, other.location).\n+                append(connectorName, other.connectorName).\n+                append(bundleName, other.bundleName).\n+                append(version, other.version).\n+                append(conf, other.conf).\n+                append(capabilities, other.capabilities).\n+                append(displayName, other.displayName).\n+                append(connRequestTimeout, other.connRequestTimeout).\n+                append(poolConf, other.poolConf).\n+                build();\n     }\n \n     @Override\n@@ -208,6 +210,6 @@ public int hashCode() {\n                 append(displayName).\n                 append(connRequestTimeout).\n                 append(poolConf).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"d77bcf0098ecfb7faa823c31b1dffc6dd3394482","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ConnPoolConfTO.java","status":"modified","additions":16,"deletions":14,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -81,22 +81,24 @@ public void setMinEvictableIdleTimeMillis(final Long minEvictableIdleTimeMillis)\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        ConnPoolConfTO that = (ConnPoolConfTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        ConnPoolConfTO other = (ConnPoolConfTO) obj;\n         return new EqualsBuilder().\n-                append(maxObjects, that.maxObjects).\n-                append(minIdle, that.minIdle).\n-                append(maxIdle, that.maxIdle).\n-                append(maxWait, that.maxWait).\n-                append(minEvictableIdleTimeMillis, that.minEvictableIdleTimeMillis).\n-                isEquals();\n+                append(maxObjects, other.maxObjects).\n+                append(minIdle, other.minIdle).\n+                append(maxIdle, other.maxIdle).\n+                append(maxWait, other.maxWait).\n+                append(minEvictableIdleTimeMillis, other.minEvictableIdleTimeMillis).\n+                build();\n     }\n \n     @Override\n@@ -107,6 +109,6 @@ public int hashCode() {\n                 append(maxIdle).\n                 append(maxWait).\n                 append(minEvictableIdleTimeMillis).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"3fe44e7e0e6b786f2f3b6ea9432803055c2971d2","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -95,20 +95,22 @@ public List<ItemTO> getLinkingItems() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        MappingTO mappingTO = (MappingTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        MappingTO other = (MappingTO) obj;\n         return new EqualsBuilder().\n-                append(connObjectLink, mappingTO.connObjectLink).\n-                append(items, mappingTO.items).\n-                append(linkingItems, mappingTO.linkingItems).\n-                isEquals();\n+                append(connObjectLink, other.connObjectLink).\n+                append(items, other.items).\n+                append(linkingItems, other.linkingItems).\n+                build();\n     }\n \n     @Override\n@@ -117,6 +119,6 @@ public int hashCode() {\n                 append(connObjectLink).\n                 append(items).\n                 append(linkingItems).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"758f28dc4aa5a4b4121ff66b521adb6341ac6f6a","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/OrgUnitTO.java","status":"modified","additions":17,"deletions":15,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -127,23 +127,25 @@ public boolean remove(final ItemTO item) {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        OrgUnitTO orgUnitTO = (OrgUnitTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        OrgUnitTO other = (OrgUnitTO) obj;\n         return new EqualsBuilder().\n-                append(ignoreCaseMatch, orgUnitTO.ignoreCaseMatch).\n-                append(key, orgUnitTO.key).\n-                append(objectClass, orgUnitTO.objectClass).\n-                append(syncToken, orgUnitTO.syncToken).\n-                append(connObjectLink, orgUnitTO.connObjectLink).\n-                append(items, orgUnitTO.items).\n-                isEquals();\n+                append(ignoreCaseMatch, other.ignoreCaseMatch).\n+                append(key, other.key).\n+                append(objectClass, other.objectClass).\n+                append(syncToken, other.syncToken).\n+                append(connObjectLink, other.connObjectLink).\n+                append(items, other.items).\n+                build();\n     }\n \n     @Override\n@@ -155,6 +157,6 @@ public int hashCode() {\n                 append(ignoreCaseMatch).\n                 append(connObjectLink).\n                 append(items).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"8aece806ce9855879d274c23cf31addc546bc1ed","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/PagedConnObjectTOResult.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -94,17 +94,17 @@ public void setRemainingPagedResults(final int remainingPagedResults) {\n     }\n \n     /**\n-     * Returns a flag indicating whether all the results that match a search query were returned.\n+     * Returns a flag indicating whether all the results other match a search query were returned.\n      *\n-     * @return true if the search returned all the results that match the query, false if the returned\n+     * @return true if the search returned all the results other match the query, false if the returned\n      * result is not complete, e.g. if the server returned only part of the results due to server limits, errors, etc.\n      */\n     public boolean isAllResultsReturned() {\n         return allResultsReturned;\n     }\n \n     /**\n-     * @param allResultsReturned Set to true if the search returned all the results that match the query. Set to false\n+     * @param allResultsReturned Set to true if the search returned all the results other match the query. Set to false\n      * if the returned result is not complete, e.g. if the server returned only part of the results due to server\n      * limits, errors, etc.\n      */"},{"sha":"2e57792d8c37c2ca09a3eb1239aa9c5d870813f8","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisionTO.java","status":"modified","additions":20,"deletions":18,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -125,26 +125,28 @@ public List<String> getVirSchemas() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        ProvisionTO that = (ProvisionTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        ProvisionTO other = (ProvisionTO) obj;\n         return new EqualsBuilder().\n-                append(ignoreCaseMatch, that.ignoreCaseMatch).\n-                append(key, that.key).\n-                append(anyType, that.anyType).\n-                append(objectClass, that.objectClass).\n-                append(auxClasses, that.auxClasses).\n-                append(syncToken, that.syncToken).\n-                append(uidOnCreate, that.uidOnCreate).\n-                append(mapping, that.mapping).\n-                append(virSchemas, that.virSchemas).\n-                isEquals();\n+                append(ignoreCaseMatch, other.ignoreCaseMatch).\n+                append(key, other.key).\n+                append(anyType, other.anyType).\n+                append(objectClass, other.objectClass).\n+                append(auxClasses, other.auxClasses).\n+                append(syncToken, other.syncToken).\n+                append(uidOnCreate, other.uidOnCreate).\n+                append(mapping, other.mapping).\n+                append(virSchemas, other.virSchemas).\n+                build();\n     }\n \n     @Override\n@@ -159,6 +161,6 @@ public int hashCode() {\n                 append(uidOnCreate).\n                 append(mapping).\n                 append(virSchemas).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"8581d545cd22bea46dd9fc5b8b5d8477d24706fd","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":31,"deletions":29,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -255,37 +255,39 @@ public List<String> getPropagationActions() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        ResourceTO that = (ResourceTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        ResourceTO other = (ResourceTO) obj;\n         return new EqualsBuilder().\n-                append(randomPwdIfNotProvided, that.randomPwdIfNotProvided).\n-                append(enforceMandatoryCondition, that.enforceMandatoryCondition).\n-                append(overrideCapabilities, that.overrideCapabilities).\n-                append(key, that.key).\n-                append(connector, that.connector).\n-                append(connectorDisplayName, that.connectorDisplayName).\n-                append(provisions, that.provisions).\n-                append(orgUnit, that.orgUnit).\n-                append(propagationPriority, that.propagationPriority).\n-                append(createTraceLevel, that.createTraceLevel).\n-                append(updateTraceLevel, that.updateTraceLevel).\n-                append(deleteTraceLevel, that.deleteTraceLevel).\n-                append(provisioningTraceLevel, that.provisioningTraceLevel).\n-                append(passwordPolicy, that.passwordPolicy).\n-                append(accountPolicy, that.accountPolicy).\n-                append(pullPolicy, that.pullPolicy).\n-                append(pushPolicy, that.pushPolicy).\n-                append(confOverride, that.confOverride).\n-                append(capabilitiesOverride, that.capabilitiesOverride).\n-                append(propagationActions, that.propagationActions).\n-                isEquals();\n+                append(randomPwdIfNotProvided, other.randomPwdIfNotProvided).\n+                append(enforceMandatoryCondition, other.enforceMandatoryCondition).\n+                append(overrideCapabilities, other.overrideCapabilities).\n+                append(key, other.key).\n+                append(connector, other.connector).\n+                append(connectorDisplayName, other.connectorDisplayName).\n+                append(provisions, other.provisions).\n+                append(orgUnit, other.orgUnit).\n+                append(propagationPriority, other.propagationPriority).\n+                append(createTraceLevel, other.createTraceLevel).\n+                append(updateTraceLevel, other.updateTraceLevel).\n+                append(deleteTraceLevel, other.deleteTraceLevel).\n+                append(provisioningTraceLevel, other.provisioningTraceLevel).\n+                append(passwordPolicy, other.passwordPolicy).\n+                append(accountPolicy, other.accountPolicy).\n+                append(pullPolicy, other.pullPolicy).\n+                append(pushPolicy, other.pushPolicy).\n+                append(confOverride, other.confOverride).\n+                append(capabilitiesOverride, other.capabilitiesOverride).\n+                append(propagationActions, other.propagationActions).\n+                build();\n     }\n \n     @Override\n@@ -311,6 +313,6 @@ public int hashCode() {\n                 append(overrideCapabilities).\n                 append(capabilitiesOverride).\n                 append(propagationActions).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"ea2e4a77895caa4f1793349984e8e2f2aa0883fd","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PasswordPolicyTO.java","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPasswordPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPasswordPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPasswordPolicyTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -76,21 +76,23 @@ public List<String> getRules() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        PasswordPolicyTO that = (PasswordPolicyTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        PasswordPolicyTO other = (PasswordPolicyTO) obj;\n         return new EqualsBuilder().\n-                appendSuper(super.equals(o)).\n-                append(allowNullPassword, that.allowNullPassword).\n-                append(historyLength, that.historyLength).\n-                append(rules, that.rules).\n-                isEquals();\n+                appendSuper(super.equals(obj)).\n+                append(allowNullPassword, other.allowNullPassword).\n+                append(historyLength, other.historyLength).\n+                append(rules, other.rules).\n+                build();\n     }\n \n     @Override\n@@ -100,6 +102,6 @@ public int hashCode() {\n                 append(allowNullPassword).\n                 append(historyLength).\n                 append(rules).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"0028a13a1e63bc1922a59cb77e3a1369e75ebb3b","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PolicyTO.java","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -105,22 +105,24 @@ public List<String> getUsedByRealms() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        PolicyTO policyTO = (PolicyTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        PolicyTO policyTO = (PolicyTO) obj;\n         return new EqualsBuilder().\n                 append(discriminator, policyTO.discriminator).\n                 append(key, policyTO.key).\n                 append(description, policyTO.description).\n                 append(usedByResources, policyTO.usedByResources).\n                 append(usedByRealms, policyTO.usedByRealms).\n-                isEquals();\n+                build();\n     }\n \n     @Override\n@@ -131,6 +133,6 @@ public int hashCode() {\n                 append(description).\n                 append(usedByResources).\n                 append(usedByRealms).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"54a9318202a8422653fdf7e17cf6241574605291","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AccessTokenTO.java","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -76,21 +76,23 @@ public void setOwner(final String owner) {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        AccessTokenTO that = (AccessTokenTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        AccessTokenTO other = (AccessTokenTO) obj;\n         return new EqualsBuilder().\n-                append(key, that.key).\n-                append(body, that.body).\n-                append(expiryTime, that.expiryTime).\n-                append(owner, that.owner).\n-                isEquals();\n+                append(key, other.key).\n+                append(body, other.body).\n+                append(expiryTime, other.expiryTime).\n+                append(owner, other.owner).\n+                build();\n     }\n \n     @Override\n@@ -100,6 +102,6 @@ public int hashCode() {\n                 append(body).\n                 append(expiryTime).\n                 append(owner).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"53c9e6670780fb41ebbb589ca8682eaffea989f7","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeTO.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -69,20 +69,22 @@ public List<String> getClasses() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        AnyTypeTO anyTypeTO = (AnyTypeTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        AnyTypeTO other = (AnyTypeTO) obj;\n         return new EqualsBuilder().\n-                append(key, anyTypeTO.key).\n-                append(kind, anyTypeTO.kind).\n-                append(classes, anyTypeTO.classes).\n-                isEquals();\n+                append(key, other.key).\n+                append(kind, other.kind).\n+                append(classes, other.classes).\n+                build();\n     }\n \n     @Override\n@@ -91,6 +93,6 @@ public int hashCode() {\n                 append(key).\n                 append(kind).\n                 append(classes).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"37b397df139f6c2a4ca439f50c4a8269ef739f28","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ItemTO.java","status":"modified","additions":22,"deletions":20,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -38,7 +38,7 @@ public class ItemTO implements EntityTO {\n     private String key;\n \n     /**\n-     * Attribute schema to be mapped. Consider that we can associate tha same attribute schema more than once, with\n+     * Attribute schema to be mapped. Consider other we can associate tha same attribute schema more than once, with\n      * different aliases, to different resource attributes.\n      */\n     private String intAttrName;\n@@ -162,27 +162,29 @@ public List<String> getTransformers() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        ItemTO itemTO = (ItemTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        ItemTO other = (ItemTO) obj;\n         return new EqualsBuilder().\n-                append(connObjectKey, itemTO.connObjectKey).\n-                append(password, itemTO.password).\n-                append(key, itemTO.key).\n-                append(intAttrName, itemTO.intAttrName).\n-                append(extAttrName, itemTO.extAttrName).\n-                append(mandatoryCondition, itemTO.mandatoryCondition).\n-                append(purpose, itemTO.purpose).\n-                append(propagationJEXLTransformer, itemTO.propagationJEXLTransformer).\n-                append(pullJEXLTransformer, itemTO.pullJEXLTransformer).\n-                append(transformers, itemTO.transformers).\n-                isEquals();\n+                append(connObjectKey, other.connObjectKey).\n+                append(password, other.password).\n+                append(key, other.key).\n+                append(intAttrName, other.intAttrName).\n+                append(extAttrName, other.extAttrName).\n+                append(mandatoryCondition, other.mandatoryCondition).\n+                append(purpose, other.purpose).\n+                append(propagationJEXLTransformer, other.propagationJEXLTransformer).\n+                append(pullJEXLTransformer, other.pullJEXLTransformer).\n+                append(transformers, other.transformers).\n+                build();\n     }\n \n     @Override\n@@ -198,6 +200,6 @@ public int hashCode() {\n                 append(propagationJEXLTransformer).\n                 append(pullJEXLTransformer).\n                 append(transformers).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"d93bce3a87dc68ca89439b0c70811ea363f61b25","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/MailTemplateTO.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -44,24 +44,26 @@ public void setKey(final String key) {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        MailTemplateTO that = (MailTemplateTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        MailTemplateTO other = (MailTemplateTO) obj;\n         return new EqualsBuilder().\n-                append(key, that.key).\n-                isEquals();\n+                append(key, other.key).\n+                build();\n     }\n \n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n                 append(key).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"03a090581d98f37c48796a1976df1517c591ee0d","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RealmTO.java","status":"modified","additions":20,"deletions":18,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -134,26 +134,28 @@ public Set<String> getResources() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        RealmTO realmTO = (RealmTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        RealmTO other = (RealmTO) obj;\n         return new EqualsBuilder().\n-                append(key, realmTO.key).\n-                append(name, realmTO.name).\n-                append(parent, realmTO.parent).\n-                append(fullPath, realmTO.fullPath).\n-                append(accountPolicy, realmTO.accountPolicy).\n-                append(passwordPolicy, realmTO.passwordPolicy).\n-                append(actions, realmTO.actions).\n-                append(templates, realmTO.templates).\n-                append(resources, realmTO.resources).\n-                isEquals();\n+                append(key, other.key).\n+                append(name, other.name).\n+                append(parent, other.parent).\n+                append(fullPath, other.fullPath).\n+                append(accountPolicy, other.accountPolicy).\n+                append(passwordPolicy, other.passwordPolicy).\n+                append(actions, other.actions).\n+                append(templates, other.templates).\n+                append(resources, other.resources).\n+                build();\n     }\n \n     @Override\n@@ -168,6 +170,6 @@ public int hashCode() {\n                 append(actions).\n                 append(templates).\n                 append(resources).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"97a764f0e5c974d4fa3b5657f85b7324fff11073","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/RoleTO.java","status":"modified","additions":17,"deletions":15,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -97,23 +97,25 @@ public Set<String> getPrivileges() {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        RoleTO roleTO = (RoleTO) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        RoleTO other = (RoleTO) obj;\n         return new EqualsBuilder().\n-                append(key, roleTO.key).\n-                append(entitlements, roleTO.entitlements).\n-                append(realms, roleTO.realms).\n-                append(dynRealms, roleTO.dynRealms).\n-                append(dynMembershipCond, roleTO.dynMembershipCond).\n-                append(privileges, roleTO.privileges).\n-                isEquals();\n+                append(key, other.key).\n+                append(entitlements, other.entitlements).\n+                append(realms, other.realms).\n+                append(dynRealms, other.dynRealms).\n+                append(dynMembershipCond, other.dynMembershipCond).\n+                append(privileges, other.privileges).\n+                build();\n     }\n \n     @Override\n@@ -125,6 +127,6 @@ public int hashCode() {\n                 append(dynRealms).\n                 append(dynMembershipCond).\n                 append(privileges).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"c90f8c2d6e4b39bd7ac7af6c71312bf40e49c40e","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AbstractQuery.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -112,20 +112,22 @@ public void setOrderBy(final String orderBy) {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        AbstractQuery that = (AbstractQuery) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        AbstractQuery other = (AbstractQuery) obj;\n         return new EqualsBuilder().\n-                append(page, that.page).\n-                append(size, that.size).\n-                append(orderBy, that.orderBy).\n-                isEquals();\n+                append(page, other.page).\n+                append(size, other.size).\n+                append(orderBy, other.orderBy).\n+                build();\n     }\n \n     @Override\n@@ -134,6 +136,6 @@ public int hashCode() {\n                 append(page).\n                 append(size).\n                 append(orderBy).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"be380378ad69b2c11483a7378ee3d8765f7b2030","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AnyQuery.java","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyQuery.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -109,21 +109,23 @@ public void setFiql(final String fiql) {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        AnyQuery anyQuery = (AnyQuery) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        AnyQuery other = (AnyQuery) obj;\n         return new EqualsBuilder().\n-                appendSuper(super.equals(o)).\n-                append(realm, anyQuery.realm).\n-                append(details, anyQuery.details).\n-                append(fiql, anyQuery.fiql).\n-                isEquals();\n+                appendSuper(super.equals(obj)).\n+                append(realm, other.realm).\n+                append(details, other.details).\n+                append(fiql, other.fiql).\n+                build();\n     }\n \n     @Override\n@@ -133,6 +135,6 @@ public int hashCode() {\n                 append(realm).\n                 append(details).\n                 append(fiql).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"e307d3e2bc106979aebfe6429f2f471fecb12695","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ExecQuery.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecQuery.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -53,26 +53,28 @@ public void setKey(final String key) {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        ExecQuery execQuery = (ExecQuery) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        ExecQuery other = (ExecQuery) obj;\n         return new EqualsBuilder().\n-                appendSuper(super.equals(o)).\n-                append(key, execQuery.key).\n-                isEquals();\n+                appendSuper(super.equals(obj)).\n+                append(key, other.key).\n+                build();\n     }\n \n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n                 appendSuper(super.hashCode()).\n                 append(key).\n-                toHashCode();\n+                build();\n     }\n }"},{"sha":"db87ce7ad8fb064411ac44f7db9f7efe8145e753","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/SchemaQuery.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FSchemaQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FSchemaQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FSchemaQuery.java?ref=5ee66e116e8cd6a49ba94b0086d0b5ccf74986a2","patch":"@@ -108,20 +108,22 @@ public void setKeyword(final String keyword) {\n     }\n \n     @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n             return true;\n-\n-        if (o == null || getClass() != o.getClass())\n+        }\n+        if (obj == null) {\n             return false;\n-\n-        SchemaQuery that = (SchemaQuery) o;\n-\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        SchemaQuery other = (SchemaQuery) obj;\n         return new EqualsBuilder().\n-                append(type, that.type).\n-                append(anyTypeClasses, that.anyTypeClasses).\n-                append(keyword, that.keyword).\n-                isEquals();\n+                append(type, other.type).\n+                append(anyTypeClasses, other.anyTypeClasses).\n+                append(keyword, other.keyword).\n+                build();\n     }\n \n     @Override\n@@ -130,6 +132,6 @@ public int hashCode() {\n                 append(type).\n                 append(anyTypeClasses).\n                 append(keyword).\n-                toHashCode();\n+                build();\n     }\n }"}]}