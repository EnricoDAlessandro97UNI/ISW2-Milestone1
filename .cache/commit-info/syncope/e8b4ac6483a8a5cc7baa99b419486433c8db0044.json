{"sha":"e8b4ac6483a8a5cc7baa99b419486433c8db0044","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU4YjRhYzY0ODNhOGE1Y2M3YmFhOTliNDE5NDg2NDMzYzhkYjAwNDQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-30T11:36:08Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-30T11:36:08Z"},"message":"[SYNCOPE-122] Console extension completed featuring on-the-fly selection for resources added (directly or via role selection) but not yet submitted\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440351 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9731338e0a689ce6d8226b586e2bbd3520277888","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9731338e0a689ce6d8226b586e2bbd3520277888"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e8b4ac6483a8a5cc7baa99b419486433c8db0044","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e8b4ac6483a8a5cc7baa99b419486433c8db0044","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e8b4ac6483a8a5cc7baa99b419486433c8db0044","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e8b4ac6483a8a5cc7baa99b419486433c8db0044/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fa8fe969f8f3cfcc456ec0148abbd7e38b10e6e6"}],"stats":{"total":468,"additions":345,"deletions":123},"files":[{"sha":"a5e33122175005c67a884b4246df75c326d878b5","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractAttributableTO.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractAttributableTO.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -25,11 +25,9 @@\n import java.util.List;\r\n import java.util.Map;\r\n import java.util.Set;\r\n-\r\n import javax.xml.bind.annotation.XmlElement;\r\n import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlType;\r\n-\r\n import org.codehaus.jackson.annotate.JsonIgnore;\r\n \r\n @XmlType\r"},{"sha":"83b10597e088574badbf63710aa9c9e942959560","filename":"common/src/main/java/org/apache/syncope/common/to/UserTO.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FUserTO.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -25,12 +25,10 @@\n import java.util.HashMap;\r\n import java.util.List;\r\n import java.util.Map;\r\n-\r\n import javax.xml.bind.annotation.XmlElement;\r\n import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n-\r\n import org.apache.commons.lang.builder.ReflectionToStringBuilder;\r\n import org.apache.commons.lang.builder.ToStringStyle;\r\n import org.codehaus.jackson.annotate.JsonIgnore;\r"},{"sha":"f827e647dd93de37bfc3eae4044bd630d3ea1094","filename":"console/src/main/java/org/apache/syncope/console/commons/RoleTreeBuilder.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -23,11 +23,9 @@\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n-\n import javax.swing.tree.DefaultMutableTreeNode;\n import javax.swing.tree.DefaultTreeModel;\n import javax.swing.tree.TreeModel;\n-\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.console.rest.RoleRestClient;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -39,6 +37,8 @@ public class RoleTreeBuilder {\n \n     private final RoleTOComparator comparator = new RoleTOComparator();\n \n+    private List<RoleTO> allRoles;\n+\n     private List<RoleTO> getChildRoles(final long parentRoleId, final List<RoleTO> roles) {\n         List<RoleTO> result = new ArrayList<RoleTO>();\n         for (RoleTO role : roles) {\n@@ -62,8 +62,13 @@ private void populateSubtree(final DefaultMutableTreeNode subRoot, final List<Ro\n         }\n     }\n \n+    public List<RoleTO> getAllRoles() {\n+        return this.allRoles;\n+    }\n+\n     public TreeModel build() {\n-        return build(restClient.list());\n+        this.allRoles = this.restClient.list();\n+        return build(this.allRoles);\n     }\n \n     public TreeModel build(final List<RoleTO> roles) {"},{"sha":"86248245831a2cefe8f2dd02e1ed9e2b0fdc68fb","filename":"console/src/main/java/org/apache/syncope/console/commons/RoleUtils.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FRoleUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FRoleUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FRoleUtils.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.commons;\n+\n+import org.apache.syncope.common.to.RoleTO;\n+\n+public class RoleUtils {\n+\n+    public static RoleTO findRole(final RoleTreeBuilder roleTreeBuilder, final long roleId) {\n+        RoleTO found = null;\n+        if (roleTreeBuilder.getAllRoles() != null) {\n+            for (RoleTO roleTO : roleTreeBuilder.getAllRoles()) {\n+                if (roleTO.getId() == roleId) {\n+                    found = roleTO;\n+                }\n+            }\n+        }\n+        return found;\n+    }\n+}"},{"sha":"4d26f62175f9ee01c60d65acf195a4480ae3cded","filename":"console/src/main/java/org/apache/syncope/console/commons/SelectChoiceRenderer.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSelectChoiceRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSelectChoiceRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSelectChoiceRenderer.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -20,12 +20,12 @@\n \n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n \n-public class SelectChoiceRenderer implements IChoiceRenderer {\n+public class SelectChoiceRenderer<T> implements IChoiceRenderer<T> {\n \n     private static final long serialVersionUID = -3242441544405909243L;\n \n     @Override\n-    public Object getDisplayValue(Object obj) {\n+    public Object getDisplayValue(T obj) {\n         if (obj instanceof SelectOption) {\n             return ((SelectOption) obj).getDisplayValue();\n         } else {\n@@ -34,7 +34,7 @@ public Object getDisplayValue(Object obj) {\n     }\n \n     @Override\n-    public String getIdValue(Object obj, int i) {\n+    public String getIdValue(T obj, int i) {\n         return obj.toString();\n     }\n }"},{"sha":"4cbdb44437cadfca04ef7cd64870b874d179563a","filename":"console/src/main/java/org/apache/syncope/console/commons/StatusUtils.java","status":"modified","additions":41,"deletions":4,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -23,6 +23,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n@@ -35,8 +36,10 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.IntMappingType;\n+import org.apache.syncope.console.pages.panels.StatusPanel;\n import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n import org.apache.syncope.console.rest.ResourceRestClient;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -46,6 +49,7 @@ public class StatusUtils implements Serializable {\n \n     public enum Status {\n \n+        NOT_YET_SUBMITTED,\n         CREATED,\n         ACTIVE,\n         SUSPENDED,\n@@ -182,14 +186,14 @@ private Boolean isEnabled(final ConnObjectTO objectTO) {\n     private String getAccountLink(final ConnObjectTO objectTO) {\n         final String NAME = \"__NAME__\";\n \n-        final Map<String, AttributeTO> attributeTOs = objectTO != null\n-                ? objectTO.getAttributeMap()\n-                : Collections.EMPTY_MAP;\n+        final Map<String, AttributeTO> attributeTOs = objectTO == null\n+                ? Collections.<String, AttributeTO>emptyMap()\n+                : objectTO.getAttributeMap();\n \n         final AttributeTO name = attributeTOs.get(NAME);\n \n         return name != null && name.getValues() != null && !name.getValues().isEmpty()\n-                ? (String) name.getValues().get(0)\n+                ? name.getValues().get(0)\n                 : null;\n     }\n \n@@ -240,4 +244,37 @@ public static PropagationRequestTO buildPropagationRequestTO(final Collection<St\n \n         return propagationRequestTO;\n     }\n+\n+    public static void update(final StatusPanel statusPanel, final AjaxRequestTarget target,\n+            final Collection<String> resourcesToAdd, final Collection<String> resourcesToRemove) {\n+\n+        if (statusPanel != null) {\n+            Map<String, StatusBean> statusMap = new LinkedHashMap<String, StatusBean>();\n+            for (StatusBean statusBean : statusPanel.getStatusBeans()) {\n+                statusMap.put(statusBean.getResourceName(), statusBean);\n+            }\n+\n+            for (String resource : resourcesToAdd) {\n+                if (!statusMap.keySet().contains(resource)) {\n+                    StatusBean statusBean;\n+                    if (statusPanel.getInitialStatusBeanMap().containsKey(resource)) {\n+                        statusBean = statusPanel.getInitialStatusBeanMap().get(resource);\n+                    } else {\n+                        statusBean = new StatusBean();\n+                        statusBean.setResourceName(resource);\n+                        statusBean.setStatus(StatusUtils.Status.NOT_YET_SUBMITTED);\n+                    }\n+\n+                    statusMap.put(statusBean.getResourceName(), statusBean);\n+                }\n+            }\n+\n+            for (String resource : resourcesToRemove) {\n+                statusMap.remove(resource);\n+            }\n+\n+            statusPanel.updateStatusBeans(new ArrayList<StatusBean>(statusMap.values()));\n+            target.add(statusPanel);\n+        }\n+    }\n }"},{"sha":"acd65fcb6ea02ec2c037e635dc6bdd0657168e84","filename":"console/src/main/java/org/apache/syncope/console/markup/html/CrontabContainer.java","status":"modified","additions":22,"deletions":20,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console.markup.html;\n \n import java.util.Arrays;\n-\n import org.apache.syncope.console.commons.SelectChoiceRenderer;\n import org.apache.syncope.console.commons.SelectOption;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -41,12 +40,13 @@ public class CrontabContainer extends WebMarkupContainer {\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(CrontabContainer.class);\n \n-    private static final SelectOption[] CRON_TEMPLATES = new SelectOption[] {\n-            new SelectOption(\"Unschedule\", \"UNSCHEDULE\"), new SelectOption(\"Every 5 minutes\", \"0 0/5 * * * ?\"),\n-            new SelectOption(\"Fire at 12pm (noon) every day\", \"0 0 12 * * ?\"),\n-            new SelectOption(\"Fire at 12am (midnight) every first day of the month\", \"0 0 0 1 * ?\"),\n-            new SelectOption(\"Fire at 12am (midnight) every last day of the month\", \"0 0 0 L * ?\"),\n-            new SelectOption(\"Fire at 12am (midnight) every Monday\", \"0 0 0 ? * 2\") };\n+    private static final SelectOption[] CRON_TEMPLATES = {\n+        new SelectOption(\"Unschedule\", \"UNSCHEDULE\"), new SelectOption(\"Every 5 minutes\", \"0 0/5 * * * ?\"),\n+        new SelectOption(\"Fire at 12pm (noon) every day\", \"0 0 12 * * ?\"),\n+        new SelectOption(\"Fire at 12am (midnight) every first day of the month\", \"0 0 0 1 * ?\"),\n+        new SelectOption(\"Fire at 12am (midnight) every last day of the month\", \"0 0 0 L * ?\"),\n+        new SelectOption(\"Fire at 12am (midnight) every Monday\", \"0 0 0 ? * 2\")\n+    };\n \n     private static final long serialVersionUID = 7879593326085337650L;\n \n@@ -68,16 +68,16 @@ public CrontabContainer(final String id, final PropertyModel<String> cronExpress\n         super(id);\n         setOutputMarkupId(true);\n \n-        final DropDownChoice<SelectOption> cronTemplateChooser = new DropDownChoice<SelectOption>(\"cronTemplateChooser\") {\n-\n-            private static final long serialVersionUID = -5843424545478691442L;\n+        final DropDownChoice<SelectOption> cronTemplateChooser =\n+                new DropDownChoice<SelectOption>(\"cronTemplateChooser\") {\n \n-            @Override\n-            protected CharSequence getDefaultChoice(final String selected) {\n+                    private static final long serialVersionUID = -5843424545478691442L;\n \n-                return \"<option value=\\\"\\\">\" + getString(\"chooseForTemplate\") + \"</option>\";\n-            }\n-        };\n+                    @Override\n+                    protected CharSequence getDefaultChoice(final String selected) {\n+                        return \"<option value=\\\"\\\">\" + getString(\"chooseForTemplate\") + \"</option>\";\n+                    }\n+                };\n         cronTemplateChooser.setModel(new IModel<SelectOption>() {\n \n             private static final long serialVersionUID = 6762568283146531315L;\n@@ -146,7 +146,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     }\n \n     private String getCronField(final FormComponent formComponent, final int field) {\n-\n         String cronField = null;\n \n         if (formComponent != null) {\n@@ -173,10 +172,13 @@ public String getCronExpression() {\n                 && hours != null && hours.getInput() != null && daysOfMonth != null && daysOfMonth.getInput() != null\n                 && months != null && months.getInput() != null && daysOfWeek != null && daysOfWeek.getInput() != null) {\n \n-            cronExpression = new StringBuilder().append(seconds.getInput().trim()).append(\" \").append(\n-                    minutes.getInput().trim()).append(\" \").append(hours.getInput().trim()).append(\" \").append(\n-                    daysOfMonth.getInput().trim()).append(\" \").append(months.getInput().trim()).append(\" \").append(\n-                    daysOfWeek.getInput().trim()).toString();\n+            cronExpression = new StringBuilder().\n+                    append(seconds.getInput().trim()).append(\" \").\n+                    append(minutes.getInput().trim()).append(\" \").\n+                    append(hours.getInput().trim()).append(\" \").\n+                    append(daysOfMonth.getInput().trim()).append(\" \").\n+                    append(months.getInput().trim()).append(\" \").\n+                    append(daysOfWeek.getInput().trim()).toString();\n         }\n \n         return cronExpression;"},{"sha":"fb46321df6c8aa126ae1ceb368388698621c3eb8","filename":"console/src/main/java/org/apache/syncope/console/pages/EditUserModalPage.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -19,12 +19,13 @@\n package org.apache.syncope.console.pages;\n \n import java.util.ArrayList;\n-import java.util.List;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.util.AttributableOperations;\n import org.apache.syncope.console.commons.StatusBean;\n import org.apache.syncope.console.pages.panels.AccountInformationPanel;\n+import org.apache.syncope.console.pages.panels.MembershipsPanel;\n+import org.apache.syncope.console.pages.panels.ResourcesPanel;\n import org.apache.syncope.console.pages.panels.StatusPanel;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.PageReference;\n@@ -58,14 +59,17 @@ public EditUserModalPage(final PageReference callerPageRef, final ModalWindow wi\n \n         // add resource assignment details in case of update\n         if (userTO.getId() != 0) {\n-            final List<StatusBean> statuses = new ArrayList<StatusBean>();\n-\n             form.addOrReplace(new Label(\"pwdChangeInfo\", new ResourceModel(\"pwdChangeInfo\")));\n \n-            statusPanel = new StatusPanel(\"statuspanel\", userTO, statuses);\n+            statusPanel = new StatusPanel(\"statuspanel\", userTO, new ArrayList<StatusBean>());\n+            statusPanel.setOutputMarkupId(true);\n             form.addOrReplace(statusPanel);\n \n             form.addOrReplace(new AccountInformationPanel(\"accountinformation\", userTO));\n+\n+            form.addOrReplace(new ResourcesPanel(\"resources\", userTO, statusPanel));\n+\n+            form.addOrReplace(new MembershipsPanel(\"memberships\", userTO, false, statusPanel));\n         }\n     }\n "},{"sha":"a21bc44e299f13ed8015402b2224792d08320887","filename":"console/src/main/java/org/apache/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -53,7 +53,6 @@ public MembershipModalPage(final PageReference pageRef, final ModalWindow window\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n-\n                 userTO.removeMembership(membershipTO);\n                 userTO.addMembership(membershipTO);\n "},{"sha":"8bea3b9a09ab2aed196832f13a6e286fbf8d7387","filename":"console/src/main/java/org/apache/syncope/console/pages/UserModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -107,7 +107,7 @@ protected Form setupEditPanel() {\n         form.add(new UserDetailsPanel(\"details\", userTO, form, resetPassword, mode == Mode.TEMPLATE));\n \n         form.add(new Label(\"statuspanel\", \"\"));\n-        \n+\n         form.add(new Label(\"pwdChangeInfo\", \"\"));\n \n         form.add(new Label(\"accountinformation\", \"\"));\n@@ -134,13 +134,13 @@ protected Form setupEditPanel() {\n         //--------------------------------\n         // Resources panel\n         //--------------------------------\n-        form.add(new ResourcesPanel(\"resources\", userTO));\n+        form.add(new ResourcesPanel(\"resources\", userTO, null));\n         //--------------------------------\n \n         //--------------------------------\n         // Roles panel\n         //--------------------------------\n-        form.add(new MembershipsPanel(\"memberships\", userTO, mode == Mode.TEMPLATE));\n+        form.add(new MembershipsPanel(\"memberships\", userTO, mode == Mode.TEMPLATE, null));\n         //--------------------------------\n \n         final AjaxButton submit = getOnSubmit();"},{"sha":"0b94e8b44746411c3817d41c4af3ee30c7fed109","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/DerivedAttributesPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.List;\n-\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.RoleTO;"},{"sha":"0ec2cd7bd04728a10a7333a91566235448afe3b4","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/MembershipsPanel.java","status":"modified","additions":65,"deletions":32,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -18,14 +18,17 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import java.util.Collections;\n+import java.util.HashSet;\n import java.util.List;\n-\n+import java.util.Set;\n import javax.swing.tree.DefaultMutableTreeNode;\n-\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.console.commons.RoleTreeBuilder;\n+import org.apache.syncope.console.commons.RoleUtils;\n+import org.apache.syncope.console.commons.StatusUtils;\n import org.apache.syncope.console.pages.MembershipModalPage;\n import org.apache.syncope.console.pages.UserModalPage;\n import org.apache.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n@@ -34,6 +37,7 @@\n import org.apache.syncope.console.wicket.markup.html.tree.TreeRoleProvider;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n@@ -60,24 +64,29 @@ public class MembershipsPanel extends Panel {\n     @SpringBean\n     private RoleTreeBuilder roleTreeBuilder;\n \n-    private ListView<MembershipTO> membershipsView;\n+    private final ListView<MembershipTO> membView;\n \n     private final UserTO userTO;\n \n+    private final StatusPanel statusPanel;\n+\n     private final NestedTree<DefaultMutableTreeNode> tree;\n \n-    public MembershipsPanel(final String id, final UserTO userTO, final boolean templateMode) {\n+    public MembershipsPanel(final String id, final UserTO userTO, final boolean templateMode,\n+            final StatusPanel statusPanel) {\n+\n         super(id);\n         this.userTO = userTO;\n+        this.statusPanel = statusPanel;\n \n         final WebMarkupContainer membershipsContainer = new WebMarkupContainer(\"membershipsContainer\");\n         membershipsContainer.setOutputMarkupId(true);\n         add(membershipsContainer);\n \n-        final ModalWindow membershipWin = new ModalWindow(\"membershipWin\");\n-        membershipWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        membershipWin.setCookieName(\"create-membership-modal\");\n-        add(membershipWin);\n+        final ModalWindow membWin = new ModalWindow(\"membershipWin\");\n+        membWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        membWin.setCookieName(\"create-membership-modal\");\n+        add(membWin);\n \n         final ITreeProvider<DefaultMutableTreeNode> treeProvider = new TreeRoleProvider(roleTreeBuilder, true);\n         final DefaultMutableTreeNodeExpansionModel treeModel = new DefaultMutableTreeNodeExpansionModel();\n@@ -107,32 +116,27 @@ protected IModel<?> newLabelModel(final IModel<DefaultMutableTreeNode> model) {\n \n                     @Override\n                     protected void onClick(final AjaxRequestTarget target) {\n-                        super.onClick(target);\n-\n-                        membershipWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        membWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                             private static final long serialVersionUID = 7661763358801821185L;\n \n-                            private MembershipTO membershipTO;\n-\n                             @Override\n                             public Page createPage() {\n+                                PageReference pageRef = getPage().getPageReference();\n \n-                                for (MembershipTO memberTO : membershipsView.getList()) {\n-                                    if (memberTO.getRoleId() == roleTO.getId()) {\n-                                        return new MembershipModalPage(getPage().getPageReference(),\n-                                                membershipWin, memberTO, templateMode);\n+                                for (MembershipTO membTO : membView.getList()) {\n+                                    if (membTO.getRoleId() == roleTO.getId()) {\n+                                        return new MembershipModalPage(pageRef, membWin, membTO, templateMode);\n                                     }\n                                 }\n-                                membershipTO = new MembershipTO();\n-                                membershipTO.setRoleId(roleTO.getId());\n-                                membershipTO.setRoleName(roleTO.getName());\n+                                MembershipTO membTO = new MembershipTO();\n+                                membTO.setRoleId(roleTO.getId());\n+                                membTO.setRoleName(roleTO.getName());\n \n-                                return new MembershipModalPage(getPage().getPageReference(), membershipWin,\n-                                        membershipTO, templateMode);\n+                                return new MembershipModalPage(pageRef, membWin, membTO, templateMode);\n                             }\n                         });\n-                        membershipWin.show(target);\n+                        membWin.show(target);\n                     }\n                 };\n             }\n@@ -144,7 +148,7 @@ public Page createPage() {\n \n         this.add(tree);\n \n-        membershipsView = new ListView<MembershipTO>(\"memberships\",\n+        membView = new ListView<MembershipTO>(\"memberships\",\n                 new PropertyModel<List<? extends MembershipTO>>(userTO, \"memberships\")) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n@@ -153,27 +157,27 @@ public Page createPage() {\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 final MembershipTO membershipTO = (MembershipTO) item.getDefaultModelObject();\n \n-                item.add(new Label(\"roleId\", new Model(membershipTO.getRoleId())));\n-                item.add(new Label(\"roleName\", new Model(membershipTO.getRoleName())));\n+                item.add(new Label(\"roleId\", new Model<Long>(membershipTO.getRoleId())));\n+                item.add(new Label(\"roleName\", new Model<String>(membershipTO.getRoleName())));\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        membershipWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        membWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                             private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n-                                return new MembershipModalPage(getPage().getPageReference(), membershipWin,\n+                                return new MembershipModalPage(getPage().getPageReference(), membWin,\n                                         membershipTO, templateMode);\n \n                             }\n                         });\n-                        membershipWin.show(target);\n+                        membWin.show(target);\n                     }\n                 };\n                 item.add(editLink);\n@@ -186,19 +190,35 @@ public Page createPage() {\n                     public void onClick(final AjaxRequestTarget target) {\n                         userTO.removeMembership(membershipTO);\n                         target.add(membershipsContainer);\n+\n+                        RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, membershipTO.getRoleId());\n+                        Set<String> resourcesToRemove = roleTO == null\n+                                ? Collections.<String>emptySet() : roleTO.getResources();\n+                        if (!resourcesToRemove.isEmpty()) {\n+                            Set<String> resourcesAssignedViaMembership = new HashSet<String>();\n+                            for (MembershipTO membTO : userTO.getMemberships()) {\n+                                roleTO = RoleUtils.findRole(roleTreeBuilder, membTO.getRoleId());\n+                                if (roleTO != null) {\n+                                    resourcesAssignedViaMembership.addAll(roleTO.getResources());\n+                                }\n+                            }\n+                            resourcesToRemove.removeAll(resourcesAssignedViaMembership);\n+                            resourcesToRemove.removeAll(userTO.getResources());\n+                        }\n+\n+                        StatusUtils.update(statusPanel, target, Collections.<String>emptySet(), resourcesToRemove);\n                     }\n                 };\n                 item.add(deleteLink);\n             }\n         };\n \n-        membershipsContainer.add(membershipsView);\n+        membershipsContainer.add(membView);\n \n-        setWindowClosedCallback(membershipWin, membershipsContainer);\n+        setWindowClosedCallback(membWin, membershipsContainer);\n     }\n \n     private void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n-\n         window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n             private static final long serialVersionUID = 8804221891699487139L;\n@@ -207,6 +227,19 @@ private void setWindowClosedCallback(final ModalWindow window, final WebMarkupCo\n             public void onClose(final AjaxRequestTarget target) {\n                 final UserTO updatedUserTO = ((UserModalPage) getPage()).getUserTO();\n \n+                if (updatedUserTO.getMemberships().size() > userTO.getMemberships().size()) {\n+                    Set<Long> diff = new HashSet<Long>(updatedUserTO.getMembershipMap().keySet());\n+                    diff.removeAll(userTO.getMembershipMap().keySet());\n+\n+                    Set<String> resourcesToAdd = new HashSet<String>();\n+                    for (Long diffMembId : diff) {\n+                        long roleId = updatedUserTO.getMembershipMap().get(diffMembId).getRoleId();\n+                        RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, roleId);\n+                        resourcesToAdd.addAll(roleTO.getResources());\n+                        StatusUtils.update(statusPanel, target, resourcesToAdd, Collections.<String>emptySet());\n+                    }\n+                }\n+\n                 MembershipsPanel.this.userTO.setMemberships(updatedUserTO.getMemberships());\n                 target.add(container);\n             }"},{"sha":"3f2f179a7cd1627012a1fd8bf536bcc5b839bdcb","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourcesPanel.java","status":"modified","additions":98,"deletions":21,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -19,15 +19,27 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n+import java.util.HashSet;\n import java.util.List;\n-\n+import java.util.Set;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.ResourceTO;\n+import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.console.commons.RoleTreeBuilder;\n+import org.apache.syncope.console.commons.RoleUtils;\n+import org.apache.syncope.console.commons.SelectChoiceRenderer;\n+import org.apache.syncope.console.commons.StatusUtils;\n import org.apache.syncope.console.rest.ResourceRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.extensions.markup.html.form.palette.component.Recorder;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n@@ -39,34 +51,99 @@ public class ResourcesPanel extends Panel {\n     @SpringBean\n     private ResourceRestClient resourceRestClient;\n \n-    public <T extends AbstractAttributableTO> ResourcesPanel(final String id, final T entityTO) {\n+    @SpringBean\n+    private RoleTreeBuilder roleTreeBuilder;\n+\n+    private final AbstractAttributableTO attributableTO;\n+\n+    private final Set<String> previousResources;\n+\n+    private final List<String> allResources;\n+\n+    private ResourcesPanel(final String id, final AbstractAttributableTO attributableTO) {\n         super(id);\n-        final IModel<List<String>> allResources = new allResourcesModel(resourceRestClient);\n+        this.attributableTO = attributableTO;\n+        previousResources = new HashSet<String>(attributableTO.getResources());\n+        allResources = new ArrayList<String>();\n+        for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n+            allResources.add(resourceTO.getName());\n+        }\n+    }\n+\n+    public ResourcesPanel(final String id, final UserTO userTO, final StatusPanel statusPanel) {\n+        this(id, userTO);\n+\n+        final AjaxPalettePanel<String> resourcesPalette = new AjaxRecordingPalettePanel<String>(\"resourcesPalette\",\n+                new PropertyModel<List<String>>(userTO, \"resources\"),\n+                new ListModel<String>(allResources), statusPanel);\n+        add(resourcesPalette);\n+    }\n \n-        final AjaxPalettePanel<String> resourcesPalette = new AjaxPalettePanel<String>(\"resourcesPalette\", \n-                new PropertyModel<List<String>>(entityTO, \"resources\"), \n-                new ListModel<String>(allResources.getObject()));\n+    public ResourcesPanel(final String id, final RoleTO roleTO) {\n+        this(id, (AbstractAttributableTO) roleTO);\n \n+        final AjaxPalettePanel<String> resourcesPalette = new AjaxPalettePanel<String>(\"resourcesPalette\",\n+                new PropertyModel<List<String>>(roleTO, \"resources\"),\n+                new ListModel<String>(allResources));\n         add(resourcesPalette);\n     }\n-    \n-    private static class allResourcesModel extends LoadableDetachableModel<List<String>> {\n-        private static final long serialVersionUID = 5275935387613157437L;\n-\n-        private ResourceRestClient client;\n-        \n-        public allResourcesModel(ResourceRestClient resourceRestClient) {\n-            this.client = resourceRestClient;\n+\n+    private class AjaxRecordingPalettePanel<T> extends AjaxPalettePanel<T> {\n+\n+        private static final long serialVersionUID = -4215625881756021988L;\n+\n+        private final StatusPanel statusPanel;\n+\n+        public AjaxRecordingPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n+                final StatusPanel statusPanel) {\n+\n+            super(id, model, choices, new SelectChoiceRenderer<T>(), false);\n+            this.statusPanel = statusPanel;\n         }\n \n         @Override\n-        protected List<String> load() {\n-            final List<String> resourceNames = new ArrayList<String>();\n+        protected Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n+                final IChoiceRenderer<T> renderer, final boolean allowOrder) {\n+\n+            return new Palette(\"paletteField\", model, choices, renderer, 8, allowOrder) {\n+\n+                private static final long serialVersionUID = -3415146226879212841L;\n+\n+                @Override\n+                protected Recorder newRecorderComponent() {\n+                    Recorder recorder = super.newRecorderComponent();\n+                    recorder.add(new AjaxFormComponentUpdatingBehavior(\"change\") {\n+\n+                        private static final long serialVersionUID = 5538299138211283825L;\n+\n+                        @Override\n+                        protected void onUpdate(final AjaxRequestTarget target) {\n+                            if (attributableTO instanceof UserTO) {\n+                                UserTO userTO = (UserTO) attributableTO;\n+\n+                                Set<String> resourcesToRemove = new HashSet<String>(previousResources);\n+                                resourcesToRemove.removeAll(userTO.getResources());\n+                                if (!resourcesToRemove.isEmpty()) {\n+                                    Set<String> resourcesAssignedViaMembership = new HashSet<String>();\n+                                    for (MembershipTO membTO : userTO.getMemberships()) {\n+                                        RoleTO roleTO = RoleUtils.findRole(roleTreeBuilder, membTO.getRoleId());\n+                                        if (roleTO != null) {\n+                                            resourcesAssignedViaMembership.addAll(roleTO.getResources());\n+                                        }\n+                                    }\n+                                    resourcesToRemove.removeAll(resourcesAssignedViaMembership);\n+                                }\n+\n+                                previousResources.clear();\n+                                previousResources.addAll(userTO.getResources());\n \n-            for (ResourceTO resourceTO : client.getAllResources()) {\n-                resourceNames.add(resourceTO.getName());\n-            }\n-            return resourceNames;\n+                                StatusUtils.update(statusPanel, target, userTO.getResources(), resourcesToRemove);\n+                            }\n+                        }\n+                    });\n+                    return recorder;\n+                }\n+            };\n         }\n     }\n }"},{"sha":"172ca9377cd8abfe97a072de3a695e5281f7aeeb","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/StatusPanel.java","status":"modified","additions":56,"deletions":10,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -20,7 +20,9 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.PropagationRequestTO;\n@@ -59,16 +61,20 @@ public class StatusPanel extends Panel {\n \n     private final StatusUtils statusUtils;\n \n+    private final Map<String, StatusBean> initialStatusBeanMap;\n+\n     private final CheckGroup<StatusBean> checkGroup;\n \n+    private final ListView<StatusBean> statusBeansListView;\n+\n     public <T extends AbstractAttributableTO> StatusPanel(final String id, final AbstractAttributableTO attributable,\n             final List<StatusBean> selectedResources) {\n \n         super(id);\n         statusUtils = new StatusUtils(resourceRestClient,\n                 (attributable instanceof UserTO ? userRestClient : roleRestClient));\n \n-        final List<StatusBean> statuses = new ArrayList<StatusBean>();\n+        final List<StatusBean> statusBeans = new ArrayList<StatusBean>();\n \n         final StatusBean syncope = new StatusBean();\n         syncope.setResourceName(\"Syncope\");\n@@ -84,16 +90,30 @@ public <T extends AbstractAttributableTO> StatusPanel(final String id, final Abs\n             syncope.setAccountLink(roleTO.getDisplayName());\n             syncope.setStatus(Status.ACTIVE);\n         }\n-        statuses.add(syncope);\n \n-        statuses.addAll(statusUtils.getRemoteStatuses(attributable));\n+        statusBeans.add(syncope);\n+        statusBeans.addAll(statusUtils.getRemoteStatuses(attributable));\n+\n+        initialStatusBeanMap = new HashMap<String, StatusBean>(statusBeans.size());\n+        for (StatusBean statusBean : statusBeans) {\n+            initialStatusBeanMap.put(statusBean.getResourceName(), statusBean);\n+        }\n \n-        checkGroup = new CheckGroup<StatusBean>(\"group\", selectedResources);\n+        checkGroup = new CheckGroup<StatusBean>(\"group\", selectedResources) {\n+\n+            private static final long serialVersionUID = 4085912362037539780L;\n+\n+            @Override\n+            protected boolean wantOnSelectionChangedNotifications() {\n+                return true;\n+            }\n+        };\n+        checkGroup.setOutputMarkupId(true);\n         add(checkGroup);\n \n         add(new CheckGroupSelector(\"groupselector\", checkGroup));\n \n-        final ListView<StatusBean> resources = new ListView<StatusBean>(\"resources\", statuses) {\n+        statusBeansListView = new ListView<StatusBean>(\"resources\", statusBeans) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n@@ -105,6 +125,12 @@ protected void populateItem(final ListItem<StatusBean> item) {\n \n                 switch (item.getModelObject().getStatus()) {\n \n+                    case NOT_YET_SUBMITTED:\n+                        image = new Image(\"icon\", \"../statuses/undefined.png\");\n+                        alt = \"undefined icon\";\n+                        title = \"Not yet submitted\";\n+                        break;\n+\n                     case ACTIVE:\n                         image = new Image(\"icon\", \"../statuses/active.png\");\n                         alt = \"active icon\";\n@@ -142,7 +168,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n                     }\n                 });\n \n-                final Check check = new Check(\"check\", item.getModel(), checkGroup);\n+                final Check<StatusBean> check = new Check<StatusBean>(\"check\", item.getModel(), checkGroup);\n                 check.setEnabled(checkVisibility);\n                 check.setVisible(checkVisibility);\n                 item.add(check);\n@@ -160,10 +186,8 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n                 item.add(image);\n             }\n         };\n-\n-        resources.setReuseItems(true);\n-\n-        checkGroup.add(resources);\n+        statusBeansListView.setReuseItems(true);\n+        checkGroup.add(statusBeansListView);\n     }\n \n     public PropagationRequestTO getPropagationRequestTO() {\n@@ -177,4 +201,26 @@ public PropagationRequestTO getPropagationRequestTO() {\n \n         return result;\n     }\n+\n+    public List<StatusBean> getStatusBeans() {\n+        return statusBeansListView.getModelObject();\n+    }\n+\n+    public Map<String, StatusBean> getInitialStatusBeanMap() {\n+        return initialStatusBeanMap;\n+    }\n+\n+    public void updateStatusBeans(final List<StatusBean> statusBeans) {\n+        statusBeansListView.removeAll();\n+        statusBeansListView.getModelObject().clear();\n+        statusBeansListView.getModelObject().addAll(statusBeans);\n+\n+        for (StatusBean statusBean : statusBeans) {\n+            if (!checkGroup.getModelObject().contains(statusBean)\n+                    && statusBean.getStatus() == StatusUtils.Status.NOT_YET_SUBMITTED) {\n+\n+                checkGroup.getModelObject().add(statusBean);\n+            }\n+        }\n+    }\n }"},{"sha":"b736435f00cdafde78eece72369da57f2e8d120f","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console.wicket.markup.html.form;\n \n import java.io.Serializable;\n-\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.slf4j.Logger;\n@@ -35,7 +34,6 @@\n     private static final long serialVersionUID = 5958017546318855690L;\n \n     public AbstractFieldPanel(final String id, final IModel<T> model) {\n-\n         super(id, model);\n     }\n "},{"sha":"967a7020cb95dc77cc29fbbacf831eca290b60b4","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -20,7 +20,6 @@\n \n import java.io.Serializable;\n import java.util.List;\n-\n import org.apache.syncope.console.commons.SelectChoiceRenderer;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n@@ -34,14 +33,13 @@\n     final Palette<T> palette;\n \n     public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices) {\n-\n         this(id, model, choices, false);\n     }\n \n     public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n             final boolean allowOrder) {\n \n-        this(id, model, choices, new SelectChoiceRenderer(), allowOrder);\n+        this(id, model, choices, new SelectChoiceRenderer<T>(), allowOrder);\n     }\n \n     public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n@@ -54,14 +52,14 @@ public AjaxPalettePanel(final String id, final IModel<List<T>> model, final List\n         setOutputMarkupId(true);\n     }\n \n-    private Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n+    protected Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n             final IChoiceRenderer<T> renderer, final boolean allowOrder) {\n \n         return new Palette(\"paletteField\", model, choices, renderer, 8, allowOrder);\n     }\n \n     @Override\n-    public AbstractFieldPanel setModelObject(Serializable object) {\n+    public AbstractFieldPanel setModelObject(final Serializable object) {\n         palette.setDefaultModelObject(object);\n         return this;\n     }"},{"sha":"a0594986191ac5fc602f84a902ec968c1c2596ff","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/tree/TreeRoleProvider.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRoleProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRoleProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRoleProvider.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console.wicket.markup.html.tree;\n \n import javax.swing.tree.DefaultMutableTreeNode;\n-\n import org.apache.syncope.console.commons.RoleTreeBuilder;\n import org.apache.wicket.extensions.markup.html.repeater.util.TreeModelProvider;\n import org.apache.wicket.model.IModel;"},{"sha":"16c5f5f018dd40ca2d7e61b622a8e085f3d69026","filename":"console/src/test/java/org/apache/syncope/console/EditProfileTestITCase.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8b4ac6483a8a5cc7baa99b419486433c8db0044/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java?ref=e8b4ac6483a8a5cc7baa99b419486433c8db0044","patch":"@@ -26,14 +26,11 @@ public class EditProfileTestITCase extends AbstractTest {\n     @Override\n     @Before\n     public void setUp() throws Exception {\n-\n         super.setUp(BASE_URL, \"*firefox\");\n     }\n \n     @Test\n     public void selfRegistration() {\n-        selenium.setSpeed(\"1000\");\n-\n         selenium.open(\"/syncope-console/\");\n \n         selenium.click(\"//div/span/span/a\");\n@@ -52,8 +49,6 @@ public void selfRegistration() {\n \n     @Test\n     public void editUserProfile() {\n-        selenium.setSpeed(\"1000\");\n-\n         selenium.open(\"/syncope-console/\");\n         selenium.type(\"name=userId\", \"user1\");\n         selenium.type(\"name=password\", \"password\");\n@@ -63,12 +58,10 @@ public void editUserProfile() {\n         selenium.click(\"css=img[alt=\\\"Schema\\\"]\");\n         selenium.waitForPageToLoad(\"30000\");\n \n-        selenium.click(\"id=username\");\n-        selenium.click(\"//span[@id='editProfile']/a\");\n+        selenium.click(\"//div/ul/li[10]/div/div/a/span\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n-\n-        assertTrue(selenium.isElementPresent(\"//input[@value='user1']\"));\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@value='user1']\\\");\", \"30000\");\n \n         selenium.click(\"css=a.w_close\");\n     }"}]}