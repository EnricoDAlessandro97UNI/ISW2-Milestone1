{"sha":"856830dcf870f2f182a51b366f09a0637e4fa7bd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg1NjgzMGRjZjg3MGYyZjE4MmE1MWIzNjZmMDlhMDYzN2U0ZmE3YmQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-12-17T13:59:21Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-12-17T13:59:21Z"},"message":"[SYNCOPE-680] Implementation provided","tree":{"sha":"cb2152bcc11e8f2c351c98ad134b4ee5c2067d8b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cb2152bcc11e8f2c351c98ad134b4ee5c2067d8b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/856830dcf870f2f182a51b366f09a0637e4fa7bd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/856830dcf870f2f182a51b366f09a0637e4fa7bd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/856830dcf870f2f182a51b366f09a0637e4fa7bd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/856830dcf870f2f182a51b366f09a0637e4fa7bd/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1358b3552dba77195412093e233c81066e405e03","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1358b3552dba77195412093e233c81066e405e03","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1358b3552dba77195412093e233c81066e405e03"}],"stats":{"total":222,"additions":161,"deletions":61},"files":[{"sha":"951f1c1d12c6d3ba4e65d63da34fb8e9c0e49499","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationResultManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -36,7 +36,7 @@ public void printNotification(final NotificationTO notificationTO) {\n         System.out.println(\"    events: \" + notificationTO.getEvents());\n         System.out.println(\"    sender: \" + notificationTO.getSender());\n         System.out.println(\"    subject: \" + notificationTO.getSubject());\n-        System.out.println(\"    recipients: \" + notificationTO.getRecipients());\n+        System.out.println(\"    recipients: \" + notificationTO.getRecipientsFIQL());\n         System.out.println(\"    recipient attribute name: \" + notificationTO.getRecipientAttrName());\n         System.out.println(\"    template: \" + notificationTO.getTemplate());\n         System.out.println(\"    abouts: \" + notificationTO.getAbouts());"},{"sha":"cd3f7ce17702a753e0989d1df4621821d3589039","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTO.java","status":"modified","additions":15,"deletions":5,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -49,7 +49,7 @@ public class NotificationTO extends AbstractBaseBean {\n     @JsonIgnore\n     private final Map<String, String> abouts = new HashMap<>();\n \n-    private String recipients;\n+    private String recipientsFIQL;\n \n     private final List<String> staticRecipients = new ArrayList<>();\n \n@@ -59,6 +59,8 @@ public class NotificationTO extends AbstractBaseBean {\n \n     private boolean selfAsRecipient;\n \n+    private String recipientsProviderClassName;\n+\n     private String sender;\n \n     private String subject;\n@@ -97,12 +99,12 @@ public void setKey(final Long key) {\n         this.key = key;\n     }\n \n-    public String getRecipients() {\n-        return recipients;\n+    public String getRecipientsFIQL() {\n+        return recipientsFIQL;\n     }\n \n-    public void setRecipients(final String recipients) {\n-        this.recipients = recipients;\n+    public void setRecipientsFIQL(final String recipientsFIQL) {\n+        this.recipientsFIQL = recipientsFIQL;\n     }\n \n     public String getRecipientAttrName() {\n@@ -129,6 +131,14 @@ public void setSelfAsRecipient(final boolean selfAsRecipient) {\n         this.selfAsRecipient = selfAsRecipient;\n     }\n \n+    public String getRecipientsProviderClassName() {\n+        return recipientsProviderClassName;\n+    }\n+\n+    public void setRecipientsProviderClassName(final String recipientsProviderClassName) {\n+        this.recipientsProviderClassName = recipientsProviderClassName;\n+    }\n+\n     public String getSender() {\n         return sender;\n     }"},{"sha":"56e518f81363912e7bf5c1fd6dba31bec8ea7043","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SyncopeTO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -87,6 +87,8 @@ public class SyncopeTO extends AbstractBaseBean {\n \n     private final Set<String> validators = new HashSet<>();\n \n+    private final Set<String> notificationRecipientsProviders = new HashSet<>();\n+\n     private final Set<String> mailTemplates = new HashSet<>();\n \n     public String getVersion() {\n@@ -246,6 +248,13 @@ public Set<String> getValidators() {\n         return validators;\n     }\n \n+    @XmlElementWrapper(name = \"notificationRecipientsProviders\")\n+    @XmlElement(name = \"notificationRecipientsProvider\")\n+    @JsonProperty(\"notificationRecipientsProviders\")\n+    public Set<String> getNotificationRecipientsProviders() {\n+        return notificationRecipientsProviders;\n+    }\n+\n     @XmlElementWrapper(name = \"mailTemplates\")\n     @XmlElement(name = \"mailTemplate\")\n     @JsonProperty(\"mailTemplates\")"},{"sha":"e86db66dd124a589394af49e608690d01241a78e","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -143,8 +143,9 @@ public SyncopeTO info() {\n         syncopeTO.getSyncActions().addAll(implLookup.getClassNames(Type.SYNC_ACTIONS));\n         syncopeTO.getPushActions().addAll(implLookup.getClassNames(Type.PUSH_ACTIONS));\n         syncopeTO.getSyncCorrelationRules().addAll(implLookup.getClassNames(Type.SYNC_CORRELATION_RULE));\n-        syncopeTO.getPushCorrelationRules().addAll(implLookup.getClassNames(Type.PUSH_CORRELATION_RULE));\n         syncopeTO.getValidators().addAll(implLookup.getClassNames(Type.VALIDATOR));\n+        syncopeTO.getNotificationRecipientsProviders().\n+                addAll(implLookup.getClassNames(Type.NOTIFICATION_RECIPIENTS_PROVIDER));\n \n         Set<String> htmlTemplates = new HashSet<>();\n         Set<String> textTemplates = new HashSet<>();"},{"sha":"c544f686e3a69191f5092da2a5aec7db25a215c2","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.core.provisioning.api.LogicActions;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate;\n+import org.apache.syncope.core.provisioning.api.notification.NotificationRecipientsProvider;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.apache.syncope.core.provisioning.api.sync.PushActions;\n import org.apache.syncope.core.provisioning.api.sync.SyncActions;\n@@ -100,9 +101,8 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(SyncActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PushActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(SyncCorrelationRule.class));\n-        // Remove once SYNCOPE-470 is done\n-        //scanner.addIncludeFilter(new AssignableTypeFilter(PushCorrelationRule.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(Validator.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(NotificationRecipientsProvider.class));\n \n         for (BeanDefinition bd : scanner.findCandidateComponents(StringUtils.EMPTY)) {\n             try {\n@@ -170,13 +170,13 @@ public void load() {\n                     classNames.get(Type.SYNC_CORRELATION_RULE).add(bd.getBeanClassName());\n                 }\n \n-                // Uncomment when SYNCOPE-470 is done\n-                /* if (PushCorrelationRule.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n-                 * classNames.get(Type.PUSH_CORRELATION_RULES).add(metadata.getClassName());\n-                 * } */\n                 if (Validator.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n                     classNames.get(Type.VALIDATOR).add(bd.getBeanClassName());\n                 }\n+\n+                if (NotificationRecipientsProvider.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                    classNames.get(Type.NOTIFICATION_RECIPIENTS_PROVIDER).add(bd.getBeanClassName());\n+                }\n             } catch (Throwable t) {\n                 LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n             }"},{"sha":"ff7284a52daa6fd6652084993dfc8b793bd543e1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/ImplementationLookup.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -41,8 +41,8 @@ enum Type {\n         SYNC_ACTIONS,\n         PUSH_ACTIONS,\n         SYNC_CORRELATION_RULE,\n-        PUSH_CORRELATION_RULE,\n-        VALIDATOR\n+        VALIDATOR,\n+        NOTIFICATION_RECIPIENTS_PROVIDER;\n \n     }\n "},{"sha":"bb395fa9f78e00258586235818ceb8beed247766","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Notification.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -40,9 +40,13 @@ public interface Notification extends Entity<Long> {\n \n     void setRecipientAttrType(IntMappingType recipientAttrType);\n \n-    String getRecipients();\n+    String getRecipientsFIQL();\n \n-    void setRecipients(String recipients);\n+    void setRecipientsFIQL(String recipientsFIQL);\n+\n+    String getRecipientsProviderClassName();\n+\n+    void setRecipientsProviderClassName(String recipientsProviderClassName);\n \n     boolean add(AnyAbout about);\n "},{"sha":"71af61d4a791eca0f16aa9e4c376ceefced1ac32","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/NotificationTask.java","status":"modified","additions":11,"deletions":14,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -23,33 +23,30 @@\n \n public interface NotificationTask extends Task {\n \n-    String getHtmlBody();\n-\n-    Set<String> getRecipients();\n+    void setSender(String sender);\n \n     String getSender();\n \n-    String getSubject();\n+    Set<String> getRecipients();\n \n-    String getTextBody();\n+    String getSubject();\n \n-    TraceLevel getTraceLevel();\n+    void setSubject(String subject);\n \n-    boolean isExecuted();\n+    void setTextBody(String textBody);\n \n-    void setExecuted(boolean executed);\n+    String getTextBody();\n \n     void setHtmlBody(String htmlBody);\n \n-    boolean addRecipient(String recipient);\n+    String getHtmlBody();\n \n-    boolean removeRecipient(String recipient);\n+    void setTraceLevel(TraceLevel traceLevel);\n \n-    void setSender(String sender);\n+    TraceLevel getTraceLevel();\n \n-    void setSubject(String subject);\n+    boolean isExecuted();\n \n-    void setTextBody(String textBody);\n+    void setExecuted(boolean executed);\n \n-    void setTraceLevel(TraceLevel traceLevel);\n }"},{"sha":"12555ea8b87c22f2e5b004e2fdb18f6cfae9309b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPANotification.java","status":"modified","additions":17,"deletions":6,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -68,7 +68,7 @@ public class JPANotification extends AbstractEntity<Long> implements Notificatio\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"notification\")\n     private List<JPAAnyAbout> abouts;\n \n-    private String recipients;\n+    private String recipientsFIQL;\n \n     @ElementCollection(fetch = FetchType.EAGER)\n     @CollectionTable(name = \"Notification_staticRecipients\",\n@@ -84,6 +84,8 @@ public class JPANotification extends AbstractEntity<Long> implements Notificatio\n     @NotNull\n     private String recipientAttrName;\n \n+    private String recipientsProviderClassName;\n+\n     @NotNull\n     @Basic\n     @Min(0)\n@@ -124,13 +126,13 @@ public Long getKey() {\n     }\n \n     @Override\n-    public String getRecipients() {\n-        return recipients;\n+    public String getRecipientsFIQL() {\n+        return recipientsFIQL;\n     }\n \n     @Override\n-    public void setRecipients(final String recipients) {\n-        this.recipients = recipients;\n+    public void setRecipientsFIQL(final String recipientsFIQL) {\n+        this.recipientsFIQL = recipientsFIQL;\n     }\n \n     @Override\n@@ -149,11 +151,20 @@ public IntMappingType getRecipientAttrType() {\n     }\n \n     @Override\n-\n     public void setRecipientAttrType(final IntMappingType recipientAttrType) {\n         this.recipientAttrType = recipientAttrType;\n     }\n \n+    @Override\n+    public String getRecipientsProviderClassName() {\n+        return recipientsProviderClassName;\n+    }\n+\n+    @Override\n+    public void setRecipientsProviderClassName(final String recipientsProviderClassName) {\n+        this.recipientsProviderClassName = recipientsProviderClassName;\n+    }\n+\n     @Override\n     public List<String> getEvents() {\n         return events;"},{"sha":"e1a2456308b6995c5ab0f0dc918af2b0c2e3dbe0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPANotificationTask.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -88,16 +88,6 @@ public Set<String> getRecipients() {\n         return recipients;\n     }\n \n-    @Override\n-    public boolean addRecipient(final String recipient) {\n-        return recipients.add(recipient);\n-    }\n-\n-    @Override\n-    public boolean removeRecipient(final String recipient) {\n-        return recipients.remove(recipient);\n-    }\n-\n     @Override\n     public String getSender() {\n         return sender;"},{"sha":"de1984cd34c65e7b5aa1075206400162711ddde9","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/NotificationTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -49,7 +49,7 @@ public void find() {\n         assertNotNull(notification.getEvents());\n         assertFalse(notification.getEvents().isEmpty());\n         assertNotNull(notification.getAbout(anyTypeDAO.findUser()));\n-        assertNotNull(notification.getRecipients());\n+        assertNotNull(notification.getRecipientsFIQL());\n \n     }\n \n@@ -71,7 +71,7 @@ public void save() {\n         about.setAnyType(anyTypeDAO.findUser());\n         about.set(\"fake search condition\");\n \n-        notification.setRecipients(\"fake recipients\");\n+        notification.setRecipientsFIQL(\"fake recipients\");\n \n         notification.setRecipientAttrName(\"email\");\n         notification.setRecipientAttrType(IntMappingType.UserPlainSchema);\n@@ -102,7 +102,7 @@ public void issueSYNCOPE445() {\n         about.setAnyType(anyTypeDAO.findUser());\n         about.set(\"fake search condition\");\n \n-        notification.setRecipients(\"fake search condition\");\n+        notification.setRecipientsFIQL(\"fake search condition\");\n \n         notification.setRecipientAttrName(\"email\");\n         notification.setRecipientAttrType(IntMappingType.UserPlainSchema);"},{"sha":"63f08781cd9527874a66f033a4cea5a7a4eef7d2","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -1108,7 +1108,7 @@ under the License.\n \n   <Notification id=\"10\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" \n                 traceLevel=\"FAILURES\"\n-                recipients=\"$groups==7\"\n+                recipientsFIQL=\"$groups==7\"\n                 recipientAttrType=\"UserPlainSchema\" recipientAttrName=\"email\" active=\"1\"/>\n   <AnyAbout id=\"10\" anyType_name=\"USER\" notification_id=\"10\" about=\"fullname==*o*;fullname==*i*\"/>\n   <Notification_events Notification_id=\"10\" event=\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\"/>"},{"sha":"1b30768243dcc4b5c7f2369cea56f9a58a496d9d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/notification/NotificationRecipientsProvider.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationRecipientsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationRecipientsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationRecipientsProvider.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.notification;\n+\n+import java.util.Set;\n+import org.apache.syncope.core.persistence.api.entity.Notification;\n+\n+public interface NotificationRecipientsProvider {\n+\n+    Set<String> provideRecipients(Notification notification);\n+}"},{"sha":"2b425c5be8a73b399e12388f535c283660f18159","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/NotificationDataBinderImpl.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -40,7 +40,7 @@ public class NotificationDataBinderImpl implements NotificationDataBinder {\n \n     private static final Logger LOG = LoggerFactory.getLogger(NotificationDataBinder.class);\n \n-    private static final String[] IGNORE_PROPERTIES = { \"key\", \"abouts\", \"recipients\" };\n+    private static final String[] IGNORE_PROPERTIES = { \"key\", \"abouts\" };\n \n     @Autowired\n     private AnyTypeDAO anyTypeDAO;\n@@ -59,8 +59,6 @@ public NotificationTO getNotificationTO(final Notification notification) {\n             result.getAbouts().put(about.getAnyType().getKey(), about.get());\n         }\n \n-        result.setRecipients(notification.getRecipients());\n-\n         return result;\n     }\n \n@@ -74,7 +72,6 @@ public Notification create(final NotificationTO notificationTO) {\n     @Override\n     public void update(final Notification notification, final NotificationTO notificationTO) {\n         BeanUtils.copyProperties(notificationTO, notification, IGNORE_PROPERTIES);\n-        notification.setRecipients(notificationTO.getRecipients());\n \n         // 1. add or update all (valid) abouts from TO\n         for (Map.Entry<String, String> entry : notificationTO.getAbouts().entrySet()) {"},{"sha":"82166dc4899b876f4b93c8bf282e875646db9726","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -54,6 +54,7 @@\n import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.misc.search.SearchCondConverter;\n+import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n@@ -65,6 +66,7 @@\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.provisioning.api.DerAttrHandler;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n+import org.apache.syncope.core.provisioning.api.notification.NotificationRecipientsProvider;\n import org.apache.velocity.VelocityContext;\n import org.apache.velocity.app.VelocityEngine;\n import org.apache.velocity.context.Context;\n@@ -73,6 +75,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -188,9 +191,9 @@ private NotificationTask getNotificationTask(\n \n         List<User> recipients = new ArrayList<>();\n \n-        if (notification.getRecipients() != null) {\n+        if (notification.getRecipientsFIQL() != null) {\n             recipients.addAll(searchDAO.<User>search(\n-                    SearchCondConverter.convert(notification.getRecipients()),\n+                    SearchCondConverter.convert(notification.getRecipientsFIQL()),\n                     Collections.<OrderByClause>emptyList(), AnyTypeKind.USER));\n         }\n \n@@ -217,6 +220,18 @@ private NotificationTask getNotificationTask(\n             recipientEmails.addAll(notification.getStaticRecipients());\n         }\n \n+        if (notification.getRecipientsProviderClassName() != null) {\n+            try {\n+                NotificationRecipientsProvider recipientsProvider =\n+                        (NotificationRecipientsProvider) ApplicationContextProvider.getBeanFactory().\n+                        createBean(Class.forName(notification.getRecipientsProviderClassName()),\n+                                AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                recipientEmails.addAll(recipientsProvider.provideRecipients(notification));\n+            } catch (Exception e) {\n+                LOG.error(\"Could not fetch recipients from {}\", notification.getRecipientsProviderClassName(), e);\n+            }\n+        }\n+\n         model.put(\"recipients\", recipientTOs);\n         model.put(\"syncopeConf\", this.findAllSyncopeConfs());\n         model.put(\"events\", notification.getEvents());"},{"sha":"178e399832a7908000c263e362a05cd18dbd44f8","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestNotificationRecipientsProvider.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestNotificationRecipientsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestNotificationRecipientsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestNotificationRecipientsProvider.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+import org.apache.syncope.core.persistence.api.entity.Notification;\n+import org.apache.syncope.core.provisioning.api.notification.NotificationRecipientsProvider;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+public class TestNotificationRecipientsProvider implements NotificationRecipientsProvider {\n+\n+    @Transactional(readOnly = true)\n+    @Override\n+    public Set<String> provideRecipients(final Notification notification) {\n+        return Collections.singleton(getClass().getSimpleName() + \"@syncope.apache.org\");\n+    }\n+\n+}"},{"sha":"f1c4c89268ac6f92d039ddccf6d9f1a1c03b8e1f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/NotificationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationITCase.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -77,7 +77,7 @@ public void list() {\n     @Test\n     public void create() {\n         NotificationTO notificationTO = buildNotificationTO();\n-        notificationTO.setRecipients(SyncopeClient.getUserSearchConditionBuilder().inGroups(7L).query());\n+        notificationTO.setRecipientsFIQL(SyncopeClient.getUserSearchConditionBuilder().inGroups(7L).query());\n \n         Response response = notificationService.create(notificationTO);\n         NotificationTO actual = getObject(response.getLocation(), NotificationService.class, NotificationTO.class);\n@@ -91,7 +91,7 @@ public void create() {\n     @Test\n     public void update() {\n         NotificationTO notificationTO = notificationService.read(10L);\n-        notificationTO.setRecipients(SyncopeClient.getUserSearchConditionBuilder().inGroups(7L).query());\n+        notificationTO.setRecipientsFIQL(SyncopeClient.getUserSearchConditionBuilder().inGroups(7L).query());\n \n         notificationService.update(notificationTO);\n         NotificationTO actual = notificationService.read(notificationTO.getKey());"},{"sha":"3ac567e400e7515306d85601bb5bde90a13aee92","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/NotificationTaskITCase.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856830dcf870f2f182a51b366f09a0637e4fa7bd/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856830dcf870f2f182a51b366f09a0637e4fa7bd/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FNotificationTaskITCase.java?ref=856830dcf870f2f182a51b366f09a0637e4fa7bd","patch":"@@ -308,11 +308,12 @@ public void issueSYNCOPE446() throws Exception {\n         notification.getAbouts().put(AnyTypeKind.GROUP.name(),\n                 SyncopeClient.getGroupSearchConditionBuilder().is(\"name\").equalTo(groupName).query());\n \n-        notification.setRecipients(SyncopeClient.getUserSearchConditionBuilder().inGroups(8L).query());\n+        notification.setRecipientsFIQL(SyncopeClient.getUserSearchConditionBuilder().inGroups(8L).query());\n         notification.setSelfAsRecipient(false);\n         notification.setRecipientAttrName(\"email\");\n         notification.setRecipientAttrType(IntMappingType.UserPlainSchema);\n         notification.getStaticRecipients().add(MAIL_ADDRESS);\n+        notification.setRecipientsProviderClassName(TestNotificationRecipientsProvider.class.getName());\n \n         String sender = \"syncopetest-\" + getUUIDString() + \"@syncope.apache.org\";\n         notification.setSender(sender);\n@@ -324,6 +325,7 @@ public void issueSYNCOPE446() throws Exception {\n         Response response = notificationService.create(notification);\n         notification = getObject(response.getLocation(), NotificationService.class, NotificationTO.class);\n         assertNotNull(notification);\n+        assertEquals(TestNotificationRecipientsProvider.class.getName(), notification.getRecipientsProviderClassName());\n \n         // 2. create group\n         GroupTO groupTO = new GroupTO();\n@@ -335,6 +337,8 @@ public void issueSYNCOPE446() throws Exception {\n         // 3. verify\n         NotificationTaskTO taskTO = findNotificationTaskBySender(sender);\n         assertNotNull(taskTO);\n+        assertTrue(taskTO.getRecipients().containsAll(\n+                new TestNotificationRecipientsProvider().provideRecipients(null)));\n \n         execNotificationTask(taskService, taskTO.getKey(), 50);\n \n@@ -364,7 +368,7 @@ private String createNotificationTask(final boolean active, final boolean includ\n                     SyncopeClient.getUserSearchConditionBuilder().inGroups(7L).query());\n         }\n \n-        notification.setRecipients(SyncopeClient.getUserSearchConditionBuilder().inGroups(8L).query());\n+        notification.setRecipientsFIQL(SyncopeClient.getUserSearchConditionBuilder().inGroups(8L).query());\n         notification.setSelfAsRecipient(true);\n         notification.setRecipientAttrName(\"email\");\n         notification.setRecipientAttrType(IntMappingType.UserPlainSchema);"}]}