{"sha":"50ecf0d80163d6d828417bb71f3b52a910dfc716","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjUwZWNmMGQ4MDE2M2Q2ZDgyODQxN2JiNzFmM2I1MmE5MTBkZmM3MTY=","commit":{"author":{"name":"Massimiliano Perrone","email":"massimiliano.perrone@tirasa.net","date":"2015-12-21T16:11:42Z"},"committer":{"name":"Massimiliano Perrone","email":"massimiliano.perrone@tirasa.net","date":"2015-12-21T16:11:47Z"},"message":"Security questions page: SYNCOPE-156","tree":{"sha":"56da353472e8caf6b199b1ab1bf99f6790623955","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/56da353472e8caf6b199b1ab1bf99f6790623955"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/50ecf0d80163d6d828417bb71f3b52a910dfc716","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/50ecf0d80163d6d828417bb71f3b52a910dfc716","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/50ecf0d80163d6d828417bb71f3b52a910dfc716","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/50ecf0d80163d6d828417bb71f3b52a910dfc716/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"14e06e0f1f7d55eefef486784ffc12207fef02c7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14e06e0f1f7d55eefef486784ffc12207fef02c7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/14e06e0f1f7d55eefef486784ffc12207fef02c7"}],"stats":{"total":724,"additions":653,"deletions":71},"files":[{"sha":"8f785624cbd7caaf0f9d983ae4bd663a9c989721","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -58,8 +58,10 @@ public final class Constants {\n \n     public static final String PREF_ANYTYPE_PAGINATOR_ROWS = \"anytype.paginator.rows\";\n \n-    public static final String PREF_RELATIONSHIPTYPE_PAGINATOR_ROWS = \"relationshiptype.painator.rows\" ;\n-    \n+    public static final String PREF_SECURITY_QUESTIONS_PAGINATOR_ROWS = \"secutiry.questions.paginator.rows\";\n+\n+    public static final String PREF_RELATIONSHIPTYPE_PAGINATOR_ROWS = \"relationshiptype.painator.rows\";\n+\n     public static final String PREF_GROUP_DETAILS_VIEW = \"group.details.view\";\n \n     public static final String PREF_GROUP_ATTRIBUTES_VIEW = \"group.attributes.view\";"},{"sha":"9b508530638b1ba9d5cb5809dc37329e50791b8e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":15,"deletions":10,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -96,18 +96,27 @@ public BasePage(final PageParameters parameters) {\n         WebMarkupContainer confULContainer = new WebMarkupContainer(getULContainerId(\"configuration\"));\n         confLIContainer.add(confULContainer);\n \n+        liContainer = new WebMarkupContainer(getLIContainerId(\"securityQuestions\"));\n+        confULContainer.add(liContainer);\n+        final BookmarkablePageLink<Page> securityQuestionLink = new BookmarkablePageLink<>(\n+                \"securityQuestions\", SecurityQuestions.class);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                securityQuestionLink, WebPage.ENABLE, StandardEntitlement.SECURITY_QUESTION_CREATE);\n+        liContainer.add(securityQuestionLink);\n+\n         liContainer = new WebMarkupContainer(getLIContainerId(\"workflow\"));\n         confULContainer.add(liContainer);\n-        BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"workflow\", Workflow.class);\n-        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, StandardEntitlement.WORKFLOW_DEF_READ);\n-        liContainer.add(link);\n-        \n+        final BookmarkablePageLink<Page> workflowLink = new BookmarkablePageLink<>(\"workflow\", Workflow.class);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                workflowLink, WebPage.ENABLE, StandardEntitlement.WORKFLOW_DEF_READ);\n+        liContainer.add(workflowLink);\n+\n         liContainer = new WebMarkupContainer(getLIContainerId(\"logs\"));\n         confULContainer.add(liContainer);\n-        BookmarkablePageLink<Page> logsLink = new BookmarkablePageLink<>(\"logs\", Logs.class);\n+        final BookmarkablePageLink<Page> logsLink = new BookmarkablePageLink<>(\"logs\", Logs.class);\n         MetaDataRoleAuthorizationStrategy.authorize(logsLink, WebPage.ENABLE, StandardEntitlement.LOG_LIST);\n         liContainer.add(logsLink);\n-        \n+\n         liContainer = new WebMarkupContainer(getLIContainerId(\"types\"));\n         confULContainer.add(liContainer);\n         BookmarkablePageLink<Page> typesLink = new BookmarkablePageLink<>(\"types\", Types.class);\n@@ -118,10 +127,6 @@ public BasePage(final PageParameters parameters) {\n         confULContainer.add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"policies\", Policies.class));\n \n-        liContainer = new WebMarkupContainer(getLIContainerId(\"securityQuestions\"));\n-        confULContainer.add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"securityQuestions\", SecurityQuestions.class));\n-\n         liContainer = new WebMarkupContainer(getLIContainerId(\"layouts\"));\n         confULContainer.add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"layouts\", Layouts.class));"},{"sha":"c3d61fd2f60c6b42669b3211ceb0a7dc796ca169","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Logs.java","status":"modified","additions":3,"deletions":39,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -21,13 +21,8 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ConsoleLogPanel;\n import org.apache.syncope.client.console.panels.CoreLogPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.LoggerTO;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -40,29 +35,18 @@ public class Logs extends BasePage {\n \n     private static final long serialVersionUID = -1100228004207271271L;\n \n-    private final BaseModal<LoggerTO> coreLogModal;\n-\n-    private final BaseModal<LoggerTO> consoleLogModal;\n-\n     private final AjaxBootstrapTabbedPanel<ITab> tabbedPanel;\n \n     public Logs(final PageParameters parameters) {\n         super(parameters);\n \n-        coreLogModal = new BaseModal<>(\"coreLogModal\");\n-        consoleLogModal = new BaseModal<>(\"consoleLogModal\");\n-\n         final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n-        content.add(new Label(\"header\", \"Logs\"));\n+        content.add(new Label(\"header\", getString(\"header_title\")));\n         content.setOutputMarkupId(true);\n         tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n         content.add(tabbedPanel);\n \n         add(content);\n-        addWindowWindowClosedCallback(coreLogModal);\n-        addWindowWindowClosedCallback(consoleLogModal);\n-        add(coreLogModal);\n-        add(consoleLogModal);\n     }\n \n     private List<ITab> buildTabList() {\n@@ -75,7 +59,7 @@ private List<ITab> buildTabList() {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new CoreLogPanel(panelId, getPageReference(), coreLogModal);\n+                return new CoreLogPanel(panelId, getPageReference());\n             }\n         });\n \n@@ -85,30 +69,10 @@ public Panel getPanel(final String panelId) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new ConsoleLogPanel(panelId, getPageReference(), consoleLogModal);\n+                return new ConsoleLogPanel(panelId, getPageReference());\n             }\n         });\n \n         return tabs;\n     }\n-\n-    private void addWindowWindowClosedCallback(final BaseModal<?> modal) {\n-        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                tabbedPanel.setSelectedTab(tabbedPanel.getSelectedTab());\n-                target.add(tabbedPanel);\n-                modal.show(false);\n-\n-                if (((AbstractBasePage) Logs.this.getPage()).isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    ((AbstractBasePage) Logs.this.getPage()).setModalResult(false);\n-                }\n-            }\n-        });\n-    }\n }"},{"sha":"d58e3696903fc341abb7c9bc6d7cc3ed0fd4084e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/SecurityQuestions.java","status":"modified","additions":77,"deletions":1,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -18,13 +18,89 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.SecurityQuestionModalPanel;\n+import org.apache.syncope.client.console.panels.SecurityQuestionsPanel;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public class SecurityQuestions extends BasePage {\n \n-    private static final long serialVersionUID = -1100228004207271271L;\n+    private static final long serialVersionUID = 931085006718655535L;\n+\n+    private final SecurityQuestionsPanel securityQuestionsPanel;\n \n     public SecurityQuestions(final PageParameters parameters) {\n         super(parameters);\n+\n+        final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.add(new Label(\"header\", getString(\"header_title\")));\n+        content.setOutputMarkupId(true);\n+        add(content);\n+\n+        final BaseModal<SecurityQuestionTO> securityQuestionModal = new BaseModal<>(\"securityQuestionModal\");\n+        securityQuestionModal.setFormModel(new SecurityQuestionTO());\n+        securityQuestionModal.size(Modal.Size.Large);\n+        addWindowWindowClosedCallback(securityQuestionModal);\n+        add(securityQuestionModal);\n+\n+        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\n+                \"createSecurityQuestion\", getPageReference()) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onClickInternal(final AjaxRequestTarget target) {\n+                securityQuestionModal.header(new ResourceModel(\"createSecurityQuestion\"));\n+                target.add(securityQuestionModal.setContent(\n+                        new SecurityQuestionModalPanel(securityQuestionModal, getPageReference(), true)));\n+                securityQuestionModal.addSumbitButton();\n+                securityQuestionModal.show(true);\n+            }\n+        };\n+        content.add(createLink);\n+\n+        if (SyncopeConsoleSession.get()\n+                .owns(StandardEntitlement.SECURITY_QUESTION_CREATE)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(\n+                    createLink, ENABLE, StandardEntitlement.SECURITY_QUESTION_CREATE);\n+        }\n+\n+        securityQuestionsPanel = new SecurityQuestionsPanel(\n+                \"securityQuestionPanel\", getPageReference(), securityQuestionModal);\n+        securityQuestionsPanel.setOutputMarkupId(true);\n+\n+        content.add(securityQuestionsPanel);\n+    }\n+\n+    private void addWindowWindowClosedCallback(final BaseModal<?> modal) {\n+        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add(securityQuestionsPanel);\n+                modal.show(false);\n+\n+                if (((AbstractBasePage) SecurityQuestions.this.getPage()).isModalResult()) {\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n+                    ((AbstractBasePage) SecurityQuestions.this.getPage()).setModalResult(false);\n+                }\n+            }\n+        });\n     }\n }"},{"sha":"a024a03fe95ca56fd7719e91e6138d30307fb3b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConsoleLogPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConsoleLogPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConsoleLogPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConsoleLogPanel.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -24,7 +24,6 @@\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.core.LoggerContext;\n import org.apache.logging.log4j.core.config.LoggerConfig;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n@@ -36,7 +35,7 @@ public class ConsoleLogPanel extends AbstractLogsPanel<LoggerTO> {\n \n     private static final ConsoleLoggerController CONSOLE_LOGGER_CONTROLLER = new ConsoleLoggerController();\n \n-    public ConsoleLogPanel(final String id, final PageReference pageReference, final BaseModal<LoggerTO> modal) {\n+    public ConsoleLogPanel(final String id, final PageReference pageReference) {\n         super(id, pageReference, CONSOLE_LOGGER_CONTROLLER.getLoggers());\n     }\n "},{"sha":"c620f101b00ae46be975c91b36f51064c0107762","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/CoreLogPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.panels;\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerType;\n import org.apache.syncope.common.rest.api.service.LoggerService;\n@@ -29,7 +28,7 @@ public class CoreLogPanel extends AbstractLogsPanel<LoggerTO> {\n \n     private static final long serialVersionUID = 3905038169553185171L;\n \n-    public CoreLogPanel(final String id, final PageReference pageReference, final BaseModal<LoggerTO> modal) {\n+    public CoreLogPanel(final String id, final PageReference pageReference) {\n         super(id, pageReference, SyncopeConsoleSession.get().getService(LoggerService.class).list(LoggerType.LOG));\n \n     }"},{"sha":"bef42123c2c30879720dc0cede823b33ad0d06cd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionDetailsPanel.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class SecurityQuestionDetailsPanel extends Panel {\n+\n+    private static final long serialVersionUID = 6278708606604582875L;\n+\n+    public SecurityQuestionDetailsPanel(\n+            final String id,\n+            final BaseModal<SecurityQuestionTO> modal) {\n+        super(id);\n+\n+        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+\n+        container.setOutputMarkupId(\n+                true);\n+        add(container);\n+\n+        final Form<SecurityQuestionTO> form = new Form<>(\"form\");\n+\n+        final SecurityQuestionTO securityQuestionTO = modal.getFormModel();\n+        form.setModel(new CompoundPropertyModel<>(securityQuestionTO));\n+        container.add(form);\n+\n+        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\n+                \"key\", getString(\"key\"), new PropertyModel<String>(securityQuestionTO, \"key\"));\n+        key.addRequiredLabel();\n+        final String keyModelObject = String.valueOf(key.getModelObject());\n+        key.setEnabled(keyModelObject == null || keyModelObject.isEmpty());\n+        form.add(key);\n+\n+        final AjaxTextFieldPanel content = new AjaxTextFieldPanel(\n+                \"content\", getString(\"content\"), new PropertyModel<String>(securityQuestionTO, \"content\"));\n+        content.addRequiredLabel();\n+        content.setEnabled(true);\n+        content.setVisible(true);\n+        form.add(content);\n+    }\n+}"},{"sha":"c66207c0afe5393562fb73b20567c2cb8ed96a1e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionModalPanel.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+\n+public class SecurityQuestionModalPanel extends AbstractModalPanel {\n+\n+    private static final long serialVersionUID = 4024126489500665435L;\n+\n+    private final boolean createFlag;\n+\n+    public SecurityQuestionModalPanel(\n+            final BaseModal<SecurityQuestionTO> modal,\n+            final PageReference pageRef,\n+            final boolean createFlag) {\n+        super(modal, pageRef);\n+        this.createFlag = createFlag;\n+        add(new SecurityQuestionDetailsPanel(\"securityQuestionDetailsPanel\", modal));\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        try {\n+            final SecurityQuestionTO securityQuestionTO = SecurityQuestionTO.class.cast(form.getModelObject());\n+\n+            if (createFlag) {\n+                SyncopeConsoleSession.get().getService(SecurityQuestionService.class).create(securityQuestionTO);\n+            } else {\n+                SyncopeConsoleSession.get().getService(SecurityQuestionService.class).update(securityQuestionTO);\n+            }\n+\n+            if (pageRef.getPage() instanceof AbstractBasePage) {\n+                ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n+            }\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating or updating SecutiryQuestionTO\", e);\n+            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            modal.getFeedbackPanel().refresh(target);\n+        }\n+    }\n+}"},{"sha":"cc3ea1b9f1a1575826e9785d15657ec0dd0244e9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"added","additions":223,"deletions":0,"changes":223,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SecurityQuestionsPanel extends AbstractTypesPanel<SecurityQuestionTO> {\n+\n+    private static final long serialVersionUID = 3323019773236588850L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SecurityQuestionsPanel.class);\n+\n+    private static final String PAGINATOR_ROWS_KEYS = Constants.PREF_SECURITY_QUESTIONS_PAGINATOR_ROWS;\n+\n+    private final BaseModal<SecurityQuestionTO> modal;\n+\n+    public SecurityQuestionsPanel(\n+            final String id, final PageReference pageReference, final BaseModal<SecurityQuestionTO> modal) {\n+        super(id, pageReference);\n+        this.pageRows = prefMan.getPaginatorRows(getRequest(), PAGINATOR_ROWS_KEYS);\n+        this.modal = modal;\n+\n+        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        buildDataTable(container,\n+                getColumns(container, pageReference),\n+                new SecurityQuestionsPanel.SecurityQuestionsProvider(),\n+                PAGINATOR_ROWS_KEYS);\n+\n+    }\n+\n+    private List<IColumn<SecurityQuestionTO, String>> getColumns(\n+            final WebMarkupContainer webContainer, final PageReference pageReference) {\n+\n+        final List<IColumn<SecurityQuestionTO, String>> columns = new ArrayList<>();\n+\n+        for (Field field : SecurityQuestionTO.class.getDeclaredFields()) {\n+\n+            if (field != null && !Modifier.isStatic(field.getModifiers())) {\n+                final String fieldName = field.getName();\n+                if (field.getType().isArray()) {\n+                    final IColumn<SecurityQuestionTO, String> column = new PropertyColumn<SecurityQuestionTO, String>(\n+                            new ResourceModel(field.getName()), field.getName()) {\n+\n+                        private static final long serialVersionUID = 3282547854226892169L;\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            String css = super.getCssClass();\n+                            if (\"key\".equals(fieldName)) {\n+                                css = StringUtils.isBlank(css)\n+                                        ? \"medium_fixedsize\"\n+                                        : css + \" medium_fixedsize\";\n+                            }\n+                            return css;\n+                        }\n+                    };\n+                    columns.add(column);\n+\n+                } else {\n+                    final IColumn<SecurityQuestionTO, String> column = new PropertyColumn<SecurityQuestionTO, String>(\n+                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n+\n+                        private static final long serialVersionUID = 3282547854226892169L;\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            String css = super.getCssClass();\n+                            if (\"key\".equals(fieldName)) {\n+                                css = StringUtils.isBlank(css)\n+                                        ? \"medium_fixedsize\"\n+                                        : css + \" medium_fixedsize\";\n+                            }\n+                            return css;\n+                        }\n+                    };\n+                    columns.add(column);\n+                }\n+            }\n+        }\n+\n+        columns.add(new AbstractColumn<SecurityQuestionTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<SecurityQuestionTO>> item, final String componentId,\n+                    final IModel<SecurityQuestionTO> model) {\n+\n+                final SecurityQuestionTO securityQuestionTO = model.getObject();\n+\n+                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(pageReference);\n+                actionLinks.setDisableIndicator(true);\n+                actionLinks\n+                        .addWithRoles(new ActionLink<Serializable>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                                modal.header(Model.of(String.valueOf(securityQuestionTO.getKey())));\n+                                modal.setFormModel(securityQuestionTO);\n+                                target.add(modal.setContent(\n+                                        new SecurityQuestionModalPanel(modal, pageReference, false)));\n+                                modal.addSumbitButton();\n+                                modal.show(true);\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.SECURITY_QUESTION_UPDATE)\n+                        .addWithRoles(new ActionLink<Serializable>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                                try {\n+                                    SyncopeConsoleSession.get().getService(SecurityQuestionService.class\n+                                    ).delete(securityQuestionTO.getKey());\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    feedbackPanel.refresh(target);\n+                                    target.add(webContainer);\n+                                } catch (Exception e) {\n+                                    LOG.error(\"While deleting SecutiryQuestionTO\", e);\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    feedbackPanel.refresh(target);\n+                                }\n+\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.SECURITY_QUESTION_DELETE);\n+\n+                item.add(actionLinks.build(componentId));\n+            }\n+        });\n+\n+        return columns;\n+\n+    }\n+\n+    private final class SecurityQuestionsProvider extends SortableDataProvider<SecurityQuestionTO, String> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final SortableDataProviderComparator<SecurityQuestionTO> comparator;\n+\n+        private SecurityQuestionsProvider() {\n+            super();\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<SecurityQuestionTO> iterator(final long first, final long count) {\n+            final List<SecurityQuestionTO> list = SyncopeConsoleSession.get().getService(SecurityQuestionService.class).\n+                    list();\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return SyncopeConsoleSession.get().getService(SecurityQuestionService.class).list().size();\n+        }\n+\n+        @Override\n+        public IModel<SecurityQuestionTO> model(final SecurityQuestionTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"d8a0b8e9d009a473343a8e4276bd2b278a4a6252","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -79,7 +79,7 @@ public BaseModal(final String id) {\n         feedbackPanel.setOutputMarkupId(true);\n         add(feedbackPanel);\n \n-        form = new Form<T>(FORM);\n+        form = new Form<>(FORM);\n         add(form);\n \n         content = new AbstractModalPanel(this, null) {"},{"sha":"20b2c4fa13319789ffe5405d1fa3e5e85332d85f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Logs.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -14,4 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+header_title=Logs\n logLevel=Log Level"},{"sha":"20b2c4fa13319789ffe5405d1fa3e5e85332d85f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Logs_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs_it.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -14,4 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+header_title=Logs\n logLevel=Log Level"},{"sha":"20b2c4fa13319789ffe5405d1fa3e5e85332d85f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Logs_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs_pt_BR.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -14,4 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+header_title=Logs\n logLevel=Log Level"},{"sha":"93608d2e000ae938c4f54c7528aa780d989175f0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/SecurityQuestions.html","status":"modified","additions":24,"deletions":14,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -19,21 +19,31 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-\n-    <section class=\"content-header\">\n-      <h1>\n-        Security Questions\n-        <small>Work in progress</small>\n-      </h1>\n-    </section>\n-\n-    <section class=\"content\">\n-      <div class=\"progress progress active\" style=\"margin:100px\">\n-        <div style=\"width: 70%\" aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"20\" role=\"progressbar\" class=\"progress-bar progress-bar-success progress-bar-striped\">\n-          <span class=\"sr-only\">20% Complete</span>\n+    <div class=\"wrapper\">\n+      <div class=\"admin-content-page\" wicket:id=\"content\">\n+        <div class=\"box box-solid box-primary\">\n+          <div class=\"box-header with-border\">\n+            <h3 class=\"box-title\">\n+              <span wicket:id=\"header\"></span>\n+            </h3>\n+            <div class=\"box-tools pull-right\">\n+              <ul class=\"nav navbar-nav actions\">\n+                <li>\n+                  <a wicket:message=\"title:createSecurityQuestion\" wicket:id=\"createSecurityQuestion\">\n+                    <i class=\"glyphicon glyphicon-link\"></i>\n+                  </a>                  \n+                </li>\n+              </ul>\n+            </div>\n+          </div>\n+          <div class=\"box-body\">\n+            <div class=\"realms\">\n+              <div wicket:id=\"securityQuestionPanel\"></div>\n+            </div>\n+          </div>\n         </div>\n       </div>\n-    </section>\n-\n+    </div>\n+    <div wicket:id=\"securityQuestionModal\"></div>\n   </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"bb64381241bf9667fca22ea6858cdfd3b1d071e3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/SecurityQuestions.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+header_title=Security Questions\n+createSecurityQuestion=Create new Secutiry Questions\n+content=Content"},{"sha":"5943987dca56b3559992e369d68b20ee2549a423","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/SecurityQuestions_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions_it.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+header_title=Security Questions\n+createSecurityQuestion=Crea una nuova domanda di sicurezza\n+content=Contenuto"},{"sha":"770e81d8eb61dd2c66870f44e582b5d4176ca4ed","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/SecurityQuestions_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions_pt_BR.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+header_title=Security Questions\n+createSecurityQuestion=Cria um novo Security Question\n+content=Conte\\u00fado"},{"sha":"153d6868691d6367a71f549c38d372643abcb821","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SecurityQuestionDetailsPanel.html","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.html?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,34 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"container\">\n+      <div class=\"form-group\">\n+        <form wicket:id=\"form\">\n+          <div class=\"form-group\">\n+            <span wicket:id=\"key\">[key]</span>\n+          </div>\n+          <div class=\"form-group\">\n+            <span wicket:id=\"content\">[content]</span>\n+          </div>\n+        </form>\n+      </div>\n+    </span>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"d55b703a7065ab2798d417ccf82d833bdbd0234f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SecurityQuestionDetailsPanel.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+key=Key\n+content=Content"},{"sha":"17eeed69578919e48a1bdead34052820a7115b86","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SecurityQuestionDetailsPanel_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel_it.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+key=Key\n+content=Contenuto"},{"sha":"6523f0d3135f944b91f551b1e0099a40dd581655","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SecurityQuestionDetailsPanel_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionDetailsPanel_pt_BR.properties?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+key=Key\n+content=Conte\\u00fado"},{"sha":"224b6c0045f7f7a14060f00430ecaef600350a2e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SecurityQuestionModalPanel.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/50ecf0d80163d6d828417bb71f3b52a910dfc716/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionModalPanel.html?ref=50ecf0d80163d6d828417bb71f3b52a910dfc716","patch":"@@ -0,0 +1,24 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div wicket:id=\"securityQuestionDetailsPanel\">[securityQuestionDetailsPanel]</div>\n+  </wicket:extend>\n+</html>"}]}