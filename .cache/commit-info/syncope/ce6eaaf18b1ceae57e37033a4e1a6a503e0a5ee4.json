{"sha":"ce6eaaf18b1ceae57e37033a4e1a6a503e0a5ee4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNlNmVhYWYxOGIxY2VhZTU3ZTM3MDMzYTRlMWE2YTUwM2UwYTVlZTQ=","commit":{"author":{"name":"Guido Wimmel","email":"gwimmel@apache.org","date":"2014-07-05T18:28:52Z"},"committer":{"name":"Guido Wimmel","email":"gwimmel@apache.org","date":"2014-07-05T18:28:52Z"},"message":"[SYNCOPE-531] Fix: Failed login counter not reset if log.lastlogindate==false\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1608106 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"27158a710641e26d4c12cf1504f67ac6a03d3f91","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/27158a710641e26d4c12cf1504f67ac6a03d3f91"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ce6eaaf18b1ceae57e37033a4e1a6a503e0a5ee4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce6eaaf18b1ceae57e37033a4e1a6a503e0a5ee4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ce6eaaf18b1ceae57e37033a4e1a6a503e0a5ee4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce6eaaf18b1ceae57e37033a4e1a6a503e0a5ee4/comments","author":null,"committer":null,"parents":[{"sha":"512efdabdf9f4011a71fdefa494db93630749fd1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/512efdabdf9f4011a71fdefa494db93630749fd1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/512efdabdf9f4011a71fdefa494db93630749fd1"}],"stats":{"total":38,"additions":28,"deletions":10},"files":[{"sha":"8e02e8781de6d6ab16e93a3504268385f0181dd3","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":28,"deletions":10,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce6eaaf18b1ceae57e37033a4e1a6a503e0a5ee4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce6eaaf18b1ceae57e37033a4e1a6a503e0a5ee4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=ce6eaaf18b1ceae57e37033a4e1a6a503e0a5ee4","patch":"@@ -123,6 +123,8 @@ public Authentication authenticate(final Authentication authentication)\n             }\n         }\n \n+        updateLoginAttributes(user, authenticated);\n+        \n         UsernamePasswordAuthenticationToken token;\n \n         if (authenticated) {\n@@ -147,17 +149,7 @@ public Authentication authenticate(final Authentication authentication)\n             LOG.debug(\"User {} successfully authenticated, with roles {}\",\n                     authentication.getPrincipal(), token.getAuthorities());\n \n-            if (user != null && Boolean.valueOf(confDAO.find(\"log.lastlogindate\", Boolean.toString(true)).getValue())) {\n-                user.setLastLoginDate(new Date());\n-                user.setFailedLogins(0);\n-                userDAO.save(user);\n-            }\n         } else {\n-            if (user != null) {\n-                user.setFailedLogins(user.getFailedLogins() + 1);\n-                userDAO.save(user);\n-            }\n-\n             auditManager.audit(\n                     AuditElements.EventCategoryType.REST,\n                     \"AuthenticationController\",\n@@ -176,6 +168,32 @@ public Authentication authenticate(final Authentication authentication)\n \n         return token;\n     }\n+    \n+    private void updateLoginAttributes(SyncopeUser user, boolean authenticated) {\n+    \t\n+    \tif (user != null) {\n+    \t\tboolean userModified = false;\n+    \t\t\n+    \t\tif (Boolean.valueOf(confDAO.find(\"log.lastlogindate\", Boolean.toString(true)).getValue())) {\n+    \t\t\tuser.setLastLoginDate(new Date());\n+    \t\t\tuserModified = true;\n+    \t\t}\n+    \t\t\n+    \t\tif (authenticated) {\n+    \t\t\tif (user.getFailedLogins() != 0) {\n+    \t\t\t\tuser.setFailedLogins(0);\n+    \t\t\t\tuserModified = true;\n+    \t\t\t}\n+    \t\t} else {\n+    \t\t\tuser.setFailedLogins(user.getFailedLogins() + 1);\n+    \t\t\tuserModified = true;\n+    \t\t}\n+    \t\t\n+    \t\tif (userModified) {\n+    \t\t\tuserDAO.save(user);\n+    \t\t}\n+    \t}\n+    }\n \n     protected boolean authenticate(final String password, final CipherAlgorithm cipherAlgorithm,\n             final String digestedPassword) {"}]}