{"sha":"ce711379cde24edf004fd82a87556d569786a654","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNlNzExMzc5Y2RlMjRlZGYwMDRmZDgyYTg3NTU2ZDU2OTc4NmE2NTQ=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-04T14:02:34Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-04T14:02:34Z"},"message":"Missing entitlemnt management in role interface\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246716 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2609935171e4ad4c76fc4c46ed5a0609ee8577f0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2609935171e4ad4c76fc4c46ed5a0609ee8577f0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ce711379cde24edf004fd82a87556d569786a654","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce711379cde24edf004fd82a87556d569786a654","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ce711379cde24edf004fd82a87556d569786a654","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce711379cde24edf004fd82a87556d569786a654/comments","author":null,"committer":null,"parents":[{"sha":"9518d3fff1a0f4032d86e3a8d95694e8284998a2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9518d3fff1a0f4032d86e3a8d95694e8284998a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9518d3fff1a0f4032d86e3a8d95694e8284998a2"}],"stats":{"total":1118,"additions":626,"deletions":492},"files":[{"sha":"4315928c8197691d24a6d48a2a0db2cbb35f2a71","filename":"console/src/main/java/org/syncope/console/commons/StringChoiceRenderer.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FStringChoiceRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FStringChoiceRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FStringChoiceRenderer.java?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -0,0 +1,30 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.commons;\n+\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+\n+public class StringChoiceRenderer implements IChoiceRenderer<String> {\n+\n+    @Override\n+    public Object getDisplayValue(final String t) {\n+        return t;\n+    }\n+\n+    @Override\n+    public String getIdValue(final String t, final int i) {\n+        return t;\n+    }\n+}"},{"sha":"b6efb30562236dd9bb4a4fcd5d143677dccb2fcf","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":42,"deletions":42,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -14,7 +14,6 @@\n  */\n package org.syncope.console.pages;\n \n-import java.io.InputStream;\n import java.util.Arrays;\n import java.util.List;\n import java.util.Locale;\n@@ -44,14 +43,16 @@\n  */\n public class Login extends WebPage {\n \n-    public Form form;\n-    public TextField usernameField;\n-    public TextField passwordField;\n-    public DropDownChoice<String> languageSelect;\n-    public InputStream inputStream;\n+    private Form form;\n+\n+    private TextField usernameField;\n+\n+    private TextField passwordField;\n+\n+    private DropDownChoice<String> languageSelect;\n \n     @SpringBean(name = \"restClient\")\n-    protected RestClient restClient;\n+    private RestClient restClient;\n \n     public Login(PageParameters parameters) {\n         super(parameters);\n@@ -65,29 +66,29 @@ public Login(PageParameters parameters) {\n         passwordField.setMarkupId(\"password\");\n         form.add(passwordField);\n \n-        languageSelect = new LocaleDropDown(\"language\",Arrays.asList\n-                (new Locale[]{Locale.ENGLISH, Locale.ITALIAN}));\n-        \n+        languageSelect = new LocaleDropDown(\"language\", Arrays.asList(\n+                new Locale[]{Locale.ENGLISH, Locale.ITALIAN}));\n+\n         form.add(languageSelect);\n \n         Button submitButton = new Button(\"submit\", new Model(\n                 getString(\"submit\"))) {\n \n             @Override\n             public void onSubmit() {\n-               SyncopeUser user = authenticate(usernameField.getRawInput(),\n-                       passwordField.getRawInput());\n+                SyncopeUser user = authenticate(usernameField.getRawInput(),\n+                        passwordField.getRawInput());\n \n-               if(user != null) {\n-                ((SyncopeSession)Session.get()).setUser(user);\n-                setResponsePage(new WelcomePage(null));\n-               }\n+                if (user != null) {\n+                    ((SyncopeSession) Session.get()).setUser(user);\n+                    setResponsePage(new WelcomePage(null));\n+                }\n             }\n         };\n \n         submitButton.setDefaultFormProcessing(false);\n         form.add(submitButton);\n-        \n+\n         add(form);\n         add(new FeedbackPanel(\"feedback\"));\n     }\n@@ -105,50 +106,49 @@ public SyncopeUser authenticate(String username, String password) {\n         String roles = \"\";\n \n         //1.Set provided credentials to check\n-        ((CommonsClientHttpRequestFactory) restClient.getRestTemplate()\n-                .getRequestFactory()).getHttpClient().getState()\n-                .setCredentials(AuthScope.ANY,\n+        ((CommonsClientHttpRequestFactory) restClient.getRestTemplate().\n+                getRequestFactory()).getHttpClient().getState().setCredentials(\n+                AuthScope.ANY,\n                 new UsernamePasswordCredentials(username, password));\n \n         //2.Search authorizations for user specified by credentials\n         List<String> auths;\n \n         try {\n-        auths = Arrays.asList(\n-                restClient.getRestTemplate().getForObject(\n-                restClient.getBaseURL()+ \"auth/entitlements.json\",\n-                String[].class));\n-        }\n-        catch(HttpClientErrorException e){\n+            auths = Arrays.asList(\n+                    restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"auth/entitlements.json\",\n+                    String[].class));\n+        } catch (HttpClientErrorException e) {\n             //Reset the credentials if exception occurs\n-            ((CommonsClientHttpRequestFactory) restClient.getRestTemplate()\n-                .getRequestFactory()).getHttpClient().getState()\n-                .setCredentials(AuthScope.ANY,null);\n+            ((CommonsClientHttpRequestFactory) restClient.getRestTemplate().\n+                    getRequestFactory()).getHttpClient().getState().\n+                    setCredentials(AuthScope.ANY, null);\n             getSession().error(e.getMessage());\n             return null;\n         }\n \n         if (auths != null && auths.size() > 0) {\n \n-            for(int i = 0; i< auths.size(); i++) {\n+            for (int i = 0; i < auths.size(); i++) {\n                 String role = auths.get(i);\n-                roles +=role;\n+                roles += role;\n \n-                if(i != auths.size())\n+                if (i != auths.size()) {\n                     roles += \",\";\n+                }\n             }\n \n-        user = new SyncopeUser(username, roles);\n+            user = new SyncopeUser(username, roles);\n \n-        return user;\n-        }\n-        else {\n-           //Reset the credentials if no auth exist for the specified user\n-            ((CommonsClientHttpRequestFactory) restClient.getRestTemplate()\n-                .getRequestFactory()).getHttpClient().getState()\n-                .setCredentials(AuthScope.ANY,null);\n-           getSession().error(getString(\"login-error\"));\n-           return null;\n+            return user;\n+        } else {\n+            //Reset the credentials if no auth exist for the specified user\n+            ((CommonsClientHttpRequestFactory) restClient.getRestTemplate().\n+                    getRequestFactory()).getHttpClient().getState().\n+                    setCredentials(AuthScope.ANY, null);\n+            getSession().error(getString(\"login-error\"));\n+            return null;\n         }\n     }\n "},{"sha":"8ff6e7d73e99277d5479e19abf5e8604850ce442","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":437,"deletions":403,"changes":840,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -22,7 +22,6 @@\n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n-import java.util.Collection;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n@@ -62,114 +61,127 @@\n \n import org.syncope.console.SyncopeApplication;\n import org.syncope.console.commons.SchemaWrapper;\n+import org.syncope.console.commons.StringChoiceRenderer;\n+import org.syncope.console.rest.EntitlementsRestClient;\n import org.syncope.console.rest.ResourcesRestClient;\n import org.syncope.console.rest.RolesRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.DateFieldPanel;\n+import org.syncope.types.SchemaType;\n \n /**\n  * Modal window with Role form.\n  */\n public class RoleModalPage extends SyncopeModalPage {\n \n-@SpringBean(name = \"rolesRestClient\")\n-RolesRestClient restClient;\n+    @SpringBean(name = \"rolesRestClient\")\n+    private RolesRestClient roleRestClient;\n \n-AjaxButton submit;\n-WebMarkupContainer container;\n+    @SpringBean(name = \"entitlementsRestClient\")\n+    private EntitlementsRestClient entitlementRestClient;\n \n-List<SchemaWrapper> schemaWrappers = new ArrayList<SchemaWrapper>();\n+    private AjaxButton submit;\n \n-RoleTO oldRole;\n-RoleMod roleMod;\n+    private WebMarkupContainer container;\n \n-/**\n-*\n-* @param basePage base\n-* @param modalWindow modal window\n-* @param connectorTO\n-* @param create : set to true only if a CREATE operation is required\n-*/\n-public RoleModalPage(final BasePage basePage, final ModalWindow window,\n-    final RoleTO roleTO, final boolean createFlag) {\n-\n-if(!createFlag)\n-    cloneOldRoleTO(roleTO);\n+    private List<SchemaWrapper> schemaWrappers = new ArrayList<SchemaWrapper>();\n \n-final Form form = new Form(\"RoleForm\");\n+    private RoleTO oldRole;\n \n-form.setModel(new CompoundPropertyModel(roleTO));\n+    private RoleMod roleMod;\n \n-setupSchemaWrappers(createFlag, roleTO);\n+    /**\n+     * Constructor.\n+     *\n+     * @param basePage\n+     * @param window\n+     * @param roleTO\n+     * @param createFlag\n+     */\n+    public RoleModalPage(final BasePage basePage, final ModalWindow window,\n+            final RoleTO roleTO, final boolean createFlag) {\n \n-final ListView roleAttributesView = new ListView(\"roleSchemas\"\n-                                                            , schemaWrappers) {\n+        super();\n \n-    @Override\n-    protected void populateItem(ListItem item) {\n-        final SchemaWrapper schemaWrapper = (SchemaWrapper) item\n-                .getDefaultModelObject();\n+        if (!createFlag) {\n+            cloneOldRoleTO(roleTO);\n+        }\n \n-        final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n+        final Form form = new Form(\"RoleForm\");\n \n-        item.add(new Label(\"name\", schemaWrapper.getSchemaTO().getName()));\n+        form.setModel(new CompoundPropertyModel(roleTO));\n \n-        item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n+        setupSchemaWrappers(createFlag, roleTO);\n \n-            Panel panel;\n+        final ListView roleAttributesView = new ListView(\"roleSchemas\",\n+                schemaWrappers) {\n \n             @Override\n             protected void populateItem(final ListItem item) {\n-                String mandatoryCondition =\n-                        schemaTO.getMandatoryCondition();\n+                final SchemaWrapper schemaWrapper = (SchemaWrapper) item.\n+                        getDefaultModelObject();\n \n-                boolean required = false;\n+                final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n \n-                if (mandatoryCondition.equalsIgnoreCase(\"true\")) {\n-                    required = true;\n-                }\n+                item.add(new Label(\"name\",\n+                        schemaWrapper.getSchemaTO().getName()));\n \n-              if (schemaTO.getType().getClassName()\n-                        .equals(\"java.lang.Boolean\")) {\n-                    panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getName(),\n-                            new Model() {\n+                item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n \n-                        @Override\n-                        public Serializable getObject() {\n-                            return (String) item.getModelObject();\n-                        }\n+                    Panel panel;\n \n-                        @Override\n-                        public void setObject(Serializable object) {\n-                            Boolean val = (Boolean) object;\n-                            item.setModelObject(val.toString());\n+                    @Override\n+                    protected void populateItem(final ListItem item) {\n+                        String mandatoryCondition =\n+                                schemaTO.getMandatoryCondition();\n+\n+                        boolean required = false;\n+\n+                        if (mandatoryCondition.equalsIgnoreCase(\"true\")) {\n+                            required = true;\n                         }\n-                    }, required);\n \n-                } else if (schemaTO.getType().getClassName()\n-                        .equals(\"java.util.Date\")) {\n-                    panel = new DateFieldPanel(\"panel\", schemaTO.getName(),\n-                            new Model() {\n+                        if (schemaTO.getType() == SchemaType.Boolean) {\n+                            panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.\n+                                    getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    return (String) item.getModelObject();\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    Boolean val = (Boolean) object;\n+                                    item.setModelObject(val.toString());\n+                                }\n+                            }, required);\n+\n+                        } else if (schemaTO.getType() == SchemaType.Date) {\n+                            panel = new DateFieldPanel(\"panel\",\n+                                    schemaTO.getName(), new Model() {\n \n                                 @Override\n                                 public Serializable getObject() {\n                                     DateFormat formatter = new SimpleDateFormat(\n                                             schemaTO.getConversionPattern());\n                                     Date date = new Date();\n                                     try {\n-                                        String dateValue = (String) item\n-                                                .getModelObject();\n+                                        String dateValue = (String) item.\n+                                                getModelObject();\n                                         //Default value:yyyy-MM-dd\n-                                        if(!dateValue.equals(\"\"))\n+                                        if (!dateValue.equals(\"\")) {\n                                             date = formatter.parse(dateValue);\n-                                        else\n+                                        } else {\n                                             date = null;\n+                                        }\n                                     } catch (ParseException ex) {\n                                         Logger.getLogger(\n-                                                RoleModalPage.class.getName())\n-                                                .log(Level.SEVERE, null, ex);\n+                                                RoleModalPage.class.getName()).\n+                                                log(\n+                                                Level.SEVERE, null, ex);\n                                     }\n                                     return date;\n                                 }\n@@ -182,460 +194,482 @@ public void setObject(Serializable object) {\n                                     String val = formatter.format(date);\n                                     item.setModelObject(val);\n                                 }\n-                            }, schemaTO.getConversionPattern(),required,\n-                                    schemaTO.isReadonly(),form);\n-                }\n-                /*Common other cases : java.lang.String,java.lang.Double,\n-                java.lang.Long*/\n-                else  {\n-                    panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getName(),\n-                            new Model() {\n-\n-                        @Override\n-                        public Serializable getObject() {\n-                            return (String) item.getModelObject();\n-                        }\n+                            }, schemaTO.getConversionPattern(),\n+                                    required,\n+                                    schemaTO.isReadonly(), form);\n+                        } else {\n+                            /*Common other cases :\n+                            java.lang.String,java.lang.Double, java.lang.Long*/\n \n-                        @Override\n-                        public void setObject(Serializable object) {\n-                            item.setModelObject((String) object);\n-                        }\n-                    }, required);\n-                }\n+                            panel = new AjaxTextFieldPanel(\"panel\", schemaTO.\n+                                    getName(), new Model() {\n \n-                item.add(panel);\n-            }\n-        });\n+                                @Override\n+                                public Serializable getObject() {\n+                                    return (String) item.getModelObject();\n+                                }\n \n-        AjaxButton addButton = new AjaxButton(\"add\",\n-                new Model(getString(\"add\"))) {\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    item.setModelObject((String) object);\n+                                }\n+                            }, required);\n+                        }\n \n-            @Override\n-            protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                schemaWrapper.getValues().add(\"\");\n+                        item.add(panel);\n+                    }\n+                });\n \n-                target.addComponent(container);\n-            }\n-        };\n+                AjaxButton addButton = new AjaxButton(\"add\",\n+                        new Model(getString(\"add\"))) {\n \n-        AjaxButton dropButton = new AjaxButton(\"drop\",\n-                new Model(getString(\"drop\"))) {\n+                    @Override\n+                    protected void onSubmit(final AjaxRequestTarget target,\n+                            final Form form) {\n \n-            @Override\n-            protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                //Drop the last component added\n-                schemaWrapper.getValues().remove(schemaWrapper.getValues()\n-                        .size() - 1);\n+                        schemaWrapper.getValues().add(\"\");\n \n-                target.addComponent(container);\n-            }\n+                        target.addComponent(container);\n+                    }\n+                };\n \n-            @Override\n-            protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n-                    private static final long serialVersionUID = 1L;\n+                AjaxButton dropButton = new AjaxButton(\"drop\",\n+                        new Model(getString(\"drop\"))) {\n \n                     @Override\n-                    public CharSequence preDecorateScript(CharSequence script) {\n-                        return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                +\"{\"+script+\"}\";\n+                    protected void onSubmit(final AjaxRequestTarget target,\n+                            final Form form) {\n+\n+                        //Drop the last component added\n+                        schemaWrapper.getValues().remove(\n+                                schemaWrapper.getValues().size() - 1);\n+\n+                        target.addComponent(container);\n                     }\n-                };\n-            }\n-        };\n \n-        if (schemaTO.getType().getClassName().equals(\"java.lang.Boolean\")) {\n-            addButton.setVisible(false);\n-            dropButton.setVisible(false);\n-        }\n+                    @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n \n-        addButton.setDefaultFormProcessing(false);\n-        addButton.setVisible(schemaTO.isMultivalue());\n+                            private static final long serialVersionUID = 1L;\n \n-        dropButton.setDefaultFormProcessing(false);\n-        dropButton.setVisible(schemaTO.isMultivalue());\n+                            @Override\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n \n-        if (schemaWrapper.getValues().size() == 1) {\n-            dropButton.setVisible(false);\n-        }\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n+                            }\n+                        };\n+                    }\n+                };\n \n-        item.add(addButton);\n-        item.add(dropButton);\n-    }\n-};\n+                if (schemaTO.getType() == SchemaType.Boolean) {\n+                    addButton.setVisible(false);\n+                    dropButton.setVisible(false);\n+                }\n \n-form.add(roleAttributesView);\n+                addButton.setDefaultFormProcessing(false);\n+                addButton.setVisible(schemaTO.isMultivalue());\n \n-ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n-selectedResources.setObject(getSelectedResources(roleTO));\n+                dropButton.setDefaultFormProcessing(false);\n+                dropButton.setVisible(schemaTO.isMultivalue());\n \n-ListModel<ResourceTO> availableResources = new ListModel<ResourceTO>();\n-availableResources.setObject(getAvailableResources(roleTO));\n+                if (schemaWrapper.getValues().size() == 1) {\n+                    dropButton.setVisible(false);\n+                }\n \n-ChoiceRenderer paletteRenderer = new ChoiceRenderer(\"name\", \"name\");\n+                item.add(addButton);\n+                item.add(dropButton);\n+            }\n+        };\n \n-final Palette<ResourceTO> resourcesPalette = new Palette(\"resourcesPalette\",\n-selectedResources, availableResources, paletteRenderer, 8, false);\n+        form.add(roleAttributesView);\n \n-form.add(resourcesPalette);\n+        ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n+        selectedResources.setObject(getSelectedResources(roleTO));\n \n-container = new WebMarkupContainer(\"container\");\n-container.add(roleAttributesView);\n-container.setOutputMarkupId(true);\n+        ListModel<ResourceTO> availableResources = new ListModel<ResourceTO>();\n+        availableResources.setObject(getAvailableResources(roleTO));\n \n-form.add(container);\n+        final Palette<ResourceTO> resourcesPalette = new Palette(\n+                \"resourcesPalette\", selectedResources, availableResources,\n+                new ChoiceRenderer(\"name\", \"name\"), 8, false);\n \n-TextField name = new TextField(\"name\");\n-name.setRequired(true);\n-container.add(name);\n+        form.add(resourcesPalette);\n \n-submit = new IndicatingAjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n+        ListModel<String> selectedEntitlements =\n+                new ListModel<String>(roleTO.getEntitlements());\n \n-    @Override\n-    protected void onSubmit(AjaxRequestTarget target, Form form) {\n-        RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n+        ListModel<String> availableEntitlements =\n+                new ListModel<String>(\n+                entitlementRestClient.getAllEntitlements());\n \n-        boolean res = false;\n+        final Palette<String> entitlementsPalette = new Palette(\n+                \"entitlementsPalette\", selectedEntitlements,\n+                availableEntitlements, new StringChoiceRenderer(), 20, false);\n \n-        try {\n+        form.add(entitlementsPalette);\n \n-            roleTO.setResources(getResourcesSet(resourcesPalette\n-                    .getModelCollection()));\n-            roleTO.setAttributes(getRoleAttributes());\n+        container = new WebMarkupContainer(\"container\");\n+        container.add(roleAttributesView);\n+        container.setOutputMarkupId(true);\n \n-            if (createFlag) {\n-                restClient.createRole(roleTO);\n+        form.add(container);\n \n-                Roles callerPage = (Roles)basePage;\n-                callerPage.setOperationResult(true);\n+        TextField name = new TextField(\"name\");\n+        name.setRequired(true);\n+        container.add(name);\n \n-                window.close(target);\n-            } else {\n-                setupRoleMod(roleTO);\n-                //Update role just if it is changed\n-                if(roleMod != null){\n+        submit = new IndicatingAjaxButton(\"submit\", new Model(\n+                getString(\"submit\"))) {\n \n-                res = restClient.updateRole(roleMod);\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n \n-                if (!res) \n-                    error(getString(\"error\"));\n-                 else {\n-                    Roles callerPage = (Roles)basePage;\n-                    callerPage.setOperationResult(true);\n-                }\n-                }\n-                window.close(target);\n-            }\n+                RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n \n-        } catch (Exception e) {\n-            error(getString(\"error\") + \":\" + e.getMessage());\n-        }\n-    }\n+                boolean res = false;\n \n-    @Override\n-    protected void onError(AjaxRequestTarget target, Form form) {\n-        target.addComponent(form.get(\"feedback\"));\n-    }\n-};\n+                try {\n+                    Set<String> resourcesSet = new HashSet<String>(\n+                            resourcesPalette.getModelCollection().size());\n+                    for (ResourceTO resourceTO :\n+                            resourcesPalette.getModelCollection()) {\n \n-String allowedRoles;\n+                        resourcesSet.add(resourceTO.getName());\n+                    }\n+                    roleTO.setResources(resourcesSet);\n \n-if(createFlag)\n-    allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\",\"create\");\n-else\n-    allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\",\"update\");\n+                    List<String> entitlementList = new ArrayList<String>(\n+                            entitlementsPalette.getModelCollection().size());\n+                    for (String entitlement :\n+                            entitlementsPalette.getModelCollection()) {\n \n-MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n+                        entitlementList.add(entitlement);\n+                    }\n+                    roleTO.setEntitlements(entitlementList);\n+                    roleTO.setAttributes(getRoleAttributes());\n+\n+                    if (createFlag) {\n+                        roleRestClient.createRole(roleTO);\n+\n+                        Roles callerPage = (Roles) basePage;\n+                        callerPage.setOperationResult(true);\n+\n+                        window.close(target);\n+                    } else {\n+                        setupRoleMod(roleTO);\n+                        //Update role just if it is changed\n+                        if (roleMod != null) {\n+                            res = roleRestClient.updateRole(roleMod);\n+                            if (!res) {\n+                                error(getString(\"error\"));\n+                            } else {\n+                                Roles callerPage = (Roles) basePage;\n+                                callerPage.setOperationResult(true);\n+                            }\n+                        }\n+                        window.close(target);\n+                    }\n \n-form.add(submit);\n+                } catch (Exception e) {\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n+                }\n+            }\n \n-form.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n+            @Override\n+            protected void onError(AjaxRequestTarget target, Form form) {\n+                target.addComponent(form.get(\"feedback\"));\n+            }\n+        };\n \n-add(form);\n-}\n+        String allowedRoles;\n \n-/**\n-* Covert a resources List<String> to Set<String>.\n-* @return Set<String> of Resources.\n-*/\n-public Set<String> getResourcesSet(Collection<ResourceTO> resourcesList) {\n-Set<String> resourcesSet = new HashSet<String>();\n-\n-for (ResourceTO resourceTO : resourcesList) {\n-    resourcesSet.add(resourceTO.getName());\n-}\n+        if (createFlag) {\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\", \"create\");\n+        } else {\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\", \"update\");\n+        }\n \n-return resourcesSet;\n-}\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                submit, ENABLE, allowedRoles);\n \n-/**\n-* Originals: resources provided for a stored role.\n-* @param roleTO\n-* @return List<ResourceTO>\n-*/\n-public List<ResourceTO> getSelectedResources(RoleTO roleTO) {\n-List<ResourceTO> resources = new ArrayList<ResourceTO>();\n-ResourceTO clusterableResourceTO;\n-\n-for (String resourceName : roleTO.getResources()) {\n-    clusterableResourceTO = new ResourceTO();\n-    clusterableResourceTO.setName(resourceName);\n-    resources.add(clusterableResourceTO);\n-}\n-return resources;\n-}\n+        form.add(submit);\n \n+        form.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n \n-/**\n-* Destinations: all available\n-* @param roleTO\n-* @return List<ResourceTO>\n-*/\n-public List<ResourceTO> getAvailableResources(RoleTO roleTO) {\n+        add(form);\n+    }\n \n-List<ResourceTO> resources = new ArrayList<ResourceTO>();\n+    /**\n+     * Originals: resources provided for a stored role.\n+     * @param roleTO\n+     * @return List<ResourceTO>\n+     */\n+    public List<ResourceTO> getSelectedResources(RoleTO roleTO) {\n+        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n+        ResourceTO clusterableResourceTO;\n+\n+        for (String resourceName : roleTO.getResources()) {\n+            clusterableResourceTO = new ResourceTO();\n+            clusterableResourceTO.setName(resourceName);\n+            resources.add(clusterableResourceTO);\n+        }\n+        return resources;\n+    }\n \n-ResourcesRestClient resourcesRestClient = (ResourcesRestClient) \n-        ((SyncopeApplication) Application.get()).getApplicationContext()\n-        .getBean(\"resourcesRestClient\");\n+    /**\n+     * Destinations: all available\n+     * @param roleTO\n+     * @return List<ResourceTO>\n+     */\n+    public List<ResourceTO> getAvailableResources(RoleTO roleTO) {\n \n-List<ResourceTO> resourcesTos = resourcesRestClient.getAllResources();\n+        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n \n-for (ResourceTO resourceTO : resourcesTos) \n-     resources.add(resourceTO);\n+        ResourcesRestClient resourcesRestClient =\n+                (ResourcesRestClient) ((SyncopeApplication) Application.get()).\n+                getApplicationContext().getBean(\"resourcesRestClient\");\n \n+        List<ResourceTO> resourcesTos = resourcesRestClient.getAllResources();\n \n-return resources;\n-}\n+        for (ResourceTO resourceTO : resourcesTos) {\n+            resources.add(resourceTO);\n+        }\n \n-public void setupSchemaWrappers(boolean create, RoleTO roleTO) {\n+        return resources;\n+    }\n \n-schemaWrappers = new ArrayList<SchemaWrapper>();\n-SchemaWrapper schemaWrapper;\n+    public void setupSchemaWrappers(boolean create, RoleTO roleTO) {\n+        schemaWrappers = new ArrayList<SchemaWrapper>();\n+        SchemaWrapper schemaWrapper;\n \n-SchemaRestClient schemaRestClient = (SchemaRestClient)\n-        ((SyncopeApplication) Application.get()).getApplicationContext()\n-        .getBean(\"schemaRestClient\");\n+        SchemaRestClient schemaRestClient =\n+                (SchemaRestClient) ((SyncopeApplication) Application.get()).\n+                getApplicationContext().getBean(\"schemaRestClient\");\n \n-List<SchemaTO> schemas = schemaRestClient.getAllRoleSchemas();\n+        List<SchemaTO> schemas = schemaRestClient.getAllRoleSchemas();\n \n-boolean found = false;\n+        boolean found = false;\n \n-if (create) {\n-    for (SchemaTO schema : schemas) {\n-        schemaWrapper = new SchemaWrapper(schema);\n-        schemaWrappers.add(schemaWrapper);\n-    }\n-} else {\n-    for (SchemaTO schema : schemas) {\n-        for (AttributeTO attribute : roleTO.getAttributes()) {\n-            if (schema.getName().equals(attribute.getSchema())) {\n+        if (create) {\n+            for (SchemaTO schema : schemas) {\n                 schemaWrapper = new SchemaWrapper(schema);\n-                schemaWrapper.setValues(attribute.getValues());\n                 schemaWrappers.add(schemaWrapper);\n-                found = true;\n             }\n-        }\n-        if (!found) {\n-            schemaWrapper = new SchemaWrapper(schema);\n-            schemaWrappers.add(schemaWrapper);\n         } else {\n-            found = false;\n+            for (SchemaTO schema : schemas) {\n+                for (AttributeTO attribute : roleTO.getAttributes()) {\n+                    if (schema.getName().equals(attribute.getSchema())) {\n+                        schemaWrapper = new SchemaWrapper(schema);\n+                        schemaWrapper.setValues(attribute.getValues());\n+                        schemaWrappers.add(schemaWrapper);\n+                        found = true;\n+                    }\n+                }\n+                if (!found) {\n+                    schemaWrapper = new SchemaWrapper(schema);\n+                    schemaWrappers.add(schemaWrapper);\n+                } else {\n+                    found = false;\n+                }\n+            }\n         }\n     }\n-}\n-}\n \n-public List<AttributeTO> getRoleAttributes() {\n+    public List<AttributeTO> getRoleAttributes() {\n+\n+        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n-List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n+        AttributeTO attribute;\n \n-AttributeTO attribute;\n+        for (SchemaWrapper schemaWrapper : schemaWrappers) {\n \n-for (SchemaWrapper schemaWrapper : schemaWrappers) {\n+            attribute = new AttributeTO();\n+            attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n+            attribute.setValues(new ArrayList<String>());\n \n-    attribute = new AttributeTO();\n-    attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-    attribute.setValues(new ArrayList<String>());\n+            for (String value : schemaWrapper.getValues()) {\n+                attribute.getValues().add(value);\n+            }\n+\n+            attributes.add(attribute);\n+        }\n \n-    for (String value : schemaWrapper.getValues()) {\n-        attribute.getValues().add(value);\n+        return attributes;\n     }\n \n-    attributes.add(attribute);\n-}\n+    /**\n+     * Create a copy of old RoleTO\n+     * @param roleTO\n+     */\n+    public void cloneOldRoleTO(RoleTO roleTO) {\n+        oldRole = new RoleTO();\n \n-return attributes;\n-}\n+        oldRole.setId(roleTO.getId());\n+        oldRole.setName(new String(roleTO.getName()));\n+        oldRole.setParent(new Long(roleTO.getParent()));\n \n-/**\n-* Covert a resources List<String> to Set<String>.\n-* @return Set<String>\n-*/\n-public Set<String> getResourcesSet(List<String> resourcesList) {\n-Set<String> resourcesSet = new HashSet<String>();\n-\n-for (String resource : resourcesList) {\n-    resourcesSet.add(resource);\n-}\n+        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n-return resourcesSet;\n-}\n+        AttributeTO attributeTO;\n+        List<String> values;\n+        for (AttributeTO attribute : roleTO.getAttributes()) {\n+            attributeTO = new AttributeTO();\n+            attributeTO.setSchema(new String(attribute.getSchema()));\n \n-/**\n-* Create a copy of old RoleTO\n-* @param roleTO\n-*/\n-public void cloneOldRoleTO(RoleTO roleTO){\n-oldRole = new RoleTO();\n-\n-oldRole.setId(roleTO.getId());\n-oldRole.setName(new String(roleTO.getName()));\n-oldRole.setParent(new Long(roleTO.getParent()));\n-\n-List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n-\n-AttributeTO attributeTO;\n-List<String> values;\n-for (AttributeTO attribute : roleTO.getAttributes()) {\n-    attributeTO = new AttributeTO();\n-    attributeTO.setSchema(new String(attribute.getSchema()));\n-\n-    values = new ArrayList<String>();\n-    for(String val : attribute.getValues()) {\n-        values.add(val);\n-    }\n-    attributeTO.setValues(values);\n+            values = new ArrayList<String>();\n+            for (String val : attribute.getValues()) {\n+                values.add(val);\n+            }\n+            attributeTO.setValues(values);\n \n-    attributes.add(attributeTO);\n-}\n+            attributes.add(attributeTO);\n+        }\n \n-oldRole.setAttributes(attributes);\n+        oldRole.setAttributes(attributes);\n \n-oldRole.setResources(roleTO.getResources());\n-}\n+        oldRole.setResources(roleTO.getResources());\n+    }\n \n-public void setupRoleMod(RoleTO roleTO){\n+    public void setupRoleMod(final RoleTO roleTO) {\n //1.Check if the role's name has been changed\n-if(!oldRole.getName().equals(roleTO.getName())) {\n-    roleMod = new RoleMod();\n-    roleMod.setName(roleTO.getName());\n-}\n+        if (!oldRole.getName().equals(roleTO.getName())) {\n+            roleMod = new RoleMod();\n+            roleMod.setName(roleTO.getName());\n+        }\n \n //2.Search and update role's attributes\n-for(AttributeTO attributeTO : roleTO.getAttributes())\n-    searchAndUpdateAttribute(attributeTO);\n+        for (AttributeTO attributeTO : roleTO.getAttributes()) {\n+            searchAndUpdateAttribute(attributeTO);\n+        }\n \n //3.Search and update role's resources\n-for (String resource : roleTO.getResources()) \n-    searchAndAddResource(resource);\n+        for (String resource : roleTO.getResources()) {\n+            searchAndAddResource(resource);\n+        }\n \n+        for (String resource : oldRole.getResources()) {\n+            searchAndDropResource(resource, roleTO);\n+        }\n+\n+        if (roleMod != null) {\n+            roleMod.setId(oldRole.getId());\n+            roleMod.setEntitlements(roleTO.getEntitlements());\n+        }\n+    }\n \n-for (String resource : oldRole.getResources()) \n-    searchAndDropResource(resource, roleTO);\n+    /**\n+     * Search for a resource and add that one to the RoleMod object if\n+     * it doesn't exist.\n+     * @param resource, new resource added\n+     */\n+    public void searchAndAddResource(String resource) {\n+        boolean found = false;\n+\n+        /*\n+        Check if the current resource was existent before the update and\n+        in this case just ignore it\n+         */\n+        for (String oldResource : oldRole.getResources()) {\n+            if (resource.equals(oldResource)) {\n+                found = true;\n+            }\n \n-if(roleMod != null)\n-        roleMod.setId(oldRole.getId());\n-}\n+        }\n \n-/**\n- * Search for a resource and add that one to the RoleMod object if\n- * it doesn't exist.\n- * @param resource, new resource added\n- */\n-public void searchAndAddResource(String resource) {\n-    boolean found = false;\n+        if (!found) {\n+            if (roleMod == null) {\n+                roleMod = new RoleMod();\n+            }\n \n-    /*\n-     Check if the current resource was existent before the update and in this case\n-     just ignore it\n-     */\n-    for (String oldResource : oldRole.getResources()) {\n-        if (resource.equals(oldResource)) \n-            found = true;\n-        \n+            roleMod.addResourceToBeAdded(resource);\n+        }\n     }\n \n-    if (!found) {\n-        if(roleMod == null)\n-          roleMod = new RoleMod();\n+    /**\n+     * Search for a resource and drop that one from the RoleMod object if\n+     * it doesn't exist anymore.\n+     * @param resource\n+     * @param roleTO\n+     */\n+    public void searchAndDropResource(final String resource,\n+            final RoleTO roleTO) {\n \n-          roleMod.addResourceToBeAdded(resource);\n-    }\n-}\n+        boolean found = false;\n \n-/**\n- * Search for a resource and drop that one from the RoleMod object if\n- * it doesn't exist anymore.\n- * @param resource\n- * @param roleTO\n- */\n-public void searchAndDropResource(String resource, RoleTO roleTO) {\n-    boolean found = false;\n-\n-    /* Check if the current resource was existent before the update and in this\n-      case just ignore it */\n-    for (String newResource : roleTO.getResources()) {\n-        if (resource.equals(newResource)) {\n-            found = true;\n+        /* Check if the current resource was existent before the update \n+        and in this case just ignore it */\n+        for (String newResource : roleTO.getResources()) {\n+            if (resource.equals(newResource)) {\n+                found = true;\n+            }\n         }\n-    }\n \n-    if (!found) {\n-       if(roleMod == null)\n-           roleMod = new RoleMod();\n-           roleMod.addResourceToBeRemoved(resource);\n+        if (!found) {\n+            if (roleMod == null) {\n+                roleMod = new RoleMod();\n+            }\n+            roleMod.addResourceToBeRemoved(resource);\n+        }\n     }\n-}\n \n-public void searchAndUpdateAttribute(AttributeTO attributeTO){\n-boolean found = false;\n-boolean changed = false;\n+    public void searchAndUpdateAttribute(AttributeTO attributeTO) {\n+        boolean found = false;\n+        boolean changed = false;\n \n-AttributeMod attributeMod = new AttributeMod();\n-attributeMod.setSchema(attributeTO.getSchema());\n+        AttributeMod attributeMod = new AttributeMod();\n+        attributeMod.setSchema(attributeTO.getSchema());\n \n-for(AttributeTO oldAttribute : oldRole.getAttributes()){\n-    if (attributeTO.getSchema().equals(oldAttribute.getSchema())) {\n+        for (AttributeTO oldAttribute : oldRole.getAttributes()) {\n+            if (attributeTO.getSchema().equals(oldAttribute.getSchema())) {\n \n-        if (attributeTO.getSchema().equals(oldAttribute.getSchema())) {\n+                if (attributeTO.getSchema().equals(oldAttribute.getSchema())\n+                        && !attributeTO.equals(oldAttribute) && !oldAttribute.\n+                        isReadonly()) {\n \n-            if (!attributeTO.equals(oldAttribute) && !oldAttribute\n-                    .isReadonly()) {\n-\n-                if (attributeTO.getValues().size() > 1)\n-                    attributeMod.setValuesToBeAdded(attributeTO.getValues());\n-                else\n-                    attributeMod.addValueToBeAdded(attributeTO.getValues()\n-                            .iterator().next());\n+                    if (attributeTO.getValues().size() > 1) {\n+                        attributeMod.setValuesToBeAdded(\n+                                attributeTO.getValues());\n+                    } else {\n+                        attributeMod.addValueToBeAdded(\n+                                attributeTO.getValues().iterator().next());\n+                    }\n \n-                if(roleMod == null) \n-                    roleMod = new RoleMod();\n+                    if (roleMod == null) {\n+                        roleMod = new RoleMod();\n+                    }\n \n-                roleMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n-                roleMod.addAttributeToBeUpdated(attributeMod);\n+                    roleMod.addAttributeToBeRemoved(\n+                            oldAttribute.getSchema());\n+                    roleMod.addAttributeToBeUpdated(attributeMod);\n \n-                changed = true;\n-                break;\n-            }\n+                    changed = true;\n+                    break;\n+                }\n                 found = true;\n+            }\n         }\n-    }\n-}\n \n-if (!found && !changed && !attributeTO.isReadonly()\n-                                       && attributeTO.getValues() != null) {\n+        if (!found && !changed && !attributeTO.isReadonly()\n+                && attributeTO.getValues() != null) {\n \n-    if(attributeTO.getValues().iterator().next() != null ){\n-        attributeMod.setValuesToBeAdded(attributeTO.getValues());\n+            if (attributeTO.getValues() != null\n+                    && !attributeTO.getValues().isEmpty()) {\n \n-    if(roleMod == null) \n-        roleMod = new RoleMod();\n+                attributeMod.setValuesToBeAdded(attributeTO.getValues());\n \n-        roleMod.addAttributeToBeUpdated(attributeMod);\n+                if (roleMod == null) {\n+                    roleMod = new RoleMod();\n+                }\n+                roleMod.addAttributeToBeUpdated(attributeMod);\n+            } else {\n+                attributeMod = null;\n+            }\n+        }\n     }\n-    else attributeMod = null;\n }\n-}\n-\n-}\n\\ No newline at end of file"},{"sha":"58c7e43fb2c01c898465388c740c82aa6a982c24","filename":"console/src/main/java/org/syncope/console/pages/SyncopeModalPage.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -2,17 +2,16 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.pages;\n \n import org.apache.wicket.markup.html.WebPage;"},{"sha":"a6c24fc5bf66eb46300bb7014bebfcc4c4e42756","filename":"console/src/main/java/org/syncope/console/rest/EntitlementsRestClient.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementsRestClient.java?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -0,0 +1,54 @@\n+/* \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.rest;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+\n+/**\n+ * Console client for invoking Rest Resources services.\n+ */\n+public class EntitlementsRestClient {\n+\n+    private RestClient restClient;\n+\n+    /**\n+     * Get all Entitlements.\n+     * @return List<String>\n+     */\n+    public List<String> getAllEntitlements() {\n+        List<String> entitlements = null;\n+\n+        try {\n+            entitlements = Arrays.asList(\n+                    restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"auth/allentitlements.json\",\n+                    String[].class));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            e.printStackTrace();\n+        }\n+\n+        return entitlements;\n+    }\n+\n+    public RestClient getRestClient() {\n+        return restClient;\n+    }\n+\n+    public void setRestClient(RestClient restClient) {\n+        this.restClient = restClient;\n+    }\n+}"},{"sha":"e307f0c90f8c04a097ad23147e554bfc6a6ad104","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -94,6 +94,10 @@\n         <property name=\"restClient\" ref=\"restClient\"/>\n     </bean>\n \n+    <bean id=\"entitlementsRestClient\" class=\"org.syncope.console.rest.EntitlementsRestClient\">\n+        <property name=\"restClient\" ref=\"restClient\"/>\n+    </bean>\n+\n     <bean id=\"utility\" class=\"org.syncope.console.commons.Utility\">\n         <property name=\"configurationsRestClient\" ref=\"configurationsRestClient\"/>\n     </bean>"},{"sha":"2f1f71d07bc359f619b3435cc902ee02ebb8ba09","filename":"console/src/main/resources/configuration.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -1 +1 @@\n-baseURL=http://localhost:9090/syncope/rest/\n+baseURL=http://dalia.tech.everett.it:9090/syncope/rest/"},{"sha":"4510eee583545429389327a8d5ee713b5a08db26","filename":"console/src/main/resources/org/syncope/console/pages/RoleModalPage.html","status":"modified","additions":49,"deletions":42,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -17,6 +17,9 @@\n         #tabs-3 table{\n             font-size: 1.1em;\n         }\n+        #tabs-4 table{\n+            font-size: 1.1em;\n+        }\n     </style>\n </wicket:head>\n \n@@ -29,49 +32,53 @@\n                 <ul>\n                     <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n                     <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+                    <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n                 </ul>\n-                    <div id=\"tabs-1\">\n-                        <table class=\"stripedTable\" style=\"font-size: 1em;border: none\" width=\"100%\" wicket:id=\"container\">\n-                            <tr>\n-                                <td><wicket:message key=\"name\"/></td>\n-                                <td>\n-                                    <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n-                                           style=\"margin-bottom:10px;width:95%;padding:.4em;\"\n-                                           wicket:id=\"name\"/><span>*</span>\n-                                </td>\n-                            </tr>\n-                            <tr wicket:id=\"roleSchemas\">\n-                                <td><span wicket:id=\"name\"/></td>\n-                                <td>\n-                                    <span wicket:id=\"fields\">\n-                                        <span wicket:id=\"panel\">\n-                                            [panel for dynamic input type markup]\n-                                        </span>\n+                <div id=\"tabs-1\">\n+                    <table class=\"stripedTable\" style=\"font-size: 1em;border: none\" width=\"100%\" wicket:id=\"container\">\n+                        <tr>\n+                            <td><wicket:message key=\"name\"/></td>\n+                        <td>\n+                            <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n+                                   style=\"margin-bottom:10px;width:95%;padding:.4em;\"\n+                                   wicket:id=\"name\"/><span>*</span>\n+                        </td>\n+                        </tr>\n+                        <tr wicket:id=\"roleSchemas\">\n+                            <td><span wicket:id=\"name\"/></td>\n+                            <td>\n+                                <span wicket:id=\"fields\">\n+                                    <span wicket:id=\"panel\">\n+                                        [panel for dynamic input type markup]\n                                     </span>\n-                                    <input type=\"button\" wicket:id=\"add\"/>\n-                                    <input type=\"button\" wicket:id=\"drop\"/>\n-                                </td>\n-                            </tr>\n-                            <!-- each time this table is rendered, stripe rows' color -->\n-                            <script type=\"text/javascript\">\n-                                $(function() {\n-                                    $('.stripedTable tr:even').addClass(\"alt\");\n-                                });\n-                            </script>\n-                         </table>\n-                    </div>\n-                    <div id=\"tabs-3\">\n-                        <span wicket:id=\"resourcesPalette\"/>\n-                    </div>\n+                                </span>\n+                                <input type=\"button\" wicket:id=\"add\"/>\n+                                <input type=\"button\" wicket:id=\"drop\"/>\n+                            </td>\n+                        </tr>\n+                        <!-- each time this table is rendered, stripe rows' color -->\n+                        <script type=\"text/javascript\">\n+                            $(function() {\n+                                $('.stripedTable tr:even').addClass(\"alt\");\n+                            });\n+                        </script>\n+                    </table>\n+                </div>\n+                <div id=\"tabs-3\">\n+                    <span wicket:id=\"resourcesPalette\"/>\n                 </div>\n-                <div>\n-                    &nbsp;\n-                </div>      \n-                <div style=\"bottom:0\">\n-                    <input type=\"submit\" \n-                           class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                           wicket:id=\"submit\"/>\n+                <div id=\"tabs-4\">\n+                    <span wicket:id=\"entitlementsPalette\"/>\n                 </div>\n-          </form>\n-        </div>\n- </wicket:extend>\n\\ No newline at end of file\n+            </div>\n+            <div>\n+                &nbsp;\n+            </div>\n+            <div style=\"bottom:0\">\n+                <input type=\"submit\"\n+                       class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                       wicket:id=\"submit\"/>\n+            </div>\n+        </form>\n+    </div>\n+</wicket:extend>\n\\ No newline at end of file"},{"sha":"a5115924f06c3ec6e38e688e5f521a5d776720d3","filename":"console/src/main/resources/org/syncope/console/pages/RoleModalPage.properties","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.properties?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -2,9 +2,12 @@ required_alert=All form fields are required.\n title=Role\n tab1=Attributes\n tab3=Resources\n+tab4=Entitlements\n add=+\n drop=-\n error=Generic error occurred during the operation\n name=Name\n firstResourcesList=Role's resources\n-secondResourcesList=Available resources\n\\ No newline at end of file\n+secondResourcesList=Available resources\n+firstEntitlementsList=Role's entitlements\n+secondEntitlementsList=Available entitlements"},{"sha":"b0093594573fbf24e482bf70579046f273c2a4b6","filename":"console/src/main/resources/org/syncope/console/pages/RoleModalPage_it.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage_it.properties?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -2,9 +2,12 @@ required_alert=All form fields are required.\n title=Ruolo\n tab1=Attributi\n tab3=Risorse\n+tab3=Entitlement\n add=+\n drop=-\n name=Nome\n error=Errore generico durante l'operazione\n firstResourcesList=Risorse ruolo\n secondResourcesList=Risorse disponibili\n+firstResourcesList=Entitlement ruolo\n+secondResourcesList=Entitlement disponibili"}]}