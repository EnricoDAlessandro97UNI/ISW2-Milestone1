{"sha":"d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ5MDQ3MTZhZWJjZjMwYThhNTBmYmNmOGFkODEzZmZjMjA0MGQwY2I=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-25T15:12:33Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-25T15:12:33Z"},"message":"Removing unnecessary @Transactional\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246655 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4c6ae75a6d900aa2ea856d155af0bf012e8d61c7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4c6ae75a6d900aa2ea856d155af0bf012e8d61c7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/comments","author":null,"committer":null,"parents":[{"sha":"80121a006a4d085b7d8cad1d5caa9c6a591756b3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80121a006a4d085b7d8cad1d5caa9c6a591756b3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/80121a006a4d085b7d8cad1d5caa9c6a591756b3"}],"stats":{"total":77,"additions":24,"deletions":53},"files":[{"sha":"c880269946ee0e721d38b66ba1273104405ce971","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":8,"deletions":22,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -291,10 +291,8 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n                             mapping.getSchemaType().getSchemaClass());\n                 } catch (ClassCastException e) {\n                     // ignore exception ... check for AccountId or Password\n-                    if (LOG.isDebugEnabled()) {\n-                        LOG.debug(\"Wrong schema type \"\n-                                + mapping.getSchemaType().getClassName());\n-                    }\n+                    LOG.debug(\"Wrong schema type {}\",\n+                            mapping.getSchemaType().getClassName());\n                 }\n \n                 if (schema != null) {\n@@ -410,16 +408,15 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n     }\n \n     public void propagate(final TaskExecution execution) {\n-        Date startDate = new Date();\n+        final Date startDate = new Date();\n         TaskExecutionStatus taskExecutionStatus = null;\n         String taskExecutionMessage = null;\n \n-        Task task = execution.getTask();\n+        final Task task = execution.getTask();\n \n         // Output parameter to verify the propagation request tryed\n         final Set<String> triedPropagationRequests = new HashSet<String>();\n \n-\n         try {\n             ConnectorInstance connectorInstance =\n                     task.getResource().getConnector();\n@@ -517,24 +514,13 @@ public void propagate(final TaskExecution execution) {\n                     || execution.getId() != null) {\n \n                 execution.setStartDate(startDate);\n-\n-                if (taskExecutionMessage != null) {\n-                    execution.setMessage(taskExecutionMessage);\n-                }\n-\n-                if (taskExecutionStatus != null) {\n-                    execution.setStatus(taskExecutionStatus);\n-                }\n-\n+                execution.setMessage(taskExecutionMessage);\n+                execution.setStatus(taskExecutionStatus);\n                 execution.setEndDate(new Date());\n \n-                TaskExecution actualExecution =\n-                        taskDataBinder.storeTaskExecution(execution);\n-\n-                task.addExecution(actualExecution);\n-                taskDAO.save(task);\n+                taskDataBinder.storeTaskExecution(execution);\n \n-                LOG.debug(\"Updated {}\", actualExecution);\n+                LOG.debug(\"Execution finished: {}\", execution);\n             }\n         }\n     }"},{"sha":"ce633a39484911c8defe34662323c0b3308e2d1b","filename":"core/src/main/java/org/syncope/core/rest/controller/TaskController.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -131,9 +131,7 @@ public TaskExecutionTO execute(@PathVariable(\"taskId\") final Long taskId)\n             propagationManager.asyncPropagate(execution);\n         }\n \n-        LOG.debug(\"Execution finished for {}\", task);\n-\n-        LOG.debug(\"Return execution {}\", execution);\n+        LOG.debug(\"Execution finished for {}, {}\", task, execution);\n \n         return taskDataBinder.getTaskExecutionTO(execution);\n     }"},{"sha":"73b9821efc0eb7a19d6f549d0cd815b7655587f9","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -29,7 +29,6 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n-import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.AbstractAttributableMod;\n import org.syncope.client.mod.AttributeMod;\n import org.syncope.client.to.AbstractAttributableTO;\n@@ -61,9 +60,6 @@\n import org.syncope.types.SchemaType;\n import org.syncope.types.SyncopeClientExceptionType;\n \n-@Transactional(rollbackFor = {\n-    Throwable.class\n-})\n public abstract class AbstractAttributableDataBinder {\n \n     /**"},{"sha":"f109f101c0c0d97ddd2a63bde5212c0a1e671507","filename":"core/src/main/java/org/syncope/core/rest/data/ConfigurationDataBinder.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -15,14 +15,10 @@\n package org.syncope.core.rest.data;\n \n import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.core.persistence.beans.SyncopeConfiguration;\n \n @Component\n-@Transactional(rollbackFor = {\n-    Throwable.class\n-})\n public class ConfigurationDataBinder {\n \n     public SyncopeConfiguration createSyncopeConfiguration("},{"sha":"2adac5c83a6a43a16bfc64c0c2eb8daf78303fc9","filename":"core/src/main/java/org/syncope/core/rest/data/ConnectorInstanceDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnectorInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnectorInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnectorInstanceDataBinder.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -20,7 +20,6 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.to.ConnectorInstanceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n@@ -29,16 +28,17 @@\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n-@Transactional(rollbackFor = {Throwable.class})\n public class ConnectorInstanceDataBinder {\n \n     /**\n      * Logger.\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(\n             ConnectorInstanceDataBinder.class);\n+\n     private static final String[] ignoreProperties = {\n         \"id\", \"resources\", \"displayName\"};\n+\n     @Autowired\n     private ConnectorInstanceDAO connectorInstanceDAO;\n "},{"sha":"d477c75ba7129275ab82f5bbea64627ffb4d0f51","filename":"core/src/main/java/org/syncope/core/rest/data/DerivedSchemaDataBinder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -22,29 +22,29 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.to.DerivedSchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.AbstractDerivedSchema;\n import org.syncope.core.persistence.beans.AbstractSchema;\n-import org.syncope.core.persistence.dao.DerivedSchemaDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n-@Transactional(rollbackFor = {Throwable.class})\n public class DerivedSchemaDataBinder {\n \n     /**\n      * Logger.\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(\n             DerivedSchemaDataBinder.class);\n+\n     private static final String[] ignoreDerivedSchemaProperties = {\n         \"schemas\", \"derivedAttributes\"};\n+\n     @Autowired\n     private SchemaDAO schemaDAO;\n+\n     @Autowired\n     private JexlEngine jexlEngine;\n "},{"sha":"d9a99970a15c598ada15fd1875ff8e1dd623a349","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -25,7 +25,6 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -37,20 +36,20 @@\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n-@Transactional(rollbackFor = {\n-    Throwable.class\n-})\n public class ResourceDataBinder {\n \n     /**\n      * Logger.\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(\n             ResourceDataBinder.class);\n+\n     private static final String[] MAPPING_IGNORE_PROPERTIES = {\n         \"id\", \"resource\"};\n+\n     @Autowired\n     private ConnectorInstanceDAO connectorInstanceDAO;\n+\n     @Autowired\n     private JexlEngine jexlEngine;\n "},{"sha":"37229889f0d7540980306870f507503a1a226512","filename":"core/src/main/java/org/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -23,7 +23,6 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n@@ -35,9 +34,6 @@\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n-@Transactional(rollbackFor = {\n-    Throwable.class\n-})\n public class SchemaDataBinder {\n \n     /**"},{"sha":"d09867be25a24def7666c5f45890182652e5a9aa","filename":"core/src/main/java/org/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d904716aebcf30a8a50fbcf8ad813ffc2040d0cb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=d904716aebcf30a8a50fbcf8ad813ffc2040d0cb","patch":"@@ -25,9 +25,6 @@\n import org.syncope.core.persistence.dao.TaskExecutionDAO;\n \n @Component\n-@Transactional(rollbackFor = {\n-    Throwable.class\n-})\n public class TaskDataBinder {\n \n     private static final String[] IGNORE_TASK_PROPERTIES = {\n@@ -39,6 +36,9 @@ public class TaskDataBinder {\n     @Autowired\n     private TaskExecutionDAO taskExecutionDAO;\n \n+    @Transactional(rollbackFor = {\n+        Throwable.class\n+    })\n     public TaskExecution storeTaskExecution(final TaskExecution execution) {\n         return taskExecutionDAO.save(execution);\n     }"}]}