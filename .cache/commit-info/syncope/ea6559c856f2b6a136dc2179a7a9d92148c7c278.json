{"sha":"ea6559c856f2b6a136dc2179a7a9d92148c7c278","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVhNjU1OWM4NTZmMmI2YTEzNmRjMjE3OWE3YTlkOTIxNDhjN2MyNzg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-18T15:03:35Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-18T15:03:49Z"},"message":"Moving the buildnumber-maven-plugin to core/login only, removing commons-validator as it pulls in the old commons-collections, plus some white noise","tree":{"sha":"bc28d86cd23dff4f4e98c2378ea54fc0fdab92ac","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bc28d86cd23dff4f4e98c2378ea54fc0fdab92ac"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ea6559c856f2b6a136dc2179a7a9d92148c7c278","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ea6559c856f2b6a136dc2179a7a9d92148c7c278","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ea6559c856f2b6a136dc2179a7a9d92148c7c278","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ea6559c856f2b6a136dc2179a7a9d92148c7c278/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5c10b4ba535918a809aa70d4c2c0897c59a2c3b0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5c10b4ba535918a809aa70d4c2c0897c59a2c3b0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5c10b4ba535918a809aa70d4c2c0897c59a2c3b0"}],"stats":{"total":114,"additions":51,"deletions":63},"files":[{"sha":"2bf2af27f27d02fe81a037db9f15592fe1812667","filename":"core/logic/pom.xml","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fpom.xml?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -100,6 +100,24 @@ under the License.\n     </resources>\n         \n     <plugins>\n+      <plugin>\n+        <groupId>org.codehaus.mojo</groupId>\n+        <artifactId>buildnumber-maven-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <configuration>\n+          <doCheck>false</doCheck>\n+          <doUpdate>false</doUpdate>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <phase>validate</phase>\n+            <goals>\n+              <goal>create</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>"},{"sha":"d0bd1e0dd46f1e083a86dffd55f78f4305dc0c88","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -41,9 +41,9 @@\n \n     A findByWorkflowId(String workflowId);\n \n-    List<A> findByAttrValue(String schemaName, PlainAttrValue attrValue);\n+    List<A> findByPlainAttrValue(String schemaName, PlainAttrValue attrValue);\n \n-    A findByAttrUniqueValue(String schemaName, PlainAttrValue attrUniqueValue);\n+    A findByPlainAttrUniqueValue(String schemaName, PlainAttrValue attrUniqueValue);\n \n     /**\n      * Find any objects by derived attribute value. This method could fail if one or more string literals contained"},{"sha":"894ec21b93149d632f68b6015f23696d4cfb17fb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -199,7 +199,7 @@ public A findByWorkflowId(final String workflowId) {\n         return result;\n     }\n \n-    private Query findByAttrValueQuery(final String entityName) {\n+    private Query findByPlainAttrValueQuery(final String entityName) {\n         return entityManager().createQuery(\"SELECT e FROM \" + entityName + \" e\"\n                 + \" WHERE e.attribute.schema.id = :schemaKey AND (e.stringValue IS NOT NULL\"\n                 + \" AND e.stringValue = :stringValue)\"\n@@ -211,7 +211,7 @@ private Query findByAttrValueQuery(final String entityName) {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public List<A> findByAttrValue(final String schemaKey, final PlainAttrValue attrValue) {\n+    public List<A> findByPlainAttrValue(final String schemaKey, final PlainAttrValue attrValue) {\n         PlainSchema schema = plainSchemaDAO().find(schemaKey);\n         if (schema == null) {\n             LOG.error(\"Invalid schema name '{}'\", schemaKey);\n@@ -221,7 +221,7 @@ public List<A> findByAttrValue(final String schemaKey, final PlainAttrValue attr\n         String entityName = schema.isUniqueConstraint()\n                 ? anyUtils().plainAttrUniqueValueClass().getName()\n                 : anyUtils().plainAttrValueClass().getName();\n-        Query query = findByAttrValueQuery(entityName);\n+        Query query = findByPlainAttrValueQuery(entityName);\n         query.setParameter(\"schemaKey\", schemaKey);\n         query.setParameter(\"stringValue\", attrValue.getStringValue());\n         query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n@@ -247,7 +247,7 @@ public List<A> findByAttrValue(final String schemaKey, final PlainAttrValue attr\n     }\n \n     @Override\n-    public A findByAttrUniqueValue(final String schemaKey, final PlainAttrValue attrUniqueValue) {\n+    public A findByPlainAttrUniqueValue(final String schemaKey, final PlainAttrValue attrUniqueValue) {\n         PlainSchema schema = plainSchemaDAO().find(schemaKey);\n         if (schema == null) {\n             LOG.error(\"Invalid schema name '{}'\", schemaKey);\n@@ -258,7 +258,7 @@ public A findByAttrUniqueValue(final String schemaKey, final PlainAttrValue attr\n             return null;\n         }\n \n-        List<A> result = findByAttrValue(schemaKey, attrUniqueValue);\n+        List<A> result = findByPlainAttrValue(schemaKey, attrUniqueValue);\n         return result.isEmpty()\n                 ? null\n                 : result.iterator().next();"},{"sha":"2fccd24bf03b3f5d7a3176e438254101f866fba4","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -103,7 +103,7 @@ public void findByAttributeValue() {\n         final UPlainAttrValue fullnameValue = entityFactory.newEntity(UPlainAttrValue.class);\n         fullnameValue.setStringValue(\"Gioacchino Rossini\");\n \n-        final List<User> list = userDAO.findByAttrValue(\"fullname\", fullnameValue);\n+        final List<User> list = userDAO.findByPlainAttrValue(\"fullname\", fullnameValue);\n         assertEquals(\"did not get expected number of users\", 1, list.size());\n     }\n \n@@ -112,7 +112,7 @@ public void findByAttributeBooleanValue() {\n         final UPlainAttrValue coolValue = entityFactory.newEntity(UPlainAttrValue.class);\n         coolValue.setBooleanValue(true);\n \n-        final List<User> list = userDAO.findByAttrValue(\"cool\", coolValue);\n+        final List<User> list = userDAO.findByPlainAttrValue(\"cool\", coolValue);\n         assertEquals(\"did not get expected number of users\", 1, list.size());\n     }\n "},{"sha":"7dee306effd296c6999037eae13b27f62f6a576b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -246,7 +246,7 @@ private List<String> findByConnObjectKeyItem(\n                     }\n \n                     List<? extends Any<?>> anys = getAnyDAO(provision.getAnyType().getKind()).\n-                            findByAttrValue(intAttrName.getSchemaName(), value);\n+                            findByPlainAttrValue(intAttrName.getSchemaName(), value);\n                     for (Any<?> any : anys) {\n                         result.add(any.getKey());\n                     }"},{"sha":"c67c7550bae8a7e9fbbeb6ed5ea2f21e45833bdc","filename":"ext/saml2sp/logic/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/ext%2Fsaml2sp%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/ext%2Fsaml2sp%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fpom.xml?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -59,11 +59,6 @@ under the License.\n       <groupId>org.opensaml</groupId>\n       <artifactId>opensaml-saml-impl</artifactId>\n     </dependency>\n-\n-    <dependency>\n-      <groupId>commons-validator</groupId>\n-      <artifactId>commons-validator</artifactId>\n-    </dependency>\n   </dependencies>\n \n   <build>"},{"sha":"0da3f450955ccdfb726a1fa17be08e7c986f67a3","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -35,7 +35,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.commons.validator.routines.UrlValidator;\n import org.apache.cxf.rs.security.jose.jws.JwsJwtCompactConsumer;\n import org.apache.cxf.rs.security.jose.jws.JwsSignatureVerifier;\n import org.apache.cxf.rs.security.saml.sso.SSOValidatorResponse;\n@@ -109,6 +108,7 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.AuthDataAccessor;\n import org.apache.syncope.core.spring.security.Encryptor;\n+import org.springframework.util.ResourceUtils;\n \n @Component\n public class SAML2SPLogic extends AbstractSAML2Logic<AbstractBaseBean> {\n@@ -129,9 +129,6 @@ public class SAML2SPLogic extends AbstractSAML2Logic<AbstractBaseBean> {\n \n     private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n \n-    private static final UrlValidator URL_VALIDATOR = new UrlValidator(\n-            new String[] { \"http\", \"https\" }, UrlValidator.ALLOW_LOCAL_URLS);\n-\n     @Autowired\n     private AccessTokenDataBinder accessTokenDataBinder;\n \n@@ -162,7 +159,7 @@ private void validateUrl(final String url) {\n             isValid = false;\n         }\n         if (isValid) {\n-            isValid = URL_VALIDATOR.isValid(url);\n+            isValid = ResourceUtils.isUrl(url);\n         }\n \n         if (!isValid) {"},{"sha":"07989390dd6346c14e78d4ef006bf7d80e772c73","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -138,7 +138,7 @@ public List<String> findMatchingUser(final String keyValue, final ItemTO connObj\n                     }\n \n                     CollectionUtils.collect(\n-                            userDAO.findByAttrValue(intAttrName.getSchemaName(), value),\n+                            userDAO.findByPlainAttrValue(intAttrName.getSchemaName(), value),\n                             new Transformer<User, String>() {\n \n                         @Override"},{"sha":"9c77fd59ce8d8c593ed503c6740b8cca18004c11","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -35,6 +35,7 @@\n import javax.naming.directory.InitialDirContext;\n import javax.naming.directory.ModificationItem;\n import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.io.IOUtils;\n@@ -51,6 +52,7 @@\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n@@ -69,6 +71,7 @@\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.syncope.common.rest.api.service.CamelRouteService;\n import org.apache.syncope.common.rest.api.service.ConfigurationService;\n+import org.apache.syncope.common.rest.api.service.ConnectorHistoryService;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.DomainService;\n import org.apache.syncope.common.rest.api.service.DynRealmService;\n@@ -82,6 +85,7 @@\n import org.apache.syncope.common.rest.api.service.RealmService;\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n import org.apache.syncope.common.rest.api.service.ReportTemplateService;\n+import org.apache.syncope.common.rest.api.service.ResourceHistoryService;\n import org.apache.syncope.common.rest.api.service.RoleService;\n import org.apache.syncope.common.rest.api.service.SAML2IdPService;\n import org.apache.syncope.common.rest.api.service.SAML2SPService;\n@@ -102,11 +106,6 @@\n import org.junit.runners.MethodSorters;\n import org.springframework.jdbc.core.JdbcTemplate;\n \n-import com.google.common.net.HttpHeaders;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.rest.api.service.ConnectorHistoryService;\n-import org.apache.syncope.common.rest.api.service.ResourceHistoryService;\n-\n @FixMethodOrder(MethodSorters.JVM)\n public abstract class AbstractITCase {\n "},{"sha":"ddabfac1dc335b15ad85b01cada67d78a52e65cd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.fit.core;\n \n-import org.apache.syncope.fit.ActivitiDetector;\n-\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -77,6 +75,7 @@\n import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.syncope.core.spring.security.Encryptor;\n import org.apache.syncope.fit.AbstractITCase;\n+import org.apache.syncope.fit.ActivitiDetector;\n import org.junit.Assume;\n import org.junit.Test;\n import org.junit.runner.RunWith;"},{"sha":"a600b06d12213c6daa903f423e20a7832ceb2b14","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/WorkflowITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.fit.core;\n \n-import org.apache.syncope.fit.ActivitiDetector;\n-\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.assertFalse;\n@@ -34,6 +32,7 @@\n import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.fit.AbstractITCase;\n+import org.apache.syncope.fit.ActivitiDetector;\n import org.junit.Assume;\n import org.junit.BeforeClass;\n import org.junit.Test;"},{"sha":"0977425ccf0e7366f30fe82d35c64b460deb6beb","filename":"pom.xml","status":"modified","additions":14,"deletions":33,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -402,7 +402,6 @@ under the License.\n     <commons-lang.version>3.6</commons-lang.version>\n     <commons-text.version>1.1</commons-text.version>\n     <commons-collection.version>4.1</commons-collection.version>\n-    <commons-validator.version>1.6</commons-validator.version>\n     <commons-logging.version>1.1.3</commons-logging.version>\n \n     <joda.version>2.9.9</joda.version>\n@@ -976,11 +975,6 @@ under the License.\n         <artifactId>commons-collections4</artifactId>\n         <version>${commons-collection.version}</version>\n       </dependency>\n-      <dependency>\n-        <groupId>commons-validator</groupId>\n-        <artifactId>commons-validator</artifactId>\n-        <version>${commons-validator.version}</version>\n-      </dependency>\n \n       <dependency>\n         <groupId>net.tirasa.connid</groupId>\n@@ -1856,7 +1850,13 @@ under the License.\n           <artifactId>maven-assembly-plugin</artifactId>\n           <version>3.0.0</version>\n         </plugin>\n-        \n+\n+        <plugin>\n+          <groupId>org.codehaus.mojo</groupId>\n+          <artifactId>buildnumber-maven-plugin</artifactId>\n+          <version>1.4</version>\n+        </plugin>\n+              \n         <plugin>\n           <groupId>org.codehaus.izpack</groupId>\n           <artifactId>izpack-maven-plugin</artifactId>\n@@ -1883,8 +1883,14 @@ under the License.\n           <groupId>org.eclipse.tycho</groupId>\n           <artifactId>tycho-surefire-plugin</artifactId>\n           <version>${tycho.version}</version>\n+        </plugin>        \n+\n+        <plugin>\n+          <groupId>org.codehaus.mojo</groupId>\n+          <artifactId>nbm-maven-plugin</artifactId>\n+          <version>4.1</version>\n         </plugin>\n-        \n+\n         <plugin>\n           <groupId>com.github.klieber</groupId>\n           <artifactId>phantomjs-maven-plugin</artifactId>\n@@ -1900,13 +1906,6 @@ under the License.\n           <artifactId>exec-maven-plugin</artifactId>\n           <version>1.6.0</version>\n         </plugin>\n-\n-        <plugin>\n-          <groupId>org.codehaus.mojo</groupId>\n-          <artifactId>nbm-maven-plugin</artifactId>\n-          <version>4.1</version>\n-        </plugin>\n-\n       </plugins>\n     </pluginManagement>\n \n@@ -2121,24 +2120,6 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n-      \n-      <plugin>\n-        <groupId>org.codehaus.mojo</groupId>\n-        <artifactId>buildnumber-maven-plugin</artifactId>\n-        <version>1.4</version>\n-        <configuration>\n-          <doCheck>false</doCheck>\n-          <doUpdate>false</doUpdate>\n-        </configuration>\n-        <executions>\n-          <execution>\n-            <phase>validate</phase>\n-            <goals>\n-              <goal>create</goal>\n-            </goals>\n-          </execution>\n-        </executions>\n-      </plugin>\n \n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>"}]}