{"sha":"965e7d1bfecb337c30539b21b8a47fa7d64c3af2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk2NWU3ZDFiZmVjYjMzN2MzMDUzOWIyMWI4YTQ3ZmE3ZDY0YzNhZjI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-09-02T15:42:03Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-09-02T15:42:03Z"},"message":"Removing some PMD warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247111 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"64046b10185db31dfe84e514bd0249b62e681e4d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/64046b10185db31dfe84e514bd0249b62e681e4d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/965e7d1bfecb337c30539b21b8a47fa7d64c3af2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/965e7d1bfecb337c30539b21b8a47fa7d64c3af2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/965e7d1bfecb337c30539b21b8a47fa7d64c3af2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/comments","author":null,"committer":null,"parents":[{"sha":"64c41aa4fd4ab5b4e481d13f678b3f10ea4380be","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/64c41aa4fd4ab5b4e481d13f678b3f10ea4380be","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/64c41aa4fd4ab5b4e481d13f678b3f10ea4380be"}],"stats":{"total":51,"additions":21,"deletions":30},"files":[{"sha":"1d1287f37a8d813cf7a5116efa342682782802a7","filename":"client/src/main/java/org/syncope/client/mod/RoleMod.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FRoleMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FRoleMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FRoleMod.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -90,7 +90,7 @@ public List<String> getEntitlements() {\n \n     public void setEntitlements(List<String> entitlements) {\n         this.entitlements.clear();\n-        if (entitlements != null || !entitlements.isEmpty()) {\n+        if (entitlements != null && !entitlements.isEmpty()) {\n             this.entitlements.addAll(entitlements);\n         }\n     }"},{"sha":"6e6c15aff16ad97e30d60b0ff00d2264e64e34a8","filename":"client/src/main/java/org/syncope/client/to/RoleTO.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -97,7 +97,7 @@ public List<String> getEntitlements() {\n \n     public void setEntitlements(List<String> entitlements) {\n         this.entitlements.clear();\n-        if (entitlements != null || !entitlements.isEmpty()) {\n+        if (entitlements != null && !entitlements.isEmpty()) {\n             this.entitlements.addAll(entitlements);\n         }\n     }\n@@ -126,6 +126,8 @@ public static long fromDisplayName(final String displayName) {\n             try {\n                 result = Long.valueOf(displayName.split(\" \")[0]);\n             } catch (NumberFormatException e) {\n+                // just to avoid PMD warning about \"empty catch block\"\n+                result = 0;\n             }\n         }\n "},{"sha":"7c7b992764daca06f13dec980c68ac03cbc939eb","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -683,7 +683,8 @@ private NodeCond buildSearchCond(\n                 break;\n             case RESOURCE:\n                 final ResourceCond resourceCond = new ResourceCond();\n-                resourceCond.setResourceName(searchConditionWrapper.getFilterName());\n+                resourceCond.setResourceName(\n+                        searchConditionWrapper.getFilterName());\n \n                 if (searchConditionWrapper.isNotOperator()) {\n                     nodeCond = NodeCond.getNotLeafCond(resourceCond);"},{"sha":"f8f1c70e798d0b51a4a6c1a43cbfee6b8306cfdd","filename":"core/src/main/java/jpasymphony/dao/impl/JPAPropertySetItemDAOImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fdao%2Fimpl%2FJPAPropertySetItemDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fdao%2Fimpl%2FJPAPropertySetItemDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fdao%2Fimpl%2FJPAPropertySetItemDAOImpl.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -46,6 +46,7 @@ public JPAPropertySetItem find(final Long workflowEntryId,\n         try {\n             result = (JPAPropertySetItem) query.getSingleResult();\n         } catch (NoResultException e) {\n+            LOG.warn(\"No results found\");\n         } catch (Throwable t) {\n             LOG.error(\"Unexpected exception\", t);\n         }"},{"sha":"31fc69a35ce88e22b6118cfc4b2ef925f9be3b02","filename":"core/src/main/java/org/syncope/core/init/ContentLoader.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FContentLoader.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -64,14 +64,12 @@ public void load() {\n         // 1. read persistence.properties\n         InputStream dbPropsStream = null;\n         String dbSchema = null;\n-        String quartzSQL = null;\n         try {\n             dbPropsStream = getClass().getResourceAsStream(\n                     \"/persistence.properties\");\n             Properties dbProps = new Properties();\n             dbProps.load(dbPropsStream);\n             dbSchema = dbProps.getProperty(\"database.schema\");\n-            quartzSQL = dbProps.getProperty(\"quartz.sql\");\n         } catch (Throwable t) {\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Could not find persistence.properties\", t);"},{"sha":"a52fa9f0221c2e1e9eeab1614137b72affae03ce","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchemaValidator.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -61,6 +61,8 @@ public boolean isValid(final AbstractSchema object,\n                             + \"unique constraint at the same time\");\n                 }\n             }\n+\n+            return isValid;\n         } catch (Exception e) {\n             LOG.error(e.getMessage());\n \n@@ -69,8 +71,8 @@ public boolean isValid(final AbstractSchema object,\n                     violation.toString()).\n                     addNode(object.toString()).\n                     addConstraintViolation();\n-        } finally {\n-            return isValid;\n+\n+            return false;\n         }\n     }\n }"},{"sha":"c991a7dcbca65054ea7a919bcdf631283db903a4","filename":"core/src/main/java/org/syncope/core/rest/controller/DerivedSchemaController.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -50,10 +50,8 @@ public DerivedSchemaTO create(final HttpServletResponse response,\n             throws SyncopeClientCompositeErrorException {\n \n         AbstractDerSchema derivedSchema =\n-                derivedSchemaDataBinder.create(\n-                derivedSchemaTO,\n-                getAttributableUtil(kind).newDerivedSchema(),\n-                getAttributableUtil(kind).schemaClass());\n+                derivedSchemaDataBinder.create(derivedSchemaTO,\n+                getAttributableUtil(kind).newDerivedSchema());\n \n         derivedSchema = derivedSchemaDAO.save(derivedSchema);\n \n@@ -139,7 +137,7 @@ public DerivedSchemaTO update(\n         }\n \n         derivedSchema = derivedSchemaDataBinder.update(derivedSchemaTO,\n-                derivedSchema, getAttributableUtil(kind).schemaClass());\n+                derivedSchema);\n \n         derivedSchema = derivedSchemaDAO.save(derivedSchema);\n         return derivedSchemaDataBinder.getDerivedSchemaTO(derivedSchema);"},{"sha":"e68ac4ab7236c012f22427c2190b852eb548c6da","filename":"core/src/main/java/org/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -117,7 +117,7 @@ public ConnInstance updateConnInstance(\n         }\n \n         if (connInstanceTO.getConfiguration() != null\n-                || connInstanceTO.getConfiguration().isEmpty()) {\n+                && !connInstanceTO.getConfiguration().isEmpty()) {\n \n             connInstance.setConfiguration(\n                     connInstanceTO.getConfiguration());"},{"sha":"d38e0c33af78496b9f0e5100ad8dfb6830423a40","filename":"core/src/main/java/org/syncope/core/rest/data/DerivedSchemaDataBinder.java","status":"modified","additions":6,"deletions":17,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/965e7d1bfecb337c30539b21b8a47fa7d64c3af2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java?ref=965e7d1bfecb337c30539b21b8a47fa7d64c3af2","patch":"@@ -14,8 +14,6 @@\n  */\n package org.syncope.core.rest.data;\n \n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n@@ -31,22 +29,15 @@\n @Component\n public class DerivedSchemaDataBinder {\n \n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            DerivedSchemaDataBinder.class);\n-\n     private static final String[] ignoreDerivedSchemaProperties = {\n         \"schemas\", \"derivedAttributes\"};\n \n     @Autowired\n     private JexlUtil jexlUtil;\n \n     private <T extends AbstractSchema> AbstractDerSchema populate(\n-            AbstractDerSchema derivedSchema,\n+            final AbstractDerSchema derivedSchema,\n             final DerivedSchemaTO derivedSchemaTO,\n-            final Class<T> reference,\n             final SyncopeClientCompositeErrorException scce)\n             throws SyncopeClientCompositeErrorException {\n \n@@ -81,20 +72,18 @@ private <T extends AbstractSchema> AbstractDerSchema populate(\n \n     public <T extends AbstractSchema> AbstractDerSchema create(\n             final DerivedSchemaTO derivedSchemaTO,\n-            AbstractDerSchema derivedSchema,\n-            final Class<T> reference) {\n+            final AbstractDerSchema derivedSchema) {\n \n-        return populate(derivedSchema, derivedSchemaTO, reference,\n+        return populate(derivedSchema, derivedSchemaTO,\n                 new SyncopeClientCompositeErrorException(\n                 HttpStatus.BAD_REQUEST));\n     }\n \n-    public <K extends AbstractSchema> AbstractDerSchema update(\n+    public AbstractDerSchema update(\n             final DerivedSchemaTO derivedSchemaTO,\n-            AbstractDerSchema derivedSchema,\n-            final Class<K> reference) {\n+            final AbstractDerSchema derivedSchema) {\n \n-        return populate(derivedSchema, derivedSchemaTO, reference,\n+        return populate(derivedSchema, derivedSchemaTO,\n                 new SyncopeClientCompositeErrorException(\n                 HttpStatus.BAD_REQUEST));\n     }"}]}