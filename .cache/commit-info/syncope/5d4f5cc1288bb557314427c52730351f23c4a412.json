{"sha":"5d4f5cc1288bb557314427c52730351f23c4a412","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVkNGY1Y2MxMjg4YmI1NTczMTQ0MjdjNTI3MzAzNTFmMjNjNGE0MTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-10-10T12:18:53Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-10-10T12:18:53Z"},"message":"Removing a few code scanning alerts","tree":{"sha":"855e1e8530cd06c494f9fc6255dc20f2ab905836","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/855e1e8530cd06c494f9fc6255dc20f2ab905836"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5d4f5cc1288bb557314427c52730351f23c4a412","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d4f5cc1288bb557314427c52730351f23c4a412","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5d4f5cc1288bb557314427c52730351f23c4a412","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d4f5cc1288bb557314427c52730351f23c4a412/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5db9013612ccc4f06e4ab493883359d3f7955f7f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5db9013612ccc4f06e4ab493883359d3f7955f7f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5db9013612ccc4f06e4ab493883359d3f7955f7f"}],"stats":{"total":297,"additions":145,"deletions":152},"files":[{"sha":"a9a476a47e487b190fc66c243a5519ea42533104","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAdditionalActionLinksProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionLinksProvider.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -125,7 +125,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 model.setObject(new UserRestClient().read(model.getObject().getKey()));\n                 modal.setFooterVisible(false);\n-                target.add(modal.setContent(new LinkedAccountModalPanel(modal, model, pageRef, false)));\n+                target.add(modal.setContent(new LinkedAccountModalPanel(model, pageRef, false)));\n \n                 modal.header(new Model<>(header));\n "},{"sha":"83f2db20f1dde0a991b721eadb10d4bc9d4b8ef9","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -88,7 +88,6 @@ public class LinkedAccountModalPanel extends Panel implements ModalPanel {\n \n     @SuppressWarnings(\"unchecked\")\n     public LinkedAccountModalPanel(\n-            final BaseModal<?> baseModal,\n             final IModel<UserTO> model,\n             final PageReference pageRef,\n             final boolean recounciliationOnly) {"},{"sha":"b6fe22b8763d87001ad29d05ac6b214a78ad1dc7","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountsStatusModalPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountsStatusModalPanel.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.model.IModel;\n@@ -28,12 +27,11 @@ public class LinkedAccountsStatusModalPanel extends MultilevelPanel.SecondLevel\n     private static final long serialVersionUID = 8804361394735366181L;\n \n     public LinkedAccountsStatusModalPanel(\n-            final BaseModal<?> baseModal,\n             final IModel<UserTO> model,\n             final PageReference pageRef) {\n \n         super(MultilevelPanel.SECOND_LEVEL_ID);\n \n-        add(new LinkedAccountModalPanel(baseModal, model, pageRef, true).setOutputMarkupId(true));\n+        add(new LinkedAccountModalPanel(model, pageRef, true).setOutputMarkupId(true));\n     }\n }"},{"sha":"36af1931dfb32254fdd9abba1208187d69b89189","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusDirectoryPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -261,8 +261,7 @@ public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                         multiLevelPanelRef.next(\"ACCOUNTS\",\n-                                new LinkedAccountsStatusModalPanel(\n-                                        baseModal, Model.of(UserTO.class.cast(anyTO)), pageRef),\n+                                new LinkedAccountsStatusModalPanel(Model.of(UserTO.class.cast(anyTO)), pageRef),\n                                 target);\n                         target.add(multiLevelPanelRef);\n                         AnyStatusDirectoryPanel.this.getTogglePanel().close(target);"},{"sha":"c49666eb56aedc69e43b1880c736072184eec21c","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/TopologyWebSocketBehavior.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -274,7 +274,7 @@ public String getKey() {\n         public abstract String call() throws Exception;\n     }\n \n-    class ConnectorChecker extends Checker {\n+    static class ConnectorChecker extends Checker {\n \n         ConnectorChecker(final String key, final Application application) {\n             super(key, application);\n@@ -300,7 +300,7 @@ public String call() throws Exception {\n         }\n     }\n \n-    class ResourceChecker extends Checker {\n+    static class ResourceChecker extends Checker {\n \n         ResourceChecker(final String key, final Application application) {\n             super(key, application);"},{"sha":"9521f5fb1aa344e2f6cfb16db5975a393f5b7233","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxSpinnerFieldPanel.java","status":"modified","additions":15,"deletions":11,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -147,17 +147,21 @@ public T getObject() {\n \n                 if (obj != null && !obj.toString().isEmpty()) {\n                     if (obj instanceof String) {\n-                        number = reference.equals(Integer.class)\n-                                ? reference.cast(Integer.valueOf((String) obj))\n-                                : reference.equals(Long.class)\n-                                ? reference.cast(Long.valueOf((String) obj))\n-                                : reference.equals(Short.class)\n-                                ? reference.cast(Short.valueOf((String) obj))\n-                                : reference.equals(Float.class)\n-                                ? reference.cast(Float.valueOf((String) obj))\n-                                : reference.equals(byte.class)\n-                                ? reference.cast(Byte.valueOf((String) obj))\n-                                : reference.cast(Double.valueOf((String) obj));\n+                        try {\n+                            number = reference.equals(Integer.class)\n+                                    ? reference.cast(Integer.valueOf((String) obj))\n+                                    : reference.equals(Long.class)\n+                                    ? reference.cast(Long.valueOf((String) obj))\n+                                    : reference.equals(Short.class)\n+                                    ? reference.cast(Short.valueOf((String) obj))\n+                                    : reference.equals(Float.class)\n+                                    ? reference.cast(Float.valueOf((String) obj))\n+                                    : reference.equals(byte.class)\n+                                    ? reference.cast(Byte.valueOf((String) obj))\n+                                    : reference.cast(Double.valueOf((String) obj));\n+                        } catch (NumberFormatException e) {\n+                            LOG.error(\"While attempting to parse {}\", obj, e);\n+                        }\n                     } else if (obj instanceof Number) {\n                         // Don't parse anything\n                         number = reference.cast(obj);"},{"sha":"f2bb4bcaa34bbaad6944f0a168e741122aec239c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/PreferenceManager.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -143,7 +143,7 @@ public static void set(final Request request, final Response response, final Map\n         }\n     }\n \n-    public static void set(final Request request, final Response response, final String key, final String value) {\n+    public static void set(final String key, final String value) {\n         String prefString = COOKIE_UTILS.load(COOKIE_NAME);\n \n         final Map<String, String> current = new HashMap<>();\n@@ -161,9 +161,8 @@ public static void set(final Request request, final Response response, final Str\n         }\n     }\n \n-    public static void setList(\n-            final Request request, final Response response, final String key, final List<String> values) {\n-        set(request, response, key, StringUtils.join(values, \";\"));\n+    public static void setList(final String key, final List<String> values) {\n+        set(key, StringUtils.join(values, \";\"));\n     }\n \n     public static void setList("},{"sha":"41b5ea7f97f6f43186a471c3545e7f33945a89b1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -196,9 +196,27 @@ protected void init() {\n         maxWaitTime = Integer.valueOf(props.getProperty(\"maxWaitTimeOnApplyChanges\", \"30\"));\n \n         // Resource connections check thread pool size\n-        corePoolSize = Integer.valueOf(props.getProperty(\"executor.corePoolSize\", \"5\"));\n-        maxPoolSize = Integer.valueOf(props.getProperty(\"executor.maxPoolSize\", \"10\"));\n-        queueCapacity = Integer.valueOf(props.getProperty(\"executor.queueCapacity\", \"50\"));\n+        try {\n+            corePoolSize = Integer.valueOf(props.getProperty(\"executor.corePoolSize\", \"5\"));\n+        } catch (NumberFormatException e) {\n+            LOG.error(\"Invalid value provided for 'executor.corePoolSize': {}\",\n+                    props.getProperty(\"executor.corePoolSize\"));\n+            corePoolSize = 5;\n+        }\n+        try {\n+            maxPoolSize = Integer.valueOf(props.getProperty(\"executor.maxPoolSize\", \"10\"));\n+        } catch (NumberFormatException e) {\n+            LOG.error(\"Invalid value provided for 'executor.maxPoolSize': {}\",\n+                    props.getProperty(\"executor.maxPoolSize\"));\n+            maxPoolSize = 10;\n+        }\n+        try {\n+            queueCapacity = Integer.valueOf(props.getProperty(\"executor.queueCapacity\", \"50\"));\n+        } catch (NumberFormatException e) {\n+            LOG.error(\"Invalid value provided for 'executor.queueCapacity': {}\",\n+                    props.getProperty(\"executor.queueCapacity\"));\n+            maxPoolSize = 50;\n+        }\n \n         // process page properties\n         pageClasses = new HashMap<>();"},{"sha":"54197345d81ca595d400883db150bedd842c838c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/MIMETypesLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FMIMETypesLoader.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -26,6 +26,6 @@ public class MIMETypesLoader extends AbstractMIMETypesLoader {\n \n     @Override\n     protected String getMimeTypesFile() throws IOException {\n-        return IOUtils.toString(getClass().getResourceAsStream(\"/MIMETypes.json\"));\n+        return IOUtils.toString(MIMETypesLoader.class.getResourceAsStream(\"/MIMETypes.json\"));\n     }\n }"},{"sha":"36c138714e943f6e8a0b3271f34f4c1b7e5cabdb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -174,7 +174,7 @@ protected List<IColumn<A, String>> getColumns() {\n             }\n \n             PreferenceManager.setList(\n-                    getRequest(), getResponse(), DisplayAttributesModalPanel.getPrefDetailView(type),\n+                    DisplayAttributesModalPanel.getPrefDetailView(type),\n                     List.of(getDefaultAttributeSelection()));\n         }\n "},{"sha":"fa36ba95737c04d8956c806dfb988a0f2ef93c57","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -221,7 +221,7 @@ protected void initResultTable() {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                PreferenceManager.set(getRequest(), getResponse(), paginatorRowsKey(), String.valueOf(rows));\n+                PreferenceManager.set(paginatorRowsKey(), String.valueOf(rows));\n \n                 EventDataWrapper data = new EventDataWrapper();\n                 data.setTarget(target);"},{"sha":"beae416534f8d0744aead5c2fe506a717aa98c25","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DomainWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDomainWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDomainWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDomainWizardBuilder.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -79,7 +79,7 @@ protected WizardModel buildModelSteps(final Domain domain, final WizardModel wiz\n         wizardModel.add(new Storage(domain));\n         wizardModel.add(new AdminCredentials(domain));\n         wizardModel.add(new Content(domain));\n-        wizardModel.add(new KeymasterConfParams(domain));\n+        wizardModel.add(new KeymasterConfParams(domain, pageRef));\n         return wizardModel;\n     }\n \n@@ -202,11 +202,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         }\n     }\n \n-    public class KeymasterConfParams extends WizardStep {\n+    public static class KeymasterConfParams extends WizardStep {\n \n         private static final long serialVersionUID = -8448363577805933925L;\n \n-        public KeymasterConfParams(final Domain domain) {\n+        public KeymasterConfParams(final Domain domain, final PageReference pageRef) {\n             JsonEditorPanel keymasterConfParams = new JsonEditorPanel(\n                     null, new PropertyModel<>(domain, \"keymasterConfParams\"), false, pageRef);\n             keymasterConfParams.setOutputMarkupPlaceholderTag(true);"},{"sha":"e6a60ca902072c02480c725b81596eaa1f0ff637","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationModalPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -117,8 +117,8 @@ public ImplementationModalPanel(\n                     getGroovyTemplateClassName(implementation.getType());\n             if (templateClassName != null) {\n                 try {\n-                    implementation.setBody(StringUtils.substringAfter(IOUtils.toString(getClass().\n-                            getResourceAsStream(\n+                    implementation.setBody(StringUtils.substringAfter(\n+                            IOUtils.toString(ImplementationModalPanel.class.getResourceAsStream(\n                                     \"/org/apache/syncope/client/console/implementations/\" + templateClassName\n                                     + \".groovy\")),\n                             \"*/\\n\"));"},{"sha":"9718ed466bacae335f09f35e7dede78291791a91","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/AnyPropagationTasks.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -32,25 +32,25 @@\n public class AnyPropagationTasks extends AbstractPropagationTasks {\n \n     private static final long serialVersionUID = -4013796607157549641L;\n-    \n+\n     public <T extends AnyTO> AnyPropagationTasks(\n             final BaseModal<?> baseModal,\n             final AnyTypeKind anyTypeKind,\n             final String entityKey,\n-            final PageReference pageReference) {\n+            final PageReference pageRef) {\n \n         super(BaseModal.CONTENT_ID);\n \n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n-        mlp.setFirstLevel(new AnyPropagationTaskDirectoryPanel(baseModal, mlp, anyTypeKind, entityKey, pageReference) {\n+        mlp.setFirstLevel(new AnyPropagationTaskDirectoryPanel(baseModal, mlp, anyTypeKind, entityKey, pageRef) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n             protected void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(Pair.of(null, taskTO))).getObject(),\n-                        new TaskExecutionDetails<>(baseModal, taskTO, pageReference),\n+                        new TaskExecutionDetails<>(baseModal, taskTO, pageRef),\n                         target);\n             }\n \n@@ -59,7 +59,7 @@ protected void viewTaskDetails(final PropagationTaskTO taskTO, final AjaxRequest\n                 mlp.next(\n                         new StringResourceModel(\"task.view.details\", this, new Model<>(Pair.of(null, taskTO))).\n                                 getObject(),\n-                        new TaskAttributesDetailsView(baseModal, taskTO, pageReference),\n+                        new TaskAttributesDetailsView(taskTO),\n                         target);\n             }\n         });"},{"sha":"177da3db65c0c78958626ae0e3d81bfe2a63a0b1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTasks.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -35,21 +35,21 @@ public class PropagationTasks extends AbstractPropagationTasks {\n     public <T extends AnyTO> PropagationTasks(\n             final BaseModal<?> baseModal,\n             final String resource,\n-            final PageReference pageReference) {\n+            final PageReference pageRef) {\n \n         super(BaseModal.CONTENT_ID);\n \n         final MultilevelPanel tasks = new MultilevelPanel(\"tasks\");\n         \n-        tasks.setFirstLevel(new PropagationTaskDirectoryPanel(baseModal, tasks, resource, pageReference) {\n+        tasks.setFirstLevel(new PropagationTaskDirectoryPanel(baseModal, tasks, resource, pageRef) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n             protected void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target) {\n                 tasks.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(Pair.of(null, taskTO))).getObject(),\n-                        new TaskExecutionDetails<>(baseModal, taskTO, pageReference),\n+                        new TaskExecutionDetails<>(baseModal, taskTO, pageRef),\n                         target);\n             }\n \n@@ -58,7 +58,7 @@ protected void viewTaskDetails(final PropagationTaskTO taskTO, final AjaxRequest\n                 tasks.next(\n                         new StringResourceModel(\"task.view.details\", this, new Model<>(Pair.of(null, taskTO))).\n                                 getObject(),\n-                        new TaskAttributesDetailsView(baseModal, taskTO, pageReference),\n+                        new TaskAttributesDetailsView(taskTO),\n                         target);\n             }\n         });"},{"sha":"22e6e2d82d0c4ef9026a225c8d813436a626c790","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/TaskAttributesDetailsView.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskAttributesDetailsView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskAttributesDetailsView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskAttributesDetailsView.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -23,10 +23,8 @@\n import java.io.IOException;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n@@ -43,14 +41,12 @@ public class TaskAttributesDetailsView extends MultilevelPanel.SecondLevel {\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n-    public TaskAttributesDetailsView(final BaseModal<?> baseModal, final PropagationTaskTO taskTO,\n-            final PageReference pageRef) {\n+    public TaskAttributesDetailsView(final PropagationTaskTO taskTO) {\n         super();\n \n         Pair<String, String> info = Pair.of(taskTO.getEntityKey(), getJSONInfo(taskTO));\n         JsonEditorPanel jsonPanel =\n-                new JsonEditorPanel(null, new PropertyModel<String>(info, \"value\"), true,\n-                        null) {\n+                new JsonEditorPanel(null, new PropertyModel<String>(info, \"value\"), true, null) {\n \n             private static final long serialVersionUID = -8927036362466990179L;\n "},{"sha":"4c1d103eb3e73bcb554ac0902bbb11e0816d1366","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/AnyByRealmWidget.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -23,6 +23,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.chartjs.Bar;\n@@ -159,9 +160,9 @@ public boolean refresh(\n \n         if (!this.usersByRealm.equals(usersByRealm)\n                 || !this.groupsByRealm.equals(groupsByRealm)\n-                || (!(this.anyType1 == null && anyType1 == null) && !this.anyType1.equals(anyType1))\n+                || (!(this.anyType1 == null && anyType1 == null) && !Objects.equals(this.anyType1, anyType1))\n                 || !this.any1ByRealm.equals(any1ByRealm)\n-                || (!(this.anyType2 == null && anyType2 == null) && !this.anyType2.equals(anyType2))\n+                || (!(this.anyType2 == null && anyType2 == null) && !Objects.equals(this.anyType2, anyType2))\n                 || !this.any2ByRealm.equals(any2ByRealm)) {\n \n             this.usersByRealm = usersByRealm;"},{"sha":"704d5690f52207334a8799a06da46d1f51356fba","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/ReconciliationReportParser.java","status":"modified","additions":15,"deletions":7,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -40,7 +40,9 @@ public final class ReconciliationReportParser {\n         XML_INPUT_FACTORY.setProperty(XMLInputFactory.SUPPORT_DTD, Boolean.FALSE);\n     }\n \n-    public static ReconciliationReport parse(final Date run, final InputStream in) throws XMLStreamException {\n+    public static ReconciliationReport parse(final Date run, final InputStream in)\n+            throws XMLStreamException, NumberFormatException {\n+\n         XMLStreamReader streamReader = XML_INPUT_FACTORY.createXMLStreamReader(in);\n         streamReader.nextTag(); // root\n         streamReader.nextTag(); // report\n@@ -140,22 +142,28 @@ public static ReconciliationReport parse(final Date run, final InputStream in) t\n             } else if (streamReader.isEndElement()) {\n                 switch (streamReader.getLocalName()) {\n                     case \"user\":\n-                        user.getMissing().addAll(missing);\n-                        user.getMisaligned().addAll(misaligned);\n+                        Optional.ofNullable(user).ifPresent(u -> {\n+                            u.getMissing().addAll(missing);\n+                            u.getMisaligned().addAll(misaligned);\n+                        });\n                         missing.clear();\n                         misaligned.clear();\n                         break;\n \n                     case \"group\":\n-                        group.getMissing().addAll(missing);\n-                        group.getMisaligned().addAll(misaligned);\n+                        Optional.ofNullable(group).ifPresent(g -> {\n+                            g.getMissing().addAll(missing);\n+                            g.getMisaligned().addAll(misaligned);\n+                        });\n                         missing.clear();\n                         misaligned.clear();\n                         break;\n \n                     case \"anyObject\":\n-                        anyObject.getMissing().addAll(missing);\n-                        anyObject.getMisaligned().addAll(misaligned);\n+                        Optional.ofNullable(anyObject).ifPresent(a -> {\n+                            a.getMissing().addAll(missing);\n+                            a.getMisaligned().addAll(misaligned);\n+                        });\n                         missing.clear();\n                         misaligned.clear();\n                         break;"},{"sha":"24e7041c51c954a310038417cc8cd14b35a33d9b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -183,8 +183,8 @@ public void onEvent(final IEvent<?> event) {\n             final boolean modalPanelAvailable = newItemEvent.getModalPanel() != null || newItemPanelBuilder != null;\n \n             if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent && modalPanelAvailable) {\n-                final WizardModalPanel<?> modalPanel;\n-                if (newItemEvent.getModalPanel() == null) {\n+                WizardModalPanel<?> modalPanel;\n+                if (newItemEvent.getModalPanel() == null && newItemPanelBuilder != null) {\n                     newItemPanelBuilder.setItem(item);\n \n                     modalPanel = newItemPanelBuilder.build("},{"sha":"257a824ace528200cabd66ebb187586c23d5d143","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -161,14 +161,15 @@ protected void setAttrs(final MembershipTO membershipTO) {\n         membershipTO.getDerAttrs().addAll(attrs);\n     }\n \n-    public class DerSchemas extends Schemas {\n+    public static class DerSchemas extends Schemas {\n \n         private static final long serialVersionUID = -4730563859116024676L;\n \n         public DerSchemas(\n                 final String id,\n                 final Map<String, DerSchemaTO> schemas,\n                 final IModel<List<Attr>> attrTOs) {\n+\n             super(id);\n \n             add(new ListView<Attr>(\"schemas\", attrTOs) {"},{"sha":"1a7f5598aa147c427c494c4fccc29869a0649468","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":17,"deletions":19,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -198,27 +198,26 @@ public class ConsoleGroupsModel extends AbstractGroupsModel {\n \n         private static final long serialVersionUID = -4541954630939063927L;\n \n-        protected List<GroupTO> groups;\n+        protected List<GroupTO> groupsObj;\n \n-        protected List<MembershipTO> memberships;\n+        protected List<MembershipTO> membershipsObj;\n \n-        protected List<String> dynMemberships;\n+        protected List<String> dynMembershipsObj;\n \n-        protected String realm;\n+        protected String realmObj;\n \n         @Override\n         public List<GroupTO> getObject() {\n             reload();\n-            return groups;\n+            return groupsObj;\n         }\n \n         /**\n          * Retrieve the first MAX_GROUP_LIST_SIZE assignable.\n          */\n         @Override\n         protected void reloadObject() {\n-            groups = groupRestClient.search(\n-                    realm,\n+            groupsObj = groupRestClient.search(realmObj,\n                     SyncopeClient.getGroupSearchConditionBuilder().isAssignable().query(),\n                     1,\n                     Constants.MAX_GROUP_LIST_SIZE,\n@@ -229,7 +228,7 @@ protected void reloadObject() {\n         @Override\n         public List<MembershipTO> getMemberships() {\n             reload();\n-            return memberships;\n+            return membershipsObj;\n         }\n \n         /**\n@@ -254,8 +253,7 @@ protected void reloadMemberships() {\n                         collect(Collectors.toList());\n \n                 if (!conditions.isEmpty()) {\n-                    assignedGroups.putAll(groupRestClient.search(\n-                            realm,\n+                    assignedGroups.putAll(groupRestClient.search(realmObj,\n                             builder.isAssignable().and().or(conditions).query(),\n                             1,\n                             Constants.MAX_GROUP_LIST_SIZE,\n@@ -275,14 +273,14 @@ protected void reloadMemberships() {\n             });\n             GroupableRelatableTO.class.cast(anyTO).getMemberships().removeAll(toBeRemoved);\n \n-            memberships = GroupableRelatableTO.class.cast(anyTO).getMemberships();\n-            memberships.sort(Comparator.comparing(MembershipTO::getGroupName));\n+            membershipsObj = GroupableRelatableTO.class.cast(anyTO).getMemberships();\n+            membershipsObj.sort(Comparator.comparing(MembershipTO::getGroupName));\n         }\n \n         @Override\n         public List<String> getDynMemberships() {\n             reload();\n-            return dynMemberships;\n+            return dynMembershipsObj;\n         }\n \n         /**\n@@ -297,9 +295,9 @@ protected void reloadDynMemberships() {\n                     equalTo(membership.getGroupKey()).wrap()).\n                     collect(Collectors.toList());\n \n-            dynMemberships = new ArrayList<>();\n+            dynMembershipsObj = new ArrayList<>();\n             if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.GROUP_SEARCH) && !conditions.isEmpty()) {\n-                dynMemberships.addAll(groupRestClient.search(\n+                dynMembershipsObj.addAll(groupRestClient.search(\n                         SyncopeConstants.ROOT_REALM,\n                         builder.or(conditions).query(),\n                         -1,\n@@ -316,11 +314,11 @@ protected void reloadDynMemberships() {\n         protected void reload() {\n             boolean reload;\n             if (Groups.this.templateMode) {\n-                reload = realm == null;\n-                realm = SyncopeConstants.ROOT_REALM;\n+                reload = realmObj == null;\n+                realmObj = SyncopeConstants.ROOT_REALM;\n             } else {\n-                reload = !Groups.this.anyTO.getRealm().equalsIgnoreCase(realm);\n-                realm = Groups.this.anyTO.getRealm();\n+                reload = !Groups.this.anyTO.getRealm().equalsIgnoreCase(realmObj);\n+                realmObj = Groups.this.anyTO.getRealm();\n             }\n \n             if (reload) {"},{"sha":"48d6e42331098fba66006445effe334a04b292da","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -172,7 +172,7 @@ protected void init() {\n \n         // read customFormAttributes.json\n         File enduserDir;\n-        try (InputStream is = getClass().getResourceAsStream('/' + CUSTOM_FORM_ATTRIBUTES_FILE)) {\n+        try (InputStream is = SyncopeWebApplication.class.getResourceAsStream('/' + CUSTOM_FORM_ATTRIBUTES_FILE)) {\n             customFormAttributes = MAPPER.readValue(is,\n                     new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n             });"},{"sha":"f5122e11bff5683fa9bf76e562441263bfc2658f","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/init/MIMETypesLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FMIMETypesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FMIMETypesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FMIMETypesLoader.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -26,6 +26,6 @@ public class MIMETypesLoader extends AbstractMIMETypesLoader {\n \n     @Override\n     protected String getMimeTypesFile() throws IOException {\n-        return IOUtils.toString(getClass().getResourceAsStream(\"/MIMETypes.json\"));\n+        return IOUtils.toString(MIMETypesLoader.class.getResourceAsStream(\"/MIMETypes.json\"));\n     }\n }"},{"sha":"f937507f5f10f7f0dcd567551862e59239338a16","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/SelfConfirmPasswordReset.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfConfirmPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfConfirmPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfConfirmPasswordReset.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -68,7 +68,7 @@ protected List<String> load() {\n     public SelfConfirmPasswordReset(final PageParameters parameters) {\n         super(parameters);\n \n-        if (parameters == null || parameters.get(\"token\").isEmpty()) {\n+        if (parameters.get(\"token\").isEmpty()) {\n             LOG.debug(\"No token parameter found in the request url\");\n             parameters.add(\"errorMessage\", getString(\"self.confirm.pwd.reset.error.empty\"));\n             setResponsePage(getApplication().getHomePage(), parameters);"},{"sha":"9940a44597a8473509f73a7a8c48733be3f029c0","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/DerAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FDerAttrs.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -161,7 +161,7 @@ protected void setAttrs(final MembershipTO membershipTO) {\n         membershipTO.getDerAttrs().addAll(derAttrs);\n     }\n \n-    public class DerSchemas extends Schemas {\n+    public static class DerSchemas extends Schemas {\n \n         private static final long serialVersionUID = -4730563859116024676L;\n "},{"sha":"c956785b740aacd926d779ad63e8c1a6d65d4ba8","filename":"common/idm/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RemediationService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRemediationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRemediationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRemediationService.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -111,7 +111,7 @@ public interface RemediationService extends JAXRSService {\n     @ApiResponses(\n             @ApiResponse(responseCode = \"201\",\n                     description = \"Object successfully created enriched with propagation status information, as Entity,\"\n-                    + \"or empty if 'Prefer: return-no-content' was specified\",\n+                    + \" or empty if 'Prefer: return-no-content' was specified\",\n                     content =\n                     @Content(schema =\n                             @Schema(implementation = ProvisioningResult.class)), headers = {"},{"sha":"594560aa62750f3ab92c913b4c9a035c06993a37","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/LogOutputStream.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FLogOutputStream.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FLogOutputStream.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FLogOutputStream.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -27,7 +27,7 @@\n  * Delegates output stream writing onto an SLF4J logger.\n  * Inspired by {@code org.apache.commons.exec.LogOutputStream}\n  */\n-public class LogOutputStream extends OutputStream {\n+public class LogOutputStream extends OutputStream implements AutoCloseable {\n \n     /** Initial buffer size. */\n     private static final int INTIAL_SIZE = 132;"},{"sha":"619c07c0626c20287e915d29b0fcd16e77fe6199","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/PropertyUtils.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -56,10 +56,11 @@ public static Properties read(\n                     File confDirProps = new File(confDir, propertiesFileName);\n                     if (confDirProps.exists() && confDirProps.canRead() && confDirProps.isFile()) {\n                         props.clear();\n-                        props.load(new FileInputStream(confDirProps));\n+                        try (FileInputStream fis = new FileInputStream(confDirProps)) {\n+                            props.load(fis);\n+                        }\n                     }\n                 } else {\n-                    confDir = null;\n                     LOG.warn(\"{} not existing, unreadable or not a directory, ignoring\", confDirName);\n                 }\n             }"},{"sha":"4d45e14202790eca5e69259e3cf2164d181349c4","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyObjectService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -89,7 +89,7 @@ public interface AnyObjectService extends AnyService<AnyObjectTO> {\n             @ApiResponse(responseCode = \"201\",\n                     description =\n                     \"Any object successfully created enriched with propagation status information, as Entity,\"\n-                    + \"or empty if 'Prefer: return-no-content' was specified\",\n+                    + \" or empty if 'Prefer: return-no-content' was specified\",\n                     content =\n                     @Content(schema =\n                             @Schema(implementation = ProvisioningResult.class)), headers = {"},{"sha":"41a1d5c99c57c74845e860b5dbd95606c27be046","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -93,7 +93,7 @@ public interface GroupService extends AnyService<GroupTO> {\n     @ApiResponses(\n             @ApiResponse(responseCode = \"201\",\n                     description = \"Group successfully created enriched with propagation status information, as Entity,\"\n-                    + \"or empty if 'Prefer: return-no-content' was specified\",\n+                    + \" or empty if 'Prefer: return-no-content' was specified\",\n                     content =\n                     @Content(schema =\n                             @Schema(implementation = ProvisioningResult.class)), headers = {"},{"sha":"6bd697212f61d0990dba88959b1d4d32bf85fdc9","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -102,7 +102,7 @@ public interface RealmService extends JAXRSService {\n     @ApiResponses(\n             @ApiResponse(responseCode = \"201\",\n                     description = \"Realm successfully created enriched with propagation status information, as Entity,\"\n-                    + \"or empty if 'Prefer: return-no-content' was specified\",\n+                    + \" or empty if 'Prefer: return-no-content' was specified\",\n                     content =\n                     @Content(schema =\n                             @Schema(implementation = ProvisioningResult.class)), headers = {"},{"sha":"41cafebbe688233418354275528265828953f1ad","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -93,7 +93,7 @@ public interface UserSelfService extends JAXRSService {\n     @ApiResponses(\n             @ApiResponse(responseCode = \"201\",\n                     description = \"User successfully created enriched with propagation status information, as Entity,\"\n-                    + \"or empty if 'Prefer: return-no-content' was specified\",\n+                    + \" or empty if 'Prefer: return-no-content' was specified\",\n                     content =\n                     @Content(schema =\n                             @Schema(implementation = ProvisioningResult.class)), headers = {"},{"sha":"b161fc9e7ea8f3a76a2328dec9e74717f6c452b8","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -89,7 +89,7 @@ public interface UserService extends AnyService<UserTO> {\n     @ApiResponses(\n             @ApiResponse(responseCode = \"201\",\n                     description = \"User successfully created enriched with propagation status information, as Entity,\"\n-                    + \"or empty if 'Prefer: return-no-content' was specified\",\n+                    + \" or empty if 'Prefer: return-no-content' was specified\",\n                     content =\n                     @Content(schema =\n                             @Schema(implementation = ProvisioningResult.class)), headers = {"},{"sha":"f6fbceee4b25db942d14962380b783caa20b5173","filename":"common/keymaster/client-api/src/main/java/org/apache/syncope/common/keymaster/client/api/model/Domain.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2Fmodel%2FDomain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2Fmodel%2FDomain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fapi%2Fmodel%2FDomain.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -241,7 +241,7 @@ public void setAdminCipherAlgorithm(final CipherAlgorithm adminCipherAlgorithm)\n     private String read(final String filename) {\n         String read = null;\n         try {\n-            read = IOUtils.toString(getClass().getResourceAsStream('/' + filename));\n+            read = IOUtils.toString(Domain.class.getResourceAsStream('/' + filename));\n         } catch (IOException e) {\n             LOG.error(\"Could not read {}\", filename, e);\n         }"},{"sha":"10bdb0084b09973fa799e5ad0c0f686872591623","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/MyJPAJSONAnySearchDAO.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FMyJPAJSONAnySearchDAO.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -65,7 +65,6 @@ protected String buildAdminRealmsFilter(\n     @Override\n     protected void processOBS(\n             final SearchSupport svs,\n-            final Set<String> involvedPlainAttrs,\n             final OrderBySupport obs,\n             final StringBuilder where) {\n "},{"sha":"6d6e6d47f3cd8c7148abbfb9ed9b401f2044e2c3","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -41,7 +41,6 @@ public class PGJPAJSONAnySearchDAO extends AbstractJPAJSONAnySearchDAO {\n     @Override\n     protected void processOBS(\n             final SearchSupport svs,\n-            final Set<String> involvedPlainAttrs,\n             final OrderBySupport obs,\n             final StringBuilder where) {\n "},{"sha":"e1fed710ec6652efb23352c951da52fcfae4d60f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/StartupDomainLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FStartupDomainLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FStartupDomainLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FStartupDomainLoader.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -148,7 +148,7 @@ public void load() {\n                     }\n                 }\n             }\n-        } catch (IOException e) {\n+        } catch (IOException | NumberFormatException e) {\n             LOG.error(\"Error during domain initialization\", e);\n         }\n     }"},{"sha":"f539f7c27aa58ad5bc7ac7a3d4818edf982f49a1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -173,10 +173,10 @@ protected <T extends Any<?>> List<T> doSearch(\n             OrderBySupport obs = parseOrderBy(svs, orderBy);\n             if (queryString.charAt(0) == '(') {\n                 queryString.insert(0, buildSelect(obs));\n-                queryString.append(buildWhere(svs, queryInfo.getRight(), obs));\n+                queryString.append(buildWhere(svs, obs));\n             } else {\n                 queryString.insert(0, buildSelect(obs).append('('));\n-                queryString.append(')').append(buildWhere(svs, queryInfo.getRight(), obs));\n+                queryString.append(')').append(buildWhere(svs, obs));\n             }\n             queryString.\n                     append(filter.getLeft()).\n@@ -238,7 +238,6 @@ private static StringBuilder buildSelect(final OrderBySupport obs) {\n \n     protected void processOBS(\n             final SearchSupport svs,\n-            final Set<String> involvedPlainAttrs,\n             final OrderBySupport obs,\n             final StringBuilder where) {\n \n@@ -290,11 +289,10 @@ protected void processOBS(\n \n     private StringBuilder buildWhere(\n             final SearchSupport svs,\n-            final Set<String> involvedPlainAttrs,\n             final OrderBySupport obs) {\n \n         StringBuilder where = new StringBuilder(\" u\");\n-        processOBS(svs, involvedPlainAttrs, obs, where);\n+        processOBS(svs, obs, where);\n         where.append(\" WHERE \");\n         obs.views.forEach(searchView -> where.append(\"u.any_id=\").append(searchView.alias).append(\".any_id AND \"));\n \n@@ -535,12 +533,12 @@ private Pair<StringBuilder, Set<String>> getQuery(\n                 Pair<StringBuilder, Set<String>> rigthAndInfo = getQuery(cond.getRight(), parameters, svs);\n                 involvedPlainAttrs.addAll(rigthAndInfo.getRight());\n \n-                String andSubQuery = leftAndInfo.getKey().toString();\n+                String andSubQuery = leftAndInfo.getLeft().toString();\n                 // Add extra parentheses\n                 andSubQuery = andSubQuery.replaceFirst(\"WHERE \", \"WHERE (\");\n                 query.append(andSubQuery).\n                         append(\" AND any_id IN ( \").\n-                        append(rigthAndInfo.getKey()).\n+                        append(rigthAndInfo.getLeft()).\n                         append(\"))\");\n                 break;\n "},{"sha":"1b776d547f0fc94f15d5fa4aa156248fa502d314","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -257,6 +257,7 @@ public List<User> findAll(final int page, final int itemsPerPage) {\n         return query.getResultList();\n     }\n \n+    @Override\n     public List<String> findAllKeys(final int page, final int itemsPerPage) {\n         return findAllKeys(JPAUser.TABLE, page, itemsPerPage);\n     }"},{"sha":"5f4a6d4dd5716a3cd7c95c84efdf9b84a363e170","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/WAConfigTest.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FWAConfigTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FWAConfigTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FWAConfigTest.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -28,7 +28,6 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.HashMap;\n import java.util.List;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -66,8 +65,7 @@ public void saveCollection() {\n     }\n \n     @Test\n-    public void saveMap() {\n-        HashMap<String, Double> map = new HashMap<>();\n+    public void saveList() {\n         create(\"system.example.key[0].key1\", List.of(\"value1\"));\n         assertFalse(configDAO.findAll().isEmpty());\n     }"},{"sha":"6ed21d82918ac710fcf13c3fff737dc7f46776f9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -223,7 +223,7 @@ private Name evaluateNAME(final Any<?> any, final Provision provision, final Str\n         }\n \n         // Evaluate connObjectKey expression\n-        String connObjectLink = provision == null || provision.getMapping() == null\n+        String connObjectLink = provision.getMapping() == null\n                 ? null\n                 : provision.getMapping().getConnObjectLink();\n         String evalConnObjectLink = null;\n@@ -255,9 +255,7 @@ private Name evaluateNAME(final Realm realm, final OrgUnit orgUnit, final String\n         }\n \n         // Evaluate connObjectKey expression\n-        String connObjectLink = orgUnit == null\n-                ? null\n-                : orgUnit.getConnObjectLink();\n+        String connObjectLink = orgUnit.getConnObjectLink();\n         String evalConnObjectLink = null;\n         if (StringUtils.isNotBlank(connObjectLink)) {\n             JexlContext jexlContext = new MapContext();"},{"sha":"a584ad68a2ca43d11717a4e0eddfc4e1504725aa","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java;\n \n+import java.io.IOException;\n import java.io.PrintStream;\n import java.lang.reflect.InvocationTargetException;\n import java.nio.charset.StandardCharsets;\n@@ -203,7 +204,7 @@ public JobManager jobManager() {\n \n     @ConditionalOnMissingBean\n     @Bean\n-    public JavaMailSender mailSender() throws IllegalArgumentException, NamingException {\n+    public JavaMailSender mailSender() throws IllegalArgumentException, NamingException, IOException {\n         JavaMailSenderImpl mailSender = new JavaMailSenderImpl() {\n \n             @Override\n@@ -265,7 +266,9 @@ protected Transport connectTransport() throws MessagingException {\n             if (BooleanUtils.toBoolean(mailDebug)) {\n                 session = mailSender.getSession();\n                 session.setDebug(true);\n-                session.setDebugOut(new PrintStream(new LogOutputStream(LOG)));\n+                try (LogOutputStream los = new LogOutputStream(LOG)) {\n+                    session.setDebugOut(new PrintStream(los));\n+                }\n             }\n         } else {\n             mailSender.setSession(session);"},{"sha":"0bcfe1b82837d272e8c254d464d4392c577d6748","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractProvisioningJobDelegate.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -23,7 +23,6 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Objects;\n-import javax.annotation.Resource;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TraceLevel;\n@@ -82,9 +81,6 @@ public static String generate(final Collection<ProvisioningReport> results, fina\n         return sb.toString();\n     }\n \n-    @Resource(name = \"adminUser\")\n-    protected String adminUser;\n-\n     /**\n      * ConnInstance loader.\n      */"},{"sha":"6652874c2c6ee92fbd956000791630f70245f4cf","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/NewBpmnProcess.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewBpmnProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewBpmnProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewBpmnProcess.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -59,7 +59,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                 try {\n                     BpmnProcessRestClient.setDefinition(MediaType.APPLICATION_XML_TYPE, key.getModelObject(),\n                             IOUtils.toString(\n-                                    getClass().getResourceAsStream(\"empty.bpmn20.xml\"),\n+                                    NewBpmnProcess.class.getResourceAsStream(\"empty.bpmn20.xml\"),\n                                     Charsets.UTF_8.name()).replaceAll(\"%KEY%\", key.getModelObject()));\n \n                     key.getModel().setObject(null);"},{"sha":"bb49a05b5dfa08ef6ec25a9cb3aec0e43223d364","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableRuntimeUtils.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableRuntimeUtils.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -159,7 +159,6 @@ public static String getFormTask(final DomainProcessEngine engine, final String\n      *\n      * @param engine Flowable engine\n      * @param procInstId process instance id\n-     * @param user user JPA entity\n      * @param userTO user transfer object\n      * @param password password\n      * @param enabled is user to be enabled or not?\n@@ -169,7 +168,6 @@ public static String getFormTask(final DomainProcessEngine engine, final String\n     public static void saveForFormSubmit(\n             final DomainProcessEngine engine,\n             final String procInstId,\n-            final User user,\n             final UserTO userTO,\n             final String password,\n             final Boolean enabled,"},{"sha":"10aade46997f2568cff5e82caa38320689644562","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -699,7 +699,6 @@ public UserWorkflowResult<UserUR> submitForm(final UserRequestForm form) {\n             FlowableRuntimeUtils.saveForFormSubmit(\n                     engine,\n                     procInstID,\n-                    user,\n                     dataBinder.getUserTO(user, true),\n                     clearPassword,\n                     enabled,"},{"sha":"ff9fb11790310b5413a036700f16c9f1b3841c09","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserWorkflowAdapter.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -154,7 +154,6 @@ protected UserWorkflowResult<Pair<String, Boolean>> doCreate(\n         FlowableRuntimeUtils.saveForFormSubmit(\n                 engine,\n                 procInst.getProcessInstanceId(),\n-                created,\n                 dataBinder.getUserTO(created, true),\n                 userCR.getPassword(),\n                 enabled,\n@@ -292,7 +291,6 @@ protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(\n         FlowableRuntimeUtils.saveForFormSubmit(\n                 engine,\n                 procInstID,\n-                updated,\n                 dataBinder.getUserTO(updated, true),\n                 userUR.getPassword() == null ? null : userUR.getPassword().getValue(),\n                 null,\n@@ -453,7 +451,6 @@ protected void doDelete(final User user) {\n             FlowableRuntimeUtils.saveForFormSubmit(\n                     engine,\n                     procInstID,\n-                    user,\n                     dataBinder.getUserTO(user, true),\n                     null,\n                     null,\n@@ -507,7 +504,6 @@ public UserWorkflowResult<String> executeNextTask(final WorkflowTaskExecInput wo\n             FlowableRuntimeUtils.saveForFormSubmit(\n                     engine,\n                     procInstID,\n-                    user,\n                     dataBinder.getUserTO(user, true),\n                     null,\n                     null,"},{"sha":"fa8b53595730fa95914360c8c9eb2a181d04616e","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -105,7 +105,7 @@ protected WizardModel buildModelSteps(final OIDCC4UIProviderTO modelObject, fina\n             wizardModel.add(new OPContinue(modelObject, true));\n         }\n \n-        Mapping mapping = new Mapping(modelObject);\n+        Mapping mapping = new Mapping();\n         mapping.setOutputMarkupId(true);\n \n         ItemTransformersTogglePanel mapItemTransformers = new ItemTransformersTogglePanel(mapping, pageRef);\n@@ -327,7 +327,7 @@ private static final class Mapping extends WizardStep {\n \n         private static final long serialVersionUID = 3454904947720856253L;\n \n-        Mapping(final OIDCC4UIProviderTO item) {\n+        Mapping() {\n             setTitleModel(Model.of(\"Mapping\"));\n             setSummaryModel(Model.of(StringUtils.EMPTY));\n         }"},{"sha":"22dba7a1c7d38bd9cc7bcc82f88af2ca2ddcc277","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -97,7 +97,7 @@ public SAML2IdPWizardBuilder(\n     protected WizardModel buildModelSteps(final SAML2SP4UIIdPTO modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new IdP(modelObject));\n \n-        Mapping mapping = new Mapping(modelObject);\n+        Mapping mapping = new Mapping();\n         mapping.setOutputMarkupId(true);\n \n         ItemTransformersTogglePanel mapItemTransformers = new ItemTransformersTogglePanel(mapping, pageRef);\n@@ -200,7 +200,7 @@ private static final class Mapping extends WizardStep {\n \n         private static final long serialVersionUID = 3454904947720856253L;\n \n-        Mapping(final SAML2SP4UIIdPTO item) {\n+        Mapping() {\n             setTitleModel(Model.of(\"Mapping\"));\n             setSummaryModel(Model.of(StringUtils.EMPTY));\n         }"},{"sha":"0c5b3428bb42acaf218b086afe156727c9b68746","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -68,7 +68,7 @@ public class SCIMLogic extends AbstractLogic<EntityTO> {\n     private void init() {\n         try {\n             ObjectMapper mapper = new ObjectMapper();\n-            JsonNode tree = mapper.readTree(getClass().getResourceAsStream('/' + SCHEMAS_JSON));\n+            JsonNode tree = mapper.readTree(SCIMLogic.class.getResourceAsStream('/' + SCHEMAS_JSON));\n             if (!tree.isArray()) {\n                 throw new IOException(\"JSON node is not a tree\");\n             }"},{"sha":"fe1116e572d882def334f93beb70ff1fb757c4e5","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/LdifInputStreamLoader.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -29,7 +29,6 @@\n import org.apache.directory.api.ldap.model.name.Dn;\n import org.apache.directory.server.core.api.CoreSession;\n import org.apache.directory.server.i18n.I18n;\n-import org.apache.directory.server.protocol.shared.store.LdifLoadFilter;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -62,19 +61,6 @@ public class LdifInputStreamLoader {\n      * @param ldif the file of LDIF entries to load.\n      */\n     public LdifInputStreamLoader(final CoreSession coreSession, final InputStream ldif) {\n-        this(coreSession, ldif, null);\n-    }\n-\n-    /**\n-     * Creates a new instance of LdifFileLoader.\n-     *\n-     * @param coreSession core session\n-     * @param ldif LDIF content\n-     * @param filters filters\n-     */\n-    public LdifInputStreamLoader(\n-            final CoreSession coreSession, final InputStream ldif, final List<? extends LdifLoadFilter> filters) {\n-\n         this.coreSession = coreSession;\n         this.ldif = ldif;\n     }"},{"sha":"dd01591a92c3149367594da14b200002de236aac","filename":"ide/netbeans/src/main/java/org/apache/syncope/ide/netbeans/view/ResourceExplorerTopComponent.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fnetbeans%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Fnetbeans%2Fview%2FResourceExplorerTopComponent.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -174,7 +174,8 @@ public void mouseClicked(java.awt.event.MouseEvent evt) {\n \n     @Override\n     public Image getIcon() {\n-        return new ImageIcon(getClass().getResource(\"/org/apache/syncope/ide/netbeans/view/favicon.png\")).getImage();\n+        return new ImageIcon(ResourceExplorerTopComponent.class.getResource(\n+                \"/org/apache/syncope/ide/netbeans/view/favicon.png\")).getImage();\n     }\n \n     private void resourceExplorerTreeMouseClicked(final java.awt.event.MouseEvent evt) {\n@@ -452,7 +453,7 @@ private void folderRightClickAction(final MouseEvent evt, final DefaultMutableTr\n \n                             default:\n                         }\n-                        newNode.setBody(IOUtils.toString(getClass().getResourceAsStream(\n+                        newNode.setBody(IOUtils.toString(ResourceExplorerTopComponent.class.getResourceAsStream(\n                                 \"/org/apache/syncope/ide/netbeans/implementations/\" + templateClassName + \".groovy\"),\n                                 StandardCharsets.UTF_8.name()));\n                         added = implementationManagerService.create(newNode);"},{"sha":"a3679d7805c74bdf06820b5f3da11d37f71bab11","filename":"sra/src/main/java/org/apache/syncope/sra/RouteProvider.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FRouteProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FRouteProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FRouteProvider.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -124,7 +124,7 @@ public class RouteProvider {\n \n     @SuppressWarnings(\"unchecked\")\n     private GatewayFilter toFilter(final SRARouteTO route, final SRARouteFilter gwfilter)\n-            throws ClassNotFoundException {\n+            throws ClassNotFoundException, NumberFormatException {\n \n         GatewayFilter filter;\n \n@@ -399,7 +399,7 @@ private GatewayFilter toFilter(final SRARouteTO route, final SRARouteFilter gwfi\n     }\n \n     private AsyncPredicate<ServerWebExchange> toPredicate(final SRARoutePredicate gwpredicate, final boolean negate)\n-            throws ClassNotFoundException {\n+            throws ClassNotFoundException, NumberFormatException {\n \n         AsyncPredicate<ServerWebExchange> predicate;\n         switch (gwpredicate.getFactory()) {"},{"sha":"f553a20e6c84d18aafe61766aff782aeeb31c325","filename":"sra/src/main/java/org/apache/syncope/sra/SyncopeSRAApplication.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSyncopeSRAApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSyncopeSRAApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSyncopeSRAApplication.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -26,7 +26,6 @@\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.cloud.gateway.route.Route;\n import org.springframework.cloud.gateway.route.RouteLocator;\n-import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.PropertySource;\n import reactor.core.publisher.Flux;\n@@ -44,7 +43,7 @@ public static void main(final String[] args) {\n     private RouteProvider provider;\n \n     @Bean\n-    public RouteLocator routes(final RouteLocatorBuilder builder) {\n+    public RouteLocator routes() {\n         return () -> Flux.fromIterable(provider.fetch()).map(Route.AbstractBuilder::build);\n     }\n "},{"sha":"03e1f68d6b5f3f6842b6f85fa5ff4750ce67445f","filename":"sra/src/test/java/org/apache/syncope/sra/filters/BodyPropertyAddingGatewayFilterFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d4f5cc1288bb557314427c52730351f23c4a412/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d4f5cc1288bb557314427c52730351f23c4a412/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java?ref=5d4f5cc1288bb557314427c52730351f23c4a412","patch":"@@ -67,7 +67,7 @@ public GatewayFilter apply(final Config config) {\n         return new ModifyResponseGatewayFilter(config);\n     }\n \n-    public class ModifyResponseGatewayFilter implements GatewayFilter, Ordered {\n+    public static class ModifyResponseGatewayFilter implements GatewayFilter, Ordered {\n \n         private final Config config;\n "}]}