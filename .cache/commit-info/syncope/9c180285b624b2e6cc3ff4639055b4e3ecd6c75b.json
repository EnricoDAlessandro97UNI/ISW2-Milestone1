{"sha":"9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjljMTgwMjg1YjYyNGIyZTZjYzNmZjQ2MzkwNTViNGUzZWNkNmM3NWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-05-10T06:33:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-05-10T06:34:11Z"},"message":"Some IT: more robustness","tree":{"sha":"544a91346e8a20f618839e2c821cbd5ba37eb7f4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/544a91346e8a20f618839e2c821cbd5ba37eb7f4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c1cd3fe9ad12227d58de5adac666d569c9c29876","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c1cd3fe9ad12227d58de5adac666d569c9c29876","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c1cd3fe9ad12227d58de5adac666d569c9c29876"}],"stats":{"total":130,"additions":76,"deletions":54},"files":[{"sha":"1ef0d32945425f50d3d7eb54e132ec49d7f58fa9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.fit;\n \n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n \n import java.io.InputStream;\n import java.net.URI;\n@@ -92,6 +93,7 @@\n import org.slf4j.LoggerFactory;\n import org.junit.FixMethodOrder;\n import org.junit.runners.MethodSorters;\n+import org.springframework.jdbc.core.JdbcTemplate;\n \n @FixMethodOrder(MethodSorters.JVM)\n public abstract class AbstractITCase {\n@@ -488,4 +490,35 @@ protected void updateLdapRemoteObject(\n             }\n         }\n     }\n+\n+    protected <T> T queryForObject(\n+            final JdbcTemplate jdbcTemplate,\n+            final int maxWaitSeconds,\n+            final String sql, final Class<T> requiredType, final Object... args) {\n+\n+        int i = 0;\n+        int maxit = maxWaitSeconds;\n+\n+        T object = null;\n+\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+\n+            try {\n+                object = jdbcTemplate.queryForObject(sql, requiredType, args);\n+            } catch (Exception e) {\n+                LOG.warn(\"While executing query {}\", sql, e);\n+            }\n+\n+            i++;\n+        } while (object == null && i < maxit);\n+        if (object == null) {\n+            fail(\"Timeout when executing query \" + sql);\n+        }\n+\n+        return object;\n+    }\n }"},{"sha":"55d0cd37f13432cab1f74a4e6bd49a3ccb3b660a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","patch":"@@ -566,8 +566,8 @@ public void issueSYNCOPE164() throws Exception {\n \n         // 4. check that the db resource has still the initial password value\n         final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        String value = jdbcTemplate.queryForObject(\n-                \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n+        String value = queryForObject(\n+                jdbcTemplate, 50, \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n         assertEquals(Encryptor.getInstance().encode(\"password123\", CipherAlgorithm.SHA1), value.toUpperCase());\n \n         // 5. successfully authenticate with old (on db resource) and new (on internal storage) password values"},{"sha":"74a78d3ae2faeabaaf2b7be300110a0dbe2882f2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MembershipITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java?ref=9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","patch":"@@ -277,8 +277,8 @@ public boolean evaluate(final MappingItemTO object) {\n \n             // 2. verify that user was found on resource\n             JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-            String idOnResource = jdbcTemplate.queryForObject(\n-                    \"SELECT id FROM testpull WHERE id=?\", String.class, \"5432\");\n+            String idOnResource = queryForObject(\n+                    jdbcTemplate, 50, \"SELECT id FROM testpull WHERE id=?\", String.class, \"5432\");\n             assertEquals(\"5432\", idOnResource);\n \n             // 3. unlink user from resource, then remove it"},{"sha":"8458767a21cb79ee99c0b928830aa97cbc10392e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":10,"deletions":16,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","patch":"@@ -94,7 +94,6 @@\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.dao.EmptyResultDataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n@@ -925,15 +924,10 @@ public void issueSYNCOPE307() {\n         assertEquals(\"virtualvalue\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n \n         // ...and that propagation to db succeeded\n-        try {\n-            JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-\n-            String value = jdbcTemplate.queryForObject(\n-                    \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n-            assertEquals(\"virtualvalue\", value);\n-        } catch (EmptyResultDataAccessException e) {\n-            fail();\n-        }\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        String value = queryForObject(\n+                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n+        assertEquals(\"virtualvalue\", value);\n     }\n \n     @Test\n@@ -948,8 +942,8 @@ public void issueSYNCOPE313DB() throws Exception {\n \n         // 2. Check that the DB resource has the correct password\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        String value = jdbcTemplate.queryForObject(\n-                \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n+        String value = queryForObject(\n+                jdbcTemplate, 50, \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n         assertEquals(Encryptor.getInstance().encode(\"security123\", CipherAlgorithm.SHA1), value.toUpperCase());\n \n         // 3. Update the password in the DB\n@@ -1135,8 +1129,8 @@ public void issueSYNCOPE1062() {\n \n             // ...and propagated\n             JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-            String email = jdbcTemplate.queryForObject(\n-                    \"SELECT EMAIL FROM TESTPULL WHERE USERNAME=?\", String.class, user.getUsername());\n+            String email = queryForObject(\n+                    jdbcTemplate, 50, \"SELECT EMAIL FROM TESTPULL WHERE USERNAME=?\", String.class, user.getUsername());\n             assertEquals(user.getPlainAttrMap().get(\"email\").getValues().get(0), email);\n \n             // 4. update the user on the external resource\n@@ -1157,8 +1151,8 @@ public void issueSYNCOPE1062() {\n             assertEquals(\"pullFromLDAP2@syncope.apache.org\", user.getPlainAttrMap().get(\"email\").getValues().get(0));\n \n             // ...and propagated\n-            email = jdbcTemplate.queryForObject(\n-                    \"SELECT EMAIL FROM TESTPULL WHERE USERNAME=?\", String.class, user.getUsername());\n+            email = queryForObject(\n+                    jdbcTemplate, 50, \"SELECT EMAIL FROM TESTPULL WHERE USERNAME=?\", String.class, user.getUsername());\n             assertEquals(user.getPlainAttrMap().get(\"email\").getValues().get(0), email);\n         } catch (Exception e) {\n             LOG.error(\"Unexpected during issueSYNCOPE1062()\", e);"},{"sha":"a831dd0294f09839b3313b5a7a78a1c054f0da59","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java","status":"modified","additions":11,"deletions":8,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java?ref=9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","patch":"@@ -140,7 +140,7 @@ public void issue186() {\n         updateUser(userPatch);\n     }\n \n-    @Test(expected = EmptyResultDataAccessException.class)\n+    @Test\n     public void issue213() {\n         UserTO userTO = UserITCase.getUniqueSampleTO(\"issue213@syncope.apache.org\");\n         userTO.getResources().add(RESOURCE_NAME_TESTDB);\n@@ -150,22 +150,25 @@ public void issue213() {\n         assertEquals(1, userTO.getResources().size());\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-\n-        String username = jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class,\n-                userTO.getUsername());\n-\n+        String username = queryForObject(\n+                jdbcTemplate, 50, \"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n         assertEquals(userTO.getUsername(), username);\n \n         UserPatch userPatch = new UserPatch();\n-\n         userPatch.setKey(userTO.getKey());\n         userPatch.getResources().add(\n                 new StringPatchItem.Builder().operation(PatchOperation.DELETE).value(RESOURCE_NAME_TESTDB).build());\n \n         userTO = updateUser(userPatch).getEntity();\n         assertTrue(userTO.getResources().isEmpty());\n \n-        jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n+        Exception exception = null;\n+        try {\n+            jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n+        } catch (EmptyResultDataAccessException e) {\n+            exception = e;\n+        }\n+        assertNotNull(exception);\n     }\n \n     @Test\n@@ -740,7 +743,7 @@ public void issueSYNCOPE383() {\n         userPatch.setKey(userTO.getKey());\n         userPatch.setPassword(\n                 new PasswordPatch.Builder().value(getUUIDString() + \"abbcbcbddd123\").resource(RESOURCE_NAME_TESTDB).\n-                build());\n+                        build());\n \n         result = updateUser(userPatch);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());"},{"sha":"7b633a59ec97bcd4b8f957bdd0f25b3c6b67b5ef","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserSelfITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java?ref=9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","patch":"@@ -277,8 +277,8 @@ public void passwordReset() {\n \n         // verify propagation (including password) on external db\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        String pwdOnResource = jdbcTemplate.queryForObject(\"SELECT password FROM test WHERE id=?\", String.class,\n-                user.getUsername());\n+        String pwdOnResource = queryForObject(\n+                jdbcTemplate, 50, \"SELECT password FROM test WHERE id=?\", String.class, user.getUsername());\n         assertTrue(StringUtils.isNotBlank(pwdOnResource));\n \n         // 2. verify that new user is able to authenticate\n@@ -317,8 +317,8 @@ public void passwordReset() {\n         assertNull(read.getToken());\n \n         // 7. verify that password was changed on external resource\n-        String newPwdOnResource = jdbcTemplate.queryForObject(\"SELECT password FROM test WHERE id=?\", String.class,\n-                user.getUsername());\n+        String newPwdOnResource = queryForObject(\n+                jdbcTemplate, 50, \"SELECT password FROM test WHERE id=?\", String.class, user.getUsername());\n         assertTrue(StringUtils.isNotBlank(newPwdOnResource));\n         assertNotEquals(pwdOnResource, newPwdOnResource);\n     }"},{"sha":"31a3e3dfaae58d4fe7b522037275dedd7d1b6dd3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserWorkflowITCase.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java?ref=9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","patch":"@@ -201,15 +201,9 @@ public void createWithApproval() {\n         assertEquals(\"active\", userTO.getStatus());\n         assertEquals(Collections.singleton(RESOURCE_NAME_TESTDB), userTO.getResources());\n \n-        exception = null;\n-        try {\n-            final String username = jdbcTemplate.queryForObject(\"SELECT id FROM test WHERE id=?\", String.class,\n-                    userTO.getUsername());\n-            assertEquals(userTO.getUsername(), username);\n-        } catch (EmptyResultDataAccessException e) {\n-            exception = e;\n-        }\n-        assertNull(exception);\n+        String username = queryForObject(\n+                jdbcTemplate, 50, \"SELECT id FROM test WHERE id=?\", String.class, userTO.getUsername());\n+        assertEquals(userTO.getUsername(), username);\n \n         // 6. update user\n         UserPatch userPatch = new UserPatch();"},{"sha":"97ebbc0ddeb70450cb41b25e95a61f4114fdf823","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c180285b624b2e6cc3ff4639055b4e3ecd6c75b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=9c180285b624b2e6cc3ff4639055b4e3ecd6c75b","patch":"@@ -236,15 +236,14 @@ public void virAttrCache() {\n \n         // 3. update virtual attribute directly\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-\n-        String value = jdbcTemplate.queryForObject(\n-                \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n+        String value = queryForObject(\n+                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n         assertEquals(\"virattrcache\", value);\n \n         jdbcTemplate.update(\"UPDATE testpull set USERNAME='virattrcache2' WHERE ID=?\", actual.getKey());\n \n-        value = jdbcTemplate.queryForObject(\n-                \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n+        value = queryForObject(\n+                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, actual.getKey());\n         assertEquals(\"virattrcache2\", value);\n \n         // 4. check for cached attribute value\n@@ -400,15 +399,14 @@ public void issueSYNCOPE442() {\n         // 4. update value on external resource\n         // ----------------------------------------\n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-\n-        String value = jdbcTemplate.queryForObject(\n-                \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n+        String value = queryForObject(\n+                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n         assertEquals(\"virattrcache\", value);\n \n         jdbcTemplate.update(\"UPDATE testpull set USERNAME='virattrcache2' WHERE ID=?\", userTO.getKey());\n \n-        value = jdbcTemplate.queryForObject(\n-                \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n+        value = queryForObject(\n+                jdbcTemplate, 50, \"SELECT USERNAME FROM testpull WHERE ID=?\", String.class, userTO.getKey());\n         assertEquals(\"virattrcache2\", value);\n         // ----------------------------------------\n \n@@ -702,9 +700,9 @@ public boolean evaluate(final MappingItemTO item) {\n             // modify virtual attribute\n             userPatch.getVirAttrs().add(\n                     new AttrTO.Builder().schema(virSchema.getKey()).\n-                    value(\"test@issue691.dom3.org\").\n-                    value(\"test@issue691.dom4.org\").\n-                    build());\n+                            value(\"test@issue691.dom3.org\").\n+                            value(\"test@issue691.dom4.org\").\n+                            build());\n \n             UserTO updated = updateUser(userPatch).getEntity();\n             assertNotNull(updated);"}]}