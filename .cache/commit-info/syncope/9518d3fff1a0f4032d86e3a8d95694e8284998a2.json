{"sha":"9518d3fff1a0f4032d86e3a8d95694e8284998a2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk1MThkM2ZmZjFhMGY0MDMyZDg2ZTNhOGQ5NTY5NGU4Mjg0OTk4YTI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-04T11:23:02Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-04T11:23:02Z"},"message":"Missing REST module for getting all defined entitlements\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246715 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"962499d85ab2cb59dbdce47644ffa752677d77ec","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/962499d85ab2cb59dbdce47644ffa752677d77ec"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9518d3fff1a0f4032d86e3a8d95694e8284998a2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9518d3fff1a0f4032d86e3a8d95694e8284998a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9518d3fff1a0f4032d86e3a8d95694e8284998a2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9518d3fff1a0f4032d86e3a8d95694e8284998a2/comments","author":null,"committer":null,"parents":[{"sha":"2b8c2f22381f211feea8e82da3c73c764690ec7b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2b8c2f22381f211feea8e82da3c73c764690ec7b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2b8c2f22381f211feea8e82da3c73c764690ec7b"}],"stats":{"total":41,"additions":27,"deletions":14},"files":[{"sha":"190362244523f4c93d1051542859c9b12887e9c1","filename":"core/src/main/java/org/syncope/core/rest/controller/AuthenticationController.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9518d3fff1a0f4032d86e3a8d95694e8284998a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAuthenticationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9518d3fff1a0f4032d86e3a8d95694e8284998a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAuthenticationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAuthenticationController.java?ref=9518d3fff1a0f4032d86e3a8d95694e8284998a2","patch":"@@ -14,18 +14,38 @@\n  */\n package org.syncope.core.rest.controller;\n \n+import java.util.ArrayList;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.core.GrantedAuthority;\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n+import org.syncope.core.persistence.beans.Entitlement;\n+import org.syncope.core.persistence.dao.EntitlementDAO;\n \n @Controller\n @RequestMapping(\"/auth\")\n public class AuthenticationController extends AbstractController {\n \n+    @Autowired\n+    private EntitlementDAO entitlementDAO;\n+\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/allentitlements\")\n+    public List<String> listEntitlements() {\n+        List<Entitlement> entitlements = entitlementDAO.findAll();\n+        List<String> result = new ArrayList<String>(entitlements.size());\n+        for (Entitlement entitlement : entitlements) {\n+            result.add(entitlement.getName());\n+        }\n+\n+        return result;\n+    }\n+\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/entitlements\")\n     public Set<String> getEntitlements() {"},{"sha":"9c29786ab7c00ab91d4fc69fc71d7ea5ae7c4efc","filename":"core/src/main/java/org/syncope/core/rest/controller/RoleController.java","status":"modified","additions":7,"deletions":14,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9518d3fff1a0f4032d86e3a8d95694e8284998a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9518d3fff1a0f4032d86e3a8d95694e8284998a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=9518d3fff1a0f4032d86e3a8d95694e8284998a2","patch":"@@ -17,7 +17,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import javassist.NotFoundException;\n-import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n@@ -46,8 +45,7 @@ public class RoleController extends AbstractController {\n     @PreAuthorize(\"hasRole('ROLE_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n-    public RoleTO create(HttpServletRequest request,\n-            HttpServletResponse response,\n+    public RoleTO create(HttpServletResponse response,\n             @RequestBody RoleTO roleTO)\n             throws SyncopeClientCompositeErrorException {\n \n@@ -70,8 +68,7 @@ public RoleTO create(HttpServletRequest request,\n     @PreAuthorize(\"hasRole('ROLE_DELETE')\")\n     @RequestMapping(method = RequestMethod.DELETE,\n     value = \"/delete/{roleId}\")\n-    public void delete(HttpServletResponse response,\n-            @PathVariable(\"roleId\") Long roleId)\n+    public void delete(@PathVariable(\"roleId\") Long roleId)\n             throws NotFoundException {\n \n         SyncopeRole role = syncopeRoleDAO.find(roleId);\n@@ -87,7 +84,7 @@ public void delete(HttpServletResponse response,\n     @PreAuthorize(\"hasRole('ROLE_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list\")\n-    public List<RoleTO> list(HttpServletRequest request) {\n+    public List<RoleTO> list() {\n         List<SyncopeRole> roles = syncopeRoleDAO.findAll();\n         List<RoleTO> roleTOs = new ArrayList<RoleTO>(roles.size());\n         for (SyncopeRole role : roles) {\n@@ -100,8 +97,7 @@ public List<RoleTO> list(HttpServletRequest request) {\n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/parent/{roleId}\")\n-    public RoleTO parent(HttpServletResponse response,\n-            @PathVariable(\"roleId\") Long roleId)\n+    public RoleTO parent(@PathVariable(\"roleId\") Long roleId)\n             throws NotFoundException {\n \n         SyncopeRole role = syncopeRoleDAO.find(roleId);\n@@ -118,8 +114,7 @@ public RoleTO parent(HttpServletResponse response,\n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/children/{roleId}\")\n-    public List<RoleTO> children(HttpServletResponse response,\n-            @PathVariable(\"roleId\") Long roleId) {\n+    public List<RoleTO> children(@PathVariable(\"roleId\") Long roleId) {\n \n         List<SyncopeRole> roles = syncopeRoleDAO.findChildren(roleId);\n         List<RoleTO> roleTOs = new ArrayList<RoleTO>(roles.size());\n@@ -133,8 +128,7 @@ public List<RoleTO> children(HttpServletResponse response,\n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/read/{roleId}\")\n-    public RoleTO read(HttpServletResponse response,\n-            @PathVariable(\"roleId\") Long roleId)\n+    public RoleTO read(@PathVariable(\"roleId\") Long roleId)\n             throws NotFoundException {\n \n         SyncopeRole role = syncopeRoleDAO.find(roleId);\n@@ -150,8 +144,7 @@ public RoleTO read(HttpServletResponse response,\n     @PreAuthorize(\"hasRole('ROLE_UPDATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/update\")\n-    public RoleTO update(HttpServletResponse response,\n-            @RequestBody RoleMod roleMod)\n+    public RoleTO update(@RequestBody RoleMod roleMod)\n             throws NotFoundException {\n \n         LOG.debug(\"Role update called with parameter {}\", roleMod);"}]}