{"sha":"5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVkM2FiOTg0ZmYyMTM1ZDZiZjlhZGVkODVlOThmZGY3ZmFhNTg4M2M=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2019-11-27T14:43:15Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2019-11-27T16:17:19Z"},"message":"SYNCOPE-1511: Provide Audit APIs (#139)","tree":{"sha":"8f1f35776d91f3dc0d3cdaeb8baba48fa1287021","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8f1f35776d91f3dc0d3cdaeb8baba48fa1287021"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"25515a6e5ee6290adc1879e4cfe65ea0e87746ec","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/25515a6e5ee6290adc1879e4cfe65ea0e87746ec","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/25515a6e5ee6290adc1879e4cfe65ea0e87746ec"}],"stats":{"total":1016,"additions":979,"deletions":37},"files":[{"sha":"fbaf0ca87646006607bf0afc52a1a5604e6aa259","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/AuditEntryTO.java","status":"added","additions":142,"deletions":0,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuditEntryTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuditEntryTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuditEntryTO.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import org.apache.syncope.common.lib.BaseBean;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+@XmlRootElement(name = \"audit\")\n+@XmlType\n+public class AuditEntryTO extends BaseBean implements EntityTO  {\n+    private static final long serialVersionUID = 1215115961911228005L;\n+\n+    private final List<String> inputs = new ArrayList<>();\n+\n+    private String who;\n+\n+    private String subCategory;\n+\n+    private String event;\n+\n+    private String result;\n+\n+    private String before;\n+\n+    private String output;\n+\n+    private Date date;\n+\n+    private String throwable;\n+\n+    private String key;\n+\n+    private String loggerName;\n+\n+    public Date getDate() {\n+        return date;\n+    }\n+\n+    public void setDate(final Date date) {\n+        this.date = date;\n+    }\n+\n+    public String getThrowable() {\n+        return throwable;\n+    }\n+\n+    public void setThrowable(final String throwable) {\n+        this.throwable = throwable;\n+    }\n+\n+    public String getOutput() {\n+        return output;\n+    }\n+\n+    public void setOutput(final String output) {\n+        this.output = output;\n+    }\n+\n+    public String getBefore() {\n+        return before;\n+    }\n+\n+    public void setBefore(final String before) {\n+        this.before = before;\n+    }\n+\n+    public List<String> getInputs() {\n+        return inputs;\n+    }\n+\n+    public String getSubCategory() {\n+        return subCategory;\n+    }\n+\n+    public void setSubCategory(final String subCategory) {\n+        this.subCategory = subCategory;\n+    }\n+\n+    public String getEvent() {\n+        return event;\n+    }\n+\n+    public void setEvent(final String event) {\n+        this.event = event;\n+    }\n+\n+    public String getResult() {\n+        return result;\n+    }\n+\n+    public void setResult(final String result) {\n+        this.result = result;\n+    }\n+\n+    public String getWho() {\n+        return who;\n+    }\n+\n+    public void setWho(final String who) {\n+        this.who = who;\n+    }\n+\n+    public String getLoggerName() {\n+        return loggerName;\n+    }\n+\n+    public void setLoggerName(final String loggerName) {\n+        this.loggerName = loggerName;\n+    }\n+\n+    @Override\n+    public String getKey() {\n+        return this.key;\n+    }\n+\n+    @Override\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+}"},{"sha":"8ab42afa5bd5c7796baba8334876f24938b81dd1","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/IdRepoEntitlement.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -110,6 +110,8 @@ public final class IdRepoEntitlement {\n \n     public static final String SCHEMA_DELETE = \"SCHEMA_DELETE\";\n \n+    public static final String AUDIT_SEARCH = \"AUDIT_SEARCH\";\n+\n     public static final String USER_SEARCH = \"USER_SEARCH\";\n \n     public static final String USER_CREATE = \"USER_CREATE\";"},{"sha":"d8152de8f430ee829afb3ec04aa8c744b8ede99d","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AuditQuery.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAuditQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAuditQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAuditQuery.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.beans;\n+\n+import javax.ws.rs.QueryParam;\n+\n+public class AuditQuery extends AbstractQuery {\n+\n+    private static final long serialVersionUID = -2863334226169614417L;\n+\n+    private String key;\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    @QueryParam(\"key\")\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+\n+    public static class Builder extends AbstractQuery.Builder<AuditQuery, Builder> {\n+\n+        public Builder key(final String keyword) {\n+            getInstance().setKey(keyword);\n+            return this;\n+        }\n+\n+        @Override\n+        protected AuditQuery newInstance() {\n+            return new AuditQuery();\n+        }\n+    }\n+\n+}"},{"sha":"897131e12ad6027813994550b23a00d5445eb327","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AuditService.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuditService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuditService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuditService.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.service;\n+\n+import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n+import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n+import io.swagger.v3.oas.annotations.tags.Tag;\n+import org.apache.syncope.common.lib.to.AuditEntryTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.beans.AuditQuery;\n+\n+import javax.ws.rs.BeanParam;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+/**\n+ * REST operations for audit events.\n+ */\n+@Tag(name = \"Audits\")\n+@SecurityRequirements({\n+    @SecurityRequirement(name = \"BasicAuthentication\"),\n+    @SecurityRequirement(name = \"Bearer\")})\n+@Path(\"audits\")\n+public interface AuditService {\n+\n+    /**\n+     * Returns a paged list of audit objects matching the given query.\n+     *\n+     * @param auditQuery query conditions\n+     * @return paged list of objects matching the given query\n+     */\n+    @GET\n+    @Produces({MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML})\n+    PagedResult<AuditEntryTO> search(@BeanParam AuditQuery auditQuery);\n+}"},{"sha":"6fd482d5a6f066eb0162606ee9a98aef2230549d","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AuditLogic.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import java.lang.reflect.Method;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.to.AuditEntryTO;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.core.persistence.api.dao.AuditDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n+import org.apache.syncope.core.provisioning.api.data.AuditDataBinder;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Component\n+public class AuditLogic extends AbstractTransactionalLogic<AuditEntryTO> {\n+\n+    @Autowired\n+    private AuditDataBinder binder;\n+\n+    @Autowired\n+    private AuditDAO auditDAO;\n+\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.AUDIT_SEARCH + \"')\")\n+    @Transactional(readOnly = true)\n+    public Pair<Integer, List<AuditEntryTO>> search(\n+            final String key,\n+            final int page,\n+            final int size,\n+            final List<OrderByClause> orderByClauses) {\n+\n+        Integer count = auditDAO.count(key);\n+        List<AuditEntry> matching = auditDAO.findByEntityKey(key, page, size, orderByClauses);\n+        List<AuditEntryTO> results = matching.stream().\n+                map(audit -> binder.returnAuditTO(binder.getAuditTO(audit))).\n+                collect(Collectors.toList());\n+        return Pair.of(count, results);\n+    }\n+\n+    @Override\n+    protected AuditEntryTO resolveReference(final Method method, final Object... args)\n+            throws UnresolvedReferenceException {\n+        throw new UnresolvedReferenceException();\n+    }\n+}"},{"sha":"1485786071d5c54f689d8a57bc19c2b0481a1a1a","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -192,7 +192,8 @@ public Response update(final String key, final SchemaType schemaType, final Attr\n \n     @Override\n     public void delete(final String key, final SchemaType schemaType, final String schema) {\n-        addUpdateOrReplaceAttr(getActualKey(getAnyDAO(), key),\n+        addUpdateOrReplaceAttr(\n+                getActualKey(getAnyDAO(), key),\n                 schemaType,\n                 new Attr.Builder(schema).build(),\n                 PatchOperation.DELETE);"},{"sha":"df1c978001ada165ad1cc686d5c9a086fb4fdb9a","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AuditServiceImpl.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuditServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuditServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuditServiceImpl.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf.service;\n+\n+import java.util.List;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.to.AuditEntryTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.rest.api.beans.AuditQuery;\n+import org.apache.syncope.common.rest.api.service.AuditService;\n+import org.apache.syncope.core.logic.AuditLogic;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class AuditServiceImpl extends AbstractServiceImpl implements AuditService {\n+\n+    @Autowired\n+    private AuditLogic logic;\n+\n+    @Override\n+    public PagedResult<AuditEntryTO> search(final AuditQuery auditQuery) {\n+        Pair<Integer, List<AuditEntryTO>> result = logic.search(\n+                auditQuery.getKey(),\n+                auditQuery.getPage(),\n+                auditQuery.getSize(),\n+                getOrderByClauses(auditQuery.getOrderBy()));\n+\n+        return buildPagedResult(result.getRight(), auditQuery.getPage(), auditQuery.getSize(), result.getLeft());\n+    }\n+}"},{"sha":"0d1692d77c3001cb725f445baf3e1fce3b0a6a59","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AuditDAO.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAuditDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAuditDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAuditDAO.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.dao;\n+\n+import java.util.List;\n+\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n+\n+public interface AuditDAO {\n+\n+    String TABLE_NAME = \"SYNCOPEAUDIT\";\n+\n+    List<AuditEntry> findByEntityKey(String key, int page, int size, List<OrderByClause> orderByClauses);\n+\n+    Integer count(String key);\n+}"},{"sha":"7bcb13465ae86a1a2283477b89ce5035320399c1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AuditEntry.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAuditEntry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAuditEntry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAuditEntry.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.entity;\n+\n+import org.apache.syncope.common.lib.types.AuditLoggerName;\n+\n+import java.io.Serializable;\n+import java.util.Date;\n+\n+public interface AuditEntry extends Serializable {\n+\n+    String getWho();\n+\n+    AuditLoggerName getLogger();\n+\n+    Object getBefore();\n+\n+    Object getOutput();\n+\n+    Object[] getInput();\n+\n+    String getThrowable();\n+\n+    Date getDate();\n+\n+    String getKey();\n+}"},{"sha":"c5a7509c9d52436bd71a18015413257912c9aba4","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":59,"deletions":4,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -2336,11 +2336,66 @@ $$ }&#10;\n   <Implementation id=\"ReconciliationReportletConf\" type=\"REPORTLET\" engine=\"JAVA\"\n                   body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n-  \n-  <SyncopeLogger logName=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n-  \n+\n   <SecurityQuestion id=\"887028ea-66fc-41e7-b397-620d7ea6dfbb\" content=\"What's your mother's maiden name?\"/>\n+\n+  <SyncopeLogger logName=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n   \n-    <GatewayRoute id=\"ec7bada2-3dd6-460c-8441-65521d005ffa\" name=\"basic1\" target=\"http://httpbin.org:80\" status=\"PUBLISHED\"\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[assign]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[assign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[confirmPasswordReset]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[confirmPasswordReset]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[create]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[delete]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[delete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[deprovision]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[deprovision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[link]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[link]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[mustChangePassword]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[mustChangePassword]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[provision]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[provision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[read]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[read]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[requestPasswordReset]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[requestPasswordReset]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[search]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[search]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfCreate]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfCreate]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfDelete]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfDelete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfRead]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfRead]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfStatus]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfStatus]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfUpdate]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfUpdate]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[status]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[status]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[unassign]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[unassign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[unlink]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[unlink]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[update]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[assign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[delete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[deprovision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[link]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[own]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[provisionMembers]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[provision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[read]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[search]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[unassign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[unlink]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+\n+  <GatewayRoute id=\"ec7bada2-3dd6-460c-8441-65521d005ffa\" name=\"basic1\" target=\"http://httpbin.org:80\" status=\"PUBLISHED\"\n                 predicates=\"[{&quot;cond&quot;:null,&quot;factory&quot;:&quot;METHOD&quot;,&quot;args&quot;:&quot;GET&quot;}]\"/>\n </dataset>"},{"sha":"5f5639218221a1a1e4fdbb957d9b58f6df9b207a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAuditDAO.java","status":"added","additions":103,"deletions":0,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAuditDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAuditDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAuditDAO.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.dao;\n+\n+import javax.sql.DataSource;\n+import java.sql.Timestamp;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.core.persistence.api.DomainHolder;\n+import org.apache.syncope.core.persistence.api.dao.AuditDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n+import org.apache.syncope.core.persistence.jpa.entity.AbstractEntity;\n+import org.apache.syncope.core.provisioning.api.AuditEntryImpl;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Transactional(rollbackFor = Throwable.class)\n+@Repository\n+public class JPAAuditDAO extends AbstractDAO<AbstractEntity> implements AuditDAO {\n+\n+    @Autowired\n+    private DomainHolder domainHolder;\n+\n+    private static String buildWhereClauseForEntityKey(final String key) {\n+        return \" WHERE MESSAGE LIKE '%\" + key + \"%' \";\n+    }\n+\n+    @Override\n+    public List<AuditEntry> findByEntityKey(\n+            final String key,\n+            final int page,\n+            final int itemsPerPage,\n+            final List<OrderByClause> orderByClauses) {\n+\n+        try {\n+            String queryString = \"SELECT * FROM \" + AuditDAO.TABLE_NAME + buildWhereClauseForEntityKey(key);\n+            if (!orderByClauses.isEmpty()) {\n+                queryString += \" ORDER BY \" + orderByClauses.stream().\n+                        map(orderBy -> orderBy.getField() + ' ' + orderBy.getDirection().name()).\n+                        collect(Collectors.joining(\",\"));\n+            }\n+            JdbcTemplate template = getJdbcTemplate();\n+            template.setMaxRows(itemsPerPage);\n+            template.setFetchSize(itemsPerPage * (page <= 0 ? 0 : page - 1));\n+            return template.query(queryString, (resultSet, i) -> {\n+                AuditEntryImpl entry = POJOHelper.deserialize(resultSet.getString(\"MESSAGE\"), AuditEntryImpl.class);\n+                String throwable = resultSet.getString(\"THROWABLE\");\n+                entry.setThrowable(throwable);\n+                Timestamp date = resultSet.getTimestamp(\"EVENT_DATE\");\n+                entry.setDate(new Date(date.getTime()));\n+                entry.setKey(key);\n+                return entry;\n+            });\n+        } catch (Exception e) {\n+            LOG.error(\"Unable to execute search query to find entity \" + key, e);\n+        }\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    public Integer count(final String key) {\n+        try {\n+            String queryString = \"SELECT COUNT(0) FROM \" + AuditDAO.TABLE_NAME + buildWhereClauseForEntityKey(key);\n+            return Objects.requireNonNull(getJdbcTemplate().queryForObject(queryString, Integer.class));\n+        } catch (Exception e) {\n+            LOG.error(\"Unable to execute count query for entity \" + key, e);\n+        }\n+        return 0;\n+    }\n+\n+    private JdbcTemplate getJdbcTemplate() {\n+        String domain = AuthContextUtils.getDomain();\n+        DataSource datasource = domainHolder.getDomains().get(domain);\n+        if (datasource == null) {\n+            throw new IllegalArgumentException(\"Could not get to DataSource for domain \" + domain);\n+        }\n+        return new JdbcTemplate(datasource);\n+    }\n+}"},{"sha":"490dc1600b3a97df1e57db45cc55efc878b558b8","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":56,"deletions":1,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -2424,9 +2424,64 @@ $$ }&#10;\n                   body='{\"@class\":\"org.apache.syncope.common.lib.report.ReconciliationReportletConf\",\"name\":\"dashboardReconciliationReportlet\",\"userMatchingCond\":null,\"groupMatchingCond\":null,\"anyObjectMatchingCond\":null,\"features\":[\"key\",\"username\",\"groupName\"]}'/>\n   <ReportReportlet report_id=\"c3520ad9-179f-49e7-b315-d684d216dd97\" implementation_id=\"ReconciliationReportletConf\"/>\n   \n+  <SecurityQuestion id=\"887028ea-66fc-41e7-b397-620d7ea6dfbb\" content=\"What's your mother's maiden name?\"/>\n+\n   <SyncopeLogger logName=\"syncope.audit.[LOGIC]:[SyncopeLogic]:[]:[isSelfRegAllowed]:[SUCCESS]\" logLevel=\"DEBUG\" logType=\"AUDIT\"/>\n   \n-  <SecurityQuestion id=\"887028ea-66fc-41e7-b397-620d7ea6dfbb\" content=\"What's your mother's maiden name?\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[assign]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[assign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[confirmPasswordReset]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[confirmPasswordReset]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[create]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[delete]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[delete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[deprovision]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[deprovision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[link]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[link]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[mustChangePassword]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[mustChangePassword]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[provision]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[provision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[read]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[read]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[requestPasswordReset]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[requestPasswordReset]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[search]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[search]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfCreate]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfCreate]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfDelete]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfDelete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfRead]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfRead]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfStatus]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfStatus]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfUpdate]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[selfUpdate]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[status]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[status]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[unassign]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[unassign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[unlink]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[unlink]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[update]:[FAILURE]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[UserLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[assign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[create]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[delete]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[deprovision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[link]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[own]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[provisionMembers]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[provision]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[read]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[search]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[unassign]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[unlink]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n+  <SyncopeLogger logType=\"AUDIT\" logName=\"syncope.audit.[LOGIC]:[GroupLogic]:[]:[update]:[SUCCESS]\" logLevel=\"DEBUG\"/>\n \n   <GatewayRoute id=\"ec7bada2-3dd6-460c-8441-65521d005ffa\" name=\"basic1\" target=\"http://httpbin.org:80\" status=\"PUBLISHED\"\n                 predicates=\"[{&quot;cond&quot;:null,&quot;factory&quot;:&quot;METHOD&quot;,&quot;args&quot;:&quot;GET&quot;}]\"/>"},{"sha":"e64a911caeada6322f8ec3e9c43859c5d9f3f5bb","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/AuditEntryImpl.java","status":"renamed","additions":122,"deletions":9,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditEntryImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditEntryImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditEntryImpl.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -16,19 +16,21 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.provisioning.java;\n+package org.apache.syncope.core.provisioning.api;\n \n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.io.Serializable;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n+import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n \n-public class AuditEntry implements Serializable {\n+import java.util.Date;\n+\n+public class AuditEntryImpl implements AuditEntry {\n \n     private static final long serialVersionUID = -2299082316063743582L;\n \n@@ -44,13 +46,19 @@ public class AuditEntry implements Serializable {\n \n     private final Object[] input;\n \n+    private String throwable;\n+\n+    private Date date;\n+\n+    private String key;\n+    \n     @JsonCreator\n-    public AuditEntry(\n-            @JsonProperty(\"who\") final String who,\n-            @JsonProperty(\"logger\") final AuditLoggerName logger,\n-            @JsonProperty(\"before\") final Object before,\n-            @JsonProperty(\"output\") final Object output,\n-            @JsonProperty(\"input\") final Object[] input) {\n+    public AuditEntryImpl(\n+        @JsonProperty(\"who\") final String who,\n+        @JsonProperty(\"logger\") final AuditLoggerName logger,\n+        @JsonProperty(\"before\") final Object before,\n+        @JsonProperty(\"output\") final Object output,\n+        @JsonProperty(\"input\") final Object[] input) {\n \n         super();\n \n@@ -95,23 +103,128 @@ private static Object maskSensitive(final Object object) {\n         return masked;\n     }\n \n+    @Override\n     public String getWho() {\n         return who;\n     }\n \n+    @Override\n     public AuditLoggerName getLogger() {\n         return logger;\n     }\n \n+    @Override\n     public Object getBefore() {\n         return before;\n     }\n \n+    @Override\n     public Object getOutput() {\n         return output;\n     }\n \n+    @Override\n     public Object[] getInput() {\n         return input;\n     }\n+\n+    @Override\n+    public String getThrowable() {\n+        return throwable;\n+    }\n+\n+    public void setThrowable(final String throwable) {\n+        this.throwable = throwable;\n+    }\n+\n+    @Override\n+    public Date getDate() {\n+        return date;\n+    }\n+\n+    public void setDate(final Date date) {\n+        this.date = date;\n+    }\n+\n+    @Override\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public static final class Builder {\n+        private String who;\n+\n+        private AuditLoggerName logger;\n+\n+        private Object before;\n+\n+        private Object output;\n+\n+        private Object[] input;\n+\n+        private String throwable;\n+\n+        private Date date;\n+\n+        private String key;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder date(final Date date) {\n+            this.date = date;\n+            return this;\n+        }\n+\n+        public Builder throwable(final String throwable) {\n+            this.throwable = throwable;\n+            return this;\n+        }\n+\n+        public Builder key(final String key) {\n+            this.key = key;\n+            return this;\n+        }\n+\n+        public Builder who(final String who) {\n+            this.who = who;\n+            return this;\n+        }\n+\n+        public Builder logger(final AuditLoggerName logger) {\n+            this.logger = logger;\n+            return this;\n+        }\n+\n+        public Builder before(final Object before) {\n+            this.before = before;\n+            return this;\n+        }\n+\n+        public Builder output(final Object output) {\n+            this.output = output;\n+            return this;\n+        }\n+\n+        public Builder input(final Object[] input) {\n+            this.input = input;\n+            return this;\n+        }\n+\n+        public AuditEntryImpl build() {\n+            AuditEntryImpl entry = new AuditEntryImpl(who, logger, before, output, input);\n+            entry.setDate(date);\n+            entry.setThrowable(throwable);\n+            entry.setKey(key);\n+            return entry;\n+        }\n+    }\n }","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/AuditEntry.java"},{"sha":"81e3241040469a96d74bee0b009763f58d832aa7","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/AuditDataBinder.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAuditDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAuditDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAuditDataBinder.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.data;\n+\n+import org.apache.syncope.common.lib.to.AuditEntryTO;\n+import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n+\n+public interface AuditDataBinder {\n+    AuditEntryTO getAuditTO(AuditEntry application);\n+\n+    AuditEntryTO returnAuditTO(AuditEntryTO user);\n+}"},{"sha":"0f9e1698fee78dbae77523eeaf87a1bb3527a876","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultAuditManager.java","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAuditManager.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.provisioning.java;\n \n+import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n+import org.apache.syncope.core.provisioning.api.AuditEntryImpl;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n@@ -47,12 +49,10 @@ public boolean auditRequested(\n             final String subcategory,\n             final String event) {\n \n-        AuditEntry auditEntry = new AuditEntry(\n-                who,\n-                new AuditLoggerName(type, category, subcategory, event, Result.SUCCESS),\n-                null,\n-                null,\n-                null);\n+        AuditEntry auditEntry = AuditEntryImpl.builder()\n+            .who(who)\n+            .logger(new AuditLoggerName(type, category, subcategory, event, Result.SUCCESS))\n+            .build();\n         org.apache.syncope.core.persistence.api.entity.Logger syncopeLogger =\n                 loggerDAO.find(auditEntry.getLogger().toLoggerName());\n         boolean auditRequested = syncopeLogger != null && syncopeLogger.getLevel() == LoggerLevel.DEBUG;\n@@ -61,12 +61,10 @@ public boolean auditRequested(\n             return true;\n         }\n \n-        auditEntry = new AuditEntry(\n-                who,\n-                new AuditLoggerName(type, category, subcategory, event, Result.FAILURE),\n-                null,\n-                null,\n-                null);\n+        auditEntry = AuditEntryImpl.builder()\n+            .who(who)\n+            .logger(new AuditLoggerName(type, category, subcategory, event, Result.FAILURE))\n+            .build();\n         syncopeLogger = loggerDAO.find(auditEntry.getLogger().toLoggerName());\n         auditRequested = syncopeLogger != null && syncopeLogger.getLevel() == LoggerLevel.DEBUG;\n \n@@ -106,13 +104,14 @@ public void audit(\n             throwable = (Throwable) output;\n         }\n \n-        AuditEntry auditEntry = new AuditEntry(\n-                who,\n-                new AuditLoggerName(type, category, subcategory, event, condition),\n-                before,\n-                throwable == null ? output : throwable.getMessage(),\n-                input);\n-\n+        AuditEntry auditEntry = AuditEntryImpl.builder()\n+            .who(who)\n+            .logger(new AuditLoggerName(type, category, subcategory, event, condition))\n+            .before(before)\n+            .output(throwable == null ? output : throwable.getMessage())\n+            .input(input)\n+            .build();\n+        \n         org.apache.syncope.core.persistence.api.entity.Logger syncopeLogger =\n                 loggerDAO.find(auditEntry.getLogger().toLoggerName());\n         if (syncopeLogger != null && syncopeLogger.getLevel() == LoggerLevel.DEBUG) {"},{"sha":"6a34094176d2d69ca1e87c8ff9e1603926e6630a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AuditDataBinderImpl.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAuditDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAuditDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAuditDataBinderImpl.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.data;\n+\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.syncope.common.lib.to.AuditEntryTO;\n+import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n+import org.apache.syncope.core.provisioning.api.data.AuditDataBinder;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class AuditDataBinderImpl implements AuditDataBinder {\n+\n+    @Override\n+    public AuditEntryTO getAuditTO(final AuditEntry auditEntry) {\n+        AuditEntryTO auditTO = new AuditEntryTO();\n+        auditTO.setKey(auditEntry.getKey());\n+        auditTO.setWho(auditEntry.getWho());\n+        auditTO.setDate(auditEntry.getDate());\n+        auditTO.setThrowable(auditEntry.getThrowable());\n+        auditTO.setLoggerName(auditEntry.getLogger().toLoggerName());\n+\n+        auditTO.setSubCategory(auditEntry.getLogger().getSubcategory());\n+        auditTO.setEvent(auditEntry.getLogger().getEvent());\n+\n+        if (auditEntry.getLogger().getResult() != null) {\n+            auditTO.setResult(auditEntry.getLogger().getResult().name());\n+        }\n+\n+        if (auditEntry.getBefore() != null) {\n+            auditTO.setBefore(ToStringBuilder.reflectionToString(auditEntry.getBefore(), ToStringStyle.JSON_STYLE));\n+        }\n+\n+        if (auditEntry.getInput() != null) {\n+            auditTO.getInputs().addAll(Arrays.stream(auditEntry.getInput()).\n+                    map(input -> ToStringBuilder.reflectionToString(input, ToStringStyle.JSON_STYLE)).\n+                    collect(Collectors.toList()));\n+        }\n+\n+        if (auditEntry.getOutput() != null) {\n+            auditTO.setOutput(ToStringBuilder.reflectionToString(auditEntry.getOutput(), ToStringStyle.JSON_STYLE));\n+        }\n+\n+        return auditTO;\n+    }\n+\n+    @Override\n+    public AuditEntryTO returnAuditTO(final AuditEntryTO auditEntryTO) {\n+        return auditEntryTO;\n+    }\n+}"},{"sha":"894d3e1b5bb6c0551064f7aa7980be38aebbe79b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/AuditReportlet.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -28,7 +28,8 @@\n import org.apache.syncope.common.lib.report.AuditReportletConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.core.persistence.api.DomainHolder;\n-import org.apache.syncope.core.provisioning.java.AuditEntry;\n+import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n+import org.apache.syncope.core.provisioning.api.AuditEntryImpl;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.dao.ReportletConfClass;\n@@ -59,7 +60,7 @@ private void doExtractConf(final ContentHandler handler, final AtomicReference<S\n         handler.startElement(\"\", \"\", \"events\", null);\n         AttributesImpl atts = new AttributesImpl();\n         for (Map<String, Object> row : rows) {\n-            AuditEntry auditEntry = POJOHelper.deserialize(row.get(\"MESSAGE\").toString(), AuditEntry.class);\n+            AuditEntry auditEntry = POJOHelper.deserialize(row.get(\"MESSAGE\").toString(), AuditEntryImpl.class);\n \n             atts.clear();\n             if (StringUtils.isNotBlank(auditEntry.getWho())) {\n@@ -147,5 +148,4 @@ protected void doExtract(\n \n         doExtractConf(handler, status);\n     }\n-\n }"},{"sha":"5f0c22424448b96fe3f77606248d6ad78b15c5d8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -85,6 +85,7 @@\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.syncope.common.rest.api.service.ApplicationService;\n+import org.apache.syncope.common.rest.api.service.AuditService;\n import org.apache.syncope.common.rest.api.service.CamelRouteService;\n import org.apache.syncope.common.rest.api.service.ConnectorHistoryService;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n@@ -290,6 +291,8 @@ public abstract class AbstractITCase {\n \n     protected static SCIMConfService scimConfService;\n \n+    protected static AuditService auditService;\n+\n     @BeforeAll\n     public static void securitySetup() {\n         try (InputStream propStream = Encryptor.class.getResourceAsStream(\"/security.properties\")) {\n@@ -361,6 +364,7 @@ public static void restSetup() {\n         oidcClientService = adminClient.getService(OIDCClientService.class);\n         oidcProviderService = adminClient.getService(OIDCProviderService.class);\n         scimConfService = adminClient.getService(SCIMConfService.class);\n+        auditService = adminClient.getService(AuditService.class);\n     }\n \n     @Autowired"},{"sha":"2bedab738865e7a913ff9779b99c27dba881d299","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuditITCase.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5d3ab984ff2135d6bf9aded85e98fdf7faa5883c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java?ref=5d3ab984ff2135d6bf9aded85e98fdf7faa5883c","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.AuditEntryTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.rest.api.beans.AuditQuery;\n+import org.apache.syncope.fit.AbstractITCase;\n+import org.junit.jupiter.api.Test;\n+\n+public class AuditITCase extends AbstractITCase {\n+\n+    private AuditEntryTO query(final String key, final int maxWaitSeconds) {\n+        int i = 0;\n+        List<AuditEntryTO> results = List.of();\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+\n+            results = auditService.search(new AuditQuery.Builder().\n+                    key(key).orderBy(\"event_date desc\").page(1).size(1).build()).getResult();\n+\n+            i++;\n+        } while (results.isEmpty() && i < maxWaitSeconds);\n+        if (results.isEmpty()) {\n+            fail(\"Timeout when executing query for key \" + key);\n+        }\n+\n+        return results.get(0);\n+    }\n+\n+    @Test\n+    public void findByUser() {\n+        UserTO userTO = createUser(UserITCase.getUniqueSample(\"audit@syncope.org\")).getEntity();\n+        assertNotNull(userTO.getKey());\n+\n+        AuditEntryTO entry = query(userTO.getKey(), 50);\n+        assertEquals(userTO.getKey(), entry.getKey());\n+        userService.delete(userTO.getKey());\n+    }\n+\n+    @Test\n+    public void findByGroup() {\n+        GroupTO groupTO = createGroup(GroupITCase.getBasicSample(\"AuditGroup\")).getEntity();\n+        assertNotNull(groupTO.getKey());\n+\n+        AuditEntryTO entry = query(groupTO.getKey(), 50);\n+        assertEquals(groupTO.getKey(), entry.getKey());\n+        groupService.delete(groupTO.getKey());\n+    }\n+}"}]}