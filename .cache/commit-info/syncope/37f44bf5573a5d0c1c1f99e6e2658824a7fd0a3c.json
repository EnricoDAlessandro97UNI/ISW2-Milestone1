{"sha":"37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM3ZjQ0YmY1NTczYTVkMGMxYzFmOTllNmUyNjU4ODI0YTdmZDBhM2M=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-15T10:09:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-15T10:45:47Z"},"message":"[SYNCOPE-1531] Better busy management for CSV export","tree":{"sha":"6c83c216f8fb0dcd6a573e6402f7ab28fa51837f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6c83c216f8fb0dcd6a573e6402f7ab28fa51837f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d71584bee69724b843a7d49a94dd8ef158e6d40e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d71584bee69724b843a7d49a94dd8ef158e6d40e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d71584bee69724b843a7d49a94dd8ef158e6d40e"}],"stats":{"total":381,"additions":216,"deletions":165},"files":[{"sha":"4d05f8f6ef074d3143bb0920e531d4028b873224","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAdditionalActionsProvider.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -88,12 +88,6 @@ public void onEvent(final IEvent<?> event) {\n                     AjaxWizard.NewItemFinishEvent<?> payload = (AjaxWizard.NewItemFinishEvent) event.getPayload();\n                     Optional<AjaxRequestTarget> target = payload.getTarget();\n \n-                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                    if (target.isPresent()) {\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target.get());\n-                        target.get().add(container);\n-                    }\n-\n                     if (payload.getResult() instanceof ArrayList) {\n                         modal.setContent(new ResultPage<Serializable>(\n                                 null,\n@@ -116,13 +110,20 @@ protected Panel customResultBody(\n                             }\n                         });\n                         target.ifPresent(t -> t.add(modal.getForm()));\n+\n+                        SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                     } else if (Constants.OPERATION_SUCCEEDED.equals(payload.getResult())) {\n-                        target.ifPresent(t -> {\n-                            if (csvDownloadBehavior.hasResponse()) {\n-                                csvDownloadBehavior.initiate(t);\n-                            }\n-                            modal.close(t);\n-                        });\n+                        target.ifPresent(modal::close);\n+                        SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    } else if (payload.getResult() instanceof Exception) {\n+                        SyncopeConsoleSession.get().onException((Exception) payload.getResult());\n+                    } else {\n+                        SyncopeConsoleSession.get().error(payload.getResult());\n+                    }\n+\n+                    if (target.isPresent()) {\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target.get());\n+                        target.get().add(container);\n                     }\n                 }\n             }"},{"sha":"2f07a4e0c059c46288ad00ad15d577c4534f8036","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/CSVPushWizardBuilder.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -29,20 +29,23 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.IdMImplementationType;\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.CSVPushSpec;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.IEventSink;\n import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.request.cycle.RequestCycle;\n \n public class CSVPushWizardBuilder extends BaseAjaxWizardBuilder<CSVPushSpec> {\n \n@@ -71,8 +74,17 @@ public CSVPushWizardBuilder setEventSink(final IEventSink eventSink) {\n \n     @Override\n     protected Serializable onApplyInternal(final CSVPushSpec modelObject) {\n-        downloadBehavior.setResponse(() -> ReconciliationRestClient.push(query, modelObject));\n-        return Constants.OPERATION_SUCCEEDED;\n+        return RequestCycle.get().find(AjaxRequestTarget.class).map(target -> {\n+            try {\n+                downloadBehavior.setResponse(new ResponseHolder(ReconciliationRestClient.push(query, modelObject)));\n+                downloadBehavior.initiate(target);\n+\n+                return Constants.OPERATION_SUCCEEDED;\n+            } catch (Exception e) {\n+                LOG.error(\"While dowloading CSV export\", e);\n+                return e;\n+            }\n+        }).orElse(Constants.ERROR);\n     }\n \n     @Override"},{"sha":"7bc819102ef776766900ed694bed878ddca783d6","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/HttpResourceStream.java","status":"modified","additions":10,"deletions":34,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FHttpResourceStream.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FHttpResourceStream.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FHttpResourceStream.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -22,11 +22,8 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Optional;\n-\n-import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n-import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.wicket.util.lang.Bytes;\n import org.apache.wicket.util.resource.AbstractResourceStream;\n import org.apache.wicket.util.resource.IFixedLocationResourceStream;\n@@ -36,46 +33,25 @@ public class HttpResourceStream extends AbstractResourceStream implements IFixed\n \n     private static final long serialVersionUID = 5811207817876330189L;\n \n-    private transient InputStream inputStream;\n-\n-    private String contentType;\n-\n-    private String location;\n+    private final ResponseHolder responseHolder;\n \n-    private String filename;\n-\n-    public HttpResourceStream(final Response response) {\n+    public HttpResourceStream(final ResponseHolder responseHolder) {\n         super();\n-\n-        Object entity = response.getEntity();\n-        if (response.getStatusInfo().getStatusCode() == Response.Status.OK.getStatusCode()\n-                && (entity instanceof InputStream)) {\n-\n-            this.inputStream = (InputStream) entity;\n-            this.contentType = response.getHeaderString(HttpHeaders.CONTENT_TYPE);\n-            this.location = response.getLocation() == null ? null : response.getLocation().toASCIIString();\n-            String contentDisposition = response.getHeaderString(HttpHeaders.CONTENT_DISPOSITION);\n-            if (StringUtils.isNotBlank(contentDisposition)) {\n-                String[] splitted = contentDisposition.split(\"=\");\n-                if (splitted.length > 1) {\n-                    this.filename = splitted[1].trim();\n-                }\n-            }\n-        }\n+        this.responseHolder = responseHolder;\n     }\n \n     @Override\n     public InputStream getInputStream()\n             throws ResourceStreamNotFoundException {\n \n-        return inputStream == null\n+        return responseHolder.getInputStream() == null\n                 ? new ByteArrayInputStream(new byte[0])\n-                : inputStream;\n+                : responseHolder.getInputStream();\n     }\n \n     @Override\n     public Bytes length() {\n-        return inputStream == null\n+        return responseHolder.getInputStream() == null\n                 ? Bytes.bytes(0)\n                 : null;\n     }\n@@ -87,15 +63,15 @@ public void close() throws IOException {\n \n     @Override\n     public String locationAsString() {\n-        return location;\n+        return responseHolder.getLocation();\n     }\n \n     @Override\n     public String getContentType() {\n-        return Optional.ofNullable(contentType).orElse(MediaType.APPLICATION_OCTET_STREAM);\n+        return Optional.ofNullable(responseHolder.getContentType()).orElse(MediaType.APPLICATION_OCTET_STREAM);\n     }\n \n     public String getFilename() {\n-        return filename;\n+        return responseHolder.getFilename();\n     }\n }"},{"sha":"8c8b186c65428c3e51f2114f184fc1a26bdbc9bd","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/rest/ResponseHolder.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Frest%2FResponseHolder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Frest%2FResponseHolder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Frest%2FResponseHolder.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.ui.commons.rest;\n+\n+import java.io.InputStream;\n+import java.io.Serializable;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ResponseHolder implements Serializable {\n+\n+    private static final long serialVersionUID = 2627155013246805827L;\n+\n+    private transient InputStream inputStream;\n+\n+    private String contentType;\n+\n+    private String location;\n+\n+    private String filename;\n+\n+    public ResponseHolder(final Response response) {\n+        Object entity = response.getEntity();\n+        if (response.getStatusInfo().getStatusCode() == Response.Status.OK.getStatusCode()\n+                && (entity instanceof InputStream)) {\n+\n+            this.inputStream = (InputStream) entity;\n+            this.contentType = response.getHeaderString(HttpHeaders.CONTENT_TYPE);\n+            this.location = response.getLocation() == null ? null : response.getLocation().toASCIIString();\n+            String contentDisposition = response.getHeaderString(HttpHeaders.CONTENT_DISPOSITION);\n+            if (StringUtils.isNotBlank(contentDisposition)) {\n+                String[] splitted = contentDisposition.split(\"=\");\n+                if (splitted != null && splitted.length > 1) {\n+                    this.filename = splitted[1].trim();\n+                }\n+            }\n+        }\n+    }\n+\n+    public InputStream getInputStream() {\n+        return inputStream;\n+    }\n+\n+    public String getContentType() {\n+        return contentType;\n+    }\n+\n+    public String getLocation() {\n+        return location;\n+    }\n+\n+    public String getFilename() {\n+        return filename;\n+    }\n+}"},{"sha":"8b6edc39142480b1582ee20cd9f7e6cbc321d3ed","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizard.java","status":"modified","additions":48,"deletions":49,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -77,30 +77,34 @@ public enum Mode {\n \n     private final Mode mode;\n \n+    private final boolean async;\n+\n     private IEventSink eventSink;\n \n     private final PageReference pageRef;\n \n-    private AjaxWizardMgtButtonBar<T> buttonBar;\n-\n     /**\n      * Construct.\n      *\n-     * @param id The component id.\n-     * @param item model object.\n+     * @param id The component id\n+     * @param item model object\n      * @param model wizard model\n-     * @param mode {@code true} if edit mode.\n+     * @param mode mode\n+     * @param async should apply go async or not?\n      * @param pageRef caller page reference.\n      */\n     public AjaxWizard(\n             final String id,\n             final T item,\n             final WizardModel model,\n             final Mode mode,\n+            final boolean async,\n             final PageReference pageRef) {\n+\n         super(id);\n         this.item = item;\n         this.mode = mode;\n+        this.async = async;\n         this.pageRef = pageRef;\n \n         if (mode == Mode.READONLY) {\n@@ -147,7 +151,7 @@ protected void init(final IWizardModel wizardModel) {\n         getForm().remove(FEEDBACK_ID);\n \n         if (mode == Mode.READONLY) {\n-            final Iterator<IWizardStep> iter = wizardModel.stepIterator();\n+            Iterator<IWizardStep> iter = wizardModel.stepIterator();\n             while (iter.hasNext()) {\n                 WizardStep.class.cast(iter.next()).setEnabled(false);\n             }\n@@ -156,12 +160,7 @@ protected void init(final IWizardModel wizardModel) {\n \n     @Override\n     protected Component newButtonBar(final String id) {\n-        this.buttonBar = new AjaxWizardMgtButtonBar<>(id, this, mode);\n-        return this.buttonBar;\n-    }\n-\n-    public AjaxWizardMgtButtonBar<T> getButtonBar() {\n-        return buttonBar;\n+        return new AjaxWizardMgtButtonBar<>(id, this, mode);\n     }\n \n     protected abstract void onCancelInternal();\n@@ -246,6 +245,43 @@ public AjaxWizard<T> setItem(final T item) {\n         return this;\n     }\n \n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target) {\n+        try {\n+            onApply(target);\n+        } catch (TimeoutException te) {\n+            LOG.warn(\"Operation took too long\", te);\n+            send(eventSink, Broadcast.EXACT, new NewItemCancelEvent<>(item, target));\n+            sendWarning(getString(\"timeout\"));\n+            ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+        }\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target) {\n+        ((BaseWebPage) getPage()).getNotificationPanel().refresh(target);\n+    }\n+\n+    private Serializable onApply(final AjaxRequestTarget target) throws TimeoutException {\n+        try {\n+            Future<Pair<Serializable, Serializable>> executor = execute(new ApplyFuture(target));\n+\n+            Pair<Serializable, Serializable> res =\n+                    executor.get(getMaxWaitTimeInSeconds(), TimeUnit.SECONDS);\n+\n+            if (res.getLeft() != null) {\n+                send(pageRef.getPage(), Broadcast.BUBBLE, res.getLeft());\n+            }\n+\n+            return res.getRight();\n+        } catch (InterruptedException | ExecutionException e) {\n+            if (e.getCause() instanceof CaptchaNotMatchingException) {\n+                throw (CaptchaNotMatchingException) e.getCause();\n+            }\n+            throw new WicketRuntimeException(e);\n+        }\n+    }\n+\n     public abstract static class NewItemEvent<T extends Serializable> {\n \n         private final T item;\n@@ -372,43 +408,6 @@ public Serializable getResult() {\n         }\n     }\n \n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target) {\n-        try {\n-            onApply(target);\n-        } catch (TimeoutException te) {\n-            LOG.warn(\"Operation took too long\", te);\n-            send(eventSink, Broadcast.EXACT, new NewItemCancelEvent<>(item, target));\n-            sendWarning(getString(\"timeout\"));\n-            ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-        }\n-    }\n-\n-    @Override\n-    public void onError(final AjaxRequestTarget target) {\n-        ((BaseWebPage) getPage()).getNotificationPanel().refresh(target);\n-    }\n-\n-    private Serializable onApply(final AjaxRequestTarget target) throws TimeoutException {\n-        try {\n-            Future<Pair<Serializable, Serializable>> executor = execute(new ApplyFuture(target));\n-\n-            Pair<Serializable, Serializable> res =\n-                    executor.get(getMaxWaitTimeInSeconds(), TimeUnit.SECONDS);\n-\n-            if (res.getLeft() != null) {\n-                send(pageRef.getPage(), Broadcast.BUBBLE, res.getLeft());\n-            }\n-\n-            return res.getRight();\n-        } catch (InterruptedException | ExecutionException e) {\n-            if (e.getCause() instanceof CaptchaNotMatchingException) {\n-                throw (CaptchaNotMatchingException) e.getCause();\n-            }\n-            throw new WicketRuntimeException(e);\n-        }\n-    }\n-\n     private class ApplyFuture implements Callable<Pair<Serializable, Serializable>>, Serializable {\n \n         private static final long serialVersionUID = -4657123322652656848L;"},{"sha":"5c8575a6b3d5476eb1b11f31344465a8fd77b4dd","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardBuilder.java","status":"modified","additions":13,"deletions":6,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -43,6 +43,8 @@\n \n     protected final List<Component> outerObjects = new ArrayList<>();\n \n+    private boolean async = true;\n+\n     /**\n      * Construct.\n      *\n@@ -53,14 +55,19 @@ public AjaxWizardBuilder(final T defaultItem, final PageReference pageRef) {\n         super(defaultItem, pageRef);\n     }\n \n-    public final AjaxWizardBuilder<T> addOuterObject(final Component... childs) {\n+    public AjaxWizardBuilder<T> setAsync(final boolean async) {\n+        this.async = async;\n+        return this;\n+    }\n+\n+    public AjaxWizardBuilder<T> addOuterObject(final Component... childs) {\n         outerObjects.addAll(List.of(childs));\n         return this;\n     }\n \n     @Override\n     public AjaxWizard<T> build(final String id, final int index, final AjaxWizard.Mode mode) {\n-        final AjaxWizard<T> wizard = build(id, mode);\n+        AjaxWizard<T> wizard = build(id, mode);\n         for (int i = 1; i < index; i++) {\n             wizard.getWizardModel().next();\n         }\n@@ -88,20 +95,20 @@ public AjaxWizard<T> build(final String id, final AjaxWizard.Mode mode) {\n         this.mode = mode;\n \n         // get the specified item if available\n-        final T modelObject = newModelObject();\n+        T modelObj = newModelObject();\n \n-        return new AjaxWizard<T>(id, modelObject, buildModelSteps(modelObject, new WizardModel()), mode, pageRef) {\n+        return new AjaxWizard<T>(id, modelObj, buildModelSteps(modelObj, new WizardModel()), mode, async, pageRef) {\n \n             private static final long serialVersionUID = 7770507663760640735L;\n \n             @Override\n             protected void onCancelInternal() {\n-                AjaxWizardBuilder.this.onCancelInternal(modelObject);\n+                AjaxWizardBuilder.this.onCancelInternal(modelObj);\n             }\n \n             @Override\n             protected Pair<Serializable, Serializable> onApplyInternal(final AjaxRequestTarget target) {\n-                Serializable res = AjaxWizardBuilder.this.onApplyInternal(modelObject);\n+                Serializable res = AjaxWizardBuilder.this.onApplyInternal(modelObj);\n \n                 Serializable payload;\n                 switch (mode) {"},{"sha":"da3eb79cedd3dbce4f1613697edd3683e8ab22e3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SerializableSupplier.java","status":"removed","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d71584bee69724b843a7d49a94dd8ef158e6d40e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSerializableSupplier.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d71584bee69724b843a7d49a94dd8ef158e6d40e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSerializableSupplier.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSerializableSupplier.java?ref=d71584bee69724b843a7d49a94dd8ef158e6d40e","patch":"@@ -1,26 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console;\n-\n-import java.io.Serializable;\n-import java.util.function.Supplier;\n-\n-@FunctionalInterface\n-public interface SerializableSupplier<T> extends Supplier<T>, Serializable {\n-}"},{"sha":"d2c1e3255ca3a37f12e612bb84b8bf7a6b681b0f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.client.console.widgets.ExtAlertWidget;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.info.PlatformInfo;\n import org.apache.syncope.common.lib.info.SystemInfo;\n@@ -121,8 +122,8 @@ public BasePage(final PageParameters parameters) {\n             @Override\n             public void onClick() {\n                 try {\n-                    HttpResourceStream stream =\n-                            new HttpResourceStream(SyncopeRestClient.exportInternalStorageContent());\n+                    HttpResourceStream stream = new HttpResourceStream(\n+                            new ResponseHolder(SyncopeRestClient.exportInternalStorageContent()));\n \n                     ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);\n                     rsrh.setFileName(stream.getFilename() == null"},{"sha":"5d820e036b54b4358804a50dc9b4e54eb2320827","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportExecutionDetails.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.console.wicket.ajax.form.AjaxDownloadBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n@@ -85,8 +86,8 @@ protected void addFurtherActions(final ActionsPanel<ExecTO> panel, final IModel<\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n-                    downloadBehavior.setResponse(() -> ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.CSV));\n+                    downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n+                            model.getObject().getKey(), ReportExecExportFormat.CSV)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_CSV, IdRepoEntitlement.REPORT_READ);\n@@ -97,8 +98,8 @@ public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n-                    downloadBehavior.setResponse(() -> ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.HTML));\n+                    downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n+                            model.getObject().getKey(), ReportExecExportFormat.HTML)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_HTML, IdRepoEntitlement.REPORT_READ);\n@@ -109,8 +110,8 @@ public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n-                    downloadBehavior.setResponse(() -> ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.PDF));\n+                    downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n+                            model.getObject().getKey(), ReportExecExportFormat.PDF)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_PDF, IdRepoEntitlement.REPORT_READ);\n@@ -121,8 +122,8 @@ public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n-                    downloadBehavior.setResponse(() -> ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.RTF));\n+                    downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n+                            model.getObject().getKey(), ReportExecExportFormat.RTF)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_RTF, IdRepoEntitlement.REPORT_READ);\n@@ -133,8 +134,8 @@ public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n-                    downloadBehavior.setResponse(() -> ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.XML));\n+                    downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n+                            model.getObject().getKey(), ReportExecExportFormat.XML)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_XML, IdRepoEntitlement.REPORT_READ);"},{"sha":"ff0fd28bd36480d17bf9bcb33540f0ff4eb9410a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxTimerBehavior;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n@@ -65,6 +66,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.util.time.Duration;\n \n /**\n  * Tasks page.\n@@ -112,6 +114,17 @@ protected SchedTaskDirectoryPanel(\n \n         initResultTable();\n \n+        container.add(new IndicatorAjaxTimerBehavior(Duration.seconds(10)) {\n+\n+            private static final long serialVersionUID = -4661303265651934868L;\n+\n+            @Override\n+            protected void onTimer(final AjaxRequestTarget target) {\n+                container.modelChanged();\n+                target.add(container);\n+            }\n+        });\n+\n         startAt = new TaskStartAtTogglePanel(container, pageRef);\n         addInnerObject(startAt);\n \n@@ -128,7 +141,6 @@ protected Serializable onApplyInternal(\n                 return targetObject;\n             }\n         };\n-\n         addInnerObject(templates);\n     }\n "},{"sha":"3a38e919d38bac842b20b476430843a42f6070ed","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/AjaxDownloadBehavior.java","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -18,9 +18,8 @@\n  */\n package org.apache.syncope.client.console.wicket.ajax.form;\n \n-import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.console.SerializableSupplier;\n import org.apache.syncope.client.ui.commons.HttpResourceStream;\n+import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.AbstractAjaxBehavior;\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n@@ -34,14 +33,10 @@ public class AjaxDownloadBehavior extends AbstractAjaxBehavior {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AjaxDownloadBehavior.class);\n \n-    protected SerializableSupplier<Response> response;\n+    protected ResponseHolder responseHolder;\n \n-    public boolean hasResponse() {\n-        return response != null;\n-    }\n-\n-    public void setResponse(final SerializableSupplier<Response> response) {\n-        this.response = response;\n+    public void setResponse(final ResponseHolder response) {\n+        this.responseHolder = response;\n     }\n \n     /**\n@@ -57,9 +52,9 @@ public void initiate(final AjaxRequestTarget target) {\n     protected HttpResourceStream getResourceStream() {\n         HttpResourceStream stream = null;\n \n-        if (response != null) {\n-            stream = new HttpResourceStream(response.get());\n-            response = null;\n+        if (responseHolder != null) {\n+            stream = new HttpResourceStream(responseHolder);\n+            responseHolder = null;\n         }\n \n         return stream;"},{"sha":"ee4ff432e6c0e0643b7aa2ef9b4ba1f2e738ea09","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -41,6 +41,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.ui.commons.markup.html.form.BaseBinaryFieldPanel;\n+import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n@@ -155,7 +156,7 @@ public String build() {\n \n             @Override\n             protected HttpResourceStream getResourceStream() {\n-                return new HttpResourceStream(buildResponse());\n+                return new HttpResourceStream(new ResponseHolder(buildResponse()));\n             }\n         };\n "},{"sha":"418e190deb8c5d60c6b9a1f93d6cdf9a393be7fd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/link/VeilPopupSettings.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flink%2FVeilPopupSettings.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flink%2FVeilPopupSettings.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flink%2FVeilPopupSettings.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -35,7 +35,6 @@ public String getPopupJavaScript() {\n                 + \"    window.location.reload(false);\"\n                 + \"  }\"\n                 + \"}, 1000);\"\n-                + \"return false\";\n+                + \"return false;\";\n     }\n-\n }"},{"sha":"534366104750a6a27e59ddeccbee6be3e8ce062e","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n@@ -153,9 +154,8 @@ public String build() {\n \n             @Override\n             protected HttpResourceStream getResourceStream() {\n-                return new HttpResourceStream(buildResponse());\n+                return new HttpResourceStream(new ResponseHolder(buildResponse()));\n             }\n-\n         };\n \n         add(fileDownload);"},{"sha":"a78560bcdcedf5e4fbf29a356726b36087d6fed5","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/AnyWizardBuilder.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -172,8 +172,8 @@ public AjaxWizard<AnyWrapper<UserTO>> build(final String id, final AjaxWizard.Mo\n         // get the specified item if available\n         final AnyWrapper<UserTO> modelObject = newModelObject();\n \n-        return new AjaxWizard<AnyWrapper<UserTO>>(id, modelObject, buildModelSteps(modelObject, new WizardModel()),\n-                mode, this.pageRef) {\n+        return new AjaxWizard<AnyWrapper<UserTO>>(\n+                id, modelObject, buildModelSteps(modelObject, new WizardModel()), mode, true, this.pageRef) {\n \n             private static final long serialVersionUID = 7770507663760640735L;\n \n@@ -294,5 +294,4 @@ public void onClick() {\n \n         }.setEventSink(eventSink).addOuterObject(outerObjects);\n     }\n-\n }"},{"sha":"572bc1a06c77b0f078bb0acae54574de05d83160","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClientFactoryBean.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClientFactoryBean.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -228,6 +228,7 @@ public boolean isUseCompression() {\n      * Sets the client TLS configuration.\n      *\n      * @param tlsClientParameters client TLS configuration\n+     * @return the current instance\n      */\n     public SyncopeClientFactoryBean setTlsClientParameters(final TLSClientParameters tlsClientParameters) {\n         this.tlsClientParameters = tlsClientParameters;"},{"sha":"5e6787adc744d4bed23ff2158d81035e4d0f6a23","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandlerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -66,7 +66,7 @@ public class VirAttrHandlerImpl implements VirAttrHandler {\n     @Override\n     public void setValues(final Any<?> any, final ConnectorObject connObj) {\n         if (any == null) {\n-            LOG.warn(\"Null any passed, ignoring\");\n+            LOG.debug(\"Null any passed, ignoring\");\n             return;\n         }\n "},{"sha":"1cfe35208b70c9693c736bf419fef8dd11b7a19f","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2SPPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPPanel.java?ref=37f44bf5573a5d0c1c1f99e6e2658824a7fd0a3c","patch":"@@ -21,6 +21,7 @@\n import javax.ws.rs.client.ClientBuilder;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.ui.commons.HttpResourceStream;\n+import org.apache.syncope.client.ui.commons.rest.ResponseHolder;\n import org.apache.wicket.markup.html.link.Link;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.request.Url;\n@@ -47,10 +48,10 @@ public SAML2SPPanel(final String id) {\n             @Override\n             public void onClick() {\n                 try {\n-                    HttpResourceStream stream = new HttpResourceStream(ClientBuilder.newClient().\n+                    HttpResourceStream stream = new HttpResourceStream(new ResponseHolder(ClientBuilder.newClient().\n                             target(RequestCycle.get().getUrlRenderer().renderFullUrl(Url.parse(\n                                     UrlUtils.rewriteToContextRelative(\"saml2sp/metadata\", RequestCycle.get())))).\n-                            request().get());\n+                            request().get()));\n \n                     ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);\n                     rsrh.setFileName(stream.getFilename() == null"}]}