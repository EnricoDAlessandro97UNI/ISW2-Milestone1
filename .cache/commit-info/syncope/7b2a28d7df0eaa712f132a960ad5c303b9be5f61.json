{"sha":"7b2a28d7df0eaa712f132a960ad5c303b9be5f61","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdiMmEyOGQ3ZGYwZWFhNzEyZjEzMmE5NjBhZDVjMzAzYjliZTVmNjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-13T06:55:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-13T06:55:30Z"},"message":"Minor changes","tree":{"sha":"34b8a8bd269a797407d6878c16d25df2b7f6a716","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/34b8a8bd269a797407d6878c16d25df2b7f6a716"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7b2a28d7df0eaa712f132a960ad5c303b9be5f61","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7b2a28d7df0eaa712f132a960ad5c303b9be5f61","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7b2a28d7df0eaa712f132a960ad5c303b9be5f61","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7b2a28d7df0eaa712f132a960ad5c303b9be5f61/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f237681bc83bee70e22f14612b89051e528b3149","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f237681bc83bee70e22f14612b89051e528b3149","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f237681bc83bee70e22f14612b89051e528b3149"}],"stats":{"total":8,"additions":4,"deletions":4},"files":[{"sha":"763efc3c812eabfb798c278f2e33b1660fe49711","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/LoggerService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b2a28d7df0eaa712f132a960ad5c303b9be5f61/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b2a28d7df0eaa712f132a960ad5c303b9be5f61/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java?ref=7b2a28d7df0eaa712f132a960ad5c303b9be5f61","patch":"@@ -36,7 +36,7 @@\n /**\n  * REST operations for logging and auditing.\n  */\n-@Path(\"logger\")\n+@Path(\"loggers\")\n public interface LoggerService extends JAXRSService {\n \n     /**"},{"sha":"7c1a43ac1b4f88bdc8f837bba01274c70983384a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b2a28d7df0eaa712f132a960ad5c303b9be5f61/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b2a28d7df0eaa712f132a960ad5c303b9be5f61/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=7b2a28d7df0eaa712f132a960ad5c303b9be5f61","patch":"@@ -45,7 +45,7 @@ public interface SchemaService extends JAXRSService {\n      * @param <T> actual SchemaTO\n      * @param type type for schemas to be read\n      * @param key name of schema to be read\n-     * @return schema matching the given kind, type and name\n+     * @return schema matching the given type and name\n      */\n     @GET\n     @Path(\"{key}\")\n@@ -54,11 +54,11 @@ <T extends AbstractSchemaTO> T read(\n             @NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n \n     /**\n-     * Returns a list of schemas with matching kind and type.\n+     * Returns a list of schemas with matching type.\n      *\n      * @param <T> actual SchemaTO\n      * @param type type for schemas to be listed\n-     * @return list of schemas with matching kind and type\n+     * @return list of schemas with matching type\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"}]}