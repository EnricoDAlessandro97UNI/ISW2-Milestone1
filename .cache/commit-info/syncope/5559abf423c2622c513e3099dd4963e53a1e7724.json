{"sha":"5559abf423c2622c513e3099dd4963e53a1e7724","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU1NTlhYmY0MjNjMjYyMmM1MTNlMzA5OWRkNDk2M2U1M2ExZTc3MjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-04-04T12:00:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-04-04T12:00:59Z"},"message":"Cleaning up propagation task executor's interface and implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1464483 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"894c0c53afd9bb9ca57b34cbe54bfd48047ffa91","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/894c0c53afd9bb9ca57b34cbe54bfd48047ffa91"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5559abf423c2622c513e3099dd4963e53a1e7724","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5559abf423c2622c513e3099dd4963e53a1e7724","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5559abf423c2622c513e3099dd4963e53a1e7724","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5559abf423c2622c513e3099dd4963e53a1e7724/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bdeebce94afa7b9326ebf019c3c662b4a09ac46b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bdeebce94afa7b9326ebf019c3c662b4a09ac46b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bdeebce94afa7b9326ebf019c3c662b4a09ac46b"}],"stats":{"total":37,"additions":21,"deletions":16},"files":[{"sha":"bf57d5dd68320f4804f3e7fb63f49d459f9672c7","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationTaskExecutor.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5559abf423c2622c513e3099dd4963e53a1e7724/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5559abf423c2622c513e3099dd4963e53a1e7724/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationTaskExecutor.java?ref=5559abf423c2622c513e3099dd4963e53a1e7724","patch":"@@ -23,6 +23,11 @@\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n \n+/**\n+ * Execute propagation tasks.\n+ *\n+ * @see PropagationTask\n+ */\n public interface PropagationTaskExecutor {\n \n     /**\n@@ -44,20 +49,18 @@ public interface PropagationTaskExecutor {\n \n     /**\n      * Execute a collection of PropagationTask objects.\n+     * The process is interrupted as soon as the result of the communication with a primary resource is in error.\n      *\n      * @param tasks to be executed\n-     * @throws PropagationException if propagation goes wrong: propagation is interrupted as soon as the result of the\n-     * communication with a primary resource is in error\n      */\n-    void execute(Collection<PropagationTask> tasks) throws PropagationException;\n+    void execute(Collection<PropagationTask> tasks);\n \n     /**\n      * Execute a collection of PropagationTask objects and invoke the given handler on each of these.\n+     * The process is interrupted as soon as the result of the communication with a primary resource is in error.\n      *\n      * @param tasks to be execute, in given order\n      * @param handler propagation handler\n-     * @throws PropagationException if propagation goes wrong: propagation is interrupted as soon as the result of the\n-     * communication with a primary resource is in error\n      */\n-    void execute(Collection<PropagationTask> tasks, PropagationHandler handler) throws PropagationException;\n+    void execute(Collection<PropagationTask> tasks, PropagationHandler handler);\n }"},{"sha":"78c67382c1fed3a55bc0a6de37b3459847017a6f","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/AbstractPropagationTaskExecutor.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5559abf423c2622c513e3099dd4963e53a1e7724/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5559abf423c2622c513e3099dd4963e53a1e7724/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java?ref=5559abf423c2622c513e3099dd4963e53a1e7724","patch":"@@ -40,7 +40,6 @@\n import org.apache.syncope.core.propagation.ConnectorFactory;\n import org.apache.syncope.core.propagation.DefaultPropagationActions;\n import org.apache.syncope.core.propagation.PropagationActions;\n-import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationHandler;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.Connector;\n@@ -377,14 +376,12 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n     }\n \n     @Override\n-    public void execute(final Collection<PropagationTask> tasks)\n-            throws PropagationException {\n+    public void execute(final Collection<PropagationTask> tasks) {\n         execute(tasks, null);\n     }\n \n     @Override\n-    public abstract void execute(Collection<PropagationTask> tasks, PropagationHandler handler)\n-            throws PropagationException;\n+    public abstract void execute(Collection<PropagationTask> tasks, PropagationHandler handler);\n \n     /**\n      * Check whether an execution has to be stored, for a given task."},{"sha":"1e43ade73aaec49fde4b78c233522b1de6f66cfe","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PriorityPropagationTaskExecutor.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5559abf423c2622c513e3099dd4963e53a1e7724/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5559abf423c2622c513e3099dd4963e53a1e7724/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java?ref=5559abf423c2622c513e3099dd4963e53a1e7724","patch":"@@ -34,11 +34,10 @@ public class PriorityPropagationTaskExecutor extends AbstractPropagationTaskExec\n \n     /**\n      * Sort the given collection by looking at related ExternalResource's priority, then execute.\n+     * {@inheritDoc}\n      */\n     @Override\n-    public void execute(final Collection<PropagationTask> tasks, final PropagationHandler handler)\n-            throws PropagationException {\n-\n+    public void execute(final Collection<PropagationTask> tasks, final PropagationHandler handler) {\n         final List<PropagationTask> prioritizedTasks = new ArrayList<PropagationTask>(tasks);\n         Collections.sort(prioritizedTasks, new PriorityComparator());\n \n@@ -64,6 +63,12 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationHa\n         }\n     }\n \n+    /**\n+     * Compare propagation tasks according to related ExternalResource's priority.\n+     *\n+     * @see PropagationTask\n+     * @see org.apache.syncope.core.persistence.beans.ExternalResource#propagationPriority\n+     */\n     protected static class PriorityComparator implements Comparator<PropagationTask>, Serializable {\n \n         private static final long serialVersionUID = -1969355670784448878L;\n@@ -78,10 +83,10 @@ public int compare(final PropagationTask task1, final PropagationTask task2) {\n                     : task2.getResource().getPropagationPriority().intValue();\n \n             return prop1 > prop2\n-                    ? -1\n+                    ? 1\n                     : prop1 == prop2\n                     ? 0\n-                    : 1;\n+                    : -1;\n         }\n     }\n }"}]}