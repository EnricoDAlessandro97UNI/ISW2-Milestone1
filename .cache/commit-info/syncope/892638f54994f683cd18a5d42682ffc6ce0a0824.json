{"sha":"892638f54994f683cd18a5d42682ffc6ce0a0824","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg5MjYzOGY1NDk5NGY2ODNjZDE4YTVkNDI2ODJmZmM2Y2UwYTA4MjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-03-05T13:34:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-03-05T13:34:27Z"},"message":"Reflow","tree":{"sha":"2f9128929c4473d54a42bcc75a4af2d9be56e9c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2f9128929c4473d54a42bcc75a4af2d9be56e9c9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/892638f54994f683cd18a5d42682ffc6ce0a0824","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/892638f54994f683cd18a5d42682ffc6ce0a0824","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/892638f54994f683cd18a5d42682ffc6ce0a0824","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/892638f54994f683cd18a5d42682ffc6ce0a0824/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3c3d63a213de7f08c04fb07ed390462b5da252f0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3c3d63a213de7f08c04fb07ed390462b5da252f0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3c3d63a213de7f08c04fb07ed390462b5da252f0"}],"stats":{"total":25,"additions":8,"deletions":17},"files":[{"sha":"056990598d64a4b38010ae140a88a46b499ee3ec","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/892638f54994f683cd18a5d42682ffc6ce0a0824/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/892638f54994f683cd18a5d42682ffc6ce0a0824/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=892638f54994f683cd18a5d42682ffc6ce0a0824","patch":"@@ -141,14 +141,6 @@ protected String message(final SyncopeClientException sce) {\n         return sce.getType().name() + \": \" + sce.getElements().stream().collect(Collectors.joining(\", \"));\n     }\n \n-    /**\n-     * Extract and localize (if translation available) the actual message from the given exception; then, report it\n-     * via {@link Session#error(java.io.Serializable)}.\n-     *\n-     * @see org.apache.syncope.client.lib.RestClientExceptionMapper\n-     *\n-     * @param e raised exception\n-     */\n     @Override\n     public void onException(final Exception e) {\n         Throwable root = ExceptionUtils.getRootCause(e);\n@@ -157,8 +149,7 @@ public void onException(final Exception e) {\n         if (root instanceof SyncopeClientException) {\n             SyncopeClientException sce = (SyncopeClientException) root;\n             message = sce.isComposite()\n-                    ? sce.asComposite().getExceptions().stream().\n-                            map(c -> message(c)).collect(Collectors.joining(\"; \"))\n+                    ? sce.asComposite().getExceptions().stream().map(this::message).collect(Collectors.joining(\"; \"))\n                     : message(sce);\n         } else if (root instanceof AccessControlException || root instanceof ForbiddenException) {\n             Error error = StringUtils.containsIgnoreCase(message, \"expired\")"},{"sha":"e9052f56c3bd549c949d1c435b645d742fa5d4f2","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/892638f54994f683cd18a5d42682ffc6ce0a0824/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/892638f54994f683cd18a5d42682ffc6ce0a0824/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=892638f54994f683cd18a5d42682ffc6ce0a0824","patch":"@@ -44,7 +44,6 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.wicket.Session;\n@@ -98,19 +97,20 @@ public SyncopeEnduserSession(final Request request) {\n         executor.initialize();\n     }\n \n+    protected String message(final SyncopeClientException sce) {\n+        return sce.getType().name() + \": \" + sce.getElements().stream().collect(Collectors.joining(\", \"));\n+    }\n+\n     @Override\n     public void onException(final Exception e) {\n         Throwable root = ExceptionUtils.getRootCause(e);\n         String message = root.getMessage();\n \n         if (root instanceof SyncopeClientException) {\n             SyncopeClientException sce = (SyncopeClientException) root;\n-            if (sce.getType() == ClientExceptionType.InvalidSecurityAnswer) {\n-                message = getApplication().getResourceSettings().getLocalizer().\n-                        getString(\"invalid.security.answer\", null);\n-            } else if (!sce.isComposite()) {\n-                message = sce.getElements().stream().collect(Collectors.joining(\", \"));\n-            }\n+            message = sce.isComposite()\n+                    ? sce.asComposite().getExceptions().stream().map(this::message).collect(Collectors.joining(\"; \"))\n+                    : message(sce);\n         } else if (root instanceof AccessControlException || root instanceof ForbiddenException) {\n             Error error = StringUtils.containsIgnoreCase(message, \"expired\")\n                     ? Error.SESSION_EXPIRED"}]}