{"sha":"462289dce937d9590947d1d9141bd75804288f03","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ2MjI4OWRjZTkzN2Q5NTkwOTQ3ZDFkOTE0MWJkNzU4MDQyODhmMDM=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-20T15:35:26Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-20T15:35:26Z"},"message":"Managed error messages from Logger stack and managed server down exception, SYNCOPE-158","tree":{"sha":"b08f2daf0cb4afcbffb8d5c905795c1a2bf1de7b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b08f2daf0cb4afcbffb8d5c905795c1a2bf1de7b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/462289dce937d9590947d1d9141bd75804288f03","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/462289dce937d9590947d1d9141bd75804288f03","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/462289dce937d9590947d1d9141bd75804288f03","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/462289dce937d9590947d1d9141bd75804288f03/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"5ebdcf7f5109d8a778b843424bbb4c0adda7fe66","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ebdcf7f5109d8a778b843424bbb4c0adda7fe66","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ebdcf7f5109d8a778b843424bbb4c0adda7fe66"}],"stats":{"total":78,"additions":43,"deletions":35},"files":[{"sha":"78e2f54f1ea3d42a22e5980dbecca4df099f9f47","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -18,8 +18,9 @@\n  */\n package org.apache.syncope.client.cli;\n \n+import javax.ws.rs.ProcessingException;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n-import org.apache.syncope.client.cli.messages.Messages;\n+import org.apache.syncope.client.cli.commands.logger.ResultManager;\n import org.apache.syncope.client.cli.util.CommandUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -48,10 +49,12 @@ public static void main(final String[] args) {\n             System.out.println(helpMessage());\n         } catch (final IllegalArgumentException ex) {\n             LOG.error(\"Error in main\", ex);\n-            Messages.printMessage(ex.getMessage());\n+            new ResultManager().genericError(ex.getMessage());\n             if (!ex.getMessage().startsWith(\"It seems you\")) {\n                 System.out.println(helpMessage());\n             }\n+        } catch (final ProcessingException e) {\n+            new ResultManager().genericError(\"Syncope server offline\", e.getCause().getMessage());\n         }\n \n     }\n@@ -69,7 +72,7 @@ private static String helpMessage() {\n                 helpMessageBuilder.append(\"\\n\");\n             }\n         } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n-            Messages.printMessage(ex.getMessage());\n+            new ResultManager().genericError(ex.getMessage());\n         }\n \n         return helpMessageBuilder.toString();"},{"sha":"d70aad141a248dbd4dc06698ffdc8bf86dafd681","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCreate.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -21,8 +21,6 @@\n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.messages.Messages;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n@@ -54,8 +52,7 @@ public void create() {\n                     loggerService.update(LoggerType.LOG, loggerTO);\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n-                    Messages.printTypeNotValidMessage(\n-                            \"logger level\", input.firstParameter(), CommandUtils.fromEnumToArray(LoggerLevel.class));\n+                    resultManager.typeNotValidError(input.firstParameter());\n                     failed = true;\n                     break;\n                 }\n@@ -64,7 +61,7 @@ public void create() {\n                 resultManager.fromUpdate(loggerTOs);\n             }\n         } else {\n-            Messages.printCommandOptionMessage(CREATE_HELP_MESSAGE);\n+            resultManager.commandOptionError(CREATE_HELP_MESSAGE);\n         }\n     }\n "},{"sha":"44f39ee53577195757985357520e9c38c4d5e985","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDelete.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -21,7 +21,6 @@\n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.messages.Messages;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerType;\n@@ -45,9 +44,9 @@ public void delete() {\n                     loggerService.delete(LoggerType.LOG, parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        Messages.printNofFoundMessage(\"Logger\", parameter);\n+                        resultManager.notFoundError(parameter);\n                     } else {\n-                        Messages.printMessage(ex.getMessage());\n+                        resultManager.genericError(ex.getMessage());\n                     }\n                     failed = true;\n                 }\n@@ -56,7 +55,7 @@ public void delete() {\n                 resultManager.fromDelete(loggerTOs);\n             }\n         } else {\n-            Messages.printCommandOptionMessage(DELETE_HELP_MESSAGE);\n+            resultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n "},{"sha":"bee7e7ca7da6ddc7eefd9d60373066d1347afcc5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerList.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.cli.commands.logger;\n \n import java.util.LinkedList;\n-import org.apache.syncope.client.cli.messages.Messages;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.LoggerType;\n \n@@ -32,7 +31,7 @@ public void list() {\n         try {\n             resultManager.fromList(new LinkedList<>(loggerService.list(LoggerType.LOG)));\n         } catch (final SyncopeClientException ex) {\n-            Messages.printMessage(\"Error: \" + ex.getMessage());\n+            resultManager.genericError(\"Error: \" + ex.getMessage());\n         }\n     }\n }"},{"sha":"3cbca4697705fd4e2e5c1067156ea93dc6c57a7c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerRead.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -21,7 +21,6 @@\n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.messages.Messages;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerType;\n@@ -45,9 +44,9 @@ public void read() {\n                     loggerTOs.add(loggerService.read(LoggerType.LOG, parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        Messages.printNofFoundMessage(\"Logger\", parameter);\n+                        resultManager.notFoundError(parameter);\n                     } else {\n-                        Messages.printMessage(\"Error: \" + ex.getMessage());\n+                        resultManager.genericError(\"Error: \" + ex.getMessage());\n                     }\n                     failed = true;\n                     break;\n@@ -57,7 +56,7 @@ public void read() {\n                 resultManager.fromRead(loggerTOs);\n             }\n         } else {\n-            Messages.printCommandOptionMessage(READ_HELP_MESSAGE);\n+            resultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"d309c4c2c2be5083a30331ff70abc6654f54bb17","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdate.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -21,8 +21,6 @@\n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.messages.Messages;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n@@ -54,15 +52,13 @@ public void update() {\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n-                        Messages.printTypeNotValidMessage(\n-                                \"logger level\",\n-                                input.firstParameter(), CommandUtils.fromEnumToArray(LoggerLevel.class));\n+                        resultManager.typeNotValidError(input.firstParameter());\n                     } else if (\"Parameter syntax error!\".equalsIgnoreCase(ex.getMessage())) {\n-                        Messages.printMessage(ex.getMessage(), UPDATE_HELP_MESSAGE);\n+                        resultManager.genericError(ex.getMessage(), UPDATE_HELP_MESSAGE);\n                     } else if (ex.getMessage().startsWith(\"NotFound\")) {\n-                        Messages.printNofFoundMessage(\"Logger\", parameter);\n+                        resultManager.notFoundError(parameter);\n                     } else {\n-                        Messages.printMessage(ex.getMessage(), UPDATE_HELP_MESSAGE);\n+                        resultManager.genericError(ex.getMessage(), UPDATE_HELP_MESSAGE);\n                     }\n                     failed = true;\n                     break;\n@@ -72,7 +68,7 @@ public void update() {\n                 resultManager.fromUpdate(loggerTOs);\n             }\n         } else {\n-            Messages.printCommandOptionMessage(UPDATE_HELP_MESSAGE);\n+            resultManager.commandOptionError(UPDATE_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"3393ae407e0718cccd022e0a212a3b6a6084c0d2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdateAll.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -21,8 +21,6 @@\n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.messages.Messages;\n-import org.apache.syncope.client.cli.util.CommandUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n@@ -49,11 +47,9 @@ public void updateAll() {\n                     loggerTOs.add(loggerTO);\n                 } catch (final WebServiceException | SyncopeClientException | IllegalArgumentException ex) {\n                     if (ex.getMessage().startsWith(\"No enum constant org.apache.syncope.common.lib.types.\")) {\n-                        Messages.printTypeNotValidMessage(\n-                                \"logger level\",\n-                                input.firstParameter(), CommandUtils.fromEnumToArray(LoggerLevel.class));\n+                        resultManager.typeNotValidError(input.firstParameter());\n                     } else {\n-                        Messages.printMessage(ex.getMessage(), UPDATE_ALL_HELP_MESSAGE);\n+                        resultManager.genericError(ex.getMessage(), UPDATE_ALL_HELP_MESSAGE);\n                     }\n                     failed = true;\n                     break;\n@@ -63,7 +59,7 @@ public void updateAll() {\n                 resultManager.fromUpdate(loggerTOs);\n             }\n         } else {\n-            Messages.printCommandOptionMessage(UPDATE_ALL_HELP_MESSAGE);\n+            resultManager.commandOptionError(UPDATE_ALL_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"e993eb766e4c43ba118bb24ab6455afbe89ebd5f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/ResultManager.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FResultManager.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -20,11 +20,30 @@\n \n import java.util.Arrays;\n import java.util.LinkedList;\n+import org.apache.syncope.client.cli.messages.Messages;\n import org.apache.syncope.client.cli.messages.Table;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n import org.apache.syncope.common.lib.to.LoggerTO;\n+import org.apache.syncope.common.lib.types.LoggerLevel;\n \n public class ResultManager {\n \n+    public void notFoundError(final String parameter) {\n+        Messages.printNofFoundMessage(\"Logger\", parameter);\n+    }\n+\n+    public void typeNotValidError(final String parameter) {\n+        Messages.printTypeNotValidMessage(\"logger level\", parameter, CommandUtils.fromEnumToArray(LoggerLevel.class));\n+    }\n+\n+    public void commandOptionError(final String message) {\n+        Messages.printCommandOptionMessage(message);\n+    }\n+\n+    public void genericError(final String... messages) {\n+        Messages.printMessage(messages);\n+    }\n+\n     public void fromList(final LinkedList<LoggerTO> loggerTOs) {\n         fromCommandToView(\"list loggers\", \"level\", loggerTOs);\n     }"},{"sha":"8a28965341a40defe7badb25411d3c85fe3c57f6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/messages/Table.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fmessages%2FTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/462289dce937d9590947d1d9141bd75804288f03/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fmessages%2FTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fmessages%2FTable.java?ref=462289dce937d9590947d1d9141bd75804288f03","patch":"@@ -128,7 +128,7 @@ private void printTitle() {\n         System.out.format(TABLE_TITLE_FORMAT, StringUtils.center(\" \", tableWidth - 6));\n     }\n \n-    public void printHeaders() {\n+    private void printHeaders() {\n         printColumnSpace();\n \n         for (int h = 0; h < columnsNumber; h++) {"}]}