{"sha":"814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgxNGZlNGFlNjU5YjdjMzAxMzdkODdjODNhYzVjYzJhNTBmYWU4ZmI=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2017-12-15T13:49:40Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2017-12-15T13:52:49Z"},"message":"[SYNCOPE-1247] Group search and autocompletion does now work with several groups","tree":{"sha":"a13d3f181029991bec980d7a55676fbed918d85a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a13d3f181029991bec980d7a55676fbed918d85a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"471c0fa67b68c37e8fe974b408079bc4e3c7c250","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/471c0fa67b68c37e8fe974b408079bc4e3c7c250","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/471c0fa67b68c37e8fe974b408079bc4e3c7c250"}],"stats":{"total":236,"additions":186,"deletions":50},"files":[{"sha":"5ba4e5f5f292a10afd8430c65384a56ebe7ba61f","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/GroupResource.java","status":"modified","additions":39,"deletions":2,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -21,6 +21,7 @@\n import java.io.IOException;\n import java.net.URLDecoder;\n import java.nio.charset.StandardCharsets;\n+import java.util.Collections;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.MediaType;\n@@ -31,6 +32,7 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.wicket.util.string.StringValue;\n \n @Resource(key = \"groups\", path = \"/api/groups\")\n public class GroupResource extends BaseResource {\n@@ -53,14 +55,26 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n             String realm = URLDecoder.decode(attributes.getParameters().get(\"realm\").\n                     toString(SyncopeConstants.ROOT_REALM), \"UTF-8\");\n+            StringValue term = attributes.getParameters().get(\"term\");\n+\n+            final GroupResponse groupResponse = new GroupResponse();\n+            final int totGroups = SyncopeEnduserSession.get().\n+                    getService(SyncopeService.class).numbers().getTotalGroups();\n             final List<GroupTO> groupTOs = SyncopeEnduserSession.get().\n-                    getService(SyncopeService.class).searchAssignableGroups(realm, 1, 30).getResult();\n+                    getService(SyncopeService.class).searchAssignableGroups(\n+                    realm,\n+                    term.isNull() || term.isEmpty() ? null : URLDecoder.decode(term.toString(), \"UTF-8\"),\n+                    1,\n+                    30).getResult();\n+            groupResponse.setTotGroups(totGroups);\n+            groupResponse.setGroupTOs(groupTOs);\n+\n             response.setTextEncoding(StandardCharsets.UTF_8.name());\n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n \n                 @Override\n                 public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(MAPPER.writeValueAsString(groupTOs));\n+                    attributes.getResponse().write(MAPPER.writeValueAsString(groupResponse));\n                 }\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());\n@@ -75,4 +89,27 @@ public void writeData(final Attributes attributes) throws IOException {\n         return response;\n     }\n \n+    private class GroupResponse {\n+\n+        private List<GroupTO> groups;\n+\n+        private int totGroups;\n+\n+        public List<GroupTO> getGroupTOs() {\n+            return Collections.unmodifiableList(groups);\n+        }\n+\n+        public void setGroupTOs(final List<GroupTO> groups) {\n+            this.groups = groups;\n+        }\n+\n+        public int getTotGroups() {\n+            return totGroups;\n+        }\n+\n+        public void setTotGroups(final int totGroups) {\n+            this.totGroups = totGroups;\n+        }\n+\n+    }\n }"},{"sha":"1e7b3c4a81ccfc6f4f29318f31863b7230823114","filename":"client/enduser/src/main/resources/META-INF/resources/app/css/app.css","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2Fapp.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2Fapp.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2Fapp.css?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -69,7 +69,22 @@ under the License.\n }\n \n .treasure-overlay-spinner-container{\n-  z-index : 5;\n+  z-index : 10001;\n+}\n+\n+treasure-overlay-spinner.treasure-overlay-spinner-active .treasure-overlay-spinner-content {\n+  height: 100%;\n+}\n+treasure-overlay-spinner.treasure-overlay-spinner-active {\n+  height: 100%;\n+  top: 0;\n+  bottom: 0;\n+  position: absolute;\n+  right: 0;\n+  left: 0;\n+}\n+treasure-overlay-spinner .treasure-overlay-spinner-container {\n+  background: rgba(0, 0, 0, 0.5490196078431373);\n }\n \n treasure-overlay-spinner.treasure-overlay-spinner-active-remove{"},{"sha":"b29654b448a40928b8c9eb0ac13829b21945aabf","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":35,"deletions":6,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -216,18 +216,42 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       };\n \n-      var initGroups = function () {\n+      var initGroups = function (service, selectElem) {\n         var realm = $scope.user.realm || \"/\";\n-        GroupService.getGroups(realm).then(function (response) {\n-          $scope.dynamicForm.groups = new Array();\n-          for (var i in response) {\n-            $scope.dynamicForm.groups.push({\"groupKey\": response[i].key, \"groupName\": response[i].name});\n+        var term = null;\n+\n+        if (selectElem && selectElem.search) {\n+          term = selectElem.search;\n+        } else {\n+          service = \"getGroups\";\n+        }\n+\n+        GroupService[service](realm, term).then(function (response) {\n+          var newGroups = [];\n+          if (!term) {\n+            $scope.dynamicForm.groups = new Array();\n+          }\n+\n+          $scope.dynamicForm.totGroups = response.totGroups;\n+          for (var i in response.groupTOs) {\n+            newGroups.push({\n+              \"groupKey\": response[\"groupTOs\"][i].key,\n+              \"groupName\": response[\"groupTOs\"][i].name\n+            });\n           }\n-          $scope.dynamicForm.groups.sort(function (a, b) {\n+          newGroups.sort(function (a, b) {\n             var x = a.groupName;\n             var y = b.groupName;\n             return x < y ? -1 : x > y ? 1 : 0;\n           });\n+\n+          if (service !== \"getSearchedGroups\") {\n+            $scope.dynamicForm.groups = newGroups;\n+          }\n+          if (term) {\n+            selectElem.refreshItems(newGroups);\n+          }\n+\n         }, function (e) {\n           $scope.showError(\"An error occur while retrieving groups \" + e, $scope.notification);\n         });\n@@ -370,6 +394,11 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           removeUserSchemas(null, group);\n       });\n \n+      $scope.$on('groupSearched', function (event, selectElem) {\n+        if (selectElem)\n+          initGroups(\"getSearchedGroups\", selectElem);\n+      });\n+\n       if ($scope.createMode) {\n         $scope.user = {\n           username: '',"},{"sha":"af1fd995326c3c93b0f501cfbadb87418f2e257f","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/groups.js","status":"modified","additions":49,"deletions":35,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2Fgroups.js?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -19,41 +19,55 @@\n 'use strict';\n \n angular.module('self')\n-        .directive('groups', function () {\n-          return {\n-            restrict: 'E',\n-            templateUrl: 'views/groups.html',\n-            scope: {\n-              dynamicForm: \"=form\",\n-              user: \"=\"\n-            },\n-            controller: function ($scope, $filter) {\n-              $scope.init = function () {\n-                if (!$scope.user.memberships) {\n-                  $scope.user.memberships = new Array();\n-                }\n-              };\n+        .directive('groups', ['GroupService', function (GroupService) {\n+            return {\n+              restrict: 'E',\n+              templateUrl: 'views/groups.html',\n+              scope: {\n+                dynamicForm: \"=form\",\n+                user: \"=\"\n+              },\n+              controller: function ($scope, $filter, $timeout) {\n+                var groupsSearchTimer;\n \n-              $scope.addGroup = function (item, model) {\n-                var membership = item;\n-                $scope.user.memberships.push({\"groupKey\": membership.groupKey, \"groupName\": membership.groupName});\n-                $scope.$emit(\"groupAdded\", membership.groupName);\n-              };\n+                $scope.init = function () {\n+                  if (!$scope.user.memberships) {\n+                    $scope.user.memberships = new Array();\n+                  }\n+                };\n \n-              $scope.removeGroup = function (item, model) {\n-                var groupIndex = $scope.getIndex(item);\n-                var membership = $scope.user.memberships[groupIndex];\n-                var groupName = membership.groupName;\n-                $scope.user.memberships.splice(groupIndex, 1);\n-                $scope.$emit(\"groupRemoved\", groupName);\n-              };\n+                $scope.addGroup = function (item, model) {\n+                  var membership = item;\n+                  $scope.user.memberships.push({\"groupKey\": membership.groupKey, \"groupName\": membership.groupName});\n+                  $scope.$emit(\"groupAdded\", membership.groupName);\n+                };\n \n-              $scope.getIndex = function (selectedGroup) {\n-                var groupIndex = $scope.user.memberships.map(function (membership) {\n-                  return membership.groupName;\n-                }).indexOf(selectedGroup.groupName);\n-                return groupIndex;\n-              };\n-            }\n-          };\n-        });\n+                $scope.removeGroup = function (item, model) {\n+                  var groupIndex = $scope.getIndex(item);\n+                  var membership = $scope.user.memberships[groupIndex];\n+                  var groupName = membership.groupName;\n+                  $scope.user.memberships.splice(groupIndex, 1);\n+                  $scope.$emit(\"groupRemoved\", groupName);\n+                };\n+\n+                $scope.onGroupsSearch = function (totGroups) {\n+                  if (groupsSearchTimer) {\n+                    $timeout.cancel(groupsSearchTimer);\n+                  }\n+                  if (totGroups > 30) {\n+                    var that = this;\n+                    groupsSearchTimer = $timeout(function () {\n+                      $scope.$emit(\"groupSearched\", that.$select);\n+                    }, 800);\n+                  }\n+                };\n+\n+                $scope.getIndex = function (selectedGroup) {\n+                  var groupIndex = $scope.user.memberships.map(function (membership) {\n+                    return membership.groupName;\n+                  }).indexOf(selectedGroup.groupName);\n+                  return groupIndex;\n+                };\n+              }\n+            };\n+          }]);"},{"sha":"4ee136e988da70f106d292992bace71ffd523b77","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/groupService.js","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FgroupService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FgroupService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FgroupService.js?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -23,6 +23,7 @@ angular.module('self')\n         .factory('GroupService', ['$resource', '$q', '$http',\n           function ($group, $q, $http) {\n             var groupService = {};\n+\n             groupService.getGroups = function (realm) {\n               return  $http.get(\"../api/groups?realm=\" + encodeURI(realm))\n                       .then(function (response) {\n@@ -32,6 +33,17 @@ angular.module('self')\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };\n+\n+            groupService.getSearchedGroups = function (realm, term) {\n+              return  $http.get(\"../api/groups?realm=\" + encodeURI(realm) + \"&term=\" + encodeURI(term))\n+                      .then(function (response) {\n+                        return response.data;\n+                      }, function (response) {\n+                        console.error(\"Something went wrong during groups retrieval, exit with status: \", response);\n+                        return $q.reject(response.data || response.statusText);\n+                      });\n+            };\n+\n             return groupService;\n           }]);\n "},{"sha":"0d23a54bf96c9db1d2cdcf8047491a057b57e0bd","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/groups.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fgroups.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fgroups.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fgroups.html?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -20,7 +20,7 @@\n   <ui-select on-select=\"addGroup($item, $model)\" on-remove=\"removeGroup($item, $model)\" multiple\n              validate-dropdown=\"groups\" dynamic-form=\"dynamicForm\"\n              ng-model=\"dynamicForm.selectedGroups\" theme=\"select2\" class=\"attribute-ui-select\" \n-             ng-disabled=\"inputDisabled\">\n+             ng-disabled=\"inputDisabled\" ng-keyup=\"onGroupsSearch(dynamicForm.totGroups)\">\n     <ui-select-match placeholder=\"{{'GROUPS_PLACEHOLDER'| translate}}\" class=\"ui-select-match\">\n       {{$item.groupName}}\n     </ui-select-match>"},{"sha":"e7819644f82ce98b306c2227400cafdac51fd7a4","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SyncopeService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -77,6 +77,7 @@ public interface SyncopeService extends JAXRSService {\n      * Returns the list of Groups, according to provided paging instructions, assignable to Users and Any Objects of\n      * the provided Realm.\n      *\n+     * @param term groups search term\n      * @param realm of the User and Any Objects assignable to the returned Groups\n      * @param page search page\n      * @param size search page size\n@@ -88,6 +89,7 @@ public interface SyncopeService extends JAXRSService {\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     PagedResult<GroupTO> searchAssignableGroups(\n             @NotNull @PathParam(\"realm\") String realm,\n+            @QueryParam(\"term\") String term,\n             @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(\"1\") int page,\n             @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(\"25\") int size);\n "},{"sha":"0fb587af8554f037591c7d13a6a7c80e3ee12e0d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":29,"deletions":2,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -32,6 +32,7 @@\n import java.util.Optional;\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -61,7 +62,9 @@\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n import org.apache.syncope.core.persistence.api.dao.search.AssignableCond;\n+import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n@@ -359,10 +362,34 @@ public NumbersInfo numbers() {\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n-    public Pair<Integer, List<GroupTO>> searchAssignableGroups(final String realm, final int page, final int size) {\n+    public Pair<Integer, List<GroupTO>> searchAssignableGroups(\n+            final String realm,\n+            final String term,\n+            final int page,\n+            final int size) {\n+\n         AssignableCond assignableCond = new AssignableCond();\n         assignableCond.setRealmFullPath(realm);\n-        SearchCond searchCond = SearchCond.getLeafCond(assignableCond);\n+\n+        SearchCond searchCond;\n+        if (StringUtils.isNotBlank(term)) {\n+            AnyCond termCond = new AnyCond(AttributeCond.Type.ILIKE);\n+            termCond.setSchema(\"name\");\n+\n+            String termSearchableValue = (term.startsWith(\"*\") && !term.endsWith(\"*\"))\n+                    ? term + \"%\"\n+                    : (!term.startsWith(\"*\") && term.endsWith(\"*\"))\n+                    ? \"%\" + term\n+                    : (term.startsWith(\"*\") && term.endsWith(\"*\")\n+                    ? term : \"%\" + term + \"%\");\n+            termCond.setExpression(termSearchableValue);\n+\n+            searchCond = SearchCond.getAndCond(\n+                    SearchCond.getLeafCond(assignableCond),\n+                    SearchCond.getLeafCond(termCond));\n+        } else {\n+            searchCond = SearchCond.getLeafCond(assignableCond);\n+        }\n \n         int count = searchDAO.count(SyncopeConstants.FULL_ADMIN_REALMS, searchCond, AnyTypeKind.GROUP);\n "},{"sha":"2f84efc8f636045d99737665732c10c435feb6c9","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SyncopeServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSyncopeServiceImpl.java?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -56,10 +56,10 @@ public NumbersInfo numbers() {\n \n     @Override\n     public PagedResult<GroupTO> searchAssignableGroups(\n-            final String realm, final int page, final int size) {\n+            final String realm, final String term, final int page, final int size) {\n \n         Pair<Integer, List<GroupTO>> result = logic.searchAssignableGroups(\n-                StringUtils.prependIfMissing(realm, SyncopeConstants.ROOT_REALM), page, size);\n+                StringUtils.prependIfMissing(realm, SyncopeConstants.ROOT_REALM), term, page, size);\n         return buildPagedResult(result.getRight(), page, size, result.getLeft());\n     }\n "},{"sha":"1b7f931f7ee996467170a2713a399c3638d30df8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/814fe4ae659b7c30137d87c83ac5cc2a50fae8fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=814fe4ae659b7c30137d87c83ac5cc2a50fae8fb","patch":"@@ -614,7 +614,7 @@ public void anonymous() {\n         }\n \n         assertFalse(anonymous.getService(SyncopeService.class).\n-                searchAssignableGroups(\"/even\", 1, 100).getResult().isEmpty());\n+                searchAssignableGroups(\"/even\", null, 1, 100).getResult().isEmpty());\n     }\n \n     @Test"}]}