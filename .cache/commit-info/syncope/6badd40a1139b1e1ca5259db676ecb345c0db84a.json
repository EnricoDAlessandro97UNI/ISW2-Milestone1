{"sha":"6badd40a1139b1e1ca5259db676ecb345c0db84a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZiYWRkNDBhMTEzOWIxZTFjYTUyNTlkYjY3NmVjYjM0NWMwZGI4NGE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-01-14T12:49:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-01-14T15:57:39Z"},"message":"[SYCOPE-1532] Extend for generic key values","tree":{"sha":"666576ed89bae4ea3a21169a966f44e3b3cc02bb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/666576ed89bae4ea3a21169a966f44e3b3cc02bb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6badd40a1139b1e1ca5259db676ecb345c0db84a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6badd40a1139b1e1ca5259db676ecb345c0db84a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6badd40a1139b1e1ca5259db676ecb345c0db84a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6badd40a1139b1e1ca5259db676ecb345c0db84a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6c9fc678f121dae659073f27636e2efa0e3ca70f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6c9fc678f121dae659073f27636e2efa0e3ca70f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6c9fc678f121dae659073f27636e2efa0e3ca70f"}],"stats":{"total":16,"additions":12,"deletions":4},"files":[{"sha":"d0db694759f6b5b08b574b50784bd1f6c676d80e","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/SyncopeConstants.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6badd40a1139b1e1ca5259db676ecb345c0db84a/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6badd40a1139b1e1ca5259db676ecb345c0db84a/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java?ref=6badd40a1139b1e1ca5259db676ecb345c0db84a","patch":"@@ -39,7 +39,7 @@ public final class SyncopeConstants {\n \n     public static final String ENUM_VALUES_SEPARATOR = \";\";\n \n-    public static final String NAME_PATTERN = \"[\\\\p{L}\\\\p{gc=Mn}\\\\p{gc=Me}\\\\p{gc=Mc}\\\\p{Digit}\\\\p{gc=Pc} \\\\-@.]+\";\n+    public static final String NAME_PATTERN = \"[\\\\p{L}\\\\p{gc=Mn}\\\\p{gc=Me}\\\\p{gc=Mc}\\\\p{Digit}\\\\p{gc=Pc} \\\\-@.~]+\";\n \n     public static final String[] DATE_PATTERNS = {\n         \"yyyy-MM-dd'T'HH:mm:ssZ\","},{"sha":"d48a24a5977660bf01160bf981988d6f8ef17c58","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RoleITCase.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6badd40a1139b1e1ca5259db676ecb345c0db84a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6badd40a1139b1e1ca5259db676ecb345c0db84a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java?ref=6badd40a1139b1e1ca5259db676ecb345c0db84a","patch":"@@ -55,9 +55,7 @@ public void list() {\n         List<RoleTO> roleTOs = roleService.list();\n         assertNotNull(roleTOs);\n         assertFalse(roleTOs.isEmpty());\n-        for (RoleTO instance : roleTOs) {\n-            assertNotNull(instance);\n-        }\n+        roleTOs.forEach(instance -> assertNotNull(instance));\n     }\n \n     @Test\n@@ -87,6 +85,16 @@ public void create() {\n         assertNotNull(role);\n     }\n \n+    @Test\n+    public void createWithTilde() {\n+        RoleTO role = new RoleTO();\n+        role.getRealms().add(SyncopeConstants.ROOT_REALM);\n+        role.getEntitlements().add(StandardEntitlement.LOG_LIST);\n+        role.setKey(\"new~\" + getUUIDString());\n+        role = createRole(role);\n+        assertNotNull(role);\n+    }\n+\n     @Test\n     public void update() {\n         RoleTO role = getSampleRoleTO(\"update\");"}]}