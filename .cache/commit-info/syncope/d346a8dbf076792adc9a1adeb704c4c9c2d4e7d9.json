{"sha":"d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQzNDZhOGRiZjA3Njc5MmFkYzlhMWFkZWI3MDRjNGM5YzJkNGU3ZDk=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-07-18T09:45:36Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-07-18T09:45:36Z"},"message":"Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1504404 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0a129f0d8f36b9eaa9ce83cf31b8b65a016d5ba9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0a129f0d8f36b9eaa9ce83cf31b8b65a016d5ba9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"d7f593adeda79c36bc831db286c41cce73ee66c0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d7f593adeda79c36bc831db286c41cce73ee66c0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d7f593adeda79c36bc831db286c41cce73ee66c0"},{"sha":"5a297a722bee740676ab662cf048c23b39f7944d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5a297a722bee740676ab662cf048c23b39f7944d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5a297a722bee740676ab662cf048c23b39f7944d"}],"stats":{"total":746,"additions":423,"deletions":323},"files":[{"sha":"6cd126e9d1431179a70d49f80696539012793f49","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/DefaultPropagationHandler.java","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java?ref=d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9","patch":"@@ -22,11 +22,16 @@\n import org.apache.syncope.common.to.PropagationStatusTO;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.propagation.PropagationHandler;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class DefaultPropagationHandler implements PropagationHandler {\n \n+    protected static final Logger LOG = LoggerFactory.getLogger(DefaultPropagationHandler.class);\n+\n     private final ConnObjectUtil connObjectUtil;\n \n     private final List<PropagationStatusTO> propagations;\n@@ -57,4 +62,32 @@ public void handle(final String resource, final PropagationTaskExecStatus execut\n \n         propagations.add(propagation);\n     }\n+\n+    public void completeWhenPrimaryResourceErrored(\n+            final List<PropagationStatusTO> propagations, final List<PropagationTask> tasks) {\n+\n+        final String failedResource = propagations.get(propagations.size() - 1).getResource();\n+\n+        LOG.debug(\"Propagation error: {} primary resource failed to propagate\", failedResource);\n+\n+        for (PropagationTask propagationTask : tasks) {\n+            if (!containsPropagationStatusTO(propagationTask.getResource().getName(), propagations)) {\n+                final PropagationStatusTO propagationStatusTO = new PropagationStatusTO();\n+                propagationStatusTO.setResource(propagationTask.getResource().getName());\n+                propagationStatusTO.setStatus(PropagationTaskExecStatus.FAILURE);\n+                propagationStatusTO.setExecutionMessage(\n+                        \"Propagation error: \" + failedResource + \" primary resource failed to propagate.\");\n+                propagations.add(propagationStatusTO);\n+            }\n+        }\n+    }\n+\n+    private boolean containsPropagationStatusTO(final String resource, final List<PropagationStatusTO> propagations) {\n+        for (PropagationStatusTO status : propagations) {\n+            if (resource.equals(status.getResource())) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n }"},{"sha":"2b6c9171dd869404df79aa756b37b39da056102c","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":22,"deletions":4,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9","patch":"@@ -42,6 +42,7 @@\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.impl.DefaultPropagationHandler;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n@@ -281,7 +282,13 @@ public RoleTO create(final HttpServletResponse response, @RequestBody final Role\n         List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, roleTO.getVirtualAttributes());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n \n         final RoleTO savedTO = binder.getRoleTO(created.getResult());\n         savedTO.setPropagationStatusTOs(propagations);\n@@ -308,8 +315,13 @@ public RoleTO update(@RequestBody final RoleMod roleMod) {\n                 roleMod.getVirtualAttributesToBeRemoved(), roleMod.getVirtualAttributesToBeUpdated());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n-\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n         final RoleTO updatedTO = binder.getRoleTO(updated.getResult());\n         updatedTO.setPropagationStatusTOs(propagations);\n \n@@ -340,7 +352,13 @@ public RoleTO delete(@PathVariable(\"roleId\") final Long roleId) {\n         roleTO.setId(roleId);\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n         roleTO.setPropagationStatusTOs(propagations);\n \n         rwfAdapter.delete(roleId);"},{"sha":"f3584361275108df5cbca222d1b6469a095110d6","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":28,"deletions":8,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9","patch":"@@ -50,6 +50,7 @@\n import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.propagation.PropagationByResource;\n+import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.impl.DefaultPropagationHandler;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n@@ -300,7 +301,13 @@ public UserTO createInternal(final UserTO userTO) {\n                 created, userTO.getPassword(), userTO.getVirtualAttributes());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, propHanlder);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n \n         notificationManager.createTasks(created.getResult().getKey(), created.getPerformedTasks());\n \n@@ -354,8 +361,8 @@ public UserTO update(@RequestBody final UserMod userMod) {\n                 tasks.addAll(propagationManager.getUserUpdateTaskIds(\n                         updated,\n                         changedPwd,\n-                        userMod.getVirtualAttributesToBeRemoved(), \n-                        userMod.getVirtualAttributesToBeUpdated(), \n+                        userMod.getVirtualAttributesToBeRemoved(),\n+                        userMod.getVirtualAttributesToBeUpdated(),\n                         toBeExcluded));\n             }\n \n@@ -367,18 +374,24 @@ public UserTO update(@RequestBody final UserMod userMod) {\n \n             if (!nonPwdPropByRes.isEmpty()) {\n                 tasks.addAll(propagationManager.getUserUpdateTaskIds(\n-                        updated, \n+                        updated,\n                         null,\n-                        userMod.getVirtualAttributesToBeRemoved(), \n-                        userMod.getVirtualAttributesToBeUpdated(), \n+                        userMod.getVirtualAttributesToBeRemoved(),\n+                        userMod.getVirtualAttributesToBeUpdated(),\n                         pwdResourceNames));\n             }\n \n             updated.setPropByRes(origPropByRes);\n         }\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, propHanlder);\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n \n         // 3. create notification tasks\n         notificationManager.createTasks(updated.getResult().getKey(), updated.getPerformedTasks());\n@@ -699,7 +712,14 @@ protected UserTO doDelete(final Long userId) {\n         userTO.setId(userId);\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n+\n         userTO.setPropagationStatusTOs(propagations);\n \n         uwfAdapter.delete(userId);"},{"sha":"a061c1848b51a86fc9f75859203b8779430e9311","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":61,"deletions":38,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9","patch":"@@ -241,13 +241,8 @@ public void issue186() {\n         userMod.setPassword(\"newPassword\");\n         userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n \n-        sce = null;\n-        try {\n-            userTO = userService.update(userMod.getId(), userMod);\n-        } catch (SyncopeClientCompositeErrorException scce) {\n-            sce = scce.getException(SyncopeClientExceptionType.Propagation);\n-        }\n-        assertNotNull(sce);\n+        userTO = userService.update(userMod.getId(), userMod);\n+        assertNotNull(userTO.getPropagationStatusTOs().get(0).getExecutionMessage());\n \n         // 4. update assigning a resource NOT forcing mandatory constraints\n         // BUT not primary: must succeed\n@@ -1815,12 +1810,15 @@ public void issueSYNCOPE266() {\n         assertNotNull(userTO);\n     }\n \n-    @Test(expected = SyncopeClientCompositeErrorException.class)\n+    @Test\n     public void issueSYNCOPE279() {\n         UserTO userTO = getUniqueSampleTO(\"syncope279@apache.org\");\n         userTO.getResources().clear();\n         userTO.addResource(\"ws-target-resource-timeout\");\n-        createUser(userTO);\n+        userTO = createUser(userTO);\n+        assertEquals(\"ws-target-resource-timeout\", userTO.getPropagationStatusTOs().get(0).getResource());\n+        assertNotNull(userTO.getPropagationStatusTOs().get(0).getExecutionMessage());\n+        assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n \n     @Test\n@@ -1906,39 +1904,35 @@ public void isseSYNCOPE136AES() {\n         pwdCipherAlgo.setValue(\"AES\");\n         configurationService.update(pwdCipherAlgo.getKey(), pwdCipherAlgo);\n \n-        try {\n-            // 3. create user with no resources\n-            UserTO userTO = getUniqueSampleTO(\"syncope136_AES@apache.org\");\n-            userTO.getResources().clear();\n+        // 3. create user with no resources\n+        UserTO userTO = getUniqueSampleTO(\"syncope136_AES@apache.org\");\n+        userTO.getResources().clear();\n \n-            userTO = userService.create(userTO).readEntity(UserTO.class);\n-            assertNotNull(userTO);\n+        userTO = userService.create(userTO).readEntity(UserTO.class);\n+        assertNotNull(userTO);\n \n-            // 4. update user, assign a propagation primary resource but don't provide any password\n-            UserMod userMod = new UserMod();\n-            userMod.setId(userTO.getId());\n-            userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n+        // 4. update user, assign a propagation primary resource but don't provide any password\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n \n-            userTO = userService.update(userMod.getId(), userMod);\n-            assertNotNull(userTO);\n-\n-            // 5. verify that propagation was successful\n-            List<PropagationStatusTO> props = userTO.getPropagationStatusTOs();\n-            assertNotNull(props);\n-            assertEquals(1, props.size());\n-            PropagationStatusTO prop = props.iterator().next();\n-            assertNotNull(prop);\n-            assertEquals(\"ws-target-resource-1\", prop.getResource());\n-            assertEquals(PropagationTaskExecStatus.SUCCESS, prop.getStatus());\n-        } catch (Exception e) {\n-            LOG.error(\"Unexpected exception\", e);\n-        } finally {\n-            // 6. restore initial cipher algorithm\n-            pwdCipherAlgo.setValue(origpwdCipherAlgo);\n-            configurationService.update(pwdCipherAlgo.getKey(), pwdCipherAlgo);\n-        }\n-    }\n+        userTO = userService.update(userMod.getId(), userMod);\n+        assertNotNull(userTO);\n \n+        // 5. verify that propagation was successful\n+        List<PropagationStatusTO> props = userTO.getPropagationStatusTOs();\n+        assertNotNull(props);\n+        assertEquals(1, props.size());\n+        PropagationStatusTO prop = props.iterator().next();\n+        assertNotNull(prop);\n+        assertEquals(\"ws-target-resource-1\", prop.getResource());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, prop.getStatus());\n+        \n+        // 6. restore initial cipher algorithm\n+        pwdCipherAlgo.setValue(origpwdCipherAlgo);\n+        configurationService.update(pwdCipherAlgo.getKey(), pwdCipherAlgo);\n+    }\n+    \n     @Test\n     public void isseSYNCOPE136Random() {\n         // 1. create user with no resources\n@@ -2306,6 +2300,35 @@ public void issueSYNCOPE397() {\n         assertEquals(2, toBeUpdated.getPropagationStatusTOs().size());\n     }\n \n+    @Test\n+    public void issueSYNCOPE402() {\n+        // 1. create an user with strict mandatory attributes only\n+        UserTO userTO = new UserTO();\n+        String userId = getUUIDString() + \"syncope402@syncope.apache.org\";\n+        userTO.setUsername(userId);\n+        userTO.setPassword(\"password\");\n+\n+        userTO.addAttribute(attributeTO(\"userId\", userId));\n+        userTO.addAttribute(attributeTO(\"fullname\", userId));\n+        userTO.addAttribute(attributeTO(\"surname\", userId));\n+\n+        userTO = createUser(userTO);\n+        assertNotNull(userTO);\n+        assertTrue(userTO.getResources().isEmpty());\n+\n+        //2. update assigning a resource NOT forcing mandatory constraints\n+        // AND primary: must fail with PropagationException\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+        userMod.setPassword(\"newPassword\");\n+        userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n+        userMod.addResourceToBeAdded(\"resource-testdb\");\n+        userTO = userService.update(userMod.getId(), userMod);\n+        assertEquals(\"ws-target-resource-1\", userTO.getPropagationStatusTOs().get(1).getResource());\n+        assertNotNull(userTO.getPropagationStatusTOs().get(1).getExecutionMessage());\n+        assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(1).getStatus());\n+    }\n+\n     private boolean getBooleanAttribute(ConnObjectTO connObjectTO, String attrName) {\n         return Boolean.parseBoolean(getStringAttribute(connObjectTO, attrName));\n     }"},{"sha":"691fe97a8c022e079c8494ef34efdd85906574c9","filename":"core/src/test/resources/content.xml","status":"modified","additions":279,"deletions":273,"changes":552,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=d346a8dbf076792adc9a1adeb704c4c9c2d4e7d9"}]}