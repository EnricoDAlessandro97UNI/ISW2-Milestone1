{"sha":"bec87170e49a6cb491b6883eea1f7e0ff2e3c503","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJlYzg3MTcwZTQ5YTZjYjQ5MWI2ODgzZWVhMWY3ZTBmZjJlM2M1MDM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-10-23T11:27:55Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-10-23T11:27:55Z"},"message":"[SYNCOPE-186] PropagationActions introduced, for executing custom actions before and after any PropagationTask execution\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1401252 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2d95b484c9965375693c442e06a9853f18bbdced","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2d95b484c9965375693c442e06a9853f18bbdced"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bec87170e49a6cb491b6883eea1f7e0ff2e3c503","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bec87170e49a6cb491b6883eea1f7e0ff2e3c503","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bec87170e49a6cb491b6883eea1f7e0ff2e3c503","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"335070364d8e6ecc0ebffe6b17c19056968a7327","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/335070364d8e6ecc0ebffe6b17c19056968a7327","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/335070364d8e6ecc0ebffe6b17c19056968a7327"}],"stats":{"total":933,"additions":547,"deletions":386},"files":[{"sha":"d049e278fffd2007e06924f49820d915ee2c0b2e","filename":"client/src/main/java/org/apache/syncope/client/to/PropagationTO.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTO.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -34,12 +34,12 @@ public class PropagationTO extends AbstractBaseBean {\n     /**\n      * Object before propagation.\n      */\n-    private ConnObjectTO before;\n+    private ConnObjectTO beforeObj;\n \n     /**\n      * Object after propagation.\n      */\n-    private ConnObjectTO after;\n+    private ConnObjectTO afterObj;\n \n     /**\n      * Propagated resource name.\n@@ -56,35 +56,35 @@ public class PropagationTO extends AbstractBaseBean {\n      *\n      * @return after object.\n      */\n-    public ConnObjectTO getAfter() {\n-        return after;\n+    public ConnObjectTO getAfterObj() {\n+        return afterObj;\n     }\n \n     /**\n      * After object setter.\n      *\n-     * @param after object.\n+     * @param afterObj object.\n      */\n-    public void setAfter(final ConnObjectTO after) {\n-        this.after = after;\n+    public void setAfterObj(final ConnObjectTO afterObj) {\n+        this.afterObj = afterObj;\n     }\n \n     /**\n      * Before object getter.\n      *\n      * @return before object.\n      */\n-    public ConnObjectTO getBefore() {\n-        return before;\n+    public ConnObjectTO getBeforeObj() {\n+        return beforeObj;\n     }\n \n     /**\n      * Before object setter.\n      *\n-     * @param before object.\n+     * @param beforeObj object.\n      */\n-    public void setBefore(final ConnObjectTO before) {\n-        this.before = before;\n+    public void setBeforeObj(final ConnObjectTO beforeObj) {\n+        this.beforeObj = beforeObj;\n     }\n \n     /**"},{"sha":"57f9ffdf308b21d86aa98a70d33bc5c61e77b16f","filename":"client/src/main/java/org/apache/syncope/client/to/ResourceTO.java","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -74,6 +74,8 @@ public class ResourceTO extends AbstractBaseBean {\n \n     private String syncToken;\n \n+    private String actionsClassName;\n+\n     public ResourceTO() {\n         mappings = new ArrayList<SchemaMappingTO>();\n         connConfProperties = new HashSet<ConnConfProperty>();\n@@ -218,15 +220,23 @@ public TraceLevel getSyncTraceLevel() {\n         return syncTraceLevel;\n     }\n \n-    public void setSyncTraceLevel(TraceLevel syncTraceLevel) {\n+    public void setSyncTraceLevel(final TraceLevel syncTraceLevel) {\n         this.syncTraceLevel = syncTraceLevel;\n     }\n \n     public String getSyncToken() {\n         return syncToken;\n     }\n \n-    public void setSyncToken(String syncToken) {\n+    public void setSyncToken(final String syncToken) {\n         this.syncToken = syncToken;\n     }\n+\n+    public String getActionsClassName() {\n+        return actionsClassName;\n+    }\n+\n+    public void setActionsClassName(final String actionsClassName) {\n+        this.actionsClassName = actionsClassName;\n+    }\n }"},{"sha":"aba460170ba43d3a913c3fdfd5e3f3ddcd6a4fe1","filename":"client/src/main/java/org/apache/syncope/types/AuditElements.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAuditElements.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAuditElements.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAuditElements.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -152,7 +152,8 @@ public enum ResourceSubCategory {\n         update,\n         delete,\n         getObject,\n-        getRoleResourcesMapping\n+        getRoleResourcesMapping,\n+        getPropagationActionsClasses\n \n     }\n \n@@ -231,8 +232,7 @@ public enum UserRequestSubCategory {\n         read,\n         update,\n         delete,\n-        isCreateAllowed,\n-    }\n+        isCreateAllowed,}\n \n     public enum WorkflowSubCategory {\n "},{"sha":"d00d81b079cf47ecc10a994b8fe287c1baeeb5da","filename":"client/src/main/java/org/apache/syncope/types/EntityViolationType.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FEntityViolationType.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -22,7 +22,6 @@ public enum EntityViolationType {\n \n     Standard(\"\"),\n     MultivalueAndUniqueConstraint(\"org.apache.syncope.core.validation.schema.multivalueAndUniqueConstraint\"),\n-    InvalidAccountIdCount(\"org.apache.syncope.core.validation.externalresource.invalidAccountIdCount\"),\n     MoreThanOneNonNull(\"org.apache.syncope.core.validation.attrvalue.moreThanOneNonNull\"),\n     InvalidUSchema(\"org.apache.syncope.core.validation.attrvalue.invalidUSchema\"),\n     InvalidUDerSchema(\"org.apache.syncope.core.validation.attrvalue.invalidUDerSchema\"),\n@@ -37,12 +36,13 @@ public enum EntityViolationType {\n     InvalidValueList(\"org.apache.syncope.core.validation.attr.invalidValueList\"),\n     InvalidEntitlementName(\"org.apache.syncope.core.validation.entitlement.invalidName\"),\n     InvalidPropagationTask(\"org.apache.syncope.core.validation.propagationtask.invalid\"),\n+    InvalidResource(\"org.apache.syncope.core.validation.externalresource.invalid\"),\n     InvalidSchedTask(\"org.apache.syncope.core.validation.schedtask.invalid\"),\n     InvalidSyncTask(\"org.apache.syncope.core.validation.synctask.invalid\"),\n     InvalidPassword(\"org.apache.syncope.core.validation.password.invalid\"),\n     InvalidUsername(\"org.apache.syncope.core.validation.username.invalid\"),\n-    InvalidPolicy(// not throwable using rest interface because the TO is typed\n-            \"org.apache.syncope.core.validation.policy.invalid\"),\n+    // not throwable using rest interface because the TO is typed\n+    InvalidPolicy(\"org.apache.syncope.core.validation.policy.invalid\"),\n     InvalidPasswordPolicy(\"org.apache.syncope.core.validation.policy.invalid\"),\n     InvalidAccountPolicy(\"org.apache.syncope.core.validation.policy.invalid\"),\n     InvalidSyncPolicy(\"org.apache.syncope.core.validation.policy.invalid\"),"},{"sha":"90f26e8c747df4a6baa700b0ade4d339d51476cd","filename":"console/src/main/java/org/apache/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -45,7 +45,7 @@ public class ResourceModalPage extends BaseModalPage {\n     private static final long serialVersionUID = 1734415311027284221L;\n \n     @SpringBean\n-    private ResourceRestClient resourceRestClient;\n+    private ResourceRestClient restClient;\n \n     public ResourceModalPage(final PageReference pageref, final ModalWindow window, final ResourceTO resourceTO,\n             final boolean createFlag) {\n@@ -58,7 +58,8 @@ public ResourceModalPage(final PageReference pageref, final ModalWindow window,\n         //--------------------------------\n         // Resource details panel\n         //--------------------------------\n-        form.add(new ResourceDetailsPanel(\"details\", resourceTO, createFlag));\n+        form.add(new ResourceDetailsPanel(\"details\", resourceTO,\n+                restClient.getPropagationActionsClasses(), createFlag));\n         //--------------------------------\n \n         //--------------------------------\n@@ -80,6 +81,7 @@ public ResourceModalPage(final PageReference pageref, final ModalWindow window,\n         //--------------------------------\n \n         final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"submit\", \"submit\")) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n@@ -102,9 +104,9 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     try {\n \n                         if (createFlag) {\n-                            resourceRestClient.create(resourceTO);\n+                            restClient.create(resourceTO);\n                         } else {\n-                            resourceRestClient.update(resourceTO);\n+                            restClient.update(resourceTO);\n                         }\n \n                         ((Resources) pageref.getPage()).setModalResult(true);\n@@ -128,6 +130,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         form.add(submit);\n \n         final AjaxButton cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override"},{"sha":"5ecc00daa34b671399489a83cf2b1d2f436a8798","filename":"console/src/main/java/org/apache/syncope/console/pages/SyncTaskModalPage.java","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -73,19 +73,9 @@ protected List<String> load() {\n \n         profile.add(resource);\n \n-        final IModel<List<String>> classNames = new LoadableDetachableModel<List<String>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<String> load() {\n-                return taskRestClient.getSyncActionsClasses();\n-            }\n-        };\n-\n         final AjaxDropDownChoicePanel<String> actionsClassName = new AjaxDropDownChoicePanel<String>(\n                 \"actionsClassName\", getString(\"actionsClass\"), new PropertyModel(taskTO, \"actionsClassName\"));\n-        actionsClassName.setChoices(classNames.getObject());\n+        actionsClassName.setChoices(taskRestClient.getSyncActionsClasses());\n         actionsClassName.setStyleShet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n         profile.add(actionsClassName);\n "},{"sha":"eb6c79f142089b28580cc216a200a9378d7e1117","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceDetailsPanel.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -58,7 +58,8 @@ public class ResourceDetailsPanel extends Panel {\n \n     private ConnInstanceTO connInstanceTO;\n \n-    public ResourceDetailsPanel(final String id, final ResourceTO resourceTO, final boolean createFlag) {\n+    public ResourceDetailsPanel(final String id, final ResourceTO resourceTO, final List<String> actionClassNames,\n+            final boolean createFlag) {\n \n         super(id);\n         setOutputMarkupId(true);\n@@ -103,6 +104,13 @@ protected List<ConnInstanceTO> load() {\n         propagationMode.setChoices(Arrays.asList(PropagationMode.values()));\n         add(propagationMode);\n \n+        final AjaxDropDownChoicePanel<String> actionsClassName = new AjaxDropDownChoicePanel<String>(\n+                \"actionsClassName\", new ResourceModel(\"actionsClass\", \"actionsClass\").getObject(),\n+                new PropertyModel(resourceTO, \"actionsClassName\"));\n+        actionsClassName.setChoices(actionClassNames);\n+        actionsClassName.setStyleShet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n+        add(actionsClassName);\n+\n         final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n                 \"createTraceLevel\", new ResourceModel(\"createTraceLevel\", \"createTraceLevel\").getObject(),\n                 new PropertyModel(resourceTO, \"createTraceLevel\"));"},{"sha":"4e1bcff1e849f02247893d5cc99c90772cc9a998","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceSecurityPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -186,7 +186,7 @@ public Object getDisplayValue(final Long object) {\n         }\n \n         @Override\n-        public String getIdValue(Long object, int index) {\n+        public String getIdValue(final Long object, final int index) {\n             return String.valueOf(object != null\n                     ? object\n                     : 0L);"},{"sha":"948bc623833868178d3524faf3bea7a7b049ef8d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserManagementResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserManagementResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserManagementResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserManagementResultPanel.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -194,8 +194,8 @@ public void onClick(final AjaxRequestTarget target) {\n      * @return list view.\n      */\n     private ListView getConnObjectView(final PropagationTO propTO) {\n-        final ConnObjectTO before = propTO.getBefore();\n-        final ConnObjectTO after = propTO.getAfter();\n+        final ConnObjectTO before = propTO.getBeforeObj();\n+        final ConnObjectTO after = propTO.getAfterObj();\n \n         // sorted in reversed presentation order\n         final List<String> head = Arrays.asList(new String[] { \"__PASSWORD__\", \"__ENABLE__\", \"__UID__\", \"__NAME__\" });"},{"sha":"a71c183e61ee0338535883d9d00912ebe73ea0db","filename":"console/src/main/java/org/apache/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":15,"deletions":3,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -20,23 +20,35 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import org.springframework.stereotype.Component;\n import org.apache.syncope.client.to.ResourceTO;\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.SyncopeSession;\n+import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Resources services.\n  */\n @Component\n public class ResourceRestClient extends AbstractBaseRestClient {\n \n+    public List<String> getPropagationActionsClasses() {\n+        List<String> actions = null;\n+\n+        try {\n+            actions = Arrays.asList(SyncopeSession.get().getRestTemplate().getForObject(\n+                    baseURL + \"resource/propagationActionsClasses.json\", String[].class));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While getting all propagation actions classes\", e);\n+        }\n+        return actions;\n+    }\n+\n     public List<ResourceTO> getAllResources() {\n         List<ResourceTO> resources = null;\n \n         try {\n-            resources = Arrays.asList(SyncopeSession.get().getRestTemplate().getForObject\n-                    (baseURL + \"resource/list.json\", ResourceTO[].class));\n+            resources = Arrays.asList(SyncopeSession.get().getRestTemplate().\n+                    getForObject(baseURL + \"resource/list.json\", ResourceTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading all resources\", e);\n         }"},{"sha":"00d72b531730af8e347af75c306ccf62b4f6b5d7","filename":"console/src/main/java/org/apache/syncope/console/rest/TaskRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -21,7 +21,6 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import org.springframework.stereotype.Component;\n import org.apache.syncope.client.to.NotificationTaskTO;\n import org.apache.syncope.client.to.PropagationTaskTO;\n import org.apache.syncope.client.to.SchedTaskTO;\n@@ -30,6 +29,7 @@\n import org.apache.syncope.client.to.TaskTO;\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.SyncopeSession;\n+import org.springframework.stereotype.Component;\n \n /**\n  * Console client for invoking Rest Tasks services."},{"sha":"112cca47dd08dff4937be797cd76356c9243da69","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -53,4 +53,5 @@ resetToken=Reset Token\n \n success_connection=Successful connection\n error_connection=Connection failure\n-check=Check connection\n\\ No newline at end of file\n+check=Check connection\n+actionsClass=Actions class"},{"sha":"5d111f851c3b5f6dc1bc07e7f741d1673bc6ff5c","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -55,3 +55,4 @@ resetToken=Reset Token\n success_connection=Connessione avvenuta con successo\n error_connection=Connessione non riuscita\n check=Verifica connessione\n+actionsClass=Classe azioni"},{"sha":"d8629c0a04a12d4b6e34e063374f2b90d2e540e2","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ResourceDetailsPanel.html","status":"modified","additions":106,"deletions":97,"changes":203,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -13,111 +13,120 @@\n  under the License.\n -->\n <html>\n-    <wicket:panel>\n-        <div id=\"formtable\">\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"name\"><wicket:message key=\"name\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"name\">[name]</span>\n-                </div>\n-            </div>\n+  <wicket:panel>\n+    <div id=\"formtable\">\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"name\"><wicket:message key=\"name\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"name\">[name]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"connector\"><wicket:message key=\"connector\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"connector\">[connector]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"connector\"><wicket:message key=\"connector\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"connector\">[connector]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"enforceMandatoryCondition\"><wicket:message key=\"enforceMandatoryCondition\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"enforceMandatoryCondition\">[enforceMandatoryCondition]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"enforceMandatoryCondition\"><wicket:message key=\"enforceMandatoryCondition\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"enforceMandatoryCondition\">[enforceMandatoryCondition]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"propagationPrimary\"><wicket:message key=\"propagationPrimary\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"propagationPrimary\">[propagationPrimary]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"propagationPrimary\"><wicket:message key=\"propagationPrimary\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"propagationPrimary\">[propagationPrimary]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"propagationPriority\"><wicket:message key=\"propagationPriority\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"propagationPriority\">[propagationPriority]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"propagationPriority\"><wicket:message key=\"propagationPriority\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"propagationPriority\">[propagationPriority]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"propagationMode\"><wicket:message key=\"propagationMode\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"propagationMode\">[propagationMode]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"propagationMode\"><wicket:message key=\"propagationMode\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"propagationMode\">[propagationMode]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"createTraceLevel\"><wicket:message key=\"createTraceLevel\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"createTraceLevel\">[createTraceLevel]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"actionsClassName\"><wicket:message key=\"actionsClass\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"actionsClassName\">[actionsClassName]</span>\n+        </div>\n+      </div>\n+\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"createTraceLevel\"><wicket:message key=\"createTraceLevel\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"createTraceLevel\">[createTraceLevel]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"updateTraceLevel\"><wicket:message key=\"updateTraceLevel\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"updateTraceLevel\">[updateTraceLevel]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"updateTraceLevel\"><wicket:message key=\"updateTraceLevel\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"updateTraceLevel\">[updateTraceLevel]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"deleteTraceLevel\"><wicket:message key=\"deleteTraceLevel\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"deleteTraceLevel\">[deleteTraceLevel]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"deleteTraceLevel\"><wicket:message key=\"deleteTraceLevel\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"deleteTraceLevel\">[deleteTraceLevel]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"syncTraceLevel\"><wicket:message key=\"syncTraceLevel\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"syncTraceLevel\">[syncTraceLevel]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"syncTraceLevel\"><wicket:message key=\"syncTraceLevel\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"syncTraceLevel\">[syncTraceLevel]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label medium_fixedsize\">\n-                    <label for=\"resetToken\"><wicket:message key=\"resetToken\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"resetToken\">[resetToken]</span>\n-                </div>\n-            </div>\n-        </div>\n-        <script type=\"text/javascript\">\n-            $(function() {\n-                $('div#resource div#formtable div.tablerow:even').addClass(\"alt\");\n-            });\n-        </script>\n-    </wicket:panel>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label medium_fixedsize\">\n+          <label for=\"resetToken\"><wicket:message key=\"resetToken\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"resetToken\">[resetToken]</span>\n+        </div>\n+      </div>\n+    </div>\n+    <script type=\"text/javascript\">\n+      $(function() {\n+        $('div#resource div#formtable div.tablerow:even').addClass(\"alt\");\n+      });\n+    </script>\n+  </wicket:panel>\n </html>"},{"sha":"ca4677796cb9f3b918ad86dd725946fe01df8baf","filename":"core/src/main/java/org/apache/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":9,"deletions":15,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -35,8 +35,6 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n-import org.springframework.context.ConfigurableApplicationContext;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -57,12 +55,6 @@ public class ConnInstanceLoader {\n     @Autowired\n     private ResourceDataBinder resourceDataBinder;\n \n-    private DefaultListableBeanFactory getBeanFactory() {\n-        ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n-\n-        return (DefaultListableBeanFactory) context.getBeanFactory();\n-    }\n-\n     private String getBeanName(final ExternalResource resource) {\n         return String.format(\"connInstance-%d-%s\", resource.getConnector().getId(), resource.getName());\n     }\n@@ -72,18 +64,19 @@ private String getBeanName(final ExternalResource resource) {\n      *\n      * @param resource the resource.\n      * @return live connector bran for given resource\n-     * @throws BeansException in case the connector is not registered in the context\n+     * @throws BeansException if there is any problem with Spring\n+     * @throws NotFoundException if the connector is not registered in the context\n      */\n     public ConnectorFacadeProxy getConnector(final ExternalResource resource)\n             throws BeansException, NotFoundException {\n \n         // Try to re-create connector bean from underlying resource\n         // (useful for managing failover scenarios)\n-        if (!getBeanFactory().containsBean(getBeanName(resource))) {\n+        if (!ApplicationContextProvider.getBeanFactory().containsBean(getBeanName(resource))) {\n             registerConnector(resource);\n         }\n \n-        return (ConnectorFacadeProxy) getBeanFactory().getBean(getBeanName(resource));\n+        return (ConnectorFacadeProxy) ApplicationContextProvider.getBeanFactory().getBean(getBeanName(resource));\n     }\n \n     public ConnectorFacadeProxy createConnectorBean(final ExternalResource resource)\n@@ -121,16 +114,16 @@ public void registerConnector(final ExternalResource resource)\n \n         final String beanName = getBeanName(resource);\n \n-        if (getBeanFactory().containsSingleton(beanName)) {\n+        if (ApplicationContextProvider.getBeanFactory().containsSingleton(beanName)) {\n             unregisterConnector(beanName);\n         }\n \n-        getBeanFactory().registerSingleton(beanName, connector);\n+        ApplicationContextProvider.getBeanFactory().registerSingleton(beanName, connector);\n         LOG.debug(\"Successfully registered bean {}\", beanName);\n     }\n \n     public void unregisterConnector(final String id) {\n-        getBeanFactory().destroySingleton(id);\n+        ApplicationContextProvider.getBeanFactory().destroySingleton(id);\n     }\n \n     @Transactional(readOnly = true)\n@@ -150,6 +143,7 @@ public void load() {\n             }\n         }\n \n-        LOG.info(\"Done loading {} connectors.\", getBeanFactory().getBeansOfType(ConnectorFacadeProxy.class).size());\n+        LOG.info(\"Done loading {} connectors.\", ApplicationContextProvider.getBeanFactory().\n+                getBeansOfType(ConnectorFacadeProxy.class).size());\n     }\n }"},{"sha":"c9b558001b85537b5b811ef415d1b1594281f9db","filename":"core/src/main/java/org/apache/syncope/core/init/ImplementationClassNamesLoader.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.core.persistence.validation.attrvalue.Validator;\n import org.apache.syncope.core.report.Reportlet;\n import org.apache.syncope.core.notification.NotificationJob;\n+import org.apache.syncope.core.propagation.PropagationActions;\n import org.apache.syncope.core.report.ReportJob;\n import org.apache.syncope.core.sync.SyncJob;\n import org.apache.syncope.core.sync.SyncActions;\n@@ -52,6 +53,7 @@ public enum Type {\n         REPORTLET,\n         JOB,\n         SYNC_ACTIONS,\n+        PROPAGATION_ACTIONS,\n         VALIDATOR\n \n     }\n@@ -98,6 +100,10 @@ public void load() {\n                         classNames.get(Type.SYNC_ACTIONS).add(metadata.getClassName());\n                     }\n \n+                    if (interfaces.contains(PropagationActions.class) && !metadata.isAbstract()) {\n+                        classNames.get(Type.PROPAGATION_ACTIONS).add(metadata.getClassName());\n+                    }\n+\n                     if (interfaces.contains(Validator.class) && !metadata.isAbstract()) {\n                         classNames.get(Type.VALIDATOR).add(metadata.getClassName());\n                     }"},{"sha":"e01baf74693a72cc3f04e714b358a8ef9fae82f7","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":9,"deletions":16,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -51,8 +51,6 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n-import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n-import org.springframework.context.ConfigurableApplicationContext;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -74,12 +72,6 @@ public class JobInstanceLoader {\n     @Autowired\n     private ConfDAO confDAO;\n \n-    private DefaultListableBeanFactory getBeanFactory() {\n-        ConfigurableApplicationContext ctx = ApplicationContextProvider.getApplicationContext();\n-\n-        return (DefaultListableBeanFactory) ctx.getBeanFactory();\n-    }\n-\n     private static Long getIdFromJobName(final String name, final String pattern, final int prefixLength) {\n         Long result = null;\n \n@@ -143,7 +135,7 @@ private void registerJob(final String jobName, final Job jobInstance, final Stri\n         unregisterJob(jobName);\n \n         // 1. Job bean\n-        getBeanFactory().registerSingleton(jobName, jobInstance);\n+        ApplicationContextProvider.getBeanFactory().registerSingleton(jobName, jobInstance);\n \n         // 2. JobDetail bean\n         JobDetailImpl jobDetail = new JobDetailImpl();\n@@ -167,7 +159,8 @@ public void registerJob(final Task task, final String jobClassName, final String\n             throws ClassNotFoundException, SchedulerException, ParseException {\n \n         Class jobClass = Class.forName(jobClassName);\n-        Job jobInstance = (Job) getBeanFactory().createBean(jobClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+        Job jobInstance = (Job) ApplicationContextProvider.getBeanFactory().\n+                createBean(jobClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n         if (jobInstance instanceof AbstractTaskJob) {\n             ((AbstractTaskJob) jobInstance).setTaskId(task.getId());\n         }\n@@ -182,8 +175,8 @@ public void registerJob(final Task task, final String jobClassName, final String\n                                 syncActionsClass.getName(), e});\n                 }\n             }\n-            SyncActions syncActions = (SyncActions) getBeanFactory().createBean(syncActionsClass,\n-                    AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n+            SyncActions syncActions = (SyncActions) ApplicationContextProvider.getBeanFactory().\n+                    createBean(syncActionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n \n             ((SyncJob) jobInstance).setActions(syncActions);\n         }\n@@ -192,8 +185,8 @@ public void registerJob(final Task task, final String jobClassName, final String\n     }\n \n     public void registerJob(final Report report) throws SchedulerException, ParseException {\n-        Job jobInstance = (Job) getBeanFactory().createBean(ReportJob.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE,\n-                false);\n+        Job jobInstance = (Job) ApplicationContextProvider.getBeanFactory().\n+                createBean(ReportJob.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n         ((ReportJob) jobInstance).setReportId(report.getId());\n \n         registerJob(getJobName(report), jobInstance, report.getCronExpression());\n@@ -207,8 +200,8 @@ private void unregisterJob(final String jobName) {\n             LOG.error(\"Could not remove job \" + jobName, e);\n         }\n \n-        if (getBeanFactory().containsSingleton(jobName)) {\n-            getBeanFactory().destroySingleton(jobName);\n+        if (ApplicationContextProvider.getBeanFactory().containsSingleton(jobName)) {\n+            ApplicationContextProvider.getBeanFactory().destroySingleton(jobName);\n         }\n     }\n "},{"sha":"2376ea92c1646114212e29158647136b177d0f6f","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -147,6 +147,11 @@ public class ExternalResource extends AbstractBaseBean {\n     @Lob\n     private String serializedSyncToken;\n \n+    /**\n+     * (Optional) class for PropagationAction.\n+     */\n+    private String actionsClassName;\n+\n     /**\n      * Default constructor.\n      */\n@@ -349,4 +354,12 @@ public void setSerializedSyncToken(final String serializedSyncToken) {\n     public void setSyncToken(final SyncToken syncToken) {\n         serializedSyncToken = XMLSerializer.serialize(syncToken);\n     }\n+\n+    public String getActionsClassName() {\n+        return actionsClassName;\n+    }\n+\n+    public void setActionsClassName(final String actionsClassName) {\n+        this.actionsClassName = actionsClassName;\n+    }\n }"},{"sha":"629b3b1466f4589b17317c1d90cb0b49761742de","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ExternalResourceValidator.java","status":"modified","additions":24,"deletions":2,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -20,8 +20,10 @@\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-import org.apache.syncope.core.persistence.beans.SchemaMapping;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.SchemaMapping;\n+import org.apache.syncope.core.propagation.PropagationActions;\n import org.apache.syncope.types.EntityViolationType;\n \n public class ExternalResourceValidator extends AbstractValidator implements\n@@ -51,9 +53,29 @@ public boolean isValid(final ExternalResource object, final ConstraintValidatorC\n                 LOG.error(\"Mappings for \" + object + \" have 0 or >1 account ids\");\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidAccountIdCount.toString())\n+                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidResource.toString())\n                         .addNode(object + \".accountIds.size==\" + accountIds).addConstraintViolation();\n             }\n+\n+            if (StringUtils.isNotBlank(object.getActionsClassName())) {\n+                Class<?> actionsClass = null;\n+                boolean isAssignable = false;\n+                try {\n+                    actionsClass = Class.forName(object.getActionsClassName());\n+                    isAssignable = PropagationActions.class.isAssignableFrom(actionsClass);\n+                } catch (Exception e) {\n+                    LOG.error(\"Invalid PropagationActions specified\", e);\n+                    isValid = false;\n+                }\n+\n+                if (actionsClass == null || !isAssignable) {\n+                    isValid = false;\n+\n+                    context.disableDefaultConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidResource.toString())\n+                            .addNode(object + \".actionsClassName is not valid\").addConstraintViolation();\n+                }\n+            }\n         }\n \n         return isValid;"},{"sha":"2a06e6bb5034e3c94d0721c395eb589282ac2586","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncTaskValidator.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -60,17 +60,17 @@ public boolean isValid(final SyncTask object, final ConstraintValidatorContext c\n                 }\n \n                 if (StringUtils.isNotBlank(object.getActionsClassName())) {\n-                    Class<?> syncActionsClass = null;\n+                    Class<?> actionsClass = null;\n                     boolean isAssignable = false;\n                     try {\n-                        syncActionsClass = Class.forName(object.getActionsClassName());\n-                        isAssignable = SyncActions.class.isAssignableFrom(syncActionsClass);\n+                        actionsClass = Class.forName(object.getActionsClassName());\n+                        isAssignable = SyncActions.class.isAssignableFrom(actionsClass);\n                     } catch (Exception e) {\n                         LOG.error(\"Invalid SyncActions specified\", e);\n                         isValid = false;\n                     }\n \n-                    if (syncActionsClass == null || !isAssignable) {\n+                    if (actionsClass == null || !isAssignable) {\n                         isValid = false;\n \n                         context.disableDefaultConstraintViolation();"},{"sha":"8a2e4db1dfd8bc79347c08489582860044bb8fc8","filename":"core/src/main/java/org/apache/syncope/core/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":152,"deletions":127,"changes":279,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -27,11 +27,13 @@\n import java.util.Set;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.core.init.ConnInstanceLoader;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.types.PropagationMode;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n@@ -46,8 +48,8 @@\n import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.NoSuchBeanDefinitionException;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(rollbackFor = {Throwable.class})\n@@ -81,154 +83,168 @@ public TaskExec execute(final PropagationTask task) {\n         return execute(task, null);\n     }\n \n+    protected PropagationActions getPropagationActions(final ExternalResource resource) {\n+        PropagationActions result = null;\n+\n+        if (StringUtils.isNotBlank(resource.getActionsClassName())) {\n+            try {\n+                Class<?> actionsClass = Class.forName(resource.getActionsClassName());\n+                result = (PropagationActions) ApplicationContextProvider.getBeanFactory().\n+                        createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n+            } catch (ClassNotFoundException e) {\n+                LOG.error(\"Invalid PropagationAction class name '{}' for resource {}\",\n+                        new Object[]{resource, resource.getActionsClassName(), e});\n+            }\n+        }\n+\n+        if (result == null) {\n+            result = new DefaultPropagationActions();\n+        }\n+\n+        return result;\n+    }\n+\n     @Override\n     public TaskExec execute(final PropagationTask task, final PropagationHandler handler) {\n+        final PropagationActions actions = getPropagationActions(task.getResource());\n+\n         final Date startDate = new Date();\n \n-        TaskExec execution = new TaskExec();\n+        final TaskExec execution = new TaskExec();\n         execution.setStatus(PropagationTaskExecStatus.CREATED.name());\n \n         String taskExecutionMessage = null;\n \n         // Flag to state whether any propagation has been attempted\n         Set<String> propagationAttempted = new HashSet<String>();\n \n-        ConnectorObject before = null;\n-        ConnectorObject after = null;\n+        ConnectorObject beforeObj = null;\n+        ConnectorObject afterObj = null;\n \n+        ConnectorFacadeProxy connector = null;\n         try {\n-            final ConnectorFacadeProxy connector = connLoader.getConnector(task.getResource());\n-            if (connector == null) {\n-                throw new NoSuchBeanDefinitionException(String.format(\n-                        \"Connector instance bean for resource %s not found\", task.getResource()));\n-            }\n+            connector = connLoader.getConnector(task.getResource());\n \n             // Try to read user BEFORE any actual operation\n-            before = getRemoteObject(connector, task, false);\n+            beforeObj = getRemoteObject(connector, task, false);\n \n-            try {\n-                switch (task.getPropagationOperation()) {\n-                    case CREATE:\n-                    case UPDATE:\n-                        // set of attributes to be propagated\n-                        final Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n-\n-                        if (before == null) {\n-                            // 1. get accountId\n-                            final String accountId = task.getAccountId();\n-\n-                            // 2. get name\n-                            final Name name = (Name) AttributeUtil.find(Name.NAME, attributes);\n-\n-                            // 3. check if:\n-                            //      * accountId is not blank;\n-                            //      * accountId is not equal to Name.\n-                            if (StringUtils.isNotBlank(accountId)\n-                                    && (name == null || !accountId.equals(name.getNameValue()))) {\n-\n-                                // 3.a retrieve uid\n-                                final Uid uid = (Uid) AttributeUtil.find(Uid.NAME, attributes);\n-\n-                                // 3.b add Uid if not provided\n-                                if (uid == null) {\n-                                    attributes.add(AttributeBuilder.build(Uid.NAME, Collections.singleton(accountId)));\n-                                }\n-                            }\n+            actions.before(task, beforeObj);\n \n-                            // 4. provision entry\n-                            connector.create(task.getPropagationMode(), ObjectClass.ACCOUNT, attributes, null,\n-                                    propagationAttempted);\n-                        } else {\n+            switch (task.getPropagationOperation()) {\n+                case CREATE:\n+                case UPDATE:\n+                    // set of attributes to be propagated\n+                    final Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n+\n+                    if (beforeObj == null) {\n+                        // 1. get accountId\n+                        final String accountId = task.getAccountId();\n \n-                            // 1. check if rename is really required\n-                            final Name newName = (Name) AttributeUtil.find(Name.NAME, attributes);\n+                        // 2. get name\n+                        final Name name = (Name) AttributeUtil.find(Name.NAME, attributes);\n \n-                            LOG.debug(\"Rename required with value {}\", newName);\n+                        // 3. check if:\n+                        //      * accountId is not blank;\n+                        //      * accountId is not equal to Name.\n+                        if (StringUtils.isNotBlank(accountId)\n+                                && (name == null || !accountId.equals(name.getNameValue()))) {\n \n-                            if (newName != null && newName.equals(before.getName())\n-                                    && !before.getUid().getUidValue().equals(newName.getNameValue())) {\n+                            // 3.a retrieve uid\n+                            final Uid uid = (Uid) AttributeUtil.find(Uid.NAME, attributes);\n \n-                                LOG.debug(\"Remote object name unchanged\");\n-                                attributes.remove(newName);\n+                            // 3.b add Uid if not provided\n+                            if (uid == null) {\n+                                attributes.add(AttributeBuilder.build(Uid.NAME, Collections.singleton(accountId)));\n                             }\n+                        }\n \n-                            LOG.debug(\"Attributes to be replaced {}\", attributes);\n+                        // 4. provision entry\n+                        connector.create(task.getPropagationMode(), ObjectClass.ACCOUNT, attributes, null,\n+                                propagationAttempted);\n+                    } else {\n \n-                            // 2. update with a new \"normalized\" attribute set\n-                            connector.update(task.getPropagationMode(), ObjectClass.ACCOUNT, before.getUid(),\n-                                    attributes, null, propagationAttempted);\n-                        }\n-                        break;\n+                        // 1. check if rename is really required\n+                        final Name newName = (Name) AttributeUtil.find(Name.NAME, attributes);\n \n-                    case DELETE:\n-                        if (before == null) {\n-                            LOG.debug(\"{} not found on external resource: ignoring delete\", task.getAccountId());\n-                        } else {\n-                            /*\n-                             * We must choose here whether to\n-                             *  a. actually delete the provided user from the external resource\n-                             *  b. just update the provided user data onto the external resource\n-                             *\n-                             * (a) happens when either there is no user associated with the PropagationTask (this takes\n-                             * place when the task is generated via UserController.delete()) or the provided updated\n-                             * user hasn't the current resource assigned (when the task is generated via\n-                             * UserController.update()).\n-                             *\n-                             * (b) happens when the provided updated user does have the current resource assigned\n-                             * (when the task is generated via UserController.update()): this basically means that\n-                             * before such update, this user used to have the current resource assigned by more than\n-                             * one mean (for example, two different memberships with the same resource).\n-                             */\n-\n-                            SyncopeUser user = null;\n-                            if (task.getSyncopeUser() != null) {\n-                                try {\n-                                    user = getSyncopeUser(task.getSyncopeUser().getId());\n-                                } catch (NotFoundException e) {\n-                                    LOG.warn(\"Requesting to delete a non-existing user from {}\",\n-                                            task.getResource().getName(), e);\n-                                }\n-                            }\n+                        LOG.debug(\"Rename required with value {}\", newName);\n \n-                            if (user == null || !user.getResourceNames().contains(task.getResource().getName())) {\n-                                LOG.debug(\"Perform deprovisioning on {}\", task.getResource().getName());\n-\n-                                connector.delete(\n-                                        task.getPropagationMode(),\n-                                        ObjectClass.ACCOUNT,\n-                                        before.getUid(),\n-                                        null,\n-                                        propagationAttempted);\n-                            } else {\n-                                LOG.debug(\"Update remote object on {}\", task.getResource().getName());\n-\n-                                connector.update(\n-                                        task.getPropagationMode(),\n-                                        ObjectClass.ACCOUNT,\n-                                        before.getUid(),\n-                                        task.getAttributes(),\n-                                        null,\n-                                        propagationAttempted);\n-                            }\n+                        if (newName != null && newName.equals(beforeObj.getName())\n+                                && !beforeObj.getUid().getUidValue().equals(newName.getNameValue())) {\n+\n+                            LOG.debug(\"Remote object name unchanged\");\n+                            attributes.remove(newName);\n                         }\n \n-                        break;\n+                        LOG.debug(\"Attributes to be replaced {}\", attributes);\n+\n+                        // 2. update with a new \"normalized\" attribute set\n+                        connector.update(task.getPropagationMode(), ObjectClass.ACCOUNT, beforeObj.getUid(),\n+                                attributes, null, propagationAttempted);\n+                    }\n+                    break;\n+\n+                case DELETE:\n+                    if (beforeObj == null) {\n+                        LOG.debug(\"{} not found on external resource: ignoring delete\", task.getAccountId());\n+                    } else {\n+                        /*\n+                         * We must choose here whether to\n+                         *  a. actually delete the provided user from the external resource\n+                         *  b. just update the provided user data onto the external resource\n+                         *\n+                         * (a) happens when either there is no user associated with the PropagationTask (this takes\n+                         * place when the task is generated via UserController.delete()) or the provided updated\n+                         * user hasn't the current resource assigned (when the task is generated via\n+                         * UserController.update()).\n+                         *\n+                         * (b) happens when the provided updated user does have the current resource assigned\n+                         * (when the task is generated via UserController.update()): this basically means that\n+                         * before such update, this user used to have the current resource assigned by more than\n+                         * one mean (for example, two different memberships with the same resource).\n+                         */\n+\n+                        SyncopeUser user = null;\n+                        if (task.getSyncopeUser() != null) {\n+                            try {\n+                                user = getSyncopeUser(task.getSyncopeUser().getId());\n+                            } catch (NotFoundException e) {\n+                                LOG.warn(\"Requesting to delete a non-existing user from {}\",\n+                                        task.getResource().getName(), e);\n+                            }\n+                        }\n \n-                    default:\n-                }\n+                        if (user == null || !user.getResourceNames().contains(task.getResource().getName())) {\n+                            LOG.debug(\"Perform deprovisioning on {}\", task.getResource().getName());\n \n-                execution.setStatus(task.getPropagationMode() == PropagationMode.ONE_PHASE\n-                        ? PropagationTaskExecStatus.SUCCESS.name()\n-                        : PropagationTaskExecStatus.SUBMITTED.name());\n+                            connector.delete(\n+                                    task.getPropagationMode(),\n+                                    ObjectClass.ACCOUNT,\n+                                    beforeObj.getUid(),\n+                                    null,\n+                                    propagationAttempted);\n+                        } else {\n+                            LOG.debug(\"Update remote object on {}\", task.getResource().getName());\n+\n+                            connector.update(\n+                                    task.getPropagationMode(),\n+                                    ObjectClass.ACCOUNT,\n+                                    beforeObj.getUid(),\n+                                    task.getAttributes(),\n+                                    null,\n+                                    propagationAttempted);\n+                        }\n+                    }\n \n-                LOG.debug(\"Successfully propagated to {}\", task.getResource());\n+                    break;\n \n-                // Try to read user AFTER any actual operation\n-                after = getRemoteObject(connector, task, true);\n-            } catch (Exception e) {\n-                after = getRemoteObject(connector, task, false);\n-                throw e;\n+                default:\n             }\n+\n+            execution.setStatus(task.getPropagationMode() == PropagationMode.ONE_PHASE\n+                    ? PropagationTaskExecStatus.SUCCESS.name()\n+                    : PropagationTaskExecStatus.SUBMITTED.name());\n+\n+            LOG.debug(\"Successfully propagated to {}\", task.getResource());\n         } catch (Exception e) {\n             LOG.error(\"Exception during provision on resource \" + task.getResource().getName(), e);\n \n@@ -251,6 +267,11 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n \n             propagationAttempted.add(task.getPropagationOperation().name().toLowerCase());\n         } finally {\n+            // Try to read user AFTER any actual operation\n+            if (connector != null) {\n+                afterObj = getRemoteObject(connector, task, true);\n+            }\n+\n             LOG.debug(\"Update execution for {}\", task);\n \n             execution.setStartDate(startDate);\n@@ -281,10 +302,12 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n             handler.handle(\n                     task.getResource().getName(),\n                     PropagationTaskExecStatus.valueOf(execution.getStatus()),\n-                    before,\n-                    after);\n+                    beforeObj,\n+                    afterObj);\n         }\n \n+        actions.after(task, execution, afterObj);\n+\n         return execution;\n     }\n \n@@ -316,7 +339,6 @@ protected SyncopeUser getSyncopeUser(final Long userId)\n      * @return true if execution has to be store, false otherwise\n      */\n     protected boolean hasToBeregistered(final PropagationTask task, final TaskExec execution) {\n-\n         boolean result;\n \n         final boolean failed = !PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful();\n@@ -346,7 +368,7 @@ protected boolean hasToBeregistered(final PropagationTask task, final TaskExec e\n     }\n \n     /**\n-     * Get remote object.\n+     * Get remote object for given task.\n      *\n      * @param connector connector facade proxy.\n      * @param task current propagation task.\n@@ -355,16 +377,19 @@ protected boolean hasToBeregistered(final PropagationTask task, final TaskExec e\n      */\n     protected ConnectorObject getRemoteObject(final ConnectorFacadeProxy connector, final PropagationTask task,\n             final boolean latest) {\n-        try {\n \n-            return connector.getObject(task.getPropagationMode(), task.getPropagationOperation(), ObjectClass.ACCOUNT,\n-                    new Uid(latest || task.getOldAccountId() == null\n-                    ? task.getAccountId()\n-                    : task.getOldAccountId()), connector.getOperationOptions(task.getResource()));\n+        String accountId = latest || task.getOldAccountId() == null\n+                ? task.getAccountId()\n+                : task.getOldAccountId();\n \n+        ConnectorObject obj = null;\n+        try {\n+            obj = connector.getObject(task.getPropagationMode(), task.getPropagationOperation(), ObjectClass.ACCOUNT,\n+                    new Uid(accountId), connector.getOperationOptions(task.getResource()));\n         } catch (RuntimeException ignore) {\n-            LOG.debug(\"Resolving username\", ignore);\n-            return null;\n+            LOG.debug(\"While resolving {}\", accountId, ignore);\n         }\n+\n+        return obj;\n     }\n }"},{"sha":"bdc72d2539353df41408e867538eb08b53b1bc23","filename":"core/src/main/java/org/apache/syncope/core/propagation/DefaultPropagationActions.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FDefaultPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FDefaultPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FDefaultPropagationActions.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.propagation;\n+\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.TaskExec;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n+\n+/**\n+ * Default (empty) implementation of PropagationActions.\n+ */\n+public class DefaultPropagationActions implements PropagationActions {\n+\n+    @Override\n+    public void before(final PropagationTask task, final ConnectorObject beforeObj) {\n+    }\n+\n+    @Override\n+    public void after(final PropagationTask task, final TaskExec execution, final ConnectorObject afterObj) {\n+    }\n+}"},{"sha":"8640b2aa8c553dcfe0b44f71180893bcc049e750","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationActions.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationActions.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.propagation;\n+\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.TaskExec;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n+\n+public interface PropagationActions {\n+\n+    void before(PropagationTask task, ConnectorObject beforeObj);\n+\n+    void after(PropagationTask task, TaskExec execution, ConnectorObject afterObj);\n+}"},{"sha":"7871d3bb9aca0030df7eb132e593285342bf7f0b","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationHandler.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationHandler.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -18,23 +18,23 @@\n  */\n package org.apache.syncope.core.propagation;\n \n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n \n /**\n  * Handle propagation executions.\n  */\n-public abstract class PropagationHandler {\n+public interface PropagationHandler {\n \n     /**\n      *\n      * Handle propagation executions.\n      *\n      * @param resourceName resource name.\n-     * @param executionStatus propagation execution status.\n-     * @param before retrieved connector object before operation execution.\n-     * @param after retrieved connector object after operation execution.\n+     * @param execStatus propagation execution status.\n+     * @param beforeObj retrieved connector object before operation execution.\n+     * @param afterObj retrieved connector object after operation execution.\n      */\n-    public abstract void handle(final String resourceName, final PropagationTaskExecStatus executionStatus,\n-            final ConnectorObject before, final ConnectorObject after);\n+    void handle(String resourceName, PropagationTaskExecStatus execStatus,\n+            ConnectorObject beforeObj, ConnectorObject afterObj);\n }"},{"sha":"76e1312d002e0ff1df0d5a80f501d6e9225a1829","filename":"core/src/main/java/org/apache/syncope/core/report/ReportJob.java","status":"modified","additions":8,"deletions":12,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FReportJob.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -36,12 +36,10 @@\n import org.apache.syncope.core.persistence.beans.ReportExec;\n import org.apache.syncope.core.persistence.dao.ReportDAO;\n import org.apache.syncope.core.persistence.dao.ReportExecDAO;\n-import org.apache.syncope.core.report.ReportException;\n-import org.apache.syncope.core.report.Reportlet;\n-import org.apache.syncope.core.rest.data.ReportDataBinder;\n import static org.apache.syncope.core.report.ReportXMLConst.ATTR_NAME;\n import static org.apache.syncope.core.report.ReportXMLConst.ELEMENT_REPORT;\n import static org.apache.syncope.core.report.ReportXMLConst.XSD_STRING;\n+import org.apache.syncope.core.rest.data.ReportDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.types.ReportExecStatus;\n import org.quartz.DisallowConcurrentExecution;\n@@ -51,7 +49,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.xml.sax.helpers.AttributesImpl;\n \n@@ -78,6 +75,9 @@ public class ReportJob implements Job {\n     @Autowired\n     private ReportExecDAO reportExecDAO;\n \n+    /**\n+     * Report data binder.\n+     */\n     @Autowired\n     private ReportDataBinder dataBinder;\n \n@@ -97,7 +97,6 @@ public void setReportId(final Long reportId) {\n \n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n-\n         Report report = reportDAO.find(reportId);\n         if (report == null) {\n             throw new JobExecutionException(\"Report \" + reportId + \" not found\");\n@@ -120,8 +119,8 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n         ZipOutputStream zos = new ZipOutputStream(baos);\n         zos.setLevel(Deflater.BEST_COMPRESSION);\n         try {\n-            SAXTransformerFactory transformerFactory = (SAXTransformerFactory) SAXTransformerFactory.newInstance();\n-            handler = transformerFactory.newTransformerHandler();\n+            SAXTransformerFactory tFactory = (SAXTransformerFactory) SAXTransformerFactory.newInstance();\n+            handler = tFactory.newTransformerHandler();\n             Transformer serializer = handler.getTransformer();\n             serializer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n             serializer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n@@ -138,9 +137,6 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n         execution.setStatus(ReportExecStatus.RUNNING);\n         execution = reportExecDAO.save(execution);\n \n-        ConfigurableListableBeanFactory beanFactory =\n-                ApplicationContextProvider.getApplicationContext().getBeanFactory();\n-\n         // 3. actual report execution\n         StringBuilder reportExecutionMessage = new StringBuilder();\n         StringWriter exceptionWriter = new StringWriter();\n@@ -156,8 +152,8 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n                 Class<Reportlet> reportletClass =\n                         dataBinder.findReportletClassHavingConfClass(reportletConf.getClass());\n                 if (reportletClass != null) {\n-                    Reportlet autowired = (Reportlet) beanFactory.createBean(reportletClass,\n-                            AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+                    Reportlet autowired = (Reportlet) ApplicationContextProvider.getBeanFactory().\n+                            createBean(reportletClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n                     autowired.setConf(reportletConf);\n \n                     // invoke reportlet"},{"sha":"176df1c3e9524fca7b2a736e791b6fd5067841dd","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -28,14 +28,14 @@\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.init.ConnInstanceLoader;\n+import org.apache.syncope.core.init.ImplementationClassNamesLoader;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n-import org.apache.syncope.core.rest.data.ConnInstanceDataBinder;\n import org.apache.syncope.core.rest.data.ResourceDataBinder;\n import org.apache.syncope.core.util.ConnBundleManager;\n import org.apache.syncope.core.util.ConnObjectUtil;\n@@ -81,7 +81,7 @@ public class ResourceController extends AbstractController {\n     private ResourceDataBinder binder;\n \n     @Autowired\n-    private ConnInstanceDataBinder connInstancebinder;\n+    private ImplementationClassNamesLoader classNamesLoader;\n \n     /**\n      * ConnectorObject util.\n@@ -169,6 +169,18 @@ public ResourceTO read(@PathVariable(\"resourceName\") final String resourceName)\n         return binder.getResourceTO(resource);\n     }\n \n+    @PreAuthorize(\"hasRole('RESOURCE_READ')\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/propagationActionsClasses\")\n+    public ModelAndView getPropagationActionsClasses() {\n+        Set<String> actionsClasses = classNamesLoader.getClassNames(\n+                ImplementationClassNamesLoader.Type.PROPAGATION_ACTIONS);\n+\n+        auditManager.audit(Category.resource, AuditElements.ResourceSubCategory.getPropagationActionsClasses,\n+                Result.success, \"Successfully listed all PropagationActions classes: \" + actionsClasses.size());\n+\n+        return new ModelAndView().addObject(actionsClasses);\n+    }\n+\n     @Transactional(readOnly = true)\n     @RequestMapping(method = RequestMethod.GET, value = \"/list\")\n     public List<ResourceTO> list(@RequestParam(required = false, value = \"connInstanceId\") final Long connInstanceId)"},{"sha":"79172bf00b2aac09fff9f0c2b109bedba4396032","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -300,18 +300,18 @@ public UserTO create(final HttpServletResponse response, @RequestBody final User\n \n             @Override\n             public void handle(final String resourceName, final PropagationTaskExecStatus executionStatus,\n-                    final ConnectorObject before, final ConnectorObject after) {\n+                    final ConnectorObject beforeObj, final ConnectorObject afterObj) {\n \n                 final PropagationTO propagation = new PropagationTO();\n                 propagation.setResourceName(resourceName);\n                 propagation.setStatus(executionStatus);\n \n-                if (before != null) {\n-                    propagation.setBefore(connObjectUtil.getConnObjectTO(before));\n+                if (beforeObj != null) {\n+                    propagation.setBeforeObj(connObjectUtil.getConnObjectTO(beforeObj));\n                 }\n \n-                if (after != null) {\n-                    propagation.setAfter(connObjectUtil.getConnObjectTO(after));\n+                if (afterObj != null) {\n+                    propagation.setAfterObj(connObjectUtil.getConnObjectTO(afterObj));\n                 }\n \n                 propagations.add(propagation);\n@@ -357,11 +357,11 @@ public void handle(final String resourceName, final PropagationTaskExecStatus ex\n                 propagation.setStatus(executionStatus);\n \n                 if (before != null) {\n-                    propagation.setBefore(connObjectUtil.getConnObjectTO(before));\n+                    propagation.setBeforeObj(connObjectUtil.getConnObjectTO(before));\n                 }\n \n                 if (after != null) {\n-                    propagation.setAfter(connObjectUtil.getConnObjectTO(after));\n+                    propagation.setAfterObj(connObjectUtil.getConnObjectTO(after));\n                 }\n \n                 propagations.add(propagation);\n@@ -685,11 +685,11 @@ public void handle(final String resourceName, final PropagationTaskExecStatus ex\n                 propagation.setStatus(executionStatus);\n \n                 if (before != null) {\n-                    propagation.setBefore(connObjectUtil.getConnObjectTO(before));\n+                    propagation.setBeforeObj(connObjectUtil.getConnObjectTO(before));\n                 }\n \n                 if (after != null) {\n-                    propagation.setAfter(connObjectUtil.getConnObjectTO(after));\n+                    propagation.setAfterObj(connObjectUtil.getConnObjectTO(after));\n                 }\n \n                 userTO.addPropagationTO(propagation);"},{"sha":"623e630d555edee2d3b940c4078b10713af4e69e","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -19,11 +19,6 @@\n package org.apache.syncope.core.rest.data;\n \n import java.util.Map;\n-import org.identityconnectors.framework.api.ConfigurationProperties;\n-import org.springframework.beans.BeanUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.http.HttpStatus;\n-import org.springframework.stereotype.Component;\n import org.apache.syncope.client.to.ConnInstanceTO;\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.client.validation.SyncopeClientException;\n@@ -34,7 +29,12 @@\n import org.apache.syncope.types.ConnConfPropSchema;\n import org.apache.syncope.types.ConnConfProperty;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n+import org.identityconnectors.framework.api.ConfigurationProperties;\n import org.identityconnectors.framework.impl.api.ConfigurationPropertyImpl;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Component;\n \n @Component\n public class ConnInstanceDataBinder {\n@@ -50,8 +50,7 @@ public class ConnInstanceDataBinder {\n     public ConnInstance getConnInstance(final ConnInstanceTO connInstanceTO)\n             throws SyncopeClientCompositeErrorException {\n \n-        SyncopeClientCompositeErrorException compositeErrorException = new SyncopeClientCompositeErrorException(\n-                HttpStatus.BAD_REQUEST);\n+        SyncopeClientCompositeErrorException scee = new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n \n         SyncopeClientException requiredValuesMissing = new SyncopeClientException(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n@@ -80,11 +79,11 @@ public ConnInstance getConnInstance(final ConnInstanceTO connInstanceTO)\n         // in the composing exceptions\n \n         if (!requiredValuesMissing.isEmpty()) {\n-            compositeErrorException.addException(requiredValuesMissing);\n+            scee.addException(requiredValuesMissing);\n         }\n \n-        if (compositeErrorException.hasExceptions()) {\n-            throw compositeErrorException;\n+        if (scee.hasExceptions()) {\n+            throw scee;\n         }\n \n         return connectorInstance;"},{"sha":"4cc23791de64191f80200f92adefe4f12485419c","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":20,"deletions":24,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -25,6 +25,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.commons.lang.SerializationUtils;\n import org.apache.syncope.client.to.ResourceTO;\n import org.apache.syncope.client.to.SchemaMappingTO;\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -130,6 +131,8 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n             resource.setSerializedSyncToken(null);\n         }\n \n+        resource.setActionsClassName(resourceTO.getActionsClassName());\n+\n         return resource;\n     }\n \n@@ -193,10 +196,13 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n         resourceTO.setConnectorConfigurationProperties(resource.getConfiguration());\n         resourceTO.setSyncToken(resource.getSerializedSyncToken());\n \n+        resourceTO.setActionsClassName(resource.getActionsClassName());\n+\n         return resourceTO;\n     }\n \n-    private Set<SchemaMapping> getSchemaMappings(ExternalResource resource, List<SchemaMappingTO> mappings) {\n+    private Set<SchemaMapping> getSchemaMappings(final ExternalResource resource,\n+            final List<SchemaMappingTO> mappings) {\n \n         if (mappings == null) {\n             return null;\n@@ -215,11 +221,10 @@ private Set<SchemaMapping> getSchemaMappings(ExternalResource resource, List<Sch\n         return schemaMappings;\n     }\n \n-    private SchemaMapping getSchemaMapping(ExternalResource resource, SchemaMappingTO mappingTO)\n+    private SchemaMapping getSchemaMapping(final ExternalResource resource, final SchemaMappingTO mappingTO)\n             throws SyncopeClientCompositeErrorException {\n \n-        SyncopeClientCompositeErrorException compositeErrorException = new SyncopeClientCompositeErrorException(\n-                HttpStatus.BAD_REQUEST);\n+        SyncopeClientCompositeErrorException scce = new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n \n         SyncopeClientException requiredValuesMissing = new SyncopeClientException(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n@@ -253,7 +258,7 @@ private SchemaMapping getSchemaMapping(ExternalResource resource, SchemaMappingT\n         // Throw composite exception if there is at least one element set\n         // in the composing exceptions\n         if (!requiredValuesMissing.isEmpty()) {\n-            compositeErrorException.addException(requiredValuesMissing);\n+            scce.addException(requiredValuesMissing);\n         }\n \n         // no mandatory condition implies mandatory condition false\n@@ -266,11 +271,11 @@ private SchemaMapping getSchemaMapping(ExternalResource resource, SchemaMappingT\n \n             invalidMandatoryCondition.addElement(mappingTO.getMandatoryCondition());\n \n-            compositeErrorException.addException(invalidMandatoryCondition);\n+            scce.addException(invalidMandatoryCondition);\n         }\n \n-        if (compositeErrorException.hasExceptions()) {\n-            throw compositeErrorException;\n+        if (scce.hasExceptions()) {\n+            throw scce;\n         }\n \n         SchemaMapping mapping = new SchemaMapping();\n@@ -282,8 +287,7 @@ private SchemaMapping getSchemaMapping(ExternalResource resource, SchemaMappingT\n         return mapping;\n     }\n \n-    public List<SchemaMappingTO> getSchemaMappingTOs(Collection<SchemaMapping> mappings) {\n-\n+    public List<SchemaMappingTO> getSchemaMappingTOs(final Collection<SchemaMapping> mappings) {\n         if (mappings == null) {\n             LOG.error(\"No mapping provided.\");\n \n@@ -302,7 +306,7 @@ public List<SchemaMappingTO> getSchemaMappingTOs(Collection<SchemaMapping> mappi\n         return schemaMappingTOs;\n     }\n \n-    public SchemaMappingTO getSchemaMappingTO(SchemaMapping schemaMapping) {\n+    public SchemaMappingTO getSchemaMappingTO(final SchemaMapping schemaMapping) {\n         if (schemaMapping == null) {\n             LOG.error(\"Provided null mapping\");\n \n@@ -320,33 +324,25 @@ public SchemaMappingTO getSchemaMappingTO(SchemaMapping schemaMapping) {\n         return schemaMappingTO;\n     }\n \n-    public ConnInstance getConnInstance(ExternalResource resource)\n-            throws NotFoundException {\n-\n-        final ConnInstance connInstanceClone =\n-                (ConnInstance) org.apache.commons.lang.SerializationUtils.clone(resource.getConnector());\n+    public ConnInstance getConnInstance(final ExternalResource resource) {\n+        final ConnInstance connInstanceClone = (ConnInstance) SerializationUtils.clone(resource.getConnector());\n \n         return getConnInstance(connInstanceClone, resource.getConfiguration());\n     }\n \n     public ConnInstance getConnInstance(final ResourceTO resourceTO)\n             throws NotFoundException {\n-        ConnInstance connInstance = connInstanceDAO.find(resourceTO.getConnectorId());\n-\n-        final ConnInstance connInstanceClone =\n-                (ConnInstance) org.apache.commons.lang.SerializationUtils.clone(connInstance);\n \n+        ConnInstance connInstance = connInstanceDAO.find(resourceTO.getConnectorId());\n         if (connInstance == null) {\n             throw new NotFoundException(\"Connector '\" + resourceTO.getConnectorId() + \"'\");\n         }\n \n+        final ConnInstance connInstanceClone = (ConnInstance) SerializationUtils.clone(connInstance);\n         return getConnInstance(connInstanceClone, resourceTO.getConnConfProperties());\n     }\n \n-    private ConnInstance getConnInstance(\n-            final ConnInstance connInstance, final Set<ConnConfProperty> overridden)\n-            throws NotFoundException {\n-\n+    private ConnInstance getConnInstance(final ConnInstance connInstance, final Set<ConnConfProperty> overridden) {\n         final Set<ConnConfProperty> configuration = new HashSet<ConnConfProperty>();\n         final Map<String, ConnConfProperty> overridable = new HashMap<String, ConnConfProperty>();\n "},{"sha":"9e41b8123f1fec5332e8c6e08d8a06e7d3b21790","filename":"core/src/main/java/org/apache/syncope/core/sync/DefaultSyncActions.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -27,8 +27,6 @@\n \n /**\n  * Default (empty) implementation of SyncActions.\n- *\n- * @see SyncActions\n  */\n public class DefaultSyncActions implements SyncActions {\n "},{"sha":"937349a6685d809ae5860fbf421e5204933ec71d","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncJob.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -216,7 +216,6 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         if (!(task instanceof SyncTask)) {\n             throw new JobExecutionException(\"Task \" + taskId + \" isn't a SyncTask\");\n         }\n-\n         final SyncTask syncTask = (SyncTask) this.task;\n \n         ConnectorFacadeProxy connector;\n@@ -230,7 +229,6 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         }\n \n         final SchemaMapping accountIdMap = SchemaMappingUtil.getAccountIdMapping(syncTask.getResource().getMappings());\n-\n         if (accountIdMap == null) {\n             throw new JobExecutionException(\"Invalid account id mapping for resource \" + syncTask.getResource());\n         }\n@@ -239,8 +237,6 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n \n         final List<SyncResult> results = new ArrayList<SyncResult>();\n \n-        actions.beforeAll(syncTask);\n-\n         final SyncPolicy syncPolicy = syncTask.getResource().getSyncPolicy();\n         final ConflictResolutionAction resAct = syncPolicy == null || syncPolicy.getSpecification() == null\n                 ? ConflictResolutionAction.IGNORE\n@@ -257,6 +253,7 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         handler.setResults(results);\n         handler.setSyncTask(syncTask);\n \n+        actions.beforeAll(syncTask);\n         try {\n             if (syncTask.isFullReconciliation()) {\n                 connector.getAllObjects(ObjectClass.ACCOUNT, handler,\n@@ -278,7 +275,6 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         } catch (Exception e) {\n             throw new JobExecutionException(\"While syncing on connector\", e);\n         }\n-\n         actions.afterAll(syncTask, results);\n \n         final String result = createReport(results, syncTask.getResource().getSyncTraceLevel(), dryRun);"},{"sha":"429f216584b220db7893e298964bfb9c2f6146e3","filename":"core/src/main/java/org/apache/syncope/core/util/ApplicationContextProvider.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FApplicationContextProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FApplicationContextProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FApplicationContextProvider.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.util;\n \n+import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.ApplicationContextAware;\n import org.springframework.context.ConfigurableApplicationContext;\n@@ -30,6 +31,10 @@ public static ConfigurableApplicationContext getApplicationContext() {\n         return ctx;\n     }\n \n+    public static DefaultListableBeanFactory getBeanFactory() {\n+        return (DefaultListableBeanFactory) ctx.getBeanFactory();\n+    }\n+\n     /**\n      * Wiring the ApplicationContext into a static method.\n      *"},{"sha":"a3f3ab2888982d6be329d42b3e2f7821cd61d9a9","filename":"core/src/main/java/org/apache/syncope/core/util/ConnObjectUtil.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -295,8 +295,6 @@ public void retrieveVirAttrValues(final AbstractAttributable owner) {\n         for (ExternalResource resource : owner.getResources()) {\n             LOG.debug(\"Retrieve remote object from '{}'\", resource.getName());\n             try {\n-                final ConnectorFacadeProxy connector = connInstanceLoader.getConnector(resource);\n-\n                 final SchemaMappingUtil.SchemaMappingsWrapper mappings = new SchemaMappingUtil.SchemaMappingsWrapper(\n                         resource.getMappings());\n \n@@ -319,8 +317,9 @@ public void retrieveVirAttrValues(final AbstractAttributable owner) {\n                         final OperationOptionsBuilder oob = new OperationOptionsBuilder();\n                         oob.setAttributesToGet(extAttrNames);\n \n-                        final ConnectorObject connectorObject = connector.getObject(ObjectClass.ACCOUNT, new Uid(\n-                                accountId), oob.build());\n+                        final ConnectorFacadeProxy connector = connInstanceLoader.getConnector(resource);\n+                        final ConnectorObject connectorObject =\n+                                connector.getObject(ObjectClass.ACCOUNT, new Uid(accountId), oob.build());\n \n                         if (connectorObject != null) {\n                             remoteObjects.put(mappings, connectorObject);\n@@ -362,7 +361,6 @@ public void retrieveVirAttrValues(final AbstractAttributable owner) {\n     }\n \n     private void fillFromTemplate(final AbstractAttributableTO attributableTO, final AbstractAttributableTO template) {\n-\n         Map<String, AttributeTO> currentAttrMap = attributableTO.getAttributeMap();\n         for (AttributeTO attrTO : template.getAttributes()) {\n             if (!currentAttrMap.containsKey(attrTO.getSchema())) {\n@@ -386,7 +384,6 @@ private void fillFromTemplate(final AbstractAttributableTO attributableTO, final\n     }\n \n     private AttributeTO evaluateAttrTemplate(final AbstractAttributableTO attributableTO, final AttributeTO template) {\n-\n         AttributeTO result = new AttributeTO();\n         result.setSchema(template.getSchema());\n "},{"sha":"a00c5c475cfea4d1b45019172b7acfe6290f9711","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bec87170e49a6cb491b6883eea1f7e0ff2e3c503/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=bec87170e49a6cb491b6883eea1f7e0ff2e3c503","patch":"@@ -40,6 +40,14 @@\n \n public class ResourceTestITCase extends AbstractTest {\n \n+    @Test\n+    public void getPropagationActionsClasses() {\n+        Set<String> actions = restTemplate.getForObject(\n+                BASE_URL + \"resource/propagationActionsClasses.json\", Set.class);\n+        assertNotNull(actions);\n+        assertFalse(actions.isEmpty());\n+    }\n+\n     @Test(expected = SyncopeClientCompositeErrorException.class)\n     public void createExistingResource() {\n         final String resourceName = \"ws-target-resource-1\";\n@@ -316,7 +324,7 @@ public void update() {\n     public void deleteWithException() {\n         try {\n             restTemplate.getForObject(\n-                BASE_URL + \"resource/delete/{resourceName}.json\", ResourceTO.class, \"resourcenotfound\");\n+                    BASE_URL + \"resource/delete/{resourceName}.json\", ResourceTO.class, \"resourcenotfound\");\n         } catch (HttpStatusCodeException e) {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n@@ -342,9 +350,9 @@ public void updateResetSyncToken() {\n     public void delete() {\n         final String resourceName = \"ws-target-resource-delete\";\n \n-        ResourceTO deletedResource = \n-                restTemplate.getForObject(BASE_URL + \"resource/delete/{resourceName}.json\", ResourceTO.class, \n-                        resourceName);\n+        ResourceTO deletedResource =\n+                restTemplate.getForObject(BASE_URL + \"resource/delete/{resourceName}.json\", ResourceTO.class,\n+                resourceName);\n         assertNotNull(deletedResource);\n \n         try {"}]}