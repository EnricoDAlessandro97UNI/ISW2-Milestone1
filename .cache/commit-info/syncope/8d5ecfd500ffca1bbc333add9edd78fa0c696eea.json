{"sha":"8d5ecfd500ffca1bbc333add9edd78fa0c696eea","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhkNWVjZmQ1MDBmZmNhMWJiYzMzM2FkZDllZGQ3OGZhMGM2OTZlZWE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-07T17:31:08Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-07T17:31:08Z"},"message":"Fixes issue 117 94\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247180 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ffaa2527d50dd29ecc9f3c81351f82feac5b9ead","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ffaa2527d50dd29ecc9f3c81351f82feac5b9ead"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8d5ecfd500ffca1bbc333add9edd78fa0c696eea","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d5ecfd500ffca1bbc333add9edd78fa0c696eea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d5ecfd500ffca1bbc333add9edd78fa0c696eea","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/comments","author":null,"committer":null,"parents":[{"sha":"2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958"}],"stats":{"total":6161,"additions":4511,"deletions":1650},"files":[{"sha":"3eb805985a39b3f82d13d746f6416c9076c49ea4","filename":"client/src/main/java/org/syncope/client/to/NotificationTO.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTO.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -17,6 +17,7 @@\n import java.util.List;\n import org.syncope.client.AbstractBaseBean;\n import org.syncope.client.search.NodeCond;\n+import org.syncope.types.TraceLevel;\n \n public class NotificationTO extends AbstractBaseBean {\n \n@@ -28,12 +29,16 @@ public class NotificationTO extends AbstractBaseBean {\n \n     private NodeCond recipients;\n \n+    private boolean selfAsRecipient;\n+\n     private String sender;\n \n     private String subject;\n \n     private String template;\n \n+    private TraceLevel traceLevel;\n+\n     public NotificationTO() {\n         events = new ArrayList<String>();\n     }\n@@ -78,6 +83,14 @@ public void setRecipients(NodeCond recipients) {\n         this.recipients = recipients;\n     }\n \n+    public boolean isSelfAsRecipient() {\n+        return selfAsRecipient;\n+    }\n+\n+    public void setSelfAsRecipient(boolean selfAsRecipient) {\n+        this.selfAsRecipient = selfAsRecipient;\n+    }\n+\n     public String getSender() {\n         return sender;\n     }\n@@ -101,4 +114,12 @@ public String getTemplate() {\n     public void setTemplate(String template) {\n         this.template = template;\n     }\n+\n+    public TraceLevel getTraceLevel() {\n+        return traceLevel;\n+    }\n+\n+    public void setTraceLevel(TraceLevel traceLevel) {\n+        this.traceLevel = traceLevel;\n+    }\n }"},{"sha":"8813e65772d92c78b0fc707693fbfe0ab9b3625d","filename":"client/src/main/java/org/syncope/client/to/NotificationTaskTO.java","status":"added","additions":100,"deletions":0,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTaskTO.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,100 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.client.to;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.syncope.types.TraceLevel;\n+\n+public class NotificationTaskTO extends TaskTO {\n+\n+    private static final long serialVersionUID = 371671242591093846L;\n+\n+    private Set<String> recipients;\n+\n+    private String sender;\n+\n+    private String subject;\n+\n+    private String textBody;\n+\n+    private String htmlBody;\n+\n+    private TraceLevel traceLevel;\n+\n+    public NotificationTaskTO() {\n+        super();\n+\n+        recipients = new HashSet<String>();\n+    }\n+\n+    public Set<String> getRecipients() {\n+        return recipients;\n+    }\n+\n+    public boolean addRecipient(final String recipient) {\n+        return recipients.add(recipient);\n+    }\n+\n+    public boolean removeRecipient(final String recipient) {\n+        return recipients.remove(recipient);\n+    }\n+\n+    public void setRecipients(final Set<String> recipients) {\n+        this.recipients.clear();\n+        if (recipients != null) {\n+            this.recipients.addAll(recipients);\n+        }\n+    }\n+\n+    public String getSender() {\n+        return sender;\n+    }\n+\n+    public void setSender(final String sender) {\n+        this.sender = sender;\n+    }\n+\n+    public String getSubject() {\n+        return subject;\n+    }\n+\n+    public void setSubject(final String subject) {\n+        this.subject = subject;\n+    }\n+\n+    public String getTextBody() {\n+        return textBody;\n+    }\n+\n+    public void setTextBody(final String textBody) {\n+        this.textBody = textBody;\n+    }\n+\n+    public String getHtmlBody() {\n+        return htmlBody;\n+    }\n+\n+    public void setHtmlBody(final String htmlBody) {\n+        this.htmlBody = htmlBody;\n+    }\n+\n+    public TraceLevel getTraceLevel() {\n+        return traceLevel;\n+    }\n+\n+    public void setTraceLevel(TraceLevel traceLevel) {\n+        this.traceLevel = traceLevel;\n+    }\n+}"},{"sha":"b22aff22a63e34138b6df4eb871c7ae7e7de504a","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -25,8 +25,6 @@ public class UserTO extends AbstractAttributableTO {\n \n     private static final long serialVersionUID = 7791304495192615740L;\n \n-    public static String FORMAT_DATE_ISO = \"yyyy-MM-dd'T'HH:mm:ssZ\";\n-\n     private String password;\n \n     private List<MembershipTO> memberships;"},{"sha":"3b63ce8358c29a23d9f3738a4a707870a9e5d19c","filename":"console/src/main/java/org/syncope/console/SyncopeSession.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -14,10 +14,13 @@\n  */\n package org.syncope.console;\n \n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n import org.apache.wicket.Session;\n import org.apache.wicket.authroles.authorization.strategies.role.Roles;\n import org.apache.wicket.protocol.http.WebSession;\n import org.apache.wicket.request.Request;\n+import org.syncope.console.commons.Constants;\n \n /**\n  * Custom Syncope Session class.\n@@ -65,4 +68,20 @@ public boolean isAuthenticated() {\n     public boolean hasAnyRole(final Roles roles) {\n         return this.roles.hasAnyRole(roles);\n     }\n+\n+    public DateFormat getDateFormat() {\n+        String language = \"en\";\n+        if (getLocale() != null) {\n+            language = getLocale().getLanguage();\n+        }\n+\n+        DateFormat formatter;\n+        if (\"it\".equals(language)) {\n+            formatter = new SimpleDateFormat(Constants.ITALIAN_DATE_FORMAT);\n+        } else {\n+            formatter = new SimpleDateFormat(Constants.ENGLISH_DATE_FORMAT);\n+        }\n+\n+        return formatter;\n+    }\n }"},{"sha":"bc265c180f883a005964df55a69d9b987c61df10","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -60,8 +60,20 @@ public final class Constants {\n     public static final String PREF_CONFIGURATION_PAGINATOR_ROWS =\n             \"configuration.paginator.rows\";\n \n-    public static final String PREF_TASKS_PAGINATOR_ROWS =\n-            \"tasks.paginator.rows\";\n+    public static final String PREF_NOTIFICATION_PAGINATOR_ROWS =\n+            \"notification.paginator.rows\";\n+\n+    public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS =\n+            \"proagationtasks.paginator.rows\";\n+\n+    public static final String PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS =\n+            \"notificationtasks.paginator.rows\";\n+\n+    public static final String PREF_SCHED_TASKS_PAGINATOR_ROWS =\n+            \"schedtasks.paginator.rows\";\n+\n+    public static final String PREF_SYNC_TASKS_PAGINATOR_ROWS =\n+            \"synctasks.paginator.rows\";\n \n     public static final String PREF_TODO_PAGINATOR_ROWS =\n             \"todo.paginator.rows\";"},{"sha":"ada83217a75e2cb1ac9f1af12be28946d9e0b018","filename":"console/src/main/java/org/syncope/console/commons/SearchCondWrapper.java","status":"renamed","additions":17,"deletions":3,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -15,25 +15,33 @@\n package org.syncope.console.commons;\n \n import java.io.Serializable;\n+import org.apache.commons.lang.builder.ReflectionToStringBuilder;\n+import org.apache.commons.lang.builder.ToStringStyle;\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.AttributeCond.Type;\n \n /**\n  * Generic search condition wrapper class.\n  */\n-public class SearchConditionWrapper implements Serializable {\n+public class SearchCondWrapper implements Serializable {\n+\n+    private static final long serialVersionUID = -5828622221257732958L;\n \n     public enum OperationType {\n \n-        AND, OR\n+        AND,\n+        OR\n \n     };\n \n     public enum FilterType {\n \n-        ATTRIBUTE, MEMBERSHIP, RESOURCE\n+        ATTRIBUTE,\n+        MEMBERSHIP,\n+        RESOURCE\n \n     };\n+\n     private boolean notOperator;\n \n     private OperationType operationType = null;\n@@ -93,4 +101,10 @@ public String getFilterValue() {\n     public void setFilterValue(String filterValue) {\n         this.filterValue = filterValue;\n     }\n+\n+    @Override\n+    public String toString() {\n+        return ReflectionToStringBuilder.toString(this,\n+                ToStringStyle.MULTI_LINE_STYLE);\n+    }\n }","previous_filename":"console/src/main/java/org/syncope/console/commons/SearchConditionWrapper.java"},{"sha":"d0898d7df7e16589654455725c0e02908773f3e8","filename":"console/src/main/java/org/syncope/console/pages/AbstractSchedTaskModalPage.java","status":"added","additions":249,"deletions":0,"changes":249,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,249 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import java.util.Arrays;\n+import java.util.Date;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.springframework.util.StringUtils;\n+import org.syncope.client.to.SchedTaskTO;\n+import org.syncope.client.to.SyncTaskTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.SyncopeSession;\n+import org.syncope.console.commons.SelectChoiceRenderer;\n+import org.syncope.console.commons.SelectOption;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+\n+/**\n+ * Modal window with Task form (to stop and start execution).\n+ */\n+public abstract class AbstractSchedTaskModalPage extends TaskModalPage {\n+\n+    private static final long serialVersionUID = 2892005971093059242L;\n+\n+    public static final SelectOption[] CRON_TEMPLATES = new SelectOption[]{\n+        new SelectOption(\n+        \"Unschedule\", \"UNSCHEDULE\"),\n+        new SelectOption(\n+        \"Every 5 minutes\", \"0 0/5 * * * ?\"),\n+        new SelectOption(\n+        \"Fire at 12pm (noon) every day\", \"0 0 12 * * ?\"),\n+        new SelectOption(\n+        \"Fire at 12am (midnight) every first day of the month\", \"0 0 0 1 * ?\"),\n+        new SelectOption(\n+        \"Fire at 12am (midnight) every Last day of the month\", \"0 0 0 L * ?\"),\n+        new SelectOption(\n+        \"Fire at 12am (midnight) every Monday\", \"0 0 0 ? * 2\")\n+    };\n+\n+    protected WebMarkupContainer crontab;\n+\n+    public AbstractSchedTaskModalPage(\n+            final ModalWindow window,\n+            final SchedTaskTO taskTO) {\n+\n+        super(taskTO);\n+\n+        crontab = new WebMarkupContainer(\"crontab\");\n+        crontab.setOutputMarkupId(true);\n+        form.add(crontab);\n+\n+        final AjaxTextFieldPanel lastExec = new AjaxTextFieldPanel(\n+                \"lastExec\", getString(\"lastExec\"), new DateFormatROModel(\n+                new PropertyModel<String>(taskTO, \"lastExec\")), false);\n+        lastExec.setEnabled(false);\n+        profile.add(lastExec);\n+\n+        final AjaxTextFieldPanel nextExec = new AjaxTextFieldPanel(\n+                \"nextExec\", getString(\"nextExec\"), new DateFormatROModel(\n+                new PropertyModel<String>(taskTO, \"nextExec\")), false);\n+        nextExec.setEnabled(false);\n+        profile.add(nextExec);\n+\n+        final DropDownChoice<String> cronTemplateChooser = new DropDownChoice(\n+                \"cronTemplateChooser\",\n+                new PropertyModel(taskTO, \"cronExpression\"),\n+                Arrays.asList(CRON_TEMPLATES),\n+                new SelectChoiceRenderer()) {\n+\n+            private static final long serialVersionUID = -5843424545478691442L;\n+\n+            @Override\n+            protected CharSequence getDefaultChoice(String selected) {\n+                return \"<option value=\\\"\\\">\"\n+                        + getString(\"chooseForTemplate\")\n+                        + \"</option>\";\n+            }\n+        };\n+\n+        final TextField seconds = new TextField(\n+                \"seconds\",\n+                new Model(getCronField(taskTO.getCronExpression(), 0)));\n+        crontab.add(seconds);\n+\n+        final TextField minutes = new TextField(\n+                \"minutes\",\n+                new Model(getCronField(taskTO.getCronExpression(), 1)));\n+        crontab.add(minutes);\n+\n+        final TextField hours = new TextField(\n+                \"hours\",\n+                new Model(getCronField(taskTO.getCronExpression(), 2)));\n+        crontab.add(hours);\n+\n+        final TextField daysOfMonth = new TextField(\n+                \"daysOfMonth\",\n+                new Model(getCronField(taskTO.getCronExpression(), 3)));\n+        crontab.add(daysOfMonth);\n+\n+        final TextField months = new TextField(\n+                \"months\",\n+                new Model(getCronField(taskTO.getCronExpression(), 4)));\n+        crontab.add(months);\n+\n+        final TextField daysOfWeek = new TextField(\n+                \"daysOfWeek\",\n+                new Model(getCronField(taskTO.getCronExpression(), 5)));\n+        crontab.add(daysOfWeek);\n+\n+        cronTemplateChooser.add(\n+                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                    private static final long serialVersionUID =\n+                            -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        seconds.setModelObject(\n+                                getCronField(cronTemplateChooser, 0));\n+                        minutes.setModelObject(\n+                                getCronField(cronTemplateChooser, 1));\n+                        hours.setModelObject(\n+                                getCronField(cronTemplateChooser, 2));\n+                        daysOfMonth.setModelObject(\n+                                getCronField(cronTemplateChooser, 3));\n+                        months.setModelObject(\n+                                getCronField(cronTemplateChooser, 4));\n+                        daysOfWeek.setModelObject(\n+                                getCronField(cronTemplateChooser, 5));\n+                        target.add(crontab);\n+                    }\n+                });\n+\n+        crontab.add(cronTemplateChooser);\n+\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n+                \"apply\", new ResourceModel(\"apply\")) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(\n+                    final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                SchedTaskTO taskTO = (SchedTaskTO) form.getModelObject();\n+                if (!StringUtils.hasText(taskTO.getCronExpression())\n+                        || \"UNSCHEDULE\".equals(taskTO.getCronExpression())) {\n+                    taskTO.setCronExpression(null);\n+                } else {\n+                    taskTO.setCronExpression(getCron(\n+                            seconds, minutes, hours,\n+                            daysOfMonth, months, daysOfWeek));\n+                }\n+\n+                try {\n+                    if (taskTO.getId() > 0) {\n+                        // update task\n+                        if (taskTO instanceof SyncTaskTO) {\n+                            taskTO = taskRestClient.updateSyncTask(\n+                                    (SyncTaskTO) taskTO);\n+                        } else {\n+                            taskTO = taskRestClient.updateSchedTask(taskTO);\n+                        }\n+                    } else {\n+                        if (taskTO instanceof SyncTaskTO) {\n+                            // create task\n+                            taskTO = taskRestClient.createSyncTask(\n+                                    (SyncTaskTO) taskTO);\n+                        } else {\n+                            taskTO = taskRestClient.createSchedTask(taskTO);\n+                        }\n+                    }\n+                    window.close(target);\n+                } catch (SyncopeClientCompositeErrorException e) {\n+                    LOG.error(\"While creating or updating task\", e);\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n+                }\n+            }\n+\n+            @Override\n+            protected void onError(AjaxRequestTarget target, Form form) {\n+                target.add(feedbackPanel);\n+            }\n+        };\n+\n+\n+        if (taskTO.getId() > 0) {\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"update\"));\n+        } else {\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"create\"));\n+        }\n+\n+        form.add(submit);\n+    }\n+\n+    private class DateFormatROModel implements IModel<String> {\n+\n+        private static final long serialVersionUID = 6677274580927636121L;\n+\n+        private final PropertyModel model;\n+\n+        public DateFormatROModel(final PropertyModel model) {\n+            this.model = model;\n+        }\n+\n+        @Override\n+        public String getObject() {\n+            return model.getObject() == null\n+                    ? \"\" : SyncopeSession.get().getDateFormat().\n+                    format((Date) model.getObject());\n+        }\n+\n+        @Override\n+        public void setObject(String object) {\n+        }\n+\n+        @Override\n+        public void detach() {\n+        }\n+    }\n+}"},{"sha":"99a6064fbcf38257ee7549ec16b3197813d97e0a","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":350,"deletions":92,"changes":442,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -48,7 +48,6 @@\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.LoggerFactory;\n-import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.LoggerTO;\n import org.syncope.console.commons.Constants;\n@@ -71,8 +70,11 @@\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.request.resource.ContentDisposition;\n import org.apache.wicket.util.resource.StringResourceStream;\n+import org.syncope.client.to.NotificationTO;\n import org.syncope.client.to.WorkflowDefinitionTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.rest.NotificationRestClient;\n+import org.syncope.console.rest.WorkflowRestClient;\n \n /**\n  * Configurations WebPage.\n@@ -82,7 +84,13 @@ public class Configuration extends BasePage {\n     private static final long serialVersionUID = -2838270869037702214L;\n \n     @SpringBean\n-    private ConfigurationRestClient restClient;\n+    private ConfigurationRestClient confRestClient;\n+\n+    @SpringBean\n+    private NotificationRestClient notificationRestClient;\n+\n+    @SpringBean\n+    private WorkflowRestClient wfRestClient;\n \n     @SpringBean\n     private PreferenceManager prefMan;\n@@ -91,27 +99,127 @@ public class Configuration extends BasePage {\n \n     private final ModalWindow editConfigWin;\n \n-    private static final int WIN_HEIGHT = 200;\n+    private static final int CONFIG_WIN_HEIGHT = 200;\n+\n+    private static final int CONFIG_WIN_WIDTH = 350;\n \n-    private static final int WIN_WIDTH = 350;\n+    private final ModalWindow createNotificationWin;\n+\n+    private final ModalWindow editNotificationWin;\n+\n+    private static final int NOTIFICATION_WIN_HEIGHT = 500;\n+\n+    private static final int NOTIFICATION_WIN_WIDTH = 900;\n \n     private WebMarkupContainer confContainer;\n \n+    private WebMarkupContainer notificationContainer;\n+\n     /**\n      * Response flag set by the Modal Window after the operation\n      * is completed.\n      */\n     private boolean operationResult = false;\n \n-    private int paginatorRows;\n+    private int confPaginatorRows;\n+\n+    private int notificationPaginatorRows;\n \n     public Configuration(final PageParameters parameters) {\n         super(parameters);\n \n         add(createConfigWin = new ModalWindow(\"createConfigurationWin\"));\n         add(editConfigWin = new ModalWindow(\"editConfigurationWin\"));\n+        setupSyncopeConf();\n+\n+        add(new PoliciesPanel(\"passwordPoliciesPanel\", PolicyType.PASSWORD));\n+        add(new PoliciesPanel(\"accountPoliciesPanel\", PolicyType.ACCOUNT));\n+        add(new PoliciesPanel(\"syncPoliciesPanel\", PolicyType.SYNC));\n \n-        paginatorRows = prefMan.getPaginatorRows(getRequest(),\n+        add(createNotificationWin = new ModalWindow(\"createNotificationWin\"));\n+        add(editNotificationWin = new ModalWindow(\"editNotificationWin\"));\n+        setupNotification();\n+\n+        // Workflow definition stuff\n+        final WorkflowDefinitionTO workflowDef = wfRestClient.getDefinition();\n+\n+        WebMarkupContainer workflowDefContainer =\n+                new WebMarkupContainer(\"workflowDefContainer\");\n+\n+        Form wfForm = new Form(\"workflowDefForm\",\n+                new CompoundPropertyModel(workflowDef));\n+\n+        TextArea<WorkflowDefinitionTO> workflowDefArea =\n+                new TextArea<WorkflowDefinitionTO>(\"workflowDefArea\",\n+                new PropertyModel<WorkflowDefinitionTO>(\n+                workflowDef, \"xmlDefinition\"));\n+        wfForm.add(workflowDefArea);\n+\n+        IndicatingAjaxButton submit = new IndicatingAjaxButton(\n+                \"apply\", new Model<String>(getString(\"submit\"))) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                try {\n+                    wfRestClient.updateDefinition(workflowDef);\n+                    info(getString(\"operation_succeded\"));\n+                } catch (SyncopeClientCompositeErrorException scee) {\n+                    error(getString(\"error\") + \":\" + scee.getMessage());\n+                }\n+                target.add(feedbackPanel);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                target.add(feedbackPanel);\n+            }\n+        };\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"workflowDefUpdate\"));\n+        wfForm.add(submit);\n+\n+        workflowDefContainer.add(wfForm);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                workflowDefContainer, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"workflowDefRead\"));\n+        add(workflowDefContainer);\n+\n+        // Logger stuff\n+        PropertyListView coreLoggerList =\n+                new LoggerPropertyList(null,\n+                \"corelogger\",\n+                confRestClient.getLoggers());\n+        WebMarkupContainer coreLoggerContainer =\n+                new WebMarkupContainer(\"coreLoggerContainer\");\n+        coreLoggerContainer.add(coreLoggerList);\n+        coreLoggerContainer.setOutputMarkupId(true);\n+        add(coreLoggerContainer);\n+\n+        ConsoleLoggerController consoleLoggerController =\n+                new ConsoleLoggerController();\n+        PropertyListView consoleLoggerList =\n+                new LoggerPropertyList(\n+                consoleLoggerController,\n+                \"consolelogger\",\n+                consoleLoggerController.getLoggers());\n+        WebMarkupContainer consoleLoggerContainer =\n+                new WebMarkupContainer(\"consoleLoggerContainer\");\n+        consoleLoggerContainer.add(consoleLoggerList);\n+        consoleLoggerContainer.setOutputMarkupId(true);\n+        add(consoleLoggerContainer);\n+    }\n+\n+    private final void setupSyncopeConf() {\n+        confPaginatorRows = prefMan.getPaginatorRows(getRequest(),\n                 Constants.PREF_CONFIGURATION_PAGINATOR_ROWS);\n \n         List<IColumn> confColumns = new ArrayList<IColumn>();\n@@ -195,7 +303,7 @@ public void populateItem(\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.deleteConfiguration(configurationTO.\n+                            confRestClient.deleteConfiguration(configurationTO.\n                                     getKey());\n                         } catch (SyncopeClientCompositeErrorException e) {\n                             LOG.error(\"While deleting a conf key\", e);\n@@ -221,10 +329,9 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-\n         final AjaxFallbackDefaultDataTable confTable =\n                 new AjaxFallbackDefaultDataTable(\"syncopeconf\", confColumns,\n-                new SyncopeConfProvider(), paginatorRows);\n+                new SyncopeConfProvider(), confPaginatorRows);\n \n         confContainer = new WebMarkupContainer(\"confContainer\");\n         confContainer.add(confTable);\n@@ -233,13 +340,13 @@ public void onClick(final AjaxRequestTarget target) {\n         add(confContainer);\n \n         createConfigWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createConfigWin.setInitialHeight(WIN_HEIGHT);\n-        createConfigWin.setInitialWidth(WIN_WIDTH);\n+        createConfigWin.setInitialHeight(CONFIG_WIN_HEIGHT);\n+        createConfigWin.setInitialWidth(CONFIG_WIN_WIDTH);\n         createConfigWin.setCookieName(\"create-configuration-modal\");\n \n         editConfigWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editConfigWin.setInitialHeight(WIN_HEIGHT);\n-        editConfigWin.setInitialWidth(WIN_WIDTH);\n+        editConfigWin.setInitialHeight(CONFIG_WIN_HEIGHT);\n+        editConfigWin.setInitialWidth(CONFIG_WIN_WIDTH);\n         editConfigWin.setCookieName(\"edit-configuration-modal\");\n \n         setWindowClosedCallback(createConfigWin, confContainer);\n@@ -282,8 +389,8 @@ public Page createPage() {\n             @Override\n             public void onClick() {\n                 StringResourceStream stream =\n-                        new StringResourceStream(restClient.dbContentAsXml(),\n-                        \"text/xml\");\n+                        new StringResourceStream(\n+                        confRestClient.dbContentAsXml(), \"text/xml\");\n                 getRequestCycle().scheduleRequestHandlerAfterCurrent(\n                         new ResourceStreamRequestHandler(stream).setFileName(\n                         \"content.xml\").setContentDisposition(\n@@ -296,10 +403,10 @@ public void onClick() {\n                 xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"read\"));\n         add(dbExportLink);\n \n-        Form paginatorForm = new Form(\"PaginatorForm\");\n+        Form confPaginatorForm = new Form(\"confPaginatorForm\");\n \n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"paginatorRows\"),\n+                new PropertyModel(this, \"confPaginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -311,99 +418,212 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 prefMan.set(getRequest(),\n                         getResponse(),\n                         Constants.PREF_CONFIGURATION_PAGINATOR_ROWS,\n-                        String.valueOf(paginatorRows));\n-                confTable.setItemsPerPage(paginatorRows);\n+                        String.valueOf(confPaginatorRows));\n+                confTable.setItemsPerPage(confPaginatorRows);\n \n                 target.add(confContainer);\n             }\n         });\n \n-        paginatorForm.add(rowsChooser);\n-        add(paginatorForm);\n+        confPaginatorForm.add(rowsChooser);\n+        add(confPaginatorForm);\n+    }\n \n-        add(new PoliciesPanel(\"passwordPoliciesPanel\", PolicyType.PASSWORD));\n+    private final void setupNotification() {\n+        notificationPaginatorRows = prefMan.getPaginatorRows(getRequest(),\n+                Constants.PREF_NOTIFICATION_PAGINATOR_ROWS);\n+\n+        List<IColumn> notificationCols = new ArrayList<IColumn>();\n+        notificationCols.add(new PropertyColumn(new ResourceModel(\"id\"),\n+                \"id\", \"id\"));\n+        notificationCols.add(new PropertyColumn(new ResourceModel(\"events\"),\n+                \"events\", \"events\"));\n+        notificationCols.add(new PropertyColumn(new ResourceModel(\"subject\"),\n+                \"subject\", \"subject\"));\n+        notificationCols.add(new PropertyColumn(new ResourceModel(\"template\"),\n+                \"template\", \"template\"));\n+        notificationCols.add(new PropertyColumn(new ResourceModel(\"traceLevel\"),\n+                \"traceLevel\", \"traceLevel\"));\n+\n+        notificationCols.add(new AbstractColumn<NotificationTO>(\n+                new ResourceModel(\"edit\")) {\n \n-        add(new PoliciesPanel(\"accountPoliciesPanel\", PolicyType.ACCOUNT));\n+            private static final long serialVersionUID = 2054811145491901166L;\n \n-        add(new PoliciesPanel(\"syncPoliciesPanel\", PolicyType.SYNC));\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<NotificationTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<NotificationTO> model) {\n \n-        // Workflow definition stuff\n-        final WorkflowDefinitionTO workflowDef =\n-                restClient.getWorkflowDefinition();\n+                final NotificationTO notificationTO = model.getObject();\n+                AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n-        WebMarkupContainer workflowDefContainer =\n-                new WebMarkupContainer(\"workflowDefContainer\");\n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n \n-        Form wfForm = new Form(\"workflowDefForm\",\n-                new CompoundPropertyModel(workflowDef));\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-        TextArea<WorkflowDefinitionTO> workflowDefArea =\n-                new TextArea<WorkflowDefinitionTO>(\"workflowDefArea\",\n-                new PropertyModel<WorkflowDefinitionTO>(\n-                workflowDef, \"xmlDefinition\"));\n-        wfForm.add(workflowDefArea);\n+                        editNotificationWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-        IndicatingAjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new Model<String>(getString(\"submit\"))) {\n+                                    private static final long serialVersionUID =\n+                                            -7834632442532690940L;\n \n-            private static final long serialVersionUID = -958724007591692537L;\n+                                    @Override\n+                                    public Page createPage() {\n+                                        return new NotificationModalPage(\n+                                                Configuration.this.\n+                                                getPageReference(),\n+                                                editNotificationWin,\n+                                                notificationTO, false);\n+                                    }\n+                                });\n+\n+                        editNotificationWin.show(target);\n+                    }\n+                };\n+\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\n+                        \"Notification\", \"read\"));\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        notificationCols.add(new AbstractColumn<NotificationTO>(\n+                new ResourceModel(\"delete\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n+            public void populateItem(\n+                    final Item<ICellPopulator<NotificationTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<NotificationTO> model) {\n \n-                try {\n-                    restClient.updateWorkflowDefinition(workflowDef);\n-                    info(getString(\"operation_succeded\"));\n-                } catch (SyncopeClientCompositeErrorException scee) {\n-                    error(getString(\"error\") + \":\" + scee.getMessage());\n-                }\n-                target.add(feedbackPanel);\n+                final NotificationTO notificationTO = model.getObject();\n+\n+                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n+                        \"deleteLink\") {\n+\n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        try {\n+                            notificationRestClient.deleteNotification(\n+                                    notificationTO.getId());\n+                        } catch (SyncopeClientCompositeErrorException e) {\n+                            LOG.error(\"While deleting a notification\", e);\n+                            error(e.getMessage());\n+                            return;\n+                        }\n+\n+                        info(getString(\"operation_succeded\"));\n+                        target.add(feedbackPanel);\n+\n+                        target.add(notificationContainer);\n+                    }\n+                };\n+\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\n+                        \"Notification\", \"delete\"));\n+\n+                cellItem.add(panel);\n             }\n+        });\n+\n+        final AjaxFallbackDefaultDataTable notificationTable =\n+                new AjaxFallbackDefaultDataTable(\"notificationTable\",\n+                notificationCols,\n+                new NotificationProvider(), notificationPaginatorRows);\n+\n+        notificationContainer = new WebMarkupContainer(\"notificationContainer\");\n+        notificationContainer.add(notificationTable);\n+        notificationContainer.setOutputMarkupId(true);\n+\n+        add(notificationContainer);\n+\n+        createNotificationWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createNotificationWin.setInitialHeight(NOTIFICATION_WIN_HEIGHT);\n+        createNotificationWin.setInitialWidth(NOTIFICATION_WIN_WIDTH);\n+        createNotificationWin.setCookieName(\"create-notification-modal\");\n+\n+        editNotificationWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editNotificationWin.setInitialHeight(NOTIFICATION_WIN_HEIGHT);\n+        editNotificationWin.setInitialWidth(NOTIFICATION_WIN_WIDTH);\n+        editNotificationWin.setCookieName(\"edit-notification-modal\");\n+\n+        setWindowClosedCallback(createNotificationWin, notificationContainer);\n+        setWindowClosedCallback(editNotificationWin, notificationContainer);\n+\n+        AjaxLink createNotificationLink = new AjaxLink(\n+                \"createNotificationLink\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            public void onClick(final AjaxRequestTarget target) {\n \n-                target.add(feedbackPanel);\n+                createNotificationWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID =\n+                                    -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new NotificationModalPage(\n+                                        Configuration.this.getPageReference(),\n+                                        createNotificationWin,\n+                                        new NotificationTO(), true);\n+                            }\n+                        });\n+\n+                createNotificationWin.show(target);\n             }\n         };\n \n         MetaDataRoleAuthorizationStrategy.authorize(\n-                submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                \"Configuration\", \"workflowDefUpdate\"));\n-        wfForm.add(submit);\n+                createNotificationLink, ENABLE,\n+                xmlRolesReader.getAllAllowedRoles(\"Notification\", \"create\"));\n+        add(createNotificationLink);\n \n-        workflowDefContainer.add(wfForm);\n+        Form notificationPaginatorForm = new Form(\"notificationPaginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                workflowDefContainer, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                \"Configuration\", \"workflowDefRead\"));\n-        add(workflowDefContainer);\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n+                new PropertyModel(this, \"notificationPaginatorRows\"),\n+                prefMan.getPaginatorChoices());\n \n-        // Logger stuff\n-        PropertyListView coreLoggerList =\n-                new LoggerPropertyList(null,\n-                \"corelogger\",\n-                restClient.getLoggers());\n-        WebMarkupContainer coreLoggerContainer =\n-                new WebMarkupContainer(\"coreLoggerContainer\");\n-        coreLoggerContainer.add(coreLoggerList);\n-        coreLoggerContainer.setOutputMarkupId(true);\n-        add(coreLoggerContainer);\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-        ConsoleLoggerController consoleLoggerController =\n-                new ConsoleLoggerController();\n-        PropertyListView consoleLoggerList =\n-                new LoggerPropertyList(\n-                consoleLoggerController,\n-                \"consolelogger\",\n-                consoleLoggerController.getLoggers());\n-        WebMarkupContainer consoleLoggerContainer =\n-                new WebMarkupContainer(\"consoleLoggerContainer\");\n-        consoleLoggerContainer.add(consoleLoggerList);\n-        consoleLoggerContainer.setOutputMarkupId(true);\n-        add(consoleLoggerContainer);\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                prefMan.set(getRequest(),\n+                        getResponse(),\n+                        Constants.PREF_NOTIFICATION_PAGINATOR_ROWS,\n+                        String.valueOf(notificationPaginatorRows));\n+                notificationTable.setItemsPerPage(notificationPaginatorRows);\n+\n+                target.add(notificationContainer);\n+            }\n+        });\n+\n+        notificationPaginatorForm.add(rowsChooser);\n+        add(notificationPaginatorForm);\n     }\n \n     /**\n@@ -458,7 +678,7 @@ public SyncopeConfProvider() {\n         public Iterator<ConfigurationTO> iterator(final int first,\n                 final int count) {\n \n-            List<ConfigurationTO> list = getAllConfigurations();\n+            List<ConfigurationTO> list = confRestClient.getAllConfigurations();\n \n             Collections.sort(list, comparator);\n \n@@ -467,7 +687,7 @@ public Iterator<ConfigurationTO> iterator(final int first,\n \n         @Override\n         public int size() {\n-            return getAllConfigurations().size();\n+            return confRestClient.getAllConfigurations().size();\n         }\n \n         @Override\n@@ -485,16 +705,53 @@ public ConfigurationTO getObject() {\n                 }\n             };\n         }\n+    }\n \n-        private List<ConfigurationTO> getAllConfigurations() {\n-            List<ConfigurationTO> list = null;\n+    private class NotificationProvider\n+            extends SortableDataProvider<NotificationTO> {\n \n-            try {\n-                list = restClient.getAllConfigurations();\n-            } catch (RestClientException rce) {\n-                throw rce;\n-            }\n-            return list;\n+        private static final long serialVersionUID = -276043813563988590L;\n+\n+        private SortableDataProviderComparator<NotificationTO> comparator;\n+\n+        public NotificationProvider() {\n+            //Default sorting\n+            setSort(\"id\", SortOrder.ASCENDING);\n+            comparator =\n+                    new SortableDataProviderComparator<NotificationTO>(this);\n+        }\n+\n+        @Override\n+        public Iterator<NotificationTO> iterator(final int first,\n+                final int count) {\n+\n+            List<NotificationTO> list =\n+                    notificationRestClient.getAllNotifications();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList(first, first + count).iterator();\n+        }\n+\n+        @Override\n+        public int size() {\n+            return notificationRestClient.getAllNotifications().size();\n+        }\n+\n+        @Override\n+        public IModel<NotificationTO> model(\n+                final NotificationTO notification) {\n+\n+            return new AbstractReadOnlyModel<NotificationTO>() {\n+\n+                private static final long serialVersionUID =\n+                        774694801558497248L;\n+\n+                @Override\n+                public NotificationTO getObject() {\n+                    return notification;\n+                }\n+            };\n         }\n     }\n \n@@ -507,6 +764,7 @@ enum LoggerLevel {\n         DEBUG,\n         TRACE,\n         ALL\n+\n     }\n \n     private class LoggerPropertyList extends PropertyListView<LoggerTO> {\n@@ -561,7 +819,7 @@ public void detach() {\n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n                     boolean result = getId().equals(\"corelogger\")\n-                            ? restClient.setLoggerLevel(\n+                            ? confRestClient.setLoggerLevel(\n                             item.getModelObject().getName(),\n                             item.getModelObject().getLevel())\n                             : consoleLoggerController.setLoggerLevel("},{"sha":"45d011bf89ee3cf43ae63dcd4e8a0ab2fbb0fb18","filename":"console/src/main/java/org/syncope/console/pages/ConfigurationModalPage.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -70,7 +70,6 @@ public ConfigurationModalPage(final PageReference callPageRef,\n                 \"value\", \"value\",\n                 new PropertyModel(configurationTO, \"value\"), false);\n         form.add(value);\n-        value.setEnabled(createFlag);\n         value.addRequiredLabel();\n \n         submit = new IndicatingAjaxButton(\n@@ -117,15 +116,9 @@ protected void onError(final AjaxRequestTarget target,\n             }\n         };\n \n-        String allowedRoles;\n-\n-        if (createFlag) {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Configuration\",\n-                    \"create\");\n-        } else {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Configuration\",\n-                    \"update\");\n-        }\n+        String allowedRoles = createFlag\n+                ? xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"create\")\n+                : xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"update\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n                 allowedRoles);"},{"sha":"7c4a3abd153e57d28a9ad2f80942d3c4e68a0c31","filename":"console/src/main/java/org/syncope/console/pages/GTaskModalPage.java","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FGTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FGTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FGTaskModalPage.java?ref=2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","patch":"@@ -1,67 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.syncope.console.pages;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.PropertyModel;\n-import org.syncope.client.to.SchedTaskTO;\n-import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-\n-/**\n- * Modal window with Task form (to stop and start execution).\n- */\n-public class GTaskModalPage extends SchedTaskModalPage {\n-\n-    private static final long serialVersionUID = -2501860242590060867L;\n-\n-    public GTaskModalPage(\n-            final ModalWindow window,\n-            final SchedTaskTO taskTO) {\n-\n-        super(window, taskTO);\n-\n-        final IModel<List<String>> classNames =\n-                new LoadableDetachableModel<List<String>>() {\n-\n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n-\n-                    @Override\n-                    protected List<String> load() {\n-                        final List<String> classes = new ArrayList<String>(\n-                                taskRestClient.getJobClasses());\n-\n-                        return classes;\n-                    }\n-                };\n-\n-        final AjaxDropDownChoicePanel<String> className =\n-                new AjaxDropDownChoicePanel<String>(\n-                \"jobClassName\", getString(\"class\"),\n-                new PropertyModel(taskTO, \"jobClassName\"), false);\n-        className.setChoices(classNames.getObject());\n-        className.addRequiredLabel();\n-        className.setEnabled(taskTO.getId() == 0);\n-        className.setStyleShet(\n-                \"ui-widget-content ui-corner-all long_dynamicsize\");\n-        profile.add(className);\n-    }\n-}"},{"sha":"409c975ec75bf71366957fe0a049ab428741935f","filename":"console/src/main/java/org/syncope/console/pages/NotificationModalPage.java","status":"added","additions":156,"deletions":0,"changes":156,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,156 @@\n+/*\n+ * Copyright 2011 ilgrosso.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import java.util.Arrays;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.apache.wicket.validation.validator.EmailAddressValidator;\n+import org.syncope.client.to.NotificationTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.pages.panels.UserSearchPanel;\n+import org.syncope.console.rest.NotificationRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.types.TraceLevel;\n+\n+class NotificationModalPage extends BaseModalPage {\n+\n+    private static final long serialVersionUID = -1975312550059578553L;\n+\n+    @SpringBean\n+    private NotificationRestClient restClient;\n+\n+    public NotificationModalPage(final PageReference callPageRef,\n+            final ModalWindow window,\n+            final NotificationTO notificationTO,\n+            final boolean createFlag) {\n+\n+        Form form = new Form(\"form\", new CompoundPropertyModel(\n+                notificationTO));\n+        form.setModel(new CompoundPropertyModel(notificationTO));\n+\n+        final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\n+                \"sender\", getString(\"sender\"),\n+                new PropertyModel<String>(notificationTO, \"sender\"), false);\n+        sender.addRequiredLabel();\n+        sender.addValidator(EmailAddressValidator.getInstance());\n+        form.add(sender);\n+\n+        final AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\n+                \"subject\", getString(\"subject\"),\n+                new PropertyModel<String>(notificationTO, \"subject\"), false);\n+        subject.addRequiredLabel();\n+        form.add(subject);\n+\n+        final AjaxDropDownChoicePanel<String> template =\n+                new AjaxDropDownChoicePanel<String>(\"template\",\n+                getString(\"template\"),\n+                new PropertyModel(notificationTO, \"template\"),\n+                false);\n+        template.setChoices(restClient.getMailTemplates());\n+        template.addRequiredLabel();\n+        form.add(template);\n+\n+        final AjaxDropDownChoicePanel<TraceLevel> traceLevel =\n+                new AjaxDropDownChoicePanel<TraceLevel>(\"traceLevel\",\n+                getString(\"traceLevel\"),\n+                new PropertyModel(notificationTO, \"traceLevel\"),\n+                false);\n+        traceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n+        traceLevel.addRequiredLabel();\n+        form.add(traceLevel);\n+\n+        final UserSearchPanel about = new UserSearchPanel(\"about\",\n+                notificationTO.getAbout());\n+        form.add(about);\n+\n+        final AjaxPalettePanel events = new AjaxPalettePanel(\n+                \"events\", new PropertyModel(notificationTO, \"events\"),\n+                new ListModel<String>(restClient.getEvents()));\n+        form.add(events);\n+\n+        final UserSearchPanel recipients = new UserSearchPanel(\"recipients\",\n+                notificationTO.getRecipients());\n+        form.add(recipients);\n+\n+        final AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\n+                \"selfAsRecipient\", getString(\"selfAsRecipient\"),\n+                new PropertyModel(notificationTO, \"selfAsRecipient\"), false);\n+        form.add(selfAsRecipient);\n+\n+        AjaxButton submit = new IndicatingAjaxButton(\n+                \"apply\", new Model<String>(getString(\"submit\"))) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                notificationTO.setAbout(about.buildSearchCond());\n+                notificationTO.setRecipients(recipients.buildSearchCond());\n+\n+                try {\n+                    if (createFlag) {\n+                        restClient.createNotification(notificationTO);\n+                    } else {\n+                        restClient.updateNotification(notificationTO);\n+                    }\n+                    info(getString(\"operation_succeded\"));\n+\n+                    Configuration callerPage =\n+                            (Configuration) callPageRef.getPage();\n+                    callerPage.setOperationResult(true);\n+\n+                    window.close(target);\n+                } catch (SyncopeClientCompositeErrorException scee) {\n+                    error(getString(\"error\") + \":\" + scee.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                target.add(feedbackPanel);\n+            }\n+        };\n+\n+        String allowedRoles = createFlag\n+                ? xmlRolesReader.getAllAllowedRoles(\"Notification\", \"create\")\n+                : xmlRolesReader.getAllAllowedRoles(\"Notification\", \"update\");\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                allowedRoles);\n+\n+        form.add(submit);\n+\n+        add(form);\n+    }\n+}"},{"sha":"61f4fa020b1d9b5a7912a5dff81f9496122b07f9","filename":"console/src/main/java/org/syncope/console/pages/NotificationTaskModalPage.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import java.util.ArrayList;\n+import org.apache.wicket.markup.html.form.ListMultipleChoice;\n+import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.model.PropertyModel;\n+import org.syncope.client.to.NotificationTaskTO;\n+import org.syncope.client.to.TaskTO;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+\n+public class NotificationTaskModalPage extends TaskModalPage {\n+\n+    private static final long serialVersionUID = -4399606755452034216L;\n+\n+    public NotificationTaskModalPage(final TaskTO taskTO) {\n+        super(taskTO);\n+\n+        final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\n+                \"sender\", getString(\"sender\"),\n+                new PropertyModel<String>(taskTO, \"sender\"), false);\n+        sender.setEnabled(false);\n+        profile.add(sender);\n+\n+        final ListMultipleChoice<String> recipients =\n+                new ListMultipleChoice<String>(\"recipients\",\n+                new ArrayList<String>(((NotificationTaskTO) taskTO).\n+                getRecipients()));\n+        recipients.setMaxRows(5);\n+        recipients.setEnabled(false);\n+        profile.add(recipients);\n+\n+        final AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\n+                \"subject\", getString(\"subject\"),\n+                new PropertyModel<String>(taskTO, \"subject\"), false);\n+        subject.setEnabled(false);\n+        profile.add(subject);\n+\n+        final TextArea<String> textBody = new TextArea<String>(\"textBody\",\n+                new PropertyModel<String>(taskTO, \"textBody\"));\n+        textBody.setEnabled(false);\n+        profile.add(textBody);\n+\n+        final TextArea<String> htmlBody = new TextArea<String>(\"htmlBody\",\n+                new PropertyModel<String>(taskTO, \"htmlBody\"));\n+        htmlBody.setEnabled(false);\n+        profile.add(htmlBody);\n+\n+        final AjaxTextFieldPanel traceLevel = new AjaxTextFieldPanel(\n+                \"traceLevel\", getString(\"traceLevel\"),\n+                new PropertyModel<String>(taskTO, \"traceLevel\"), false);\n+        traceLevel.setEnabled(false);\n+        profile.add(traceLevel);\n+    }\n+}"},{"sha":"9f72a553c241ce3cfe6b3bd8c951e5d66c45b51d","filename":"console/src/main/java/org/syncope/console/pages/PropagationTaskModalPage.java","status":"renamed","additions":12,"deletions":7,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -16,25 +16,30 @@\n  */\n package org.syncope.console.pages;\n \n-import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.model.PropertyModel;\n import org.syncope.client.to.TaskTO;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n \n /**\n  * Modal window with Task form (to stop and start execution).\n  */\n-public class PTaskModalPage extends TaskModalPage {\n+public class PropagationTaskModalPage extends TaskModalPage {\n \n-    public PTaskModalPage(final TaskTO taskTO) {\n+    private static final long serialVersionUID = 523379887023786151L;\n+\n+    public PropagationTaskModalPage(final TaskTO taskTO) {\n         super(taskTO);\n \n-        final TextField accountId = new TextField(\"accountId\");\n+        final AjaxTextFieldPanel accountId = new AjaxTextFieldPanel(\n+                \"accountId\", getString(\"accountId\"),\n+                new PropertyModel<String>(taskTO, \"accountId\"), false);\n         accountId.setEnabled(false);\n-\n         profile.add(accountId);\n \n-        final TextField resource = new TextField(\"resource\");\n+        final AjaxTextFieldPanel resource = new AjaxTextFieldPanel(\n+                \"resource\", getString(\"resource\"),\n+                new PropertyModel<String>(taskTO, \"resource\"), false);\n         resource.setEnabled(false);\n-\n         profile.add(resource);\n     }\n }","previous_filename":"console/src/main/java/org/syncope/console/pages/PTaskModalPage.java"},{"sha":"12dfc55780e5932f3936526a1365f6b708e651cf","filename":"console/src/main/java/org/syncope/console/pages/SchedTaskModalPage.java","status":"modified","additions":27,"deletions":164,"changes":191,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -16,189 +16,52 @@\n  */\n package org.syncope.console.pages;\n \n-import java.util.Arrays;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.TextField;\n-import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n-import org.springframework.util.StringUtils;\n import org.syncope.client.to.SchedTaskTO;\n-import org.syncope.client.to.SyncTaskTO;\n-import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.console.commons.SelectChoiceRenderer;\n-import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n \n /**\n  * Modal window with Task form (to stop and start execution).\n  */\n-public class SchedTaskModalPage extends TaskModalPage {\n+public class SchedTaskModalPage extends AbstractSchedTaskModalPage {\n \n-    private static final long serialVersionUID = 2892005971093059242L;\n-\n-    protected WebMarkupContainer crontab;\n+    private static final long serialVersionUID = -2501860242590060867L;\n \n     public SchedTaskModalPage(\n             final ModalWindow window,\n             final SchedTaskTO taskTO) {\n \n-        super(taskTO);\n-\n-        crontab = new WebMarkupContainer(\"crontab\");\n-        crontab.setOutputMarkupId(true);\n-        form.add(crontab);\n-\n-        final AjaxTextFieldPanel lastExec = new AjaxTextFieldPanel(\n-                \"lastExec\", getString(\"lastExec\"),\n-                new PropertyModel<String>(taskTO, \"lastExec\"), false);\n-        lastExec.setEnabled(false);\n-        profile.add(lastExec);\n-\n-        final AjaxTextFieldPanel nextExec = new AjaxTextFieldPanel(\n-                \"nextExec\", getString(\"nextExec\"),\n-                new PropertyModel<String>(taskTO, \"nextExec\"), false);\n-        nextExec.setEnabled(false);\n-        profile.add(nextExec);\n-\n-        final DropDownChoice<String> cronTemplateChooser = new DropDownChoice(\n-                \"cronTemplateChooser\",\n-                new PropertyModel(taskTO, \"cronExpression\"),\n-                Arrays.asList(Tasks.CRON_TEMPLATES),\n-                new SelectChoiceRenderer()) {\n-\n-            private static final long serialVersionUID = -5843424545478691442L;\n-\n-            @Override\n-            protected CharSequence getDefaultChoice(String selected) {\n-                return \"<option value=\\\"\\\">\"\n-                        + getString(\"chooseForTemplate\")\n-                        + \"</option>\";\n-            }\n-        };\n-\n-        final TextField seconds = new TextField(\n-                \"seconds\",\n-                new Model(getCronField(taskTO.getCronExpression(), 0)));\n-        crontab.add(seconds);\n-\n-        final TextField minutes = new TextField(\n-                \"minutes\",\n-                new Model(getCronField(taskTO.getCronExpression(), 1)));\n-        crontab.add(minutes);\n-\n-        final TextField hours = new TextField(\n-                \"hours\",\n-                new Model(getCronField(taskTO.getCronExpression(), 2)));\n-        crontab.add(hours);\n-\n-        final TextField daysOfMonth = new TextField(\n-                \"daysOfMonth\",\n-                new Model(getCronField(taskTO.getCronExpression(), 3)));\n-        crontab.add(daysOfMonth);\n-\n-        final TextField months = new TextField(\n-                \"months\",\n-                new Model(getCronField(taskTO.getCronExpression(), 4)));\n-        crontab.add(months);\n+        super(window, taskTO);\n \n-        final TextField daysOfWeek = new TextField(\n-                \"daysOfWeek\",\n-                new Model(getCronField(taskTO.getCronExpression(), 5)));\n-        crontab.add(daysOfWeek);\n-\n-        cronTemplateChooser.add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        final IModel<List<String>> classNames =\n+                new LoadableDetachableModel<List<String>>() {\n \n                     private static final long serialVersionUID =\n-                            -1107858522700306810L;\n+                            5275935387613157437L;\n \n                     @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        seconds.setModelObject(\n-                                getCronField(cronTemplateChooser, 0));\n-                        minutes.setModelObject(\n-                                getCronField(cronTemplateChooser, 1));\n-                        hours.setModelObject(\n-                                getCronField(cronTemplateChooser, 2));\n-                        daysOfMonth.setModelObject(\n-                                getCronField(cronTemplateChooser, 3));\n-                        months.setModelObject(\n-                                getCronField(cronTemplateChooser, 4));\n-                        daysOfWeek.setModelObject(\n-                                getCronField(cronTemplateChooser, 5));\n-                        target.add(crontab);\n-                    }\n-                });\n-\n-        crontab.add(cronTemplateChooser);\n-\n-        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"apply\")) {\n-\n-            private static final long serialVersionUID = -958724007591692537L;\n-\n-            @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target,\n-                    final Form form) {\n+                    protected List<String> load() {\n+                        final List<String> classes = new ArrayList<String>(\n+                                taskRestClient.getJobClasses());\n \n-                SchedTaskTO taskTO = (SchedTaskTO) form.getModelObject();\n-                if (!StringUtils.hasText(taskTO.getCronExpression())\n-                        || \"UNSCHEDULE\".equals(taskTO.getCronExpression())) {\n-                    taskTO.setCronExpression(null);\n-                } else {\n-                    taskTO.setCronExpression(getCron(\n-                            seconds, minutes, hours,\n-                            daysOfMonth, months, daysOfWeek));\n-                }\n-\n-                try {\n-                    if (taskTO.getId() > 0) {\n-                        // update task\n-                        if (taskTO instanceof SyncTaskTO) {\n-                            taskTO = taskRestClient.updateSyncTask(\n-                                    (SyncTaskTO) taskTO);\n-                        } else {\n-                            taskTO = taskRestClient.updateSchedTask(taskTO);\n-                        }\n-                    } else {\n-                        if (taskTO instanceof SyncTaskTO) {\n-                            // create task\n-                            taskTO = taskRestClient.createSyncTask(\n-                                    (SyncTaskTO) taskTO);\n-                        } else {\n-                            taskTO = taskRestClient.createSchedTask(taskTO);\n-                        }\n+                        return classes;\n                     }\n-                    window.close(target);\n-                } catch (SyncopeClientCompositeErrorException e) {\n-                    LOG.error(\"While creating or updating task\", e);\n-                    error(getString(\"error\") + \":\" + e.getMessage());\n-                }\n-            }\n-\n-            @Override\n-            protected void onError(AjaxRequestTarget target, Form form) {\n-                target.add(feedbackPanel);\n-            }\n-        };\n-\n-\n-        if (taskTO.getId() > 0) {\n-            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n-                    xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"update\"));\n-        } else {\n-            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n-                    xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"create\"));\n-        }\n-\n-        form.add(submit);\n+                };\n+\n+        final AjaxDropDownChoicePanel<String> className =\n+                new AjaxDropDownChoicePanel<String>(\n+                \"jobClassName\", getString(\"class\"),\n+                new PropertyModel(taskTO, \"jobClassName\"), false);\n+        className.setChoices(classNames.getObject());\n+        className.addRequiredLabel();\n+        className.setEnabled(taskTO.getId() == 0);\n+        className.setStyleShet(\n+                \"ui-widget-content ui-corner-all long_dynamicsize\");\n+        profile.add(className);\n     }\n }"},{"sha":"6f02880db66c2143be5c8da91fd68f795c2797b7","filename":"console/src/main/java/org/syncope/console/pages/SyncTaskModalPage.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -40,7 +40,7 @@\n /**\n  * Modal window with Task form (to stop and start execution).\n  */\n-public class STaskModalPage extends SchedTaskModalPage {\n+public class SyncTaskModalPage extends AbstractSchedTaskModalPage {\n \n     private static final long serialVersionUID = 2148403203517274669L;\n \n@@ -50,7 +50,7 @@ public class STaskModalPage extends SchedTaskModalPage {\n     @SpringBean\n     private ResourceRestClient resourceRestClient;\n \n-    public STaskModalPage(\n+    public SyncTaskModalPage(\n             final ModalWindow window,\n             final SyncTaskTO taskTO) {\n \n@@ -143,12 +143,12 @@ protected Map<Long, String> load() {\n                             8463000788871139550L;\n \n                     @Override\n-                    public String getDisplayValue(Long id) {\n+                    public String getDisplayValue(final Long id) {\n                         return allRoles.getObject().get(id);\n                     }\n \n                     @Override\n-                    public String getIdValue(Long id, int index) {\n+                    public String getIdValue(final Long id, final int index) {\n                         return id.toString();\n                     }\n                 });","previous_filename":"console/src/main/java/org/syncope/console/pages/STaskModalPage.java"},{"sha":"40afdb53aa6e19737b9d3de44a354c003acd0ac4","filename":"console/src/main/java/org/syncope/console/pages/TaskModalPage.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -44,16 +44,17 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.springframework.util.StringUtils;\n+import org.syncope.client.to.NotificationTaskTO;\n import org.syncope.client.to.PropagationTaskTO;\n import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.to.TaskExecTO;\n import org.syncope.client.to.TaskTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.SortableDataProviderComparator;\n-import org.syncope.console.pages.Tasks.DatePropertyColumn;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n+import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.LinkPanel;\n@@ -80,6 +81,8 @@ public TaskModalPage(final TaskTO taskTO) {\n                 ? taskTO\n                 : taskTO instanceof PropagationTaskTO\n                 ? taskRestClient.readPropagationTask(taskTO.getId())\n+                : taskTO instanceof NotificationTaskTO\n+                ? taskRestClient.readNotificationTask(taskTO.getId())\n                 : taskTO instanceof SyncTaskTO\n                 ? taskRestClient.readSchedTask(\n                 SyncTaskTO.class, taskTO.getId())\n@@ -120,10 +123,10 @@ public TaskModalPage(final TaskTO taskTO) {\n         columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n         columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"startDate\"), \"startDate\", \"startDate\", null));\n+                new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n \n         columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"endDate\"), \"endDate\", \"endDate\", null));\n+                new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n \n         columns.add(new PropertyColumn(\n                 new ResourceModel(\"status\"), \"status\", \"status\"));"},{"sha":"d7c5f1ad1b201d7c8a0702b9594d7697e4575adc","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":8,"deletions":72,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -14,59 +14,36 @@\n  */\n package org.syncope.console.pages;\n \n-import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n-import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.util.convert.converter.DateConverter;\n import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.TaskExecTO;\n import org.syncope.client.to.TaskTO;\n-import org.syncope.console.SyncopeSession;\n-import org.syncope.console.commons.Constants;\n-import org.syncope.console.commons.SelectOption;\n import org.syncope.console.commons.SortableDataProviderComparator;\n+import org.syncope.console.pages.panels.NotificationTasks;\n import org.syncope.console.pages.panels.SchedTasks;\n import org.syncope.console.pages.panels.PropagationTasks;\n import org.syncope.console.pages.panels.SyncTasks;\n import org.syncope.console.rest.TaskRestClient;\n \n public class Tasks extends BasePage {\n \n-    public static final SelectOption[] CRON_TEMPLATES = new SelectOption[]{\n-        new SelectOption(\n-        \"Unschedule\", \"UNSCHEDULE\"),\n-        new SelectOption(\n-        \"Every 5 minutes\", \"0 0/5 * * * ?\"),\n-        new SelectOption(\n-        \"Fire at 12pm (noon) every day\", \"0 0 12 * * ?\"),\n-        new SelectOption(\n-        \"Fire at 12am (midnight) every first day of the month\", \"0 0 0 1 * ?\"),\n-        new SelectOption(\n-        \"Fire at 12am (midnight) every Last day of the month\", \"0 0 0 L * ?\"),\n-        new SelectOption(\n-        \"Fire at 12am (midnight) every Monday\", \"0 0 0 ? * 2\")\n-    };\n-\n     private static final long serialVersionUID = 5289215853622289061L;\n \n     public Tasks(final PageParameters parameters) {\n         super();\n \n         add(new PropagationTasks(\"propagation\"));\n+        add(new NotificationTasks(\"notification\"));\n         add(new SchedTasks(\"sched\"));\n         add(new SyncTasks(\"sync\"));\n     }\n@@ -121,50 +98,7 @@ public List<TaskExecTO> getTaskDB() {\n         }\n     }\n \n-    /**\n-     * Format column's value as date string.\n-     */\n-    public static class DatePropertyColumn<T> extends PropertyColumn<T> {\n-\n-        private SimpleDateFormat formatter;\n-\n-        public DatePropertyColumn(final IModel<String> displayModel,\n-                final String sortProperty,\n-                final String propertyExpression,\n-                final DateConverter converter) {\n-\n-            super(displayModel, sortProperty, propertyExpression);\n-\n-            String language = \"en\";\n-            if (SyncopeSession.get().getLocale() != null) {\n-                language = SyncopeSession.get().getLocale().getLanguage();\n-            }\n-\n-            if (\"it\".equals(language)) {\n-                formatter = new SimpleDateFormat(Constants.ITALIAN_DATE_FORMAT);\n-            } else {\n-                formatter = new SimpleDateFormat(Constants.ENGLISH_DATE_FORMAT);\n-            }\n-        }\n-\n-        @Override\n-        public void populateItem(final Item<ICellPopulator<T>> item,\n-                final String componentId, final IModel<T> rowModel) {\n-\n-            IModel date = (IModel<Date>) createLabelModel(rowModel);\n-\n-            String convertedDate = \"\";\n-\n-            if (date.getObject() != null) {\n-                convertedDate = formatter.format(date.getObject());\n-                item.add(new Label(componentId, convertedDate));\n-            } else {\n-                item.add(new Label(componentId, convertedDate));\n-            }\n-        }\n-    }\n-\n-    public static class TasksProvider<T extends SchedTaskTO>\n+    public static class TasksProvider<T extends TaskTO>\n             extends SortableDataProvider<T> {\n \n         private SortableDataProviderComparator<T> comparator;\n@@ -199,10 +133,11 @@ public Iterator<T> iterator(final int first, final int count) {\n \n             final List<T> tasks = new ArrayList<T>();\n \n-            for (T task : (List<T>) restClient.listSchedTasks(\n+            for (T task : (List<T>) restClient.listTasks(\n                     reference, (first / paginatorRows) + 1, count)) {\n \n-                if (task.getLastExec() == null\n+                if (task instanceof SchedTaskTO\n+                        && ((SchedTaskTO) task).getLastExec() == null\n                         && task.getExecutions() != null\n                         && !task.getExecutions().isEmpty()) {\n \n@@ -213,12 +148,13 @@ public Iterator<T> iterator(final int first, final int count) {\n                                 public int compare(\n                                         final TaskExecTO left,\n                                         final TaskExecTO right) {\n+\n                                     return left.getStartDate().\n                                             compareTo(right.getStartDate());\n                                 }\n                             });\n \n-                    task.setLastExec(\n+                    ((SchedTaskTO) task).setLastExec(\n                             task.getExecutions().get(\n                             task.getExecutions().size() - 1).getStartDate());\n                 }"},{"sha":"68b6e682a7a8527c72a3168902386818d3da5647","filename":"console/src/main/java/org/syncope/console/pages/Todo.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -52,9 +52,9 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.SortableDataProviderComparator;\n-import org.syncope.console.pages.Tasks.DatePropertyColumn;\n import org.syncope.console.rest.TodoRestClient;\n import org.syncope.console.wicket.markup.html.form.LinkPanel;\n+import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n \n public class Todo extends BasePage {\n \n@@ -100,9 +100,9 @@ public Todo(final PageParameters parameters) {\n         columns.add(new PropertyColumn(new ResourceModel(\"description\"),\n                 \"description\", \"description\"));\n         columns.add(new DatePropertyColumn(new ResourceModel(\"createTime\"),\n-                \"createTime\", \"createTime\", null));\n+                \"createTime\", \"createTime\"));\n         columns.add(new DatePropertyColumn(new ResourceModel(\"dueDate\"),\n-                \"dueDate\", \"dueDate\", null));\n+                \"dueDate\", \"dueDate\"));\n         columns.add(new PropertyColumn(new ResourceModel(\"owner\"),\n                 \"owner\", \"owner\"));\n         columns.add(new AbstractColumn<WorkflowFormTO>("},{"sha":"e75f7c712f05e0a0f08d1eb2cd5419c2b8f4419e","filename":"console/src/main/java/org/syncope/console/pages/TodoModalPage.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodoModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodoModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodoModalPage.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -118,8 +118,7 @@ protected void populateItem(\n \n                                 field = new DateTimeFieldPanel(\"value\",\n                                         label.getDefaultModelObjectAsString(),\n-                                        new Model(parsedDate),\n-                                        true, prop.getDatePattern());\n+                                        new Model(parsedDate), true);\n                                 break;\n \n                             case Enum:"},{"sha":"0852350ad6ce3ddff00abdb36c8612b30d5f24a2","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":20,"deletions":504,"changes":524,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -14,170 +14,51 @@\n  */\n package org.syncope.console.pages;\n \n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.List;\n import org.apache.wicket.Page;\n import org.apache.wicket.Session;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.feedback.FeedbackMessage;\n-import org.apache.wicket.feedback.IFeedbackMessageFilter;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.CheckBox;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.TextField;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.FeedbackPanel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.client.search.AttributeCond;\n-import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n-import org.syncope.client.search.ResourceCond;\n-import org.syncope.client.to.ResourceTO;\n-import org.syncope.client.to.RoleTO;\n import org.syncope.client.to.UserTO;\n-import org.syncope.console.commons.SearchConditionWrapper;\n-import org.syncope.console.commons.SearchConditionWrapper.FilterType;\n-import org.syncope.console.commons.SearchConditionWrapper.OperationType;\n import org.syncope.console.pages.panels.ResultSetPanel;\n import org.syncope.console.pages.panels.ResultSetPanel.EventDataWrapper;\n-import org.syncope.console.rest.ResourceRestClient;\n-import org.syncope.console.rest.RoleRestClient;\n-import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.pages.panels.UserSearchPanel;\n \n public class Users extends BasePage {\n \n-    private final static int EDIT_MODAL_WIN_HEIGHT = 550;\n-\n-    private final static int EDIT_MODAL_WIN_WIDTH = 800;\n-\n     private static final long serialVersionUID = 134681165644474568L;\n \n-    @SpringBean\n-    private SchemaRestClient schemaRestClient;\n-\n-    @SpringBean\n-    private RoleRestClient roleRestClient;\n+    private final static int EDIT_MODAL_WIN_HEIGHT = 550;\n \n-    @SpringBean\n-    private ResourceRestClient resourceRestClient;\n+    private final static int EDIT_MODAL_WIN_WIDTH = 800;\n \n     protected boolean modalResult = false;\n \n-    final private IModel<List<String>> schemaNames =\n-            new LoadableDetachableModel<List<String>>() {\n-\n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n-\n-                @Override\n-                protected List<String> load() {\n-                    return schemaRestClient.getSchemaNames(\"user\");\n-                }\n-            };\n-\n-    final private IModel<List<String>> roleNames =\n-            new LoadableDetachableModel<List<String>>() {\n-\n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n-\n-                @Override\n-                protected List<String> load() {\n-                    List<RoleTO> roleTOs = roleRestClient.getAllRoles();\n-\n-                    List<String> result = new ArrayList<String>(\n-                            roleTOs.size());\n-                    for (RoleTO role : roleTOs) {\n-                        result.add(role.getDisplayName());\n-                    }\n-\n-                    return result;\n-                }\n-            };\n-\n-    final private IModel<List<String>> resourceNames =\n-            new LoadableDetachableModel<List<String>>() {\n-\n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n-\n-                @Override\n-                protected List<String> load() {\n-                    List<ResourceTO> resourceTOs =\n-                            resourceRestClient.getAllResources();\n-\n-                    List<String> result =\n-                            new ArrayList<String>(resourceTOs.size());\n-\n-                    for (ResourceTO resource : resourceTOs) {\n-                        result.add(resource.getName());\n-                    }\n-\n-                    return result;\n-                }\n-            };\n-\n-    final private IModel<List<AttributeCond.Type>> attributeTypes =\n-            new LoadableDetachableModel<List<AttributeCond.Type>>() {\n-\n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n-\n-                @Override\n-                protected List<AttributeCond.Type> load() {\n-                    return Arrays.asList(AttributeCond.Type.values());\n-                }\n-            };\n-\n-    final private IModel<List<FilterType>> filterTypes =\n-            new LoadableDetachableModel<List<FilterType>>() {\n-\n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n-\n-                @Override\n-                protected List<FilterType> load() {\n-                    return Arrays.asList(FilterType.values());\n-                }\n-            };\n-\n     public Users(final PageParameters parameters) {\n         super(parameters);\n \n         // Modal window for editing user attributes\n-        final ModalWindow editModalWin =\n-                new ModalWindow(\"editModal\");\n+        final ModalWindow editModalWin = new ModalWindow(\"editModal\");\n         editModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editModalWin.setInitialHeight(EDIT_MODAL_WIN_HEIGHT);\n         editModalWin.setInitialWidth(EDIT_MODAL_WIN_WIDTH);\n         editModalWin.setCookieName(\"edit-modal\");\n         add(editModalWin);\n \n-        final ResultSetPanel searchResult =\n-                new ResultSetPanel(\"searchResult\", true, null,\n-                getPageReference());\n+        final ResultSetPanel searchResult = new ResultSetPanel(\"searchResult\",\n+                true, null, getPageReference());\n         add(searchResult);\n \n-        final ResultSetPanel listResult =\n-                new ResultSetPanel(\"listResult\", false, null, getPageReference());\n+        final ResultSetPanel listResult = new ResultSetPanel(\"listResult\",\n+                false, null, getPageReference());\n         add(listResult);\n \n         // create new user\n@@ -207,96 +88,14 @@ public Page createPage() {\n                 xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\"));\n         add(createLink);\n \n-        setWindowClosedReloadCallback(\n-                editModalWin, new ResultSetPanel[]{listResult, searchResult});\n+        setWindowClosedReloadCallback(editModalWin);\n \n-        // search form\n         final Form searchForm = new Form(\"searchForm\");\n         add(searchForm);\n \n-        final FeedbackPanel searchFeedback = new FeedbackPanel(\n-                \"searchFeedback\", new IFeedbackMessageFilter() {\n-\n-            private static final long serialVersionUID = 6895024863321391672L;\n-\n-            @Override\n-            public boolean accept(final FeedbackMessage message) {\n-                boolean result;\n-\n-                // messages reported on the session have a null reporter\n-                if (message.getReporter() != null) {\n-                    // only accept messages coming from the children\n-                    // of the form\n-                    result = searchForm.contains(message.getReporter(), true);\n-                } else {\n-                    result = false;\n-                }\n-\n-                return result;\n-            }\n-        });\n-        searchFeedback.setOutputMarkupId(true);\n-        searchForm.add(searchFeedback);\n-\n-        final WebMarkupContainer searchFormContainer =\n-                new WebMarkupContainer(\"searchFormContainer\");\n-        searchFormContainer.setOutputMarkupId(true);\n-        searchForm.add(searchFormContainer);\n-\n-        final List<SearchConditionWrapper> searchConditionList =\n-                new ArrayList<SearchConditionWrapper>();\n-        searchConditionList.add(new SearchConditionWrapper());\n-\n-        searchFormContainer.add(new SearchView(\"searchView\",\n-                searchConditionList, searchFormContainer));\n-\n-        AjaxButton addAndButton = new IndicatingAjaxButton(\"addAndButton\",\n-                new ResourceModel(\"addAndButton\")) {\n-\n-            private static final long serialVersionUID = -4804368561204623354L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n-\n-                SearchConditionWrapper conditionWrapper =\n-                        new SearchConditionWrapper();\n-                conditionWrapper.setOperationType(OperationType.AND);\n-                searchConditionList.add(conditionWrapper);\n-                target.add(searchFormContainer);\n-            }\n-\n-            @Override\n-            protected void onError(AjaxRequestTarget target, Form<?> form) {\n-                target.add(searchFormContainer);\n-            }\n-        };\n-        addAndButton.setDefaultFormProcessing(false);\n-        searchFormContainer.add(addAndButton);\n-\n-        AjaxButton addOrButton = new IndicatingAjaxButton(\"addOrButton\",\n-                new ResourceModel(\"addOrButton\")) {\n-\n-            private static final long serialVersionUID = -4804368561204623354L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n-\n-                SearchConditionWrapper conditionWrapper =\n-                        new SearchConditionWrapper();\n-                conditionWrapper.setOperationType(OperationType.OR);\n-                searchConditionList.add(conditionWrapper);\n-                target.add(searchFormContainer);\n-            }\n-\n-            @Override\n-            protected void onError(AjaxRequestTarget target, Form<?> form) {\n-                target.add(searchFormContainer);\n-            }\n-        };\n-        addOrButton.setDefaultFormProcessing(false);\n-        searchFormContainer.add(addOrButton);\n+        final UserSearchPanel searchPanel =\n+                new UserSearchPanel(\"searchPanel\");\n+        searchForm.add(searchPanel);\n \n         searchForm.add(new IndicatingAjaxButton(\n                 \"search\", new ResourceModel(\"search\")) {\n@@ -307,28 +106,28 @@ protected void onError(AjaxRequestTarget target, Form<?> form) {\n             protected void onSubmit(final AjaxRequestTarget target,\n                     final Form<?> form) {\n \n-                doSearch(target, searchConditionList, searchResult);\n+                final NodeCond searchCond = searchPanel.buildSearchCond();\n+                LOG.debug(\"Node condition \" + searchCond);\n+\n+                doSearch(target, searchCond, searchResult);\n \n                 Session.get().getFeedbackMessages().clear();\n-                target.add(searchFeedback);\n+                target.add(searchPanel.getSearchFeedback());\n             }\n \n             @Override\n             protected void onError(final AjaxRequestTarget target,\n                     final Form form) {\n \n-                target.add(searchFeedback);\n+                target.add(searchPanel.getSearchFeedback());\n             }\n         });\n     }\n \n     private void doSearch(final AjaxRequestTarget target,\n-            final List<SearchConditionWrapper> searchConditionList,\n+            final NodeCond searchCond,\n             final ResultSetPanel resultsetPanel) {\n \n-        NodeCond searchCond = buildSearchCond(searchConditionList);\n-        LOG.debug(\"Node condition \" + searchCond);\n-\n         if (searchCond == null || !searchCond.checkValidity()) {\n             error(getString(\"search_error\"));\n             return;\n@@ -345,290 +144,7 @@ public boolean isModalResult() {\n         return modalResult;\n     }\n \n-    private NodeCond buildSearchCond(\n-            final List<SearchConditionWrapper> conditions) {\n-\n-        // inverse processing: from right to left\n-        // (OperationType is specified on the right)\n-        SearchConditionWrapper searchConditionWrapper =\n-                conditions.get(conditions.size() - 1);\n-\n-        LOG.debug(\"Search conditions: \"\n-                + \"fname {}; ftype {}; fvalue {}; OP {}; type {}; isnot {}\",\n-                new Object[]{\n-                    searchConditionWrapper.getFilterName(),\n-                    searchConditionWrapper.getFilterType(),\n-                    searchConditionWrapper.getFilterValue(),\n-                    searchConditionWrapper.getOperationType(),\n-                    searchConditionWrapper.getType(),\n-                    searchConditionWrapper.isNotOperator()});\n-\n-        NodeCond nodeCond = null;\n-\n-        switch (searchConditionWrapper.getFilterType()) {\n-            case ATTRIBUTE:\n-                final AttributeCond attributeCond = new AttributeCond();\n-                attributeCond.setSchema(searchConditionWrapper.getFilterName());\n-                attributeCond.setType(searchConditionWrapper.getType());\n-                attributeCond.setExpression(\n-                        searchConditionWrapper.getFilterValue());\n-\n-                if (searchConditionWrapper.isNotOperator()) {\n-                    nodeCond = NodeCond.getNotLeafCond(attributeCond);\n-                } else {\n-                    nodeCond = NodeCond.getLeafCond(attributeCond);\n-                }\n-\n-                break;\n-            case MEMBERSHIP:\n-                final MembershipCond membershipCond = new MembershipCond();\n-                membershipCond.setRoleId(RoleTO.fromDisplayName(\n-                        searchConditionWrapper.getFilterName()));\n-\n-                if (searchConditionWrapper.isNotOperator()) {\n-                    nodeCond = NodeCond.getNotLeafCond(membershipCond);\n-                } else {\n-                    nodeCond = NodeCond.getLeafCond(membershipCond);\n-                }\n-\n-                break;\n-            case RESOURCE:\n-                final ResourceCond resourceCond = new ResourceCond();\n-                resourceCond.setResourceName(\n-                        searchConditionWrapper.getFilterName());\n-\n-                if (searchConditionWrapper.isNotOperator()) {\n-                    nodeCond = NodeCond.getNotLeafCond(resourceCond);\n-                } else {\n-                    nodeCond = NodeCond.getLeafCond(resourceCond);\n-                }\n-\n-                break;\n-            default:\n-            // nothing to do\n-        }\n-\n-        LOG.debug(\"Processed condition {}\", nodeCond);\n-\n-        if (conditions.size() > 1) {\n-            List<SearchConditionWrapper> subList =\n-                    conditions.subList(0, conditions.size() - 1);\n-\n-            if (OperationType.OR.equals(\n-                    searchConditionWrapper.getOperationType())) {\n-                nodeCond = NodeCond.getOrCond(\n-                        nodeCond,\n-                        buildSearchCond(subList));\n-            } else {\n-                nodeCond = NodeCond.getAndCond(\n-                        nodeCond,\n-                        buildSearchCond(subList));\n-            }\n-        }\n-\n-        return nodeCond;\n-    }\n-\n-    private class SearchView extends ListView<SearchConditionWrapper> {\n-\n-        private static final long serialVersionUID = -527351923968737757L;\n-\n-        final private WebMarkupContainer searchFormContainer;\n-\n-        public SearchView(final String id,\n-                final List<? extends SearchConditionWrapper> list,\n-                final WebMarkupContainer searchFormContainer) {\n-\n-            super(id, list);\n-            this.searchFormContainer = searchFormContainer;\n-        }\n-\n-        @Override\n-        protected void populateItem(\n-                final ListItem<SearchConditionWrapper> item) {\n-\n-            final SearchConditionWrapper searchCondition =\n-                    item.getModelObject();\n-\n-            if (item.getIndex() == 0) {\n-                item.add(new Label(\"operationType\", \"\"));\n-            } else {\n-                item.add(new Label(\"operationType\",\n-                        searchCondition.getOperationType().\n-                        toString()));\n-            }\n-\n-            final CheckBox notOperator = new CheckBox(\"notOperator\",\n-                    new PropertyModel(searchCondition, \"notOperator\"));\n-            notOperator.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(AjaxRequestTarget art) {\n-                }\n-            });\n-\n-            item.add(notOperator);\n-\n-            final DropDownChoice<String> filterNameChooser =\n-                    new DropDownChoice<String>(\"filterName\",\n-                    new PropertyModel<String>(\n-                    searchCondition, \"filterName\"), (IModel) null);\n-            filterNameChooser.setOutputMarkupId(true);\n-            filterNameChooser.setRequired(true);\n-            item.add(filterNameChooser);\n-\n-            filterNameChooser.add(\n-                    new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                        private static final long serialVersionUID =\n-                                -1107858522700306810L;\n-\n-                        @Override\n-                        protected void onUpdate(AjaxRequestTarget art) {\n-                        }\n-                    });\n-\n-            final DropDownChoice<AttributeCond.Type> type =\n-                    new DropDownChoice<AttributeCond.Type>(\n-                    \"type\", new PropertyModel<AttributeCond.Type>(\n-                    searchCondition, \"type\"),\n-                    attributeTypes);\n-            type.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(AjaxRequestTarget art) {\n-                }\n-            });\n-\n-            item.add(type);\n-\n-            final TextField<String> filterValue =\n-                    new TextField<String>(\"filterValue\",\n-                    new PropertyModel<String>(searchCondition,\n-                    \"filterValue\"));\n-            item.add(filterValue);\n-            filterValue.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(AjaxRequestTarget art) {\n-                }\n-            });\n-\n-            try {\n-                switch (searchCondition.getFilterType()) {\n-                    case ATTRIBUTE:\n-                        filterNameChooser.setChoices(schemaNames);\n-                        if (!type.isEnabled()) {\n-                            type.setEnabled(true);\n-                            type.setRequired(true);\n-                        }\n-                        if (!filterValue.isEnabled()) {\n-                            filterValue.setEnabled(true);\n-                        }\n-                        break;\n-                    case MEMBERSHIP:\n-                        filterNameChooser.setChoices(roleNames);\n-                        type.setEnabled(false);\n-                        type.setRequired(false);\n-                        type.setModelObject(null);\n-\n-                        filterValue.setEnabled(false);\n-                        filterValue.setModelObject(\"\");\n-\n-                        break;\n-                    case RESOURCE:\n-                        filterNameChooser.setChoices(resourceNames);\n-                        type.setEnabled(false);\n-                        type.setRequired(false);\n-                        type.setModelObject(null);\n-\n-                        filterValue.setEnabled(false);\n-                        filterValue.setModelObject(\"\");\n-\n-                        break;\n-                    default:\n-                        filterNameChooser.setChoices(Collections.EMPTY_LIST);\n-                }\n-            } catch (NullPointerException npe) {\n-                // searchCondition null\n-                filterNameChooser.setChoices(Collections.EMPTY_LIST);\n-            }\n-\n-            final DropDownChoice<FilterType> filterTypeChooser =\n-                    new DropDownChoice<FilterType>(\"filterType\",\n-                    new PropertyModel<FilterType>(searchCondition,\n-                    \"filterType\"), filterTypes);\n-            filterTypeChooser.setOutputMarkupId(true);\n-\n-            filterTypeChooser.add(\n-                    new AjaxFormComponentUpdatingBehavior(\n-                    \"onchange\") {\n-\n-                        private static final long serialVersionUID =\n-                                -1107858522700306810L;\n-\n-                        @Override\n-                        protected void onUpdate(\n-                                final AjaxRequestTarget target) {\n-\n-                            filterNameChooser.setChoices(\n-                                    searchCondition.getFilterType()\n-                                    == FilterType.ATTRIBUTE\n-                                    ? schemaNames : roleNames);\n-                            target.add(filterNameChooser);\n-                            target.add(searchFormContainer);\n-                        }\n-                    });\n-\n-            filterTypeChooser.setRequired(true);\n-\n-            item.add(filterTypeChooser);\n-\n-            AjaxButton dropButton = new IndicatingAjaxButton(\n-                    \"dropButton\", new ResourceModel(\"dropButton\")) {\n-\n-                private static final long serialVersionUID =\n-                        -4804368561204623354L;\n-\n-                @Override\n-                protected void onSubmit(final AjaxRequestTarget target,\n-                        final Form<?> form) {\n-\n-                    getList().remove(\n-                            Integer.valueOf(getParent().getId()).intValue());\n-                    target.add(searchFormContainer);\n-                }\n-\n-                @Override\n-                protected void onError(AjaxRequestTarget target,\n-                        final Form<?> form) {\n-                    target.add(searchFormContainer);\n-                }\n-            };\n-\n-            dropButton.setDefaultFormProcessing(false);\n-\n-            if (item.getIndex() == 0) {\n-                dropButton.setVisible(false);\n-            }\n-\n-            item.add(dropButton);\n-        }\n-    }\n-\n-    private void setWindowClosedReloadCallback(\n-            final ModalWindow window,\n-            final ResultSetPanel[] panels) {\n-\n+    private void setWindowClosedReloadCallback(final ModalWindow window) {\n         window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n             private static final long serialVersionUID = 8804221891699487139L;"},{"sha":"87ba9ca79234b1588100ddc2e9d991ceeda4410e","filename":"console/src/main/java/org/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -207,8 +207,7 @@ private Panel getFieldPanel(\n                     }\n                 } else {\n                     panel = new DateTimeFieldPanel(\n-                            \"panel\", schemaTO.getName(), new Model(), true,\n-                            schemaTO.getConversionPattern());\n+                            \"panel\", schemaTO.getName(), new Model(), true);\n \n                     if (required) {\n                         panel.addRequiredLabel();"},{"sha":"084f67a1f52df5bc2ee6084e950b2a0ead1bf9b7","filename":"console/src/main/java/org/syncope/console/pages/panels/NotificationTasks.java","status":"added","additions":290,"deletions":0,"changes":290,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,290 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.request.http.WebResponse;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.client.to.NotificationTaskTO;\n+import org.syncope.client.to.TaskTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.commons.Constants;\n+import org.syncope.console.commons.PreferenceManager;\n+import org.syncope.console.commons.XMLRolesReader;\n+import org.syncope.console.pages.NotificationTaskModalPage;\n+import org.syncope.console.pages.Tasks.TasksProvider;\n+import org.syncope.console.rest.TaskRestClient;\n+import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n+import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n+import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n+import org.syncope.console.wicket.markup.html.form.LinkPanel;\n+\n+public class NotificationTasks extends Panel {\n+\n+    private static final int WIN_HEIGHT = 500;\n+\n+    private static final int WIN_WIDTH = 700;\n+\n+    private static final long serialVersionUID = 4984337552918213290L;\n+\n+    @SpringBean\n+    private TaskRestClient restClient;\n+\n+    @SpringBean\n+    private PreferenceManager prefMan;\n+\n+    private int paginatorRows;\n+\n+    private WebMarkupContainer container;\n+\n+    private boolean operationResult = false;\n+\n+    private ModalWindow window;\n+\n+    @SpringBean\n+    protected XMLRolesReader xmlRolesReader;\n+\n+    public NotificationTasks(String id) {\n+        super(id);\n+\n+        add(window = new ModalWindow(\"taskWin\"));\n+\n+        paginatorRows = prefMan.getPaginatorRows(\n+                getWebRequest(),\n+                Constants.PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS);\n+\n+        List<IColumn<TaskTO>> columns = new ArrayList<IColumn<TaskTO>>();\n+\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"sender\"), \"sender\", \"sender\"));\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"recipients\"), \"recipients\", \"recipients\"));\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"subject\"), \"subject\", \"subject\"));\n+        columns.add(new PropertyColumn(\n+                new ResourceModel(\"traceLevel\"), \"traceLevel\", \"traceLevel\"));\n+\n+        columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"detail\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<TaskTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<TaskTO> model) {\n+\n+                final TaskTO taskTO = model.getObject();\n+\n+                AjaxLink viewLink = new IndicatingAjaxLink(\"editLink\") {\n+\n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+\n+                        window.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID =\n+                                    -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new NotificationTaskModalPage(taskTO);\n+                            }\n+                        });\n+\n+                        window.show(target);\n+                    }\n+                };\n+\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(viewLink);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"read\"));\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"execute\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<TaskTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<TaskTO> model) {\n+\n+                final TaskTO taskTO = model.getObject();\n+\n+                AjaxLink executeLink = new IndicatingAjaxLink(\"link\") {\n+\n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        try {\n+                            restClient.startExecution(taskTO.getId(), false);\n+                            getSession().info(getString(\"operation_succeded\"));\n+                        } catch (SyncopeClientCompositeErrorException scce) {\n+                            error(scce.getMessage());\n+                        }\n+\n+                        target.add(getPage().get(\"feedback\"));\n+                        target.add(container);\n+                    }\n+                };\n+\n+                executeLink.add(new Label(\"linkTitle\", getString(\"execute\")));\n+\n+                LinkPanel panel = new LinkPanel(componentId);\n+                panel.add(executeLink);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"execute\"));\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"delete\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<TaskTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<TaskTO> model) {\n+\n+                final TaskTO taskTO = model.getObject();\n+\n+                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n+                        \"deleteLink\") {\n+\n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        try {\n+                            restClient.delete(taskTO.getId());\n+                            info(getString(\"operation_succeded\"));\n+                        } catch (SyncopeClientCompositeErrorException scce) {\n+                            error(scce.getMessage());\n+                        }\n+                        target.add(container);\n+                        target.add(getPage().get(\"feedback\"));\n+                    }\n+                };\n+\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"delete\"));\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        final AjaxFallbackDefaultDataTable<TaskTO> table =\n+                new AjaxFallbackDefaultDataTable<TaskTO>(\n+                \"datatable\", columns, new TasksProvider(restClient,\n+                paginatorRows, getId(), NotificationTaskTO.class),\n+                paginatorRows);\n+\n+        container = new WebMarkupContainer(\"container\");\n+        container.add(table);\n+        container.setOutputMarkupId(true);\n+\n+        add(container);\n+\n+        window.setWindowClosedCallback(\n+                new ModalWindow.WindowClosedCallback() {\n+\n+                    private static final long serialVersionUID =\n+                            8804221891699487139L;\n+\n+                    @Override\n+                    public void onClose(final AjaxRequestTarget target) {\n+                        target.add(container);\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.add(getPage().get(\"feedback\"));\n+                            operationResult = false;\n+                        }\n+                    }\n+                });\n+\n+        window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        window.setInitialHeight(WIN_HEIGHT);\n+        window.setInitialWidth(WIN_WIDTH);\n+        window.setCookieName(\"view-task-win\");\n+\n+        Form paginatorForm = new Form(\"PaginatorForm\");\n+\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n+                new PropertyModel(this, \"paginatorRows\"),\n+                prefMan.getPaginatorChoices());\n+\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n+                        Constants.PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS,\n+                        String.valueOf(paginatorRows));\n+\n+                table.setItemsPerPage(paginatorRows);\n+\n+                target.add(container);\n+            }\n+        });\n+\n+        paginatorForm.add(rowsChooser);\n+        add(paginatorForm);\n+    }\n+}"},{"sha":"6883f2c094b513364c75a7c819e56bbc8256c5b7","filename":"console/src/main/java/org/syncope/console/pages/panels/PolicyBeanPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -101,7 +101,8 @@ public PolicyBeanPanel(\n             }\n         }\n \n-        final ListView<FieldWrapper> policies = new ListView<FieldWrapper>(\"policies\", items) {\n+        final ListView<FieldWrapper> policies = new ListView<FieldWrapper>(\n+                \"policies\", items) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n "},{"sha":"ec5d14ee0487dc7a07fbff01a8ee74c8fd54acc3","filename":"console/src/main/java/org/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":11,"deletions":48,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -15,8 +15,6 @@\n package org.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Iterator;\n import java.util.List;\n \n import org.apache.wicket.Page;\n@@ -28,18 +26,15 @@\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -50,9 +45,9 @@\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n-import org.syncope.console.commons.SortableDataProviderComparator;\n import org.syncope.console.commons.XMLRolesReader;\n-import org.syncope.console.pages.PTaskModalPage;\n+import org.syncope.console.pages.PropagationTaskModalPage;\n+import org.syncope.console.pages.Tasks.TasksProvider;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n@@ -80,10 +75,6 @@ public class PropagationTasks extends Panel {\n \n     private WebMarkupContainer container;\n \n-    /**\n-     * Response flag set by the Modal Window after the operation is completed:\n-     * TRUE if the operation succedes, FALSE otherwise\n-     */\n     private boolean operationResult = false;\n \n     private ModalWindow window;\n@@ -98,7 +89,7 @@ public PropagationTasks(final String id) {\n \n         paginatorRows = prefMan.getPaginatorRows(\n                 getWebRequest(),\n-                Constants.PREF_TASKS_PAGINATOR_ROWS);\n+                Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS);\n \n         List<IColumn<TaskTO>> columns = new ArrayList<IColumn<TaskTO>>();\n \n@@ -133,6 +124,9 @@ public void populateItem(\n \n                 AjaxLink viewLink = new IndicatingAjaxLink(\"editLink\") {\n \n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n+\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n@@ -143,7 +137,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new PTaskModalPage(taskTO);\n+                                return new PropagationTaskModalPage(taskTO);\n                             }\n                         });\n \n@@ -247,7 +241,9 @@ public void onClick(final AjaxRequestTarget target) {\n \n         final AjaxFallbackDefaultDataTable<TaskTO> table =\n                 new AjaxFallbackDefaultDataTable<TaskTO>(\n-                \"datatable\", columns, new TasksProvider(), paginatorRows);\n+                \"datatable\", columns, new TasksProvider(restClient,\n+                paginatorRows, getId(), PropagationTaskTO.class),\n+                paginatorRows);\n \n         container = new WebMarkupContainer(\"container\");\n         container.add(table);\n@@ -290,7 +286,7 @@ public void onClose(final AjaxRequestTarget target) {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n-                        Constants.PREF_TASKS_PAGINATOR_ROWS,\n+                        Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS,\n                         String.valueOf(paginatorRows));\n \n                 table.setItemsPerPage(paginatorRows);\n@@ -302,37 +298,4 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n     }\n-\n-    private class TasksProvider extends SortableDataProvider<TaskTO> {\n-\n-        private static final long serialVersionUID = 4086548740205316461L;\n-\n-        private SortableDataProviderComparator<TaskTO> comparator;\n-\n-        public TasksProvider() {\n-            super();\n-            //Default sorting\n-            setSort(\"id\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<TaskTO>(this);\n-        }\n-\n-        @Override\n-        public Iterator<PropagationTaskTO> iterator(int first, int count) {\n-            final List<PropagationTaskTO> tasks =\n-                    restClient.listPropagationTasks(\n-                    (first / paginatorRows) + 1, count);\n-            Collections.sort(tasks, comparator);\n-            return tasks.iterator();\n-        }\n-\n-        @Override\n-        public int size() {\n-            return restClient.count(getId());\n-        }\n-\n-        @Override\n-        public IModel<TaskTO> model(final TaskTO object) {\n-            return new CompoundPropertyModel<TaskTO>(object);\n-        }\n-    }\n }"},{"sha":"8a2e0e2d8a1c444dc5e7d6de1dbfd5e177585f8a","filename":"console/src/main/java/org/syncope/console/pages/panels/ResultSetPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -72,7 +72,7 @@ public class ResultSetPanel extends Panel implements IEventSource {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n+    private static final Logger LOG =\n             LoggerFactory.getLogger(ResultSetPanel.class);\n \n     /**"},{"sha":"3fb1b82dcb8d197158b97298d864522042feb5c0","filename":"console/src/main/java/org/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":8,"deletions":12,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -45,14 +45,14 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.XMLRolesReader;\n-import org.syncope.console.pages.GTaskModalPage;\n-import org.syncope.console.pages.Tasks.DatePropertyColumn;\n+import org.syncope.console.pages.SchedTaskModalPage;\n import org.syncope.console.pages.Tasks.TasksProvider;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n import org.syncope.console.wicket.markup.html.form.LinkPanel;\n+import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n \n public class SchedTasks extends Panel {\n \n@@ -70,10 +70,6 @@ public class SchedTasks extends Panel {\n \n     private WebMarkupContainer container;\n \n-    /**\n-     * Response flag set by the Modal Window after the operation is completed:\n-     * TRUE if the operation succedes, FALSE otherwise\n-     */\n     private boolean operationResult = false;\n \n     private ModalWindow window;\n@@ -91,7 +87,7 @@ public SchedTasks(String id) {\n \n         paginatorRows = prefMan.getPaginatorRows(\n                 getWebRequest(),\n-                Constants.PREF_TASKS_PAGINATOR_ROWS);\n+                Constants.PREF_SCHED_TASKS_PAGINATOR_ROWS);\n \n         List<IColumn<SchedTaskTO>> columns =\n                 new ArrayList<IColumn<SchedTaskTO>>();\n@@ -103,10 +99,10 @@ public SchedTasks(String id) {\n                 new ResourceModel(\"class\"), \"jobClassName\", \"jobClassName\"));\n \n         columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\", null));\n+                new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n \n         columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\", null));\n+                new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n \n         columns.add(new AbstractColumn<SchedTaskTO>(\n                 new ResourceModel(\"detail\")) {\n@@ -136,7 +132,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new GTaskModalPage(window, taskTO);\n+                                return new SchedTaskModalPage(window, taskTO);\n                             }\n                         });\n \n@@ -332,7 +328,7 @@ public void onClose(final AjaxRequestTarget target) {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n-                        Constants.PREF_TASKS_PAGINATOR_ROWS,\n+                        Constants.PREF_SCHED_TASKS_PAGINATOR_ROWS,\n                         String.valueOf(paginatorRows));\n \n                 table.setItemsPerPage(paginatorRows);\n@@ -358,7 +354,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new GTaskModalPage(window, new SchedTaskTO());\n+                        return new SchedTaskModalPage(window, new SchedTaskTO());\n                     }\n                 });\n "},{"sha":"4a5a13bf4b6b6db8d3c97eb3b65634f596dd9086","filename":"console/src/main/java/org/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -44,14 +44,14 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.XMLRolesReader;\n-import org.syncope.console.pages.STaskModalPage;\n-import org.syncope.console.pages.Tasks.DatePropertyColumn;\n+import org.syncope.console.pages.SyncTaskModalPage;\n import org.syncope.console.pages.Tasks.TasksProvider;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n import org.syncope.console.wicket.markup.html.form.LinkPanel;\n+import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n \n public class SyncTasks extends Panel {\n \n@@ -92,7 +92,7 @@ public SyncTasks(String id) {\n \n         paginatorRows = prefMan.getPaginatorRows(\n                 getWebRequest(),\n-                Constants.PREF_TASKS_PAGINATOR_ROWS);\n+                Constants.PREF_SYNC_TASKS_PAGINATOR_ROWS);\n \n         List<IColumn<SyncTaskTO>> columns =\n                 new ArrayList<IColumn<SyncTaskTO>>();\n@@ -104,10 +104,10 @@ public SyncTasks(String id) {\n                 new ResourceModel(\"resourceName\"), \"resource\", \"resource\"));\n \n         columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\", null));\n+                new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n \n         columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\", null));\n+                new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n \n         columns.add(new AbstractColumn<SyncTaskTO>(\n                 new ResourceModel(\"detail\")) {\n@@ -137,7 +137,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new STaskModalPage(window, taskTO);\n+                                return new SyncTaskModalPage(window, taskTO);\n                             }\n                         });\n \n@@ -333,7 +333,7 @@ public void onClose(final AjaxRequestTarget target) {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n-                        Constants.PREF_TASKS_PAGINATOR_ROWS,\n+                        Constants.PREF_SYNC_TASKS_PAGINATOR_ROWS,\n                         String.valueOf(paginatorRows));\n \n                 table.setItemsPerPage(paginatorRows);\n@@ -359,7 +359,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new STaskModalPage(window, new SyncTaskTO());\n+                        return new SyncTaskModalPage(window, new SyncTaskTO());\n                     }\n                 });\n "},{"sha":"0dd3e8be61dd139131657273fb64a22a50bfdd9f","filename":"console/src/main/java/org/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -26,7 +26,6 @@\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.format.annotation.DateTimeFormat;\n import org.syncope.client.to.AbstractAttributableTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n@@ -113,8 +112,7 @@ public void onComponentTag(\n                 \"creationDate\",\n                 \"creationDate\",\n                 new Model<Date>(userTO.getCreationDate()),\n-                false,\n-                DateTimeFormat.ISO.DATE_TIME.toString());\n+                false);\n \n         creationDate.setReadOnly(true);\n         add(creationDate);\n@@ -127,8 +125,7 @@ public void onComponentTag(\n                 \"changePwdDate\",\n                 \"changePwdDate\",\n                 new Model<Date>(userTO.getChangePwdDate()),\n-                false,\n-                DateTimeFormat.ISO.DATE_TIME.toString());\n+                false);\n \n         changePwdDate.setReadOnly(true);\n         add(changePwdDate);\n@@ -141,8 +138,7 @@ public void onComponentTag(\n                 \"lastLoginDate\",\n                 \"lastLoginDate\",\n                 new Model<Date>(userTO.getLastLoginDate()),\n-                false,\n-                DateTimeFormat.ISO.DATE_TIME.toString());\n+                false);\n \n         lastLoginDate.setReadOnly(true);\n         add(lastLoginDate);\n@@ -181,8 +177,7 @@ public void onComponentTag(\n                 \"tokenExpireTime\",\n                 \"tokenExpireTime\",\n                 new Model<Date>(userTO.getTokenExpireTime()),\n-                false,\n-                DateTimeFormat.ISO.DATE_TIME.toString());\n+                false);\n \n         tokenExpireTime.setReadOnly(true);\n         add(tokenExpireTime);"},{"sha":"3c1cd29c53cc4fbcef2ebae9507e381cc8cb4e17","filename":"console/src/main/java/org/syncope/console/pages/panels/UserSearchPanel.java","status":"added","additions":611,"deletions":0,"changes":611,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,611 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.feedback.FeedbackMessage;\n+import org.apache.wicket.feedback.IFeedbackMessageFilter;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.CheckBox;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.syncope.client.search.AttributeCond;\n+import org.syncope.client.search.MembershipCond;\n+import org.syncope.client.search.NodeCond;\n+import org.syncope.client.search.ResourceCond;\n+import org.syncope.client.to.ResourceTO;\n+import org.syncope.client.to.RoleTO;\n+import org.syncope.console.commons.SearchCondWrapper;\n+import org.syncope.console.commons.SearchCondWrapper.FilterType;\n+import org.syncope.console.commons.SearchCondWrapper.OperationType;\n+import org.syncope.console.rest.ResourceRestClient;\n+import org.syncope.console.rest.RoleRestClient;\n+import org.syncope.console.rest.SchemaRestClient;\n+\n+public class UserSearchPanel extends Panel {\n+\n+    private static final long serialVersionUID = -1769527800450203738L;\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(UserSearchPanel.class);\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n+\n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n+\n+    final private IModel<List<String>> schemaNames =\n+            new LoadableDetachableModel<List<String>>() {\n+\n+                private static final long serialVersionUID =\n+                        5275935387613157437L;\n+\n+                @Override\n+                protected List<String> load() {\n+                    return schemaRestClient.getSchemaNames(\"user\");\n+                }\n+            };\n+\n+    final private IModel<List<String>> roleNames =\n+            new LoadableDetachableModel<List<String>>() {\n+\n+                private static final long serialVersionUID =\n+                        5275935387613157437L;\n+\n+                @Override\n+                protected List<String> load() {\n+                    List<RoleTO> roleTOs = roleRestClient.getAllRoles();\n+\n+                    List<String> result = new ArrayList<String>(\n+                            roleTOs.size());\n+                    for (RoleTO role : roleTOs) {\n+                        result.add(role.getDisplayName());\n+                    }\n+\n+                    return result;\n+                }\n+            };\n+\n+    final private IModel<List<String>> resourceNames =\n+            new LoadableDetachableModel<List<String>>() {\n+\n+                private static final long serialVersionUID =\n+                        5275935387613157437L;\n+\n+                @Override\n+                protected List<String> load() {\n+                    List<ResourceTO> resourceTOs =\n+                            resourceRestClient.getAllResources();\n+\n+                    List<String> result =\n+                            new ArrayList<String>(resourceTOs.size());\n+\n+                    for (ResourceTO resource : resourceTOs) {\n+                        result.add(resource.getName());\n+                    }\n+\n+                    return result;\n+                }\n+            };\n+\n+    final private IModel<List<AttributeCond.Type>> attributeTypes =\n+            new LoadableDetachableModel<List<AttributeCond.Type>>() {\n+\n+                private static final long serialVersionUID =\n+                        5275935387613157437L;\n+\n+                @Override\n+                protected List<AttributeCond.Type> load() {\n+                    return Arrays.asList(AttributeCond.Type.values());\n+                }\n+            };\n+\n+    final private IModel<List<FilterType>> filterTypes =\n+            new LoadableDetachableModel<List<FilterType>>() {\n+\n+                private static final long serialVersionUID =\n+                        5275935387613157437L;\n+\n+                @Override\n+                protected List<FilterType> load() {\n+                    return Arrays.asList(FilterType.values());\n+                }\n+            };\n+\n+    final FeedbackPanel searchFeedback;\n+\n+    final List<SearchCondWrapper> searchConditionList;\n+\n+    public UserSearchPanel(final String id) {\n+        this(id, null);\n+    }\n+\n+    public UserSearchPanel(final String id, final NodeCond searchCondition) {\n+        super(id);\n+\n+        setOutputMarkupId(true);\n+\n+        final WebMarkupContainer searchFormContainer =\n+                new WebMarkupContainer(\"searchFormContainer\");\n+        searchFormContainer.setOutputMarkupId(true);\n+\n+        searchFeedback = new FeedbackPanel(\n+                \"searchFeedback\", new IFeedbackMessageFilter() {\n+\n+            private static final long serialVersionUID = 6895024863321391672L;\n+\n+            @Override\n+            public boolean accept(final FeedbackMessage message) {\n+                boolean result;\n+\n+                // messages reported on the session have a null reporter\n+                if (message.getReporter() != null) {\n+                    // only accept messages coming from the children\n+                    // of the search form container\n+                    result = searchFormContainer.contains(\n+                            message.getReporter(), true);\n+                } else {\n+                    result = false;\n+                }\n+\n+                return result;\n+            }\n+        });\n+        searchFeedback.setOutputMarkupId(true);\n+        add(searchFeedback);\n+\n+        if (searchCondition == null) {\n+            searchConditionList = new ArrayList<SearchCondWrapper>();\n+            searchConditionList.add(new SearchCondWrapper());\n+        } else {\n+            searchConditionList = getSearchCondWrappers(searchCondition);\n+        }\n+        searchFormContainer.add(new SearchView(\"searchView\",\n+                searchConditionList, searchFormContainer));\n+\n+        AjaxButton addAndButton = new IndicatingAjaxButton(\"addAndButton\",\n+                new ResourceModel(\"addAndButton\")) {\n+\n+            private static final long serialVersionUID = -4804368561204623354L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form<?> form) {\n+\n+                SearchCondWrapper conditionWrapper =\n+                        new SearchCondWrapper();\n+                conditionWrapper.setOperationType(OperationType.AND);\n+                searchConditionList.add(conditionWrapper);\n+                target.add(searchFormContainer);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target,\n+                    final Form<?> form) {\n+\n+                target.add(searchFormContainer);\n+            }\n+        };\n+        addAndButton.setDefaultFormProcessing(false);\n+        searchFormContainer.add(addAndButton);\n+\n+        AjaxButton addOrButton = new IndicatingAjaxButton(\"addOrButton\",\n+                new ResourceModel(\"addOrButton\")) {\n+\n+            private static final long serialVersionUID = -4804368561204623354L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form<?> form) {\n+\n+                SearchCondWrapper conditionWrapper =\n+                        new SearchCondWrapper();\n+                conditionWrapper.setOperationType(OperationType.OR);\n+                searchConditionList.add(conditionWrapper);\n+                target.add(searchFormContainer);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target,\n+                    final Form<?> form) {\n+\n+                target.add(searchFormContainer);\n+            }\n+        };\n+        addOrButton.setDefaultFormProcessing(false);\n+        searchFormContainer.add(addOrButton);\n+\n+        add(searchFormContainer);\n+    }\n+\n+    public FeedbackPanel getSearchFeedback() {\n+        return searchFeedback;\n+    }\n+\n+    private final List<SearchCondWrapper> getSearchCondWrappers(\n+            final NodeCond searchCond) {\n+\n+        LOG.debug(\"Search condition: {}\", searchCond);\n+\n+        List<SearchCondWrapper> wrappers =\n+                new ArrayList<SearchCondWrapper>();\n+\n+        switch (searchCond.getType()) {\n+            case LEAF:\n+            case NOT_LEAF:\n+                wrappers.add(getSearchCondWrapper(searchCond));\n+                break;\n+\n+            case AND:\n+            case OR:\n+                wrappers.add(getSearchCondWrapper(\n+                        searchCond.getLeftNodeCond()));\n+                SearchCondWrapper wrapper = getSearchCondWrapper(\n+                        searchCond.getRightNodeCond());\n+                wrapper.setOperationType(\n+                        searchCond.getType() == NodeCond.Type.AND\n+                        ? OperationType.AND : OperationType.OR);\n+                wrappers.add(wrapper);\n+                break;\n+\n+            default:\n+        }\n+\n+        LOG.debug(\"Search condition wrappers: {}\", wrappers);\n+\n+        return wrappers;\n+    }\n+\n+    private final SearchCondWrapper getSearchCondWrapper(\n+            final NodeCond searchCond) {\n+\n+        SearchCondWrapper wrapper = new SearchCondWrapper();\n+        if (searchCond.getAttributeCond() != null) {\n+            wrapper.setFilterType(FilterType.ATTRIBUTE);\n+            wrapper.setFilterName(\n+                    searchCond.getAttributeCond().getSchema());\n+            wrapper.setType(\n+                    searchCond.getAttributeCond().getType());\n+            wrapper.setFilterValue(\n+                    searchCond.getAttributeCond().getExpression());\n+        }\n+        if (searchCond.getMembershipCond() != null) {\n+            wrapper.setFilterType(FilterType.MEMBERSHIP);\n+            RoleTO role = new RoleTO();\n+            role.setId(searchCond.getMembershipCond().getRoleId());\n+            role.setName(searchCond.getMembershipCond().getRoleName());\n+            wrapper.setFilterName(role.getDisplayName());\n+        }\n+        if (searchCond.getResourceCond() != null) {\n+            wrapper.setFilterType(FilterType.RESOURCE);\n+            wrapper.setFilterName(searchCond.getResourceCond().\n+                    getResourceName());\n+        }\n+\n+        wrapper.setNotOperator(\n+                searchCond.getType() == NodeCond.Type.NOT_LEAF);\n+\n+        return wrapper;\n+    }\n+\n+    public NodeCond buildSearchCond() {\n+        return buildSearchCond(searchConditionList);\n+    }\n+\n+    private NodeCond buildSearchCond(\n+            final List<SearchCondWrapper> conditions) {\n+\n+        // inverse processing: from right to left\n+        // (OperationType is specified on the right)\n+        SearchCondWrapper searchConditionWrapper =\n+                conditions.get(conditions.size() - 1);\n+\n+        LOG.debug(\"Search conditions: \"\n+                + \"fname {}; ftype {}; fvalue {}; OP {}; type {}; isnot {}\",\n+                new Object[]{\n+                    searchConditionWrapper.getFilterName(),\n+                    searchConditionWrapper.getFilterType(),\n+                    searchConditionWrapper.getFilterValue(),\n+                    searchConditionWrapper.getOperationType(),\n+                    searchConditionWrapper.getType(),\n+                    searchConditionWrapper.isNotOperator()});\n+\n+        NodeCond nodeCond = null;\n+\n+        switch (searchConditionWrapper.getFilterType()) {\n+            case ATTRIBUTE:\n+                final AttributeCond attributeCond = new AttributeCond();\n+                attributeCond.setSchema(searchConditionWrapper.getFilterName());\n+                attributeCond.setType(searchConditionWrapper.getType());\n+                attributeCond.setExpression(\n+                        searchConditionWrapper.getFilterValue());\n+\n+                if (searchConditionWrapper.isNotOperator()) {\n+                    nodeCond = NodeCond.getNotLeafCond(attributeCond);\n+                } else {\n+                    nodeCond = NodeCond.getLeafCond(attributeCond);\n+                }\n+\n+                break;\n+            case MEMBERSHIP:\n+                final MembershipCond membershipCond = new MembershipCond();\n+                membershipCond.setRoleId(RoleTO.fromDisplayName(\n+                        searchConditionWrapper.getFilterName()));\n+\n+                if (searchConditionWrapper.isNotOperator()) {\n+                    nodeCond = NodeCond.getNotLeafCond(membershipCond);\n+                } else {\n+                    nodeCond = NodeCond.getLeafCond(membershipCond);\n+                }\n+\n+                break;\n+            case RESOURCE:\n+                final ResourceCond resourceCond = new ResourceCond();\n+                resourceCond.setResourceName(\n+                        searchConditionWrapper.getFilterName());\n+\n+                if (searchConditionWrapper.isNotOperator()) {\n+                    nodeCond = NodeCond.getNotLeafCond(resourceCond);\n+                } else {\n+                    nodeCond = NodeCond.getLeafCond(resourceCond);\n+                }\n+\n+                break;\n+            default:\n+            // nothing to do\n+        }\n+\n+        LOG.debug(\"Processed condition {}\", nodeCond);\n+\n+        if (conditions.size() > 1) {\n+            List<SearchCondWrapper> subList =\n+                    conditions.subList(0, conditions.size() - 1);\n+\n+            if (OperationType.OR.equals(\n+                    searchConditionWrapper.getOperationType())) {\n+                nodeCond = NodeCond.getOrCond(nodeCond,\n+                        buildSearchCond(subList));\n+            } else {\n+                nodeCond = NodeCond.getAndCond(nodeCond,\n+                        buildSearchCond(subList));\n+            }\n+        }\n+\n+        return nodeCond;\n+    }\n+\n+    private class SearchView extends ListView<SearchCondWrapper> {\n+\n+        private static final long serialVersionUID = -527351923968737757L;\n+\n+        final private WebMarkupContainer searchFormContainer;\n+\n+        public SearchView(final String id,\n+                final List<? extends SearchCondWrapper> list,\n+                final WebMarkupContainer searchFormContainer) {\n+\n+            super(id, list);\n+            this.searchFormContainer = searchFormContainer;\n+        }\n+\n+        @Override\n+        protected void populateItem(\n+                final ListItem<SearchCondWrapper> item) {\n+\n+            final SearchCondWrapper searchCondition =\n+                    item.getModelObject();\n+\n+            if (item.getIndex() == 0) {\n+                item.add(new Label(\"operationType\", \"\"));\n+            } else {\n+                item.add(new Label(\"operationType\",\n+                        searchCondition.getOperationType().\n+                        toString()));\n+            }\n+\n+            final CheckBox notOperator = new CheckBox(\"notOperator\",\n+                    new PropertyModel(searchCondition, \"notOperator\"));\n+            notOperator.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                private static final long serialVersionUID =\n+                        -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget art) {\n+                }\n+            });\n+\n+            item.add(notOperator);\n+\n+            final DropDownChoice<String> filterNameChooser =\n+                    new DropDownChoice<String>(\"filterName\",\n+                    new PropertyModel<String>(\n+                    searchCondition, \"filterName\"), (IModel) null);\n+            filterNameChooser.setOutputMarkupId(true);\n+            filterNameChooser.setRequired(true);\n+            item.add(filterNameChooser);\n+\n+            filterNameChooser.add(\n+                    new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                        private static final long serialVersionUID =\n+                                -1107858522700306810L;\n+\n+                        @Override\n+                        protected void onUpdate(final AjaxRequestTarget art) {\n+                        }\n+                    });\n+\n+            final DropDownChoice<AttributeCond.Type> type =\n+                    new DropDownChoice<AttributeCond.Type>(\n+                    \"type\", new PropertyModel<AttributeCond.Type>(\n+                    searchCondition, \"type\"),\n+                    attributeTypes);\n+            type.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                private static final long serialVersionUID =\n+                        -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget art) {\n+                }\n+            });\n+\n+            item.add(type);\n+\n+            final TextField<String> filterValue =\n+                    new TextField<String>(\"filterValue\",\n+                    new PropertyModel<String>(searchCondition,\n+                    \"filterValue\"));\n+            item.add(filterValue);\n+            filterValue.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                private static final long serialVersionUID =\n+                        -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget art) {\n+                }\n+            });\n+\n+            try {\n+                switch (searchCondition.getFilterType()) {\n+                    case ATTRIBUTE:\n+                        filterNameChooser.setChoices(schemaNames);\n+                        if (!type.isEnabled()) {\n+                            type.setEnabled(true);\n+                            type.setRequired(true);\n+                        }\n+                        if (!filterValue.isEnabled()) {\n+                            filterValue.setEnabled(true);\n+                        }\n+                        break;\n+                    case MEMBERSHIP:\n+                        filterNameChooser.setChoices(roleNames);\n+                        type.setEnabled(false);\n+                        type.setRequired(false);\n+                        type.setModelObject(null);\n+\n+                        filterValue.setEnabled(false);\n+                        filterValue.setModelObject(\"\");\n+\n+                        break;\n+                    case RESOURCE:\n+                        filterNameChooser.setChoices(resourceNames);\n+                        type.setEnabled(false);\n+                        type.setRequired(false);\n+                        type.setModelObject(null);\n+\n+                        filterValue.setEnabled(false);\n+                        filterValue.setModelObject(\"\");\n+\n+                        break;\n+                    default:\n+                        filterNameChooser.setChoices(Collections.EMPTY_LIST);\n+                }\n+            } catch (NullPointerException npe) {\n+                // searchCondition null\n+                filterNameChooser.setChoices(Collections.EMPTY_LIST);\n+            }\n+\n+            final DropDownChoice<FilterType> filterTypeChooser =\n+                    new DropDownChoice<FilterType>(\"filterType\",\n+                    new PropertyModel<FilterType>(searchCondition,\n+                    \"filterType\"), filterTypes);\n+            filterTypeChooser.setOutputMarkupId(true);\n+\n+            filterTypeChooser.add(\n+                    new AjaxFormComponentUpdatingBehavior(\n+                    \"onchange\") {\n+\n+                        private static final long serialVersionUID =\n+                                -1107858522700306810L;\n+\n+                        @Override\n+                        protected void onUpdate(\n+                                final AjaxRequestTarget target) {\n+\n+                            filterNameChooser.setChoices(\n+                                    searchCondition.getFilterType()\n+                                    == FilterType.ATTRIBUTE\n+                                    ? schemaNames : roleNames);\n+                            target.add(filterNameChooser);\n+                            target.add(searchFormContainer);\n+                        }\n+                    });\n+\n+            filterTypeChooser.setRequired(true);\n+\n+            item.add(filterTypeChooser);\n+\n+            AjaxButton dropButton = new IndicatingAjaxButton(\n+                    \"dropButton\", new ResourceModel(\"dropButton\")) {\n+\n+                private static final long serialVersionUID =\n+                        -4804368561204623354L;\n+\n+                @Override\n+                protected void onSubmit(final AjaxRequestTarget target,\n+                        final Form<?> form) {\n+\n+                    getList().remove(\n+                            Integer.valueOf(getParent().getId()).intValue());\n+                    target.add(searchFormContainer);\n+                }\n+\n+                @Override\n+                protected void onError(final AjaxRequestTarget target,\n+                        final Form<?> form) {\n+\n+                    target.add(searchFormContainer);\n+                }\n+            };\n+\n+            dropButton.setDefaultFormProcessing(false);\n+\n+            if (item.getIndex() == 0) {\n+                dropButton.setVisible(false);\n+            }\n+\n+            item.add(dropButton);\n+        }\n+    }\n+}"},{"sha":"24dcd6b4dfec202a728c74c1cd7025f688ce4247","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationRestClient.java","status":"modified","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -14,18 +14,13 @@\n  */\n package org.syncope.console.rest;\n \n-import java.io.UnsupportedEncodingException;\n import java.util.Arrays;\n import java.util.List;\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.LoggerTO;\n-import org.syncope.client.to.WorkflowDefinitionTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n-/**\n- * Console client for invoking Rest Connectors services.\n- */\n @Component\n public class ConfigurationRestClient extends AbstractBaseRestClient {\n \n@@ -105,7 +100,6 @@ public boolean updateConfiguration(ConfigurationTO configurationTO) {\n \n     /**\n      * Deelete a configuration by key.\n-     * @throws UnsupportedEncodingException\n      */\n     public void deleteConfiguration(String key)\n             throws SyncopeClientCompositeErrorException {\n@@ -115,21 +109,6 @@ public void deleteConfiguration(String key)\n                 key);\n     }\n \n-    public WorkflowDefinitionTO getWorkflowDefinition()\n-            throws SyncopeClientCompositeErrorException {\n-\n-        return restTemplate.getForObject(baseURL\n-                + \"configuration/workflow/definition.json\",\n-                WorkflowDefinitionTO.class);\n-    }\n-\n-    public void updateWorkflowDefinition(final WorkflowDefinitionTO workflowDef)\n-            throws SyncopeClientCompositeErrorException {\n-\n-        restTemplate.put(baseURL\n-                + \"configuration/workflow/definition.json\", workflowDef);\n-    }\n-\n     /**\n      * Get all loggers.\n      * @return LoggerTOs"},{"sha":"df71ecd8c02dbf7757a1da4bc3abefd9cff84aa6","filename":"console/src/main/java/org/syncope/console/rest/NotificationRestClient.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,77 @@\n+/* \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.rest;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import org.springframework.stereotype.Component;\n+import org.syncope.client.to.NotificationTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+\n+@Component\n+public class NotificationRestClient extends AbstractBaseRestClient {\n+\n+    public List<NotificationTO> getAllNotifications()\n+            throws SyncopeClientCompositeErrorException {\n+\n+        return Arrays.asList(restTemplate.getForObject(baseURL\n+                + \"notification/list.json\", NotificationTO[].class));\n+    }\n+\n+    public NotificationTO readNotification(final Long id)\n+            throws SyncopeClientCompositeErrorException {\n+\n+        return restTemplate.getForObject(\n+                baseURL + \"notification/read/{notificationId}.json\",\n+                NotificationTO.class, id);\n+    }\n+\n+    public void createNotification(final NotificationTO notificationTO)\n+            throws SyncopeClientCompositeErrorException {\n+\n+        restTemplate.postForObject(\n+                baseURL + \"notification/create.json\",\n+                notificationTO, NotificationTO.class);\n+    }\n+\n+    public void updateNotification(final NotificationTO notificationTO)\n+            throws SyncopeClientCompositeErrorException {\n+\n+        restTemplate.postForObject(\n+                baseURL + \"notification/update.json\",\n+                notificationTO, NotificationTO.class);\n+    }\n+\n+    public void deleteNotification(final Long id)\n+            throws SyncopeClientCompositeErrorException {\n+\n+        restTemplate.delete(\n+                baseURL + \"notification/delete/{notificationId}.json\", id);\n+    }\n+\n+    public List<String> getMailTemplates()\n+            throws SyncopeClientCompositeErrorException {\n+\n+        return Arrays.asList(restTemplate.getForObject(\n+                baseURL + \"configuration/mailTemplates.json\", String[].class));\n+    }\n+\n+    public List<String> getEvents()\n+            throws SyncopeClientCompositeErrorException {\n+\n+        return Arrays.asList(restTemplate.getForObject(\n+                baseURL + \"workflow/tasks.json\", String[].class));\n+    }\n+}"},{"sha":"a1705c03ebc011c63e4ca8ecd319bfb0b047c662","filename":"console/src/main/java/org/syncope/console/rest/TaskRestClient.java","status":"modified","additions":29,"deletions":21,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -15,13 +15,16 @@\n package org.syncope.console.rest;\n \n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import org.springframework.stereotype.Component;\n+import org.syncope.client.to.NotificationTaskTO;\n import org.syncope.client.to.TaskExecTO;\n import org.syncope.client.to.PropagationTaskTO;\n import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.SyncTaskTO;\n+import org.syncope.client.to.TaskTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n@@ -57,23 +60,35 @@ public Integer count(final String kind) {\n     }\n \n     /**\n-     * Return a paginated list of generic tasks.\n+     * Return a paginated list of tasks.\n      * @param page number.\n      * @param size per page.\n      * @return paginated list.\n      */\n-    public <T extends SchedTaskTO> List<T> listSchedTasks(\n+    public <T extends TaskTO> List<T> listTasks(\n             final Class<T> reference, final int page, final int size) {\n \n-        if (SyncTaskTO.class.getName().equals(reference.getName())) {\n-            return (List<T>) Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"task/sync/list/{page}/{size}.json\",\n-                    SyncTaskTO[].class, page, size));\n-        } else {\n-            return (List<T>) Arrays.asList(restTemplate.getForObject(\n+        List<T> result = Collections.EMPTY_LIST;\n+\n+        if (PropagationTaskTO.class == reference) {\n+            result = (List<T>) Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"task/propagation/list/{page}/{size}.json\",\n+                    PropagationTaskTO[].class, page, size));\n+        } else if (NotificationTaskTO.class == reference) {\n+            result = (List<T>) Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"task/notification/list/{page}/{size}.json\",\n+                    NotificationTaskTO[].class, page, size));\n+        } else if (SchedTaskTO.class == reference) {\n+            result = (List<T>) Arrays.asList(restTemplate.getForObject(\n                     baseURL + \"task/sched/list/{page}/{size}.json\",\n                     SchedTaskTO[].class, page, size));\n+        } else if (SyncTaskTO.class == reference) {\n+            result = (List<T>) Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"task/sync/list/{page}/{size}.json\",\n+                    SyncTaskTO[].class, page, size));\n         }\n+\n+        return result;\n     }\n \n     public PropagationTaskTO readPropagationTask(final Long taskId) {\n@@ -82,6 +97,12 @@ public PropagationTaskTO readPropagationTask(final Long taskId) {\n                 PropagationTaskTO.class, taskId);\n     }\n \n+    public NotificationTaskTO readNotificationTask(final Long taskId) {\n+        return restTemplate.getForObject(\n+                baseURL + \"task/read/{taskId}\",\n+                NotificationTaskTO.class, taskId);\n+    }\n+\n     public <T extends SchedTaskTO> T readSchedTask(\n             final Class<T> reference, final Long taskId) {\n \n@@ -96,19 +117,6 @@ public <T extends SchedTaskTO> T readSchedTask(\n         }\n     }\n \n-    /**\n-     * Return a paginated list of propagation tasks.\n-     * @param page number.\n-     * @param size per page.\n-     * @return paginated list.\n-     */\n-    public List<PropagationTaskTO> listPropagationTasks(\n-            final int page, final int size) {\n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"task/propagation/list/{page}/{size}.json\",\n-                PropagationTaskTO[].class, page, size));\n-    }\n-\n     /**\n      * Get all executions.\n      * @return list of all executions"},{"sha":"f7b3e636e39a64504e6790cfa8d1227a0df08c70","filename":"console/src/main/java/org/syncope/console/rest/WorkflowRestClient.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,38 @@\n+/* \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.rest;\n+\n+import org.springframework.stereotype.Component;\n+import org.syncope.client.to.WorkflowDefinitionTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+\n+@Component\n+public class WorkflowRestClient extends AbstractBaseRestClient {\n+\n+    public WorkflowDefinitionTO getDefinition()\n+            throws SyncopeClientCompositeErrorException {\n+\n+        return restTemplate.getForObject(baseURL\n+                + \"workflow/definition.json\",\n+                WorkflowDefinitionTO.class);\n+    }\n+\n+    public void updateDefinition(final WorkflowDefinitionTO workflowDef)\n+            throws SyncopeClientCompositeErrorException {\n+\n+        restTemplate.put(baseURL\n+                + \"/workflow/definition.json\", workflowDef);\n+    }\n+}"},{"sha":"5955f67a5449a6014084c36754b8dec54a2b87b5","filename":"console/src/main/java/org/syncope/console/wicket/extensions/markup/html/repeater/data/table/DatePropertyColumn.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import java.util.Date;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.syncope.console.SyncopeSession;\n+\n+/**\n+ * Format column's value as date string.\n+ */\n+public class DatePropertyColumn<T> extends PropertyColumn<T> {\n+\n+    private static final long serialVersionUID = 3527840552172947705L;\n+\n+    public DatePropertyColumn(final IModel<String> displayModel,\n+            final String sortProperty, final String propertyExpression) {\n+\n+        super(displayModel, sortProperty, propertyExpression);\n+    }\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<T>> item,\n+            final String componentId, final IModel<T> rowModel) {\n+\n+        IModel date = (IModel<Date>) createLabelModel(rowModel);\n+\n+        String convertedDate = \"\";\n+\n+        if (date.getObject() != null) {\n+            convertedDate = SyncopeSession.get().\n+                    getDateFormat().format(date.getObject());\n+            item.add(new Label(componentId, convertedDate));\n+        } else {\n+            item.add(new Label(componentId, convertedDate));\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"f1e727814bd74b1597dfe70b6d3d1218feb51980","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -24,6 +24,7 @@\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.validation.IValidator;\n \n public class AjaxTextFieldPanel extends FieldPanel<String> {\n \n@@ -77,6 +78,10 @@ protected void onUpdate(AjaxRequestTarget art) {\n         }\n     }\n \n+    public void addValidator(final IValidator validator) {\n+        this.field.add(validator);\n+    }\n+\n     public void setChoices(final List<String> choices) {\n         if (choices != null) {\n             this.choices = choices;"},{"sha":"c493542c093dd10f509fddaf61dfb9d25c3dd3b9","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"modified","additions":10,"deletions":15,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -17,13 +17,12 @@\n import java.io.Serializable;\n import java.text.DateFormat;\n import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n import java.util.Calendar;\n import java.util.Date;\n import java.util.List;\n+import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.behavior.SimpleAttributeModifier;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.model.IModel;\n@@ -34,26 +33,22 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.Model;\n import org.springframework.util.StringUtils;\n+import org.syncope.console.SyncopeSession;\n \n public class DateTimeFieldPanel extends FieldPanel<Date> {\n \n     private static final long serialVersionUID = -428975732068281726L;\n \n     private Form form = null;\n \n-    final String datePattern;\n-\n     public DateTimeFieldPanel(\n             final String id,\n             final String name,\n             final IModel<Date> model,\n-            final boolean active,\n-            final String datePattern) {\n+            final boolean active) {\n \n         super(id, name, model, active);\n \n-        this.datePattern = datePattern;\n-\n         field = new DateTimeField(\"field\", model);\n \n         final Calendar cal = Calendar.getInstance();\n@@ -190,7 +185,7 @@ public FieldPanel setFormValidator(final Form form) {\n \n     @Override\n     public FieldPanel setNewModel(final ListItem item, final Class reference) {\n-        final DateFormat formatter = new SimpleDateFormat(datePattern);\n+        final DateFormat formatter = SyncopeSession.get().getDateFormat();\n \n         IModel<Date> model = new Model() {\n \n@@ -254,7 +249,7 @@ public FieldPanel setNewModel(final List<String> list) {\n \n             private static final long serialVersionUID = 527651414610325237L;\n \n-            final DateFormat formatter = new SimpleDateFormat(datePattern);\n+            final DateFormat formatter = SyncopeSession.get().getDateFormat();\n \n             @Override\n             public Serializable getObject() {\n@@ -287,16 +282,16 @@ public void setObject(Serializable object) {\n \n     @Override\n     public FieldPanel setStyleShet(String classes) {\n-        field.get(\"date\").add(new SimpleAttributeModifier(\n+        field.get(\"date\").add(AttributeModifier.replace(\n                 \"class\", (classes != null ? classes : \"\") + \" date_size\"));\n \n-        field.get(\"hours\").add(new SimpleAttributeModifier(\n+        field.get(\"hours\").add(AttributeModifier.replace(\n                 \"class\", classes != null ? classes : \"\"));\n \n-        field.get(\"minutes\").add(new SimpleAttributeModifier(\n+        field.get(\"minutes\").add(AttributeModifier.replace(\n                 \"class\", classes != null ? classes : \"\"));\n \n-        field.get(\"amOrPmChoice\").add(new SimpleAttributeModifier(\n+        field.get(\"amOrPmChoice\").add(AttributeModifier.replace(\n                 \"class\", classes != null ? classes : \"\"));\n \n         return this;\n@@ -305,7 +300,7 @@ public FieldPanel setStyleShet(String classes) {\n     @Override\n     public FieldPanel clone() {\n         final FieldPanel panel = new DateTimeFieldPanel(\n-                id, name, new Model(null), active, datePattern);\n+                id, name, new Model(null), active);\n \n         panel.setRequired(isRequired());\n         panel.setReadOnly(isReadOnly());"},{"sha":"46d0c664618b038cc04e835b1d3960ad8446563e","filename":"console/src/main/resources/authorizations.xml","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -186,6 +186,28 @@ page@id= Schema|Users|Roles|Resources|Connectors|Report|Configuration|Task\n             <entitlement>WORKFLOW_DEF_UPDATE</entitlement>\n         </action>\n     </page>\n+    \n+    <page id=\"Notification\">\n+        <action id=\"list\">\n+            <entitlement>NOTIFICATION_LIST</entitlement>\n+        </action>\n+\n+        <action id=\"create\">\n+            <entitlement>NOTIFICATION_CREATE</entitlement>\n+        </action>\n+\n+        <action id=\"read\">\n+            <entitlement>NOTIFICATION_READ</entitlement>\n+        </action>\n+\n+        <action id=\"update\">\n+            <entitlement>NOTIFICATION_UPDATE</entitlement>\n+        </action>\n+\n+        <action id=\"delete\">\n+            <entitlement>NOTIFICATION_DELETE</entitlement>\n+        </action>\n+    </page>\n \n     <page id=\"Tasks\">\n         <action id=\"list\">"},{"sha":"172d17c03a220dc49489c14ddecca51a1a043861","filename":"console/src/main/resources/org/syncope/console/pages/Configuration.html","status":"modified","additions":28,"deletions":3,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -38,6 +38,7 @@\n             <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n             <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n             <li><a href=\"#tabs-7\"><span><wicket:message key=\"tab7\"/></span></a></li>\n+            <li><a href=\"#tabs-8\"><span><wicket:message key=\"tab8\"/></span></a></li>\n         </ul>\n         <div id=\"tabs-1\">\n \n@@ -48,7 +49,7 @@\n                 </span>\n \n                 <span style=\"float:right\">\n-                    <form wicket:id=\"PaginatorForm\" style=\"display:inline\">\n+                    <form wicket:id=\"confPaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n                         <select class=\"text ui-widget-content ui-corner-all\"\n                                 wicket:id=\"rowsChooser\"/>\n@@ -74,6 +75,30 @@\n             <span wicket:id=\"syncPoliciesPanel\">[sync policies]</span>\n         </div>\n         <div id=\"tabs-5\">\n+            <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n+                <span wicket:id=\"notificationContainer\">\n+                    <table class=\"ui-widget ui-widget-content table-hover\"\n+                           wicket:id=\"notificationTable\"/>\n+                </span>\n+\n+                <span style=\"float:right\">\n+                    <form wicket:id=\"notificationPaginatorForm\" style=\"display:inline\">\n+                        <label><wicket:message key=\"displayRows\"/></label>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n+                    </form>\n+                </span>\n+            </div>\n+\n+            <div wicket:id=\"createNotificationWin\">[Show modal window for creating notification]</div>\n+            <div wicket:id=\"editNotificationWin\">[Show modal window for editing notification]</div>\n+\n+            <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+               wicket:id=\"createNotificationLink\">\n+                <wicket:message key=\"create_notification\"/>\n+            </a>\n+        </div>\n+        <div id=\"tabs-6\">\n             <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n                 <span wicket:id=\"workflowDefContainer\">\n                     <form wicket:id=\"workflowDefForm\">\n@@ -92,7 +117,7 @@\n                 </span>\n             </div>\n         </div>\n-        <div id=\"tabs-6\">\n+        <div id=\"tabs-7\">\n             <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n                 <span wicket:id=\"coreLoggerContainer\">\n                     <table class=\"ui-widget ui-widget-content table-hover\">\n@@ -112,7 +137,7 @@\n                 </span>\n             </div>\n         </div>\n-        <div id=\"tabs-7\">\n+        <div id=\"tabs-8\">\n             <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n                 <span wicket:id=\"consoleLoggerContainer\">\n                     <table class=\"ui-widget ui-widget-content table-hover\">"},{"sha":"2c759d8a60ad8c4b35bb2ed4b2c39de07776f481","filename":"console/src/main/resources/org/syncope/console/pages/Configuration.properties","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -3,14 +3,21 @@ value=Value\n tab1=Parameters\n tab2=Password Policies\n tab3=Account Policies\n-tab4=Sync Policies\n-tab5=Workflow\n-tab6=Core Log\n-tab7=Console Log\n+tab4=Synchronization Policies\n+tab5=Notifications\n+tab6=Workflow\n+tab7=Core Log\n+tab8=Console Log\n edit=Edit\n delete=Delete\n create_configuration=Create new configuration\n db_export=DB export\n logger=Logger\n level=Level\n submit=Save\n+id=Id\n+events=Events\n+template=Template\n+traceLevel=Trace level\n+create_notification=Create new notification\n+subject=Subject"},{"sha":"47d0112c60221802794c14a929c94cf53e963447","filename":"console/src/main/resources/org/syncope/console/pages/ConfigurationModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -3,4 +3,4 @@ submit=Save\n key=Key\n value=Value\n error_insert=Error occurred during creation\n-error_updating=Error occurred during updating\n+error_updating=Error occurred during update"},{"sha":"36b2eca5d2d43f5d036296bb8428dc3413e2ef64","filename":"console/src/main/resources/org/syncope/console/pages/Configuration_it.properties","status":"modified","additions":13,"deletions":6,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -1,16 +1,23 @@\n key=Chiave\n value=Valore\n tab1=Parametri\n-tab2=Password Policy\n-tab3=Account Policy\n-tab4=Sync Policy\n-tab5=Workflow\n-tab6=Log Core\n-tab7=Log Console\n+tab2=Policy di password\n+tab3=Policy di account\n+tab4=Policy di sincronizzazione\n+tab5=Notifiche\n+tab6=Workflow\n+tab7=Log Core\n+tab8=Log Console\n edit=Modifica\n delete=Elimina\n create_configuration=Crea nuova configurazione\n db_export=Esportazione DB\n logger=Logger\n level=Livello\n submit=Salva\n+id=Id\n+events=Eventi\n+template=Modello\n+traceLevel=Tracciamento\n+create_notification=Crea nuova notifica\n+subject=Oggetto"},{"sha":"44ff18878b3266172416da759ef9a60c79dcb93a","filename":"console/src/main/resources/org/syncope/console/pages/NotificationModalPage.html","status":"added","additions":102,"deletions":0,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,102 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:extend>\n+    <div style=\"margin:10px\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+        <form wicket:id=\"form\">\n+            <div id=\"tabs\">\n+                <ul>\n+                    <li  class=\"tabs-selected\"><a href=\"#notification\"><span><wicket:message key=\"notification\"/></span></a></li>\n+                    <li><a href=\"#about\"><span><wicket:message key=\"about\"/></span></a></li>\n+                    <li><a href=\"#events\"><span><wicket:message key=\"events\"/></span></a></li>\n+                    <li><a href=\"#recipients\"><span><wicket:message key=\"recipients\"/></span></a></li>\n+                </ul>\n+\n+                <div id=\"notification\">\n+                    <div id=\"formtable\">\n+                        <div class=\"tablerow\">\n+                            <div class=\"tablecolumn_label medium_fixedsize\">\n+                                <label for=\"sender\"><wicket:message key=\"sender\"/></label>\n+                            </div>\n+                            <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                <span wicket:id=\"sender\">[sender]</span>\n+                            </div>\n+                        </div>\n+\n+                        <div class=\"tablerow\">\n+                            <div class=\"tablecolumn_label medium_fixedsize\">\n+                                <label for=\"subject\"><wicket:message key=\"subject\"/></label>\n+                            </div>\n+                            <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                <span wicket:id=\"subject\">[subject]</span>\n+                            </div>\n+                        </div>\n+\n+                        <div class=\"tablerow\">\n+                            <div class=\"tablecolumn_label medium_fixedsize\">\n+                                <label for=\"template\"><wicket:message key=\"template\"/></label>\n+                            </div>\n+                            <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                <span wicket:id=\"template\">[template]</span>\n+                            </div>\n+                        </div>\n+\n+                        <div class=\"tablerow\">\n+                            <div class=\"tablecolumn_label medium_fixedsize\">\n+                                <label for=\"traceLevel\"><wicket:message key=\"traceLevel\"/></label>\n+                            </div>\n+                            <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                <span wicket:id=\"traceLevel\">[traceLevel]</span>\n+                            </div>\n+                        </div>\n+                    </div>\n+\n+                    <script type=\"text/javascript\">\n+                        $(function() {\n+                            $('div#notification div#formtable div.tablerow:even').addClass(\"alt\");\n+                        });\n+                    </script>\n+                </div>\n+\n+                <div id=\"about\">\n+                    <span wicket:id=\"about\"/>\n+                </div>\n+\n+                <div id=\"events\">\n+                    <span wicket:id=\"events\"/>\n+                </div>\n+\n+                <div id=\"recipients\">\n+                    <span wicket:id=\"recipients\"/>\n+\n+                    <div class=\"tablerow\">\n+                        <div class=\"tablecolumn_label medium_fixedsize\">\n+                            <label for=\"selfAsRecipient\"><wicket:message key=\"selfAsRecipient\"/></label>\n+                        </div>\n+                        <div class=\"tablecolumn_field medium_dynamicsize\">\n+                            <span wicket:id=\"selfAsRecipient\">[selfAsRecipient]</span>\n+                        </div>\n+                    </div>\n+                </div>\n+            </div>\n+\n+            <div style=\"margin: 20px 10px 0\">\n+                <input type=\"submit\"\n+                       class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                       wicket:id=\"apply\"/>\n+            </div>\n+        </form>\n+    </div>\n+</wicket:extend>\n\\ No newline at end of file"},{"sha":"ab955d7584ec80cda069f163a75a5205b7c7d767","filename":"console/src/main/resources/org/syncope/console/pages/NotificationModalPage.properties","status":"added","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,11 @@\n+title=Edit notification\n+submit=Save\n+subject=Subject\n+sender=Sender\n+template=Template\n+traceLevel=Trace level\n+notification=Notification\n+about=About\n+events=Events\n+recipients=Recipients\n+selfAsRecipient=Include users matching About"},{"sha":"480788d3e04ca094f6366a1cd3298c9a804bbba6","filename":"console/src/main/resources/org/syncope/console/pages/NotificationModalPage_it.properties","status":"added","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,11 @@\n+title=Gestisci notifiche\n+submit=Salva\n+subject=Oggetto\n+sender=Mittente\n+template=Modello\n+traceLevel=Livello di tracciamento\n+notification=Notifica\n+about=Soggetti\n+events=Eventi\n+recipients=Destinatari\n+selfAsRecipient=Including i soggetti"},{"sha":"cf4dd8cbefce9eb87f1d2150a5eec1a15b5c5cca","filename":"console/src/main/resources/org/syncope/console/pages/NotificationTaskModalPage.html","status":"added","additions":128,"deletions":0,"changes":128,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,128 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:head>\n+    <style type=\"text/css\">\n+        /* WICKET DATATABLE HEADERS */\n+        .headers {\n+            border: 1px solid #aaaaaa;\n+            background: #cccccc url(css/images/ui-bg_highlight-soft_75_cccccc_1x100.png)\n+                50% 50% repeat-x;\n+        }\n+    </style>\n+    <script type=\"text/javascript\">\n+        jQuery(function() {\n+            $(\"#dialog\").dialog({\n+                autoOpen: false, height: 500,  width: 700, modal: true,\n+                show: \"fade\",\n+                hide: \"fade\"\n+            });\n+        });\n+    </script>\n+</wicket:head>\n+<wicket:extend>\n+    <div id=\"dialog-form\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+        <form wicket:id=\"form\">\n+            <div id=\"tabs\">\n+                <ul>\n+                    <li class=\"tabs-selected\"><a href=\"#profile\"><span><wicket:message key=\"profile\"/></span></a></li>\n+                    <li><a href=\"#executions\"><span><wicket:message key=\"executions\"/></span></a></li>\n+                </ul>\n+                <div id=\"profile\">\n+                    <div id=\"users-contain\" class=\"ui-widget\">\n+                        <span wicket:id=\"profile\">\n+                            <div id=\"formtable\">\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <span wicket:id=\"idLabel\">[Id]</span>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"id\">[id]</span>\n+                                    </div>\n+                                </div>\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"sender\"><wicket:message key=\"sender\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"sender\">[sender]</span>\n+                                    </div>\n+                                </div>\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"recipients\"><wicket:message key=\"recipients\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"recipients\">[recipients]</span>\n+                                    </div>\n+                                </div>\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"subject\"><wicket:message key=\"subject\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"subject\">[subject]</span>\n+                                    </div>\n+                                </div>\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"textBody\"><wicket:message key=\"textBody\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <textarea wicket:id=\"textBody\" cols=\"50\" rows=\"10\">[textBody]</textarea>\n+                                    </div>\n+                                </div>\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"htmlBody\"><wicket:message key=\"htmlBody\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <textarea wicket:id=\"htmlBody\" cols=\"50\" rows=\"10\">[textBody]</textarea>\n+                                    </div>\n+                                </div>\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"traceLevel\"><wicket:message key=\"traceLevel\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"traceLevel\">[traceLevel]</span>\n+                                    </div>\n+                                </div>\n+                            </div>\n+                        </span>\n+                    </div>\n+                </div>\n+                <div id=\"executions\">\n+                    <span wicket:id=\"executions\">\n+                        <table id=\"executions\" class=\"ui-widget ui-widget-content\"\n+                               wicket:id=\"executionsTable\" style=\"width: 100%\"/>\n+                    </span>\n+                </div>\n+            </div>\n+        </form>\n+    </div>\n+    <div id=\"dialog\">\n+        <pre wicket:id=\"dialogContent\">\n+            [Task execution's message to show]\n+        </pre>\n+    </div>\n+</wicket:extend>\n\\ No newline at end of file"},{"sha":"930f1982b626292dd1c8262639efc30eb34d3eee","filename":"console/src/main/resources/org/syncope/console/pages/NotificationTaskModalPage.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,17 @@\n+profile=Profile\n+executions=Executions\n+title=Task\n+id=Id\n+startDate=Start date\n+endDate=End date\n+status=Status\n+message=Message\n+taskExecutions=Task executions\n+delete=Delete\n+showMessage=Show\n+sender=Sender\n+subject=Subject\n+recipients=Recipients\n+traceLevel=Trace level\n+htmlBody=Mail body (HTML)\n+textBody=Mail body (text)"},{"sha":"6b9f859963c6e97a87995414bb1cfff0cd541e7d","filename":"console/src/main/resources/org/syncope/console/pages/NotificationTaskModalPage_it.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,17 @@\n+profile=Profilo\n+executions=Esecuzioni\n+title=Task\n+id=Id\n+startDate=Data di avvio\n+endDate=Data di conclusione\n+status=Stato\n+message=Messaggio\n+taskExecutions=Esecuzione del task\n+delete=Eliminazione\n+showMessage=Mostra\n+sender=Mittente\n+subject=Oggetto\n+recipients=Destinatari\n+traceLevel=Livello di tracciamento\n+htmlBody=Corpo e-mail (HTML)\n+textBody=Corpo e-mail (testo)"},{"sha":"0195254d4ce15a5f0f19f414273e68e694602deb","filename":"console/src/main/resources/org/syncope/console/pages/PropagationTaskModalPage.html","status":"renamed","additions":28,"deletions":8,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -43,16 +43,36 @@\n                 <div id=\"profile\">\n                     <div id=\"users-contain\" class=\"ui-widget\">\n                         <span wicket:id=\"profile\">\n-                            <fieldset>\n-                                <span wicket:id=\"idLabel\">[Id]</span>\n-                                <input type=\"text\" id=\"id\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"id\" />\n+                            <div id=\"formtable\">\n \n-                                <label for=\"accountId\"><wicket:message key=\"accountId\"/></label>\n-                                <input type=\"text\" id=\"accountId\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"accountId\" />\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <span wicket:id=\"idLabel\">[Id]</span>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"id\">[id]</span>\n+                                    </div>\n+                                </div>\n \n-                                <label for=\"resource\"><wicket:message key=\"resource\"/></label>\n-                                <input type=\"text\" id=\"resource\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"resource\" />\n-                            </fieldset>\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"accountId\"><wicket:message key=\"accountId\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"accountId\">[accountId]</span>\n+                                    </div>\n+                                </div>\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"resource\"><wicket:message key=\"resource\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"resource\">[resource]</span>\n+                                    </div>\n+                                </div>\n+\n+                            </div>\n                         </span>\n                     </div>\n                 </div>","previous_filename":"console/src/main/resources/org/syncope/console/pages/PTaskModalPage.html"},{"sha":"976a491074dc46176802a42f04df9aa8853a2d9b","filename":"console/src/main/resources/org/syncope/console/pages/PropagationTaskModalPage.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"console/src/main/resources/org/syncope/console/pages/PTaskModalPage.properties"},{"sha":"3cfe41617a41245f8062b8fb3175c06f7aa8698a","filename":"console/src/main/resources/org/syncope/console/pages/PropagationTaskModalPage_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"console/src/main/resources/org/syncope/console/pages/PTaskModalPage_it.properties"},{"sha":"bafd5c460456607611f9f4bfa0ad4f82c8d8e84b","filename":"console/src/main/resources/org/syncope/console/pages/SchedTaskModalPage.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"console/src/main/resources/org/syncope/console/pages/GTaskModalPage.html"},{"sha":"9d9d57ce4053bcb105f639a5424c91b427e0b99c","filename":"console/src/main/resources/org/syncope/console/pages/SchedTaskModalPage.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"console/src/main/resources/org/syncope/console/pages/GTaskModalPage.properties"},{"sha":"b825926532526f60bcf59e51cbf4af71f8b30bfb","filename":"console/src/main/resources/org/syncope/console/pages/SchedTaskModalPage_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"console/src/main/resources/org/syncope/console/pages/GTaskModalPage_it.properties"},{"sha":"00d96fa9bec25c3f1198985a234cb5b5fd070556","filename":"console/src/main/resources/org/syncope/console/pages/SyncTaskModalPage.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"console/src/main/resources/org/syncope/console/pages/STaskModalPage.html"},{"sha":"55f3186b45126084d1b73729cafe85e933538a17","filename":"console/src/main/resources/org/syncope/console/pages/SyncTaskModalPage.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"console/src/main/resources/org/syncope/console/pages/STaskModalPage.properties"},{"sha":"0c492b9d794e74d2faf69da5d9b135d9d9c0c4ad","filename":"console/src/main/resources/org/syncope/console/pages/SyncTaskModalPage_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"console/src/main/resources/org/syncope/console/pages/STaskModalPage_it.properties"},{"sha":"1248dbe83c0dee42421a324b7d034f2a509593d7","filename":"console/src/main/resources/org/syncope/console/pages/Tasks.html","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -39,14 +39,18 @@\n             <li class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n             <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n             <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+            <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n         </ul>\n         <div id=\"tabs-1\">\n             <span wicket:id=\"propagation\">[propagation tasks]</span>\n         </div>\n         <div id=\"tabs-2\">\n-            <span wicket:id=\"sync\">[synchronization tasks]</span>\n+            <span wicket:id=\"notification\">[notification tasks]</span>\n         </div>\n         <div id=\"tabs-3\">\n+            <span wicket:id=\"sync\">[synchronization tasks]</span>\n+        </div>\n+        <div id=\"tabs-4\">\n             <span wicket:id=\"sched\">[scheduled tasks]</span>\n         </div>\n     </div>"},{"sha":"34fca626b6d22367e0e0646dc805dabec86340b9","filename":"console/src/main/resources/org/syncope/console/pages/Tasks.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -1,3 +1,4 @@\n tab1=Propagation Tasks\n-tab2=Synchronization Tasks\n-tab3=Scheduled Tasks\n+tab2=Notification tasks\n+tab3=Synchronization Tasks\n+tab4=Scheduled Tasks"},{"sha":"d3e8d47c073fa4a0a035b62251fbb4885b8c169e","filename":"console/src/main/resources/org/syncope/console/pages/Tasks_it.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -1,3 +1,4 @@\n tab1=Task di propagazione\n-tab2=Task di sincronizzazione\n-tab3=Task programmabili\n+tab2=Task di notifica\n+tab3=Task di sincronizzazione\n+tab4=Task programmabili"},{"sha":"543c06c338dbcd47f96f0ed75f69600e9cad72c3","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":3,"deletions":57,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -63,63 +63,9 @@\n \n         <div id=\"tabs-2\">\n             <form wicket:id=\"searchForm\">\n-                <div wicket:id=\"searchFeedback\"></div>\n-                <div id=\"searchBox\">\n-                    <h1><wicket:message key=\"search_title\"/></h1>\n-                    <table border=\"0\">\n-                        <thead>\n-                            <tr>\n-                                <th></th>\n-                                <th><wicket:message key=\"search_not_value\"/></th>\n-                        <th><wicket:message key=\"search_filter_type\"/></th>\n-                        <th><wicket:message key=\"search_filter_name\"/></th>\n-                        <th><wicket:message key=\"search_type_cond\"/></th>\n-                        <th><wicket:message key=\"search_filter_value\"/></th>\n-                        <th></th>\n-                        </tr>\n-                        </thead>\n-                        <tbody wicket:id=\"searchFormContainer\">\n-                            <tr wicket:id=\"searchView\">\n-                                <td>\n-                                    <b><span wicket:id=\"operationType\"/></b>\n-                                </td>\n-                                <td>\n-                                    <input type=\"checkbox\" wicket:id=\"notOperator\"/>\n-                                </td>\n-                                <td>\n-                                    <select class=\"text ui-widget-content ui-corner-all\"\n-                                            wicket:id=\"filterType\"/>\n-                                </td>\n-                                <td>\n-                                    <select class=\"text ui-widget-content ui-corner-all\"\n-                                            wicket:id=\"filterName\"/>\n-                                </td>\n-                                <td>\n-                                    <select class=\"text ui-widget-content ui-corner-all\"\n-                                            wicket:id=\"type\"/>\n-                                </td>\n-                                <td>\n-                                    <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n-                                           wicket:id=\"filterValue\"/>\n-                                </td>\n-                                <td>\n-                                    <input type=\"button\" class=\"text ui-widget-content ui-corner-all\"\n-                                           wicket:id=\"dropButton\"/>\n-                                </td>\n-                            </tr>\n-                            <tr>\n-                                <td>\n-                                    <input type=\"button\" class=\"text ui-widget-content ui-corner-all\"\n-                                           wicket:id=\"addAndButton\"/>\n-                                </td>\n-                                <td>\n-                                    <input type=\"submit\" class=\"text ui-widget-content ui-corner-all\"\n-                                           wicket:id=\"addOrButton\"/>\n-                                </td>\n-                            </tr>\n-                        </tbody>\n-                    </table>\n-                </div>\n+                <h1><wicket:message key=\"search_title\"/></h1>\n+                \n+                <span wicket:id=\"searchPanel\">searchPanel</span>\n \n                 <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n                        wicket:id=\"search\"/>"},{"sha":"8b4d714447b290af1c18d048c463ac5152f2dc7f","filename":"console/src/main/resources/org/syncope/console/pages/Users.properties","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -17,18 +17,10 @@ tokenValued=Valued\n tokenNotValued=Not valued\n #tab2 - USERS SEARCH\n search_title=Set criteria for user search\n-addAndButton=+ And\n-addOrButton=+ Or\n-dropButton=-\n search_error=Error:search's format is invalid\n search_results_title=Search results:\n search_noResults=No matches found.\n reset=Reset\n-search_not_value=Not value\n-search_filter_type=Filter type\n-search_filter_name=Filter name\n-search_filter_value=Filter value\n-search_type_cond=Condition\n showingFrom=Showing\n showingTo=to\n showingOf=of"},{"sha":"53944e1436dfdeee5239cfc819444d587d2aa6bd","filename":"console/src/main/resources/org/syncope/console/pages/Users_it.properties","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -16,18 +16,10 @@ username=Username\n tokenValued=Impostato\n tokenNotValued=Non impostato\n search_title=Impostare i criteri di ricerca\n-addAndButton=+ And\n-dropButton=-\n search_error=Errore:il formato di ricerca non \\u00e8 valido\n search_results_title=Risultati ricerca:\n search_noResults=Nessuna corrispondenza trovata.\n reset=Reset\n-addOrButton=+ Or\n-search_not_value=Not\n-search_filter_type=Tipo filtro\n-search_filter_name=Nome filtro\n-search_filter_value=Valore filtro\n-search_type_cond=Condizione\n showingFrom=Risultati da\n showingTo=a\n showingOf=di"},{"sha":"50e74a53dcfa62f407efefd2a5b5fa3b82de991c","filename":"console/src/main/resources/org/syncope/console/pages/panels/NotificationTasks.html","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,35 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:panel>\n+        <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n+            <span wicket:id=\"container\">\n+                <table class=\"ui-widget ui-widget-content table-hover\"\n+                       wicket:id=\"datatable\"/>\n+            </span>\n+\n+            <span style=\"float:right\">\n+                <form wicket:id=\"PaginatorForm\" style=\"display:inline\">\n+                    <label><wicket:message key=\"displayRows\"/></label>\n+                    <select class=\"text ui-widget-content ui-corner-all\"\n+                            wicket:id=\"rowsChooser\"/>\n+                </form>\n+            </span>\n+        </div>\n+        <div wicket:id=\"taskWin\">\n+            [Show modal window for viewing task]\n+        </div>\n+    </wicket:panel>\n+</html>"},{"sha":"10164f678d274cce81c34e0714ba2d003060db49","filename":"console/src/main/resources/org/syncope/console/pages/panels/NotificationTasks.properties","status":"added","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,9 @@\n+id=Id\n+execute=Execute\n+detail=Detail\n+delete=Delete\n+edit=Edit\n+sender=Sender\n+recipients=Recipients\n+traceLevel=Trace level\n+subject=Subject"},{"sha":"3158fc4490a45e92a3e6c0791954fa5fad69b392","filename":"console/src/main/resources/org/syncope/console/pages/panels/NotificationTasks_it.properties","status":"added","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,9 @@\n+id=Id\n+execute=Esegui\n+detail=Dettagli\n+delete=Rimuovi\n+edit=Modifica\n+sender=Mittente\n+recipients=Destinatari\n+traceLevel=Livello di tracciamento\n+subject=Oggetto"},{"sha":"2fd6141e3e4ba57ce99951ae0d004e4f37674c2d","filename":"console/src/main/resources/org/syncope/console/pages/panels/UserSearchPanel.html","status":"added","additions":73,"deletions":0,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.html?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,73 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:panel>\n+    <div id=\"searchBox\">\n+        <div wicket:id=\"searchFeedback\"></div>\n+        <table border=\"0\">\n+            <thead>\n+                <tr>\n+                    <th></th>\n+                    <th><wicket:message key=\"search_not_value\"/></th>\n+            <th><wicket:message key=\"search_filter_type\"/></th>\n+            <th><wicket:message key=\"search_filter_name\"/></th>\n+            <th><wicket:message key=\"search_type_cond\"/></th>\n+            <th><wicket:message key=\"search_filter_value\"/></th>\n+            <th></th>\n+            </tr>\n+            </thead>\n+            <tbody wicket:id=\"searchFormContainer\">\n+                <tr wicket:id=\"searchView\">\n+                    <td>\n+                        <b><span wicket:id=\"operationType\"/></b>\n+                    </td>\n+                    <td>\n+                        <input type=\"checkbox\" wicket:id=\"notOperator\"/>\n+                    </td>\n+                    <td>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"filterType\"/>\n+                    </td>\n+                    <td>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"filterName\"/>\n+                    </td>\n+                    <td>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"type\"/>\n+                    </td>\n+                    <td>\n+                        <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n+                               wicket:id=\"filterValue\"/>\n+                    </td>\n+                    <td>\n+                        <input type=\"button\" class=\"text ui-widget-content ui-corner-all\"\n+                               wicket:id=\"dropButton\"/>\n+                    </td>\n+                </tr>\n+                <tr>\n+                    <td>\n+                        <input type=\"button\" class=\"text ui-widget-content ui-corner-all\"\n+                               wicket:id=\"addAndButton\"/>\n+                    </td>\n+                    <td>\n+                        <input type=\"submit\" class=\"text ui-widget-content ui-corner-all\"\n+                               wicket:id=\"addOrButton\"/>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+\n+</wicket:panel>\n\\ No newline at end of file"},{"sha":"82a0b83e6209f889cf955b503fa2baa1d0cc005e","filename":"console/src/main/resources/org/syncope/console/pages/panels/UserSearchPanel.properties","status":"added","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,8 @@\n+search_not_value=Not value\n+search_filter_type=Filter type\n+search_filter_name=Filter name\n+search_filter_value=Filter value\n+search_type_cond=Condition\n+addAndButton=+ And\n+addOrButton=+ Or\n+dropButton=-"},{"sha":"9eaa2ec858c025283e6ec06871d97f631ac5598b","filename":"console/src/main/resources/org/syncope/console/pages/panels/UserSearchPanel_it.properties","status":"added","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel_it.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,8 @@\n+search_not_value=Not\n+search_filter_type=Tipo filtro\n+search_filter_name=Nome filtro\n+search_filter_value=Valore filtro\n+search_type_cond=Condizione\n+addAndButton=+ And\n+addOrButton=+ Or\n+dropButton=-"},{"sha":"0bf99d1943fb082a3bf51fa309c133cd59d64496","filename":"console/src/test/java/org/syncope/console/ConfigurationTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -81,15 +81,15 @@ public void browseWorkflowDef() {\n \n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n         selenium.waitForPageToLoad(\"30000\");\n-        selenium.click(\"//div[@id='tabs']/ul/li[5]/a/span\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[6]/a/span\");\n         assertTrue(selenium.isElementPresent(\"//*[@id=\\\"workflowDefArea\\\"]\"));\n     }\n \n     @Test\n     public void delete() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n         selenium.waitForPageToLoad(\"30000\");\n-        selenium.click(\"//tr[8]/td[4]/span/a\");\n+        selenium.click(\"//tr[7]/td[4]/span/a\");\n         assertTrue(selenium.getConfirmation().matches(\n                 \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n         try {\n@@ -105,9 +105,9 @@ public void setLogLevel() {\n \n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n         selenium.waitForPageToLoad(\"30000\");\n-        selenium.click(\"//div[@id='tabs']/ul/li[6]/a/span\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[7]/a/span\");\n         selenium.select(\n-                \"//div[6]/div/span/table/tbody/tr/td[2]/select\", \"label=ERROR\");\n+                \"//div[3]/div[7]/div/span/table/tbody/tr/td[2]/select\", \"label=ERROR\");\n         assertTrue(selenium.isTextPresent(\"Operation executed successfully\"));\n     }\n }"},{"sha":"58c40f29653734d8ce4eb85efe7fe3b85e300ae6","filename":"console/src/test/java/org/syncope/console/TaskTestITCase.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -23,11 +23,15 @@ public void execute() {\n \n         selenium.click(\"css=img[alt=\\\"Tasks\\\"]\");\n         selenium.waitForPageToLoad(\"30000\");\n-        selenium.click(\"//div[@id='tabs']/ul/li[3]/a\");\n-        selenium.click(\"//div[3]/div[3]/span/div/span/\"\n+        selenium.click(\"//div[@id='tabs']/ul/li[4]/a\");\n+        selenium.click(\"//div[3]/div[4]/span/div/span/\"\n                 + \"table/tbody/tr/td[6]/span/a\");\n+        try {\n+            Thread.sleep(3000);\n+        } catch (InterruptedException e) {\n+        }\n         assertTrue(selenium.isTextPresent(\"Operation executed successfully\"));\n-        selenium.click(\"//div[3]/div[3]/span/div/span/\"\n+        selenium.click(\"//div[3]/div[4]/span/div/span/\"\n                 + \"table/tbody/tr/td[5]/span/a\");\n         for (int second = 0;; second++) {\n             if (second >= 60) {\n@@ -59,12 +63,7 @@ public void delete() {\n         selenium.click(\"css=img[alt=\\\"Tasks\\\"]\");\n         selenium.waitForPageToLoad(\"30000\");\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n-        selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n-        selenium.waitForPageToLoad(\"30000\");\n-        selenium.click(\"css=img[alt=\\\"Tasks\\\"]\");\n-        selenium.waitForPageToLoad(\"30000\");\n-        selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n-        selenium.click(\"//div[3]/div[2]/span/div/span/\"\n+        selenium.click(\"//div[3]/div[3]/span/div/span/\"\n                 + \"table/tbody/tr/td[8]/span/a\");\n         assertTrue(selenium.getConfirmation().matches(\n                 \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));"},{"sha":"a6dad9a4d2574103ed7c5234a2b30484c179b966","filename":"core/pom.xml","status":"modified","additions":96,"deletions":2,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -723,7 +723,7 @@\n                                 </goals>\n                                 <configuration>\n                                     <sources>\n-                                        <source>src/dev/java</source>\n+                                        <source>src/test/dev/java</source>\n                                     </sources>\n                                 </configuration>\n                             </execution>\n@@ -843,7 +843,7 @@\n                                 </goals>\n                                 <configuration>\n                                     <sources>\n-                                        <source>src/dev/java</source>\n+                                        <source>src/test/dev/java</source>\n                                     </sources>\n                                 </configuration>\n                             </execution>\n@@ -1028,6 +1028,100 @@\n                 </testResources>\n             </build>\n         </profile>\n+        \n+        <profile>\n+            <id>notification-test</id>\n+            \n+            <properties>\n+                <mail.password></mail.password>\n+            </properties>\n+                        \n+            <build>\n+                <defaultGoal>clean test</defaultGoal>\n+\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <inherited>true</inherited>\n+                        <configuration>\n+                            <skip>true</skip>\n+                        </configuration>\n+                        <executions>\n+                            <execution>\n+                                <id>notification-test-phase-execution</id>\n+                                <phase>test</phase>\n+                                <goals>\n+                                    <goal>test</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <skip>false</skip>\n+                                    <includes>\n+                                        <include>**/notification/**Test.java</include>\n+                                    </includes>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>test-phase-execution</id>\n+                                <phase>test</phase>\n+                                <goals>\n+                                    <goal>test</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <skip>true</skip>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>relationship-test-execution</id>\n+                                <phase>test</phase>\n+                                <goals>\n+                                    <goal>test</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <skip>true</skip>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    \n+                    <plugin>\n+                        <groupId>org.codehaus.mojo</groupId>\n+                        <artifactId>build-helper-maven-plugin</artifactId>\n+                        <inherited>true</inherited>\n+                        <executions>\n+                            <execution>\n+                                <id>add-notification-test-source</id>\n+                                <phase>generate-test-sources</phase>\n+                                <goals>\n+                                    <goal>add-test-source</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <sources>\n+                                        <source>src/test/notifications/java</source>\n+                                    </sources>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>  \n+                \n+                <testResources>\n+                    <testResource>\n+                        <directory>src/test/resources</directory>\n+                        <filtering>true</filtering>\n+                        <excludes>\n+                            <exclude>oracle/**</exclude>\n+                            <exclude>postgres/**</exclude>\n+                            <exclude>mysql/**</exclude>\n+                        </excludes>\n+                    </testResource>\n+                    <testResource>\n+                        <directory>src/test/notifications/resources</directory>\n+                        <filtering>true</filtering>\n+                    </testResource>\n+                </testResources>\n+            </build>\n+        </profile>\n     </profiles>\n     \n     <reporting>"},{"sha":"69ef6e8ddda32c8f16e877ff98f51fc130ac760f","filename":"core/src/main/java/org/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -28,7 +28,7 @@\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n+import org.syncope.core.propagation.ConnectorFacadeProxy;\n import org.syncope.types.ConnConfProperty;\n \n /**"},{"sha":"c22258c385f13a333d6b95c02059bb54caf90b03","filename":"core/src/main/java/org/syncope/core/notification/NotificationManager.java","status":"added","additions":208,"deletions":0,"changes":208,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,208 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.notification;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import javassist.NotFoundException;\n+import org.apache.velocity.app.VelocityEngine;\n+import org.apache.velocity.exception.VelocityException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.ui.velocity.VelocityEngineUtils;\n+import org.syncope.core.persistence.beans.AbstractAttr;\n+import org.syncope.core.persistence.beans.Notification;\n+import org.syncope.core.persistence.beans.NotificationTask;\n+import org.syncope.core.persistence.beans.TaskExec;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.dao.ConfDAO;\n+import org.syncope.core.persistence.dao.NotificationDAO;\n+import org.syncope.core.persistence.dao.TaskDAO;\n+import org.syncope.core.persistence.dao.UserDAO;\n+import org.syncope.core.persistence.dao.UserSearchDAO;\n+import org.syncope.core.scheduling.NotificationJob;\n+import org.syncope.core.workflow.WorkflowResult;\n+\n+/**\n+ * Create notification tasks that will be executed by NotificationJob.\n+ * @see NotificationTask\n+F */\n+@Transactional(rollbackFor = {Throwable.class})\n+public class NotificationManager {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(NotificationManager.class);\n+\n+    /**\n+     * Notification DAO.\n+     */\n+    @Autowired\n+    private NotificationDAO notificationDAO;\n+\n+    /**\n+     * Configuration DAO.\n+     */\n+    @Autowired\n+    private ConfDAO confDAO;\n+\n+    /**\n+     * User DAO.\n+     */\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    /**\n+     * User Search DAO.\n+     */\n+    @Autowired\n+    private UserSearchDAO searchDAO;\n+\n+    /**\n+     * Task DAO.\n+     */\n+    @Autowired\n+    private TaskDAO taskDAO;\n+\n+    /**\n+     * Velocity template engine.\n+     */\n+    @Autowired\n+    private VelocityEngine velocityEngine;\n+\n+    @Autowired\n+    private NotificationJob notificationJob;\n+\n+    /**\n+     * Create a notification task.\n+     *\n+     * @param notification notification to take as model\n+     * @param user the user this task is about\n+     * @param emailSchema name of user schema containing e-mail address\n+     * @return notification task, fully populated\n+     */\n+    private NotificationTask getNotificationTask(\n+            final Notification notification, final SyncopeUser user,\n+            final String emailSchema) {\n+\n+        Set<String> recipients = new HashSet<String>();\n+        for (SyncopeUser recipient : searchDAO.search(\n+                notification.getRecipients())) {\n+\n+            if (recipient.getAttribute(emailSchema) == null) {\n+                LOG.error(\"{} cannot be notified no {} attribute present\",\n+                        recipient, emailSchema);\n+            } else {\n+                recipients.add(recipient.getAttribute(emailSchema).\n+                        getValuesAsStrings().get(0));\n+            }\n+        }\n+        if (notification.isSelfAsRecipient()) {\n+            if (user.getAttribute(emailSchema) == null) {\n+                LOG.error(\"{} cannot be notified no {} attribute present\",\n+                        user, emailSchema);\n+            } else {\n+                recipients.add(user.getAttribute(emailSchema).\n+                        getValuesAsStrings().get(0));\n+            }\n+        }\n+\n+        NotificationTask task = new NotificationTask();\n+        task.setTraceLevel(notification.getTraceLevel());\n+        task.setRecipients(recipients);\n+        task.setSender(notification.getSender());\n+        task.setSubject(notification.getSubject());\n+\n+        final Map<String, Object> model = new HashMap<String, Object>();\n+        for (AbstractAttr attr : user.getAttributes()) {\n+            List<String> values = attr.getValuesAsStrings();\n+            model.put(attr.getSchema().getName(),\n+                    values.isEmpty()\n+                    ? \"\"\n+                    : (values.size() == 1\n+                    ? values.iterator().next() : values));\n+        }\n+\n+        String htmlBody;\n+        String textBody;\n+        try {\n+            htmlBody =\n+                    VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,\n+                    \"mailTemplates/\" + notification.getTemplate() + \".html.vm\",\n+                    model);\n+            textBody =\n+                    VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,\n+                    \"mailTemplates/\" + notification.getTemplate() + \".txt.vm\",\n+                    model);\n+        } catch (VelocityException e) {\n+            LOG.error(\"Could not get mail body\", e);\n+\n+            htmlBody = \"\";\n+            textBody = \"\";\n+        }\n+        task.setTextBody(textBody);\n+        task.setHtmlBody(htmlBody);\n+\n+        return task;\n+    }\n+\n+    /**\n+     * Create notification tasks for each notification matching the passed\n+     * workflow result.\n+     * @param wfResult workflow result\n+     * @throws NotFoundException if user contained in the workflow result\n+     * cannot be found\n+     */\n+    public void createTasks(final WorkflowResult<Long> wfResult)\n+            throws NotFoundException {\n+\n+        SyncopeUser user = userDAO.find(wfResult.getResult());\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + wfResult.getResult());\n+        }\n+\n+        final String emailSchema =\n+                confDAO.find(\"email.schema\", \"email\").getValue();\n+\n+        for (Notification notification : notificationDAO.findAll()) {\n+            if (searchDAO.matches(user, notification.getAbout())) {\n+                Set<String> events = new HashSet<String>(\n+                        notification.getEvents());\n+                events.retainAll(wfResult.getPerformedTasks());\n+\n+                if (!events.isEmpty()) {\n+                    LOG.debug(\n+                            \"Creating notification task for events {} about {}\",\n+                            events, user);\n+\n+                    taskDAO.save(getNotificationTask(notification, user,\n+                            emailSchema));\n+                } else {\n+                    LOG.debug(\"No events found about {}\", user);\n+                }\n+            }\n+        }\n+    }\n+\n+    public TaskExec execute(final NotificationTask task) {\n+        return notificationJob.executeSingle(task);\n+    }\n+}"},{"sha":"3221e1ae309ec1cf2b6c43a7f30fb226e0a825e1","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractVirAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -28,7 +28,7 @@\n import org.identityconnectors.framework.common.objects.Uid;\n import org.springframework.context.ConfigurableApplicationContext;\n import org.syncope.core.init.ConnInstanceLoader;\n-import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n+import org.syncope.core.propagation.ConnectorFacadeProxy;\n import org.syncope.core.util.ApplicationContextManager;\n import org.syncope.core.util.JexlUtil;\n import org.syncope.types.IntMappingType;"},{"sha":"2b9ea508d07554e4319eb22af5a86423b263169e","filename":"core/src/main/java/org/syncope/core/persistence/beans/Notification.java","status":"modified","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -15,18 +15,25 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n import javax.persistence.FetchType;\n import javax.persistence.GeneratedValue;\n import javax.persistence.GenerationType;\n import javax.persistence.Id;\n import javax.persistence.Lob;\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.hibernate.annotations.Type;\n import org.syncope.client.search.NodeCond;\n import org.syncope.core.persistence.util.XmlSerializer;\n import org.syncope.core.persistence.validation.entity.NotificationCheck;\n+import org.syncope.types.TraceLevel;\n \n @NotificationCheck\n @Entity\n@@ -49,6 +56,12 @@ public class Notification extends AbstractBaseBean {\n     @Type(type = \"org.hibernate.type.StringClobType\")\n     private String xmlRecipients;\n \n+    @Column(nullable = false)\n+    @Basic\n+    @Min(0)\n+    @Max(1)\n+    private Integer selfAsRecipient;\n+\n     @NotNull\n     private String sender;\n \n@@ -58,8 +71,14 @@ public class Notification extends AbstractBaseBean {\n     @NotNull\n     private String template;\n \n+    @Enumerated(EnumType.STRING)\n+    @NotNull\n+    private TraceLevel traceLevel;\n+\n     public Notification() {\n         events = new ArrayList<String>();\n+        selfAsRecipient = getBooleanAsInteger(false);\n+        traceLevel = TraceLevel.ALL;\n     }\n \n     public Long getId() {\n@@ -117,6 +136,14 @@ public void setEvents(List<String> events) {\n         }\n     }\n \n+    public boolean isSelfAsRecipient() {\n+        return isBooleanAsInteger(selfAsRecipient);\n+    }\n+\n+    public void setSelfAsRecipient(final boolean selfAsRecipient) {\n+        this.selfAsRecipient = getBooleanAsInteger(selfAsRecipient);\n+    }\n+\n     public String getSender() {\n         return sender;\n     }\n@@ -140,4 +167,12 @@ public String getTemplate() {\n     public void setTemplate(String template) {\n         this.template = template;\n     }\n+\n+    public TraceLevel getTraceLevel() {\n+        return traceLevel;\n+    }\n+\n+    public void setTraceLevel(TraceLevel traceLevel) {\n+        this.traceLevel = traceLevel;\n+    }\n }"},{"sha":"d2e1db2b2e0fd774359df0b4d4907d758472c11d","filename":"core/src/main/java/org/syncope/core/persistence/beans/NotificationTask.java","status":"added","additions":114,"deletions":0,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotificationTask.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,114 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.persistence.beans;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.persistence.ElementCollection;\n+import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n+import javax.persistence.FetchType;\n+import javax.validation.constraints.NotNull;\n+import org.syncope.types.TraceLevel;\n+\n+@Entity\n+public class NotificationTask extends Task {\n+\n+    private static final long serialVersionUID = 95731573485279180L;\n+\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    private Set<String> recipients;\n+\n+    @NotNull\n+    private String sender;\n+\n+    @NotNull\n+    private String subject;\n+\n+    @NotNull\n+    private String textBody;\n+\n+    @NotNull\n+    private String htmlBody;\n+\n+    @Enumerated(EnumType.STRING)\n+    @NotNull\n+    private TraceLevel traceLevel;\n+\n+    public NotificationTask() {\n+        super();\n+\n+        recipients = new HashSet<String>();\n+    }\n+\n+    public Set<String> getRecipients() {\n+        return recipients;\n+    }\n+\n+    public boolean addRecipient(final String recipient) {\n+        return recipients.add(recipient);\n+    }\n+\n+    public boolean removeRecipient(final String recipient) {\n+        return recipients.remove(recipient);\n+    }\n+\n+    public void setRecipients(final Set<String> recipients) {\n+        this.recipients.clear();\n+        if (recipients != null) {\n+            this.recipients.addAll(recipients);\n+        }\n+    }\n+\n+    public String getSender() {\n+        return sender;\n+    }\n+\n+    public void setSender(final String sender) {\n+        this.sender = sender;\n+    }\n+\n+    public String getSubject() {\n+        return subject;\n+    }\n+\n+    public void setSubject(final String subject) {\n+        this.subject = subject;\n+    }\n+\n+    public String getTextBody() {\n+        return textBody;\n+    }\n+\n+    public void setTextBody(final String textBody) {\n+        this.textBody = textBody;\n+    }\n+\n+    public String getHtmlBody() {\n+        return htmlBody;\n+    }\n+\n+    public void setHtmlBody(final String htmlBody) {\n+        this.htmlBody = htmlBody;\n+    }\n+\n+    public TraceLevel getTraceLevel() {\n+        return traceLevel;\n+    }\n+\n+    public void setTraceLevel(TraceLevel traceLevel) {\n+        this.traceLevel = traceLevel;\n+    }\n+}"},{"sha":"036f6678c0992bf38de0419463bf2dad55679214","filename":"core/src/main/java/org/syncope/core/persistence/beans/SchedTask.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchedTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchedTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchedTask.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -22,9 +22,9 @@ public class SchedTask extends Task {\n \n     private static final long serialVersionUID = -4141057723006682562L;\n \n-    private String cronExpression;\n+    protected String cronExpression;\n \n-    private String jobClassName;\n+    protected String jobClassName;\n \n     public String getCronExpression() {\n         return cronExpression;"},{"sha":"766bdcc57d98f49d6b971c981bb800df0e8d3708","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -14,7 +14,9 @@\n package org.syncope.core.persistence.beans;\n \n import java.util.ArrayList;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n import javax.persistence.Basic;\n import javax.persistence.Entity;\n import javax.persistence.ManyToOne;\n@@ -90,6 +92,15 @@ public boolean removeDefaultResource(ExternalResource resource) {\n         return resource != null && defaultResources.remove(resource);\n     }\n \n+    public Set<String> getDefaultResourceNames() {\n+        Set<String> defaultResourceNames = new HashSet<String>(\n+                getDefaultResources().size());\n+        for (ExternalResource defaultResource : getDefaultResources()) {\n+            defaultResourceNames.add(defaultResource.getName());\n+        }\n+        return defaultResourceNames;\n+    }\n+\n     public List<ExternalResource> getDefaultResources() {\n         return defaultResources;\n     }\n@@ -110,6 +121,15 @@ public boolean removeDefaultRole(SyncopeRole role) {\n         return role != null && defaultRoles.remove(role);\n     }\n \n+    public Set<Long> getDefaultRoleIds() {\n+        Set<Long> defaultRoleIds = new HashSet<Long>(\n+                getDefaultRoles().size());\n+        for (SyncopeRole defaultRole : getDefaultRoles()) {\n+            defaultRoleIds.add(defaultRole.getId());\n+        }\n+        return defaultRoleIds;\n+    }\n+\n     public List<SyncopeRole> getDefaultRoles() {\n         return defaultRoles;\n     }"},{"sha":"d8e54a12e56c7cde44376ca0e495ce1f3f23b96a","filename":"core/src/main/java/org/syncope/core/persistence/dao/TaskDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -23,6 +23,8 @@ public interface TaskDAO extends DAO {\n \n      <T extends Task> T find(Long id);\n \n+     <T extends Task> List<T> findWithoutExecs(Class<T> reference);\n+\n      <T extends Task> List<T> findAll(ExternalResource resource,\n             Class<T> reference);\n "},{"sha":"f8b6c4982e0a1749d2a6eccaf95eb3cb4463850e","filename":"core/src/main/java/org/syncope/core/persistence/dao/UserSearchDAO.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchDAO.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -21,8 +21,19 @@\n \n public interface UserSearchDAO extends DAO {\n \n+    /**\n+     * @param adminRoles the set of admin roles owned by the caller\n+     * @param searchCondition the search condition\n+     * @return size of search result\n+     */\n     Integer count(Set<Long> adminRoles, NodeCond searchCondition);\n \n+    /**\n+     * @param searchCondition the search condition\n+     * @return the list of users matchin the given search condition\n+     */\n+    List<SyncopeUser> search(NodeCond searchCondition);\n+\n     /**\n      * @param adminRoles the set of admin roles owned by the caller\n      * @param searchCondition the search condition\n@@ -39,4 +50,12 @@ public interface UserSearchDAO extends DAO {\n      */\n     List<SyncopeUser> search(Set<Long> adminRoles,\n             NodeCond searchCondition, int page, int itemsPerPage);\n+\n+    /**\n+     * Verify if user matched the given search condition.\n+     * @param user to be checked\n+     * @param searchCondition to be verified\n+     * @return true if user matched searchCondition\n+     */\n+    boolean matches(SyncopeUser user, NodeCond searchCondition);\n }"},{"sha":"ca8371581b49e1523d5f0677f971cd61ea06cea0","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/TaskDAOImpl.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -49,6 +49,14 @@ private <T extends Task> StringBuilder buildfindAllQuery(\n         return queryString;\n     }\n \n+    @Override\n+    public <T extends Task> List<T> findWithoutExecs(final Class<T> reference) {\n+        StringBuilder queryString = buildfindAllQuery(reference);\n+        queryString.append(\"WHERE e.executions IS EMPTY\");\n+        final Query query = entityManager.createQuery(queryString.toString());\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public <T extends Task> List<T> findAll(\n             final ExternalResource resource, final Class<T> reference) {\n@@ -98,6 +106,7 @@ public <T extends Task> Integer count(final Class<T> reference) {\n         return ((Number) countQuery.getSingleResult()).intValue();\n     }\n \n+    @Transactional(rollbackFor = {Throwable.class})\n     @Override\n     public <T extends Task> T save(final T task) {\n         return entityManager.merge(task);"},{"sha":"e577d685b2c686aed335adb7bbee554c8a1e45b7","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java","status":"modified","additions":41,"deletions":15,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -127,6 +127,11 @@ public Integer count(final Set<Long> adminRoles,\n         return result;\n     }\n \n+    @Override\n+    public List<SyncopeUser> search(final NodeCond searchCondition) {\n+        return search(null, searchCondition, -1, -1);\n+    }\n+\n     @Override\n     public List<SyncopeUser> search(final Set<Long> adminRoles,\n             final NodeCond searchCondition) {\n@@ -157,8 +162,34 @@ public List<SyncopeUser> search(final Set<Long> adminRoles,\n         return result;\n     }\n \n-    private Integer setParameter(final Random random,\n-            final Map<Integer, Object> parameters,\n+    @Override\n+    public boolean matches(final SyncopeUser user,\n+            final NodeCond searchCondition) {\n+\n+        Map<Integer, Object> parameters = Collections.synchronizedMap(\n+                new HashMap<Integer, Object>());\n+\n+        // 1. get the query string from the search condition\n+        StringBuilder queryString = getQuery(searchCondition, parameters);\n+\n+        // 2. take into account the passed user\n+        queryString.insert(0, \"SELECT u.user_id FROM (\");\n+        queryString.append(\") u WHERE user_id=:matchesUserId\");\n+\n+        // 3. prepare the search query\n+        Query query = entityManager.createNativeQuery(queryString.toString());\n+\n+        // 4. populate the search query with parameter values\n+        fillWithParameters(query, parameters);\n+        query.setParameter(\"matchesUserId\", user.getId());\n+\n+        // 5. executes query\n+        List<SyncopeUser> result = query.getResultList();\n+\n+        return !result.isEmpty();\n+    }\n+\n+    private Integer setParameter(final Map<Integer, Object> parameters,\n             final Object parameter) {\n \n         Integer key;\n@@ -317,10 +348,10 @@ private String getQuery(final MembershipCond cond,\n \n         if (cond.getRoleId() != null) {\n             query.append(\"role_id=:param\").append(\n-                    setParameter(random, parameters, cond.getRoleId()));\n+                    setParameter(parameters, cond.getRoleId()));\n         } else if (cond.getRoleName() != null) {\n             query.append(\"role_name=:param\").append(\n-                    setParameter(random, parameters, cond.getRoleName()));\n+                    setParameter(parameters, cond.getRoleName()));\n         }\n \n         if (not) {\n@@ -343,7 +374,7 @@ private String getQuery(final ResourceCond cond,\n         }\n \n         query.append(\"resource_name=:param\").append(\n-                setParameter(random, parameters, cond.getResourceName()));\n+                setParameter(parameters, cond.getResourceName()));\n \n         if (not) {\n             query.append(\")\");\n@@ -472,8 +503,7 @@ private String getQuery(final AttributeCond cond,\n                 break;\n \n             case EQ:\n-                paramKey = setParameter(random, parameters,\n-                        attrValue.getValue());\n+                paramKey = setParameter(parameters, attrValue.getValue());\n                 query.append(\"' AND \").append(getFieldName(schema.getType()));\n                 if (not) {\n                     query.append(\"<>\");\n@@ -484,29 +514,25 @@ private String getQuery(final AttributeCond cond,\n                 break;\n \n             case GE:\n-                paramKey = setParameter(random, parameters,\n-                        attrValue.getValue());\n+                paramKey = setParameter(parameters, attrValue.getValue());\n                 query.append(\"' AND \").append(getFieldName(schema.getType())).\n                         append(\">=:param\").append(paramKey);\n                 break;\n \n             case GT:\n-                paramKey = setParameter(random, parameters,\n-                        attrValue.getValue());\n+                paramKey = setParameter(parameters, attrValue.getValue());\n                 query.append(\"' AND \").append(getFieldName(schema.getType())).\n                         append(\">:param\").append(paramKey);\n                 break;\n \n             case LE:\n-                paramKey = setParameter(random, parameters,\n-                        attrValue.getValue());\n+                paramKey = setParameter(parameters, attrValue.getValue());\n                 query.append(\"' AND \").append(getFieldName(schema.getType())).\n                         append(\"<=:param\").append(paramKey);\n                 break;\n \n             case LT:\n-                paramKey = setParameter(random, parameters,\n-                        attrValue.getValue());\n+                paramKey = setParameter(parameters, attrValue.getValue());\n                 query.append(\"' AND \").append(getFieldName(schema.getType())).\n                         append(\"<:param\").append(paramKey);\n                 break;"},{"sha":"8e4a09fd0ac161b02a094e5ef9a1f84fdd0e203b","filename":"core/src/main/java/org/syncope/core/policy/AccountPolicyEnforcer.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -21,9 +21,10 @@\n import org.syncope.client.to.UserTO;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.propagation.PropagationManager;\n+import org.syncope.core.propagation.PropagationManager;\n import org.syncope.core.rest.data.UserDataBinder;\n import org.syncope.core.workflow.UserWorkflowAdapter;\n+import org.syncope.core.workflow.WorkflowResult;\n import org.syncope.types.AccountPolicySpec;\n import org.syncope.types.PolicyType;\n \n@@ -116,19 +117,20 @@ public void enforce(\n                 user.setFailedLogins(user.getFailedLogins() - 1);\n \n                 // disable user\n-                final Long updatedId = wfAdapter.suspend(user);\n+                final WorkflowResult<Long> updated = wfAdapter.suspend(user);\n \n                 // propagate suspension if and only if it is required by policy\n                 if (policy.isPropagateSuspension()) {\n                     final List<PropagationTask> tasks = propagationManager.\n-                            getUpdateTaskIds(updatedId,\n+                            getUpdateTaskIds(updated.getResult(),\n                             null, null, null, Boolean.FALSE, null);\n \n                     propagationManager.execute(tasks);\n                 }\n \n                 if (LOG.isDebugEnabled()) {\n-                    final UserTO savedTO = userDataBinder.getUserTO(updatedId);\n+                    final UserTO savedTO =\n+                            userDataBinder.getUserTO(updated.getResult());\n                     LOG.debug(\"About to return suspended user\\n{}\", savedTO);\n                 }\n             } catch (Exception e) {"},{"sha":"7e0c8d39872b4609975702f5a34cae5f79be6799","filename":"core/src/main/java/org/syncope/core/propagation/ConnectorFacadeProxy.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.persistence.propagation;\n+package org.syncope.core.propagation;\n \n import java.io.File;\n import java.net.URI;","previous_filename":"core/src/main/java/org/syncope/core/persistence/propagation/ConnectorFacadeProxy.java"},{"sha":"14db23a32c383009e6105564b37b60c93182f32c","filename":"core/src/main/java/org/syncope/core/propagation/PropagationByResource.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.persistence.propagation;\n+package org.syncope.core.propagation;\n \n import java.io.Serializable;\n import java.util.Collections;","previous_filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationByResource.java"},{"sha":"d45ab49996be28822d6ce268d41fef0541e19bb7","filename":"core/src/main/java/org/syncope/core/propagation/PropagationException.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationException.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.persistence.propagation;\n+package org.syncope.core.propagation;\n \n /**\n  * Bear stacktrace received during propagation towards a certain resource.","previous_filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationException.java"},{"sha":"c5c52bf86bbcc171e5d7ac445a2146d059c18f33","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"renamed","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.persistence.propagation;\n+package org.syncope.core.propagation;\n \n import java.io.PrintWriter;\n import java.io.StringWriter;\n@@ -73,7 +73,7 @@\n import org.syncope.types.TraceLevel;\n \n /**\n- * Manage the data propagation to target resources.\n+ * Manage the data propagation to external resources.\n  */\n @Transactional(rollbackFor = {\n     Throwable.class\n@@ -134,7 +134,6 @@ public class PropagationManager {\n     @Autowired\n     private JexlUtil jexlUtil;\n \n-    @Transactional(readOnly = true)\n     private SyncopeUser getSyncopeUser(final Long userId)\n             throws NotFoundException {\n \n@@ -659,7 +658,7 @@ public void execute(final List<PropagationTask> tasks)\n         for (PropagationTask task : tasks) {\n             LOG.debug(\"Execution started for {}\", task);\n \n-            execution = execute(task, new Date());\n+            execution = execute(task);\n \n             LOG.debug(\"Execution finished for {}, {}\", task, execution);\n \n@@ -734,11 +733,10 @@ private boolean hasToBeregistered(final PropagationTask task,\n      * Execute a propagation task.\n      *\n      * @param task to execute\n-     * @param startDate timestamp for beginning task excecution\n      * @return TaskExecution\n      */\n-    public TaskExec execute(final PropagationTask task,\n-            final Date startDate) {\n+    public TaskExec execute(final PropagationTask task) {\n+        final Date startDate = new Date();\n \n         TaskExec execution = new TaskExec();\n         execution.setStatus(PropagationTaskExecStatus.CREATED.toString());","previous_filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java"},{"sha":"9c870d074046fcf30c43433462b41f46b7400fa2","filename":"core/src/main/java/org/syncope/core/propagation/package-info.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2Fpackage-info.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -15,4 +15,4 @@\n /**\n  * Package for classes involved in propagation.\n  */\n-package org.syncope.core.persistence.propagation;\n+package org.syncope.core.propagation;","previous_filename":"core/src/main/java/org/syncope/core/persistence/propagation/package-info.java"},{"sha":"97d8a76c9e6e1e75d7648231057665f7281d2071","filename":"core/src/main/java/org/syncope/core/rest/controller/AbstractController.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -24,6 +24,7 @@\n import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.to.TaskTO;\n+import org.syncope.core.persistence.beans.NotificationTask;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n@@ -72,6 +73,8 @@ protected TaskUtil getTaskUtil(final String kind) {\n     protected TaskUtil getTaskUtil(final Task task) {\n         TaskUtil result = (task instanceof PropagationTask)\n                 ? TaskUtil.PROPAGATION\n+                : (task instanceof NotificationTask)\n+                ? TaskUtil.NOTIFICATION\n                 : (task instanceof SyncTask)\n                 ? TaskUtil.SYNC\n                 : (task instanceof SchedTask)"},{"sha":"c002e038f5ed88ec2ee1973171a02f7234a130ce","filename":"core/src/main/java/org/syncope/core/rest/controller/ConfigurationController.java","status":"modified","additions":31,"deletions":26,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -14,18 +14,20 @@\n  */\n package org.syncope.core.rest.controller;\n \n+import com.google.common.io.PatternFilenameFilter;\n+import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.StringWriter;\n import java.lang.reflect.Modifier;\n+import java.net.URISyntaxException;\n import java.sql.Connection;\n import java.sql.SQLException;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Properties;\n import java.util.Set;\n-import javassist.NotFoundException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.sql.DataSource;\n@@ -49,14 +51,11 @@\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.servlet.ModelAndView;\n import org.syncope.client.to.ConfigurationTO;\n-import org.syncope.client.to.WorkflowDefinitionTO;\n import org.syncope.core.persistence.beans.SyncopeConf;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n import org.syncope.core.persistence.dao.ConfDAO;\n import org.syncope.core.persistence.validation.attrvalue.Validator;\n import org.syncope.core.rest.data.ConfigurationDataBinder;\n-import org.syncope.core.workflow.UserWorkflowAdapter;\n-import org.syncope.core.workflow.WorkflowException;\n \n @Controller\n @RequestMapping(\"/configuration\")\n@@ -68,9 +67,6 @@ public class ConfigurationController extends AbstractController {\n     @Autowired\n     private ConfigurationDataBinder configurationDataBinder;\n \n-    @Autowired\n-    private UserWorkflowAdapter wfAdapter;\n-\n     @Autowired\n     private DataSource dataSource;\n \n@@ -178,30 +174,39 @@ public ModelAndView getValidators() {\n             }\n         }\n \n-        ModelAndView result = new ModelAndView();\n-        result.addObject(validators);\n-        return result;\n+        return new ModelAndView().addObject(validators);\n     }\n \n-    @PreAuthorize(\"hasRole('WORKFLOW_DEF_READ')\")\n+    @PreAuthorize(\"hasRole('CONFIGURATION_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n-    value = \"/workflow/definition\")\n-    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n-    public WorkflowDefinitionTO getDefinition()\n-            throws WorkflowException {\n-\n-        return wfAdapter.getDefinition();\n-    }\n+    value = \"/mailTemplates\")\n+    public ModelAndView getMailTemplates()\n+            throws URISyntaxException {\n+\n+        String[] templatesFiles = new File(getClass().getResource(\n+                \"/mailTemplates\").toURI()).list(\n+                new PatternFilenameFilter(\".*\\\\.vm\"));\n+\n+        Set<String> htmlTemplates = new HashSet<String>();\n+        Set<String> textTemplates = new HashSet<String>();\n+\n+        for (String templateFile : templatesFiles) {\n+            if (templateFile.endsWith(\".html.vm\")) {\n+                htmlTemplates.add(templateFile.substring(\n+                        0, templateFile.indexOf(\".html.vm\")));\n+            } else if (templateFile.endsWith(\".txt.vm\")) {\n+                textTemplates.add(templateFile.substring(\n+                        0, templateFile.indexOf(\".txt.vm\")));\n+            } else {\n+                LOG.warn(\"Unexpected file found: {}, ignoring...\",\n+                        templateFile);\n+            }\n+        }\n \n-    @PreAuthorize(\"hasRole('WORKFLOW_DEF_UPDATE')\")\n-    @RequestMapping(method = RequestMethod.PUT,\n-    value = \"/workflow/definition\")\n-    @Transactional(rollbackFor = {Throwable.class})\n-    public void updateDefinition(\n-            @RequestBody final WorkflowDefinitionTO definition)\n-            throws NotFoundException, WorkflowException {\n+        // Only templates available both as HTML and TEXT are considered\n+        htmlTemplates.retainAll(textTemplates);\n \n-        wfAdapter.updateDefinition(definition);\n+        return new ModelAndView().addObject(htmlTemplates);\n     }\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_READ')\")"},{"sha":"1c49984eaf4e04babf481b5733713201f4b76c7f","filename":"core/src/main/java/org/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -49,7 +49,7 @@\n import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n+import org.syncope.core.propagation.ConnectorFacadeProxy;\n import org.syncope.core.rest.data.ConnInstanceDataBinder;\n import org.syncope.core.rest.data.ResourceDataBinder;\n import org.syncope.types.ConnConfPropSchema;"},{"sha":"889c12cb8c2c66ba1fbeef20da42a3eb8c9f0d9f","filename":"core/src/main/java/org/syncope/core/rest/controller/TaskController.java","status":"modified","additions":18,"deletions":5,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -46,16 +46,19 @@\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.init.JobInstanceLoader;\n+import org.syncope.core.notification.NotificationManager;\n+import org.syncope.core.persistence.beans.NotificationTask;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.persistence.dao.TaskExecDAO;\n-import org.syncope.core.persistence.propagation.PropagationManager;\n+import org.syncope.core.propagation.PropagationManager;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.syncope.core.rest.data.TaskDataBinder;\n import org.syncope.core.scheduling.Job;\n+import org.syncope.core.scheduling.NotificationJob;\n import org.syncope.core.scheduling.SyncJob;\n import org.syncope.core.util.ApplicationContextManager;\n import org.syncope.core.util.TaskUtil;\n@@ -80,6 +83,9 @@ public class TaskController extends AbstractController {\n     @Autowired\n     private PropagationManager propagationManager;\n \n+    @Autowired\n+    private NotificationManager notificationManager;\n+\n     @Autowired\n     private JobInstanceLoader jobInstanceLoader;\n \n@@ -285,7 +291,8 @@ public ModelAndView getJobClasses() {\n         Set<String> jobClasses = new HashSet<String>();\n         for (Class jobClass : subTypes) {\n             if (!Modifier.isAbstract(jobClass.getModifiers())\n-                    && !jobClass.equals(SyncJob.class)) {\n+                    && !jobClass.equals(SyncJob.class)\n+                    && !jobClass.equals(NotificationJob.class)) {\n \n                 jobClasses.add(jobClass.getName());\n             }\n@@ -341,9 +348,15 @@ public TaskExecTO execute(@PathVariable(\"taskId\") final Long taskId,\n         LOG.debug(\"Execution started for {}\", task);\n         switch (getTaskUtil(task)) {\n             case PROPAGATION:\n-                final TaskExec execution = propagationManager.execute(\n-                        (PropagationTask) task, new Date());\n-                result = binder.getTaskExecutionTO(execution);\n+                final TaskExec propExec = propagationManager.execute(\n+                        (PropagationTask) task);\n+                result = binder.getTaskExecutionTO(propExec);\n+                break;\n+\n+            case NOTIFICATION:\n+                final TaskExec notExec = notificationManager.execute(\n+                        (NotificationTask) task);\n+                result = binder.getTaskExecutionTO(notExec);\n                 break;\n \n             case SCHED:"},{"sha":"9a0971bf279f60ca200fba26188d8a1ff8917bc7","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":54,"deletions":23,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -23,7 +23,7 @@\n import org.springframework.web.bind.annotation.RequestParam;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.UserDAO;\n-import org.syncope.core.persistence.propagation.PropagationException;\n+import org.syncope.core.propagation.PropagationException;\n import org.syncope.core.rest.data.UserDataBinder;\n import java.util.ArrayList;\n import java.util.HashSet;\n@@ -43,13 +43,15 @@\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.to.WorkflowFormTO;\n+import org.syncope.core.notification.NotificationManager;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.dao.UserSearchDAO;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n-import org.syncope.core.persistence.propagation.PropagationManager;\n+import org.syncope.core.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationManager;\n import org.syncope.core.util.EntitlementUtil;\n import org.syncope.core.workflow.UserWorkflowAdapter;\n import org.syncope.core.workflow.WorkflowException;\n+import org.syncope.core.workflow.WorkflowResult;\n \n /**\n  * Note that this controller does not extend AbstractController, hence does not \n@@ -82,6 +84,9 @@ public class UserController {\n     @Autowired\n     private PropagationManager propagationManager;\n \n+    @Autowired\n+    private NotificationManager notificationManager;\n+\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/verifyPassword/{userId}\")\n@@ -253,14 +258,19 @@ public UserTO create(final HttpServletResponse response,\n             throw new UnauthorizedRoleException(requestRoleIds);\n         }\n \n-        Map.Entry<Long, Boolean> created = wfAdapter.create(userTO);\n+        WorkflowResult<Map.Entry<Long, Boolean>> created =\n+                wfAdapter.create(userTO);\n \n         List<PropagationTask> tasks = propagationManager.getCreateTaskIds(\n-                created.getKey(), userTO.getPassword(),\n-                userTO.getVirtualAttributes(), created.getValue());\n+                created.getResult().getKey(), userTO.getPassword(),\n+                userTO.getVirtualAttributes(), created.getResult().getValue());\n         propagationManager.execute(tasks);\n \n-        final UserTO savedTO = dataBinder.getUserTO(created.getKey());\n+        notificationManager.createTasks(new WorkflowResult<Long>(\n+                created.getResult().getKey(), created.getPerformedTasks()));\n+\n+        final UserTO savedTO = dataBinder.getUserTO(\n+                created.getResult().getKey());\n \n         LOG.debug(\"About to return created user\\n{}\", savedTO);\n \n@@ -275,13 +285,16 @@ public UserTO activate(@RequestBody final UserTO userTO)\n             throws WorkflowException, NotFoundException,\n             UnauthorizedRoleException, PropagationException {\n \n-        Long updatedId = wfAdapter.activate(userTO.getId(), userTO.getToken());\n+        WorkflowResult<Long> updated =\n+                wfAdapter.activate(userTO.getId(), userTO.getToken());\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n-                updatedId, null, null, null, Boolean.TRUE, null);\n+                updated.getResult(), null, null, null, Boolean.TRUE, null);\n         propagationManager.execute(tasks);\n \n-        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n+        notificationManager.createTasks(updated);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updated.getResult());\n \n         LOG.debug(\"About to return activated user\\n{}\", savedTO);\n \n@@ -297,17 +310,21 @@ public UserTO update(@RequestBody final UserMod userMod)\n \n         LOG.debug(\"User update called with {}\", userMod);\n \n-        Map.Entry<Long, PropagationByResource> updated =\n+        WorkflowResult<Map.Entry<Long, PropagationByResource>> updated =\n                 wfAdapter.update(userMod);\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n-                updated.getKey(), userMod.getPassword(),\n+                updated.getResult().getKey(), userMod.getPassword(),\n                 userMod.getVirtualAttributesToBeRemoved(),\n                 userMod.getVirtualAttributesToBeAdded(),\n-                null, updated.getValue());\n+                null, updated.getResult().getValue());\n         propagationManager.execute(tasks);\n \n-        final UserTO updatedTO = dataBinder.getUserTO(updated.getKey());\n+        notificationManager.createTasks(new WorkflowResult<Long>(\n+                updated.getResult().getKey(), updated.getPerformedTasks()));\n+\n+        final UserTO updatedTO =\n+                dataBinder.getUserTO(updated.getResult().getKey());\n \n         LOG.debug(\"About to return updated user\\n{}\", updatedTO);\n \n@@ -323,13 +340,15 @@ public UserTO suspend(@PathVariable(\"userId\") final Long userId)\n \n         LOG.debug(\"About to suspend \" + userId);\n \n-        Long updatedId = wfAdapter.suspend(userId);\n+        WorkflowResult<Long> updated = wfAdapter.suspend(userId);\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n-                updatedId, null, null, null, Boolean.FALSE, null);\n+                updated.getResult(), null, null, null, Boolean.FALSE, null);\n         propagationManager.execute(tasks);\n \n-        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n+        notificationManager.createTasks(updated);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updated.getResult());\n \n         LOG.debug(\"About to return suspended user\\n{}\", savedTO);\n \n@@ -345,13 +364,15 @@ public UserTO reactivate(final @PathVariable(\"userId\") Long userId)\n \n         LOG.debug(\"About to reactivate \" + userId);\n \n-        Long updatedId = wfAdapter.reactivate(userId);\n+        WorkflowResult<Long> updated = wfAdapter.reactivate(userId);\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n-                updatedId, null, null, null, Boolean.TRUE, null);\n+                updated.getResult(), null, null, null, Boolean.TRUE, null);\n         propagationManager.execute(tasks);\n \n-        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n+        notificationManager.createTasks(updated);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updated.getResult());\n \n         LOG.debug(\"About to return suspended user\\n{}\", savedTO);\n \n@@ -367,6 +388,14 @@ public void delete(@PathVariable(\"userId\") final Long userId)\n \n         LOG.debug(\"User delete called with {}\", userId);\n \n+        // Note here that we can only notify about \"delete\", not any other\n+        // task defined in workflow process definition: this because this\n+        // information could only be available after wfAdapter.delete(), which\n+        // will also effectively remove user from db, thus making virtually\n+        // impossible by NotificationManager to fetch required user information\n+        notificationManager.createTasks(\n+                new WorkflowResult<Long>(userId, \"delete\"));\n+\n         List<PropagationTask> tasks =\n                 propagationManager.getDeleteTaskIds(userId);\n         propagationManager.execute(tasks);\n@@ -386,13 +415,15 @@ public UserTO executeWorkflow(@RequestBody final UserTO userTO,\n \n         LOG.debug(\"About to execute {} on {}\", taskId, userTO.getId());\n \n-        Long updatedId = wfAdapter.execute(userTO, taskId);\n+        WorkflowResult<Long> updated = wfAdapter.execute(userTO, taskId);\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(\n-                updatedId, null, null, null, null, null);\n+                updated.getResult(), null, null, null, null, null);\n         propagationManager.execute(tasks);\n \n-        final UserTO savedTO = dataBinder.getUserTO(updatedId);\n+        notificationManager.createTasks(updated);\n+\n+        final UserTO savedTO = dataBinder.getUserTO(updated.getResult());\n \n         LOG.debug(\"About to return updated user\\n{}\", savedTO);\n "},{"sha":"6e79392aef3dbc573e24842303fadc57f3a1e792","filename":"core/src/main/java/org/syncope/core/rest/controller/WorkflowController.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,65 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.rest.controller;\n+\n+import javassist.NotFoundException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.servlet.ModelAndView;\n+import org.syncope.client.to.WorkflowDefinitionTO;\n+import org.syncope.core.workflow.UserWorkflowAdapter;\n+import org.syncope.core.workflow.WorkflowException;\n+\n+@Controller\n+@RequestMapping(\"/workflow\")\n+public class WorkflowController extends AbstractController {\n+\n+    @Autowired\n+    private UserWorkflowAdapter wfAdapter;\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_DEF_READ')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/definition\")\n+    @Transactional(readOnly = true)\n+    public WorkflowDefinitionTO getDefinition()\n+            throws WorkflowException {\n+\n+        return wfAdapter.getDefinition();\n+    }\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_DEF_UPDATE')\")\n+    @RequestMapping(method = RequestMethod.PUT,\n+    value = \"/definition\")\n+    public void updateDefinition(\n+            @RequestBody final WorkflowDefinitionTO definition)\n+            throws NotFoundException, WorkflowException {\n+\n+        wfAdapter.updateDefinition(definition);\n+    }\n+\n+    @PreAuthorize(\"hasRole('WORKFLOW_TASK_LIST')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/tasks\")\n+    public ModelAndView getDefinedTasks()\n+            throws WorkflowException {\n+\n+        return new ModelAndView().addObject(wfAdapter.getDefinedTasks());\n+    }\n+}"},{"sha":"6fb5ea307277b560e2937cbd086bdb540d72d1ef","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -58,7 +58,7 @@\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.persistence.dao.VirAttrDAO;\n import org.syncope.core.persistence.dao.VirSchemaDAO;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.core.util.JexlUtil;\n import org.syncope.types.PropagationOperation;\n import org.syncope.types.SyncopeClientExceptionType;"},{"sha":"df71121d14a76533ee6de76aee4f2f260333136e","filename":"core/src/main/java/org/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -31,7 +31,7 @@\n import org.syncope.core.persistence.beans.role.RVirAttr;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.EntitlementDAO;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component"},{"sha":"0e125017d76cde429c3a5d0198d6f5a81b1e7371","filename":"core/src/main/java/org/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -25,6 +25,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.stereotype.Component;\n+import org.syncope.client.to.NotificationTaskTO;\n import org.syncope.client.to.PropagationTaskTO;\n import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.SyncTaskTO;\n@@ -35,6 +36,7 @@\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.ExternalResource;\n+import org.syncope.core.persistence.beans.NotificationTask;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n@@ -210,6 +212,11 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n                 ((SyncTaskTO) taskTO).setPerformDelete(\n                         ((SyncTask) task).isPerformDelete());\n                 break;\n+\n+            case NOTIFICATION:\n+                BeanUtils.copyProperties((NotificationTask) task,\n+                        (NotificationTaskTO) taskTO, IGNORE_TASK_PROPERTIES);\n+                break;\n         }\n \n         return taskTO;"},{"sha":"fbaa21669907bc94c2a262db51ca952206c9021d","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -41,7 +41,7 @@\n import org.syncope.core.persistence.beans.membership.MVirAttr;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.syncope.core.util.EntitlementUtil;\n import org.syncope.types.CipherAlgorithm;"},{"sha":"7f0c3a7bc446a32e689f43c27e75eaea663d9df8","filename":"core/src/main/java/org/syncope/core/scheduling/NotificationJob.java","status":"added","additions":241,"deletions":0,"changes":241,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,241 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.scheduling;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.util.Date;\n+import javax.mail.internet.MimeMessage;\n+import org.apache.commons.lang.StringUtils;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+import org.springframework.mail.javamail.MimeMessageHelper;\n+import org.syncope.core.persistence.beans.NotificationTask;\n+import org.syncope.core.persistence.beans.TaskExec;\n+import org.syncope.core.persistence.dao.ConfDAO;\n+import org.syncope.core.persistence.dao.TaskDAO;\n+import org.syncope.core.persistence.dao.TaskExecDAO;\n+import org.syncope.types.TraceLevel;\n+\n+/**\n+ * Periodically checks for notification to send.\n+ *\n+ * @see NotificationTask\n+ */\n+public class NotificationJob implements Job {\n+\n+    enum Status {\n+\n+        SENT,\n+        NOT_SENT\n+\n+    }\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(\n+            NotificationJob.class);\n+\n+    /**\n+     * Task DAO.\n+     */\n+    @Autowired\n+    private TaskDAO taskDAO;\n+\n+    /**\n+     * Task execution DAO.\n+     */\n+    @Autowired\n+    private TaskExecDAO taskExecDAO;\n+\n+    /**\n+     * Configuration DAO.\n+     */\n+    @Autowired\n+    private ConfDAO confDAO;\n+\n+    private String smtpHost;\n+\n+    private int smtpPort;\n+\n+    private String smtpUsername;\n+\n+    private String smtpPassword;\n+\n+    private void init() {\n+        smtpHost = confDAO.find(\"smtp.host\", \"\").getValue();\n+        smtpPort = 25;\n+        try {\n+            smtpPort = Integer.valueOf(\n+                    confDAO.find(\"smtp.port\", \"25\").getValue());\n+        } catch (NumberFormatException e) {\n+            LOG.error(\"Invalid SMTP port, reverting to 25\", e);\n+        }\n+        smtpUsername = confDAO.find(\"smtp.username\", \"\").getValue();\n+        smtpPassword = confDAO.find(\"smtp.password\", \"\").getValue();\n+\n+        LOG.debug(\"SMTP details fetched: {}:{} / {}:[PASSWORD_NOT_SHOWN]\",\n+                new Object[]{smtpHost, smtpPort, smtpUsername});\n+    }\n+\n+    public TaskExec executeSingle(final NotificationTask task) {\n+        init();\n+\n+        TaskExec execution = new TaskExec();\n+        execution.setTask(task);\n+        execution.setStartDate(new Date());\n+\n+        if (StringUtils.isBlank(smtpHost)\n+                || StringUtils.isBlank(task.getSender())\n+                || StringUtils.isBlank(task.getSubject())\n+                || task.getRecipients().isEmpty()\n+                || StringUtils.isBlank(task.getHtmlBody())\n+                || StringUtils.isBlank(task.getTextBody())) {\n+\n+            String message = \"Could not fetch all required information for \"\n+                    + \"sending e-mails:\\n\"\n+                    + smtpHost + \":\" + smtpPort + \"\\n\"\n+                    + task.getRecipients() + \"\\n\"\n+                    + task.getSender() + \"\\n\"\n+                    + task.getSubject() + \"\\n\"\n+                    + task.getHtmlBody() + \"\\n\"\n+                    + task.getTextBody();\n+            LOG.error(message);\n+\n+            execution.setStatus(Status.NOT_SENT.name());\n+\n+            if (task.getTraceLevel().ordinal()\n+                    >= TraceLevel.FAILURES.ordinal()) {\n+\n+                execution.setMessage(message);\n+            }\n+        } else {\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"About to send e-mails:\\n\"\n+                        + smtpHost + \":\" + smtpPort + \"\\n\"\n+                        + task.getRecipients() + \"\\n\"\n+                        + task.getSender() + \"\\n\"\n+                        + task.getSubject() + \"\\n\"\n+                        + task.getHtmlBody() + \"\\n\"\n+                        + task.getTextBody() + \"\\n\");\n+            }\n+\n+            for (String to : task.getRecipients()) {\n+                try {\n+                    JavaMailSenderImpl sender = new JavaMailSenderImpl();\n+                    sender.setHost(smtpHost);\n+                    sender.setPort(smtpPort);\n+                    if (StringUtils.isNotBlank(smtpUsername)) {\n+                        sender.setUsername(smtpUsername);\n+                    }\n+                    if (StringUtils.isNotBlank(smtpPassword)) {\n+                        sender.setPassword(smtpPassword);\n+                    }\n+\n+                    MimeMessage message = sender.createMimeMessage();\n+                    MimeMessageHelper helper =\n+                            new MimeMessageHelper(message, true);\n+\n+                    helper.setTo(to);\n+                    helper.setFrom(task.getSender());\n+                    helper.setSubject(task.getSubject());\n+                    helper.setText(task.getTextBody(), task.getHtmlBody());\n+\n+                    sender.send(message);\n+\n+                    execution.setStatus(Status.SENT.name());\n+\n+                    StringBuilder report = new StringBuilder();\n+                    switch (task.getTraceLevel()) {\n+                        case ALL:\n+                            report.append(\"FROM: \").\n+                                    append(task.getSender()).append('\\n').\n+                                    append(\"TO: \").append(to).append('\\n').\n+                                    append(\"SUBJECT: \").\n+                                    append(task.getSubject()).append('\\n').\n+                                    append('\\n').\n+                                    append(task.getTextBody()).append('\\n').\n+                                    append('\\n').\n+                                    append(task.getHtmlBody()).append('\\n');\n+                            break;\n+\n+                        case SUMMARY:\n+                            report.append(\"E-mail sent to \").\n+                                    append(to).append('\\n');\n+                            break;\n+\n+                        case FAILURES:\n+                        case NONE:\n+                        default:\n+                    }\n+                    if (report.length() > 0) {\n+                        execution.setMessage(report.toString());\n+                    }\n+                } catch (Throwable t) {\n+                    LOG.error(\"Could not send e-mail\", t);\n+\n+                    execution.setStatus(Status.NOT_SENT.name());\n+                    StringWriter exceptionWriter = new StringWriter();\n+                    exceptionWriter.write(t.getMessage() + \"\\n\\n\");\n+                    t.printStackTrace(new PrintWriter(exceptionWriter));\n+\n+                    if (task.getTraceLevel().ordinal()\n+                            >= TraceLevel.FAILURES.ordinal()) {\n+\n+                        execution.setMessage(exceptionWriter.toString());\n+                    }\n+                }\n+\n+                execution.setEndDate(new Date());\n+            }\n+        }\n+\n+        if (hasToBeRegistered(execution)) {\n+            execution = taskExecDAO.save(execution);\n+        }\n+\n+        return execution;\n+    }\n+\n+    @Override\n+    public void execute(final JobExecutionContext context)\n+            throws JobExecutionException {\n+\n+        LOG.debug(\"Waking up...\");\n+\n+        for (NotificationTask task : taskDAO.findWithoutExecs(\n+                NotificationTask.class)) {\n+\n+            executeSingle(task);\n+        }\n+\n+        LOG.debug(\"Sleeping again...\");\n+    }\n+\n+    private boolean hasToBeRegistered(final TaskExec execution) {\n+        NotificationTask task = (NotificationTask) execution.getTask();\n+\n+        // True if either failed and failures have to be registered, or if ALL\n+        // has to be registered.\n+        return (Status.valueOf(execution.getStatus()) == Status.NOT_SENT\n+                && task.getTraceLevel().ordinal()\n+                >= TraceLevel.FAILURES.ordinal())\n+                || task.getTraceLevel() == TraceLevel.ALL;\n+    }\n+}"},{"sha":"0ae0a34a5d710ad849729303c624d2d14015cfe9","filename":"core/src/main/java/org/syncope/core/scheduling/SyncJob.java","status":"modified","additions":38,"deletions":71,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -15,10 +15,8 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -36,12 +34,10 @@\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.core.init.ConnInstanceLoader;\n-import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.TaskExec;\n-import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n import org.syncope.core.persistence.beans.user.UDerSchema;\n@@ -50,13 +46,14 @@\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.UserDAO;\n-import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n-import org.syncope.core.persistence.propagation.PropagationException;\n-import org.syncope.core.persistence.propagation.PropagationManager;\n+import org.syncope.core.propagation.ConnectorFacadeProxy;\n+import org.syncope.core.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationException;\n+import org.syncope.core.propagation.PropagationManager;\n import org.syncope.core.rest.controller.InvalidSearchConditionException;\n import org.syncope.core.scheduling.SyncResult.Operation;\n import org.syncope.core.workflow.UserWorkflowAdapter;\n+import org.syncope.core.workflow.WorkflowResult;\n import org.syncope.types.TraceLevel;\n \n /**\n@@ -154,19 +151,15 @@ public void access(final byte[] clearBytes) {\n      * Build an UserTO out of connector object attributes and schema mapping.\n      *\n      * @param obj connector object\n-     * @param mappings schema mappings\n-     * @param roles default roles to be assigned\n-     * @param resources default resources to be assigned\n      * @return UserTO for the user to be created\n      */\n-    private UserTO getUserTO(final ConnectorObject obj,\n-            final List<SchemaMapping> mappings,\n-            final Set<Long> roles, final Set<String> resources) {\n+    private UserTO getUserTO(final ConnectorObject obj) {\n+        final SyncTask syncTask = (SyncTask) this.task;\n \n         final UserTO userTO = new UserTO();\n-        userTO.setResources(resources);\n+        userTO.setResources(syncTask.getDefaultResourceNames());\n         MembershipTO membershipTO;\n-        for (Long roleId : roles) {\n+        for (Long roleId : syncTask.getDefaultRoleIds()) {\n             membershipTO = new MembershipTO();\n             membershipTO.setRoleId(roleId);\n             userTO.addMembership(membershipTO);\n@@ -176,7 +169,7 @@ private UserTO getUserTO(final ConnectorObject obj,\n         List<Object> values;\n         AttributeTO attributeTO;\n \n-        for (SchemaMapping mapping : mappings) {\n+        for (SchemaMapping mapping : syncTask.getResource().getMappings()) {\n             if (mapping.isAccountid()) {\n                 attribute = obj.getAttributeByName(Name.NAME);\n             } else if (mapping.isPassword()) {\n@@ -237,20 +230,16 @@ private UserTO getUserTO(final ConnectorObject obj,\n      *\n      * @param userId user to be updated\n      * @param obj connector object\n-     * @param mappings schema mappings\n-     * @param roles default roles to be assigned\n-     * @param resources default resources to be assigned\n      * @return UserMod for the user to be updated\n      */\n-    private UserMod getUserMod(final Long userId, final ConnectorObject obj,\n-            final List<SchemaMapping> mappings,\n-            final Set<Long> roles, final Set<String> resources) {\n+    private UserMod getUserMod(final Long userId, final ConnectorObject obj) {\n+        final SyncTask syncTask = (SyncTask) this.task;\n \n         final UserMod userMod = new UserMod();\n         userMod.setId(userId);\n-        userMod.setResourcesToBeAdded(resources);\n+        userMod.setResourcesToBeAdded(syncTask.getDefaultResourceNames());\n         MembershipMod membershipMod;\n-        for (Long roleId : roles) {\n+        for (Long roleId : syncTask.getDefaultRoleIds()) {\n             membershipMod = new MembershipMod();\n             membershipMod.setRole(roleId);\n             userMod.addMembershipToBeAdded(membershipMod);\n@@ -259,7 +248,7 @@ private UserMod getUserMod(final Long userId, final ConnectorObject obj,\n         Attribute attribute;\n         List<Object> values;\n         AttributeMod attributeMod;\n-        for (SchemaMapping mapping : mappings) {\n+        for (SchemaMapping mapping : syncTask.getResource().getMappings()) {\n             attribute = obj.getAttributeByName(mapping.getExtAttrName());\n             values = attribute == null\n                     ? Collections.EMPTY_LIST : attribute.getValue();\n@@ -348,17 +337,11 @@ private List<SyncopeUser> findExistingUsers(\n         return result;\n     }\n \n-    private SyncResult createUser(final SyncDelta delta,\n-            final Set<String> defaultResources,\n-            final Set<Long> defaultRoles, final boolean dryRun) {\n-\n-        SyncTask syncTask = (SyncTask) this.task;\n+    private SyncResult createUser(final SyncDelta delta, final boolean dryRun) {\n         SyncResult result = new SyncResult();\n         result.setOperation(Operation.CREATE);\n \n-        UserTO userTO = getUserTO(delta.getObject(),\n-                syncTask.getResource().getMappings(),\n-                defaultRoles, defaultResources);\n+        UserTO userTO = getUserTO(delta.getObject());\n \n         // shortcut in case of dry run.\n         if (dryRun) {\n@@ -369,15 +352,15 @@ private SyncResult createUser(final SyncDelta delta,\n         }\n \n         try {\n-            Map.Entry<Long, Boolean> created =\n+            WorkflowResult<Map.Entry<Long, Boolean>> created =\n                     wfAdapter.create(userTO);\n             List<PropagationTask> tasks =\n                     propagationManager.getCreateTaskIds(\n-                    created.getKey(), userTO.getPassword(),\n-                    null, created.getValue(),\n-                    syncTask.getResource().getName());\n+                    created.getResult().getKey(), userTO.getPassword(),\n+                    null, created.getResult().getValue(),\n+                    ((SyncTask) this.task).getResource().getName());\n             propagationManager.execute(tasks);\n-            result.setUserId(created.getKey());\n+            result.setUserId(created.getResult().getKey());\n             result.setUsername(userTO.getUsername());\n             result.setStatus(SyncResult.Status.SUCCESS);\n         } catch (PropagationException e) {\n@@ -393,31 +376,26 @@ private SyncResult createUser(final SyncDelta delta,\n     }\n \n     private SyncResult updateUser(final SyncDelta delta,\n-            final SyncopeUser user, final Set<String> defaultResources,\n-            final Set<Long> defaultRoles, final boolean dryRun) {\n-\n-        SyncTask syncTask = (SyncTask) this.task;\n+            final SyncopeUser user, final boolean dryRun) {\n \n         SyncResult result = new SyncResult();\n         result.setOperation(Operation.UPDATE);\n         try {\n             UserMod userMod = getUserMod(\n-                    user.getId(), delta.getObject(),\n-                    syncTask.getResource().getMappings(),\n-                    defaultRoles, defaultResources);\n+                    user.getId(), delta.getObject());\n \n             result.setStatus(SyncResult.Status.SUCCESS);\n             result.setUserId(userMod.getId());\n             result.setUsername(userMod.getUsername());\n \n             if (!dryRun) {\n-                Map.Entry<Long, PropagationByResource> updated =\n+                WorkflowResult<Map.Entry<Long, PropagationByResource>> updated =\n                         wfAdapter.update(userMod);\n                 List<PropagationTask> tasks =\n                         propagationManager.getUpdateTaskIds(\n-                        updated.getKey(), userMod.getPassword(),\n-                        null, null, null, updated.getValue(),\n-                        syncTask.getResource().getName());\n+                        updated.getResult().getKey(), userMod.getPassword(),\n+                        null, null, null, updated.getResult().getValue(),\n+                        ((SyncTask) this.task).getResource().getName());\n                 propagationManager.execute(tasks);\n             }\n         } catch (PropagationException e) {\n@@ -473,6 +451,9 @@ private List<SyncResult> deleteUsers(\n \n     /**\n      * Create a textual report of the synchronization, based on the trace level.\n+     * @param syncResults Sync results\n+     * @param syncTraceLevel Sync trace level\n+     * @param dryRun dry run?\n      * @return report as string\n      */\n     private String createReport(final List<SyncResult> syncResults,\n@@ -632,17 +613,6 @@ protected String doExecute(final boolean dryRun)\n                     + syncTask.getResource());\n         }\n \n-        Set<String> defaultResources = new HashSet<String>(\n-                syncTask.getDefaultResources().size());\n-        for (ExternalResource resource : syncTask.getDefaultResources()) {\n-            defaultResources.add(resource.getName());\n-        }\n-        Set<Long> defaultRoles = new HashSet<Long>(\n-                syncTask.getDefaultRoles().size());\n-        for (SyncopeRole role : syncTask.getDefaultRoles()) {\n-            defaultRoles.add(role.getId());\n-        }\n-\n         List<SyncResult> results =\n                 new ArrayList<SyncResult>();\n         for (SyncDelta delta : deltas) {\n@@ -656,15 +626,14 @@ protected String doExecute(final boolean dryRun)\n                 case CREATE_OR_UPDATE:\n                     if (users.isEmpty()) {\n                         if (syncTask.isPerformCreate()) {\n-                            results.add(createUser(delta, defaultResources,\n-                                    defaultRoles, dryRun));\n+                            results.add(createUser(delta, dryRun));\n                         } else {\n                             LOG.debug(\"SyncTask not configured for create\");\n                         }\n                     } else if (users.size() == 1) {\n                         if (syncTask.isPerformUpdate()) {\n-                            results.add(updateUser(delta, users.get(0),\n-                                    defaultResources, defaultRoles, dryRun));\n+                            results.add(\n+                                    updateUser(delta, users.get(0), dryRun));\n                         } else {\n                             LOG.debug(\"SyncTask not configured for update\");\n                         }\n@@ -710,11 +679,9 @@ protected boolean hasToBeRegistered(final TaskExec execution) {\n \n         // True if either failed and failures have to be registered, or if ALL\n         // has to be registered.\n-        return (Status.valueOf(execution.getStatus())\n-                == Status.FAILURE\n-                && syncTask.getResource().getSyncTraceLevel().\n-                ordinal() >= TraceLevel.FAILURES.ordinal())\n-                || syncTask.getResource().getSyncTraceLevel()\n-                == TraceLevel.ALL;\n+        return (Status.valueOf(execution.getStatus()) == Status.FAILURE\n+                && syncTask.getResource().getSyncTraceLevel().ordinal()\n+                >= TraceLevel.FAILURES.ordinal())\n+                || syncTask.getResource().getSyncTraceLevel() == TraceLevel.ALL;\n     }\n }"},{"sha":"e244113d07cf704dc3828a1b275f65610ba695ad","filename":"core/src/main/java/org/syncope/core/util/TaskUtil.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FTaskUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FTaskUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FTaskUtil.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -14,10 +14,12 @@\n  */\n package org.syncope.core.util;\n \n+import org.syncope.client.to.NotificationTaskTO;\n import org.syncope.client.to.PropagationTaskTO;\n import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.to.TaskTO;\n+import org.syncope.core.persistence.beans.NotificationTask;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n@@ -27,7 +29,8 @@ public enum TaskUtil {\n \n     PROPAGATION,\n     SCHED,\n-    SYNC;\n+    SYNC,\n+    NOTIFICATION;\n \n     public <T extends Task> Class<T> taskClass() {\n         Class result = null;\n@@ -42,6 +45,9 @@ public <T extends Task> Class<T> taskClass() {\n             case SYNC:\n                 result = SyncTask.class;\n                 break;\n+            case NOTIFICATION:\n+                result = NotificationTask.class;\n+                break;\n         }\n \n         return result;\n@@ -60,6 +66,9 @@ public <T extends Task> T newTask() {\n             case SYNC:\n                 result = (T) new SyncTask();\n                 break;\n+            case NOTIFICATION:\n+                result = (T) new NotificationTask();\n+                break;\n         }\n \n         return result;\n@@ -78,6 +87,9 @@ public <T extends TaskTO> Class<T> taskTOClass() {\n             case SYNC:\n                 result = SyncTaskTO.class;\n                 break;\n+            case NOTIFICATION:\n+                result = NotificationTaskTO.class;\n+                break;\n         }\n \n         return result;\n@@ -96,6 +108,8 @@ public <T extends TaskTO> T newTaskTO() {\n             case SYNC:\n                 result = (T) new SyncTaskTO();\n                 break;\n+            case NOTIFICATION:\n+                result = (T) new NotificationTaskTO();\n         }\n \n         return result;"},{"sha":"8f9100c532d9867ce3d68fae9bfb879efc53a288","filename":"core/src/main/java/org/syncope/core/workflow/AbstractUserWorkflowAdapter.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -20,7 +20,7 @@\n import org.syncope.client.mod.UserMod;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.UserDAO;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.syncope.core.rest.data.UserDataBinder;\n \n@@ -36,43 +36,44 @@\n     @Autowired\n     protected UserDAO userDAO;\n \n-    protected abstract Long doActivate(SyncopeUser user, String token)\n+    protected abstract WorkflowResult<Long> doActivate(\n+            SyncopeUser user, String token)\n             throws WorkflowException;\n \n     @Override\n-    public Long activate(final Long userId, final String token)\n+    public WorkflowResult<Long> activate(final Long userId, final String token)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException {\n \n         return doActivate(dataBinder.getUserFromId(userId), token);\n     }\n \n-    protected abstract Map.Entry<Long, PropagationByResource> doUpdate(\n+    protected abstract WorkflowResult<Map.Entry<Long, PropagationByResource>> doUpdate(\n             SyncopeUser user, UserMod userMod)\n             throws WorkflowException;\n \n     @Override\n-    public Map.Entry<Long, PropagationByResource> update(\n+    public WorkflowResult<Map.Entry<Long, PropagationByResource>> update(\n             final UserMod userMod)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException {\n \n         return doUpdate(dataBinder.getUserFromId(userMod.getId()), userMod);\n     }\n \n-    protected abstract Long doSuspend(SyncopeUser user)\n+    protected abstract WorkflowResult<Long> doSuspend(SyncopeUser user)\n             throws WorkflowException;\n \n     @Override\n-    public Long suspend(final Long userId)\n+    public WorkflowResult<Long> suspend(final Long userId)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException {\n \n         return doSuspend(dataBinder.getUserFromId(userId));\n     }\n \n     @Override\n-    public Long suspend(final SyncopeUser user)\n+    public WorkflowResult<Long> suspend(final SyncopeUser user)\n             throws UnauthorizedRoleException, WorkflowException {\n \n         // set suspended flag\n@@ -81,11 +82,11 @@ public Long suspend(final SyncopeUser user)\n         return doSuspend(user);\n     }\n \n-    protected abstract Long doReactivate(SyncopeUser user)\n+    protected abstract WorkflowResult<Long> doReactivate(SyncopeUser user)\n             throws WorkflowException;\n \n     @Override\n-    public Long reactivate(final Long userId)\n+    public WorkflowResult<Long> reactivate(final Long userId)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException {\n "},{"sha":"db506e2a861d6c3693f49c6a3c407321e0d2b278","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":116,"deletions":27,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -24,18 +24,27 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import javassist.NotFoundException;\n import javax.annotation.Resource;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathFactory;\n import org.activiti.engine.ActivitiException;\n import org.activiti.engine.FormService;\n+import org.activiti.engine.HistoryService;\n import org.activiti.engine.RepositoryService;\n import org.activiti.engine.RuntimeService;\n import org.activiti.engine.TaskService;\n import org.activiti.engine.form.FormProperty;\n import org.activiti.engine.form.FormType;\n import org.activiti.engine.form.TaskFormData;\n+import org.activiti.engine.history.HistoricActivityInstance;\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.engine.runtime.ProcessInstance;\n import org.activiti.engine.task.Task;\n@@ -52,9 +61,11 @@\n import org.syncope.client.to.WorkflowFormPropertyTO;\n import org.syncope.client.to.WorkflowFormTO;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.syncope.types.WorkflowFormPropertyType;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n \n /**\n  * Activiti (http://www.activiti.org/) based implementation.\n@@ -81,7 +92,7 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n     public static final String EMAIL_KIND = \"emailKind\";\n \n-    public static final String ACTION = \"action\";\n+    public static final String TASK = \"task\";\n \n     public static final String TOKEN = \"token\";\n \n@@ -101,6 +112,9 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n     @Autowired\n     private FormService formService;\n \n+    @Autowired\n+    private HistoryService historyService;\n+\n     @Autowired\n     private RepositoryService repositoryService;\n \n@@ -115,8 +129,21 @@ private void updateStatus(final SyncopeUser user) {\n         }\n     }\n \n+    private Set<String> getPerformedTasks(final SyncopeUser user) {\n+        Set<String> result = new HashSet<String>();\n+\n+        List<HistoricActivityInstance> tasks =\n+                historyService.createHistoricActivityInstanceQuery().\n+                executionId(user.getWorkflowId()).list();\n+        for (HistoricActivityInstance task : tasks) {\n+            result.add(task.getActivityId());\n+        }\n+\n+        return result;\n+    }\n+\n     @Override\n-    public Map.Entry<Long, Boolean> create(final UserTO userTO)\n+    public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO)\n             throws WorkflowException {\n \n         final Map<String, Object> variables = new HashMap<String, Object>();\n@@ -138,16 +165,20 @@ public Map.Entry<Long, Boolean> create(final UserTO userTO)\n         Boolean enable = (Boolean) runtimeService.getVariable(\n                 processInstance.getProcessInstanceId(), PROPAGATE_ENABLE);\n \n-        return new DefaultMapEntry(user.getId(), enable);\n+        return new WorkflowResult<Map.Entry<Long, Boolean>>(\n+                new DefaultMapEntry(user.getId(), enable),\n+                getPerformedTasks(user));\n     }\n \n-    private void doExecuteAction(final SyncopeUser user,\n-            final String action, final Map<String, Object> moreVariables)\n+    private Set<String> doExecuteTask(final SyncopeUser user,\n+            final String task, final Map<String, Object> moreVariables)\n             throws WorkflowException {\n \n+        Set<String> preTasks = getPerformedTasks(user);\n+\n         final Map<String, Object> variables = new HashMap<String, Object>();\n         variables.put(SYNCOPE_USER, user);\n-        variables.put(ACTION, action);\n+        variables.put(TASK, task);\n         if (moreVariables != null && !moreVariables.isEmpty()) {\n             variables.putAll(moreVariables);\n         }\n@@ -168,26 +199,32 @@ private void doExecuteAction(final SyncopeUser user,\n                 throw new WorkflowException(e);\n             }\n         }\n+\n+        Set<String> postTasks = getPerformedTasks(user);\n+        postTasks.removeAll(preTasks);\n+        postTasks.add(task);\n+        return postTasks;\n     }\n \n     @Override\n-    protected Long doActivate(final SyncopeUser user, final String token)\n+    protected WorkflowResult<Long> doActivate(final SyncopeUser user,\n+            final String token)\n             throws WorkflowException {\n \n-        doExecuteAction(user, \"activate\",\n+        Set<String> performedTasks = doExecuteTask(user, \"activate\",\n                 Collections.singletonMap(TOKEN, (Object) token));\n         updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n-        return updated.getId();\n+        return new WorkflowResult<Long>(updated.getId(), performedTasks);\n     }\n \n     @Override\n-    protected Map.Entry<Long, PropagationByResource> doUpdate(\n+    protected WorkflowResult<Map.Entry<Long, PropagationByResource>> doUpdate(\n             final SyncopeUser user, final UserMod userMod)\n             throws WorkflowException {\n \n-        doExecuteAction(user, \"update\",\n+        Set<String> performedTasks = doExecuteTask(user, \"update\",\n                 Collections.singletonMap(USER_MOD, (Object) userMod));\n         updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n@@ -196,43 +233,46 @@ protected Map.Entry<Long, PropagationByResource> doUpdate(\n                 (PropagationByResource) runtimeService.getVariable(\n                 user.getWorkflowId(), PROP_BY_RESOURCE);\n \n-        return new DefaultMapEntry(updated.getId(), propByRes);\n+        return new WorkflowResult<Map.Entry<Long, PropagationByResource>>(\n+                new DefaultMapEntry(updated.getId(), propByRes),\n+                performedTasks);\n     }\n \n     @Override\n     @Transactional(rollbackFor = {Throwable.class})\n-    protected Long doSuspend(final SyncopeUser user)\n+    protected WorkflowResult<Long> doSuspend(final SyncopeUser user)\n             throws WorkflowException {\n \n-        doExecuteAction(user, \"suspend\", null);\n+        Set<String> performedTasks = doExecuteTask(user, \"suspend\", null);\n         updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n-        return updated.getId();\n+        return new WorkflowResult<Long>(updated.getId(), performedTasks);\n     }\n \n     @Override\n-    protected Long doReactivate(final SyncopeUser user)\n+    protected WorkflowResult<Long> doReactivate(final SyncopeUser user)\n             throws WorkflowException {\n \n-        doExecuteAction(user, \"reactivate\", null);\n+        Set<String> performedTasks = doExecuteTask(user, \"reactivate\", null);\n         updateStatus(user);\n \n         SyncopeUser updated = userDAO.save(user);\n \n-        return updated.getId();\n+        return new WorkflowResult<Long>(updated.getId(), performedTasks);\n     }\n \n     @Override\n     protected void doDelete(final SyncopeUser user)\n             throws WorkflowException {\n \n-        doExecuteAction(user, \"delete\", null);\n+        doExecuteTask(user, \"delete\", null);\n         userDAO.delete(user);\n     }\n \n     @Override\n-    public Long execute(final UserTO userTO, final String actionId)\n+    public WorkflowResult<Long> execute(final UserTO userTO,\n+            final String taskId)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException {\n \n@@ -241,11 +281,11 @@ public Long execute(final UserTO userTO, final String actionId)\n         final Map<String, Object> variables = new HashMap<String, Object>();\n         variables.put(USER_TO, userTO);\n \n-        doExecuteAction(user, actionId, variables);\n+        Set<String> performedTasks = doExecuteTask(user, taskId, variables);\n         updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n-        return updated.getId();\n+        return new WorkflowResult<Long>(updated.getId(), performedTasks);\n     }\n \n     @Override\n@@ -262,15 +302,16 @@ public WorkflowDefinitionTO getDefinition()\n             throw new WorkflowException(e);\n         }\n \n-        InputStream is = repositoryService.getResourceAsStream(\n+        InputStream procDefIS = repositoryService.getResourceAsStream(\n                 procDef.getDeploymentId(), WF_PROCESS_RESOURCE);\n+        Reader reader =\n+                new BufferedReader(new InputStreamReader(procDefIS));\n \n         Writer writer = new StringWriter();\n \n         char[] buffer = new char[1024];\n+        int n;\n         try {\n-            Reader reader = new BufferedReader(new InputStreamReader(is));\n-            int n;\n             while ((n = reader.read(buffer)) != -1) {\n                 writer.write(buffer, 0, n);\n             }\n@@ -279,7 +320,7 @@ public WorkflowDefinitionTO getDefinition()\n                     procDef.getKey(), e);\n         } finally {\n             try {\n-                is.close();\n+                procDefIS.close();\n             } catch (IOException ioe) {\n                 LOG.error(\"While closing input stream for {}\",\n                         procDef.getKey(), ioe);\n@@ -315,6 +356,54 @@ public void updateDefinition(\n         }\n     }\n \n+    @Override\n+    public List<String> getDefinedTasks()\n+            throws WorkflowException {\n+\n+        List<String> result = new ArrayList<String>();\n+\n+        ProcessDefinition procDef;\n+        try {\n+            procDef = repositoryService.createProcessDefinitionQuery().\n+                    processDefinitionKey(\n+                    ActivitiUserWorkflowAdapter.WF_PROCESS_ID).latestVersion().\n+                    singleResult();\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n+\n+        InputStream procDefIS = repositoryService.getResourceAsStream(\n+                procDef.getDeploymentId(), WF_PROCESS_RESOURCE);\n+\n+        DocumentBuilderFactory domFactory =\n+                DocumentBuilderFactory.newInstance();\n+        try {\n+            DocumentBuilder builder = domFactory.newDocumentBuilder();\n+            Document doc = builder.parse(procDefIS);\n+\n+            XPath xpath = XPathFactory.newInstance().newXPath();\n+\n+            NodeList nodeList = (NodeList) xpath.evaluate(\n+                    \"//userTask | //serviceTask | //scriptTask\",\n+                    doc, XPathConstants.NODESET);\n+            for (int i = 0; i < nodeList.getLength(); i++) {\n+                result.add(nodeList.item(i).getAttributes().\n+                        getNamedItem(\"id\").getNodeValue());\n+            }\n+        } catch (Exception e) {\n+            throw new WorkflowException(e);\n+        } finally {\n+            try {\n+                procDefIS.close();\n+            } catch (IOException ioe) {\n+                LOG.error(\"While closing input stream for {}\",\n+                        procDef.getKey(), ioe);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n     private WorkflowFormPropertyType fromActivitiFormType(\n             final FormType activitiFormType) {\n "},{"sha":"762adcf25b26c43a53dc64e80763377f6f9adf9b","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":34,"deletions":16,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -13,6 +13,7 @@\n  */\n package org.syncope.core.workflow;\n \n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n@@ -24,7 +25,7 @@\n import org.syncope.client.to.WorkflowDefinitionTO;\n import org.syncope.client.to.WorkflowFormTO;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.core.rest.controller.UnauthorizedRoleException;\n \n /**\n@@ -35,20 +36,28 @@\n })\n public class NoOpUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n+    private static final List<String> TASKS =\n+            Arrays.asList(\n+            new String[]{\n+                \"create\", \"activate\", \"update\",\n+                \"suspend\", \"reactivate\", \"delete\"});\n+\n     @Override\n-    public Map.Entry<Long, Boolean> create(final UserTO userTO)\n+    public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO)\n             throws WorkflowException {\n \n         SyncopeUser user = new SyncopeUser();\n         dataBinder.create(user, userTO);\n         user.setStatus(\"created\");\n         user = userDAO.save(user);\n \n-        return new DefaultMapEntry(user.getId(), Boolean.TRUE);\n+        return new WorkflowResult<Map.Entry<Long, Boolean>>(\n+                new DefaultMapEntry(user.getId(), Boolean.TRUE), \"create\");\n     }\n \n     @Override\n-    protected Long doActivate(final SyncopeUser user, final String token)\n+    protected WorkflowResult<Long> doActivate(final SyncopeUser user,\n+            final String token)\n             throws WorkflowException {\n \n         if (!user.checkToken(token)) {\n@@ -60,39 +69,40 @@ protected Long doActivate(final SyncopeUser user, final String token)\n         user.setStatus(\"active\");\n         SyncopeUser updated = userDAO.save(user);\n \n-        return updated.getId();\n+        return new WorkflowResult<Long>(updated.getId(), \"activate\");\n     }\n \n     @Override\n-    protected Map.Entry<Long, PropagationByResource> doUpdate(\n+    protected WorkflowResult<Map.Entry<Long, PropagationByResource>> doUpdate(\n             final SyncopeUser user, final UserMod userMod)\n             throws WorkflowException {\n \n         PropagationByResource propByRes = dataBinder.update(user, userMod);\n \n         SyncopeUser updated = userDAO.save(user);\n \n-        return new DefaultMapEntry(updated.getId(), propByRes);\n+        return new WorkflowResult<Map.Entry<Long, PropagationByResource>>(\n+                new DefaultMapEntry(updated.getId(), propByRes), \"update\");\n     }\n \n     @Override\n-    protected Long doSuspend(final SyncopeUser user)\n+    protected WorkflowResult<Long> doSuspend(final SyncopeUser user)\n             throws WorkflowException {\n \n         user.setStatus(\"suspended\");\n         SyncopeUser updated = userDAO.save(user);\n \n-        return updated.getId();\n+        return new WorkflowResult<Long>(updated.getId(), \"suspend\");\n     }\n \n     @Override\n-    protected Long doReactivate(final SyncopeUser user)\n+    protected WorkflowResult<Long> doReactivate(final SyncopeUser user)\n             throws WorkflowException {\n \n         user.setStatus(\"active\");\n         SyncopeUser updated = userDAO.save(user);\n \n-        return updated.getId();\n+        return new WorkflowResult<Long>(updated.getId(), \"suspend\");\n     }\n \n     @Override\n@@ -103,7 +113,8 @@ protected void doDelete(final SyncopeUser user)\n     }\n \n     @Override\n-    public Long execute(final UserTO userTO, final String actionId)\n+    public WorkflowResult<Long> execute(final UserTO userTO,\n+            final String taskId)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException {\n \n@@ -119,35 +130,42 @@ public WorkflowDefinitionTO getDefinition()\n     }\n \n     @Override\n-    public void updateDefinition(WorkflowDefinitionTO definition)\n+    public void updateDefinition(final WorkflowDefinitionTO definition)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException(\n                 new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n+    @Override\n+    public List<String> getDefinedTasks()\n+            throws WorkflowException {\n+\n+        return TASKS;\n+    }\n+\n     @Override\n     public List<WorkflowFormTO> getForms() {\n         return Collections.EMPTY_LIST;\n     }\n \n     @Override\n-    public WorkflowFormTO getForm(String workflowId)\n+    public WorkflowFormTO getForm(final String workflowId)\n             throws NotFoundException, WorkflowException {\n \n         return null;\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(String taskId, String userName)\n+    public WorkflowFormTO claimForm(final String taskId, final String userName)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException(\n                 new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public Long submitForm(WorkflowFormTO form, String userName)\n+    public Long submitForm(final WorkflowFormTO form, final String userName)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException("},{"sha":"ba488658db0446183962f66e663a3d0ba94451ba","filename":"core/src/main/java/org/syncope/core/workflow/UserWorkflowAdapter.java","status":"modified","additions":20,"deletions":10,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -21,7 +21,7 @@\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.client.to.WorkflowDefinitionTO;\n import org.syncope.client.to.WorkflowFormTO;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.core.rest.controller.UnauthorizedRoleException;\n \n /**\n@@ -37,20 +37,20 @@ public interface UserWorkflowAdapter {\n      * @throws UnauthorizedRoleException authorization exception\n      * @throws WorkflowException workflow exception\n      */\n-    Map.Entry<Long, Boolean> create(UserTO userTO)\n+    WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO)\n             throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n      * Execute a task on an user.\n      *\n-     * @param userTO user to be subject to action\n-     * @param actionId to be verified for activation\n+     * @param userTO user to be subject to task\n+     * @param taskId to be executed\n      * @return user just updated\n      * @throws UnauthorizedRoleException authorization exception\n      * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    Long execute(UserTO userTO, String actionId)\n+    WorkflowResult<Long> execute(UserTO userTO, String taskId)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException;\n \n@@ -64,7 +64,7 @@ Long execute(UserTO userTO, String actionId)\n      * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    Long activate(Long userId, String token)\n+    WorkflowResult<Long> activate(Long userId, String token)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException;\n \n@@ -77,7 +77,8 @@ Long activate(Long userId, String token)\n      * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    Map.Entry<Long, PropagationByResource> update(UserMod userMod)\n+    WorkflowResult<Map.Entry<Long, PropagationByResource>> update(\n+            UserMod userMod)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException;\n \n@@ -90,7 +91,7 @@ Map.Entry<Long, PropagationByResource> update(UserMod userMod)\n      * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    Long suspend(Long userId)\n+    WorkflowResult<Long> suspend(Long userId)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException;\n \n@@ -102,7 +103,7 @@ Long suspend(Long userId)\n      * @throws UnauthorizedRoleException authorization exception\n      * @throws WorkflowException workflow exception\n      */\n-    Long suspend(SyncopeUser user)\n+    WorkflowResult<Long> suspend(SyncopeUser user)\n             throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n@@ -114,7 +115,7 @@ Long suspend(SyncopeUser user)\n      * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    Long reactivate(Long userId)\n+    WorkflowResult<Long> reactivate(Long userId)\n             throws UnauthorizedRoleException, NotFoundException,\n             WorkflowException;\n \n@@ -149,6 +150,15 @@ WorkflowDefinitionTO getDefinition()\n     void updateDefinition(WorkflowDefinitionTO definition)\n             throws NotFoundException, WorkflowException;\n \n+    /**\n+     * Get list of defined tasks in workflow.\n+     *\n+     * @return list of defined tasks in workflow\n+     * @throws WorkflowException workflow exception\n+     */\n+    List<String> getDefinedTasks()\n+            throws WorkflowException;\n+\n     /**\n      * Get all defined forms for current workflow process instances.\n      *"},{"sha":"f874de8261d67952231bec91131ec0ae7b811603","filename":"core/src/main/java/org/syncope/core/workflow/WorkflowResult.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowResult.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+import org.apache.commons.lang.builder.EqualsBuilder;\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n+import org.apache.commons.lang.builder.ReflectionToStringBuilder;\n+import org.apache.commons.lang.builder.ToStringStyle;\n+\n+public class WorkflowResult<T> {\n+\n+    private T result;\n+\n+    private Set<String> performedTasks;\n+\n+    public WorkflowResult(final T result, final String performedTask) {\n+        this.result = result;\n+        this.performedTasks = Collections.singleton(performedTask);\n+    }\n+\n+    public WorkflowResult(final T result, final Set<String> performedTasks) {\n+        this.result = result;\n+        this.performedTasks = performedTasks;\n+    }\n+\n+    public Set<String> getPerformedTasks() {\n+        return performedTasks;\n+    }\n+\n+    public void setPerformedTasks(final Set<String> performedTasks) {\n+        this.performedTasks = performedTasks;\n+    }\n+\n+    public T getResult() {\n+        return result;\n+    }\n+\n+    public void setResult(final T result) {\n+        this.result = result;\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        return EqualsBuilder.reflectionEquals(this, obj);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return ReflectionToStringBuilder.toString(this,\n+                ToStringStyle.MULTI_LINE_STYLE);\n+    }\n+}"},{"sha":"00b6b51c57dae686e878e6d24fbe5749e40af120","filename":"core/src/main/java/org/syncope/core/workflow/activiti/AbstractSendEmail.java","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAbstractSendEmail.java?ref=2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","patch":"@@ -1,63 +0,0 @@\n-/*\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.syncope.core.workflow.activiti;\n-\n-import javax.mail.internet.MimeMessage;\n-import org.springframework.mail.javamail.JavaMailSenderImpl;\n-import org.springframework.mail.javamail.MimeMessageHelper;\n-\n-/**\n- * Abstract class for sending e-mail from workflow using Sprning, providing an \n- * utility method for such purpose.\n- *\n- * The main difference with Activiti's MailTask is that this class will not\n- * throw any exception when not able to send e-mail.\n- */\n-public abstract class AbstractSendEmail extends AbstractActivitiDelegate {\n-\n-    /**\n-     * Utility method for sending e-mail using Spring.\n-     *\n-     * @param smtpHost SMTP server host\n-     * @param to recipient\n-     * @param from sender\n-     * @param subject Subject\n-     * @param textBody E-mail body (text)\n-     * @param htmlBody E-mail body (HTML)\n-     */\n-    protected void sendMail(final String smtpHost,\n-            final String to,\n-            final String from,\n-            final String subject,\n-            final String textBody,\n-            final String htmlBody) {\n-\n-        try {\n-            JavaMailSenderImpl sender = new JavaMailSenderImpl();\n-            sender.setHost(smtpHost);\n-\n-            MimeMessage message = sender.createMimeMessage();\n-            MimeMessageHelper helper = new MimeMessageHelper(message, true);\n-\n-            helper.setTo(to);\n-            helper.setFrom(from);\n-            helper.setSubject(subject);\n-            helper.setText(textBody, htmlBody);\n-\n-            sender.send(message);\n-        } catch (Throwable t) {\n-            LOG.error(\"Could not send e-mail\", t);\n-        }\n-    }\n-}"},{"sha":"e6156778ce9a092ce597cff1b15190bfbacee084","filename":"core/src/main/java/org/syncope/core/workflow/activiti/SendVelocityEmail.java","status":"removed","additions":0,"deletions":106,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSendVelocityEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ce7b7782e8ef65a098c1f2f3573fb7251c7f958/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSendVelocityEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSendVelocityEmail.java?ref=2ce7b7782e8ef65a098c1f2f3573fb7251c7f958","patch":"@@ -1,106 +0,0 @@\n-/*\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.syncope.core.workflow.activiti;\n-\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.activiti.engine.delegate.DelegateExecution;\n-import org.apache.commons.lang.StringUtils;\n-import org.apache.velocity.app.VelocityEngine;\n-import org.apache.velocity.exception.VelocityException;\n-import org.springframework.ui.velocity.VelocityEngineUtils;\n-import org.syncope.core.persistence.beans.AbstractAttr;\n-import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n-\n-/**\n- * Send e-mail from workflow using Velocity for rendering e-mail body.\n- */\n-public class SendVelocityEmail extends AbstractSendEmail {\n-\n-    @Override\n-    protected void doExecute(final DelegateExecution execution)\n-            throws Exception {\n-\n-        final SyncopeUser user = (SyncopeUser) execution.getVariable(\n-                ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n-\n-//        final String emailKind = (String) execution.getVariable(\n-//                ActivitiUserWorkflowAdapter.EMAIL_KIND);\n-        final String emailKind = \"optin\";\n-\n-        final Map<String, Object> model = new HashMap<String, Object>();\n-        List<String> values;\n-        for (AbstractAttr attr : user.getAttributes()) {\n-            values = attr.getValuesAsStrings();\n-            model.put(attr.getSchema().getName(),\n-                    values.isEmpty()\n-                    ? \"\"\n-                    : (values.size() == 1\n-                    ? values.iterator().next() : values));\n-        }\n-\n-        final String smtpHost = confDAO.find(\"smtp.host\", \"\").getValue();\n-        final String from =\n-                confDAO.find(emailKind + \".email.from\", \"\").getValue();\n-        final String subject = confDAO.find(emailKind + \".email.subject\", \"\").\n-                getValue();\n-        final String to = user.getAttribute(\"email\") != null\n-                ? user.getAttribute(\"email\").getValuesAsStrings().\n-                iterator().next() : null;\n-\n-        VelocityEngine velocityEngine = CONTEXT.getBean(VelocityEngine.class);\n-\n-        String htmlBody;\n-        String txtBody;\n-        try {\n-            htmlBody =\n-                    VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,\n-                    \"mailTemplates/\" + emailKind + \".html.vm\",\n-                    model);\n-            txtBody =\n-                    VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,\n-                    \"mailTemplates/\" + emailKind + \".txt.vm\",\n-                    model);\n-        } catch (VelocityException e) {\n-            LOG.error(\"Could not get mail body\", e);\n-\n-            htmlBody = \"\";\n-            txtBody = \"\";\n-        }\n-\n-        if (StringUtils.isBlank(smtpHost) || StringUtils.isBlank(from)\n-                || StringUtils.isBlank(subject) || StringUtils.isBlank(to)\n-                || StringUtils.isBlank(htmlBody)\n-                || StringUtils.isBlank(txtBody)) {\n-\n-            LOG.error(\"Could not fetch all required information for \"\n-                    + \"sending the email:\\n\"\n-                    + smtpHost + \"\\n\"\n-                    + to + \"\\n\"\n-                    + from + \"\\n\"\n-                    + subject + \"\\n\"\n-                    + htmlBody + \"\\n\"\n-                    + txtBody + \"\\n\");\n-        } else {\n-            super.sendMail(smtpHost,\n-                    to,\n-                    from,\n-                    subject,\n-                    txtBody,\n-                    htmlBody);\n-        }\n-    }\n-}"},{"sha":"32433ecdea6366b26e7134ee1e3371a32bac46ee","filename":"core/src/main/java/org/syncope/core/workflow/activiti/Update.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FUpdate.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -16,7 +16,7 @@\n import org.activiti.engine.delegate.DelegateExecution;\n import org.syncope.client.mod.UserMod;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.persistence.propagation.PropagationByResource;\n+import org.syncope.core.propagation.PropagationByResource;\n import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n \n public class Update extends AbstractActivitiDelegate {"},{"sha":"4e6a37e3d46b0a3d1fa0f58282b95d6edef80182","filename":"core/src/main/resources/content.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -17,8 +17,7 @@\n     <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n     <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n     <SyncopeConf confKey=\"smtp.port\" confValue=\"25\"/>\n-    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@syncope-idm.org\"/>\n-    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n+    <SyncopeConf confKey=\"email.schema\" confValue=\"email\"/>\n     <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>\n     <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n \n@@ -86,6 +85,7 @@\n     <Entitlement name=\"POLICY_DELETE\"/>\n     <Entitlement name=\"WORKFLOW_DEF_READ\"/>\n     <Entitlement name=\"WORKFLOW_DEF_UPDATE\"/>\n+    <Entitlement name=\"WORKFLOW_TASK_LIST\"/> \n     <Entitlement name=\"WORKFLOW_FORM_LIST\"/>\n     <Entitlement name=\"WORKFLOW_FORM_READ\"/>\n     <Entitlement name=\"WORKFLOW_FORM_CLAIM\"/>"},{"sha":"96f914942993daa76b6a1a35b680de7d1c9d86f6","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -99,16 +99,6 @@\n     </bean>\n     <tx:annotation-driven/>\n \n-    <bean id=\"jexlEngine\" class=\"org.apache.commons.jexl2.JexlEngine\">\n-        <property name=\"cache\" value=\"512\"/>\n-        <property name=\"lenient\" value=\"true\"/>\n-        <property name=\"silent\" value=\"false\"/>\n-    </bean>\n-    <bean id=\"jexlUtil\" class=\"org.syncope.core.util.JexlUtil\"/>\n-\n-    <bean id=\"propagationManager\"\n-          class=\"org.syncope.core.persistence.propagation.PropagationManager\"/>\n-\n     <bean id=\"validator\"\n           class=\"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean\"/>\n </beans>"},{"sha":"39cec32e126ec76023ad5291324fbd0fd1f13a02","filename":"core/src/main/resources/schedulingContext.xml","status":"modified","additions":32,"deletions":5,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -36,6 +36,33 @@\n         </property>\n     </bean>\n \n+    <bean id=\"jpaInterceptor\" class=\"org.springframework.orm.jpa.JpaInterceptor\">\n+        <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n+    </bean>\n+\n+    <bean id=\"notificationJob\" class=\"org.syncope.core.scheduling.NotificationJob\" scope=\"prototype\"/>    \n+    <bean id=\"notificationJobProxy\" class=\"org.springframework.aop.framework.ProxyFactoryBean\" scope=\"prototype\">\n+        <property name=\"target\" ref=\"notificationJob\"/>\n+        <property name=\"proxyInterfaces\">\n+            <list>\n+                <value>org.syncope.core.scheduling.Job</value>    \n+            </list>    \n+        </property>\n+        <property name=\"interceptorNames\">\n+            <list>\n+                <value>jpaInterceptor</value>    \n+            </list>    \n+        </property>\n+    </bean> \n+    <bean id=\"notificationJobFactoryBean\" class=\"org.syncope.core.scheduling.AppContextMethodInvokingJobDetailFactoryBean\">\n+        <property name=\"targetBeanName\" value=\"notificationJobProxy\"/>\n+        <property name=\"targetMethod\" value=\"execute\"/>\n+    </bean>\n+    <bean id=\"notificationTrigger\" class=\"org.springframework.scheduling.quartz.CronTriggerBean\">\n+        <property name=\"jobDetail\" ref=\"notificationJobFactoryBean\"/>\n+        <property name=\"cronExpression\" value=\"0 0/2 * * * ?\"/>\n+    </bean>\n+    \n     <bean id=\"scheduler\"\n \t  class=\"org.springframework.scheduling.quartz.SchedulerFactoryBean\"\n           lazy-init=\"false\" depends-on=\"quartzDbInitializer\">\n@@ -59,10 +86,10 @@\n                 <prop key=\"org.quartz.scheduler.jmx.export\">true</prop>\n             </props>\n         </property>\n+        <property name=\"triggers\">\n+            <list>\n+                <ref bean=\"notificationTrigger\"/>\n+            </list>\n+        </property>\n     </bean>\n-\n-    <bean id=\"jpaInterceptor\" class=\"org.springframework.orm.jpa.JpaInterceptor\">\n-        <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n-    </bean>\n-\n </beans>"},{"sha":"06b66f62d57b2a32020b234fbf3019ae4935e74a","filename":"core/src/main/resources/syncopeContext.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -36,5 +36,17 @@\n \n     <context:component-scan base-package=\"org.syncope.core.init\"/>\n     <context:component-scan base-package=\"org.syncope.core.util\"/>\n+    \n+    <bean id=\"propagationManager\"\n+          class=\"org.syncope.core.propagation.PropagationManager\"/>\n \n+    <bean id=\"notificationManager\"\n+          class=\"org.syncope.core.notification.NotificationManager\"/>\n+          \n+    <bean id=\"jexlEngine\" class=\"org.apache.commons.jexl2.JexlEngine\">\n+        <property name=\"cache\" value=\"512\"/>\n+        <property name=\"lenient\" value=\"true\"/>\n+        <property name=\"silent\" value=\"false\"/>\n+    </bean>\n+    <bean id=\"jexlUtil\" class=\"org.syncope.core.util.JexlUtil\"/>\n </beans>"},{"sha":"1e36438ea61af9b4e2f4dffc6586771362fd776e","filename":"core/src/main/resources/userWorkflow.bpmn20.xml","status":"modified","additions":16,"deletions":24,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -60,65 +60,57 @@\n             <conditionExpression xsi:type=\"tFormalExpression\">${!approve}</conditionExpression>\n         </sequenceFlow>\n         \n-        <!-- Comment the following lines and uncomment the lines below in order\n-             to enable opt-in. -->\n+        <!-- Comment the following two lines, uncomment the lines below and change\n+             createApproval2Activate.targetRef to \"generateToken\" in order to enable opt-in. -->\n         <serviceTask id=\"activate\" name=\"Activate\" activiti:class=\"org.syncope.core.workflow.activiti.AutoActivate\"/>\n \n         <sequenceFlow id=\"flow4\" sourceRef=\"activate\" targetRef=\"active\"/>\n \n-        <!-- Uncomment the following lines and comment the above line in order\n-             to enable opt-in.\n-        <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"generateToken\"/>\n-        \n+        <!-- Uncomment the following lines and comment the above line in order to enable opt-in.        \n         <serviceTask id=\"generateToken\" name=\"Generate token\" activiti:class=\"org.syncope.core.workflow.activiti.GenerateToken\"/>\n         \n-        <sequenceFlow id=\"flow3\" sourceRef=\"generateToken\" targetRef=\"optinEmail\"/>\n-\n-        <serviceTask id=\"optinEmail\" name=\"Send opt-in e-mail\" activiti:class=\"org.syncope.core.workflow.activiti.SendVelocityEmail\"/>\n-\n-        <sequenceFlow id=\"flow4\" sourceRef=\"optinEmail\" targetRef=\"created\"/>\n+        <sequenceFlow id=\"flowN+1\" sourceRef=\"generateToken\" targetRef=\"Created\"/>\n \n         <userTask id=\"created\" name=\"Created\"/>\n \n-        <sequenceFlow id=\"flow5\" sourceRef=\"created\" targetRef=\"createdGw\"/>\n+        <sequenceFlow id=\"flowN+2\" sourceRef=\"created\" targetRef=\"createdGw\"/>\n \n         <exclusiveGateway id=\"createdGw\"/>\n         <sequenceFlow id=\"created2Activate\" sourceRef=\"createdGw\" targetRef=\"activate\">\n             <conditionExpression xsi:type=\"tFormalExpression\">\n-                <![CDATA[${action == 'activate' && syncopeUser.checkToken(token)}]]>\n+                <![CDATA[${task == 'activate' && syncopeUser.checkToken(token)}]]>\n             </conditionExpression>\n         </sequenceFlow>  \n         <sequenceFlow id=\"created2Created\" sourceRef=\"createdGw\" targetRef=\"created\">\n             <conditionExpression xsi:type=\"tFormalExpression\">\n-                <![CDATA[${action == 'activate' && !syncopeUser.checkToken(token)}]]>\n+                <![CDATA[${task == 'activate' && !syncopeUser.checkToken(token)}]]>\n             </conditionExpression>\n         </sequenceFlow>  \n         <sequenceFlow id=\"created2Delete\" sourceRef=\"createdGw\" targetRef=\"delete\">\n-            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'delete'}</conditionExpression>\n-        </sequenceFlow>--> \n+            <conditionExpression xsi:type=\"tFormalExpression\">${task == 'delete'}</conditionExpression>\n+        </sequenceFlow>\n         \n-        <!-- Activate an user -->\n-        <!--<scriptTask id=\"activate\" name=\"Activate\" scriptFormat=\"juel\">\n+        <scriptTask id=\"activate\" name=\"Activate\" scriptFormat=\"juel\">\n             <script>\n             syncopeUser.removeToken()    \n             </script>\n         </scriptTask>\n \n-        <sequenceFlow id=\"flow6\" sourceRef=\"activate\" targetRef=\"active\"/>-->\n+        <sequenceFlow id=\"flowN+3\" sourceRef=\"activate\" targetRef=\"active\"/>-->\n \n         <userTask id=\"active\" name=\"Active\"/>\n         \n         <sequenceFlow id=\"flow7\" sourceRef=\"active\" targetRef=\"activeGw\"/>\n \n         <exclusiveGateway id=\"activeGw\"/>\n         <sequenceFlow id=\"active2Update\" sourceRef=\"activeGw\" targetRef=\"update\">\n-            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'update'}</conditionExpression>\n+            <conditionExpression xsi:type=\"tFormalExpression\">${task == 'update'}</conditionExpression>\n         </sequenceFlow>  \n         <sequenceFlow id=\"active2Suspend\" sourceRef=\"activeGw\" targetRef=\"suspend\">\n-            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'suspend'}</conditionExpression>\n+            <conditionExpression xsi:type=\"tFormalExpression\">${task == 'suspend'}</conditionExpression>\n         </sequenceFlow> \n         <sequenceFlow id=\"active2Delete\" sourceRef=\"activeGw\" targetRef=\"delete\">\n-            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'delete'}</conditionExpression>\n+            <conditionExpression xsi:type=\"tFormalExpression\">${task == 'delete'}</conditionExpression>\n         </sequenceFlow>\n \n         <!-- Update an active user -->\n@@ -137,10 +129,10 @@\n \n         <exclusiveGateway id=\"suspendedGw\"/>\n         <sequenceFlow id=\"suspended2Reactivate\" sourceRef=\"suspendedGw\" targetRef=\"reactivate\">\n-            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'reactivate'}</conditionExpression>\n+            <conditionExpression xsi:type=\"tFormalExpression\">${task == 'reactivate'}</conditionExpression>\n         </sequenceFlow>\n         <sequenceFlow id=\"suspended2Delete\" sourceRef=\"suspendedGw\" targetRef=\"delete\">\n-            <conditionExpression xsi:type=\"tFormalExpression\">${action == 'delete'}</conditionExpression>\n+            <conditionExpression xsi:type=\"tFormalExpression\">${task == 'delete'}</conditionExpression>\n         </sequenceFlow>\n \n         <!-- Reactivate a suspended user -->"},{"sha":"4d9d4ea66cf6af1868f31614af62f6320558249d","filename":"core/src/main/webapp/syncopeClientError.jsp","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -12,7 +12,7 @@\n <%@page import=\"org.syncope.core.persistence.dao.MissingConfKeyException\"%>\n <%@page import=\"org.syncope.client.validation.SyncopeClientException\"%>\n <%@page import=\"org.syncope.client.validation.SyncopeClientCompositeErrorException\"%>\n-<%@page import=\"org.syncope.core.persistence.propagation.PropagationException\"%>\n+<%@page import=\"org.syncope.core.propagation.PropagationException\"%>\n <%@page import=\"org.syncope.core.workflow.WorkflowException\"%>\n <%@page import=\"org.syncope.types.SyncopeClientExceptionType\"%>\n <%@page import=\"org.syncope.client.validation.SyncopeClientErrorHandler\"%>"},{"sha":"1899ea336f70b4ea50f5a4331f61fba1274964ee","filename":"core/src/test/dev/java/org/syncope/core/dev/init/H2ConsoleContextListener.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fdev%2Fjava%2Forg%2Fsyncope%2Fcore%2Fdev%2Finit%2FH2ConsoleContextListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fdev%2Fjava%2Forg%2Fsyncope%2Fcore%2Fdev%2Finit%2FH2ConsoleContextListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fdev%2Fjava%2Forg%2Fsyncope%2Fcore%2Fdev%2Finit%2FH2ConsoleContextListener.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","previous_filename":"core/src/dev/java/org/syncope/core/dev/init/H2ConsoleContextListener.java"},{"sha":"0b380aaed425d8f480a8427197a0b92ee242763e","filename":"core/src/test/java/org/syncope/core/init/ConnInstanceLoaderTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -26,7 +26,7 @@\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n+import org.syncope.core.propagation.ConnectorFacadeProxy;\n import org.syncope.core.util.ApplicationContextManager;\n import org.syncope.core.util.ConnBundleManager;\n "},{"sha":"c352f553ed514385c0e733f2532616e69c55682c","filename":"core/src/test/java/org/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -36,7 +36,7 @@ public final void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n         // 53 real entitlements + 9 role entitlements\n         assertEquals(\"did not get expected number of entitlements \",\n-                67, list.size());\n+                68, list.size());\n     }\n \n     @Test"},{"sha":"5813ef4932b80ad3649261e5add43164cb403dc4","filename":"core/src/test/java/org/syncope/core/persistence/dao/NotificationTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -37,7 +37,7 @@ public class NotificationTest extends AbstractTest {\n \n     @Test\n     public void find() {\n-        Notification notification = notificationDAO.find(1L);\n+        Notification notification = notificationDAO.find(100L);\n         assertNotNull(notification);\n         assertNotNull(notification.getEvents());\n         assertFalse(notification.getEvents().isEmpty());\n@@ -122,7 +122,7 @@ public void saveWithException() {\n \n     @Test\n     public void delete() {\n-        notificationDAO.delete(1L);\n-        assertNull(notificationDAO.find(1L));\n+        notificationDAO.delete(100L);\n+        assertNull(notificationDAO.find(100L));\n     }\n }"},{"sha":"acb2475a5446501d5b62a22760694ae6f16b74ac","filename":"core/src/test/java/org/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -42,6 +42,14 @@ public class TaskTest extends AbstractTest {\n     @Autowired\n     private ResourceDAO resourceDAO;\n \n+    @Test\n+    public final void findWithoutExecs() {\n+        List<PropagationTask> tasks =\n+                taskDAO.findWithoutExecs(PropagationTask.class);\n+        assertNotNull(tasks);\n+        assertEquals(3, tasks.size());\n+    }\n+\n     @Test\n     public final void findAll() {\n         List<PropagationTask> plist = taskDAO.findAll(PropagationTask.class);"},{"sha":"8cefa004b8f8b89f51a11fe32917a30e29cf3a21","filename":"core/src/test/java/org/syncope/core/persistence/dao/UserSearchTest.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -42,12 +42,32 @@\n @Transactional\n public class UserSearchTest {\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n     @Autowired\n     private UserSearchDAO searchDAO;\n \n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n+    @Test\n+    public final void matches() {\n+        SyncopeUser user = userDAO.find(1L);\n+        assertNotNull(user);\n+\n+        MembershipCond membershipCond = new MembershipCond();\n+        membershipCond.setRoleId(5L);\n+\n+        assertFalse(searchDAO.matches(user,\n+                NodeCond.getLeafCond(membershipCond)));\n+\n+        membershipCond.setRoleId(1L);\n+\n+        assertTrue(searchDAO.matches(user,\n+                NodeCond.getLeafCond(membershipCond)));\n+    }\n+\n     @Test\n     public final void searchWithLikeCondition() {\n         AttributeCond fullnameLeafCond ="},{"sha":"8915265e07861078806ed7d49f5fdfc61a0546ae","filename":"core/src/test/java/org/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -25,14 +25,15 @@\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.types.SyncopeClientExceptionType;\n+import org.syncope.types.TraceLevel;\n \n public class NotificationTestITCase extends AbstractTest {\n \n     @Test\n     public void read() {\n         NotificationTO notificationTO = restTemplate.getForObject(\n                 BASE_URL + \"notification/read/{notificationId}.json\",\n-                NotificationTO.class, \"1\");\n+                NotificationTO.class, \"100\");\n \n         assertNotNull(notificationTO);\n     }\n@@ -52,6 +53,7 @@ public void list() {\n     @Test\n     public void create() {\n         NotificationTO notificationTO = new NotificationTO();\n+        notificationTO.setTraceLevel(TraceLevel.SUMMARY);\n         notificationTO.addEvent(\"create\");\n \n         AttributeCond fullnameLeafCond1 =\n@@ -91,7 +93,7 @@ public void create() {\n     public void update() {\n         NotificationTO notificationTO = restTemplate.getForObject(\n                 BASE_URL + \"notification/read/{notificationId}.json\",\n-                NotificationTO.class, \"1\");\n+                NotificationTO.class, \"100\");\n         assertNotNull(notificationTO);\n \n         notificationTO.setRecipients(\n@@ -124,13 +126,13 @@ public void update() {\n     @Test\n     public void delete() {\n         restTemplate.delete(\n-                BASE_URL + \"notification/delete/{notificationId}.json\", \"2\");\n+                BASE_URL + \"notification/delete/{notificationId}.json\", \"101\");\n \n         SyncopeClientException exception = null;\n         try {\n             restTemplate.getForObject(\n                     BASE_URL + \"notification/read/{notificationId}.json\",\n-                    NotificationTO.class, \"2\");\n+                    NotificationTO.class, \"101\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.NotFound);\n         }"},{"sha":"1f4a947f9d83cdb839b4ebb7dcb594285c71c3de","filename":"core/src/test/notifications/java/org/syncope/core/notification/NotificationTest.java","status":"added","additions":318,"deletions":0,"changes":318,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,318 @@\n+package org.syncope.core.notification;\n+\n+import static org.junit.Assert.*;\n+\n+import java.io.IOException;\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Properties;\n+import java.util.Random;\n+import javax.annotation.Resource;\n+import javax.mail.Flags.Flag;\n+import javax.mail.Folder;\n+import javax.mail.Message;\n+import javax.mail.Session;\n+import javax.mail.Store;\n+import org.apache.commons.lang.StringUtils;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.quartz.SchedulerException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.mock.web.MockHttpServletResponse;\n+import org.springframework.security.authentication.TestingAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.core.authority.GrantedAuthorityImpl;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.security.core.userdetails.User;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.client.search.MembershipCond;\n+import org.syncope.client.search.NodeCond;\n+import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.MembershipTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.core.persistence.beans.Entitlement;\n+import org.syncope.core.persistence.beans.Notification;\n+import org.syncope.core.persistence.beans.NotificationTask;\n+import org.syncope.core.persistence.beans.SyncopeConf;\n+import org.syncope.core.persistence.dao.ConfDAO;\n+import org.syncope.core.persistence.dao.EntitlementDAO;\n+import org.syncope.core.persistence.dao.NotificationDAO;\n+import org.syncope.core.persistence.dao.TaskDAO;\n+import org.syncope.core.rest.controller.TaskController;\n+import org.syncope.core.rest.controller.UserController;\n+import org.syncope.core.scheduling.NotificationJob;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = {\n+    \"classpath:syncopeContext.xml\",\n+    \"classpath:restContext.xml\",\n+    \"classpath:persistenceContext.xml\",\n+    \"classpath:schedulingContext.xml\",\n+    \"classpath:workflowContext.xml\"\n+})\n+@Transactional\n+public class NotificationTest {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(\n+            NotificationTest.class);\n+\n+    private static String smtpHost;\n+\n+    private static String pop3Host;\n+\n+    private static String mailAddress;\n+\n+    private static String mailPassword;\n+\n+    @Resource(name = \"adminUser\")\n+    private String adminUser;\n+\n+    @Autowired\n+    private EntitlementDAO entitlementDAO;\n+\n+    @Autowired\n+    private NotificationDAO notificationDAO;\n+\n+    @Autowired\n+    private TaskDAO taskDAO;\n+\n+    @Autowired\n+    private ConfDAO confDAO;\n+\n+    @Autowired\n+    private UserController userController;\n+\n+    @Autowired\n+    private TaskController taskController;\n+\n+    @Autowired\n+    private NotificationJob notificationJob;\n+\n+    @BeforeClass\n+    public static void loadProperties() {\n+        Properties props = new Properties();\n+\n+        try {\n+            props.load(NotificationTest.class.getResourceAsStream(\n+                    \"/test.properties\"));\n+        } catch (IOException e) {\n+            LOG.error(\"Could not load properties\", e);\n+            fail(\"Could not load test properties\");\n+        }\n+\n+        smtpHost = props.getProperty(\"smtp.host\");\n+        pop3Host = props.getProperty(\"pop3.host\");\n+        mailAddress = props.getProperty(\"mail.address\");\n+        mailPassword = props.getProperty(\"mail.password\");\n+        if (StringUtils.isBlank(mailPassword)) {\n+            throw new IllegalArgumentException(\n+                    \"Empty POP3 password: did you pass -Dmail.password=XXXX?\");\n+        }\n+    }\n+\n+    @Before\n+    public void setupSecurity() {\n+        List<GrantedAuthority> authorities =\n+                new ArrayList<GrantedAuthority>();\n+        for (Entitlement entitlement : entitlementDAO.findAll()) {\n+            authorities.add(\n+                    new GrantedAuthorityImpl(entitlement.getName()));\n+        }\n+\n+        UserDetails userDetails = new User(adminUser, \"FAKE_PASSWORD\",\n+                true, true, true, true, authorities);\n+        Authentication authentication = new TestingAuthenticationToken(\n+                userDetails, \"FAKE_PASSWORD\", authorities);\n+        SecurityContextHolder.getContext().setAuthentication(authentication);\n+    }\n+\n+    public static UserTO getSampleTO(final String email) {\n+        UserTO userTO = new UserTO();\n+        userTO.setPassword(\"password123\");\n+        userTO.setUsername(email);\n+\n+        AttributeTO fullnameTO = new AttributeTO();\n+        fullnameTO.setSchema(\"fullname\");\n+        fullnameTO.addValue(email);\n+        userTO.addAttribute(fullnameTO);\n+\n+        AttributeTO firstnameTO = new AttributeTO();\n+        firstnameTO.setSchema(\"firstname\");\n+        firstnameTO.addValue(email);\n+        userTO.addAttribute(firstnameTO);\n+\n+        AttributeTO surnameTO = new AttributeTO();\n+        surnameTO.setSchema(\"surname\");\n+        surnameTO.addValue(\"Surname\");\n+        userTO.addAttribute(surnameTO);\n+\n+        AttributeTO typeTO = new AttributeTO();\n+        typeTO.setSchema(\"type\");\n+        typeTO.addValue(\"a type\");\n+        userTO.addAttribute(typeTO);\n+\n+        AttributeTO userIdTO = new AttributeTO();\n+        userIdTO.setSchema(\"userId\");\n+        userIdTO.addValue(email);\n+        userTO.addAttribute(userIdTO);\n+\n+        AttributeTO emailTO = new AttributeTO();\n+        emailTO.setSchema(\"email\");\n+        emailTO.addValue(email);\n+        userTO.addAttribute(emailTO);\n+\n+        AttributeTO loginDateTO = new AttributeTO();\n+        loginDateTO.setSchema(\"loginDate\");\n+        DateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n+        loginDateTO.addValue(sdf.format(new Date()));\n+        userTO.addAttribute(loginDateTO);\n+\n+        // add a derived attribute\n+        AttributeTO cnTO = new AttributeTO();\n+        cnTO.setSchema(\"cn\");\n+        userTO.addDerivedAttribute(cnTO);\n+\n+        // add a virtual attribute\n+        AttributeTO virtualdata = new AttributeTO();\n+        virtualdata.setSchema(\"virtualdata\");\n+        virtualdata.setValues(Collections.singletonList(\"virtualvalue\"));\n+        userTO.addVirtualAttribute(virtualdata);\n+\n+        return userTO;\n+    }\n+\n+    private boolean verifyMail(final String sender, final String subject) {\n+        LOG.info(\"Waiting for notification to be sent...\");\n+        try {\n+            Thread.sleep(10000);\n+        } catch (InterruptedException e) {\n+        }\n+\n+        boolean found = false;\n+        try {\n+            Session session = Session.getDefaultInstance(\n+                    System.getProperties());\n+            Store store = session.getStore(\"pop3\");\n+            store.connect(pop3Host, mailAddress, mailPassword);\n+\n+            Folder inbox = store.getFolder(\"INBOX\");\n+            assertNotNull(inbox);\n+            inbox.open(Folder.READ_WRITE);\n+\n+            Message[] messages = inbox.getMessages();\n+            for (int i = 0; i < messages.length; i++) {\n+                if (sender.equals(messages[i].getFrom()[0].toString())\n+                        && subject.equals(messages[i].getSubject())) {\n+\n+                    found = true;\n+                    messages[i].setFlag(Flag.DELETED, true);\n+                }\n+            }\n+            inbox.close(true);\n+            store.close();\n+        } catch (Throwable t) {\n+            LOG.error(\"Unexpected exception\", t);\n+            fail(\"Unexpected exception while fetching e-mail\");\n+        }\n+\n+        return found;\n+    }\n+\n+    @Test\n+    public void notifyByMail() {\n+        // 1. create suitable notification for subsequent tests\n+        Notification notification = new Notification();\n+        notification.addEvent(\"create\");\n+\n+        MembershipCond membCond = new MembershipCond();\n+        membCond.setRoleId(7L);\n+        notification.setAbout(NodeCond.getLeafCond(membCond));\n+\n+        membCond = new MembershipCond();\n+        membCond.setRoleId(8L);\n+        notification.setRecipients(NodeCond.getLeafCond(membCond));\n+        notification.setSelfAsRecipient(true);\n+\n+        Random random = new Random(System.currentTimeMillis());\n+        String sender = \"syncopetest-\" + String.valueOf(random.nextLong())\n+                + \"@syncope-idm.org\";\n+        notification.setSender(sender);\n+        String subject = \"Test notification \" + random.nextLong();\n+        notification.setSubject(subject);\n+        notification.setTemplate(\"optin\");\n+\n+        Notification actual = notificationDAO.save(notification);\n+        assertNotNull(actual);\n+\n+        notificationDAO.flush();\n+\n+        // 2. use a real SMTP server\n+        try {\n+            SyncopeConf smtpHostConf = confDAO.find(\"smtp.host\");\n+            smtpHostConf.setValue(smtpHost);\n+            confDAO.save(smtpHostConf);\n+        } catch (Throwable t) {\n+            LOG.error(\"Unexpected exception\", t);\n+            fail(\"Unexpected exception while setting SMTP host\");\n+        }\n+\n+        confDAO.flush();\n+\n+        // 3. create user\n+        UserTO userTO = getSampleTO(mailAddress);\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(7);\n+        userTO.addMembership(membershipTO);\n+\n+        try {\n+            userController.create(new MockHttpServletResponse(), userTO);\n+        } catch (Throwable t) {\n+            LOG.error(\"Unexpected exception\", t);\n+            fail(\"Unexpected exception while creating\");\n+        }\n+\n+        // 4. force Quartz job execution and verify e-mail\n+        try {\n+            notificationJob.execute(null);\n+        } catch (SchedulerException e) {\n+            LOG.error(\"Unexpected exception\", e);\n+            fail(\"Unexpected exception while triggering notification job\");\n+        }\n+\n+        assertTrue(verifyMail(sender, subject));\n+\n+        List<NotificationTask> tasks = taskDAO.findAll(NotificationTask.class);\n+        Long taskId = null;\n+        for (NotificationTask task : tasks) {\n+            if (sender.equals(task.getSender())) {\n+                taskId = task.getId();\n+            }\n+        }\n+        assertNotNull(taskId);\n+\n+        // 5. execute Notification task and verify e-mail\n+        try {\n+            taskController.execute(taskId, false);\n+        } catch (Throwable t) {\n+            LOG.error(\"Unexpected exception\", t);\n+            fail(\"Unexpected exception while executing notification task\");\n+        }\n+\n+        assertTrue(verifyMail(sender, subject));\n+    }\n+}\n\\ No newline at end of file"},{"sha":"5cab65af22a4ab94befd5646b39a199478697120","filename":"core/src/test/notifications/resources/test.properties","status":"added","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fnotifications%2Fresources%2Ftest.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fnotifications%2Fresources%2Ftest.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fnotifications%2Fresources%2Ftest.properties?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -0,0 +1,4 @@\n+smtp.host=smtp.ngi.it\n+pop3.host=mail.syncope-idm.org\n+mail.address=test@syncope-idm.org\n+mail.password=${mail.password}\n\\ No newline at end of file"},{"sha":"f3ac1d4ca43df613a2a94b7de5ea66571068b4a9","filename":"core/src/test/resources/content.xml","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -17,8 +17,7 @@\n     <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n     <SyncopeConf confKey=\"smtp.host\" confValue=\"not-existing\"/>\n     <SyncopeConf confKey=\"smtp.port\" confValue=\"25\"/>\n-    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@syncope-idm.org\"/>\n-    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n+    <SyncopeConf confKey=\"email.schema\" confValue=\"email\"/>\n     <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>\n     <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n \n@@ -478,6 +477,7 @@\n     <Entitlement name=\"POLICY_DELETE\"/>\n     <Entitlement name=\"WORKFLOW_DEF_READ\"/>\n     <Entitlement name=\"WORKFLOW_DEF_UPDATE\"/>\n+    <Entitlement name=\"WORKFLOW_TASK_LIST\"/> \n     <Entitlement name=\"WORKFLOW_FORM_LIST\"/>\n     <Entitlement name=\"WORKFLOW_FORM_READ\"/>\n     <Entitlement name=\"WORKFLOW_FORM_CLAIM\"/>\n@@ -513,14 +513,14 @@\n     <SyncopeRole_Entitlement entitlements_name=\"ROLE_LIST\" roles_id=\"8\"/>\n     <SyncopeRole_Entitlement entitlements_name=\"WORKFLOW_FORM_CLAIM\" roles_id=\"8\"/>\n     \n-    <Notification id=\"1\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\"\n+    <Notification id=\"100\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n                   xmlAbout=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22leftNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25o%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+id%3D%22AttributeCond%24Type0%22+class%3D%22org.syncope.client.search.AttributeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++++%3Cstring%3ELIKE%3C%2Fstring%3E+%0A+++++++%3C%2Fobject%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+id%3D%22NodeCond%24Type0%22+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22rightNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25i%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+idref%3D%22AttributeCond%24Type0%22%2F%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+idref%3D%22NodeCond%24Type0%22%2F%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3EAND%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22leftNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25o%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+id%3D%22AttributeCond%24Type0%22+class%3D%22org.syncope.client.search.AttributeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++++%3Cstring%3ELIKE%3C%2Fstring%3E+%0A+++++++%3C%2Fobject%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+id%3D%22NodeCond%24Type0%22+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22rightNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25i%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+idref%3D%22AttributeCond%24Type0%22%2F%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+idref%3D%22NodeCond%24Type0%22%2F%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3EAND%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"\n                   xmlRecipients=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22membershipCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.MembershipCond%22%3E+%0A++++%3Cvoid+property%3D%22roleId%22%3E+%0A+++++%3Clong%3E7%3C%2Flong%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n-    <Notification id=\"2\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\"\n+    <Notification id=\"101\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n                   xmlAbout=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22leftNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25o%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+id%3D%22AttributeCond%24Type0%22+class%3D%22org.syncope.client.search.AttributeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++++%3Cstring%3ELIKE%3C%2Fstring%3E+%0A+++++++%3C%2Fobject%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+id%3D%22NodeCond%24Type0%22+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22rightNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25i%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+idref%3D%22AttributeCond%24Type0%22%2F%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+idref%3D%22NodeCond%24Type0%22%2F%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3EAND%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22leftNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25o%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+id%3D%22AttributeCond%24Type0%22+class%3D%22org.syncope.client.search.AttributeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++++%3Cstring%3ELIKE%3C%2Fstring%3E+%0A+++++++%3C%2Fobject%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+id%3D%22NodeCond%24Type0%22+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22rightNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25i%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+idref%3D%22AttributeCond%24Type0%22%2F%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+idref%3D%22NodeCond%24Type0%22%2F%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3EAND%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"\n                   xmlRecipients=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22membershipCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.MembershipCond%22%3E+%0A++++%3Cvoid+property%3D%22roleId%22%3E+%0A+++++%3Clong%3E7%3C%2Flong%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n-    <Notification_events Notification_id=\"1\" events=\"unexisting1\"/>\n-    <Notification_events Notification_id=\"1\" events=\"unexisting2\"/>\n-    <Notification_events Notification_id=\"2\" events=\"unexisting1\"/>\n-    <Notification_events Notification_id=\"2\" events=\"unexisting2\"/>\n+    <Notification_events Notification_id=\"100\" events=\"unexisting1\"/>\n+    <Notification_events Notification_id=\"100\" events=\"unexisting2\"/>\n+    <Notification_events Notification_id=\"101\" events=\"unexisting1\"/>\n+    <Notification_events Notification_id=\"101\" events=\"unexisting2\"/>\n </dataset>"},{"sha":"c0c1a91b98c25248ac4a69a04b8758d0f51477cc","filename":"pom.xml","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8d5ecfd500ffca1bbc333add9edd78fa0c696eea/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=8d5ecfd500ffca1bbc333add9edd78fa0c696eea","patch":"@@ -109,8 +109,8 @@\n \n         <reflections.version>0.9.5</reflections.version>\n \n-        <logback.version>0.9.30</logback.version>\n-        <slf4j.version>1.6.3</slf4j.version>\n+        <logback.version>1.0.0</logback.version>\n+        <slf4j.version>1.6.4</slf4j.version>\n \n         <junit.version>4.9</junit.version>\n         <selenium-java-client-driver.version>1.0.2</selenium-java-client-driver.version>\n@@ -520,7 +520,7 @@\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-surefire-plugin</artifactId>\n-                    <version>2.9</version>\n+                    <version>2.10</version>\n                     <configuration>\n                         <redirectTestOutputToFile>true</redirectTestOutputToFile>\n                     </configuration>\n@@ -533,7 +533,7 @@\n                 <plugin>\n                     <groupId>org.codehaus.mojo</groupId>\n                     <artifactId>sql-maven-plugin</artifactId>\n-                    <version>1.4</version>\n+                    <version>1.5</version>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.codehaus.mojo</groupId>\n@@ -548,7 +548,7 @@\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-failsafe-plugin</artifactId>\n-                    <version>2.9</version>\n+                    <version>2.10</version>\n                     <executions>\n                         <execution>\n                             <goals>\n@@ -586,7 +586,7 @@\n                 <plugin>\n                     <groupId>org.zeroturnaround</groupId>\n                     <artifactId>jrebel-maven-plugin</artifactId>\n-                    <version>1.0.8</version>\n+                    <version>1.1.0</version>\n                 </plugin>\n             </plugins>\n         </pluginManagement>"}]}