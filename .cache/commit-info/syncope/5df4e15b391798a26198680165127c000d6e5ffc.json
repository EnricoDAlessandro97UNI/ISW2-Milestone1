{"sha":"5df4e15b391798a26198680165127c000d6e5ffc","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVkZjRlMTViMzkxNzk4YTI2MTk4NjgwMTY1MTI3YzAwMGQ2ZTVmZmM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-31T14:14:51Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-31T14:14:51Z"},"message":"(Fixes #36)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246452 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"aec9f1cf470c44ab7095a0e98fdb4af24380a853","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/aec9f1cf470c44ab7095a0e98fdb4af24380a853"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5df4e15b391798a26198680165127c000d6e5ffc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5df4e15b391798a26198680165127c000d6e5ffc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5df4e15b391798a26198680165127c000d6e5ffc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5df4e15b391798a26198680165127c000d6e5ffc/comments","author":null,"committer":null,"parents":[{"sha":"ab7dd53e542c8538649b2d94f074257e1610b3e3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ab7dd53e542c8538649b2d94f074257e1610b3e3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ab7dd53e542c8538649b2d94f074257e1610b3e3"}],"stats":{"total":566,"additions":436,"deletions":130},"files":[{"sha":"4d1e496f53a596230b7d5b655d2704eee5520689","filename":"client/pom.xml","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -52,4 +52,17 @@\n         </dependency>\n         \n     </dependencies>\n+\n+    <reporting>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <configuration>\n+                    <configLocation>${project.parent.basedir}/syncope_checks.xml</configLocation>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </reporting>\n+        \n </project>"},{"sha":"3532810ab2f0532565d0c628ab55f6680102f2a3","filename":"client/src/main/java/org/syncope/client/to/AbstractAttributableTO.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -20,10 +20,10 @@\n \n public abstract class AbstractAttributableTO extends AbstractBaseBean {\n \n-    protected long id;\n-    protected Set<AttributeTO> attributes;\n-    protected Set<AttributeTO> derivedAttributes;\n-    protected Set<String> resources;\n+    private long id;\n+    private Set<AttributeTO> attributes;\n+    private Set<AttributeTO> derivedAttributes;\n+    private Set<String> resources;\n \n     protected AbstractAttributableTO() {\n         attributes = new HashSet<AttributeTO>();\n@@ -35,55 +35,55 @@ public long getId() {\n         return id;\n     }\n \n-    public void setId(long id) {\n+    public void setId(final long id) {\n         this.id = id;\n     }\n \n-    public boolean addAttribute(AttributeTO attribute) {\n+    public boolean addAttribute(final AttributeTO attribute) {\n         return attributes.add(attribute);\n     }\n \n-    public boolean removeAttribute(AttributeTO attribute) {\n+    public boolean removeAttribute(final AttributeTO attribute) {\n         return attributes.remove(attribute);\n     }\n \n     public Set<AttributeTO> getAttributes() {\n         return attributes;\n     }\n \n-    public void setAttributes(Set<AttributeTO> attributes) {\n+    public void setAttributes(final Set<AttributeTO> attributes) {\n         this.attributes = attributes;\n     }\n \n-    public boolean addDerivedAttribute(AttributeTO derivedAttribute) {\n+    public boolean addDerivedAttribute(final AttributeTO derivedAttribute) {\n         return derivedAttributes.add(derivedAttribute);\n     }\n \n-    public boolean removeDerivedAttribute(AttributeTO derivedAttribute) {\n+    public boolean removeDerivedAttribute(final AttributeTO derivedAttribute) {\n         return derivedAttributes.remove(derivedAttribute);\n     }\n \n     public Set<AttributeTO> getDerivedAttributes() {\n         return derivedAttributes;\n     }\n \n-    public void setDerivedAttributes(Set<AttributeTO> derivedAttributes) {\n+    public void setDerivedAttributes(final Set<AttributeTO> derivedAttributes) {\n         this.derivedAttributes = derivedAttributes;\n     }\n \n-    public boolean addResource(String resource) {\n+    public boolean addResource(final String resource) {\n         return resources.add(resource);\n     }\n \n-    public boolean removeResource(String resource) {\n+    public boolean removeResource(final String resource) {\n         return resources.remove(resource);\n     }\n \n     public Set<String> getResources() {\n         return resources;\n     }\n \n-    public void setResources(Set<String> resources) {\n+    public void setResources(final Set<String> resources) {\n         this.resources = resources;\n     }\n }"},{"sha":"47f328dc3a7338ec1de506bbe06c0636aabab6ed","filename":"client/src/main/java/org/syncope/client/to/AttributeTO.java","status":"modified","additions":40,"deletions":6,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -18,36 +18,70 @@\n import java.util.Set;\n import org.syncope.client.AbstractBaseBean;\n \n+/**\n+ * Transfer Object for attributes.\n+ */\n public class AttributeTO extends AbstractBaseBean {\n \n+    /**\n+     * Name of the schema that this attribute is referring to.\n+     */\n     private String schema;\n+    /**\n+     * Set of (string) values of this attribute.\n+     */\n     private Set<String> values;\n \n+    /**\n+     * Default constructor.\n+     */\n     public AttributeTO() {\n+        super();\n         values = new HashSet<String>();\n     }\n \n+    /**\n+     * @return the name of the schema that this attribute is referring to\n+     */\n     public String getSchema() {\n         return schema;\n     }\n \n-    public void setSchema(String schema) {\n+    /**\n+     * @param schema name to be set\n+     */\n+    public void setSchema(final String schema) {\n         this.schema = schema;\n+\n     }\n \n-    public boolean addValue(String value) {\n-        return values.add(value);\n+    /**\n+     * @param value an attribute value to be added\n+     * @return wether the operation succeeded or not\n+     */\n+    public boolean addValue(final String value) {\n+        return value == null ? false : values.add(value);\n     }\n \n-    public boolean removeValue(String value) {\n-        return values.remove(value);\n+    /**\n+     * @param value an attribute value to be removed\n+     * @return wether the operation succeeded or not\n+     */\n+    public boolean removeValue(final String value) {\n+        return value == null ? false : values.remove(value);\n     }\n \n+    /**\n+     * @return attribute values as strings\n+     */\n     public Set<String> getValues() {\n         return values;\n     }\n \n-    public void setValues(Set<String> values) {\n+    /**\n+     * @param values set of (string) values\n+     */\n+    public void setValues(final Set<String> values) {\n         this.values = values;\n     }\n }"},{"sha":"9224331e73e3b2884da420a36e780262c03ea362","filename":"client/src/main/java/org/syncope/client/to/RoleTO.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -14,50 +14,44 @@\n  */\n package org.syncope.client.to;\n \n-import java.util.HashSet;\n-\n public class RoleTO extends AbstractAttributableTO {\n \n     private String name;\n     private long parent;\n     private boolean inheritAttributes;\n     private boolean inheritDerivedAttributes;\n \n-    public RoleTO() {\n-        super();\n-\n-        resources = new HashSet<String>();\n-    }\n-\n     public String getName() {\n         return name;\n     }\n \n-    public void setName(String name) {\n+    public void setName(final String name) {\n         this.name = name;\n     }\n \n     public long getParent() {\n         return parent;\n     }\n \n-    public void setParent(long parent) {\n+    public void setParent(final long parent) {\n         this.parent = parent;\n     }\n \n     public boolean isInheritAttributes() {\n         return inheritAttributes;\n     }\n \n-    public void setInheritAttributes(boolean inheritAttributes) {\n+    public void setInheritAttributes(final boolean inheritAttributes) {\n         this.inheritAttributes = inheritAttributes;\n     }\n \n     public boolean isInheritDerivedAttributes() {\n         return inheritDerivedAttributes;\n     }\n \n-    public void setInheritDerivedAttributes(boolean inheritDerivedAttributes) {\n+    public void setInheritDerivedAttributes(\n+            final boolean inheritDerivedAttributes) {\n+        \n         this.inheritDerivedAttributes = inheritDerivedAttributes;\n     }\n }"},{"sha":"aefbb3d404d2c548c85b5c4b575d6172dc82ba61","filename":"console/pom.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -120,4 +120,16 @@\n         </resources>\n     </build>\n \n+    <reporting>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <configuration>\n+                    <configLocation>${project.parent.basedir}/syncope_checks.xml</configLocation>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </reporting>\n+\n </project>\n\\ No newline at end of file"},{"sha":"4592268d0a2af27745c71e49f0f09bf32b2a3fea","filename":"core/pom.xml","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -516,4 +516,17 @@\n             </testResource>\n         </testResources>\n     </build>\n+\n+    <reporting>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <configuration>\n+                    <configLocation>${project.parent.basedir}/syncope_checks.xml</configLocation>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </reporting>\n+    \n </project>"},{"sha":"9304bcb3a96e1e5e5cb7a7a2a8f24da03010065b","filename":"core/src/main/java/org/syncope/core/persistence/DefaultContentLoader.java","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -37,6 +37,9 @@\n import org.springframework.web.context.support.WebApplicationContextUtils;\n import org.syncope.core.persistence.beans.SyncopeConfiguration;\n \n+/**\n+ * Load default content in the database.\n+ */\n public class DefaultContentLoader implements ServletContextListener {\n \n     private static final Logger log = LoggerFactory.getLogger(\n@@ -50,7 +53,7 @@ public class DefaultContentLoader implements ServletContextListener {\n      * @param sce\n      */\n     @Override\n-    public void contextInitialized(ServletContextEvent sce) {\n+    public void contextInitialized(final ServletContextEvent sce) {\n         WebApplicationContext springContext =\n                 WebApplicationContextUtils.getWebApplicationContext(\n                 sce.getServletContext());\n@@ -65,7 +68,8 @@ public void contextInitialized(ServletContextEvent sce) {\n         try {\n             InputStream dbPropsStream =\n                     sce.getServletContext().getResourceAsStream(\n-                    \"WEB-INF/classes/org/syncope/core/persistence/db.properties\");\n+                    \"WEB-INF/classes/\"\n+                    + \"org/syncope/core/persistence/db.properties\");\n             Properties dbProps = new Properties();\n             dbProps.load(dbPropsStream);\n             dbSchema = dbProps.getProperty(\"database.schema\");\n@@ -89,12 +93,14 @@ public void contextInitialized(ServletContextEvent sce) {\n                     ResultSet.TYPE_SCROLL_SENSITIVE,\n                     ResultSet.CONCUR_READ_ONLY);\n \n-            resultSet = statement.executeQuery(\"SELECT * FROM \" + SyncopeConfiguration.class.getSimpleName());\n+            resultSet = statement.executeQuery(\"SELECT * FROM \"\n+                    + SyncopeConfiguration.class.getSimpleName());\n             resultSet.last();\n \n             existingData = resultSet.getRow() > 0;\n         } catch (SQLException e) {\n-            log.error(\"Could not access to table \" + SyncopeConfiguration.class.getSimpleName(), e);\n+            log.error(\"Could not access to table \"\n+                    + SyncopeConfiguration.class.getSimpleName(), e);\n \n             // Setting this to true make nothing to be done below\n             existingData = true;\n@@ -103,6 +109,7 @@ public void contextInitialized(ServletContextEvent sce) {\n                 resultSet.close();\n                 statement.close();\n             } catch (SQLException e) {\n+                log.error(\"While closing SQL connection\", e);\n             }\n         }\n         try {\n@@ -137,6 +144,6 @@ public void contextInitialized(ServletContextEvent sce) {\n     }\n \n     @Override\n-    public void contextDestroyed(ServletContextEvent sce) {\n+    public void contextDestroyed(final ServletContextEvent sce) {\n     }\n }"},{"sha":"515c001d8596f4b77cccdee3f5db7b9161c46425","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractBaseBean.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -31,7 +31,10 @@ public abstract class AbstractBaseBean implements Serializable {\n     protected static final Logger log = LoggerFactory.getLogger(\n             AbstractBaseBean.class);\n \n-    protected String[] getExcludeFields() {\n+    /**\n+     * @return fields to be excluded when computing equals() or hashcode()\n+     */\n+    private String[] getExcludeFields() {\n         Set<String> excludeFields = new HashSet<String>();\n \n         PropertyDescriptor[] propertyDescriptors =\n@@ -42,7 +45,7 @@ protected String[] getExcludeFields() {\n                     Collections.EMPTY_SET)\n                     || propertyDescriptors[i].getPropertyType().isInstance(\n                     Collections.EMPTY_LIST)) {\n-                \n+\n                 excludeFields.add(propertyDescriptors[i].getName());\n             }\n         }"},{"sha":"13bce10d77c6446212fb7aa372928ff236e5c257","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":59,"deletions":63,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -59,31 +59,22 @@ public abstract class AbstractAttributableDataBinder {\n \n     protected static final Logger log = LoggerFactory.getLogger(\n             AbstractAttributableDataBinder.class);\n-\n     @Autowired\n     protected SyncopeRoleDAO syncopeRoleDAO;\n-\n     @Autowired\n     protected SchemaDAO schemaDAO;\n-\n     @Autowired\n     protected DerivedSchemaDAO derivedSchemaDAO;\n-\n     @Autowired\n     protected AttributeDAO attributeDAO;\n-\n     @Autowired\n     protected DerivedAttributeDAO derivedAttributeDAO;\n-\n     @Autowired\n     protected AttributeValueDAO attributeValueDAO;\n-\n     @Autowired\n     protected SyncopeUserDAO syncopeUserDAO;\n-\n     @Autowired\n     protected ResourceDAO resourceDAO;\n-\n     @Autowired\n     protected MembershipDAO membershipDAO;\n \n@@ -99,12 +90,12 @@ private <T extends AbstractSchema> AbstractSchema getSchema(\n                 log.debug(\"Ignoring invalid schema \" + schemaName);\n             }\n         } else if (schema.isVirtual()) {\n-                schema = null;\n+            schema = null;\n \n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Ignoring virtual schema \" + schemaName);\n-                }\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Ignoring virtual schema \" + schemaName);\n             }\n+        }\n \n         return schema;\n     }\n@@ -116,8 +107,8 @@ private <T extends AbstractDerivedSchema> AbstractDerivedSchema getDerivedSchema\n \n         if (derivedSchema == null) {\n             if (log.isDebugEnabled()) {\n-                log.debug(\"Ignoring invalid derivedschema \" +\n-                        derivedSchemaName);\n+                log.debug(\"Ignoring invalid derivedschema \"\n+                        + derivedSchemaName);\n             }\n         }\n \n@@ -154,16 +145,23 @@ private void fillAttribute(Set<String> values,\n                 values.iterator().next()));\n \n         for (String value : valuesProvided) {\n-            attributeValue = attributableUtil.newAttributeValue();\n+            if (value == null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Null value for \" + schema.getName()\n+                            + \", ignoring\");\n+                }\n+            } else {\n+                attributeValue = attributableUtil.newAttributeValue();\n \n-            try {\n-                attributeValue = attribute.addValue(value,\n-                        attributeValue);\n-            } catch (ValidationException e) {\n-                log.error(\"Invalid value for attribute \" + schema.getName() +\n-                        \": \" + value, e);\n+                try {\n+                    attributeValue = attribute.addValue(value,\n+                            attributeValue);\n+                } catch (ValidationException e) {\n+                    log.error(\"Invalid value for attribute \" + schema.getName()\n+                            + \": \" + value, e);\n \n-                invalidValues.addElement(value);\n+                    invalidValues.addElement(value);\n+                }\n             }\n         }\n     }\n@@ -180,23 +178,23 @@ private <T extends AbstractSchema> SyncopeClientException checkMandatory(\n         Set<TargetResource> resources = new HashSet<TargetResource>();\n         resources.addAll(attributable.getTargetResources());\n         resources.addAll(attributable.getInheritedTargetResources());\n-        \n+\n         if (log.isDebugEnabled()) {\n-            log.debug(\"Check mandatory constraint among resources \" +\n-                    resources);\n+            log.debug(\"Check mandatory constraint among resources \"\n+                    + resources);\n         }\n \n         // Check if there is some mandatory schema defined for which no value\n         // has been provided\n         List<T> allSchemas = schemaDAO.findAll(referenceSchema);\n-        \n+\n         for (T schema : allSchemas) {\n-            if (attributable.getAttribute(schema.getName()) == null &&\n-                    (schema.isMandatory() ||\n-                    schemaDAO.isMandatoryOnResource(schema, resources))) {\n+            if (attributable.getAttribute(schema.getName()) == null\n+                    && (schema.isMandatory()\n+                    || schemaDAO.isMandatoryOnResource(schema, resources))) {\n \n-                log.error(\"Mandatory schema \" + schema.getName() +\n-                        \" not provided with values\");\n+                log.error(\"Mandatory schema \" + schema.getName()\n+                        + \" not provided with values\");\n \n                 requiredValuesMissing.addElement(schema.getName());\n             }\n@@ -242,8 +240,8 @@ protected ResourceOperations fill(\n                 attribute = attributable.getAttribute(schema.getName());\n                 if (attribute == null) {\n                     if (log.isDebugEnabled()) {\n-                        log.debug(\"No attribute found for schema \" +\n-                                schema.getName());\n+                        log.debug(\"No attribute found for schema \"\n+                                + schema.getName());\n                     }\n                 } else {\n                     attributable.removeAttribute(attribute);\n@@ -337,8 +335,8 @@ protected ResourceOperations fill(\n                         derivedSchema.getName());\n                 if (derivedAttribute == null) {\n                     if (log.isDebugEnabled()) {\n-                        log.debug(\"No derived attribute found for schema \" +\n-                                derivedSchema.getName());\n+                        log.debug(\"No derived attribute found for schema \"\n+                                + derivedSchema.getName());\n                     }\n                 } else {\n                     derivedAttributeDAO.delete(derivedAttribute);\n@@ -430,20 +428,25 @@ protected AbstractAttributable fill(AbstractAttributable attributable,\n         AbstractAttribute attribute = null;\n         AbstractAttributeValue attributeValue = null;\n         for (AttributeTO attributeTO : attributableTO.getAttributes()) {\n-            schema = getSchema(attributeTO.getSchema(),\n-                    attributableUtil.getSchemaClass());\n+            // Only consider attributeTO with values\n+            if (attributeTO.getValues() != null\n+                    && !attributeTO.getValues().isEmpty()) {\n \n-            if (schema != null) {\n-                attribute = attributableUtil.newAttribute();\n-                attribute.setSchema(schema);\n+                schema = getSchema(attributeTO.getSchema(),\n+                        attributableUtil.getSchemaClass());\n \n-                fillAttribute(attributeTO.getValues(),\n-                        attributableUtil, schema, attribute,\n-                        attributeValue, invalidValues);\n+                if (schema != null) {\n+                    attribute = attributableUtil.newAttribute();\n+                    attribute.setSchema(schema);\n \n-                if (!attribute.getAttributeValues().isEmpty()) {\n-                    attributable.addAttribute(attribute);\n-                    attribute.setOwner(attributable);\n+                    fillAttribute(attributeTO.getValues(),\n+                            attributableUtil, schema, attribute,\n+                            attributeValue, invalidValues);\n+\n+                    if (!attribute.getAttributeValues().isEmpty()) {\n+                        attributable.addAttribute(attribute);\n+                        attribute.setOwner(attributable);\n+                    }\n                 }\n             }\n         }\n@@ -461,18 +464,12 @@ protected AbstractAttributable fill(AbstractAttributable attributable,\n         // 2. derived attributes\n         AbstractDerivedSchema derivedSchema = null;\n         AbstractDerivedAttribute derivedAttribute = null;\n-        for (AttributeTO attributeTO :\n-                attributableTO.getDerivedAttributes()) {\n+        for (AttributeTO attributeTO : attributableTO.getDerivedAttributes()) {\n \n-            derivedSchema = derivedSchemaDAO.find(attributeTO.getSchema(),\n+            derivedSchema = getDerivedSchema(attributeTO.getSchema(),\n                     attributableUtil.getDerivedSchemaClass());\n \n-            if (derivedSchema == null) {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Ignoring invalid derivedschema \" +\n-                            attributeTO.getSchema());\n-                }\n-            } else {\n+            if (derivedSchema != null) {\n                 derivedAttribute = attributableUtil.newDerivedAttribute();\n                 derivedAttribute.setDerivedSchema(derivedSchema);\n                 derivedAttribute.setOwner(attributable);\n@@ -551,15 +548,14 @@ public void checkUniqueness(AbstractAttributable attributable)\n             for (AbstractAttributeValue attributeValue :\n                     attribute.getAttributeValues()) {\n \n-                if (attribute.getSchema().isUniquevalue() &&\n-                        attributeValueDAO.nonUniqueAttributeValue(\n+                if (attribute.getSchema().isUniquevalue()\n+                        && attributeValueDAO.nonUniqueAttributeValue(\n                         attributeValue)) {\n \n-                    log.error(\n-                            \"Unique value schema \" +\n-                            attribute.getSchema().getName() +\n-                            \" with no unique value: \" +\n-                            attributeValue.getValueAsString());\n+                    log.error(\"Unique value schema \"\n+                            + attribute.getSchema().getName()\n+                            + \" with no unique value: \"\n+                            + attributeValue.getValueAsString());\n \n                     invalidUniques.addElement(attribute.getSchema().getName());\n                 }"},{"sha":"3179906a78520b36efe188f37865c8b99f64844d","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":39,"deletions":18,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -41,7 +41,7 @@\n \n public class UserTestITCase extends AbstractTestITCase {\n \n-    private UserTO getSampleTO(String email) {\n+    private UserTO getSampleTO(final String email) {\n         UserTO userTO = new UserTO();\n         userTO.setPassword(\"password\");\n \n@@ -81,7 +81,7 @@ private UserTO getSampleTO(String email) {\n \n     @Test\n     @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n-    public void createWithException() {\n+    public final void createWithException() {\n         AttributeTO attributeTO = new AttributeTO();\n         attributeTO.setSchema(\"userId\");\n         attributeTO.addValue(\"userId@nowhere.org\");\n@@ -94,17 +94,32 @@ public void createWithException() {\n     }\n \n     @Test\n-    public void create() {\n+    public final void create() {\n         UserTO userTO = getSampleTO(\"a.b@c.com\");\n \n+        // add a membership\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRole(8L);\n+        userTO.addMembership(membershipTO);\n+\n+        // add an attribute with no values: must be ignored\n+        AttributeTO nullValueAttributeTO = new AttributeTO();\n+        nullValueAttributeTO.setSchema(\"subscriptionDate\");\n+        nullValueAttributeTO.setValues(null);\n+        membershipTO.addAttribute(nullValueAttributeTO);\n+\n+        // add an attribute with a non-existing schema: must be ignored\n         AttributeTO attrWithInvalidSchemaTO = new AttributeTO();\n         attrWithInvalidSchemaTO.setSchema(\"invalid schema\");\n         attrWithInvalidSchemaTO.addValue(\"a value\");\n         userTO.addAttribute(attrWithInvalidSchemaTO);\n \n-        MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRole(8L);\n-        userTO.addMembership(membershipTO);\n+        // add an attribute with null value: must be ignored\n+        nullValueAttributeTO = new AttributeTO();\n+        nullValueAttributeTO.setSchema(\"activationDate\");\n+        //nullValueAttributeTO.setValues(null);\n+        nullValueAttributeTO.addValue(null);\n+        userTO.addAttribute(nullValueAttributeTO);\n \n         // 1. create user\n         UserTO newUserTO = restTemplate.postForObject(\n@@ -115,7 +130,8 @@ public void create() {\n         assertFalse(newUserTO.getAttributes().contains(\n                 attrWithInvalidSchemaTO));\n \n-        WorkflowActionsTO workflowActions = restTemplate.getForObject(BASE_URL + \"user/actions/{userId}\", WorkflowActionsTO.class,\n+        WorkflowActionsTO workflowActions = restTemplate.getForObject(\n+                BASE_URL + \"user/actions/{userId}\", WorkflowActionsTO.class,\n                 newUserTO.getId());\n         assertTrue(workflowActions.getActions().equals(\n                 Collections.singleton(Constants.ACTION_ACTIVATE)));\n@@ -124,7 +140,8 @@ public void create() {\n         newUserTO = restTemplate.postForObject(BASE_URL + \"user/activate\",\n                 newUserTO, UserTO.class);\n         assertEquals(\"active\",\n-                restTemplate.getForObject(BASE_URL + \"user/status/\" + newUserTO.getId(), String.class));\n+                restTemplate.getForObject(BASE_URL + \"user/status/\"\n+                + newUserTO.getId(), String.class));\n \n         // 3. try (and fail) to create another user with same (unique) values\n         userTO = getSampleTO(\"pippo@c.com\");\n@@ -146,7 +163,7 @@ public void create() {\n     }\n \n     @Test\n-    public void createWithRequiredValueMissing() {\n+    public final void createWithRequiredValueMissing() {\n         UserTO userTO = getSampleTO(\"a.b@c.it\");\n \n         AttributeTO type = null;\n@@ -182,7 +199,7 @@ public void createWithRequiredValueMissing() {\n     }\n \n     @Test\n-    public void delete() {\n+    public final void delete() {\n         try {\n             restTemplate.delete(BASE_URL + \"user/delete/{userId}\", 0);\n         } catch (HttpStatusCodeException e) {\n@@ -199,24 +216,26 @@ public void delete() {\n     }\n \n     @Test\n-    public void list() {\n-        UserTOs users = restTemplate.getForObject(BASE_URL + \"user/list.json\", UserTOs.class);\n+    public final void list() {\n+        UserTOs users = restTemplate.getForObject(\n+                BASE_URL + \"user/list.json\", UserTOs.class);\n \n         assertNotNull(users);\n         assertEquals(4, users.getUsers().size());\n     }\n \n     @Test\n-    public void read() {\n-        UserTO userTO = restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\", UserTO.class, 1);\n+    public final void read() {\n+        UserTO userTO = restTemplate.getForObject(\n+                BASE_URL + \"user/read/{userId}.json\", UserTO.class, 1);\n \n         assertNotNull(userTO);\n         assertNotNull(userTO.getAttributes());\n         assertFalse(userTO.getAttributes().isEmpty());\n     }\n \n     @Test\n-    public void token() {\n+    public final void token() {\n         UserTO userTO = getSampleTO(\"d.e@f.com\");\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n@@ -236,7 +255,7 @@ public void token() {\n     }\n \n     @Test\n-    public void search() {\n+    public final void search() {\n         LeafSearchCondition usernameLeafCond1 =\n                 new LeafSearchCondition(LeafSearchCondition.Type.LIKE);\n         usernameLeafCond1.setSchema(\"username\");\n@@ -263,7 +282,7 @@ public void search() {\n     }\n \n     @Test\n-    public void update() {\n+    public final void update() {\n         UserTO userTO = getSampleTO(\"g.h@t.com\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRole(8L);\n@@ -304,7 +323,9 @@ public void update() {\n \n         assertEquals(\"newPassword\", userTO.getPassword());\n         assertTrue(userTO.getMemberships().size() == 1);\n-        assertTrue(userTO.getMemberships().iterator().next().getAttributes().size() == 1);\n+        assertTrue(\n+                userTO.getMemberships().iterator().next().getAttributes().size()\n+                == 1);\n         assertTrue(userTO.getDerivedAttributes().size() == 1);\n         boolean attributeFound = false;\n         for (AttributeTO attributeTO : userTO.getAttributes()) {"},{"sha":"3c442f89fd45c114b510233b1184263cbee74f34","filename":"pom.xml","status":"modified","additions":35,"deletions":10,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -29,7 +29,7 @@\n     <parent>\n         <groupId>org.sonatype.oss</groupId>\n         <artifactId>oss-parent</artifactId>\n-        <version>3</version>\n+        <version>4</version>\n     </parent>\n \n     <url>http://syncope.googlecode.com/</url>\n@@ -127,7 +127,7 @@\n         <dbunit.version>2.4.7</dbunit.version>\n \n         <jetty.version>6.1.24</jetty.version>\n-        <cargo.version>1.0.2</cargo.version>\n+        <cargo.version>1.0.3</cargo.version>\n \n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n     </properties>\n@@ -372,6 +372,7 @@\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-surefire-plugin</artifactId>\n+                    <version>2.6</version>\n                     <configuration>\n                         <redirectTestOutputToFile>true</redirectTestOutputToFile>\n                     </configuration>\n@@ -384,25 +385,35 @@\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-jxr-plugin</artifactId>\n-                    <version>2.1</version>\n+                    <version>2.2</version>\n+                </plugin>\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-javadoc-plugin</artifactId>\n+                    <version>2.7</version>\n+                </plugin>\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-pmd-plugin</artifactId>\n+                    <version>2.5</version>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-site-plugin</artifactId>\n-                    <version>2.1</version>\n+                    <version>2.1.1</version>\n                     <configuration>\n                         <locales>en,it</locales>\n                     </configuration>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-war-plugin</artifactId>\n-                    <version>2.1-beta-1</version>\n+                    <version>2.1</version>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-failsafe-plugin</artifactId>\n-                    <version>2.5</version>\n+                    <version>2.6</version>\n                     <executions>\n                         <execution>\n                             <goals>\n@@ -436,17 +447,31 @@\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-checkstyle-plugin</artifactId>\n-                <version>2.5</version>\n                 <configuration>\n-                    <configLocation>config/sun_checks.xml</configLocation>\n-                    <configLocation>config/maven_checks.xml</configLocation>\n+                    <configLocation>${basedir}/syncope_checks.xml</configLocation>\n                 </configuration>\n             </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-jxr-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-javadoc-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-pmd-plugin</artifactId>\n                 <configuration>\n-                    <aggregate>true</aggregate>\n+                    <targetJdk>1.6</targetJdk>\n+                    <rulesets>\n+                        <ruleset>/rulesets/basic.xml</ruleset>\n+                        <ruleset>/rulesets/controversial.xml</ruleset>\n+                    </rulesets>\n+                    <format>xml</format>\n+                    <linkXref>true</linkXref>\n+                    <sourceEncoding>utf-8</sourceEncoding>\n+                    <minimumTokens>100</minimumTokens>\n                 </configuration>\n             </plugin>\n         </plugins>"},{"sha":"f45620997d2778c2727c69f8adeddc1df80cd25f","filename":"syncope_checks.xml","status":"added","additions":188,"deletions":0,"changes":188,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5df4e15b391798a26198680165127c000d6e5ffc/syncope_checks.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5df4e15b391798a26198680165127c000d6e5ffc/syncope_checks.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/syncope_checks.xml?ref=5df4e15b391798a26198680165127c000d6e5ffc","patch":"@@ -0,0 +1,188 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE module PUBLIC \"-//Puppy Crawl//DTD Check Configuration 1.2//EN\"\n+\"http://www.puppycrawl.com/dtds/configuration_1_2.dtd\">\n+<!--\n+\n+  Checkstyle configuration that checks the sun coding conventions from:\n+\n+    - the Java Language Specification at\n+      http://java.sun.com/docs/books/jls/second_edition/html/index.html\n+\n+    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/\n+\n+    - the Javadoc guidelines at\n+      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html\n+\n+    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html\n+\n+    - some best practices\n+\n+  Checkstyle is very configurable. Be sure to read the documentation at\n+  http://checkstyle.sf.net (or in your downloaded distribution).\n+\n+  Most Checks are configurable, be sure to consult the documentation.\n+\n+  To completely disable a check, just comment it out or delete it from the file.\n+\n+  Finally, it is worth reading the documentation.\n+\n+-->\n+<module name=\"Checker\">\n+    <!--\n+        If you set the basedir property below, then all reported file\n+        names will be relative to the specified directory. See\n+        http://checkstyle.sourceforge.net/5.x/config.html#Checker\n+\n+        <property name=\"basedir\" value=\"${basedir}\"/>\n+    -->\n+\n+    <!-- Checks that a package-info.java file exists for each package.     -->\n+    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->\n+    <module name=\"JavadocPackage\"/>\n+\n+    <!-- Checks whether files end with a new line.                        -->\n+    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->\n+    <module name=\"NewlineAtEndOfFile\"/>\n+\n+    <!-- Checks that property files contain the same keys.         -->\n+    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->\n+    <module name=\"Translation\"/>\n+    \n+    <!-- Checks for Size Violations.                    -->\n+    <!-- See http://checkstyle.sf.net/config_sizes.html -->\n+    <module name=\"FileLength\"/>\n+    \n+    <!-- Checks for whitespace                               -->\n+    <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n+    <module name=\"FileTabCharacter\"/>\n+\n+    <!-- Miscellaneous other checks.                   -->\n+    <!-- See http://checkstyle.sf.net/config_misc.html -->\n+    <module name=\"RegexpSingleline\">\n+        <property name=\"format\" value=\"\\s+$\"/>\n+        <property name=\"minimum\" value=\"2\"/>\n+        <property name=\"maximum\" value=\"2\"/>\n+        <property name=\"message\" value=\"Line has trailing spaces.\"/>\n+    </module>\n+\n+    <module name=\"TreeWalker\">\n+\n+        <!-- Checks for Javadoc comments.                     -->\n+        <!-- See http://checkstyle.sf.net/config_javadoc.html -->\n+        <module name=\"JavadocMethod\"/>\n+        <module name=\"JavadocType\"/>\n+        <module name=\"JavadocVariable\"/>\n+        <module name=\"JavadocStyle\"/>\n+\n+\n+        <!-- Checks for Naming Conventions.                  -->\n+        <!-- See http://checkstyle.sf.net/config_naming.html -->\n+        <module name=\"ConstantName\"/>\n+        <module name=\"LocalFinalVariableName\"/>\n+        <module name=\"LocalVariableName\"/>\n+        <module name=\"MemberName\"/>\n+        <module name=\"MethodName\"/>\n+        <module name=\"PackageName\"/>\n+        <module name=\"ParameterName\"/>\n+        <module name=\"StaticVariableName\"/>\n+        <module name=\"TypeName\"/>\n+\n+\n+        <!-- Checks for Headers                                -->\n+        <!-- See http://checkstyle.sf.net/config_header.html   -->\n+        <!-- <module name=\"Header\">                            -->\n+            <!-- The follow property value demonstrates the ability     -->\n+            <!-- to have access to ANT properties. In this case it uses -->\n+            <!-- the ${basedir} property to allow Checkstyle to be run  -->\n+            <!-- from any directory within a project. See property      -->\n+            <!-- expansion,                                             -->\n+            <!-- http://checkstyle.sf.net/config.html#properties        -->\n+            <!-- <property                                              -->\n+            <!--     name=\"headerFile\"                                  -->\n+            <!--     value=\"${basedir}/java.header\"/>                   -->\n+        <!-- </module> -->\n+\n+        <!-- Following interprets the header file as regular expressions. -->\n+        <!-- <module name=\"RegexpHeader\"/>                                -->\n+\n+\n+        <!-- Checks for imports                              -->\n+        <!-- See http://checkstyle.sf.net/config_import.html -->\n+        <module name=\"AvoidStarImport\"/>\n+        <module name=\"IllegalImport\"/> <!-- defaults to sun.* packages -->\n+        <module name=\"RedundantImport\"/>\n+        <module name=\"UnusedImports\"/>\n+\n+\n+        <!-- Checks for Size Violations.                    -->\n+        <!-- See http://checkstyle.sf.net/config_sizes.html -->\n+        <module name=\"LineLength\"/>\n+        <module name=\"MethodLength\"/>\n+        <module name=\"ParameterNumber\"/>\n+\n+\n+        <!-- Checks for whitespace                               -->\n+        <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n+        <module name=\"EmptyForIteratorPad\"/>\n+        <module name=\"GenericWhitespace\"/>\n+        <module name=\"MethodParamPad\"/>\n+        <module name=\"NoWhitespaceAfter\"/>\n+        <module name=\"NoWhitespaceBefore\"/>\n+        <module name=\"OperatorWrap\"/>\n+        <module name=\"ParenPad\"/>\n+        <module name=\"TypecastParenPad\"/>\n+        <module name=\"WhitespaceAfter\"/>\n+        <module name=\"WhitespaceAround\"/>\n+\n+\n+        <!-- Modifier Checks                                    -->\n+        <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n+        <module name=\"ModifierOrder\"/>\n+        <module name=\"RedundantModifier\"/>\n+\n+\n+        <!-- Checks for blocks. You know, those {}'s         -->\n+        <!-- See http://checkstyle.sf.net/config_blocks.html -->\n+        <module name=\"AvoidNestedBlocks\"/>\n+        <module name=\"EmptyBlock\"/>\n+        <module name=\"LeftCurly\"/>\n+        <module name=\"NeedBraces\"/>\n+        <module name=\"RightCurly\"/>\n+\n+\n+        <!-- Checks for common coding problems               -->\n+        <!-- See http://checkstyle.sf.net/config_coding.html -->\n+<!--        <module name=\"AvoidInlineConditionals\"/>-->\n+        <module name=\"DoubleCheckedLocking\"/>    <!-- MY FAVOURITE -->\n+        <module name=\"EmptyStatement\"/>\n+        <module name=\"EqualsHashCode\"/>\n+        <module name=\"HiddenField\">\n+            <property name=\"ignoreSetter\" value=\"true\"/>\n+        </module>\n+        <module name=\"IllegalInstantiation\"/>\n+        <module name=\"InnerAssignment\"/>\n+        <!--<module name=\"MagicNumber\"/>-->\n+        <module name=\"MissingSwitchDefault\"/>\n+        <module name=\"RedundantThrows\"/>\n+        <module name=\"SimplifyBooleanExpression\"/>\n+        <module name=\"SimplifyBooleanReturn\"/>\n+\n+        <!-- Checks for class design                         -->\n+        <!-- See http://checkstyle.sf.net/config_design.html -->\n+        <!--<module name=\"DesignForExtension\"/>-->\n+        <module name=\"FinalClass\"/>\n+        <module name=\"HideUtilityClassConstructor\"/>\n+        <module name=\"InterfaceIsType\"/>\n+        <module name=\"VisibilityModifier\"/>\n+\n+\n+        <!-- Miscellaneous other checks.                   -->\n+        <!-- See http://checkstyle.sf.net/config_misc.html -->\n+        <module name=\"ArrayTypeStyle\"/>\n+        <module name=\"FinalParameters\"/>\n+        <module name=\"TodoComment\"/>\n+        <module name=\"UpperEll\"/>\n+\n+    </module>\n+\n+</module>"}]}