{"sha":"48b5a10f49e659d6fc24e116d4c56307ac9721c9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ4YjVhMTBmNDllNjU5ZDZmYzI0ZTExNmQ0YzU2MzA3YWM5NzIxYzk=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-04T16:09:30Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-03-04T16:09:30Z"},"message":"profides bulk actions support","tree":{"sha":"368222c2be5f0fd013c131a3fb169fad38b07dff","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/368222c2be5f0fd013c131a3fb169fad38b07dff"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/48b5a10f49e659d6fc24e116d4c56307ac9721c9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/48b5a10f49e659d6fc24e116d4c56307ac9721c9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/48b5a10f49e659d6fc24e116d4c56307ac9721c9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/48b5a10f49e659d6fc24e116d4c56307ac9721c9/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"3826d02383f8855e46880f4ad54979584d9474d3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3826d02383f8855e46880f4ad54979584d9474d3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3826d02383f8855e46880f4ad54979584d9474d3"}],"stats":{"total":1116,"additions":688,"deletions":428},"files":[{"sha":"2db04c4d5d1f591d8831abb6e0a13cfccc3b82ad","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":24,"deletions":21,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -22,8 +22,8 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.Realm;\n import org.apache.syncope.client.console.panels.RealmModalPanel;\n-import org.apache.syncope.client.console.panels.RealmSidebarPanel;\n-import org.apache.syncope.client.console.panels.RealmSidebarPanel.ControlSidebarClick;\n+import org.apache.syncope.client.console.panels.RealmChoicePanel;\n+import org.apache.syncope.client.console.panels.RealmChoicePanel.ChoosenRealm;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -43,7 +43,7 @@ public class Realms extends BasePage {\n \n     private final RealmRestClient realmRestClient = new RealmRestClient();\n \n-    private final RealmSidebarPanel realmSidebarPanel;\n+    private final RealmChoicePanel realmChoicePanel;\n \n     private final WebMarkupContainer content;\n \n@@ -52,13 +52,12 @@ public class Realms extends BasePage {\n     public Realms(final PageParameters parameters) {\n         super(parameters);\n \n-        realmSidebarPanel = new RealmSidebarPanel(\"realmSidebarPanel\", getPageReference());\n-        realmSidebarPanel.setMarkupId(\"sidebar\");\n-        realmSidebarPanel.setOutputMarkupId(true);\n-        body.add(realmSidebarPanel);\n-\n         content = new WebMarkupContainer(\"content\");\n-        content.add(new Label(\"header\", \"Root realm\"));\n+\n+        realmChoicePanel = new RealmChoicePanel(\"realmChoicePanel\", getPageReference());\n+        realmChoicePanel.setOutputMarkupId(true);\n+        content.add(realmChoicePanel);\n+\n         content.add(new Label(\"body\", \"Root realm\"));\n         content.setOutputMarkupId(true);\n         body.add(content);\n@@ -72,29 +71,30 @@ public Realms(final PageParameters parameters) {\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n-                target.add(realmSidebarPanel.reloadRealmTree());\n-                target.add(updateRealmContent(realmSidebarPanel.getCurrentRealm()));\n+                target.add(realmChoicePanel.reloadRealmTree(target));\n                 modal.show(false);\n             }\n         });\n \n-        updateRealmContent(realmSidebarPanel.getCurrentRealm());\n+        updateRealmContent(realmChoicePanel.getCurrentRealm());\n     }\n \n     @Override\n     public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n \n-        if (event.getPayload() instanceof ControlSidebarClick) {\n+        if (event.getPayload() instanceof ChoosenRealm) {\n             @SuppressWarnings(\"unchecked\")\n-            final ControlSidebarClick<RealmTO> controlSidebarClick = ControlSidebarClick.class.cast(event.getPayload());\n-            updateRealmContent(controlSidebarClick.getObj());\n-            controlSidebarClick.getTarget().add(content);\n+            final ChoosenRealm<RealmTO> choosenRealm = ChoosenRealm.class.cast(event.getPayload());\n+            updateRealmContent(choosenRealm.getObj());\n+            choosenRealm.getTarget().add(content);\n         }\n     }\n \n     private WebMarkupContainer updateRealmContent(final RealmTO realmTO) {\n-        content.addOrReplace(new Label(\"header\", realmTO.getFullPath()));\n+        if (realmTO == null) {\n+            return content;\n+        }\n         content.addOrReplace(new Realm(\"body\", realmTO, getPageReference()) {\n \n             private static final long serialVersionUID = 8221398624379357183L;\n@@ -111,7 +111,7 @@ protected void onClickCreate(final AjaxRequestTarget target) {\n                         modal,\n                         Realms.this.getPageReference(),\n                         newRealmTO,\n-                        realmSidebarPanel.getCurrentRealm().getFullPath(),\n+                        realmChoicePanel.getCurrentRealm().getFullPath(),\n                         StandardEntitlement.REALM_CREATE,\n                         true);\n                 target.add(modal.setContent(panel));\n@@ -122,7 +122,7 @@ protected void onClickCreate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onClickEdit(final AjaxRequestTarget target, final RealmTO realmTO) {\n-                modal.header(Model.of(realmSidebarPanel.getCurrentRealm().getName()));\n+                modal.header(Model.of(realmChoicePanel.getCurrentRealm().getName()));\n \n                 modal.setFormModel(realmTO);\n \n@@ -146,8 +146,11 @@ protected void onClickDelete(final AjaxRequestTarget target, final RealmTO realm\n                         throw new Exception(\"Root realm cannot be deleted\");\n                     }\n                     realmRestClient.delete(realmTO.getFullPath());\n-                    target.add(realmSidebarPanel.reloadRealmTree());\n-                    target.add(updateRealmContent(realmSidebarPanel.getCurrentRealm()));\n+                    RealmTO parent = realmChoicePanel.moveToParentRealm(realmTO.getKey());\n+                    target.add(realmChoicePanel.reloadRealmTree(target));\n+\n+                    updateRealmContent(parent);\n+                    target.add(content);\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (Exception e) {\n                     LOG.error(\"While deleting realm\", e);"},{"sha":"183e23e9016bbc1f93d5875c3fd1d06fe45a08e4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -142,7 +142,6 @@ public Panel getPanel(final String panelId) {\n \n     private Panel getAnyPanel(final String id, final PageReference pageReference, final AnyTypeTO anyTypeTO) {\n         final Panel panel;\n-\n         switch (anyTypeTO.getKind()) {\n             case USER:\n                 final UserTO userTO = new UserTO();"},{"sha":"0a33538094c8b55ad1346b7523b8a3d60bb9971c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmChoicePanel.java","status":"added","additions":254,"deletions":0,"changes":254,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -0,0 +1,254 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.behavior.AlignmentBehavior;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.button.BootstrapAjaxLink;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.button.ButtonList;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.button.Buttons;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.button.dropdown.DropDownButton;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.image.GlyphIconType;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.image.IconType;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.link.AbstractLink;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class RealmChoicePanel extends Panel {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    private final RealmRestClient realmRestClient = new RealmRestClient();\n+\n+    private final PageReference pageRef;\n+\n+    private final LoadableDetachableModel<List<Pair<String, RealmTO>>> ldm;\n+\n+    private final WebMarkupContainer container;\n+\n+    private final Model<RealmTO> model;\n+\n+    private final Map<Long, Pair<RealmTO, List<RealmTO>>> tree;\n+\n+    public RealmChoicePanel(final String id, final PageReference pageRef) {\n+        super(id);\n+        this.pageRef = pageRef;\n+        tree = new HashMap<>();\n+\n+        final RealmTO def = new RealmTO();\n+        def.setName(\"/\");\n+        def.setFullPath(\"/\");\n+        model = Model.of(def);\n+\n+        ldm = new LoadableDetachableModel<List<Pair<String, RealmTO>>>() {\n+\n+            private static final long serialVersionUID = -7688359318035249200L;\n+\n+            private void getChildren(\n+                    final List<Pair<String, RealmTO>> full,\n+                    final long key,\n+                    final Map<Long, Pair<RealmTO, List<RealmTO>>> tree,\n+                    final String indent) {\n+\n+                if (tree.containsKey(key)) {\n+                    Pair<RealmTO, List<RealmTO>> subtree = tree.get(key);\n+                    for (RealmTO child : subtree.getValue()) {\n+                        full.add(Pair.of(indent + child.getName(), child));\n+                        getChildren(full, child.getKey(), tree, \"     \" + indent + (indent.isEmpty() ? \"|--- \" : \"\"));\n+                    }\n+                }\n+            }\n+\n+            @Override\n+            protected List<Pair<String, RealmTO>> load() {\n+                final List<Pair<String, RealmTO>> full = new ArrayList<>();\n+                getChildren(full, 0L, reloadRealmParentMap(), StringUtils.EMPTY);\n+                return full;\n+            }\n+        };\n+\n+        container = new WebMarkupContainer(\"container\", ldm);\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        reloadRealmTree();\n+    }\n+\n+    public final void reloadRealmTree() {\n+        final Label label = new Label(\"realm\", model.getObject().getFullPath());\n+        label.setOutputMarkupId(true);\n+        container.addOrReplace(label);\n+\n+        final DropDownButton realms = new DropDownButton(\n+                \"realms\", new ResourceModel(\"select\", \"\"), new Model<IconType>(GlyphIconType.folderopen)) {\n+\n+            private static final long serialVersionUID = -5560086780455361131L;\n+\n+            @Override\n+            protected List<AbstractLink> newSubMenuButtons(final String buttonMarkupId) {\n+                List<AbstractLink> links = new ArrayList<>();\n+\n+                for (Pair<String, RealmTO> link : ldm.getObject()) {\n+                    final RealmTO realmTO = link.getValue();\n+                    links.add(new BootstrapAjaxLink<String>(\n+                            ButtonList.getButtonMarkupId(),\n+                            new Model<String>(),\n+                            Buttons.Type.Link,\n+                            new Model<>(link.getKey())) {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target) {\n+                            model.setObject(realmTO);\n+                            label.setDefaultModelObject(model.getObject().getFullPath());\n+                            target.add(label);\n+                            send(pageRef.getPage(), Broadcast.EXACT, new ChoosenRealm<>(realmTO, target));\n+                        }\n+                    });\n+                }\n+                return links;\n+            }\n+        };\n+        realms.setOutputMarkupId(true);\n+        realms.setAlignment(AlignmentBehavior.Alignment.RIGHT);\n+        realms.setType(Buttons.Type.Menu);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(realms, ENABLE, StandardEntitlement.REALM_LIST);\n+\n+        container.addOrReplace(realms);\n+    }\n+\n+    public final RealmChoicePanel reloadRealmTree(final AjaxRequestTarget target) {\n+        reloadRealmTree();\n+        target.add(container);\n+        return this;\n+    }\n+\n+    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap() {\n+        final List<RealmTO> realms = realmRestClient.list();\n+        Collections.sort(realms, new RealmNameComparator());\n+        return reloadRealmParentMap(realms);\n+    }\n+\n+    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final List<RealmTO> realms) {\n+        tree.clear();\n+        tree.put(0L, Pair.<RealmTO, List<RealmTO>>of(realms.get(0), new ArrayList<RealmTO>()));\n+\n+        final Map<Long, List<RealmTO>> cache = new HashMap<>();\n+\n+        for (RealmTO realm : realms) {\n+            final List<RealmTO> children = new ArrayList<>();\n+            tree.put(realm.getKey(), Pair.<RealmTO, List<RealmTO>>of(realm, children));\n+\n+            if (cache.containsKey(realm.getKey())) {\n+                children.addAll(cache.get(realm.getKey()));\n+                cache.remove(realm.getKey());\n+            }\n+\n+            if (tree.containsKey(realm.getParent())) {\n+                tree.get(realm.getParent()).getRight().add(realm);\n+            } else if (cache.containsKey(realm.getParent())) {\n+                cache.get(realm.getParent()).add(realm);\n+            } else {\n+                cache.put(realm.getParent(), new ArrayList<>(Collections.singleton(realm)));\n+            }\n+        }\n+\n+        return tree;\n+    }\n+\n+    private static class RealmNameComparator implements Comparator<RealmTO>, Serializable {\n+\n+        private static final long serialVersionUID = 7085057398406518811L;\n+\n+        @Override\n+        public int compare(final RealmTO r1, final RealmTO r2) {\n+            if (r1 == null && r2 == null) {\n+                return 0;\n+            } else if (r1 != null && r2 != null) {\n+                return r1.getName().compareTo(r2.getName());\n+            } else if (r1 == null && r2 != null) {\n+                return -1;\n+            } else {\n+                return 1;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Gets current selected realm.\n+     *\n+     * @return selected realm.\n+     */\n+    public RealmTO getCurrentRealm() {\n+        return model.getObject();\n+    }\n+\n+    public RealmTO moveToParentRealm(final long key) {\n+        for (Pair<RealmTO, List<RealmTO>> subtree : tree.values()) {\n+            for (RealmTO child : subtree.getRight()) {\n+                if (child.getKey() == key) {\n+                    model.setObject(subtree.getLeft());\n+                    return subtree.getLeft();\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public static class ChoosenRealm<T> {\n+\n+        private final AjaxRequestTarget target;\n+\n+        private final T obj;\n+\n+        public ChoosenRealm(final T obj, final AjaxRequestTarget target) {\n+            this.obj = obj;\n+            this.target = target;\n+        }\n+\n+        public T getObj() {\n+            return obj;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n+}"},{"sha":"6436354e3601244db1bd59e02ac983e89c1c1673","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmSidebarPanel.java","status":"removed","additions":0,"deletions":271,"changes":271,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3826d02383f8855e46880f4ad54979584d9474d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3826d02383f8855e46880f4ad54979584d9474d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java?ref=3826d02383f8855e46880f4ad54979584d9474d3","patch":"@@ -1,271 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.panels.RealmSidebarPanel.ControlSidebarClick;\n-import org.apache.syncope.client.console.rest.RealmRestClient;\n-import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.MarkupContainer;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.OnLoadHeaderItem;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.link.Link;\n-import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.markup.repeater.RepeatingView;\n-import org.apache.wicket.model.PropertyModel;\n-\n-public class RealmSidebarPanel extends Panel {\n-\n-    private static final long serialVersionUID = -1100228004207271270L;\n-\n-    private final RealmRestClient realmRestClient = new RealmRestClient();\n-\n-    private final WebMarkupContainer menu;\n-\n-    private List<RealmTO> currentPath;\n-\n-    private final PageReference pageRef;\n-\n-    private Map<Long, Pair<RealmTO, List<RealmTO>>> tree;\n-\n-    private boolean reload = false;\n-\n-    public RealmSidebarPanel(final String id, final PageReference pageRef) {\n-        super(id);\n-        this.pageRef = pageRef;\n-\n-        final List<RealmTO> realms = realmRestClient.list();\n-        Collections.sort(realms, new RealmNameComparator());\n-\n-        menu = new WebMarkupContainer(\"menu\");\n-        menu.setOutputMarkupId(true);\n-        add(menu);\n-\n-        reloadRealmTree(reloadRealmParentMap(realms), 0L, menu);\n-    }\n-\n-    public final RealmSidebarPanel reloadRealmTree() {\n-        reloadRealmTree(reloadRealmParentMap(), 0L, menu);\n-        return this;\n-    }\n-\n-    private MarkupContainer reloadRealmTree(\n-            final Map<Long, Pair<RealmTO, List<RealmTO>>> parentMap, final Long key, final MarkupContainer container) {\n-\n-        // set the current active path base on the current parent map\n-        setCurrentRealm(getCurrentRealm());\n-\n-        final RepeatingView listItems = new RepeatingView(\"list\");\n-        listItems.setOutputMarkupId(true);\n-        container.addOrReplace(listItems);\n-\n-        if (!parentMap.containsKey(key)) {\n-            return container;\n-        }\n-\n-        for (final RealmTO realm : parentMap.get(key).getRight()) {\n-            final Fragment fragment;\n-\n-            final AjaxLink<Void> link = new AjaxLink<Void>(\"link\") {\n-\n-                private static final long serialVersionUID = -7978723352517770644L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target) {\n-                    RealmSidebarPanel.this.setCurrentRealm(realm);\n-                    send(pageRef.getPage(), Broadcast.EXACT, new ControlSidebarClick<>(realm, target));\n-                }\n-\n-                @Override\n-                protected void onComponentTag(final ComponentTag tag) {\n-                    super.onComponentTag(tag);\n-                    tag.put(\"href\", \"#\");\n-                }\n-            };\n-\n-            link.setMarkupId(\"item-\" + realm.getKey());\n-            link.addOrReplace(new Label(\"name\", new PropertyModel<String>(realm, \"name\")));\n-\n-            if (parentMap.containsKey(realm.getKey()) && !parentMap.get(realm.getKey()).getRight().isEmpty()) {\n-                fragment = new Fragment(String.valueOf(realm.getKey()), \"withChildren\", RealmSidebarPanel.this);\n-\n-                final Link<Void> angle = new Link<Void>(\"angle\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick() {\n-                    }\n-\n-                    @Override\n-                    protected void onComponentTag(final ComponentTag tag) {\n-                        super.onComponentTag(tag);\n-                        tag.put(\"href\", \"#\");\n-                    }\n-                };\n-\n-                angle.setMarkupId(\"angle-\" + realm.getKey());\n-                fragment.addOrReplace(angle);\n-\n-                final WebMarkupContainer subtree = new WebMarkupContainer(\"subtree\");\n-                subtree.setOutputMarkupId(true);\n-                subtree.setMarkupId(\"subtree\");\n-                fragment.add(subtree);\n-\n-                reloadRealmTree(parentMap, realm.getKey(), subtree);\n-            } else {\n-                fragment = new Fragment(String.valueOf(realm.getKey()), \"withoutChildren\", RealmSidebarPanel.this);\n-            }\n-\n-            fragment.addOrReplace(link);\n-            fragment.setOutputMarkupId(true);\n-            listItems.addOrReplace(fragment);\n-\n-            MetaDataRoleAuthorizationStrategy.authorize(link, ENABLE, StandardEntitlement.REALM_LIST);\n-        }\n-\n-        return container;\n-    }\n-\n-    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap() {\n-        final List<RealmTO> realms = realmRestClient.list();\n-        Collections.sort(realms, new RealmNameComparator());\n-        return reloadRealmParentMap(realms);\n-    }\n-\n-    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final List<RealmTO> realms) {\n-        tree = new HashMap<>();\n-        tree.put(0L, Pair.<RealmTO, List<RealmTO>>of(realms.get(0), new ArrayList<RealmTO>()));\n-\n-        final Map<Long, List<RealmTO>> cache = new HashMap<>();\n-\n-        for (RealmTO realm : realms) {\n-            final List<RealmTO> children = new ArrayList<>();\n-            tree.put(realm.getKey(), Pair.<RealmTO, List<RealmTO>>of(realm, children));\n-\n-            if (cache.containsKey(realm.getKey())) {\n-                children.addAll(cache.get(realm.getKey()));\n-                cache.remove(realm.getKey());\n-            }\n-\n-            if (tree.containsKey(realm.getParent())) {\n-                tree.get(realm.getParent()).getRight().add(realm);\n-            } else if (cache.containsKey(realm.getParent())) {\n-                cache.get(realm.getParent()).add(realm);\n-            } else {\n-                cache.put(realm.getParent(), new ArrayList<>(Collections.singleton(realm)));\n-            }\n-        }\n-\n-        return tree;\n-    }\n-\n-    private static class RealmNameComparator implements Comparator<RealmTO>, Serializable {\n-\n-        private static final long serialVersionUID = 7085057398406518811L;\n-\n-        @Override\n-        public int compare(final RealmTO r1, final RealmTO r2) {\n-            if (r1 == null && r2 == null) {\n-                return 0;\n-            } else if (r1 != null && r2 != null) {\n-                return r1.getName().compareTo(r2.getName());\n-            } else if (r1 == null && r2 != null) {\n-                return -1;\n-            } else {\n-                return 1;\n-            }\n-        }\n-    }\n-\n-    public final void setCurrentRealm(final RealmTO realmTO) {\n-        RealmTO realm;\n-\n-        if (tree.containsKey(realmTO.getKey())) {\n-            realm = tree.get(realmTO.getKey()).getLeft();\n-        } else if (tree.containsKey(realmTO.getParent())) {\n-            realm = tree.get(realmTO.getParent()).getLeft();\n-        } else {\n-            realm = tree.get(0L).getLeft();\n-        }\n-\n-        this.currentPath = new ArrayList<>();\n-        this.currentPath.add(realm);\n-\n-        while (realm.getParent() != 0L) {\n-            realm = tree.get(realm.getParent()).getLeft();\n-            this.currentPath.add(realm);\n-        }\n-    }\n-\n-    public RealmTO getCurrentRealm() {\n-        return this.currentPath == null || this.currentPath.isEmpty()\n-                ? tree.get(0L).getLeft() : this.currentPath.get(0);\n-    }\n-\n-    public static class ControlSidebarClick<T> {\n-\n-        private final AjaxRequestTarget target;\n-\n-        private final T obj;\n-\n-        public ControlSidebarClick(final T obj, final AjaxRequestTarget target) {\n-            this.obj = obj;\n-            this.target = target;\n-        }\n-\n-        public T getObj() {\n-            return obj;\n-        }\n-\n-        public AjaxRequestTarget getTarget() {\n-            return target;\n-        }\n-    }\n-\n-    @Override\n-    public void renderHead(final IHeaderResponse response) {\n-        if (reload) {\n-            response.render(OnLoadHeaderItem.forScript(\"$.AdminLTE.tree('.syncopeSidebar');\"));\n-\n-            for (RealmTO realm : this.currentPath.subList(1, this.currentPath.size())) {\n-                response.render(OnLoadHeaderItem.forScript(String.format(\"$('#angle-%d').click();\", realm.getKey())));\n-            }\n-        } else {\n-            reload = true;\n-        }\n-    }\n-}"},{"sha":"11adf29a43a2a7e3d34e4a4ae6e1560742a32a0e","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/StatusSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusSearchResultPanel.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -64,7 +64,7 @@\n \n     private final BaseModal<?> baseModal;\n \n-    protected final MultilevelPanel multiLevelPanelRef;\n+    private final MultilevelPanel multiLevelPanelRef;\n \n     private final AnyTO anyTO;\n "},{"sha":"7f3bb9c46c650246d99265de44b066ef8af3676a","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -42,7 +42,7 @@ public <T extends AnyTO> PropagationTasks(\n \n             @Override\n             protected void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target) {\n-                mlp.next(\"task.view\", new TaskExecutionDetails<>(taskTO, pageReference), target);\n+                mlp.next(\"task.view\", new TaskExecutionDetails<>(baseModal, taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"87810aac319dec5d72539c9b08e6204c2b41b4d0","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PushTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -46,7 +46,7 @@ public <T extends AnyTO> PushTasks(\n             protected void viewTask(final PushTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n-                        new TaskExecutionDetails<>(taskTO, pageReference), target);\n+                        new TaskExecutionDetails<>(baseModal, taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"7ca1f16950c097f584fb28a7120a5b715d8ad938","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -46,7 +46,7 @@ public <T extends AnyTO> SchedTasks(final BaseModal<?> baseModal, final PageRefe\n             protected void viewTask(final SchedTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n-                        new TaskExecutionDetails<>(taskTO, pageReference), target);\n+                        new TaskExecutionDetails<>(baseModal, taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"b03af35bddf37c0f7486aa4a4ad28762a7fee83c","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -46,7 +46,7 @@ public <T extends AnyTO> SyncTasks(\n             protected void viewTask(final SyncTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n-                        new TaskExecutionDetails<>(taskTO, pageReference), target);\n+                        new TaskExecutionDetails<>(baseModal, taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"e02e6c58af47053d212465350903ccb9f6baf407","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskExecutionDetails.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.tasks;\n \n import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -32,13 +33,13 @@\n \n     private static final long serialVersionUID = -4110576026663173545L;\n \n-    public TaskExecutionDetails(final T taskTO, final PageReference pageRef) {\n+    public TaskExecutionDetails(final BaseModal<?> baseModal, final T taskTO, final PageReference pageRef) {\n         super();\n \n         final MultilevelPanel mlp = new MultilevelPanel(\"executions\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new TaskExecutions(MultilevelPanel.FIRST_LEVEL_ID, taskTO, pageRef) {\n+        mlp.setFirstLevel(new TaskExecutions(baseModal, mlp, taskTO, pageRef) {\n \n             private static final long serialVersionUID = 5691719817252887541L;\n "},{"sha":"1d0846012293e2a7ff0e689b3760d656bdd2651c","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskExecutions.java","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -29,11 +29,14 @@\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.tasks.TaskExecutions.TaskExecProvider;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -54,18 +57,33 @@\n \n     private static final long serialVersionUID = 2039393934721149162L;\n \n+    private final BaseModal<?> baseModal;\n+\n+    private final MultilevelPanel multiLevelPanelRef;\n+\n     protected TaskRestClient taskRestClient = new TaskRestClient();\n \n     private final AbstractTaskTO taskTO;\n \n-    public TaskExecutions(final String id, final AbstractTaskTO taskTO, final PageReference pageRef) {\n-        super(id, pageRef, false);\n+    public TaskExecutions(\n+            final BaseModal<?> baseModal,\n+            final MultilevelPanel multiLevelPanelRef,\n+            final AbstractTaskTO taskTO,\n+            final PageReference pageRef) {\n+        super(MultilevelPanel.FIRST_LEVEL_ID, pageRef, false);\n+        this.baseModal = baseModal;\n+        this.multiLevelPanelRef = multiLevelPanelRef;\n         restClient = taskRestClient;\n         setOutputMarkupId(true);\n         this.taskTO = taskTO;\n         initResultTable();\n     }\n \n+    @Override\n+    protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<ExecTO, String> resultTableBuilder) {\n+        resultTableBuilder.setMultiLevelPanel(baseModal, multiLevelPanelRef);\n+    }\n+\n     protected abstract void next(final String title, final SecondLevel secondLevel, final AjaxRequestTarget target);\n \n     @Override"},{"sha":"de7baf5e58463bb796af5f8fcc279ee1f66560d7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -443,7 +443,7 @@ public String getAjaxIndicatorMarkupId() {\n             case DELETE:\n                 fragment = new Fragment(\"panelDelete\", \"fragmentDelete\", this);\n \n-                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"deleteLink\") {\n+                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"deleteLink\", enabled) {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -601,7 +601,7 @@ public String getAjaxIndicatorMarkupId() {\n             case UNLINK:\n                 fragment = new Fragment(\"panelUnlink\", \"fragmentUnlink\", this);\n \n-                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"unlinkLink\", \"confirmUnlink\") {\n+                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"unlinkLink\", \"confirmUnlink\", enabled) {\n \n                     private static final long serialVersionUID = -6957616042924610293L;\n \n@@ -640,7 +640,7 @@ public String getAjaxIndicatorMarkupId() {\n                 fragment = new Fragment(\"panelUnassign\", \"fragmentUnassign\", this);\n \n                 fragment.addOrReplace(\n-                        new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", \"confirmUnassign\") {\n+                        new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", \"confirmUnassign\", enabled) {\n \n                     private static final long serialVersionUID = -6957616042924610294L;\n \n@@ -680,7 +680,7 @@ public String getAjaxIndicatorMarkupId() {\n                 fragment = new Fragment(\"panelDeprovision\", \"fragmentDeprovision\", this);\n \n                 fragment.addOrReplace(\n-                        new IndicatingOnConfirmAjaxLink<Void>(\"deprovisionLink\", \"confirmDeprovision\") {\n+                        new IndicatingOnConfirmAjaxLink<Void>(\"deprovisionLink\", \"confirmDeprovision\", enabled) {\n \n                     private static final long serialVersionUID = -6957616042924610295L;\n "},{"sha":"98b354149f89014bade16562a884b485ab6e5065","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/IndicatingOnConfirmAjaxLink.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -27,13 +27,15 @@\n \n     private final String msg;\n \n-    public IndicatingOnConfirmAjaxLink(final String id) {\n-        this(id, \"confirmDelete\");\n+    public IndicatingOnConfirmAjaxLink(final String id, final boolean enabled) {\n+        this(id, \"confirmDelete\", enabled);\n     }\n \n-    public IndicatingOnConfirmAjaxLink(final String id, final String msg) {\n+    public IndicatingOnConfirmAjaxLink(final String id, final String msg, final boolean enabled) {\n         super(id);\n         this.msg = msg;\n-        this.add(new ConfirmationModalBehavior(msg));\n+        if (enabled) {\n+            this.add(new ConfirmationModalBehavior(msg));\n+        }\n     }\n }"},{"sha":"0f71eeb8d6ecabcb84e6e4dc56f41e18997c197f","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":29,"deletions":1,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -75,6 +75,34 @@ pre {\n   min-height: 554px\n }\n \n+.realm-header {\n+  clear: both;\n+  display:block;\n+  display: inline-table;\n+  margin: 0 0 10px;\n+  line-height: 25px;\n+}\n+\n+.realm-label {\n+  float: left;\n+  font-size: 16px;\n+}\n+\n+.realm-label label {\n+  font-weight: 600 !important;\n+}\n+\n+.realm-choice {\n+  right: 0px;\n+  position: absolute;\n+}\n+\n+.realm-header .dropdown-menu li a {\n+  text-align: left !important;\n+  white-space: pre !important;\n+  line-height: 7px;\n+}\n+\n .block-header {\n   position: fixed !important;\n   width: 100% !important;\n@@ -501,5 +529,5 @@ END - Result page\n }\n \n .nav-tabs-custom > .nav-tabs > li.active {\n-    border-top-color: #d2d6de !important;\n+  border-top-color: #d2d6de !important;\n }"},{"sha":"ab19e43b02f48d07eaba9f85d6aacb9b936e36b3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms.html","status":"modified","additions":15,"deletions":46,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.html?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -17,55 +17,24 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-    <section class=\"content-header\">\n-      <h1>\n-        <wicket:message key=\"realms\"/>\n-      </h1>\n-    </section>\n+  <head><title>Realms</title></head>\n+  <body>\n+    <wicket:extend>\n+      <section class=\"content-header\">\n+        <h1>\n+          <wicket:message key=\"realms\"/>\n+        </h1>\n+      </section>\n \n-    <div class=\"wrapper\">\n-      <div class=\"admin-content-page content-margin-layout\" wicket:id=\"content\">\n-        <div class=\"box box-solid box-primary\">\n-          <div class=\"box-header with-border\">\n-            <h3 class=\"box-title\">\n-              <wicket:container wicket:id=\"header\"></wicket:container>\n-            </h3>\n-            <div class=\"box-tools pull-right\">\n-            </div><!-- /.box-tools -->\n-          </div><!-- /.box-header -->\n+      <section class=\"content\" wicket:id=\"content\">\n+        <div class=\"box\">\n           <div class=\"box-body\">\n-            <div class=\"realms\">\n-              <wicket:container wicket:id=\"body\"></wicket:container>\n-            </div>\n+            <span wicket:id=\"realmChoicePanel\">[Realm Sidebar Panel]</span>\n+            <wicket:container wicket:id=\"body\"></wicket:container>\n           </div>\n         </div>\n         <div wicket:id=\"modal\"></div>\n-      </div>\n-\n-      <span wicket:id=\"realmSidebarPanel\">[Realm Sidebar Panel]</span>\n-    </div>\n-\n-    <wicket:fragment wicket:id=\"withChildren\">\n-      <li class=\"treeview\">\n-        <a href=\"#\" wicket:id=\"link\"><i class=\"fa fa-folder-o\">\n-          </i><span wicket:id=\"name\">[ITEM NAME]</span>\n-        </a>\n-        <a haref=\"#\" class=\"angle\">\n-          <i class=\"fa fa-angle-left pull-right\"></i>\n-        </a>\n-        <ul class=\"treeview-menu\">\n-          <wicket:container wicket:id=\"list\"></wicket:container>\n-        </ul>\n-      </li>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"withoutChildren\">\n-      <li>\n-        <a href=\"#\" wicket:id=\"link\">\n-          <i class=\"fa fa-leaf\"></i><span wicket:id=\"name\">[ITEM NAME]</span>\n-        </a>\n-      </li>\n-    </wicket:fragment>\n-  </wicket:extend>\n+      </section>\n+    </wicket:extend>\n+  </body>\n </html>\n\\ No newline at end of file"},{"sha":"6ead5a4244563c1d69764fcdbd409fd00c32b5e5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmChoicePanel.html","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.html?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"container\" class=\"realm-header\">\n+      <div class=\"realm-label\">\n+        Realm: <label wicket:id=\"realm\"/>\n+      </div>\n+      <div class=\"realm-choice\">\n+        <button wicket:id=\"realms\"/>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"b97f8b8e2be6f42f1b0c439d7225efa95518edb0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmSidebarPanel.html","status":"removed","additions":0,"deletions":52,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3826d02383f8855e46880f4ad54979584d9474d3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3826d02383f8855e46880f4ad54979584d9474d3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html?ref=3826d02383f8855e46880f4ad54979584d9474d3","patch":"@@ -1,52 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <aside id=\"aside\" name=\"aside\" class=\"control-sidebar control-sidebar-dark control-sidebar-open block-sidebar\">\n-      <section id=\"section\" name=\"section\" class=\"sidebar syncopeSidebar\">\n-        <ul id=\"tree\" name=\"tree\" class=\"sidebar-menu\" wicket:id=\"menu\">\n-          <wicket:container wicket:id=\"list\"></wicket:container>\n-        </ul>\n-      </section>\n-    </aside>\n-    <div id=\"control\" name=\"control\" class=\"control-sidebar-bg inner-control-sidebar\" style=\"width: 245px;\"></div>\n-\n-    <wicket:fragment wicket:id=\"withChildren\">\n-      <li id=\"treeview\" name=\"treeview\" class=\"treeview\">\n-        <a href=\"#\" wicket:id=\"link\"><i class=\"fa fa-folder-o\">\n-          </i><span wicket:id=\"name\">[ITEM NAME]</span>\n-        </a>\n-        <a href=\"#\" class=\"angle\" wicket:id=\"angle\">\n-          <i class=\"fa fa-angle-left pull-right\"></i>\n-        </a>\n-        <ul wicket:id=\"subtree\" name=\"subtree\" class=\"treeview-menu\">\n-          <wicket:container wicket:id=\"list\"></wicket:container>\n-        </ul>\n-      </li>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"withoutChildren\">\n-      <li>\n-        <a name=\"label\" href=\"#\" wicket:id=\"link\">\n-          <i class=\"fa fa-leaf\"></i><span wicket:id=\"name\">[ITEM NAME]</span>\n-        </a>\n-      </li>\n-    </wicket:fragment>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"99f323abbc268c6dd4fbb7aeb899b4f02cccae79","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskExecutionDetails.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.properties?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -16,5 +16,5 @@\n # under the License.\n start=Start\n end=End\n-\n+status=Status\n execution.view=Result status of execution '${key}'"},{"sha":"3c525b7c1510f89fbc3e8c3f3b9fdd0e6588a18d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskExecutionDetails_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_it.properties?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -16,5 +16,5 @@\n # under the License.\n start=Start\n end=End\n-\n+status=Stato\n execution.view=Risultato dello stato dell'esecuzione '${key}'"},{"sha":"99f323abbc268c6dd4fbb7aeb899b4f02cccae79","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskExecutionDetails_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_pt_BR.properties?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -16,5 +16,5 @@\n # under the License.\n start=Start\n end=End\n-\n+status=Status\n execution.view=Result status of execution '${key}'"},{"sha":"ca324a80a8909ad8c4c80fa4cb84bf9db7db2423","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -306,8 +306,8 @@ public Response associate(final AssociationPatch patch) {\n             for (String resource : patch.getResources()) {\n                 result.getResults().put(resource,\n                         updated.getAny().getResources().contains(resource)\n-                        ? BulkActionResult.Status.FAILURE\n-                        : BulkActionResult.Status.SUCCESS);\n+                        ? BulkActionResult.Status.SUCCESS\n+                        : BulkActionResult.Status.FAILURE);\n             }\n         } else {\n             for (PropagationStatus propagationStatusTO : updated.getPropagationStatuses()) {"},{"sha":"eb2acbc34d7a18647ee9872da4f99f8a862752ae","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import java.io.Serializable;\n import java.lang.reflect.InvocationTargetException;\n import javax.servlet.ServletContext;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n@@ -35,7 +36,7 @@\n import org.apache.wicket.util.visit.IVisitor;\n import org.junit.Before;\n \n-public abstract class AbstractConsoleITCase<T> extends AbstractITCase {\n+public abstract class AbstractConsoleITCase extends AbstractITCase {\n \n     protected static final String KEY = \"key\";\n \n@@ -78,7 +79,8 @@ protected void doLogin(final String user, final String passwd) {\n         formTester.submit(\"submit\");\n     }\n \n-    protected Component findComponentByProp(final String property, final String searchPath, final T key) {\n+    protected <V extends Serializable> Component findComponentByProp(\n+            final String property, final String searchPath, final V key) {\n         Component component = wicketTester.getComponentFromLastRenderedPage(searchPath);\n \n         Component result = component.getPage()."},{"sha":"0e228db1bd5c3f252f70f08aa0235fbbf1356126","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractTypesITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -24,7 +24,7 @@\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n \n-public abstract class AbstractTypesITCase extends AbstractConsoleITCase<String> {\n+public abstract class AbstractTypesITCase extends AbstractConsoleITCase{\n \n     protected static final String PLAIN_DATATABLE_PATH = \"body:content:tabbedPanel:panel:\"\n             + \"accordionPanel:tabs:0:body:content:container:content:searchContainer:resultTable\";"},{"sha":"49b6d21418d6743492abe7ec66916635ab8c24fd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"added","additions":280,"deletions":0,"changes":280,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -0,0 +1,280 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Before;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class BulkActionITCase extends AbstractConsoleITCase {\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+    }\n+\n+    @Test\n+    public void usersBulkAction() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        final FormTester formTester = wicketTester.newFormTester(\"body:content:body:tabbedPanel:panel:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm\");\n+        assertNotNull(formTester);\n+\n+        formTester.select(\"checkgroup\", 1);\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:container:content:searchContainer:\"\n+                + \"resultTable:tablePanel:bulkActionLink\", Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:container:content:searchContainer:resultTable\"\n+                + \":bulkModal:form:content:content:container\", WebMarkupContainer.class);\n+\n+        assertNotNull(findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content:\"\n+                + \"searchContainer:resultTable:bulkModal:form:content:content:container:selectedObjects\", \"rossini\"));\n+    }\n+\n+    @Test\n+    public void userResourceBulkAction() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath()\n+                + \":cells:5:cell:panelManageResources:manageResourcesLink\");\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", WebMarkupContainer.class);\n+\n+        component = findComponentByProp(\"resourceName\",\n+                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", \"resource-csv\");\n+        assertNotNull(component);\n+\n+        final FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n+        assertNotNull(formTester);\n+\n+        formTester.select(\"checkgroup\", 1);\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n+                Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n+\n+        assertNotNull(findComponentByProp(\"resourceName\", \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:\"\n+                + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-csv\"));\n+    }\n+\n+    @Test\n+    public void userStatusBulkAction() {\n+        // suspend \n+\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        Component component = findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:5:cell:panelEnable:enableLink\");\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", WebMarkupContainer.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n+        assertNotNull(formTester);\n+\n+        formTester.select(\"checkgroup\", 2);\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n+                Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:\"\n+                + \"status:secondLevelContainer:second:container:actions:panelSuspend:suspendLink\",\n+                Constants.ON_CLICK);\n+\n+        wicketTester.assertLabel(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n+\n+        // re-activate\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+\n+        component = findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:container:content\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath() + \":cells:5:cell:panelEnable:enableLink\");\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", WebMarkupContainer.class);\n+\n+        formTester = wicketTester.newFormTester(\n+                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n+        assertNotNull(formTester);\n+\n+        formTester.select(\"checkgroup\", 2);\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n+                Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:\"\n+                + \"status:secondLevelContainer:second:container:actions:panelReactivate:reactivateLink\",\n+                Constants.ON_CLICK);\n+\n+        wicketTester.assertLabel(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n+    }\n+\n+    @Test\n+    public void groupResourceBulkAction() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+\n+        Component component = findComponentByProp(\"name\", \"body:content:body:tabbedPanel:panel:container:content\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"root\");\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath()\n+                + \":cells:4:cell:panelManageResources:manageResourcesLink\");\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", WebMarkupContainer.class);\n+\n+        component = findComponentByProp(\"resourceName\",\n+                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n+        assertNotNull(component);\n+\n+        final FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n+        assertNotNull(formTester);\n+\n+        formTester.select(\"checkgroup\", 1);\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n+                Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n+\n+        assertNotNull(findComponentByProp(\"resourceName\", \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:\"\n+                + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"ws-target-resource-1\"));\n+    }\n+\n+    @Test\n+    public void printerResourceBulkAction() {\n+        wicketTester.clickLink(\"body:realmsLI:realms\");\n+        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+\n+        Component component = findComponentByProp(\"key\", \"body:content:body:tabbedPanel:panel:container:content\"\n+                + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", 1L);\n+        assertNotNull(component);\n+\n+        wicketTester.clickLink(component.getPageRelativePath()\n+                + \":cells:3:cell:panelManageResources:manageResourcesLink\");\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", WebMarkupContainer.class);\n+\n+        component = findComponentByProp(\"resourceName\",\n+                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n+                + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n+        assertNotNull(component);\n+\n+        final FormTester formTester = wicketTester.newFormTester(\n+                \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:firstLevelContainer:\"\n+                + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n+        assertNotNull(formTester);\n+\n+        formTester.select(\"checkgroup\", 1);\n+\n+        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n+                Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\"body:content:body:tabbedPanel:panel:alternativeDefaultModal:form:content:status:\"\n+                + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n+\n+        assertNotNull(findComponentByProp(\"resourceName\", \"body:content:body:tabbedPanel:panel:alternativeDefaultModal:\"\n+                + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"ws-target-resource-1\"));\n+    }\n+\n+    @Test\n+    public void executeSyncTask() {\n+        wicketTester.clickLink(\"body:topologyLI:topology\");\n+        wicketTester.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n+        wicketTester.clickLink(\"body:toggle:togglePanelContainer:container:actions:propagation\");\n+\n+        final FormTester formTester = wicketTester.newFormTester(\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:container:\"\n+                + \"content:searchContainer:resultTable:tablePanel:groupForm\");\n+        assertNotNull(formTester);\n+\n+        formTester.select(\"checkgroup\", 0);\n+\n+        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+                + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n+                Constants.ON_CLICK);\n+\n+        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n+                + \"second:container:selectedObjects:body:rows:1:cells:1:cell\", Label.class);\n+    }\n+}"},{"sha":"a1f329c5b94d522b9c1ee60d0ba16d1c2bfe4277","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -27,7 +27,7 @@\n import org.junit.runners.MethodSorters;\n \n @FixMethodOrder(MethodSorters.JVM)\n-public class RealmsITCase extends AbstractConsoleITCase<String> {\n+public class RealmsITCase extends AbstractConsoleITCase {\n \n     @Before\n     public void login() {"},{"sha":"dae373ba79110dafde2e72e9d982643b0ab7ec34","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -31,7 +31,7 @@\n import org.junit.runners.MethodSorters;\n \n @FixMethodOrder(MethodSorters.JVM)\n-public class RolesITCase extends AbstractConsoleITCase<String> {\n+public class RolesITCase extends AbstractConsoleITCase {\n \n     private void createRole(final String name) {\n         wicketTester.clickLink(\"body:content:rolesPanel:container:content:add\");\n@@ -52,7 +52,7 @@ private void createRole(final String name) {\n \n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n         wicketTester.cleanupFeedbackMessages();\n-        \n+\n         wicketTester.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n     }\n "},{"sha":"a3bb92d95ebae4b7b29fc99ad45933120c9b8ded","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b5a10f49e659d6fc24e116d4c56307ac9721c9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=48b5a10f49e659d6fc24e116d4c56307ac9721c9","patch":"@@ -32,7 +32,7 @@\n import org.junit.runners.MethodSorters;\n \n @FixMethodOrder(MethodSorters.JVM)\n-public class SecurityQuestionsITCase extends AbstractConsoleITCase<String> {\n+public class SecurityQuestionsITCase extends AbstractConsoleITCase {\n \n     private void createRealm(final String name) {\n         wicketTester.clickLink(\"body:content:securityQuestionPanel:container:content:add\");\n@@ -88,11 +88,9 @@ public void update() {\n \n         assertNotNull(result);\n \n-        wicketTester.clickLink(\n-                result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n+        wicketTester.clickLink(result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:securityQuestionPanel\"\n-                + \":modal:form\");\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:securityQuestionPanel:modal:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 \"What's your favorite car?\");\n \n@@ -114,9 +112,8 @@ public void delete() {\n         assertNotNull(result);\n \n         wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n-                        result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n+        wicketTester.clickLink(wicketTester.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n \n         wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");"}]}