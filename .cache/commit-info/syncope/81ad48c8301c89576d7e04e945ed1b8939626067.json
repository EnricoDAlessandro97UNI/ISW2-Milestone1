{"sha":"81ad48c8301c89576d7e04e945ed1b8939626067","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgxYWQ0OGM4MzAxYzg5NTc2ZDdlMDRlOTQ1ZWQxYjg5Mzk2MjYwNjc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-07-07T08:54:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-07-07T08:54:30Z"},"message":"[SYNCOPE-531] Merge from 1_1_X\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_2_X@1608371 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"948dfeaeac89af428de1c2548f99f0f27005aff0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/948dfeaeac89af428de1c2548f99f0f27005aff0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/81ad48c8301c89576d7e04e945ed1b8939626067","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81ad48c8301c89576d7e04e945ed1b8939626067","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/81ad48c8301c89576d7e04e945ed1b8939626067","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81ad48c8301c89576d7e04e945ed1b8939626067/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ada16ad9afc7d0fac897148fd1dc178004b48a61","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ada16ad9afc7d0fac897148fd1dc178004b48a61","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ada16ad9afc7d0fac897148fd1dc178004b48a61"}],"stats":{"total":51,"additions":29,"deletions":22},"files":[{"sha":"75124c938cfaf449e96c736209280892f7e039ea","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":29,"deletions":22,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/81ad48c8301c89576d7e04e945ed1b8939626067/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/81ad48c8301c89576d7e04e945ed1b8939626067/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=81ad48c8301c89576d7e04e945ed1b8939626067","patch":"@@ -22,9 +22,7 @@\n import java.util.Date;\n import java.util.Iterator;\n import java.util.Set;\n-\n import javax.annotation.Resource;\n-\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n@@ -144,18 +142,17 @@ public Authentication authenticate(final Authentication authentication)\n                 }\n \n                 CAttr authStatuses = confDAO.find(\"authentication.statuses\");\n-                if (authStatuses != null) {\n-                    if (!authStatuses.getValuesAsStrings().contains(user.getStatus())) {\n-                        throw new DisabledException(\"User \" + user.getUsername() + \" not allowed to authenticate\");\n-                    }\n+                if (authStatuses != null && !authStatuses.getValuesAsStrings().contains(user.getStatus())) {\n+                    throw new DisabledException(\"User \" + user.getUsername() + \" not allowed to authenticate\");\n                 }\n \n                 authenticated = authenticate(user, authentication.getCredentials().toString());\n+\n+                updateLoginAttributes(user, authenticated);\n             }\n         }\n \n         UsernamePasswordAuthenticationToken token;\n-\n         if (authenticated) {\n             token = new UsernamePasswordAuthenticationToken(\n                     authentication.getPrincipal(),\n@@ -177,20 +174,7 @@ public Authentication authenticate(final Authentication authentication)\n \n             LOG.debug(\"User {} successfully authenticated, with roles {}\",\n                     authentication.getPrincipal(), token.getAuthorities());\n-\n-            if (user != null && confDAO.find(\"log.lastlogindate\", Boolean.toString(true)).\n-                    getValues().get(0).getBooleanValue()) {\n-\n-                user.setLastLoginDate(new Date());\n-                user.setFailedLogins(0);\n-                userDAO.save(user);\n-            }\n         } else {\n-            if (user != null) {\n-                user.setFailedLogins(user.getFailedLogins() + 1);\n-                userDAO.save(user);\n-            }\n-\n             auditManager.audit(\n                     AuditElements.EventCategoryType.REST,\n                     \"AuthenticationController\",\n@@ -210,6 +194,29 @@ public Authentication authenticate(final Authentication authentication)\n         return token;\n     }\n \n+    private void updateLoginAttributes(SyncopeUser user, boolean authenticated) {\n+        boolean userModified = false;\n+\n+        if (authenticated) {\n+            if (confDAO.find(\"log.lastlogindate\", Boolean.toString(true)).getValues().get(0).getBooleanValue()) {\n+                user.setLastLoginDate(new Date());\n+                userModified = true;\n+            }\n+\n+            if (user.getFailedLogins() != 0) {\n+                user.setFailedLogins(0);\n+                userModified = true;\n+            }\n+        } else {\n+            user.setFailedLogins(user.getFailedLogins() + 1);\n+            userModified = true;\n+        }\n+\n+        if (userModified) {\n+            userDAO.save(user);\n+        }\n+    }\n+\n     protected Set<ExternalResource> getPassthroughResources(final SyncopeUser user) {\n         Set<ExternalResource> result = null;\n \n@@ -244,7 +251,7 @@ protected Set<ExternalResource> getPassthroughResources(final SyncopeUser user)\n                 result.retainAll(global.getResources());\n             }\n         }\n-        \n+\n         if (result == null) {\n             result = Collections.emptySet();\n         }\n@@ -259,7 +266,7 @@ protected boolean authenticate(final SyncopeUser user, final String password) {\n         final AttributableUtil attrUtil = AttributableUtil.getInstance(AttributableType.USER);\n         for (Iterator<ExternalResource> itor = getPassthroughResources(user).iterator();\n                 itor.hasNext() && !authenticated;) {\n-            \n+\n             ExternalResource resource = itor.next();\n             String accountId = null;\n             try {"}]}