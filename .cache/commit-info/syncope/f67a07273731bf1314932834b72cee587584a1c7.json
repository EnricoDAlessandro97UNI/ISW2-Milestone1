{"sha":"f67a07273731bf1314932834b72cee587584a1c7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY2N2EwNzI3MzczMWJmMTMxNDkzMjgzNGI3MmNlZTU4NzU4NGExYzc=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-09T13:55:56Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-09T13:55:56Z"},"message":"SYNCOPE-33 #comment virtual attributes were not valued from TO\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1298826 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e188accf872970eb7349c75f216cbff9e7efedf1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e188accf872970eb7349c75f216cbff9e7efedf1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f67a07273731bf1314932834b72cee587584a1c7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f67a07273731bf1314932834b72cee587584a1c7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f67a07273731bf1314932834b72cee587584a1c7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f67a07273731bf1314932834b72cee587584a1c7/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"75f497793d3ac0d46af2c607a9fd7450169b7d5c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75f497793d3ac0d46af2c607a9fd7450169b7d5c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/75f497793d3ac0d46af2c607a9fd7450169b7d5c"}],"stats":{"total":77,"additions":55,"deletions":22},"files":[{"sha":"10bf6e993f46909226f8e742a11f726bb445e9d7","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=f67a07273731bf1314932834b72cee587584a1c7","patch":"@@ -160,7 +160,8 @@ private SyncopeUser getSyncopeUser(final Long userId)\n      */\n     public List<PropagationTask> getCreateTaskIds(\n             final WorkflowResult<Map.Entry<Long, Boolean>> wfResult,\n-            final String password, final List<AttributeTO> vAttrs)\n+            final String password, \n+            final List<AttributeTO> vAttrs)\n             throws NotFoundException {\n \n         return getCreateTaskIds(wfResult, password, vAttrs, null);"},{"sha":"76507c18666405d018c0660182f75b389e407a13","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=f67a07273731bf1314932834b72cee587584a1c7","patch":"@@ -153,9 +153,11 @@ public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n     value = \"/list\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public List<UserTO> list() {\n-        List<SyncopeUser> users = userDAO.findAll(EntitlementUtil.getRoleIds(\n-                EntitlementUtil.getOwnedEntitlementNames()));\n+        List<SyncopeUser> users = \n+                userDAO.findAll(EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()));\n+        \n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n+        \n         for (SyncopeUser user : users) {\n             userTOs.add(userDataBinder.getUserTO(user));\n         }"},{"sha":"743c2688725f023cb5cf305d478a4f370e93afcb","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":40,"deletions":16,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=f67a07273731bf1314932834b72cee587584a1c7","patch":"@@ -557,8 +557,7 @@ protected PropagationByResource fill(\n         // 5. derived attributes to be removed\n         for (String derivedAttributeToBeRemoved : attributableMod.getDerivedAttributesToBeRemoved()) {\n \n-            derivedSchema = getDerivedSchema(derivedAttributeToBeRemoved,\n-                    attributableUtil.derivedSchemaClass());\n+            derivedSchema = getDerivedSchema(derivedAttributeToBeRemoved, attributableUtil.derivedSchemaClass());\n \n             if (derivedSchema != null) {\n                 derivedAttribute = attributable.getDerivedAttribute(\n@@ -643,22 +642,37 @@ protected PropagationByResource fill(\n         return propByRes;\n     }\n \n+    /**\n+     * Add virtual attributes and specify values to be propagated.\n+     *\n+     * @param attributable attributable.\n+     * @param vAttrs virtual attributes to be added.\n+     * @param attributableUtil attributable util.\n+     */\n     public void fillVirtual(\n             final AbstractAttributable attributable,\n             final List<AttributeTO> vAttrs,\n             final AttributableUtil attributableUtil) {\n \n         for (AttributeTO attributeTO : vAttrs) {\n-            AbstractVirSchema virtualSchema =\n-                    getVirtualSchema(attributeTO.getSchema(), attributableUtil.virtualSchemaClass());\n+            AbstractVirAttr virtualAttribute = attributable.getVirtualAttribute(attributeTO.getSchema());\n \n-            if (virtualSchema != null) {\n-                AbstractVirAttr virtualAttribute = attributableUtil.newVirtualAttribute();\n-                virtualAttribute.setVirtualSchema(virtualSchema);\n-                virtualAttribute.setOwner(attributable);\n+            if (virtualAttribute == null) {\n+                AbstractVirSchema virtualSchema =\n+                        getVirtualSchema(attributeTO.getSchema(), attributableUtil.virtualSchemaClass());\n+\n+                if (virtualSchema != null) {\n+                    virtualAttribute = attributableUtil.newVirtualAttribute();\n+                    virtualAttribute.setVirtualSchema(virtualSchema);\n+                    virtualAttribute.setOwner(attributable);\n+                    attributable.addVirtualAttribute(virtualAttribute);\n+                    virtualAttribute.setValues(attributeTO.getValues());\n+                }\n+\n+            } else {\n                 virtualAttribute.setValues(attributeTO.getValues());\n-                attributable.addVirtualAttribute(virtualAttribute);\n             }\n+\n         }\n     }\n \n@@ -708,8 +722,7 @@ protected void fill(\n             compositeErrorException.addException(invalidValues);\n         }\n \n-        SyncopeClientException requiredValuesMissing =\n-                checkMandatory(attributableUtil, attributable);\n+        SyncopeClientException requiredValuesMissing = checkMandatory(attributableUtil, attributable);\n         if (!requiredValuesMissing.isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n@@ -719,8 +732,7 @@ protected void fill(\n         AbstractDerAttr derivedAttribute;\n         for (AttributeTO attributeTO : attributableTO.getDerivedAttributes()) {\n \n-            derivedSchema = getDerivedSchema(attributeTO.getSchema(),\n-                    attributableUtil.derivedSchemaClass());\n+            derivedSchema = getDerivedSchema(attributeTO.getSchema(), attributableUtil.derivedSchemaClass());\n \n             if (derivedSchema != null) {\n                 derivedAttribute = attributableUtil.newDerivedAttribute();\n@@ -730,11 +742,23 @@ protected void fill(\n             }\n         }\n \n-        // 3. virtual attributes: for users this is delegated to PropagationManager\n-        if (AttributableType.USER != attributableUtil.getType()) {\n-            fillVirtual(attributable, attributableTO.getVirtualAttributes(), attributableUtil);\n+        // 3. user virtual attributes will be valued by the propagation manager only (if needed).\n+        if (AttributableType.USER == attributableUtil.getType()) {\n+            for (AttributeTO vattrTO : attributableTO.getVirtualAttributes()) {\n+                AbstractVirSchema uVirSchema =\n+                        getVirtualSchema(vattrTO.getSchema(), attributableUtil.virtualSchemaClass());\n+\n+                if (uVirSchema != null) {\n+                    AbstractVirAttr vattr = attributableUtil.newVirtualAttribute();\n+                    vattr.setVirtualSchema(uVirSchema);\n+                    vattr.setOwner(attributable);\n+                    attributable.addVirtualAttribute(vattr);\n+                }\n+            }\n         }\n \n+        fillVirtual(attributable, attributableTO.getVirtualAttributes(), attributableUtil);\n+\n         // 4. resources\n         ExternalResource resource;\n         for (String resourceName : attributableTO.getResources()) {"},{"sha":"5ac00a14c0602a571d8cd1153f5a7d89d9c4c6cf","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=f67a07273731bf1314932834b72cee587584a1c7","patch":"@@ -162,8 +162,7 @@ public void create(final SyncopeUser user, final UserTO userTO)\n                 Membership membership = null;\n                 if (user.getId() != null) {\n                     membership = user.getMembership(role.getId()) == null\n-                            ? membershipDAO.find(user, role)\n-                            : user.getMembership(role.getId());\n+                            ? membershipDAO.find(user, role) : user.getMembership(role.getId());\n                 }\n                 if (membership == null) {\n                     membership = new Membership();"},{"sha":"ad508afda39ef1d595d5f6892e0aef32151a48a3","filename":"core/src/main/java/org/syncope/core/util/ConnObjectUtil.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f67a07273731bf1314932834b72cee587584a1c7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java?ref=f67a07273731bf1314932834b72cee587584a1c7","patch":"@@ -99,7 +99,8 @@ public UserTO getUserTO(final ConnectorObject obj, final SyncTask syncTask) {\n                     attributeTO = new AttributeTO();\n                     attributeTO.setSchema(mapping.getIntAttrName());\n \n-                    for (Object value : attribute == null ? Collections.EMPTY_LIST : attribute.getValue()) {\n+                    for (Object value : attribute == null || attribute.getValue() == null\n+                            ? Collections.EMPTY_LIST : attribute.getValue()) {\n                         attributeTO.addValue(value.toString());\n                     }\n \n@@ -115,6 +116,12 @@ public UserTO getUserTO(final ConnectorObject obj, final SyncTask syncTask) {\n                 case UserVirtualSchema:\n                     attributeTO = new AttributeTO();\n                     attributeTO.setSchema(mapping.getIntAttrName());\n+\n+                    for (Object value : attribute == null || attribute.getValue() == null\n+                            ? Collections.EMPTY_LIST : attribute.getValue()) {\n+                        attributeTO.addValue(value.toString());\n+                    }\n+\n                     userTO.addVirtualAttribute(attributeTO);\n                     break;\n "}]}