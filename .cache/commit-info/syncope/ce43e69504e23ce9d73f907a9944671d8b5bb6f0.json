{"sha":"ce43e69504e23ce9d73f907a9944671d8b5bb6f0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNlNDNlNjk1MDRlMjNjZTlkNzNmOTA3YTk5NDQ2NzFkOGI1YmI2ZjA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-02-13T15:03:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-02-13T15:03:36Z"},"message":"[SYNCOPE-641] Merging provided patch + test class","tree":{"sha":"dbdfa97f9af11f2abd51178d0963767e37370067","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dbdfa97f9af11f2abd51178d0963767e37370067"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ce43e69504e23ce9d73f907a9944671d8b5bb6f0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce43e69504e23ce9d73f907a9944671d8b5bb6f0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ce43e69504e23ce9d73f907a9944671d8b5bb6f0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5886fdc4585f16496cbccf028c04e08fe997c4ba","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5886fdc4585f16496cbccf028c04e08fe997c4ba","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5886fdc4585f16496cbccf028c04e08fe997c4ba"},{"sha":"a111a9e285afef7acd0fc4a6add34823a358c8d8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a111a9e285afef7acd0fc4a6add34823a358c8d8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a111a9e285afef7acd0fc4a6add34823a358c8d8"}],"stats":{"total":93,"additions":89,"deletions":4},"files":[{"sha":"a834ca8960fa87c298ea08db14c2393ce8d34b02","filename":"client/lib/pom.xml","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/client%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/client%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fpom.xml?ref=ce43e69504e23ce9d73f907a9944671d8b5bb6f0","patch":"@@ -62,6 +62,18 @@ under the License.\n       <artifactId>syncope-common-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-simple</artifactId>\n+      <version>${slf4j.version}</version>\n+      <scope>test</scope>\n+    </dependency>        \n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n   \n   <build>\n@@ -76,4 +88,4 @@ under the License.\n       </plugin>\n     </plugins>\n   </build>\n-</project>\n+</project>\n\\ No newline at end of file"},{"sha":"ca1c5d208455c653801aaace368482249104c4cd","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/RestClientFactoryBean.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientFactoryBean.java?ref=ce43e69504e23ce9d73f907a9944671d8b5bb6f0","patch":"@@ -33,7 +33,7 @@ public class RestClientFactoryBean extends JAXRSClientFactoryBean {\n      *\n      * @param <T> any service class\n      * @param serviceClass service class reference\n-     * @param mediaType XML or JSON are suppoorted\n+     * @param mediaType XML or JSON are supported\n      * @return anonymous service instance of the given reference class\n      */\n     public <T> T createServiceInstance(final Class<T> serviceClass, final MediaType mediaType) {\n@@ -45,7 +45,7 @@ public <T> T createServiceInstance(final Class<T> serviceClass, final MediaType\n      *\n      * @param <T> any service class\n      * @param serviceClass service class reference\n-     * @param mediaType XML or JSON are suppoorted\n+     * @param mediaType XML or JSON are supported\n      * @param username username for REST authentication\n      * @param password password for REST authentication\n      * @return anonymous service instance of the given reference class"},{"sha":"2034ce65a2b11c163e1f041230e86435a645d915","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=ce43e69504e23ce9d73f907a9944671d8b5bb6f0","patch":"@@ -85,7 +85,9 @@ public static OrderByClauseBuilder getOrderByClauseBuilder() {\n      * @return service instance of the given reference class\n      */\n     public <T> T getService(final Class<T> serviceClass) {\n-        return restClientFactory.createServiceInstance(serviceClass, mediaType, username, password);\n+        synchronized (restClientFactory) {\n+            return restClientFactory.createServiceInstance(serviceClass, mediaType, username, password);\n+        }\n     }\n \n     /**"},{"sha":"4657b2f0221f9c65c8ffc25a3b2b61cd23b8f4de","filename":"client/lib/src/test/java/org/apache/syncope/client/lib/ConcurrencyTest.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/client%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FConcurrencyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce43e69504e23ce9d73f907a9944671d8b5bb6f0/client%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FConcurrencyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FConcurrencyTest.java?ref=ce43e69504e23ce9d73f907a9944671d8b5bb6f0","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.lib;\n+\n+import static org.junit.Assert.fail;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.rest.api.service.ResourceService;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ConcurrencyTest {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ConcurrencyTest.class);\n+\n+    private static final SyncopeClient client =\n+            new SyncopeClientFactoryBean().setAddress(\"http://url\").create(\"username\", \"password\");\n+\n+    @Test\n+    public void multiThreadTest()\n+            throws InterruptedException {\n+\n+        for (int i = 0; i < 10000; i++) {\n+            Thread execution = new Thread(\"Th-\" + StringUtils.leftPad(String.valueOf(i), 5, '0')) {\n+\n+                @Override\n+                public void run() {\n+\n+                    try {\n+                        client.getService(ResourceService.class);\n+\n+                        LOG.info(getName() + \" completed successfully!\");\n+                    } catch (Exception e) {\n+                        LOG.error(getName() + \" did not complete\", e);\n+                    }\n+                }\n+            };\n+            execution.start();\n+        }\n+\n+        Thread.sleep(10000);\n+    }\n+\n+    @Test\n+    public void multiCallTest() {\n+        try {\n+            for (int i = 0; i < 10000; i++) {\n+                client.getService(ResourceService.class);\n+            }\n+        } catch (Exception e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+}"}]}