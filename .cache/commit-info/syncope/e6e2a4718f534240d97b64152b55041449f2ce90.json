{"sha":"e6e2a4718f534240d97b64152b55041449f2ce90","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU2ZTJhNDcxOGY1MzQyNDBkOTdiNjQxNTJiNTUwNDE0NDlmMmNlOTA=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-11-20T14:22:03Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-11-20T14:22:14Z"},"message":"[SYNCOPE-156] Added the management of AnyTypeClasses","tree":{"sha":"219f744ec08ede9c6bfa8fc58150569908774dfb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/219f744ec08ede9c6bfa8fc58150569908774dfb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e6e2a4718f534240d97b64152b55041449f2ce90","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e6e2a4718f534240d97b64152b55041449f2ce90","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e6e2a4718f534240d97b64152b55041449f2ce90","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e6e2a4718f534240d97b64152b55041449f2ce90/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"444182f724a4fc9a9f2985244f630aa30659e4c8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/444182f724a4fc9a9f2985244f630aa30659e4c8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/444182f724a4fc9a9f2985244f630aa30659e4c8"}],"stats":{"total":1001,"additions":881,"deletions":120},"files":[{"sha":"f77233e2f392416b7441cf84362e34a100bef609","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -84,11 +84,11 @@ public BasePage(final PageParameters parameters) {\n         WebMarkupContainer confULContainer = new WebMarkupContainer(getULContainerId(\"configuration\"));\n         confLIContainer.add(confULContainer);\n \n-        liContainer = new WebMarkupContainer(getLIContainerId(\"schemas\"));\n+        liContainer = new WebMarkupContainer(getLIContainerId(\"types\"));\n         confULContainer.add(liContainer);\n-        BookmarkablePageLink<Page> schemaLink = new BookmarkablePageLink<>(\"schemas\", Schemas.class);\n-//        MetaDataRoleAuthorizationStrategy.authorize(schemaLink, WebPage.ENABLE, StandardEntitlement.SCHEMA_LIST);\n-        liContainer.add(schemaLink);\n+        BookmarkablePageLink<Page> typesLink = new BookmarkablePageLink<>(\"types\", Types.class);\n+        MetaDataRoleAuthorizationStrategy.authorize(typesLink, WebPage.ENABLE, StandardEntitlement.SCHEMA_LIST);\n+        liContainer.add(typesLink);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"workflow\"));\n         confULContainer.add(liContainer);"},{"sha":"8c710b77f2177cf2f707d59e65c224a6ccebb329","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Types.java","status":"renamed","additions":103,"deletions":42,"changes":145,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -23,119 +23,180 @@\n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.AnyTypeClassModalPanel;\n+import org.apache.syncope.client.console.panels.AnyTypeClassesPanel;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.SchemasPanel;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.panel.EmptyPanel;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.syncope.client.console.panels.SchemaModalPanel;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.panel.EmptyPanel;\n \n-public class Schemas extends BasePage {\n+public class Types extends BasePage {\n \n     private static final long serialVersionUID = 8091922398776299403L;\n \n-    private final BaseModal<AbstractSchemaTO> modal;\n+    private final BaseModal<AbstractSchemaTO> schemaModal;\n+\n+    private final BaseModal<AnyTypeClassTO> anyTypeClassModal;\n+\n+    private final BaseModal<AnyTypeTO> anyTypeModal;\n+\n+    private final AjaxBootstrapTabbedPanel<ITab> tabbedPanel;\n+\n+    private enum Type {\n+        SCHEMA,\n+        ANYTYPECLASS,\n+        ANYTYPE,\n+        RELATIONSHIPTYPE;\n+    }\n \n-    public Schemas(final PageParameters parameters) {\n+    public Types(final PageParameters parameters) {\n         super(parameters);\n \n-        this.modal = new BaseModal<>(\"modal\");\n+        this.schemaModal = new BaseModal<>(\"schemaModal\");\n+        this.anyTypeClassModal = new BaseModal<>(\"anyTypeClassModal\");\n+        this.anyTypeModal = new BaseModal<>(\"anyTypeModal\");\n \n         final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n-        content.add(new Label(\"header\", \"AnyTypeClasses/Schemas\"));\n+        content.add(new Label(\"header\", \"Types\"));\n         content.setOutputMarkupId(true);\n-        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(getPageReference())));\n-        content.add(buildCreateSchemaLink());\n-        add(content);\n-\n-        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+        tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n+        content.add(tabbedPanel);\n \n-            private static final long serialVersionUID = 8804221891699487139L;\n+        final AjaxLink<Void> createSchemaLink =\n+                buildCreateLink(\"createSchema\", schemaModal, Type.SCHEMA);\n+        content.add(createSchemaLink);\n \n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                target.add();\n-                modal.show(false);\n+        if (SyncopeConsoleSession.get().owns(StandardEntitlement.SCHEMA_CREATE)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(createSchemaLink, ENABLE, StandardEntitlement.SCHEMA_CREATE);\n+        }\n \n-                if (((AbstractBasePage) Schemas.this.getPage()).isModalResult()) {\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                    feedbackPanel.refresh(target);\n-                    ((AbstractBasePage) Schemas.this.getPage()).setModalResult(false);\n-                }\n-            }\n-        });\n+        final AjaxLink<Void> createAnyTypeClassLink =\n+                buildCreateLink(\"createAnyTypeClass\", anyTypeClassModal, Type.ANYTYPECLASS);\n+        content.add(createAnyTypeClassLink);\n \n-        add(modal);\n+        if (SyncopeConsoleSession.get().owns(StandardEntitlement.ANYTYPECLASS_CREATE)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(\n+                    createSchemaLink, ENABLE, StandardEntitlement.ANYTYPECLASS_CREATE);\n+        }\n \n+        add(content);\n+        addWindowWindowClosedCallback(schemaModal);\n+        addWindowWindowClosedCallback(anyTypeClassModal);\n+        addWindowWindowClosedCallback(anyTypeModal);\n+        add(schemaModal);\n+        add(anyTypeClassModal);\n+        add(anyTypeModal);\n     }\n \n-    private List<ITab> buildTabList(final PageReference pageReference) {\n+    private List<ITab> buildTabList() {\n \n         final List<ITab> tabs = new ArrayList<>();\n \n-        tabs.add(new AbstractTab(new Model<>(\"AnyTypeClasses\")) {\n+        tabs.add(new AbstractTab(new Model<>(\"AnyTypes\")) {\n \n             private static final long serialVersionUID = -6815067322125799251L;\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-//                final AnyTypeClassesPanel objectClassesPanel =\n-//                        new AnyTypeClassesPanel(panelId, getPageReference(), false);\n-//                objectClassesPanel.setEnabled(false);\n-//                return objectClassesPanel;\n+                //return new AnyTypePanel(panelId, getPageReference(), anyTypeModal);\n                 return new EmptyPanel(panelId);\n             }\n         });\n \n+        tabs.add(new AbstractTab(new Model<>(\"AnyTypeClasses\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new AnyTypeClassesPanel(panelId, getPageReference(), anyTypeClassModal);\n+            }\n+        });\n+\n         tabs.add(new AbstractTab(new Model<>(\"Schemas\")) {\n \n             private static final long serialVersionUID = -6815067322125799251L;\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new SchemasPanel(panelId, getPageReference(), modal);\n+                return new SchemasPanel(panelId, getPageReference(), schemaModal);\n             }\n         });\n \n         return tabs;\n     }\n \n-    private AjaxLink<Void> buildCreateSchemaLink() {\n+    private AjaxLink<Void> buildCreateLink(final String label, final BaseModal<?> modal, final Type type) {\n \n-        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createSchemaLink\", getPageReference()) {\n+        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(label, getPageReference()) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             protected void onClickInternal(final AjaxRequestTarget target) {\n-                modal.header(new ResourceModel(\"createSchema\"));\n-\n-                final SchemaModalPanel panel = new SchemaModalPanel(modal, getPageReference(), true);\n-\n-                target.add(modal.setContent(panel));\n+                modal.header(new ResourceModel(label));\n+                target.add(modal.setContent(buildModalPanel(type)));\n                 modal.addSumbitButton();\n                 modal.show(true);\n             }\n         };\n \n-        if (SyncopeConsoleSession.get().owns(StandardEntitlement.SCHEMA_CREATE)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, StandardEntitlement.SCHEMA_CREATE);\n+        return createLink;\n+    }\n+\n+    private ModalPanel buildModalPanel(final Type type) {\n+        final ModalPanel panel;\n+        switch (type) {\n+            case ANYTYPECLASS:\n+                anyTypeClassModal.setFormModel(new AnyTypeClassTO());\n+                panel = new AnyTypeClassModalPanel(anyTypeClassModal, getPageReference(), true);\n+                break;\n+            case ANYTYPE:\n+            case RELATIONSHIPTYPE:\n+            case SCHEMA:\n+            default:\n+                schemaModal.setFormModel(new PlainSchemaTO());\n+                panel = new SchemaModalPanel(schemaModal, getPageReference(), true);\n         }\n+        return panel;\n+    }\n \n-        return createLink;\n+    private void addWindowWindowClosedCallback(final BaseModal<?> modal) {\n+        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                tabbedPanel.setSelectedTab(tabbedPanel.getSelectedTab());\n+                target.add(tabbedPanel);\n+                modal.show(false);\n+\n+                if (((AbstractBasePage) Types.this.getPage()).isModalResult()) {\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n+                    ((AbstractBasePage) Types.this.getPage()).setModalResult(false);\n+                }\n+            }\n+        });\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Schemas.java"},{"sha":"1b0206ebc306d0147ecca34d8e1db314077761ee","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassDetails.java","status":"added","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class AnyTypeClassDetails extends Panel {\n+\n+    private static final long serialVersionUID = 3321861543207340469L;\n+\n+    private final AnyTypeClassTO anyTypeClassTO;\n+\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    private final List<String> availablePlainSchemas = schemaRestClient.getPlainSchemaNames();\n+\n+    private final List<String> availableDerSchemas = schemaRestClient.getDerSchemaNames();\n+\n+    private final List<String> availableVirSchemas = schemaRestClient.getVirSchemaNames();\n+\n+    public AnyTypeClassDetails(final String id,\n+            final AnyTypeClassTO anyTypeClassTO, final boolean edit) {\n+        super(id);\n+\n+        this.anyTypeClassTO = anyTypeClassTO;\n+        buildAvailableSchemas(anyTypeClassTO.getKey());\n+\n+        final TransparentWebMarkupContainer container = new TransparentWebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        final AjaxPalettePanel<String> plainSchema =\n+                new AjaxPalettePanel.Builder<String>()\n+                .setAllowOrder(true)\n+                .setAllowMoveAll(true)\n+                .build(\"plainSchemas\",\n+                        new PropertyModel<List<String>>(this.anyTypeClassTO, \"plainSchemas\"),\n+                        new ListModel<>(availablePlainSchemas));\n+\n+        plainSchema.setOutputMarkupId(true);\n+        plainSchema.setEnabled(edit);\n+        container.add(plainSchema);\n+\n+        final AjaxPalettePanel<String> derSchema =\n+                new AjaxPalettePanel.Builder<String>()\n+                .setAllowOrder(true)\n+                .setAllowMoveAll(true)\n+                .build(\"derSchemas\",\n+                        new PropertyModel<List<String>>(this.anyTypeClassTO, \"derSchemas\"),\n+                        new ListModel<>(availableDerSchemas));\n+\n+        derSchema.setOutputMarkupId(true);\n+        derSchema.setEnabled(edit);\n+        container.add(derSchema);\n+\n+        final AjaxPalettePanel<String> virSchema =\n+                new AjaxPalettePanel.Builder<String>()\n+                .setAllowOrder(true)\n+                .setAllowMoveAll(true)\n+                .build(\"virSchemas\",\n+                        new PropertyModel<List<String>>(this.anyTypeClassTO, \"virSchemas\"),\n+                        new ListModel<>(availableVirSchemas));\n+\n+        virSchema.setOutputMarkupId(true);\n+        virSchema.setEnabled(edit);\n+        container.add(virSchema);\n+    }\n+\n+    private void buildAvailableSchemas(final String key) {\n+\n+        for (AnyTypeClassTO item : SyncopeConsoleSession.get().getService(AnyTypeClassService.class).list()) {\n+            if (key == null || !item.getKey().equals(key)) {\n+                availablePlainSchemas.removeAll(item.getPlainSchemas());\n+                availableDerSchemas.removeAll(item.getDerSchemas());\n+                availableVirSchemas.removeAll(item.getVirSchemas());\n+            }\n+        }\n+    }\n+}"},{"sha":"6df508fc57e5549fb755c76078a0254d194dbb96","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassModalPanel.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class AnyTypeClassModalPanel extends AbstractModalPanel {\n+\n+    private static final long serialVersionUID = 1086997609984272599L;\n+\n+    private final AnyTypeClassTO anyTypeClassTO;\n+\n+    private final boolean createFlag;\n+\n+    public AnyTypeClassModalPanel(\n+            final BaseModal<AnyTypeClassTO> modal,\n+            final PageReference pageRef,\n+            final boolean createFlag) {\n+        super(modal, pageRef);\n+\n+        this.anyTypeClassTO = modal.getFormModel();\n+        this.createFlag = createFlag;\n+\n+        final Form<AnyTypeClassTO> antTypeClassForm = new Form<>(\"form\");\n+        antTypeClassForm.setModel(new CompoundPropertyModel<>(anyTypeClassTO));\n+        antTypeClassForm.setOutputMarkupId(true);\n+\n+        final AjaxTextFieldPanel key =\n+                new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(anyTypeClassTO, \"key\"));\n+        key.addRequiredLabel();\n+        key.setEnabled(anyTypeClassTO.getKey() == null || anyTypeClassTO.getKey().isEmpty());\n+        antTypeClassForm.add(key);\n+\n+        antTypeClassForm.add(new AnyTypeClassDetails(\"details\", anyTypeClassTO, true));\n+        add(antTypeClassForm);\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+\n+        try {\n+            final AnyTypeClassTO updatedAnyTypeClassTO = AnyTypeClassTO.class.cast(form.getModelObject());\n+\n+            if (createFlag) {\n+                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).create(updatedAnyTypeClassTO);\n+            } else {\n+                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).update(updatedAnyTypeClassTO);\n+            }\n+\n+            if (pageRef.getPage() instanceof AbstractBasePage) {\n+                ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n+            }\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating or updating AnyTypeClass\", e);\n+            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            modal.getFeedbackPanel().refresh(target);\n+        }\n+    }\n+}"},{"sha":"28a9fab2a232c54a12f91842e831285a950f8e6d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":142,"deletions":2,"changes":144,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -18,15 +18,155 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.form.ListChoice;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class AnyTypeClassesPanel extends Panel {\n \n     private static final long serialVersionUID = -2356760296223908382L;\n \n-    public AnyTypeClassesPanel(final String id, final PageReference pageReference, final boolean unwraped) {\n+    private static final Logger LOG = LoggerFactory.getLogger(AnyTypeClassesPanel.class);\n+\n+    private final ListChoice<AnyTypeClassTO> anyTypeClasses;\n+\n+    private AnyTypeClassDetails anyTypeClassesDetails;\n+\n+    public AnyTypeClassesPanel(final String id, final PageReference pageRef, final BaseModal<AnyTypeClassTO> modal) {\n         super(id);\n+\n+        this.setOutputMarkupId(true);\n+\n+        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        anyTypeClasses = new ListChoice<AnyTypeClassTO>(\n+                \"anyTypeClasses\", new Model<AnyTypeClassTO>(),\n+                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).list()) {\n+\n+            private static final long serialVersionUID = 4022366881854379834L;\n+\n+            @Override\n+            protected CharSequence getDefaultChoice(final String selectedValue) {\n+                return null;\n+            }\n+        };\n+\n+        anyTypeClasses.setChoiceRenderer(new IChoiceRenderer<AnyTypeClassTO>() {\n+\n+            private static final long serialVersionUID = 1048000918946220007L;\n+\n+            @Override\n+            public Object getDisplayValue(final AnyTypeClassTO object) {\n+                return object.getKey();\n+            }\n+\n+            @Override\n+            public String getIdValue(final AnyTypeClassTO object, final int index) {\n+                return object.getKey();\n+            }\n+\n+            @Override\n+            public AnyTypeClassTO getObject(final String id,\n+                    final IModel<? extends List<? extends AnyTypeClassTO>> choices) {\n+                for (AnyTypeClassTO item : choices.getObject()) {\n+                    if (item.getKey().equals(id)) {\n+                        return item;\n+                    }\n+                }\n+                return null;\n+            }\n+        });\n+\n+        anyTypeClasses.setNullValid(true);\n+        container.add(anyTypeClasses);\n+\n+        updateAnyTypeClassDetails(new AnyTypeClassTO(), false);\n+        container.add(anyTypeClassesDetails);\n+\n+        anyTypeClasses.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                updateAnyTypeClassDetails(anyTypeClasses.getModelObject(), true);\n+                container.addOrReplace(anyTypeClassesDetails);\n+                target.add(container);\n+            }\n+        });\n+\n+        final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(pageRef);\n+        actionLinks.setDisableIndicator(true);\n+        actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                if (anyTypeClasses != null && anyTypeClasses.getModelObject() != null) {\n+                    modal.header(Model.of(anyTypeClasses.getModelObject().getKey()));\n+                    modal.setFormModel(anyTypeClasses.getModelObject());\n+                    modal.addSumbitButton();\n+                    modal.show(true);\n+                    target.add(modal.setContent(new AnyTypeClassModalPanel(modal, pageRef, false)));\n+                }\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPECLASS_UPDATE).addWithRoles(\n+                new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                try {\n+                    if (anyTypeClasses != null && anyTypeClasses.getModelObject() != null) {\n+                        SyncopeConsoleSession.get()\n+                                .getService(AnyTypeClassService.class).delete(anyTypeClasses.getModelObject().getKey());\n+                        anyTypeClasses.setModelObject(null);\n+                        anyTypeClasses.setChoices(SyncopeConsoleSession.get().getService(AnyTypeClassService.class).\n+                                list());\n+                        target.add(anyTypeClasses);\n+                        target.add(updateAnyTypeClassDetails(new AnyTypeClassTO(), true));\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n+                    }\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting AnyTypeClass\", e);\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                }\n+                ((AbstractBasePage) pageRef.getPage()).getFeedbackPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE);\n+\n+        container.add(actionLinks.build(\"editRemove\"));\n+    }\n+\n+    private Panel updateAnyTypeClassDetails(final AnyTypeClassTO anyTypeClassTO, final boolean visible) {\n+        anyTypeClassesDetails = new AnyTypeClassDetails(\"anyTypeClassesDetails\", anyTypeClassTO, false);\n+        anyTypeClassesDetails.setOutputMarkupId(true);\n+        anyTypeClassesDetails.setOutputMarkupPlaceholderTag(true);\n+        anyTypeClassesDetails.setVisible(visible);\n+        anyTypeClassesDetails.setEnabled(false);\n+        return anyTypeClassesDetails;\n     }\n-    \n }"},{"sha":"bbf73a7f3d18fe86f0cb182c3af0f148681ff473","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypePanel.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class AnyTypePanel extends Panel {\n+\n+    private static final long serialVersionUID = 3905038169553185171L;\n+\n+    public AnyTypePanel(final String id, final PageReference pageReference, final BaseModal<AnyTypeTO> modal) {\n+        super(id);\n+    }\n+}"},{"sha":"f82247196e3b5e40826334634bda7fa4c463676b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -90,7 +90,7 @@ private AbstractSchemaDetailsPanel getSchemaPanel(final String id,\n \n         if (createFlag) {\n             try {\n-                Class<? extends AbstractSchemaTO> schemaTOClass = schemaType.getToClass();\n+                final Class<? extends AbstractSchemaTO> schemaTOClass = schemaType.getToClass();\n                 modal.setFormModel((AbstractSchemaTO) schemaTOClass.newInstance());\n             } catch (InstantiationException | IllegalAccessException ex) {\n                 LOG.error(\"SchemaType not found\", ex);"},{"sha":"6792b9c931e7559531e8d1a4ac15b0ed9f1c8fd4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemasPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -121,7 +121,6 @@ public SchemasPanel(final String id, final PageReference pageReference, final Ba\n         final Collapsible collapsible = new Collapsible(\"collapsePanel\", buildTabList());\n         collapsible.setOutputMarkupId(true);\n         add(collapsible);\n-\n     }\n \n     private List<ITab> buildTabList() {"},{"sha":"33b04da8beef9a1c2e7518a291db7502927075b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":78,"deletions":16,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -18,11 +18,15 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n+import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n \n public class AjaxPalettePanel<T> extends AbstractFieldPanel<List<T>> {\n@@ -31,30 +35,38 @@\n \n     protected final Palette<T> palette;\n \n-    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices) {\n-        this(id, model, choices, false);\n-    }\n-\n-    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n-            final boolean allowOrder) {\n-\n-        this(id, model, choices, new SelectChoiceRenderer<T>(), allowOrder, false);\n-    }\n-\n-    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n-            final IChoiceRenderer<T> renderer, final boolean allowOrder, final boolean allowMoveAll) {\n+    public AjaxPalettePanel(final String id,\n+            final IModel<List<T>> model, final ListModel<T> choices,\n+            final IChoiceRenderer<T> renderer, final boolean allowOrder,\n+            final boolean allowMoveAll, final String availableLabel, final String selectedLabel) {\n \n         super(id, id, model);\n \n-        this.palette = createPalette(model, choices, renderer, allowOrder, allowMoveAll);\n+        this.palette = createPalette(model, choices, renderer, allowOrder, allowMoveAll, availableLabel, selectedLabel);\n         add(palette.setOutputMarkupId(true));\n         setOutputMarkupId(true);\n     }\n \n-    protected final Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n-            final IChoiceRenderer<T> renderer, final boolean allowOrder, final boolean allowMoveAll) {\n+    protected final Palette<T> createPalette(\n+            final IModel<List<T>> model, final ListModel<T> choices,\n+            final IChoiceRenderer<T> renderer,\n+            final boolean allowOrder, final boolean allowMoveAll,\n+            final String availableLabel, final String selectedLabel) {\n+\n+        return new NonI18nPalette<T>(\"paletteField\", model, choices, renderer, 8, allowOrder, allowMoveAll) {\n \n-        return new NonI18nPalette<>(\"paletteField\", model, choices, renderer, 8, allowOrder, allowMoveAll);\n+            private static final long serialVersionUID = -3074655279011678437L;\n+\n+            @Override\n+            protected Component newAvailableHeader(final String componentId) {\n+                return new Label(componentId, new ResourceModel(\"palette.available\", availableLabel));\n+            }\n+\n+            @Override\n+            protected Component newSelectedHeader(final String componentId) {\n+                return new Label(componentId, new ResourceModel(\"palette.selected\", selectedLabel));\n+            }\n+        };\n     }\n \n     @Override\n@@ -66,4 +78,54 @@ public AjaxPalettePanel<T> setModelObject(final List<T> object) {\n     public Collection<T> getModelCollection() {\n         return palette.getModelCollection();\n     }\n+\n+    public static class Builder<T extends Serializable> {\n+\n+        private IChoiceRenderer<T> renderer;\n+\n+        private boolean allowOrder;\n+\n+        private boolean allowMoveAll;\n+\n+        private String selectedLabel;\n+\n+        private String availableLabel;\n+\n+        public Builder() {\n+            this.allowMoveAll = false;\n+            this.allowOrder = false;\n+            this.renderer = new SelectChoiceRenderer<>();\n+        }\n+\n+        public Builder<T> setAllowOrder(final boolean allowOrder) {\n+            this.allowOrder = allowOrder;\n+            return this;\n+        }\n+\n+        public Builder<T> setAllowMoveAll(final boolean allowMoveAll) {\n+            this.allowMoveAll = allowMoveAll;\n+            return this;\n+        }\n+\n+        public Builder<T> setSelectedLabel(final String selectedLabel) {\n+            this.selectedLabel = selectedLabel;\n+            return this;\n+        }\n+\n+        public Builder<T> setAvailableLabel(final String availableLabel) {\n+            this.availableLabel = availableLabel;\n+            return this;\n+        }\n+\n+        public Builder<T> setRenderer(final IChoiceRenderer<T> renderer) {\n+            this.renderer = renderer;\n+            return this;\n+        }\n+\n+        public AjaxPalettePanel<T> build(\n+                final String id, final IModel<List<T>> model, final ListModel<T> choices) {\n+            return new AjaxPalettePanel<>(id, model,\n+                    choices, renderer, allowOrder, allowMoveAll, availableLabel, selectedLabel);\n+        }\n+    }\n }"},{"sha":"b705f5945eab9087a13c1e83e4f378f742465c5b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/NonI18nPalette.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import java.util.Collection;\n+import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n@@ -40,4 +41,14 @@ public NonI18nPalette(final String id,\n     protected boolean localizeDisplayValues() {\n         return false;\n     }\n+\n+    @Override\n+    protected Component newAvailableHeader(final String componentId) {\n+        return super.newAvailableHeader(componentId);\n+    }\n+\n+    @Override\n+    protected Component newSelectedHeader(final String componentId) {\n+        return super.newSelectedHeader(componentId);\n+    }   \n }"},{"sha":"6e612b6d0959b6d3e80520fa37010f2a2aa863e0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":23,"deletions":23,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -61,16 +61,17 @@ public <T extends AnyTO> AuxClasses(final T entityTO, final String... anyTypeCla\n                     ? UserTO.class.cast(entityTO).getMemberships()\n                     : AnyObjectTO.class.cast(entityTO).getMemberships();\n \n-            fragment.add(new AjaxPalettePanel<>(\n-                    \"groups\",\n-                    new ListModel<String>(CollectionUtils.collect(memberships,\n+            fragment.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true)\n+                    .build(\n+                            \"groups\",\n+                            new ListModel<String>(CollectionUtils.collect(memberships,\n                                     new Transformer<MembershipTO, String>() {\n \n-                                        @Override\n-                                        public String transform(final MembershipTO input) {\n-                                            return String.format(\"[%d] %s\", input.getRightKey(), input.getGroupName());\n-                                        }\n-                                    }, new ArrayList<String>())) {\n+                                @Override\n+                                public String transform(final MembershipTO input) {\n+                                    return String.format(\"[%d] %s\", input.getRightKey(), input.getGroupName());\n+                                }\n+                            }, new ArrayList<String>())) {\n \n                         private static final long serialVersionUID = 1L;\n \n@@ -94,38 +95,37 @@ public MembershipTO transform(final String input) {\n                                     }\n \n                                     return new MembershipTO.Builder().left(entityTO.getType(), entityTO.getKey()).\n-                                    group(groupKey, groupName).build();\n+                                            group(groupKey, groupName).build();\n                                 }\n                             }, memberships);\n                         }\n                     },\n-                    new ListModel<>(CollectionUtils.collect(groupRestClient.list(\n-                                            entityTO.getRealm(), -1, -1, new SortParam<>(\"name\", true), null),\n+                            new ListModel<>(CollectionUtils.collect(groupRestClient.list(\n+                                    entityTO.getRealm(), -1, -1, new SortParam<>(\"name\", true), null),\n                                     new Transformer<GroupTO, String>() {\n \n-                                        @Override\n-                                        public String transform(final GroupTO input) {\n-                                            return String.format(\"[%d] %s\", input.getKey(), input.getName());\n-                                        }\n-                                    }, new ArrayList<String>())),\n-                    true).setOutputMarkupId(true));\n+                                @Override\n+                                public String transform(final GroupTO input) {\n+                                    return String.format(\"[%d] %s\", input.getKey(), input.getName());\n+                                }\n+                            }, new ArrayList<String>()))).setOutputMarkupId(true));\n         }\n         add(fragment);\n \n         final List<String> current = Arrays.asList(anyTypeClass);\n \n-        final List<String> choices = new ArrayList<String>();\n+        final List<String> choices = new ArrayList<>();\n         for (AnyTypeClassTO aux : AnyTypeRestClient.getAllAnyTypeClass()) {\n             if (!current.contains(aux.getKey())) {\n                 choices.add(aux.getKey());\n             }\n         }\n \n-        add(new AjaxPalettePanel<>(\n-                \"auxClasses\",\n-                new PropertyModel<List<String>>(entityTO, \"auxClasses\"),\n-                new ListModel<>(choices),\n-                true).setOutputMarkupId(true));\n+        add(new AjaxPalettePanel.Builder<String>().\n+                setAllowOrder(true)\n+                .build(\"auxClasses\",\n+                        new PropertyModel<List<String>>(entityTO, \"auxClasses\"),\n+                        new ListModel<>(choices)).setOutputMarkupId(true));\n \n     }\n }"},{"sha":"86ad35fa258187aa3d5497accdd207e509160bac","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -37,30 +37,29 @@ public class Resources extends WizardStep {\n     public <T extends AnyTO> Resources(final T entityTO) {\n         this.setOutputMarkupId(true);\n \n-        add(new AjaxPalettePanel<>(\"resources\",\n+        add(new AjaxPalettePanel.Builder<String>().build(\"resources\",\n                 new PropertyModel<List<String>>(entityTO, \"resources\") {\n \n-                    private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 1L;\n \n-                    @Override\n-                    public List<String> getObject() {\n-                        return new ArrayList<>(entityTO.getResources());\n-                    }\n+            @Override\n+            public List<String> getObject() {\n+                return new ArrayList<>(entityTO.getResources());\n+            }\n+\n+            @Override\n+            public void setObject(final List<String> object) {\n+                entityTO.getResources().clear();\n+                entityTO.getResources().addAll(object);\n+            }\n+        }, new ListModel<>(CollectionUtils.collect(\n+                        ResourceRestClient.getAll(),\n+                        new Transformer<ResourceTO, String>() {\n \n                     @Override\n-                    public void setObject(final List<String> object) {\n-                        entityTO.getResources().clear();\n-                        entityTO.getResources().addAll(object);\n+                    public String transform(final ResourceTO input) {\n+                        return input.getKey();\n                     }\n-                },\n-                new ListModel<>(CollectionUtils.collect(\n-                                ResourceRestClient.getAll(),\n-                                new Transformer<ResourceTO, String>() {\n-\n-                                    @Override\n-                                    public String transform(final ResourceTO input) {\n-                                        return input.getKey();\n-                                    }\n-                                }, new ArrayList<String>()))).setOutputMarkupId(true));\n+                }, new ArrayList<String>()))).setOutputMarkupId(true));\n     }\n }"},{"sha":"e5f500b20f254565479b121c623e8ff7da5eccaa","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -38,16 +38,17 @@ public class Roles extends WizardStep {\n     public <T extends AnyTO> Roles(final UserTO entityTO) {\n         this.setOutputMarkupId(true);\n \n-        add(new AjaxPalettePanel<>(\"roles\",\n-                new PropertyModel<List<String>>(entityTO, \"roles\"),\n-                new ListModel<>(CollectionUtils.collect(\n+        add(new AjaxPalettePanel.Builder<String>()\n+                .build(\"roles\",\n+                        new PropertyModel<List<String>>(entityTO, \"roles\"),\n+                        new ListModel<>(CollectionUtils.collect(\n                                 RoleRestClient.getAll(),\n                                 new Transformer<RoleTO, String>() {\n \n-                                    @Override\n-                                    public String transform(final RoleTO input) {\n-                                        return input.getKey();\n-                                    }\n-                                }, new ArrayList<String>()))).setOutputMarkupId(true));\n+                            @Override\n+                            public String transform(final RoleTO input) {\n+                                return input.getKey();\n+                            }\n+                        }, new ArrayList<String>()))).setOutputMarkupId(true));\n     }\n }"},{"sha":"243ee5fd54c69ff7553df9451b511105dfc4e0db","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -116,7 +116,7 @@\n                 <li wicket:id=\"workflowLI\"><a href=\"#\" wicket:id=\"workflow\"><i class=\"fa fa-circle-o\"></i>Workflow</a></li>\n                 <li><a href=\"#\"><i class=\"fa fa-circle-o\"></i>Logs</a></li>\n                 <li><a href=\"#\"><i class=\"fa fa-circle-o\"></i>Layouts</a></li>\n-                <li wicket:id=\"schemasLI\"><a href=\"#\" wicket:id=\"schemas\"><i class=\"fa fa-circle-o\"></i><wicket:message key=\"types\"/></a></li>\n+                <li wicket:id=\"typesLI\"><a href=\"#\" wicket:id=\"types\"><i class=\"fa fa-circle-o\"></i><wicket:message key=\"types\"/></a></li>\n                 <li><a href=\"#\"><i class=\"fa fa-circle-o\"></i>Notifications</a></li>\n               </ul>\n             </li>"},{"sha":"3dc2364ed32cdeba679dd259145d3dffebbaf314","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Types.html","status":"renamed","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -29,12 +29,12 @@ <h3 class=\"box-title\">\n             <div class=\"box-tools pull-right\">\n               <ul class=\"nav navbar-nav actions\">\n                 <li>\n-                  <a wicket:message=\"title:createAnyTypeClass\"><!--                  <a wicket:id=\"createAnyTypeClassLink\">-->\n+                  <a wicket:message=\"title:createAnyTypeClass\" wicket:id=\"createAnyTypeClass\">\n                     <i class=\"glyphicon glyphicon-duplicate\"></i>\n                   </a>                  \n                 </li>\n                 <li>\n-                  <a wicket:message=\"title:createSchema\" wicket:id=\"createSchemaLink\">\n+                  <a wicket:message=\"title:createSchema\" wicket:id=\"createSchema\">\n                     <i class=\"glyphicon glyphicon-list-alt\"></i>\n                   </a>                  \n                 </li>\n@@ -49,6 +49,8 @@ <h3 class=\"box-title\">\n         </div>\n       </div>\n     </div>\n-      <div wicket:id=\"modal\"></div>\n+    <div wicket:id=\"schemaModal\"></div>\n+    <div wicket:id=\"anyTypeClassModal\"></div>\n+    <div wicket:id=\"anyTypeModal\"></div>\n   </wicket:extend>\n </html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schemas.html"},{"sha":"9defe372f953d8e177dc89963da28e4035c6cd33","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Types.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schemas.properties"},{"sha":"e9994ec7c9903b95e35e6b5cdc1fda5a3b09c694","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Types_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes_it.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schemas_it.properties"},{"sha":"1d42eb5f44e29f7a82354c0aea75fe452aad923b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Types_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes_pt_BR.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schemas_pt_BR.properties"},{"sha":"cfa9d7e5856e205a428a1615fa0f1754bc3ca26b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetails.html","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.html?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,57 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n+  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"container\">\n+      <div class=\"box\">\n+        <div class=\"box-header with-border\">\n+          <h3 class=\"box-title\"><wicket:message key=\"plainSchemas\"/></h3>\n+        </div>\n+        <div class=\"box-body\">\n+          <div id=\"group-forum\">\n+            <span wicket:id=\"plainSchemas\">[plainSchemas]</span>\n+          </div>\n+        </div>\n+      </div>\n+      <div class=\"box\">\n+        <div class=\"box-header with-border\">\n+          <h3 class=\"box-title\"><wicket:message key=\"derSchemas\"/></h3>\n+        </div>\n+        <div class=\"box-body\">\n+          <div id=\"group-forum\">\n+            <span wicket:id=\"derSchemas\">[derSchemas]</span>\n+          </div>\n+        </div>\n+      </div>\n+      <div class=\"box\">\n+        <div class=\"box-header with-border\">\n+          <h3 class=\"box-title\"><wicket:message key=\"virSchemas\"/></h3>\n+        </div>\n+        <div class=\"box-body\">\n+          <div id=\"group-forum\">\n+            <span wicket:id=\"virSchemas\">[virSchemas]</span>\n+          </div>\n+        </div>\n+      </div>\n+    </span>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"835d123a42526fb2af9dc06c2c00e99df3236460","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetails.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+plainSchemas=Plain Schemas\n+derSchemas=Derived Schemas\n+virSchemas=Virtual Schemas"},{"sha":"835d123a42526fb2af9dc06c2c00e99df3236460","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetails_it.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails_it.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+plainSchemas=Plain Schemas\n+derSchemas=Derived Schemas\n+virSchemas=Virtual Schemas"},{"sha":"835d123a42526fb2af9dc06c2c00e99df3236460","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetails_pt_BR.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails_pt_BR.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+plainSchemas=Plain Schemas\n+derSchemas=Derived Schemas\n+virSchemas=Virtual Schemas"},{"sha":"ea82eb37994a5100331cbaa52e64b5bb030a44a2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassModalPanel.html","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.html?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,32 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <form wicket:id=\"form\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"key\">[key]</span>\n+        </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"details\">[details]</span>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"0fec0c78cd61d3547c3b9319ac8285d6f5df012a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.html","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.html?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,56 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n+  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"container\">\n+        <div class=\"col-md-4\">\n+          <div class=\"box\">\n+            <div class=\"box-header with-border\">\n+              <h3 class=\"box-title\"><wicket:message key=\"anyTypeClasses\"/></h3>\n+            </div>\n+            <div class=\"box-body\">\n+              <div class=\"row\">\n+                <div class=\"col-md-8\">\n+                  <div class=\"form-group\">\n+                    <label><wicket:message key=\"select\"/></label>\n+                    <select wicket:id=\"anyTypeClasses\" class=\"form-control\"></select>\n+                  </div>\n+                </div>\n+                <div class=\"col-md-1\" style=\"padding-top: 20px\">\n+                  <div class=\"form-group\">\n+                    <div id=\"actionButtons\" style=\"padding-top: 5px;\">\n+                      <span  wicket:id=\"editRemove\"/>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <div class=\"col-md-8\" style=\"float:right\">\n+          <span wicket:id=\"anyTypeClassesDetails\">[anyTypeClassesDetails]</span>\n+        </div>\n+      </span>\n+    </wicket:panel>\n+  </body>\n+</html>\n\\ No newline at end of file"},{"sha":"6438ab9bc126217e233708c32f9e9438ccc2f410","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+select=Select\n+\n+anyTypeClasses=AnyTypeClasses"},{"sha":"8b1b5196821be8b339788ad149af99ad0d9e11f9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassesPanel_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_it.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+select=Seleziona\n+\n+anyTypeClasses=AnyTypeClasses"},{"sha":"a47ed9b626e4598925560577e63203b6fe2e980d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassesPanel_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e2a4718f534240d97b64152b55041449f2ce90/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_pt_BR.properties?ref=e6e2a4718f534240d97b64152b55041449f2ce90","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+select=Selecionar\n+\n+anyTypeClasses=AnyTypeClasses"}]}