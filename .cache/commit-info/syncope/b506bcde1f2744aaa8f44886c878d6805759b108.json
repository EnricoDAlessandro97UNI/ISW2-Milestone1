{"sha":"b506bcde1f2744aaa8f44886c878d6805759b108","node_id":"C_kwDOJfYA1toAKGI1MDZiY2RlMWYyNzQ0YWFhOGY0NDg4NmM4NzhkNjgwNTc1OWIxMDg","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2023-03-03T12:59:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2023-03-04T07:05:02Z"},"message":"[SYNCOPE-1737] Managing releaseAttrs via DefaultAttrReleasePolicyConf (#418)","tree":{"sha":"2a8a40106ee5e9109f057b166ca9d06a9138b521","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2a8a40106ee5e9109f057b166ca9d06a9138b521"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b506bcde1f2744aaa8f44886c878d6805759b108","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b506bcde1f2744aaa8f44886c878d6805759b108","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b506bcde1f2744aaa8f44886c878d6805759b108","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b506bcde1f2744aaa8f44886c878d6805759b108/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fda2d388bfda2b82df13ea3d5376702d212a1b9b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fda2d388bfda2b82df13ea3d5376702d212a1b9b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fda2d388bfda2b82df13ea3d5376702d212a1b9b"}],"stats":{"total":614,"additions":169,"deletions":445},"files":[{"sha":"72a9bf6592a683b031f0e6e85e0b10bf240c3c63","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyAttrsDirectoryPanel.java","status":"removed","additions":0,"deletions":142,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fda2d388bfda2b82df13ea3d5376702d212a1b9b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fda2d388bfda2b82df13ea3d5376702d212a1b9b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsDirectoryPanel.java?ref=fda2d388bfda2b82df13ea3d5376702d212a1b9b","patch":"@@ -1,142 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.policies;\n-\n-import java.util.List;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.AMConstants;\n-import org.apache.syncope.client.console.panels.AttrListDirectoryPanel;\n-import org.apache.syncope.client.console.rest.PolicyRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n-import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n-import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n-import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.apache.syncope.common.lib.types.PolicyType;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.model.IModel;\n-import org.danekja.java.util.function.serializable.SerializableFunction;\n-\n-public class AccessPolicyAttrsDirectoryPanel extends AttrListDirectoryPanel {\n-\n-    private static final long serialVersionUID = 33604877627114L;\n-\n-    private final BaseModal<AccessPolicyTO> wizardModal;\n-\n-    private final IModel<AccessPolicyTO> accessPolicyModel;\n-\n-    private final SerializableFunction<DefaultAccessPolicyConf, List<Attr>> attrsAccessor;\n-\n-    public AccessPolicyAttrsDirectoryPanel(\n-            final String id,\n-            final BaseModal<AccessPolicyTO> wizardModal,\n-            final IModel<AccessPolicyTO> model,\n-            final SerializableFunction<DefaultAccessPolicyConf, List<Attr>> attrsAccessor,\n-            final PageReference pageRef) {\n-\n-        super(id, pageRef, false);\n-\n-        this.wizardModal = wizardModal;\n-        this.accessPolicyModel = model;\n-        this.attrsAccessor = attrsAccessor;\n-\n-        setOutputMarkupId(true);\n-\n-        enableUtilityButton();\n-        setFooterVisibility(false);\n-\n-        addNewItemPanelBuilder(\n-                new AccessPolicyAttrsWizardBuilder(model.getObject(), attrsAccessor, new Attr(), pageRef), true);\n-\n-        initResultTable();\n-    }\n-\n-    @Override\n-    protected ActionsPanel<Attr> getActions(final IModel<Attr> model) {\n-        ActionsPanel<Attr> panel = super.getActions(model);\n-\n-        panel.add(new ActionLink<>() {\n-\n-            private static final long serialVersionUID = -3722207913631435501L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n-                try {\n-                    attrsAccessor.apply((DefaultAccessPolicyConf) accessPolicyModel.getObject().getConf()).\n-                            remove(model.getObject());\n-                    PolicyRestClient.update(PolicyType.ACCESS, accessPolicyModel.getObject());\n-\n-                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                    target.add(container);\n-                } catch (SyncopeClientException e) {\n-                    LOG.error(\"While updating {}\", accessPolicyModel.getObject().getKey(), e);\n-                    SyncopeConsoleSession.get().onException(e);\n-                }\n-                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }, ActionLink.ActionType.DELETE, IdRepoEntitlement.POLICY_UPDATE, true);\n-\n-        return panel;\n-    }\n-\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof ExitEvent) {\n-            AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n-            wizardModal.close(target);\n-        } else if (event.getPayload() instanceof AjaxWizard.EditItemActionEvent) {\n-            @SuppressWarnings(\"unchecked\")\n-            AjaxWizard.EditItemActionEvent<?> payload = (AjaxWizard.EditItemActionEvent<?>) event.getPayload();\n-            payload.getTarget().ifPresent(actionTogglePanel::close);\n-        }\n-        super.onEvent(event);\n-    }\n-\n-    @Override\n-    protected AttrListProvider dataProvider() {\n-        return new AccessPolicyAttrsProvider(rows);\n-    }\n-\n-    @Override\n-    protected String paginatorRowsKey() {\n-        return AMConstants.PREF_ACCESS_POLICY_CONF_ATTRS_PAGINATOR_ROWS;\n-    }\n-\n-    protected final class AccessPolicyAttrsProvider extends AttrListProvider {\n-\n-        private static final long serialVersionUID = -185944053385660794L;\n-\n-        private AccessPolicyAttrsProvider(final int paginatorRows) {\n-            super(paginatorRows);\n-        }\n-\n-        @Override\n-        protected List<Attr> list() {\n-            return attrsAccessor.apply((DefaultAccessPolicyConf) accessPolicyModel.getObject().getConf());\n-        }\n-    }\n-}"},{"sha":"a9029e9008145d76b34a2d252fa69ee453407ac7","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyAttrsWizardBuilder.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fda2d388bfda2b82df13ea3d5376702d212a1b9b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fda2d388bfda2b82df13ea3d5376702d212a1b9b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyAttrsWizardBuilder.java?ref=fda2d388bfda2b82df13ea3d5376702d212a1b9b","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.policies;\n-\n-import java.io.Serializable;\n-import java.util.List;\n-import org.apache.syncope.client.console.rest.PolicyRestClient;\n-import org.apache.syncope.client.console.wizards.AttrWizardBuilder;\n-import org.apache.syncope.common.lib.Attr;\n-import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n-import org.apache.syncope.common.lib.policy.DefaultAccessPolicyConf;\n-import org.apache.syncope.common.lib.types.PolicyType;\n-import org.apache.wicket.PageReference;\n-import org.danekja.java.util.function.serializable.SerializableFunction;\n-\n-public class AccessPolicyAttrsWizardBuilder extends AttrWizardBuilder {\n-\n-    private static final long serialVersionUID = 33625775269155L;\n-\n-    private final AccessPolicyTO accessPolicy;\n-\n-    private final SerializableFunction<DefaultAccessPolicyConf, List<Attr>> attrsAccessor;\n-\n-    public AccessPolicyAttrsWizardBuilder(\n-            final AccessPolicyTO accessPolicy,\n-            final SerializableFunction<DefaultAccessPolicyConf, List<Attr>> attrsAccessor,\n-            final Attr attr,\n-            final PageReference pageRef) {\n-\n-        super(attr, pageRef);\n-        this.accessPolicy = accessPolicy;\n-        this.attrsAccessor = attrsAccessor;\n-    }\n-\n-    @Override\n-    protected Serializable onApplyInternal(final Attr modelObject) {\n-        attrsAccessor.apply((DefaultAccessPolicyConf) accessPolicy.getConf()).\n-                removeIf(p -> modelObject.getSchema().equals(p.getSchema()));\n-        attrsAccessor.apply((DefaultAccessPolicyConf) accessPolicy.getConf()).add(modelObject);\n-\n-        PolicyRestClient.update(PolicyType.ACCESS, accessPolicy);\n-\n-        return null;\n-    }\n-}"},{"sha":"abb8ec28f5897d9648838d62d2c3a5735554f055","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyModalPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyModalPanel.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -38,7 +38,6 @@ public class AccessPolicyModalPanel extends AbstractModalPanel<AccessPolicyTO> {\n \n     private final IModel<AccessPolicyTO> model;\n \n-    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public AccessPolicyModalPanel(\n             final BaseModal<AccessPolicyTO> modal,\n             final IModel<AccessPolicyTO> model,"},{"sha":"a3a7ae2ebea918fcf2dcf1325cd137b6408965d1","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AttrReleasePolicyModalPanel.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxGridFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n@@ -69,6 +70,10 @@ public AttrReleasePolicyModalPanel(\n         super(modal, pageRef);\n         this.model = model;\n \n+        add(new AjaxGridFieldPanel<>(\n+                \"releaseAttrs\", \"releaseAttrs\",\n+                new PropertyModel<>(model.getObject().getConf(), \"releaseAttrs\")));\n+\n         AjaxTextFieldPanel allowedAttr = new AjaxTextFieldPanel(\"panel\", \"allowedAttrs\", new Model<>());\n         add(new MultiFieldPanel.Builder<String>(\n                 new PropertyModel<>(model.getObject().getConf(), \"allowedAttrs\")).build("},{"sha":"38daa422e49d95d00c0d0aa104f4994b7749a692","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/policies/AttrReleasePolicyModalPanel.html","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyModalPanel.html?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -18,6 +18,9 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"releaseAttrs\"/>\n+    </div>\n     <div class=\"form-group\">\n       <span wicket:id=\"allowedAttrs\"/>\n     </div>"},{"sha":"c175b20213674782776a0e6dc2a27a705e412f21","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/ConnectorDataProvider.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnectorDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnectorDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConnectorDataProvider.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -23,7 +23,6 @@\n import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -85,8 +84,8 @@ public Iterator<ConnInstanceTO> iterator(final long first, final long count) {\n             LOG.error(\"While searching\", e);\n             SyncopeConsoleSession.get().onException(e);\n \n-            Optional<AjaxRequestTarget> target = RequestCycle.get().find(AjaxRequestTarget.class);\n-            target.ifPresent(t -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(t));\n+            RequestCycle.get().find(AjaxRequestTarget.class).\n+                    ifPresent(t -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(t));\n         }\n \n         SortParam<String> sortParam = getSort();"},{"sha":"bd59e2b2c84e9c7bcaf70bbace81a21f9a2b34b1","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/ResourceDataProvider.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceDataProvider.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -19,11 +19,9 @@\n package org.apache.syncope.client.console.commons;\n \n import java.io.Serializable;\n-import java.util.Collections;\n import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -67,7 +65,7 @@ public ResourceDataProvider(\n \n     @Override\n     public Iterator<ResourceTO> iterator(final long first, final long count) {\n-        List<ResourceTO> result = Collections.emptyList();\n+        List<ResourceTO> result = List.of();\n \n         try {\n             currentPage = ((int) first / paginatorRows);\n@@ -85,9 +83,8 @@ public Iterator<ResourceTO> iterator(final long first, final long count) {\n             LOG.error(\"While searching\", e);\n             SyncopeConsoleSession.get().onException(e);\n \n-            Optional<AjaxRequestTarget> target = RequestCycle.get().find(AjaxRequestTarget.class);\n-            target.ifPresent(ajaxRequestTarget\n-                    -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(ajaxRequestTarget));\n+            RequestCycle.get().find(AjaxRequestTarget.class).\n+                    ifPresent(t -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(t));\n         }\n \n         SortParam<String> sortParam = getSort();\n@@ -137,7 +134,7 @@ public long size() {\n             SyncopeConsoleSession.get().onException(e);\n \n             RequestCycle.get().find(AjaxRequestTarget.class).\n-                    ifPresent(target -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target));\n+                    ifPresent(t -> ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(t));\n         }\n \n         return result;"},{"sha":"2d62d4c3470ac7a872ee62b9b90238bd01489a36","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGridFieldPanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -37,21 +37,21 @@\n \n public class AjaxGridFieldPanel<K, V, S> extends Panel {\n \n-    private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 7589570522964677729L;\n \n     public AjaxGridFieldPanel(final String id, final String name, final IModel<Map<K, V>> model) {\n         super(id, model);\n \n         add(new Label(AbstractFieldPanel.LABEL, new ResourceModel(name, name)));\n \n         add(new AjaxGrid<>(\n-            \"grid\",\n-            getColumns(),\n-            new EditableListDataProvider<>(model.getObject().entrySet().stream().\n-                map(entry -> MutablePair.of(entry.getKey(), entry.getValue())).\n-                collect(Collectors.toList())), 10) {\n+                \"grid\",\n+                getColumns(),\n+                new EditableListDataProvider<>(model.getObject().entrySet().stream().\n+                        map(entry -> MutablePair.of(entry.getKey(), entry.getValue())).\n+                        collect(Collectors.toList())), 10) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = -1315456128897492459L;\n \n             @Override\n             protected boolean displayHeader() {"},{"sha":"c44531d1c43425e0359e4e23e3d070b995baf3b9","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -250,14 +250,12 @@ public void setCheckAvailability(final CheckAvailability check) {\n         // used to perform selectable enabling check condition\n         this.check.setObject(check);\n \n-        Optional<AjaxRequestTarget> target = RequestCycle.get().find(AjaxRequestTarget.class);\n-        if (target.isPresent()) {\n+        RequestCycle.get().find(AjaxRequestTarget.class).ifPresent(t -> {\n             // reload group selector\n-            target.get().add(\n-                    groupSelector.setVisible(check == CheckAvailability.AVAILABLE), groupSelector.getMarkupId());\n+            t.add(groupSelector.setVisible(check == CheckAvailability.AVAILABLE), groupSelector.getMarkupId());\n             // reload the list view panel\n-            target.get().add(ListViewPanel.this, getMarkupId());\n-        }\n+            t.add(ListViewPanel.this, getMarkupId());\n+        });\n     }\n \n     protected abstract Component getValueComponent(String key, T bean);"},{"sha":"0c4e2d0c6ca5d46d4433c5d24e23c1a28fd07966","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.properties?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -48,3 +48,4 @@ fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n accessPolicyConf.title=Access Policy Configuration\n+releaseAttrs=Attributes to Release"},{"sha":"3775e156891506835ce85207155ae93ac7f0dfbd","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_fr_CA.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_fr_CA.properties?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -48,3 +48,4 @@ fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n accessPolicyConf.title=Access Policy Configuration\n+releaseAttrs=Attributes to Release"},{"sha":"05615626b763347fda15c9da6983c7c16925242d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_it.properties?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -48,3 +48,4 @@ fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configurazione\n accessPolicyConf.title=Configurazione Accesso\n+releaseAttrs=Attributi da Rilasciare"},{"sha":"7e799cd8a9e17f8a9788baf0dcf6a70b8d5f42d9","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ja.properties?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -48,3 +48,4 @@ fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n accessPolicyConf.title=Access Policy Configuration\n+releaseAttrs=Attributes to Release"},{"sha":"32740d406a63bc56340e9f3ba8b0cbfca6bfb23d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_pt_BR.properties?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -48,3 +48,4 @@ fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n accessPolicyConf.title=Access Policy Configuration\n+releaseAttrs=Attributes to Release"},{"sha":"895e24d1ff81427808d4056d58746e09d1179e6a","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/policies/PolicyDirectoryPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel_ru.properties?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -49,3 +49,4 @@ fetchAroundProvisioning=Fetch Around Provisioning\n updateDelta=Update Delta\n conf=Configuration\n accessPolicyConf.title=Access Policy Configuration\n+releaseAttrs=Attributes to Release"},{"sha":"e99b36a7cf3bf58960298af65a805db4b8e9f410","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/attr/JDBCAttrRepoConf.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FJDBCAttrRepoConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FJDBCAttrRepoConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FJDBCAttrRepoConf.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -76,16 +76,6 @@ public enum QueryType {\n      */\n     private final List<String> username = new ArrayList<>(0);\n \n-    /**\n-     * Map of attributes to fetch from the database.\n-     * Attributes are defined using a key-value structure\n-     * where CAS allows the attribute name/key to be renamed virtually\n-     * to a different attribute. The key is the attribute fetched\n-     * from the data source and the value is the attribute name CAS should\n-     * use for virtual renames.\n-     */\n-    private final Map<String, String> attributes = new HashMap<>(0);\n-\n     /**\n      * Collection of attributes, used to build the SQL query, that should go through\n      * a case canonicalization process defined as {@code key->value}.\n@@ -139,10 +129,6 @@ public List<String> getUsername() {\n         return username;\n     }\n \n-    public Map<String, String> getAttributes() {\n-        return attributes;\n-    }\n-\n     public List<String> getCaseInsensitiveQueryAttributes() {\n         return caseInsensitiveQueryAttributes;\n     }"},{"sha":"d1528a4e511457320c1c1d7ae84a44da8e6986fd","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/attr/LDAPAttrRepoConf.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FLDAPAttrRepoConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FLDAPAttrRepoConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fattr%2FLDAPAttrRepoConf.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -27,16 +27,6 @@ public class LDAPAttrRepoConf extends AbstractLDAPConf implements AttrRepoConf {\n \n     private static final long serialVersionUID = -471527731042579422L;\n \n-    /**\n-     * Map of attributes to fetch from the database.\n-     * Attributes are defined using a key-value structure\n-     * where CAS allows the attribute name/key to be renamed virtually\n-     * to a different attribute. The key is the attribute fetched\n-     * from the data source and the value is the attribute name CAS should\n-     * use for virtual renames.\n-     */\n-    private final Map<String, String> attributes = new HashMap<>(0);\n-\n     /**\n      * Whether all existing attributes should be passed\n      * down to the query builder map and be used in the construction\n@@ -59,10 +49,6 @@ public void setUseAllQueryAttributes(final boolean useAllQueryAttributes) {\n         this.useAllQueryAttributes = useAllQueryAttributes;\n     }\n \n-    public Map<String, String> getAttributes() {\n-        return attributes;\n-    }\n-\n     public Map<String, String> getQueryAttributes() {\n         return queryAttributes;\n     }"},{"sha":"628a659fbddff00b156399445baf19b7f71b5f40","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/JDBCAuthModuleConf.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FJDBCAuthModuleConf.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import java.util.ArrayList;\n-import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.lib.AbstractJDBCConf;\n import org.apache.syncope.common.lib.to.AuthModuleTO;\n@@ -43,11 +41,6 @@ public class JDBCAuthModuleConf extends AbstractJDBCConf implements AuthModuleCo\n      */\n     private String fieldDisabled;\n \n-    /**\n-     * List of column names to fetch as user attributes.\n-     */\n-    private final List<String> principalAttributeList = new ArrayList<>();\n-\n     public String getFieldPassword() {\n         return fieldPassword;\n     }\n@@ -72,10 +65,6 @@ public void setFieldDisabled(final String fieldDisabled) {\n         this.fieldDisabled = fieldDisabled;\n     }\n \n-    public List<String> getPrincipalAttributeList() {\n-        return principalAttributeList;\n-    }\n-\n     @Override\n     public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n         return mapper.map(authModule, this);"},{"sha":"2f131b7c47558ae148cd5aea7778b1b1a4c2875a","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/auth/LDAPAuthModuleConf.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fauth%2FLDAPAuthModuleConf.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.common.lib.auth;\n \n-import java.util.ArrayList;\n-import java.util.List;\n import java.util.Map;\n import org.apache.syncope.common.lib.AbstractLDAPConf;\n import org.apache.syncope.common.lib.to.AuthModuleTO;\n@@ -35,11 +33,6 @@ public class LDAPAuthModuleConf extends AbstractLDAPConf implements AuthModuleCo\n      */\n     private String userIdAttribute;\n \n-    /**\n-     * List of attribute names to fetch as user attributes.\n-     */\n-    private final List<String> principalAttributeList = new ArrayList<>();\n-\n     public String getUserIdAttribute() {\n         return userIdAttribute;\n     }\n@@ -48,10 +41,6 @@ public void setUserIdAttribute(final String userIdAttribute) {\n         this.userIdAttribute = userIdAttribute;\n     }\n \n-    public List<String> getPrincipalAttributeList() {\n-        return principalAttributeList;\n-    }\n-\n     @Override\n     public Map<String, Object> map(final AuthModuleTO authModule, final Mapper mapper) {\n         return mapper.map(authModule, this);"},{"sha":"35d3765f0ae670f0b2d123a4fa27befacf967901","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AttrReleasePolicyTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -29,7 +29,7 @@ public class AttrReleasePolicyTO extends PolicyTO {\n \n     private int order;\n \n-    private Boolean status;\n+    private boolean status = true;\n \n     private AttrReleasePolicyConf conf;\n \n@@ -50,7 +50,7 @@ public void setOrder(final int order) {\n         this.order = order;\n     }\n \n-    public Boolean getStatus() {\n+    public boolean getStatus() {\n         return status;\n     }\n "},{"sha":"6bc299092f62ea4bd4b31a3b21e18f176abeb96a","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAttrReleasePolicyConf.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAttrReleasePolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAttrReleasePolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultAttrReleasePolicyConf.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -22,7 +22,9 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.io.Serializable;\n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.TimeUnit;\n \n public class DefaultAttrReleasePolicyConf implements AttrReleasePolicyConf {\n@@ -105,6 +107,8 @@ public List<String> getAttrRepos() {\n         }\n     }\n \n+    private final Map<String, Object> releaseAttrs = new HashMap<>();\n+\n     /**\n      * Specify the list of allowed attribute to release.\n      * Use the special {@code *} to release everything.\n@@ -119,6 +123,10 @@ public List<String> getAttrRepos() {\n \n     private final PrincipalAttrRepoConf principalAttrRepoConf = new PrincipalAttrRepoConf();\n \n+    public Map<String, Object> getReleaseAttrs() {\n+        return releaseAttrs;\n+    }\n+\n     @JacksonXmlElementWrapper(localName = \"allowedAttrs\")\n     @JacksonXmlProperty(localName = \"allowedAttr\")\n     public List<String> getAllowedAttrs() {"},{"sha":"a27e7dfa0c267fb7e53124f75c38c6fe660dae37","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/WAClientApp.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWAClientApp.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -21,9 +21,7 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n import org.apache.syncope.common.lib.BaseBean;\n import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n import org.apache.syncope.common.lib.policy.AttrReleasePolicyTO;\n@@ -45,8 +43,6 @@ public class WAClientApp implements BaseBean {\n \n     private AttrReleasePolicyTO attrReleasePolicy;\n \n-    private final Map<String, Object> releaseAttrs = new HashMap<>();\n-\n     public ClientAppTO getClientAppTO() {\n         return clientAppTO;\n     }\n@@ -84,8 +80,4 @@ public AttrReleasePolicyTO getAttrReleasePolicy() {\n     public void setAttrReleasePolicy(final AttrReleasePolicyTO attrReleasePolicy) {\n         this.attrReleasePolicy = attrReleasePolicy;\n     }\n-\n-    public Map<String, Object> getReleaseAttrs() {\n-        return releaseAttrs;\n-    }\n }"},{"sha":"46e520c32721f35842749611061e4d53bc1cbd1b","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/policy/AttrReleasePolicy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FAttrReleasePolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FAttrReleasePolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fpolicy%2FAttrReleasePolicy.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -26,7 +26,7 @@ public interface AttrReleasePolicy extends Policy {\n \n     void setOrder(int order);\n \n-    Boolean getStatus();\n+    boolean getStatus();\n \n     void setStatus(Boolean status);\n "},{"sha":"b88700c75f7448742fb133c9c963ebeaa768a6d6","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -58,14 +58,14 @@ under the License.\n \n   <!-- Attr Release Policies -->\n   <AttrReleasePolicy arporder=\"0\" name=\"DenyAttrReleasePolicy\" id=\"219935c7-deb3-40b3-8a9a-683037e523a2\"\n-                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf\",\"allowedAttrs\":[],\"excludedAttrs\":[],\"includeOnlyAttrs\":[],\"principalIdAttr\":null,\"principalAttrRepoConf\":{\"mergingStrategy\":\"MULTIVALUED\",\"ignoreResolvedAttributes\":false,\"expiration\":0,\"timeUnit\":\"HOURS\",\"attrRepos\":[]}}'/>\n+                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf\",\"releaseAttrs\":[],\"allowedAttrs\":[],\"excludedAttrs\":[],\"includeOnlyAttrs\":[],\"principalIdAttr\":null,\"principalAttrRepoConf\":{\"mergingStrategy\":\"MULTIVALUED\",\"ignoreResolvedAttributes\":false,\"expiration\":0,\"timeUnit\":\"HOURS\",\"attrRepos\":[]}}'/>\n   <AttrReleasePolicy arporder=\"0\" name=\"AllowedAttrReleasePolicy\" id=\"319935c7-deb3-40b3-8a9a-683037e523a2\"\n-                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf\",\"allowedAttrs\":[\"cn\",\"givenName\",\"uid\"],\"excludedAttrs\":[],\"includeOnlyAttrs\":[],\"principalIdAttr\":null,\"principalAttrRepoConf\":{\"mergingStrategy\":\"MULTIVALUED\",\"ignoreResolvedAttributes\":false,\"expiration\":0,\"timeUnit\":\"HOURS\",\"attrRepos\":[]}}'/>\n+                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf\",\"releaseAttrs\":[],\"allowedAttrs\":[\"cn\",\"givenName\",\"uid\"],\"excludedAttrs\":[],\"includeOnlyAttrs\":[],\"principalIdAttr\":null,\"principalAttrRepoConf\":{\"mergingStrategy\":\"MULTIVALUED\",\"ignoreResolvedAttributes\":false,\"expiration\":0,\"timeUnit\":\"HOURS\",\"attrRepos\":[]}}'/>\n       \n   <!-- Authentication modules -->\n   <AuthModule id=\"DefaultLDAPAuthModule\" authModuleState=\"ACTIVE\"\n-              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"${testds.bindDn}\", \"bindCredential\":\"${testds.password}\",\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"subtreeSearch\":true,\"principalAttributeList\":[\"sn\",\"givenName\",\"mail\",\"cn\"]}'\n-              items='[{\"intAttrName\":\"mail\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"givenName\",\"extAttrName\":\"givenName\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"sn\",\"extAttrName\":\"sn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"cn\",\"extAttrName\":\"cn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n+              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"${testds.bindDn}\", \"bindCredential\":\"${testds.password}\",\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"subtreeSearch\":true}'\n+              items='[{\"intAttrName\":\"mail\",\"extAttrName\":\"email\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"givenName\",\"extAttrName\":\"firstname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"sn\",\"extAttrName\":\"surname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"cn\",\"extAttrName\":\"fullname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n   <AuthModule id=\"DefaultJDBCAuthModule\" authModuleState=\"ACTIVE\"\n               description=\"JDBC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JDBCAuthModuleConf\",\"sql\":\"SELECT * FROM users_table WHERE name=?\", \"fieldPassword\": \"password\"}'/>\n   <AuthModule id=\"DefaultGoogleMfaAuthModule\" authModuleState=\"ACTIVE\"\n@@ -84,7 +84,7 @@ under the License.\n               description=\"Static auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.StaticAuthModuleConf\",\"users\":{\"syncope1\": \"$cynop3\"}}'/>\n   <AuthModule id=\"DefaultSyncopeAuthModule\" authModuleState=\"ACTIVE\"\n               description=\"Syncope auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SyncopeAuthModuleConf\",\"domain\":\"Master\"}'\n-              items='[{\"intAttrName\":\"syncopeUserAttr_surname\",\"extAttrName\":\"family_name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_fullname\",\"extAttrName\":\"name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_firstname\",\"extAttrName\":\"given_name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_email\",\"extAttrName\":\"email\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserMemberships\",\"extAttrName\":\"groups\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n+              items='[{\"intAttrName\":\"syncopeUserAttr_surname\",\"extAttrName\":\"family_name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_fullname\",\"extAttrName\":\"name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_firstname\",\"extAttrName\":\"given_name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_email\",\"extAttrName\":\"email\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"memberships\",\"extAttrName\":\"groups\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n   <AuthModule id=\"DefaultU2FAuthModule\" authModuleState=\"ACTIVE\"\n               description=\"U2F auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.U2FAuthModuleConf\",\"expireDevices\":40}'/>\n   <AuthModule id=\"DefaultOAuth20AuthModule\" description=\"OAuth20 auth module\" authModuleOrder=\"0\" \n@@ -93,9 +93,9 @@ under the License.\n \n   <!-- Attribute repositories -->\n   <AttrRepo id=\"DefaultLDAPAttrRepo\" attrRepoState=\"ACTIVE\"\n-            description=\"LDAP attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.LDAPAttrRepoConf\",\"searchFilter\":\"cn={user}\",\"subtreeSearch\":true,\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"bindDn\":\"${testds.bindDn}\",\"bindCredential\":\"${testds.password}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"attributes\":{},\"useAllQueryAttributes\":true,\"queryAttributes\":{}}'/>\n+            description=\"LDAP attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.LDAPAttrRepoConf\",\"searchFilter\":\"cn={user}\",\"subtreeSearch\":true,\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"bindDn\":\"${testds.bindDn}\",\"bindCredential\":\"${testds.password}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"useAllQueryAttributes\":true,\"queryAttributes\":{}}'/>\n   <AttrRepo id=\"DefaultJDBCAttrRepo\" attrRepoState=\"ACTIVE\"\n-            description=\"JDBC attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.JDBCAttrRepoConf\",\"sql\":\"SELECT * FROM table WHERE name=?\",\"dialect\":\"org.hibernate.dialect.H2Dialect\",\"driverClass\":\"org.h2.Driver\",\"url\":\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\",\"user\":\"username\",\"password\":\"password\",\"singleRow\":true,\"requireAllAttributes\":true,\"caseCanonicalization\":\"NONE\",\"queryType\":\"AND\",\"columnMappings\":{},\"username\":[],\"attributes\":{},\"caseInsensitiveQueryAttributes\":[],\"queryAttributes\":{}}'/>\n+            description=\"JDBC attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.JDBCAttrRepoConf\",\"sql\":\"SELECT * FROM table WHERE name=?\",\"dialect\":\"org.hibernate.dialect.H2Dialect\",\"driverClass\":\"org.h2.Driver\",\"url\":\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\",\"user\":\"username\",\"password\":\"password\",\"singleRow\":true,\"requireAllAttributes\":true,\"caseCanonicalization\":\"NONE\",\"queryType\":\"AND\",\"columnMappings\":{},\"username\":[],\"caseInsensitiveQueryAttributes\":[],\"queryAttributes\":{}}'/>\n   <AttrRepo id=\"DefaultStubAttrRepo\" attrRepoState=\"ACTIVE\"\n             description=\"Stub attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.StubAttrRepoConf\",\"attributes\":{\"attr1\":\"value1\"}}'\n             items='[{\"intAttrName\":\"attr1\",\"extAttrName\":\"identifier\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>"},{"sha":"515e46f8459fb435b53c9f9df6bf53d1f7b6beab","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPAAttrReleasePolicy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAttrReleasePolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAttrReleasePolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAttrReleasePolicy.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -54,8 +54,8 @@ public void setOrder(final int order) {\n     }\n \n     @Override\n-    public Boolean getStatus() {\n-        return status;\n+    public boolean getStatus() {\n+        return status == null ? true : status;\n     }\n \n     @Override"},{"sha":"e15996ff0f5f65fa400441bcc07534bd692f0096","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AuthModuleTest.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAuthModuleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAuthModuleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAuthModuleTest.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -217,7 +217,6 @@ public void saveWithJDBCModule() {\n         JDBCAuthModuleConf conf = new JDBCAuthModuleConf();\n         conf.setSql(\"SELECT * FROM table WHERE name=?\");\n         conf.setFieldPassword(\"password\");\n-        conf.getPrincipalAttributeList().addAll(List.of(\"sn\", \"cn:commonName\", \"givenName\"));\n \n         saveAuthModule(\"JDBCAuthModuleTest\", conf);\n     }"},{"sha":"ce55ff1dff8abf5c6d4adb2dd9ed4aec6bfcf809","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -58,14 +58,14 @@ under the License.\n \n   <!-- Attr Release Policies -->\n   <AttrReleasePolicy arporder=\"0\" name=\"DenyAttrReleasePolicy\" id=\"219935c7-deb3-40b3-8a9a-683037e523a2\"\n-                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf\",\"allowedAttrs\":[],\"excludedAttrs\":[],\"includeOnlyAttrs\":[],\"principalIdAttr\":null,\"principalAttrRepoConf\":{\"mergingStrategy\":\"MULTIVALUED\",\"ignoreResolvedAttributes\":false,\"expiration\":0,\"timeUnit\":\"HOURS\",\"attrRepos\":[]}}'/>\n+                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf\",\"releaseAttrs\":[],\"allowedAttrs\":[],\"excludedAttrs\":[],\"includeOnlyAttrs\":[],\"principalIdAttr\":null,\"principalAttrRepoConf\":{\"mergingStrategy\":\"MULTIVALUED\",\"ignoreResolvedAttributes\":false,\"expiration\":0,\"timeUnit\":\"HOURS\",\"attrRepos\":[]}}'/>\n   <AttrReleasePolicy arporder=\"0\" name=\"AllowedAttrReleasePolicy\" id=\"319935c7-deb3-40b3-8a9a-683037e523a2\"\n-                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf\",\"allowedAttrs\":[\"cn\",\"givenName\",\"uid\"],\"excludedAttrs\":[],\"includeOnlyAttrs\":[],\"principalIdAttr\":null,\"principalAttrRepoConf\":{\"mergingStrategy\":\"MULTIVALUED\",\"ignoreResolvedAttributes\":false,\"expiration\":0,\"timeUnit\":\"HOURS\",\"attrRepos\":[]}}'/>\n+                     jsonConf='{\"_class\":\"org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf\",\"releaseAttrs\":[],\"allowedAttrs\":[\"cn\",\"givenName\",\"uid\"],\"excludedAttrs\":[],\"includeOnlyAttrs\":[],\"principalIdAttr\":null,\"principalAttrRepoConf\":{\"mergingStrategy\":\"MULTIVALUED\",\"ignoreResolvedAttributes\":false,\"expiration\":0,\"timeUnit\":\"HOURS\",\"attrRepos\":[]}}'/>\n \n   <!-- Authentication modules -->\n   <AuthModule id=\"DefaultLDAPAuthModule\" authModuleState=\"ACTIVE\"\n-              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"${testds.bindDn}\", \"bindCredential\":\"${testds.password}\",\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"subtreeSearch\":true,\"principalAttributeList\":[\"sn\",\"givenName\",\"mail\",\"cn\"]}'\n-              items='[{\"intAttrName\":\"mail\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"givenName\",\"extAttrName\":\"givenName\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"sn\",\"extAttrName\":\"sn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"cn\",\"extAttrName\":\"cn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n+              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"${testds.bindDn}\", \"bindCredential\":\"${testds.password}\",\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"subtreeSearch\":true}'\n+              items='[{\"intAttrName\":\"mail\",\"extAttrName\":\"email\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"givenName\",\"extAttrName\":\"firstname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"sn\",\"extAttrName\":\"surname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"cn\",\"extAttrName\":\"fullname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n   <AuthModule id=\"DefaultJDBCAuthModule\" authModuleState=\"ACTIVE\"\n               description=\"JDBC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JDBCAuthModuleConf\",\"sql\":\"SELECT * FROM users_table WHERE name=?\", \"fieldPassword\": \"password\"}'/>\n   <AuthModule id=\"DefaultGoogleMfaAuthModule\" authModuleState=\"ACTIVE\"\n@@ -84,17 +84,17 @@ under the License.\n               description=\"Static auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.StaticAuthModuleConf\",\"users\":{\"syncope1\": \"$cynop3\"}}'/>\n   <AuthModule id=\"DefaultSyncopeAuthModule\" authModuleState=\"ACTIVE\"\n               description=\"Syncope auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SyncopeAuthModuleConf\",\"domain\":\"Master\"}'\n-              items='[{\"intAttrName\":\"syncopeUserAttr_surname\",\"extAttrName\":\"family_name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_fullname\",\"extAttrName\":\"name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_firstname\",\"extAttrName\":\"given_name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_email\",\"extAttrName\":\"email\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserMemberships\",\"extAttrName\":\"groups\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n+              items='[{\"intAttrName\":\"syncopeUserAttr_surname\",\"extAttrName\":\"family_name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_fullname\",\"extAttrName\":\"name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_firstname\",\"extAttrName\":\"given_name\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"syncopeUserAttr_email\",\"extAttrName\":\"email\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"memberships\",\"extAttrName\":\"groups\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n   <AuthModule id=\"DefaultU2FAuthModule\" authModuleState=\"ACTIVE\"\n               description=\"U2F auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.U2FAuthModuleConf\",\"expireDevices\":40}'/>\n   <AuthModule id=\"DefaultOAuth20AuthModule\" description=\"OAuth20 auth module\" authModuleOrder=\"0\"\n               jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.OAuth20AuthModuleConf\",\"clientName\":\"oauth20\",\"clientId\":\"OAUTH20\",\"clientSecret\":\"secret\",\"enabled\":true,\"customParams\":{},\"tokenUrl\":\"https://localhost/oauth2/token\",\"responseType\":\"code\",\"scope\":\"oauth test\",\"userIdAttribute\":\"username\",\"authUrl\":\"https://localhost/oauth2/auth\",\"profileUrl\":\"https://localhost/oauth2/profile\",\"profileAttrs\":{},\"withState\":false,\"profileVerb\":\"POST\"}' authModuleState=\"ACTIVE\"/>\n \n   <!-- Attribute repositories -->\n   <AttrRepo id=\"DefaultLDAPAttrRepo\" attrRepoState=\"ACTIVE\"\n-            description=\"LDAP attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.LDAPAttrRepoConf\",\"searchFilter\":\"cn={user}\",\"subtreeSearch\":true,\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"bindDn\":\"${testds.bindDn}\",\"bindCredential\":\"${testds.password}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"attributes\":{},\"useAllQueryAttributes\":true,\"queryAttributes\":{}}'/>\n+            description=\"LDAP attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.LDAPAttrRepoConf\",\"searchFilter\":\"cn={user}\",\"subtreeSearch\":true,\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"bindDn\":\"${testds.bindDn}\",\"bindCredential\":\"${testds.password}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"useAllQueryAttributes\":true,\"queryAttributes\":{}}'/>\n   <AttrRepo id=\"DefaultJDBCAttrRepo\" attrRepoState=\"ACTIVE\"\n-            description=\"JDBC attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.JDBCAttrRepoConf\",\"sql\":\"SELECT * FROM table WHERE name=?\",\"dialect\":\"org.hibernate.dialect.H2Dialect\",\"driverClass\":\"org.h2.Driver\",\"url\":\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\",\"user\":\"username\",\"password\":\"password\",\"singleRow\":true,\"requireAllAttributes\":true,\"caseCanonicalization\":\"NONE\",\"queryType\":\"AND\",\"columnMappings\":{},\"username\":[],\"attributes\":{},\"caseInsensitiveQueryAttributes\":[],\"queryAttributes\":{}}'/>\n+            description=\"JDBC attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.JDBCAttrRepoConf\",\"sql\":\"SELECT * FROM table WHERE name=?\",\"dialect\":\"org.hibernate.dialect.H2Dialect\",\"driverClass\":\"org.h2.Driver\",\"url\":\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\",\"user\":\"username\",\"password\":\"password\",\"singleRow\":true,\"requireAllAttributes\":true,\"caseCanonicalization\":\"NONE\",\"queryType\":\"AND\",\"columnMappings\":{},\"username\":[],\"caseInsensitiveQueryAttributes\":[],\"queryAttributes\":{}}'/>\n   <AttrRepo id=\"DefaultStubAttrRepo\" attrRepoState=\"ACTIVE\"\n             description=\"Stub attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.StubAttrRepoConf\",\"attributes\":{\"attr1\":\"value1\"}}'\n             items='[{\"intAttrName\":\"attr1\",\"extAttrName\":\"identifier\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>"},{"sha":"3b649c86abb93dadae664eab11eefb145a74301e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -35,9 +35,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ApplicationDAO;\n-import org.apache.syncope.core.persistence.api.dao.AttrRepoDAO;\n import org.apache.syncope.core.persistence.api.dao.AuditConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.AuthModuleDAO;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n@@ -1241,11 +1239,8 @@ public WAConfigDataBinder waConfigDataBinder(\n     public WAClientAppDataBinder waClientAppDataBinder(\n             final ClientAppDataBinder clientAppDataBinder,\n             final PolicyDataBinder policyDataBinder,\n-            final AuthModuleDataBinder authModuleDataBinder,\n-            final AuthModuleDAO authModuleDAO,\n-            final AttrRepoDAO attrRepoDAO) {\n+            final AuthModuleDataBinder authModuleDataBinder) {\n \n-        return new WAClientAppDataBinderImpl(\n-                clientAppDataBinder, policyDataBinder, authModuleDataBinder, authModuleDAO, attrRepoDAO);\n+        return new WAClientAppDataBinderImpl(clientAppDataBinder, policyDataBinder, authModuleDataBinder);\n     }\n }"},{"sha":"c43678ace89b222f2768024401fa6bdca035234b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/wa/WAClientAppDataBinderImpl.java","status":"modified","additions":1,"deletions":52,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -18,15 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.data.wa;\n \n-import org.apache.syncope.common.lib.policy.AttrReleasePolicyConf;\n-import org.apache.syncope.common.lib.policy.AuthPolicyConf;\n-import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n-import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n import org.apache.syncope.common.lib.wa.WAClientApp;\n-import org.apache.syncope.core.persistence.api.dao.AttrRepoDAO;\n-import org.apache.syncope.core.persistence.api.dao.AuthModuleDAO;\n-import org.apache.syncope.core.persistence.api.entity.am.AttrRepo;\n-import org.apache.syncope.core.persistence.api.entity.am.AuthModule;\n import org.apache.syncope.core.persistence.api.entity.am.ClientApp;\n import org.apache.syncope.core.provisioning.api.data.AuthModuleDataBinder;\n import org.apache.syncope.core.provisioning.api.data.ClientAppDataBinder;\n@@ -45,22 +37,14 @@ public class WAClientAppDataBinderImpl implements WAClientAppDataBinder {\n \n     protected final AuthModuleDataBinder authModuleDataBinder;\n \n-    protected final AuthModuleDAO authModuleDAO;\n-\n-    protected final AttrRepoDAO attrRepoDAO;\n-\n     public WAClientAppDataBinderImpl(\n             final ClientAppDataBinder clientAppDataBinder,\n             final PolicyDataBinder policyDataBinder,\n-            final AuthModuleDataBinder authModuleDataBinder,\n-            final AuthModuleDAO authModuleDAO,\n-            final AttrRepoDAO attrRepoDAO) {\n+            final AuthModuleDataBinder authModuleDataBinder) {\n \n         this.clientAppDataBinder = clientAppDataBinder;\n         this.policyDataBinder = policyDataBinder;\n         this.authModuleDataBinder = authModuleDataBinder;\n-        this.authModuleDAO = authModuleDAO;\n-        this.attrRepoDAO = attrRepoDAO;\n     }\n \n     @Override\n@@ -69,60 +53,25 @@ public WAClientApp getWAClientApp(final ClientApp clientApp) {\n         waClientApp.setClientAppTO(clientAppDataBinder.getClientAppTO(clientApp));\n \n         try {\n-            AuthPolicyConf authPolicyConf = null;\n             if (clientApp.getAuthPolicy() != null) {\n-                authPolicyConf = clientApp.getAuthPolicy().getConf();\n                 waClientApp.setAuthPolicy(policyDataBinder.getPolicyTO(clientApp.getAuthPolicy()));\n             } else if (clientApp.getRealm() != null && clientApp.getRealm().getAuthPolicy() != null) {\n-                authPolicyConf = clientApp.getRealm().getAuthPolicy().getConf();\n                 waClientApp.setAuthPolicy(policyDataBinder.getPolicyTO(clientApp.getRealm().getAuthPolicy()));\n             }\n-            if (authPolicyConf instanceof DefaultAuthPolicyConf) {\n-                ((DefaultAuthPolicyConf) authPolicyConf).getAuthModules().forEach(key -> {\n-                    AuthModule authModule = authModuleDAO.find(key);\n-                    if (authModule == null) {\n-                        LOG.warn(\"AuthModule \" + authModule + \" not found\");\n-                    } else {\n-                        waClientApp.getAuthModules().add(authModuleDataBinder.getAuthModuleTO(authModule));\n-\n-                        authModule.getItems().\n-                                forEach(item -> waClientApp.getReleaseAttrs().put(\n-                                item.getIntAttrName(), item.getExtAttrName()));\n-                    }\n-                });\n-            }\n \n             if (clientApp.getAccessPolicy() != null) {\n                 waClientApp.setAccessPolicy(policyDataBinder.getPolicyTO(clientApp.getAccessPolicy()));\n             } else if (clientApp.getRealm() != null && clientApp.getRealm().getAccessPolicy() != null) {\n                 waClientApp.setAccessPolicy(policyDataBinder.getPolicyTO(clientApp.getRealm().getAccessPolicy()));\n             }\n \n-            AttrReleasePolicyConf attrReleasePolicyConf = null;\n             if (clientApp.getAttrReleasePolicy() != null) {\n-                attrReleasePolicyConf = clientApp.getAttrReleasePolicy().getConf();\n                 waClientApp.setAttrReleasePolicy(\n                         policyDataBinder.getPolicyTO(clientApp.getAttrReleasePolicy()));\n             } else if (clientApp.getRealm() != null && clientApp.getRealm().getAttrReleasePolicy() != null) {\n-                attrReleasePolicyConf = clientApp.getRealm().getAttrReleasePolicy().getConf();\n                 waClientApp.setAttrReleasePolicy(\n                         policyDataBinder.getPolicyTO(clientApp.getRealm().getAttrReleasePolicy()));\n             }\n-            if (attrReleasePolicyConf instanceof DefaultAttrReleasePolicyConf\n-                    && ((DefaultAttrReleasePolicyConf) attrReleasePolicyConf).getPrincipalAttrRepoConf() != null) {\n-\n-                (((DefaultAttrReleasePolicyConf) attrReleasePolicyConf).getPrincipalAttrRepoConf()).\n-                        getAttrRepos().forEach(key -> {\n-                            AttrRepo attrRepo = attrRepoDAO.find(key);\n-                            if (attrRepo == null) {\n-                                LOG.warn(\"AttrRepo \" + attrRepo + \" not found\");\n-                            } else {\n-                                attrRepo.getItems().\n-                                        forEach(item -> waClientApp.getReleaseAttrs().put(\n-                                        item.getIntAttrName(), item.getExtAttrName()));\n-                            }\n-                        });\n-            }\n         } catch (Exception e) {\n             LOG.error(\"While building the configuration from an application's policy \", e);\n         }"},{"sha":"8d900730f4261dc4527978ab1064e12b8dcd9469","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -943,6 +943,8 @@ protected static AttrReleasePolicyTO buildAttrReleasePolicyTO() {\n         policy.setStatus(Boolean.TRUE);\n \n         DefaultAttrReleasePolicyConf conf = new DefaultAttrReleasePolicyConf();\n+        conf.getReleaseAttrs().put(\"uid\", \"username\");\n+        conf.getReleaseAttrs().put(\"cn\", \"fullname\");\n         conf.getAllowedAttrs().addAll(List.of(\"cn\", \"givenName\"));\n         conf.getIncludeOnlyAttrs().add(\"cn\");\n "},{"sha":"d50b349f5ba45ada7af9a18c9b3e1172de667f31","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthModuleITCase.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthModuleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthModuleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthModuleITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -128,8 +128,6 @@ private static AuthModuleTO buildAuthModuleTO(final AuthModuleSupportedType type\n                 conf = new JDBCAuthModuleConf();\n                 JDBCAuthModuleConf.class.cast(conf).setSql(\"SELECT * FROM table WHERE name=?\");\n                 JDBCAuthModuleConf.class.cast(conf).setFieldPassword(\"password\");\n-                JDBCAuthModuleConf.class.cast(conf).getPrincipalAttributeList().addAll(\n-                        List.of(\"sn\", \"cn:commonName\", \"givenName\"));\n                 break;\n \n             case OIDC:"},{"sha":"51b4e5ce1071d1d277362268d3104ea4b7b2d31f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -304,7 +304,7 @@ public void updateAsGroupOwner() {\n         try {\n             groupService2.update(groupUR);\n             fail(\"This should not happen\");\n-        } catch (ForbiddenException e) {\n+        } catch (Exception e) {\n             assertNotNull(e);\n         }\n "},{"sha":"9ef5a4389e7756d5b8d64f60a1ce9ed6a4fb8dc8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/wa/WAClientAppITCase.java","status":"modified","additions":7,"deletions":43,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWAClientAppITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWAClientAppITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWAClientAppITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -31,8 +31,7 @@\n import org.apache.syncope.common.lib.policy.AccessPolicyTO;\n import org.apache.syncope.common.lib.policy.AttrReleasePolicyTO;\n import org.apache.syncope.common.lib.policy.AuthPolicyTO;\n-import org.apache.syncope.common.lib.to.AuthModuleTO;\n-import org.apache.syncope.common.lib.to.Item;\n+import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n import org.apache.syncope.common.lib.to.OIDCRPClientAppTO;\n import org.apache.syncope.common.lib.to.SAML2SPClientAppTO;\n import org.apache.syncope.common.lib.types.ClientAppType;\n@@ -113,47 +112,12 @@ public void readWithPolicies() {\n \n         WAClientApp waClientApp = WA_CLIENT_APP_SERVICE.read(oidcrpto.getClientAppId(), null);\n         assertNotNull(waClientApp);\n-        assertTrue(waClientApp.getReleaseAttrs().isEmpty());\n-\n-        // add items to the authentication module\n-        addItems();\n-        try {\n-            waClientApp = WA_CLIENT_APP_SERVICE.read(oidcrpto.getClientAppId(), null);\n-            assertNotNull(waClientApp);\n-            assertFalse(waClientApp.getReleaseAttrs().isEmpty());\n-            assertEquals(\"username\", waClientApp.getReleaseAttrs().get(\"uid\"));\n-            assertEquals(\"fullname\", waClientApp.getReleaseAttrs().get(\"cn\"));\n-        } finally {\n-            removeItems();\n-        }\n-    }\n-\n-    private void addItems() {\n-        AuthModuleTO authModuleTO = AUTH_MODULE_SERVICE.read(AUTH_MODULE);\n-\n-        Item keyMapping = new Item();\n-        keyMapping.setIntAttrName(\"uid\");\n-        keyMapping.setExtAttrName(\"username\");\n-        authModuleTO.getItems().add(keyMapping);\n-\n-        Item fullnameMapping = new Item();\n-        fullnameMapping.setIntAttrName(\"cn\");\n-        fullnameMapping.setExtAttrName(\"fullname\");\n-        authModuleTO.getItems().add(fullnameMapping);\n-\n-        AUTH_MODULE_SERVICE.update(authModuleTO);\n-\n-        authModuleTO = AUTH_MODULE_SERVICE.read(AUTH_MODULE);\n-        assertFalse(authModuleTO.getItems().isEmpty());\n-    }\n-\n-    private void removeItems() {\n-        AuthModuleTO authModuleTO = AUTH_MODULE_SERVICE.read(AUTH_MODULE);\n-        authModuleTO.getItems().clear();\n-\n-        AUTH_MODULE_SERVICE.update(authModuleTO);\n+        assertTrue(waClientApp.getAttrReleasePolicy().getConf() instanceof DefaultAttrReleasePolicyConf);\n \n-        authModuleTO = AUTH_MODULE_SERVICE.read(AUTH_MODULE);\n-        assertTrue(authModuleTO.getItems().isEmpty());\n+        DefaultAttrReleasePolicyConf attrReleasePolicyConf =\n+                (DefaultAttrReleasePolicyConf) waClientApp.getAttrReleasePolicy().getConf();\n+        assertFalse(attrReleasePolicyConf.getReleaseAttrs().isEmpty());\n+        assertEquals(\"username\", attrReleasePolicyConf.getReleaseAttrs().get(\"uid\"));\n+        assertEquals(\"fullname\", attrReleasePolicyConf.getReleaseAttrs().get(\"cn\"));\n     }\n }"},{"sha":"eb761108d90d8e17b1914b93cce260afc1af3eaf","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -30,6 +30,7 @@\n import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.http.Consts;\n import org.apache.http.NameValuePair;\n import org.apache.http.client.entity.UrlEncodedFormEntity;\n@@ -109,6 +110,8 @@ public static void waitForWARefresh() {\n         await().atMost(50, TimeUnit.SECONDS).pollInterval(1, TimeUnit.SECONDS).until(() -> {\n             boolean refreshed = false;\n             try {\n+                WebClient.create(WA_ADDRESS + \"/idp/metadata\").get();\n+\n                 samlIdPEntityService.get(SAML2IdPEntityService.DEFAULT_OWNER);\n                 refreshed = true;\n             } catch (Exception e) {"},{"sha":"7f8ba01e8fd797a6e2a31559625d6cd04d6bbfa6","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/AbstractSRAITCase.java","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -49,7 +49,9 @@\n import org.apache.http.HttpStatus;\n import org.apache.http.client.methods.CloseableHttpResponse;\n import org.apache.http.util.EntityUtils;\n+import org.apache.syncope.common.lib.policy.AttrReleasePolicyTO;\n import org.apache.syncope.common.lib.policy.AuthPolicyTO;\n+import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n import org.apache.syncope.common.lib.to.SRARouteTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n@@ -241,6 +243,37 @@ protected static AuthPolicyTO getAuthPolicy() {\n                 });\n     }\n \n+    protected static AttrReleasePolicyTO getAttrReleasePolicy() {\n+        String description = \"SRA attr release policy\";\n+\n+        return POLICY_SERVICE.list(PolicyType.ATTR_RELEASE).stream().\n+                map(AttrReleasePolicyTO.class::cast).\n+                filter(policy -> description.equals(policy.getName())\n+                && policy.getConf() instanceof DefaultAttrReleasePolicyConf).\n+                findFirst().\n+                orElseGet(() -> {\n+                    DefaultAttrReleasePolicyConf policyConf = new DefaultAttrReleasePolicyConf();\n+                    policyConf.getAllowedAttrs().add(\"family_name\");\n+                    policyConf.getAllowedAttrs().add(\"name\");\n+                    policyConf.getAllowedAttrs().add(\"given_name\");\n+                    policyConf.getAllowedAttrs().add(\"email\");\n+                    policyConf.getAllowedAttrs().add(\"groups\");\n+\n+                    AttrReleasePolicyTO policy = new AttrReleasePolicyTO();\n+                    policy.setName(description);\n+                    policy.setConf(policyConf);\n+\n+                    Response response = POLICY_SERVICE.create(PolicyType.ATTR_RELEASE, policy);\n+                    if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n+                        fail(\"Could not create Test Attr Release Policy\");\n+                    }\n+\n+                    return POLICY_SERVICE.read(\n+                            PolicyType.ATTR_RELEASE,\n+                            response.getHeaderString(RESTHeaders.RESOURCE_KEY));\n+                });\n+    }\n+\n     protected static ObjectNode checkGetResponse(\n             final CloseableHttpResponse response, final String originalRequestURI) throws IOException {\n "},{"sha":"5bac315b3b237d99a1e166900a5c50922db573c8","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/OIDCSRAITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -117,9 +117,10 @@ protected static void oidcClientAppSetup(\n         clientApp.setSubjectType(OIDCSubjectType.PUBLIC);\n         clientApp.getRedirectUris().clear();\n         clientApp.getRedirectUris().add(SRA_ADDRESS + \"/login/oauth2/code/\" + sraRegistrationId);\n-        clientApp.setAuthPolicy(getAuthPolicy().getKey());\n         clientApp.setSignIdToken(true);\n         clientApp.setLogoutUri(SRA_ADDRESS + \"/logout\");\n+        clientApp.setAuthPolicy(getAuthPolicy().getKey());\n+        clientApp.setAttrReleasePolicy(getAttrReleasePolicy().getKey());\n \n         CLIENT_APP_SERVICE.update(ClientAppType.OIDCRP, clientApp);\n         CLIENT_APP_SERVICE.pushToWA();"},{"sha":"9e5bc73a286f67302380fff1b57cb92dc4afcdb8","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/AbstractUIITCase.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUIITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -83,6 +83,11 @@ protected static AttrReleasePolicyTO getAttrReleasePolicy() {\n                 orElseGet(() -> {\n                     DefaultAttrReleasePolicyConf policyConf = new DefaultAttrReleasePolicyConf();\n                     policyConf.getPrincipalAttrRepoConf().getAttrRepos().add(stubAttrRepo);\n+                    policyConf.getReleaseAttrs().put(\"attr1\", \"identifier\");\n+                    policyConf.getReleaseAttrs().put(\"firstname\", \"givenName\");\n+                    policyConf.getReleaseAttrs().put(\"surname\", \"sn\");\n+                    policyConf.getReleaseAttrs().put(\"fullname\", \"cn\");\n+                    policyConf.getReleaseAttrs().put(\"email\", \"mail\");\n \n                     AttrReleasePolicyTO policy = new AttrReleasePolicyTO();\n                     policy.setName(description);"},{"sha":"0a8801cc991acc038d58f78ceab60dc3302bfd32","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/SAML2SP4UIITCase.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -262,6 +262,10 @@ protected void sso(final String baseURL, final String username, final String pas\n             }\n         }\n \n+        if (location.startsWith(\"http://localhost:8080/syncope-wa\")) {\n+            location = WA_ADDRESS + StringUtils.substringAfter(location, \"http://localhost:8080/syncope-wa\");\n+        }\n+\n         get = new HttpGet(location);\n         get.addHeader(HttpHeaders.ACCEPT, MediaType.TEXT_HTML);\n         get.addHeader(HttpHeaders.ACCEPT_LANGUAGE, EN_LANGUAGE);"},{"sha":"771d1b0c67e0e6d16c2bb45e5df7d1202c267207","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -413,7 +413,7 @@ under the License.\n \n     <cxf.version>4.0.1-SNAPSHOT</cxf.version>\n     <bouncycastle.version>1.72</bouncycastle.version>\n-    <nimbus-jose-jwt.version>9.30.1</nimbus-jose-jwt.version>\n+    <nimbus-jose-jwt.version>9.31</nimbus-jose-jwt.version>\n \n     <spring-boot.version>3.0.3</spring-boot.version>\n     <spring-cloud-gateway.version>4.0.2</spring-cloud-gateway.version>"},{"sha":"28e0e239ea5c080c1a9e5b2f5531ccf0fba3601f","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/AttrRepoPropertySourceMapper.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAttrRepoPropertySourceMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAttrRepoPropertySourceMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAttrRepoPropertySourceMapper.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.wa.bootstrap;\n \n import java.util.Map;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.attr.AttrRepoConf;\n@@ -27,6 +28,7 @@\n import org.apache.syncope.common.lib.attr.StubAttrRepoConf;\n import org.apache.syncope.common.lib.attr.SyncopeAttrRepoConf;\n import org.apache.syncope.common.lib.to.AttrRepoTO;\n+import org.apache.syncope.common.lib.to.Item;\n import org.apereo.cas.configuration.CasCoreConfigurationUtils;\n import org.apereo.cas.configuration.model.core.authentication.AttributeRepositoryStates;\n import org.apereo.cas.configuration.model.core.authentication.StubPrincipalAttributesProperties;\n@@ -59,9 +61,10 @@ public Map<String, Object> map(final AttrRepoTO attrRepoTO, final LDAPAttrRepoCo\n         props.setId(attrRepoTO.getKey());\n         props.setState(AttributeRepositoryStates.valueOf(attrRepoTO.getState().name()));\n         props.setOrder(attrRepoTO.getOrder());\n-        props.setAttributes(conf.getAttributes());\n         props.setUseAllQueryAttributes(conf.isUseAllQueryAttributes());\n         props.setQueryAttributes(conf.getQueryAttributes());\n+        props.setAttributes(attrRepoTO.getItems().stream().\n+                collect(Collectors.toMap(Item::getIntAttrName, Item::getExtAttrName)));\n         fill(props, conf);\n \n         return prefix(\"cas.authn.attribute-repository.ldap[].\", CasCoreConfigurationUtils.asMap(props));\n@@ -80,9 +83,10 @@ public Map<String, Object> map(final AttrRepoTO attrRepoTO, final JDBCAttrRepoCo\n         props.setQueryType(conf.getQueryType().name());\n         props.setColumnMappings(conf.getColumnMappings());\n         props.setUsername(conf.getUsername());\n-        props.setAttributes(conf.getAttributes());\n         props.setCaseInsensitiveQueryAttributes(conf.getCaseInsensitiveQueryAttributes());\n         props.setQueryAttributes(conf.getQueryAttributes());\n+        props.setAttributes(attrRepoTO.getItems().stream().\n+                collect(Collectors.toMap(Item::getIntAttrName, Item::getExtAttrName)));\n         fill(props, conf);\n \n         return prefix(\"cas.authn.attribute-repository.jdbc[].\", CasCoreConfigurationUtils.asMap(props));\n@@ -106,6 +110,8 @@ public Map<String, Object> map(final AttrRepoTO attrRepoTO, final SyncopeAttrRep\n         props.setBasicAuthUsername(conf.getBasicAuthUsername());\n         props.setBasicAuthPassword(conf.getBasicAuthPassword());\n         props.setHeaders(props.getHeaders());\n+        props.setAttributeMappings(attrRepoTO.getItems().\n+                stream().collect(Collectors.toMap(Item::getIntAttrName, Item::getExtAttrName)));\n \n         return prefix(\"cas.authn.attribute-repository.syncope.\", CasCoreConfigurationUtils.asMap(props));\n     }"},{"sha":"a59289c7bd23ffd2eb360d65d0e769726e5eb75e","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/AuthModulePropertySourceMapper.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.common.lib.auth.SyncopeAuthModuleConf;\n import org.apache.syncope.common.lib.auth.U2FAuthModuleConf;\n import org.apache.syncope.common.lib.to.AuthModuleTO;\n+import org.apache.syncope.common.lib.to.Item;\n import org.apache.syncope.common.lib.types.AuthModuleState;\n import org.apereo.cas.configuration.CasCoreConfigurationUtils;\n import org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates;\n@@ -92,7 +93,8 @@ public Map<String, Object> map(final AuthModuleTO authModuleTO, final LDAPAuthMo\n             props.setType(AbstractLdapAuthenticationProperties.AuthenticationTypes.AUTHENTICATED);\n         }\n         props.setPrincipalAttributeId(conf.getUserIdAttribute());\n-        props.setPrincipalAttributeList(conf.getPrincipalAttributeList());\n+        props.setPrincipalAttributeList(authModuleTO.getItems().stream().\n+                map(item -> item.getIntAttrName() + \":\" + item.getExtAttrName()).collect(Collectors.toList()));\n         fill(props, conf);\n \n         return prefix(\"cas.authn.ldap[].\", CasCoreConfigurationUtils.asMap(props));\n@@ -108,7 +110,8 @@ public Map<String, Object> map(final AuthModuleTO authModuleTO, final JDBCAuthMo\n         props.setFieldDisabled(conf.getFieldDisabled());\n         props.setFieldExpired(conf.getFieldExpired());\n         props.setFieldPassword(conf.getFieldPassword());\n-        props.setPrincipalAttributeList(conf.getPrincipalAttributeList());\n+        props.setPrincipalAttributeList(authModuleTO.getItems().stream().\n+                map(item -> item.getIntAttrName() + \":\" + item.getExtAttrName()).collect(Collectors.toList()));\n         fill(props, conf);\n \n         return prefix(\"cas.authn.jdbc.query[].\", CasCoreConfigurationUtils.asMap(props));\n@@ -167,7 +170,9 @@ public Map<String, Object> map(final AuthModuleTO authModuleTO, final OAuth20Aut\n         props.setScope(conf.getScope());\n         props.setPrincipalIdAttribute(conf.getUserIdAttribute());\n         props.setWithState(conf.isWithState());\n-        \n+        props.setProfileAttrs(authModuleTO.getItems().stream().\n+                collect(Collectors.toMap(Item::getIntAttrName, Item::getExtAttrName)));\n+\n         return prefix(\"cas.authn.pac4j.oauth2[].\", CasCoreConfigurationUtils.asMap(props));\n     }\n \n@@ -214,6 +219,8 @@ public Map<String, Object> map(final AuthModuleTO authModuleTO, final SyncopeAut\n         props.setState(AuthenticationHandlerStates.valueOf(authModuleTO.getState().name()));\n         props.setDomain(conf.getDomain());\n         props.setUrl(StringUtils.substringBefore(syncopeClient.getAddress(), \"/rest\"));\n+        props.setAttributeMappings(authModuleTO.getItems().stream().\n+                collect(Collectors.toMap(Item::getIntAttrName, Item::getExtAttrName)));\n \n         return prefix(\"cas.authn.syncope.\", CasCoreConfigurationUtils.asMap(props));\n     }"},{"sha":"8a63943fac3ce0064938851078d9cbbdf09514fe","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/AttrReleaseMapper.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAttrReleaseMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAttrReleaseMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAttrReleaseMapper.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -18,12 +18,11 @@\n  */\n package org.apache.syncope.wa.starter.mapping;\n \n-import java.util.Map;\n import org.apache.syncope.common.lib.policy.AttrReleasePolicyTO;\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n \n @FunctionalInterface\n public interface AttrReleaseMapper {\n \n-    RegisteredServiceAttributeReleasePolicy build(AttrReleasePolicyTO policy, Map<String, Object> releaseAttrs);\n+    RegisteredServiceAttributeReleasePolicy build(AttrReleasePolicyTO policy);\n }"},{"sha":"ecca60f82c2fd69bb3544592c469a5a5cc59e86b","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/DefaultAttrReleaseMapper.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAttrReleaseMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAttrReleaseMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAttrReleaseMapper.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.wa.starter.mapping;\n \n import java.util.HashSet;\n-import java.util.Map;\n import org.apache.syncope.common.lib.policy.AttrReleasePolicyTO;\n import org.apache.syncope.common.lib.policy.DefaultAttrReleasePolicyConf;\n import org.apereo.cas.authentication.principal.DefaultPrincipalAttributesRepository;\n@@ -39,15 +38,13 @@\n public class DefaultAttrReleaseMapper implements AttrReleaseMapper {\n \n     @Override\n-    public RegisteredServiceAttributeReleasePolicy build(\n-            final AttrReleasePolicyTO policy, final Map<String, Object> releaseAttrs) {\n-\n+    public RegisteredServiceAttributeReleasePolicy build(final AttrReleasePolicyTO policy) {\n         DefaultAttrReleasePolicyConf conf = (DefaultAttrReleasePolicyConf) policy.getConf();\n \n         ReturnMappedAttributeReleasePolicy returnMapped = null;\n-        if (!releaseAttrs.isEmpty()) {\n+        if (!conf.getReleaseAttrs().isEmpty()) {\n             returnMapped = new ReturnMappedAttributeReleasePolicy();\n-            returnMapped.setAllowedAttributes(releaseAttrs);\n+            returnMapped.setAllowedAttributes(conf.getReleaseAttrs());\n         }\n \n         ReturnAllowedAttributeReleasePolicy returnAllowed = null;\n@@ -68,9 +65,7 @@ public RegisteredServiceAttributeReleasePolicy build(\n         DefaultRegisteredServiceConsentPolicy consentPolicy = new DefaultRegisteredServiceConsentPolicy(\n                 new HashSet<>(conf.getExcludedAttrs()), new HashSet<>(conf.getIncludeOnlyAttrs()));\n         consentPolicy.setOrder(policy.getOrder());\n-        consentPolicy.setStatus(policy.getStatus() == null\n-                ? TriStateBoolean.UNDEFINED\n-                : TriStateBoolean.fromBoolean(policy.getStatus()));\n+        consentPolicy.setStatus(TriStateBoolean.fromBoolean(policy.getStatus()));\n         attributeReleasePolicy.setConsentPolicy(consentPolicy);\n \n         if (conf.getPrincipalIdAttr() != null) {"},{"sha":"d5cac88baa791051be5b3903529d4bb5e04f5cc4","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/OIDCRPClientAppTOMapper.java","status":"modified","additions":20,"deletions":5,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPClientAppTOMapper.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -34,13 +34,15 @@\n import org.apereo.cas.oidc.claims.OidcEmailScopeAttributeReleasePolicy;\n import org.apereo.cas.oidc.claims.OidcPhoneScopeAttributeReleasePolicy;\n import org.apereo.cas.oidc.claims.OidcProfileScopeAttributeReleasePolicy;\n+import org.apereo.cas.services.BaseMappedAttributeReleasePolicy;\n import org.apereo.cas.services.ChainingAttributeReleasePolicy;\n import org.apereo.cas.services.OidcRegisteredService;\n import org.apereo.cas.services.RegisteredService;\n import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n import org.apereo.cas.services.RegisteredServiceMultifactorPolicy;\n+import org.apereo.cas.services.ReturnAllowedAttributeReleasePolicy;\n import org.springframework.context.ConfigurableApplicationContext;\n \n @ClientAppMapFor(clientAppClass = OIDCRPClientAppTO.class)\n@@ -91,12 +93,25 @@ public RegisteredService map(\n             }\n \n             chain.addPolicies(new OidcProfileScopeAttributeReleasePolicy(),\n-                new OidcEmailScopeAttributeReleasePolicy(),\n-                new OidcAddressScopeAttributeReleasePolicy(),\n-                new OidcPhoneScopeAttributeReleasePolicy());\n+                    new OidcEmailScopeAttributeReleasePolicy(),\n+                    new OidcAddressScopeAttributeReleasePolicy(),\n+                    new OidcPhoneScopeAttributeReleasePolicy());\n \n-            Set<String> customClaims = clientApp.getReleaseAttrs().values().stream().\n-                    map(Objects::toString).collect(Collectors.toCollection(HashSet::new));\n+            Set<String> customClaims = new HashSet<>();\n+            if (attributeReleasePolicy instanceof BaseMappedAttributeReleasePolicy) {\n+                customClaims.addAll(((BaseMappedAttributeReleasePolicy) attributeReleasePolicy).\n+                        getAllowedAttributes().values().stream().\n+                        map(Objects::toString).collect(Collectors.toSet()));\n+            } else if (attributeReleasePolicy instanceof ReturnAllowedAttributeReleasePolicy) {\n+                customClaims.addAll(((ReturnAllowedAttributeReleasePolicy) attributeReleasePolicy).\n+                        getAllowedAttributes().stream().collect(Collectors.toSet()));\n+            } else if (attributeReleasePolicy instanceof ChainingAttributeReleasePolicy) {\n+                ((ChainingAttributeReleasePolicy) attributeReleasePolicy).getPolicies().stream().\n+                        filter(ReturnAllowedAttributeReleasePolicy.class::isInstance).\n+                        findFirst().map(ReturnAllowedAttributeReleasePolicy.class::cast).\n+                        map(p -> p.getAllowedAttributes().stream().collect(Collectors.toSet())).\n+                        ifPresent(customClaims::addAll);\n+            }\n             customClaims.removeAll(OidcProfileScopeAttributeReleasePolicy.ALLOWED_CLAIMS);\n             customClaims.removeAll(OidcEmailScopeAttributeReleasePolicy.ALLOWED_CLAIMS);\n             customClaims.removeAll(OidcAddressScopeAttributeReleasePolicy.ALLOWED_CLAIMS);"},{"sha":"b8000e536f761933b837f6ab653ff180a004cc5c","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/RegisteredServiceMapper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -125,7 +125,7 @@ public RegisteredService toRegisteredService(final WAClientApp clientApp) {\n                 attrReleasePolicyTO.getConf().getClass().getName());\n         RegisteredServiceAttributeReleasePolicy attributeReleasePolicy =\n                 Optional.ofNullable(attrReleasePolicyConfMapper).\n-                        map(mapper -> mapper.build(attrReleasePolicyTO, clientApp.getReleaseAttrs())).\n+                        map(mapper -> mapper.build(attrReleasePolicyTO)).\n                         orElse(null);\n \n         return clientAppMapper.map(ctx, clientApp, authPolicy, mfaPolicy, accessStrategy, attributeReleasePolicy);"},{"sha":"d4733ed0af9a080dcae112015f30a7cb01b18b5d","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/WAServiceRegistryTest.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b506bcde1f2744aaa8f44886c878d6805759b108/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java?ref=b506bcde1f2744aaa8f44886c878d6805759b108","patch":"@@ -53,7 +53,6 @@\n import org.apereo.cas.services.RegisteredService;\n import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n import org.apereo.cas.services.RegisteredServiceDelegatedAuthenticationPolicy;\n-import org.apereo.cas.services.ReturnAllowedAttributeReleasePolicy;\n import org.apereo.cas.services.ServicesManager;\n import org.apereo.cas.support.saml.services.SamlRegisteredService;\n import org.apereo.cas.util.RandomUtils;\n@@ -95,7 +94,6 @@ private static SAML2SPClientAppTO buildSAML2SP() {\n \n     private static void addPolicies(\n             final WAClientApp waClientApp,\n-            final boolean withReleaseAttributes,\n             final boolean withAttrReleasePolicy) {\n \n         DefaultAuthPolicyConf authPolicyConf = new DefaultAuthPolicyConf();\n@@ -106,10 +104,6 @@ private static void addPolicies(\n \n         waClientApp.setAuthPolicy(authPolicy);\n \n-        if (withReleaseAttributes) {\n-            waClientApp.getReleaseAttrs().putAll(Map.of(\"uid\", \"username\", \"cn\", \"fullname\"));\n-        }\n-\n         AccessPolicyTO accessPolicy = new AccessPolicyTO();\n         DefaultAccessPolicyConf accessPolicyConf = new DefaultAccessPolicyConf();\n         accessPolicyConf.setEnabled(true);\n@@ -121,6 +115,7 @@ private static void addPolicies(\n             DefaultAttrReleasePolicyConf attrReleasePolicyConf = new DefaultAttrReleasePolicyConf();\n             attrReleasePolicyConf.getAllowedAttrs().add(\"cn\");\n             attrReleasePolicyConf.getPrincipalAttrRepoConf().getAttrRepos().add(\"TestAttrRepo\");\n+            attrReleasePolicyConf.getReleaseAttrs().putAll(Map.of(\"uid\", \"username\", \"cn\", \"fullname\"));\n \n             AttrReleasePolicyTO attrReleasePolicy = new AttrReleasePolicyTO();\n             attrReleasePolicy.setConf(attrReleasePolicyConf);\n@@ -155,7 +150,7 @@ public void addClientApp() {\n         WAClientApp waClientApp = new WAClientApp();\n         waClientApp.setClientAppTO(buildOIDCRP());\n         Long clientAppId = waClientApp.getClientAppTO().getClientAppId();\n-        addPolicies(waClientApp, false, false);\n+        addPolicies(waClientApp, false);\n \n         SyncopeCoreTestingServer.CLIENT_APPS.add(waClientApp);\n         List<WAClientApp> apps = service.list();\n@@ -185,7 +180,7 @@ public void addClientApp() {\n         waClientApp = new WAClientApp();\n         waClientApp.setClientAppTO(buildSAML2SP());\n         clientAppId = waClientApp.getClientAppTO().getClientAppId();\n-        addPolicies(waClientApp, false, true);\n+        addPolicies(waClientApp, true);\n \n         SyncopeCoreTestingServer.CLIENT_APPS.add(waClientApp);\n         apps = service.list();\n@@ -202,12 +197,12 @@ public void addClientApp() {\n         assertEquals(samlspto.getEntityId(), saml.getServiceId());\n         assertTrue(saml.getAuthenticationPolicy().getRequiredAuthenticationHandlers().contains(\"TestAuthModule\"));\n         assertNotNull(found.getAccessStrategy());\n-        assertTrue(saml.getAttributeReleasePolicy() instanceof ReturnAllowedAttributeReleasePolicy);\n+        assertTrue(saml.getAttributeReleasePolicy() instanceof ChainingAttributeReleasePolicy);\n \n         waClientApp = new WAClientApp();\n         waClientApp.setClientAppTO(buildSAML2SP());\n         clientAppId = waClientApp.getClientAppTO().getClientAppId();\n-        addPolicies(waClientApp, false, false);\n+        addPolicies(waClientApp, false);\n \n         SyncopeCoreTestingServer.CLIENT_APPS.add(waClientApp);\n         apps = service.list();\n@@ -246,7 +241,7 @@ public void delegatedAuthentication() {\n         waClientApp.setClientAppTO(buildOIDCRP());\n         waClientApp.getAuthModules().add(0, authModuleTO);\n         Long clientAppId = waClientApp.getClientAppTO().getClientAppId();\n-        addPolicies(waClientApp, false, false);\n+        addPolicies(waClientApp, false);\n         DefaultAuthPolicyConf authPolicyConf = (DefaultAuthPolicyConf) waClientApp.getAuthPolicy().getConf();\n         authPolicyConf.getAuthModules().clear();\n         authPolicyConf.getAuthModules().add(authModuleTO.getKey());"}]}