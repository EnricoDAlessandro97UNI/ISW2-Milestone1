{"sha":"787e8f01382c65fa151f1b1590591b83dc333c5d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc4N2U4ZjAxMzgyYzY1ZmExNTFmMWIxNTkwNTkxYjgzZGMzMzNjNWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-04-03T12:47:28Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-04-03T12:47:28Z"},"message":"[SYNCOPE-48] Implemented correct role entitlement inheritance: needed to fix some minor related things as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1308872 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ba9eab0478b11332b5db3134e773081f74ef6ea7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ba9eab0478b11332b5db3134e773081f74ef6ea7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/787e8f01382c65fa151f1b1590591b83dc333c5d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/787e8f01382c65fa151f1b1590591b83dc333c5d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/787e8f01382c65fa151f1b1590591b83dc333c5d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/787e8f01382c65fa151f1b1590591b83dc333c5d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"06f8627caa00390eae2dfc24fc5903fd1cc1d0eb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/06f8627caa00390eae2dfc24fc5903fd1cc1d0eb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/06f8627caa00390eae2dfc24fc5903fd1cc1d0eb"}],"stats":{"total":141,"additions":103,"deletions":38},"files":[{"sha":"550ff5649998cc13a1942e6698918c0260ef93a2","filename":"client/src/main/java/org/syncope/client/util/ConnConfPropUtils.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -38,8 +38,11 @@ private ConnConfPropUtils() {\n     public static Set<ConnConfProperty> joinConnInstanceProperties(\n             final Map<String, ConnConfProperty> connectorProp, final Map<String, ConnConfProperty> resourceProp) {\n \n-        connectorProp.putAll(resourceProp);\n-        return new HashSet<ConnConfProperty>(connectorProp.values());\n+        Set<ConnConfProperty> result = new HashSet<ConnConfProperty>();\n+        result.addAll(connectorProp.values());\n+        result.addAll(resourceProp.values());\n+\n+        return result;\n     }\n \n     public static Map<String, ConnConfProperty> getConnConfPropertyMap(final Set<ConnConfProperty> properties) {"},{"sha":"babeaa29a4388699ba54b77ffca15e29625c8484","filename":"console/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -190,7 +190,7 @@ under the License.\n     <plugins>\n \n       <plugin>\n-        <groupId>org.codehaus.groovy.maven</groupId>\n+        <groupId>org.codehaus.gmaven</groupId>\n         <artifactId>gmaven-plugin</artifactId>\n         <inherited>true</inherited>\n         <executions>"},{"sha":"35c14939a3992a01249817038641046954bc0426","filename":"console/src/test/java/org/syncope/console/EditProfileTestITCase.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -38,8 +38,7 @@ public void selfRegistration() {\n \n         selenium.click(\"//div/span/span/a\");\n \n-        selenium\n-                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n \n         selenium.click(\"css=a.w_close\");\n \n@@ -61,14 +60,13 @@ public void editUserProfile() {\n         selenium.click(\"name=:submit\");\n         selenium.waitForPageToLoad(\"30000\");\n \n-        selenium.click(\"css=img[alt=\\\"Users\\\"]\");\n+        selenium.click(\"css=img[alt=\\\"Schema\\\"]\");\n         selenium.waitForPageToLoad(\"30000\");\n \n         selenium.click(\"id=username\");\n         selenium.click(\"//span[@id='editProfile']/a\");\n \n-        selenium\n-                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n \n         assertTrue(selenium.isElementPresent(\"//input[@value='user1']\"));\n "},{"sha":"62175c3d153ba486727d2dbab849e3702fd32024","filename":"console/src/test/java/org/syncope/console/ResourceTestITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -97,8 +97,7 @@ public void checkConnection() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium\n-                .click(\"//*[@id=\\\"users-contain\\\"]//\" + \"*[span=\\\"ws-target-resource-delete\\\"]/../td[4]/span/span[7]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[span=\\\"ws-target-resource-delete\\\"]/../td[4]/span/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");"},{"sha":"83a631974351dbff642cbe4a3734dfd7bda5f310","filename":"core/src/main/java/org/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -19,6 +19,7 @@\n package org.syncope.core.persistence.dao;\n \n import java.util.List;\n+import java.util.Set;\n import org.syncope.core.persistence.beans.Entitlement;\n import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.membership.Membership;\n@@ -39,6 +40,8 @@ public interface RoleDAO extends DAO {\n \n     List<SyncopeRole> findChildren(Long roleId);\n \n+    Set<SyncopeRole> findAncestors(SyncopeRole role);\n+\n     List<SyncopeRole> findAll();\n \n     List<Membership> findMemberships(SyncopeRole role);"},{"sha":"6b90bc31d64ecfdf78d7b415c5c751b16d84a843","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -18,7 +18,9 @@\n  */\n package org.syncope.core.persistence.dao.impl;\n \n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n@@ -105,6 +107,20 @@ public List<SyncopeRole> findChildren(final Long roleId) {\n         return query.getResultList();\n     }\n \n+    private void findAncestors(final Set<SyncopeRole> result, final SyncopeRole role) {\n+        if (role.getParent() != null && !result.contains(role.getParent())) {\n+            result.add(role.getParent());\n+            findAncestors(result, role.getParent());\n+        }\n+    }\n+\n+    @Override\n+    public Set<SyncopeRole> findAncestors(final SyncopeRole role) {\n+        Set<SyncopeRole> result = new HashSet<SyncopeRole>();\n+        findAncestors(result, role);\n+        return result;\n+    }\n+\n     @Override\n     public List<SyncopeRole> findAll() {\n         Query query = entityManager.createQuery(\"SELECT e FROM SyncopeRole e\");"},{"sha":"9e654221e5d1609228a5fea6672bd10bca9ab345","filename":"core/src/main/java/org/syncope/core/security/SyncopeUserDetailsService.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -72,11 +72,10 @@ public UserDetails loadUserByUsername(final String username) throws UsernameNotF\n                 throw new UsernameNotFoundException(\"Could not find any user with id \" + username);\n             }\n \n-            // Give entitlements based on roles owned by user,\n-            // considering role inheritance as well\n+            // Give entitlements based on roles owned by user, and their ancestors\n             Set<SyncopeRole> roles = new HashSet<SyncopeRole>(user.getRoles());\n-            for (Long roleId : user.getRoleIds()) {\n-                roles.addAll(roleDAO.findChildren(roleId));\n+            for (SyncopeRole role : user.getRoles()) {\n+                roles.addAll(roleDAO.findAncestors(role));\n             }\n             for (SyncopeRole role : roles) {\n                 for (Entitlement entitlement : role.getEntitlements()) {"},{"sha":"7a196d34a56b00f2cbb44a1779f2f41445712a4a","filename":"core/src/test/java/org/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":60,"deletions":12,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -99,8 +99,8 @@ public void testUserSchemaAuthorization() {\n         assertNotNull(schemaTO);\n \n         // 4. read the schema created above (as user) - success\n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userTO.getUsername(), \"password123\"));\n \n@@ -142,8 +142,8 @@ public void testUserRead() {\n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n \n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userTO.getUsername(), \"password123\"));\n \n@@ -181,8 +181,8 @@ public void testUserSearch() {\n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n \n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userTO.getUsername(), \"password123\"));\n \n@@ -231,13 +231,13 @@ public void checkFailedLogins() {\n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n \n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userTO.getUsername(), \"password123\"));\n \n-        UserTO readUserTO = restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\", UserTO.class, userTO\n-                .getId());\n+        UserTO readUserTO =\n+                restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\", UserTO.class, userTO.getId());\n \n         assertNotNull(readUserTO);\n         assertNotNull(readUserTO.getFailedLogins());\n@@ -299,8 +299,8 @@ public void checkUserSuspension() {\n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n \n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userTO.getUsername(), \"password123\"));\n \n@@ -407,4 +407,52 @@ public void checkUserSuspension() {\n         assertNotNull(userTO);\n         assertEquals(Integer.valueOf(0), userTO.getFailedLogins());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE48() {\n+        // Parent role, able to create users with role 1\n+        RoleTO parentRole = new RoleTO();\n+        parentRole.setName(\"parentAdminRole\");\n+        parentRole.addEntitlement(\"USER_CREATE\");\n+        parentRole.addEntitlement(\"ROLE_1\");\n+        parentRole.setParent(1L);\n+\n+        parentRole = restTemplate.postForObject(BASE_URL + \"role/create\", parentRole, RoleTO.class);\n+        assertNotNull(parentRole);\n+\n+        // Child role, with no entitlements\n+        RoleTO childRole = new RoleTO();\n+        childRole.setName(\"childAdminRole\");\n+        childRole.setParent(parentRole.getId());\n+\n+        childRole = restTemplate.postForObject(BASE_URL + \"role/create\", childRole, RoleTO.class);\n+        assertNotNull(childRole);\n+\n+        // User with child role, created by admin\n+        UserTO role1Admin = UserTestITCase.getSampleTO(\"syncope48admin@apache.org\");\n+        role1Admin.setPassword(\"password\");\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(childRole.getId());\n+        role1Admin.addMembership(membershipTO);\n+\n+        role1Admin = restTemplate.postForObject(BASE_URL + \"user/create\", role1Admin, UserTO.class);\n+        assertNotNull(role1Admin);\n+\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n+        ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(), new UsernamePasswordCredentials(role1Admin.getUsername(), \"password\"));\n+\n+        // User with role 1, created by user with child role created above\n+        UserTO role1User = UserTestITCase.getSampleTO(\"syncope48user@apache.org\");\n+        membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(1L);\n+        role1User.addMembership(membershipTO);\n+\n+        role1User = restTemplate.postForObject(BASE_URL + \"user/create\", role1User, UserTO.class);\n+        assertNotNull(role1User);\n+\n+        // reset admin credentials for restTemplate\n+        super.setupRestTemplate();\n+    }\n }"},{"sha":"34b82cac205a18d681c6eb369293b1e6a855b205","filename":"core/src/test/java/org/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":11,"deletions":12,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/787e8f01382c65fa151f1b1590591b83dc333c5d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=787e8f01382c65fa151f1b1590591b83dc333c5d","patch":"@@ -26,6 +26,7 @@\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n+import org.springframework.web.client.HttpClientErrorException;\n import org.springframework.web.client.HttpStatusCodeException;\n import org.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.syncope.client.mod.UserMod;\n@@ -42,19 +43,17 @@ public class UserRequestTestITCase extends AbstractTest {\n \n     @Test\n     public void selfRead() {\n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(\"user1\", \"password\"));\n \n-        SyncopeClientException exception = null;\n         try {\n             restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\", UserTO.class, 1);\n             fail();\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            exception = e.getException(SyncopeClientExceptionType.UnauthorizedRole);\n+        } catch (HttpClientErrorException e) {\n+            assertEquals(HttpStatus.FORBIDDEN, e.getStatusCode());\n         }\n-        assertNotNull(exception);\n \n         UserTO userTO = restTemplate.getForObject(BASE_URL + \"user/request/read/self\", UserTO.class);\n         assertEquals(\"user1\", userTO.getUsername());\n@@ -103,8 +102,8 @@ public void create() {\n         attrCond.setSchema(\"userId\");\n         attrCond.setExpression(\"selfcreate@syncope-idm.org\");\n \n-        final List<UserTO> matchingUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\", NodeCond\n-                .getLeafCond(attrCond), UserTO[].class));\n+        final List<UserTO> matchingUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\", NodeCond.\n+                getLeafCond(attrCond), UserTO[].class));\n         assertTrue(matchingUsers.isEmpty());\n \n         // 7. actually create user\n@@ -136,8 +135,8 @@ public void update() {\n         assertNotNull(exception);\n \n         // 3. auth as user just created\n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userTO.getUsername(), initialPassword));\n \n@@ -194,8 +193,8 @@ public void delete() {\n         assertNotNull(exception);\n \n         // 3. auth as user just created\n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n-                .getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userTO.getUsername(), initialPassword));\n "}]}