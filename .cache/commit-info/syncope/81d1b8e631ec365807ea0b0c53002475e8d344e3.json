{"sha":"81d1b8e631ec365807ea0b0c53002475e8d344e3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgxZDFiOGU2MzFlYzM2NTgwN2VhMGIwYzUzMDAyNDc1ZThkMzQ0ZTM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-23T15:50:39Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-23T16:07:13Z"},"message":"Further attempt to investigate how this single test is failing only in Travis CI","tree":{"sha":"91cebb7ea55bc7eb4517c5ccc07337109f37c496","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/91cebb7ea55bc7eb4517c5ccc07337109f37c496"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/81d1b8e631ec365807ea0b0c53002475e8d344e3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81d1b8e631ec365807ea0b0c53002475e8d344e3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/81d1b8e631ec365807ea0b0c53002475e8d344e3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81d1b8e631ec365807ea0b0c53002475e8d344e3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e9d42f4ab157538001c90ab15df6416ba38f7538","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9d42f4ab157538001c90ab15df6416ba38f7538","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e9d42f4ab157538001c90ab15df6416ba38f7538"}],"stats":{"total":50,"additions":49,"deletions":1},"files":[{"sha":"66e2d76d3d06d55b1baa48335ed952c4ef9d1f37","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":31,"deletions":1,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/81d1b8e631ec365807ea0b0c53002475e8d344e3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/81d1b8e631ec365807ea0b0c53002475e8d344e3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=81d1b8e631ec365807ea0b0c53002475e8d344e3","patch":"@@ -25,15 +25,22 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.Properties;\n import java.util.Set;\n import java.util.UUID;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -148,9 +155,30 @@ public void create() {\n     }\n \n     @Test\n-    public void pull() throws Exception {\n+    public void fromCSV() throws Exception {\n         removeTestUsers();\n \n+        // Attemp to reset CSV content\n+        Properties props = new Properties();\n+        InputStream propStream = null;\n+        InputStream srcStream = null;\n+        OutputStream dstStream = null;\n+        try {\n+            propStream = getClass().getResourceAsStream(\"/core-test.properties\");\n+            props.load(propStream);\n+\n+            srcStream = new FileInputStream(props.getProperty(\"test.csv.src\"));\n+            dstStream = new FileOutputStream(props.getProperty(\"test.csv.dst\"));\n+\n+            IOUtils.copy(srcStream, dstStream);\n+        } catch (IOException e) {\n+            fail(e.getMessage());\n+        } finally {\n+            IOUtils.closeQuietly(propStream);\n+            IOUtils.closeQuietly(srcStream);\n+            IOUtils.closeQuietly(dstStream);\n+        }\n+\n         // -----------------------------\n         // Create a new user ... it should be updated applying pull policy\n         // -----------------------------\n@@ -180,6 +208,8 @@ public void pull() throws Exception {\n \n             ExecTO exec = execProvisioningTask(taskService, PULL_TASK_KEY, 50, false);\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(exec.getStatus()));\n+            \n+            LOG.info(\"Execution of task {}:\\n{}\", PULL_TASK_KEY, exec);\n \n             // check for pull results\n             int usersPost = userService.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM)."},{"sha":"f4e4d32b2301f91d934a2b11155ca73a58551d6b","filename":"fit/core-reference/src/test/resources/core-test.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/81d1b8e631ec365807ea0b0c53002475e8d344e3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/81d1b8e631ec365807ea0b0c53002475e8d344e3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties?ref=81d1b8e631ec365807ea0b0c53002475e8d344e3","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+test.csv.src=${project.build.directory}/test-classes/test.csv\n+test.csv.dst=${test.csvdir.path}/test.csv"}]}