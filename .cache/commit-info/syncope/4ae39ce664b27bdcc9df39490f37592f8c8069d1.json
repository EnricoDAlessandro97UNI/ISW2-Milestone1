{"sha":"4ae39ce664b27bdcc9df39490f37592f8c8069d1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRhZTM5Y2U2NjRiMjdiZGNjOWRmMzk0OTBmMzc1OTJmOGM4MDY5ZDE=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2020-02-12T14:39:16Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2020-02-12T14:39:16Z"},"message":"[SYNCOPE-1476] keep code aligned between 'membership' and 'own' plain attributes","tree":{"sha":"d29d63ab132898a585110fb1514f218c0a73e1c2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d29d63ab132898a585110fb1514f218c0a73e1c2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4ae39ce664b27bdcc9df39490f37592f8c8069d1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ae39ce664b27bdcc9df39490f37592f8c8069d1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4ae39ce664b27bdcc9df39490f37592f8c8069d1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ae39ce664b27bdcc9df39490f37592f8c8069d1/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"688efa800efc4f093334308e70fa4979e4635814","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/688efa800efc4f093334308e70fa4979e4635814","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/688efa800efc4f093334308e70fa4979e4635814"}],"stats":{"total":55,"additions":12,"deletions":43},"files":[{"sha":"0907c22d20aaecff78ac0769fe0cfb394476130e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":1,"deletions":28,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4ae39ce664b27bdcc9df39490f37592f8c8069d1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4ae39ce664b27bdcc9df39490f37592f8c8069d1/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=4ae39ce664b27bdcc9df39490f37592f8c8069d1","patch":"@@ -25,9 +25,6 @@\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n-import org.apache.syncope.client.ui.commons.markup.html.form.AbstractFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n@@ -233,32 +230,8 @@ public PlainSchemasMemberships(\n                 private static final long serialVersionUID = 5306618783986001008L;\n \n                 @Override\n-                @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n                 protected void populateItem(final ListItem<Attr> item) {\n-                    Attr attrTO = item.getModelObject();\n-\n-                    AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n-                    if (mode == AjaxWizard.Mode.TEMPLATE || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n-                        FieldPanel.class.cast(panel).setNewModel(attributableTO.getObject(), attrTO.getSchema());\n-                    } else {\n-                        // SYNCOPE-1476 set form as multipart to properly manage membership attributes\n-                        panel = new MultiFieldPanel.Builder<>(new ListModel<String>() {\n-\n-                            private static final long serialVersionUID = -1765231556272935141L;\n-\n-                            @Override\n-                            public List<String> getObject() {\n-                                return attributableTO.getObject().getPlainAttr(attrTO.getSchema()).get().getValues();\n-                            }\n-                        }).build(\"panel\",\n-                                attrTO.getSchema(),\n-                                FieldPanel.class.cast(panel)).setFormAsMultipart(true);\n-                        // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n-                        ((MultiFieldPanel) panel).setReadOnly(schemas.get(attrTO.getSchema()).isReadonly());\n-                    }\n-                    item.add(panel);\n-\n-                    setExternalAction(attrTO, panel);\n+                    setPanel(schemas, item, false);\n                 }\n             });\n         }"},{"sha":"8d57bc31a3db29208785e0881bf9bcf01ce5495e","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/wizards/any/PlainAttrs.java","status":"modified","additions":11,"deletions":15,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4ae39ce664b27bdcc9df39490f37592f8c8069d1/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4ae39ce664b27bdcc9df39490f37592f8c8069d1/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fwizards%2Fany%2FPlainAttrs.java?ref=4ae39ce664b27bdcc9df39490f37592f8c8069d1","patch":"@@ -413,21 +413,17 @@ protected void populateItem(final ListItem<Attr> item) {\n                     }\n \n                     AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n-\n-                    panel = new MultiFieldPanel.Builder<>(new ListModel<String>() {\n-\n-                        private static final long serialVersionUID = -1765231556272935141L;\n-\n-                        @Override\n-                        public List<String> getObject() {\n-                            return attributableTO.getObject().getPlainAttr(attrTO.getSchema()).get().getValues();\n-                        }\n-                    }).build(\"panel\",\n-                            attrTO.getSchema(),\n-                            FieldPanel.class.cast(panel));\n-                    // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n-                    ((MultiFieldPanel) panel).setReadOnly(schemas.get(attrTO.getSchema()).isReadonly());\n-\n+                    if (schemas.get(attrTO.getSchema()).isMultivalue()) {\n+                        panel = new MultiFieldPanel.Builder<>(\n+                                new PropertyModel<>(\n+                                        attributableTO.getObject().getPlainAttr(attrTO.getSchema()), \"values\"))\n+                                .build(\"panel\", attrTO.getSchema(), FieldPanel.class.cast(panel));\n+                        // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n+                        ((MultiFieldPanel) panel).setReadOnly(schemas.get(attrTO.getSchema()).isReadonly());\n+                    } else {\n+                        FieldPanel.class.cast(panel).setNewModel(attrTO.getValues());\n+                    }\n+                    \n                     item.add(panel);\n                 }\n             });"}]}