{"sha":"7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdjM2MyYmQwYmM2ZjQ1Yjk2ZTlhOTRhODFmYTk5MTNiYzUwZmI1MzU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-09-17T10:08:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-09-17T10:08:18Z"},"message":"[SYNCOPE-405] Replace completed, for audit and logging: currently on log4j 2.0-beta9-SNAPSHOT\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1523969 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c8bdb548bab3fe5b9ec7a00db63d9fb628ebde00","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c8bdb548bab3fe5b9ec7a00db63d9fb628ebde00"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"555da1b154a2f846047541873dde7fc58deddd3f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/555da1b154a2f846047541873dde7fc58deddd3f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/555da1b154a2f846047541873dde7fc58deddd3f"}],"stats":{"total":1930,"additions":750,"deletions":1180},"files":[{"sha":"13f5a8a2b6e261528294f8e31372ef7477ff66d1","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":1,"deletions":28,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -35,22 +35,6 @@ under the License.\n \r\n   <dependencies>\r\n \r\n-    <dependency>\r\n-      <groupId>org.apache.wicket</groupId>\r\n-      <artifactId>wicket</artifactId>\r\n-      <type>pom</type>\r\n-    </dependency>\r\n-\r\n-    <dependency>\r\n-      <groupId>org.apache.wicket</groupId>\r\n-      <artifactId>wicket-extensions</artifactId>\r\n-    </dependency>\r\n-\r\n-    <dependency>\r\n-      <groupId>org.apache.wicket</groupId>\r\n-      <artifactId>wicket-spring</artifactId>\r\n-    </dependency>\r\n-\r\n     <dependency>\r\n       <groupId>org.apache.syncope</groupId>\r\n       <artifactId>syncope-client</artifactId>\r\n@@ -66,17 +50,6 @@ under the License.\n       <classifier>classes</classifier>\r\n     </dependency>\r\n \r\n-    <dependency>\r\n-      <groupId>org.springframework</groupId>\r\n-      <artifactId>spring-webmvc</artifactId>\r\n-    </dependency>\r\n-\r\n-    <dependency>\r\n-      <groupId>org.apache.wicket</groupId>\r\n-      <artifactId>wicket-auth-roles</artifactId>\r\n-      <type>jar</type>\r\n-    </dependency>\r\n-\r\n     <!-- TEST -->\r\n     <dependency>\r\n       <groupId>org.apache.syncope</groupId>\r\n@@ -189,7 +162,7 @@ under the License.\n             <type>standalone</type>\r\n             <properties>\r\n               <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>\r\n-              <cargo.jvmargs>-Xms512m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m</cargo.jvmargs>\r\n+              <cargo.jvmargs>-XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=256m</cargo.jvmargs>\r\n             </properties>\r\n           </configuration>\r\n           <deployables>\r"},{"sha":"8f1a5d0a3c270ee48335698c1a7f25c9ea4b08b0","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":1,"deletions":23,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -37,7 +37,7 @@ under the License.\n \r\n     <dependency>\r\n       <groupId>org.apache.syncope</groupId>\r\n-      <artifactId>syncope-client</artifactId>\r\n+      <artifactId>syncope-common</artifactId>\r\n     </dependency>\r\n     <dependency>\r\n       <groupId>org.apache.syncope</groupId>\r\n@@ -50,28 +50,6 @@ under the License.\n       <classifier>classes</classifier>\r\n     </dependency>\r\n \r\n-    <dependency>\r\n-      <groupId>javax.servlet</groupId>\r\n-      <artifactId>servlet-api</artifactId>\r\n-    </dependency>\r\n-    <dependency>\r\n-      <groupId>javax.servlet.jsp</groupId>\r\n-      <artifactId>jsp-api</artifactId>\r\n-    </dependency>\r\n-    <dependency>\r\n-      <groupId>javax.servlet</groupId>\r\n-      <artifactId>jstl</artifactId>\r\n-    </dependency>\r\n-\r\n-    <dependency>\r\n-      <groupId>org.springframework.security</groupId>\r\n-      <artifactId>spring-security-web</artifactId>\r\n-    </dependency>\r\n-    <dependency>\r\n-      <groupId>org.springframework.security</groupId>\r\n-      <artifactId>spring-security-config</artifactId>\r\n-    </dependency>\r\n-\r\n     <!-- TEST -->\r\n     <dependency>\r\n       <groupId>org.apache.syncope</groupId>\r"},{"sha":"d9e44192244eb753396baef6cefdf094c46fe078","filename":"archetype/src/main/resources/meta-pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -44,6 +44,12 @@ under the License.\n \r\n   <dependencyManagement>\r\n     <dependencies>\r\n+      <dependency>\r\n+        <groupId>org.apache.syncope</groupId>\r\n+        <artifactId>syncope-common</artifactId>\r\n+        <version>${syncope.version}</version>\r\n+      </dependency> \r\n+\r\n       <dependency>\r\n         <groupId>org.apache.syncope</groupId>\r\n         <artifactId>syncope-client</artifactId>\r"},{"sha":"0a82704815bc02b805575483edbbd64a2632ed0a","filename":"build-tools/pom.xml","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/build-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/build-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fpom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -95,8 +95,8 @@ under the License.\n       <artifactId>org.connid.bundles.db.table</artifactId>\n       <version>${connid.db.table.version}</version>\n       <scope>runtime</scope>\n-    </dependency>\n-      \n+    </dependency>     \n+    \n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-api</artifactId>\n@@ -110,7 +110,6 @@ under the License.\n     <dependency>\n       <groupId>commons-logging</groupId>\n       <artifactId>commons-logging</artifactId>\n-      <version>1.1.1</version>\n       <scope>provided</scope>\n     </dependency>\n     <dependency>"},{"sha":"b98522c138f06bb925052e525eab6d4081b1a9e9","filename":"build-tools/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/build-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/build-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -57,6 +57,7 @@ under the License.\n     <param-name>contextConfigLocation</param-name>\n     <param-value>classpath*:/*Context.xml</param-value>\n   </context-param>\n+  \n   <listener>\n     <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n   </listener>"},{"sha":"9c54f89c2e1ed9a711ff910d07e2f40609214f52","filename":"client/pom.xml","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -62,15 +62,10 @@ under the License.\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-web</artifactId>\n     </dependency>\n-\n-    <dependency>\n-      <groupId>org.apache.httpcomponents</groupId>\n-      <artifactId>httpclient</artifactId>\n-    </dependency>\n     \n     <dependency>\n-      <groupId>ch.qos.logback</groupId>\n-      <artifactId>logback-classic</artifactId>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n     </dependency>\n   </dependencies>\n \n@@ -89,10 +84,8 @@ under the License.\n               org.apache.syncope.client*;version=${project.version};-split-package:=merge-first\n             </Export-Package>\n             <Import-Package>\n-              org.apache.http*;version=\"[4,5)\",\n               com.fasterxml.jackson.annotation;version=\"[2.2.2,2.3)\",\n               org.springframework*;version=\"[3,4)\",\n-              ch.qos.logback.classic;resolution:=optional,\n               org.slf4j;resolution:=optional,\n               *\n             </Import-Package>\n@@ -118,6 +111,10 @@ under the License.\n           <include>NOTICE</include>\n         </includes>\n       </resource>\n+      <resource>\n+        <directory>src/main/resources/META-INF</directory>\n+        <targetPath>META-INF</targetPath>\n+      </resource>\n     </resources>\n   </build>\n </project>"},{"sha":"c960cda715c9c72c1707c38de9b62e4e94138ba3","filename":"client/src/main/java/org/apache/syncope/client/rest/RestClientExceptionMapper.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientExceptionMapper.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -29,7 +29,6 @@\n import javax.ws.rs.ext.Provider;\r\n import javax.xml.ws.WebServiceException;\r\n import org.apache.cxf.jaxrs.client.ResponseExceptionMapper;\r\n-import org.apache.http.HttpStatus;\r\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\r\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\r\n import org.apache.syncope.common.validation.SyncopeClientException;\r\n@@ -62,11 +61,11 @@ public Exception fromResponse(final Response response) {\n             // ex = new UnauthorizedRoleException(-1L);\r\n \r\n             // 2. Map SC_UNAUTHORIZED\r\n-        } else if (statusCode == HttpStatus.SC_UNAUTHORIZED) {\r\n+        } else if (statusCode == Response.Status.UNAUTHORIZED.getStatusCode()) {\r\n             ex = new AccessControlException(\"Remote unauthorized exception\");\r\n \r\n             // 3. Map SC_BAD_REQUEST\r\n-        } else if (statusCode == HttpStatus.SC_BAD_REQUEST) {\r\n+        } else if (statusCode == Response.Status.BAD_REQUEST.getStatusCode()) {\r\n             ex = new BadRequestException();\r\n \r\n         } else {\r"},{"sha":"6e7bd364d34051c484e97facb29ed7932d3c0b35","filename":"client/src/main/resources/META-INF/cxf/org.apache.cxf.Logger","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/client%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/client%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1 @@\n+org.apache.cxf.common.logging.Slf4jLogger"},{"sha":"2c48995d9bd0e6cac9405d0eefd904d4b2c00716","filename":"common/pom.xml","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fpom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -63,13 +63,9 @@ under the License.\n     </dependency>\n       \n     <dependency>\n-      <groupId>ch.qos.logback</groupId>\n-      <artifactId>logback-classic</artifactId>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>    \n     \n     <dependency>\n       <groupId>junit</groupId>\n@@ -96,7 +92,7 @@ under the License.\n               org.apache.commons.lang3;version=\"[3.1,3.2)\",\n               com.fasterxml.jackson.annotation;version=\"[2.2.2,2.3)\",\n               org.springframework*;version=\"[3,4)\",\n-              ch.qos.logback.classic;resolution:=optional,\n+              org.apache.logging.log4j*;resolution:=optional,\n               org.slf4j;resolution:=optional,\n               *\n             </Import-Package>"},{"sha":"11abb34ed9adb12291574ebfa8feb65f2ec02247","filename":"common/src/main/java/org/apache/syncope/common/SyncopeConstants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FSyncopeConstants.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -45,4 +45,6 @@ public class SyncopeConstants {\n \r\n     public static final String DEFAULT_ENCODING = \"UTF-8\";\r\n \r\n+    public static final String ROOT_LOGGER = \"ROOT\";\r\n+\r\n }\r"},{"sha":"01010ad2bbe268701aa372b7fdfa3bfbf0235029","filename":"common/src/main/java/org/apache/syncope/common/to/LoggerTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FLoggerTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FLoggerTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FLoggerTO.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -22,7 +22,7 @@\n import javax.xml.bind.annotation.XmlType;\r\n \r\n import org.apache.syncope.common.AbstractBaseBean;\r\n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\r\n+import org.apache.syncope.common.types.LoggerLevel;\r\n \r\n @XmlRootElement(name = \"logger\")\r\n @XmlType\r\n@@ -32,13 +32,13 @@ public class LoggerTO extends AbstractBaseBean {\n \r\n     private String name;\r\n \r\n-    private SyncopeLoggerLevel level;\r\n+    private LoggerLevel level;\r\n \r\n-    public SyncopeLoggerLevel getLevel() {\r\n+    public LoggerLevel getLevel() {\r\n         return level;\r\n     }\r\n \r\n-    public void setLevel(final SyncopeLoggerLevel level) {\r\n+    public void setLevel(final LoggerLevel level) {\r\n         this.level = level;\r\n     }\r\n \r"},{"sha":"cf78b51625c29b4f9aaff189e2a1d43af723970b","filename":"common/src/main/java/org/apache/syncope/common/types/AuditLoggerName.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditLoggerName.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -75,7 +75,7 @@ public Enum<?> getSubcategory() {\n     }\r\n \r\n     public String toLoggerName() {\r\n-        return new StringBuilder().append(SyncopeLoggerType.AUDIT.getPrefix()).append('.').\r\n+        return new StringBuilder().append(LoggerType.AUDIT.getPrefix()).append('.').\r\n                 append(category.name()).append('.').\r\n                 append(subcategory.name()).append('.').\r\n                 append(result.name()).toString();\r\n@@ -89,8 +89,8 @@ public static AuditLoggerName fromLoggerName(final String loggerName)\n             throw new IllegalArgumentException(\"Null value not permitted\");\r\n         }\r\n \r\n-        if (!loggerName.startsWith(SyncopeLoggerType.AUDIT.getPrefix())) {\r\n-            throw new ParseException(\"Audit logger name must start with \" + SyncopeLoggerType.AUDIT.getPrefix(), 0);\r\n+        if (!loggerName.startsWith(LoggerType.AUDIT.getPrefix())) {\r\n+            throw new ParseException(\"Audit logger name must start with \" + LoggerType.AUDIT.getPrefix(), 0);\r\n         }\r\n \r\n         String[] splitted = loggerName.split(\"\\\\.\");\r"},{"sha":"7d6c9cc0615de4d5b2dfa63f43700e2cfc1cc8a6","filename":"common/src/main/java/org/apache/syncope/common/types/LoggerLevel.java","status":"renamed","additions":19,"deletions":8,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerLevel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerLevel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerLevel.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -19,20 +19,31 @@\n package org.apache.syncope.common.types;\r\n \r\n import javax.xml.bind.annotation.XmlEnum;\r\n+import org.apache.logging.log4j.Level;\r\n \r\n @XmlEnum\r\n-public enum SyncopeLoggerType {\r\n+public enum LoggerLevel {\r\n \r\n-    LOG(\"\"),\r\n-    AUDIT(\"syncope.audit\");\r\n+    OFF(Level.OFF),\r\n+    FATAL(Level.FATAL),\r\n+    ERROR(Level.ERROR),\r\n+    WARN(Level.WARN),\r\n+    INFO(Level.INFO),\r\n+    DEBUG(Level.DEBUG),\r\n+    TRACE(Level.TRACE),\r\n+    ALL(Level.ALL);\r\n \r\n-    private String prefix;\r\n+    private Level level;\r\n \r\n-    SyncopeLoggerType(final String prefix) {\r\n-        this.prefix = prefix;\r\n+    LoggerLevel(final Level level) {\r\n+        this.level = level;\r\n     }\r\n \r\n-    public String getPrefix() {\r\n-        return prefix;\r\n+    public Level getLevel() {\r\n+        return level;\r\n+    }\r\n+\r\n+    public static LoggerLevel fromLevel(final Level level) {\r\n+        return LoggerLevel.valueOf(level.name());\r\n     }\r\n }\r","previous_filename":"common/src/main/java/org/apache/syncope/common/types/SyncopeLoggerType.java"},{"sha":"8507d3b5321acfa2a32327318678e88149e38abd","filename":"common/src/main/java/org/apache/syncope/common/types/LoggerType.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FLoggerType.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -26,16 +26,21 @@ public enum LoggerType {\n     /**\r\n      * This type describes a common logger used to handle system and application events.\r\n      */\r\n-    NORMAL,\r\n-\r\n+    LOG(\"\"),\r\n     /**\r\n      * Audit logger only focus on security related events, usually logging how did what and when.\r\n      * In case of a security incident audit loggers should allow an administrator to recall all\r\n      * actions a certain user has done.\r\n      */\r\n-    AUDIT;\r\n+    AUDIT(\"syncope.audit\");\r\n+\r\n+    private String prefix;\r\n+\r\n+    LoggerType(final String prefix) {\r\n+        this.prefix = prefix;\r\n+    }\r\n \r\n-    public static LoggerType fromString(final String value) {\r\n-        return LoggerType.valueOf(value.toUpperCase());\r\n+    public String getPrefix() {\r\n+        return prefix;\r\n     }\r\n }\r"},{"sha":"330fd942149fb4ec30edf8fd3ff5b5b66cc08f61","filename":"common/src/main/java/org/apache/syncope/common/types/SyncopeLoggerLevel.java","status":"removed","additions":0,"deletions":68,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncopeLoggerLevel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncopeLoggerLevel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FSyncopeLoggerLevel.java?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,68 +0,0 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- */\r\n-package org.apache.syncope.common.types;\r\n-\r\n-import javax.xml.bind.annotation.XmlEnum;\r\n-\r\n-import ch.qos.logback.classic.Level;\r\n-\r\n-@XmlEnum\r\n-public enum SyncopeLoggerLevel {\r\n-\r\n-    OFF(Level.OFF),\r\n-    ERROR(Level.ERROR),\r\n-    WARN(Level.WARN),\r\n-    INFO(Level.INFO),\r\n-    DEBUG(Level.DEBUG),\r\n-    TRACE(Level.TRACE),\r\n-    ALL(Level.ALL);\r\n-\r\n-    private Level level;\r\n-\r\n-    SyncopeLoggerLevel(final Level level) {\r\n-        this.level = level;\r\n-    }\r\n-\r\n-    public Level getLevel() {\r\n-        return level;\r\n-    }\r\n-\r\n-    public static SyncopeLoggerLevel fromLevel(final Level level) {\r\n-        SyncopeLoggerLevel result;\r\n-        if (level.equals(Level.OFF)) {\r\n-            result = OFF;\r\n-        } else if (level.equals(Level.ERROR)) {\r\n-            result = ERROR;\r\n-        } else if (level.equals(Level.WARN)) {\r\n-            result = WARN;\r\n-        } else if (level.equals(Level.INFO)) {\r\n-            result = INFO;\r\n-        } else if (level.equals(Level.DEBUG)) {\r\n-            result = DEBUG;\r\n-        } else if (level.equals(Level.TRACE)) {\r\n-            result = TRACE;\r\n-        } else if (level.equals(Level.ALL)) {\r\n-            result = ALL;\r\n-        } else {\r\n-            throw new IllegalArgumentException(\"Undefined Level \" + level);\r\n-        }\r\n-\r\n-        return result;\r\n-    }\r\n-}\r"},{"sha":"c707df8c7f2cb16f4caa2703e54acd91a4093b98","filename":"common/src/main/java/org/apache/syncope/common/util/CollectionWrapper.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.common.to.SyncActionClassTO;\r\n import org.apache.syncope.common.to.ValidatorTO;\r\n import org.apache.syncope.common.types.AuditLoggerName;\r\n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\r\n+import org.apache.syncope.common.types.LoggerLevel;\r\n \r\n public final class CollectionWrapper {\r\n \r\n@@ -105,7 +105,7 @@ public static List<LoggerTO> unwrapLogger(final Collection<AuditLoggerName> audi\n         for (AuditLoggerName l : auditNames) {\r\n             LoggerTO loggerTO = new LoggerTO();\r\n             loggerTO.setName(l.toLoggerName());\r\n-            loggerTO.setLevel(SyncopeLoggerLevel.DEBUG);\r\n+            loggerTO.setLevel(LoggerLevel.DEBUG);\r\n             respons.add(loggerTO);\r\n         }\r\n         return respons;\r"},{"sha":"a29a90fddb037a9ea8114ebc3e904d59289c176d","filename":"console/pom.xml","status":"modified","additions":19,"deletions":11,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -44,39 +44,47 @@ under the License.\n   \n   <dependencies>\n \n+    <dependency>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>servlet-api</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope</groupId>\n       <artifactId>syncope-client</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-\n+    \n     <dependency>\n-      <groupId>javax.servlet</groupId>\n-      <artifactId>servlet-api</artifactId>\n-      <scope>provided</scope>\n+      <groupId>org.apache.httpcomponents</groupId>\n+      <artifactId>httpclient</artifactId>\n     </dependency>\n \n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-api</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>ch.qos.logback</groupId>\n-      <artifactId>logback-core</artifactId>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+    </dependency> \n+    <dependency>\n+      <groupId>com.lmax</groupId>\n+      <artifactId>disruptor</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>ch.qos.logback</groupId>\n-      <artifactId>logback-classic</artifactId>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>commons-logging</groupId>\n       <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n     </dependency>\n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>    \n+    </dependency>\n \n     <dependency>\n       <groupId>org.apache.wicket</groupId>\n@@ -241,7 +249,7 @@ under the License.\n               <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>\n \n               <!--<cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</cargo.jvmargs>-->\n-              <cargo.jvmargs>-noverify ${javaagent} -Drebel.spring_plugin=false -Xms512m -Xmx1024m -XX:PermSize=512m -XX:MaxPermSize=1024m</cargo.jvmargs>\n+              <cargo.jvmargs>-noverify ${javaagent} -Drebel.spring_plugin=true -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=256m</cargo.jvmargs>\n             </properties>\n             <configfiles>\n               <configfile>"},{"sha":"0a28b30d4220effbcd0e03d3c54492dfc2dce7d5","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":25,"deletions":22,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -18,20 +18,22 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import ch.qos.logback.classic.Logger;\n-import ch.qos.logback.classic.LoggerContext;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.LoggerTO;\n import org.apache.syncope.common.to.NotificationTO;\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.types.PolicyType;\n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\n+import org.apache.syncope.common.types.LoggerLevel;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.HttpResourceStream;\n@@ -78,7 +80,6 @@\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.request.resource.ContentDisposition;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.slf4j.LoggerFactory;\n \n /**\n  * Configurations WebPage.\n@@ -621,26 +622,26 @@ public LoggerPropertyList(final ConsoleLoggerController consoleLoggerController,\n         protected void populateItem(final ListItem<LoggerTO> item) {\n             item.add(new Label(\"name\"));\n \n-            DropDownChoice<SyncopeLoggerLevel> level = new DropDownChoice<SyncopeLoggerLevel>(\"level\");\n-            level.setModel(new IModel<SyncopeLoggerLevel>() {\n+            DropDownChoice<LoggerLevel> level = new DropDownChoice<LoggerLevel>(\"level\");\n+            level.setModel(new IModel<LoggerLevel>() {\n \n                 private static final long serialVersionUID = -2350428186089596562L;\n \n                 @Override\n-                public SyncopeLoggerLevel getObject() {\n+                public LoggerLevel getObject() {\n                     return item.getModelObject().getLevel();\n                 }\n \n                 @Override\n-                public void setObject(final SyncopeLoggerLevel object) {\n+                public void setObject(final LoggerLevel object) {\n                     item.getModelObject().setLevel(object);\n                 }\n \n                 @Override\n                 public void detach() {\n                 }\n             });\n-            level.setChoices(Arrays.asList(SyncopeLoggerLevel.values()));\n+            level.setChoices(Arrays.asList(LoggerLevel.values()));\n             level.setOutputMarkupId(true);\n             level.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -678,28 +679,30 @@ private static class ConsoleLoggerController implements Serializable {\n         private static final long serialVersionUID = -1550459341476431714L;\n \n         public List<LoggerTO> getLoggers() {\n-            LoggerContext lc = (LoggerContext) LoggerFactory.getILoggerFactory();\n-            List<LoggerTO> result = new ArrayList<LoggerTO>(lc.getLoggerList().size());\n-            for (Logger logger : lc.getLoggerList()) {\n+            LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n+\n+            List<LoggerTO> result = new ArrayList<LoggerTO>();\n+            for (LoggerConfig logger : ctx.getConfiguration().getLoggers().values()) {\n+                final String loggerName = LogManager.ROOT_LOGGER_NAME.equals(logger.getName())\n+                        ? SyncopeConstants.ROOT_LOGGER : logger.getName();\n                 if (logger.getLevel() != null) {\n                     LoggerTO loggerTO = new LoggerTO();\n-                    loggerTO.setName(logger.getName());\n-                    loggerTO.setLevel(SyncopeLoggerLevel.fromLevel(logger.getLevel()));\n+                    loggerTO.setName(loggerName);\n+                    loggerTO.setLevel(LoggerLevel.fromLevel(logger.getLevel()));\n                     result.add(loggerTO);\n                 }\n             }\n \n             return result;\n         }\n \n-        public boolean setLogLevel(final String name, final SyncopeLoggerLevel level) {\n-            LoggerContext lc = (LoggerContext) LoggerFactory.getILoggerFactory();\n-            Logger logger = lc.getLogger(name);\n-            if (logger != null) {\n-                logger.setLevel(level.getLevel());\n-            }\n-\n-            return logger != null;\n+        public void setLogLevel(final String name, final LoggerLevel level) {\n+            LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n+            LoggerConfig logConf = SyncopeConstants.ROOT_LOGGER.equals(name)\n+                    ? ctx.getConfiguration().getLoggerConfig(LogManager.ROOT_LOGGER_NAME)\n+                    : ctx.getConfiguration().getLoggerConfig(name);\n+            logConf.setLevel(level.getLevel());\n+            ctx.updateLoggers();\n         }\n     }\n }"},{"sha":"3ea25a070118c6a7cdd0ccd3ada47c4237ab5edc","filename":"console/src/main/java/org/apache/syncope/console/rest/LoggerRestClient.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FLoggerRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FLoggerRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FLoggerRestClient.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditLoggerName;\n import org.apache.syncope.common.types.LoggerType;\n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\n+import org.apache.syncope.common.types.LoggerLevel;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.springframework.stereotype.Component;\n \n@@ -40,11 +40,11 @@ public class LoggerRestClient extends BaseRestClient {\n     private static final long serialVersionUID = 4579786978763032240L;\n \n     public List<LoggerTO> listLogs() {\n-        return getService(LoggerService.class).list(LoggerType.NORMAL);\n+        return getService(LoggerService.class).list(LoggerType.LOG);\n     }\n \n     public List<AuditLoggerName> listAudits() {\n-        List<LoggerTO> logger =  getService(LoggerService.class).list(LoggerType.AUDIT);\n+        List<LoggerTO> logger = getService(LoggerService.class).list(LoggerType.AUDIT);\n \n         return CollectionWrapper.wrapLogger(logger);\n     }\n@@ -62,23 +62,23 @@ public Map<AuditElements.Category, Set<AuditLoggerName>> listAuditsByCategory()\n         return result;\n     }\n \n-    public void setLogLevel(final String name, final SyncopeLoggerLevel level) {\n+    public void setLogLevel(final String name, final LoggerLevel level) {\n         LoggerTO loggerTO = new LoggerTO();\n         loggerTO.setName(name);\n         loggerTO.setLevel(level);\n-        getService(LoggerService.class).update(LoggerType.NORMAL, name, loggerTO);\n+        getService(LoggerService.class).update(LoggerType.LOG, name, loggerTO);\n     }\n \n     public void enableAudit(final AuditLoggerName auditLoggerName) {\n         String name = auditLoggerName.toLoggerName();\n         LoggerTO loggerTO = new LoggerTO();\n         loggerTO.setName(name);\n-        loggerTO.setLevel(SyncopeLoggerLevel.DEBUG);\n+        loggerTO.setLevel(LoggerLevel.DEBUG);\n         getService(LoggerService.class).update(LoggerType.AUDIT, name, loggerTO);\n     }\n \n     public void deleteLog(final String name) {\n-        getService(LoggerService.class).delete(LoggerType.NORMAL, name);\n+        getService(LoggerService.class).delete(LoggerType.LOG, name);\n     }\n \n     public void disableAudit(final AuditLoggerName auditLoggerName) {"},{"sha":"a33ef062c75d6a78a19ad38253af00614ef41745","filename":"console/src/main/resources/log4j2.xml","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/console%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/console%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\">\n+\n+  <appenders>\n+\n+    <RollingFile name=\"main\" fileName=\"${log.directory}/console.log\"\n+                 filePattern=\"${log.directory}/console-%d{yyyy-MM-dd}.log.gz\"\n+                 immediateFlush=\"false\" append=\"false\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingFile>\n+    \n+  </appenders>\n+\n+  <loggers>\n+\n+    <asyncLogger name=\"org.apache.syncope.client\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.syncope.console\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <root level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </root>\n+  \n+  </loggers>\n+  \n+</configuration>"},{"sha":"96a5577c1dd3879de2a2ee47a8554c945da998b8","filename":"console/src/main/resources/logback.xml","status":"removed","additions":0,"deletions":67,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,67 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<configuration scan=\"true\">\n-  <appender name=\"main\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n-    <file>${log.directory}/console.log</file>\n-    <append>true</append>\n-    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n-      <fileNamePattern>${log.directory}/console.log.%d{yyyy-MM-dd}</fileNamePattern>\n-      <maxHistory>30</maxHistory>\n-    </rollingPolicy>\n-    <encoder>\n-      <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n-    </encoder>\n-  </appender>\n-\n-  <logger name=\"org.apache.syncope.client\" additivity=\"false\">\n-    <level value=\"OFF\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-\n-  <logger name=\"org.apache.syncope.console\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-\n-  <logger name=\"org.apache.wicket\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-\n-  <logger name=\"org.springframework\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-\n-  <logger name=\"org.apache.http\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-    \n-  <logger name=\"org.apache.cxf\" additivity=\"false\">\n-    <level value=\"ERROR\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-    \n-  <root>\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </root>\n-</configuration>"},{"sha":"8be9da136fbdff416ee50513e0034c2b194a7220","filename":"core/pom.xml","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -260,12 +260,16 @@ under the License.\n       <artifactId>slf4j-api</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>ch.qos.logback</groupId>\n-      <artifactId>logback-core</artifactId>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+    </dependency> \n+    <dependency>\n+      <groupId>com.lmax</groupId>\n+      <artifactId>disruptor</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>ch.qos.logback</groupId>\n-      <artifactId>logback-classic</artifactId>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>commons-logging</groupId>\n@@ -585,7 +589,7 @@ under the License.\n                   org.jasypt.digest;version=\"[1.9,2)\",\n                   org.quartz*;version=\"[2.1,3)\",\n                   org.springframework*;version=\"[3,4)\",\n-                  ch.qos.logback*;resolution:=optional,\n+                  org.apache.logging.log4j*;resolution:=optional,\n                   org.identityconnectors*;resolution:=optional,\n                   org.slf4j;resolution:=optional\n                 </Import-Package>\n@@ -974,7 +978,7 @@ under the License.\n         <dependency>\n           <groupId>mysql</groupId>\n           <artifactId>mysql-connector-java</artifactId>\n-          <version>5.1.24</version>\n+          <version>5.1.26</version>\n           <scope>test</scope>\n         </dependency>\n       </dependencies>"},{"sha":"6ae135a606c3de893eab0f077559e1452fd70feb","filename":"core/src/main/java/org/apache/syncope/core/audit/AuditConnectionFactory.java","status":"added","additions":128,"deletions":0,"changes":128,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditConnectionFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditConnectionFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditConnectionFactory.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.audit;\n+\n+import java.io.InputStream;\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.util.Properties;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.rmi.PortableRemoteObject;\n+import javax.sql.DataSource;\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathExpression;\n+import javax.xml.xpath.XPathFactory;\n+import org.apache.commons.dbcp.BasicDataSource;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.core.persistence.dao.impl.AbstractContentDealer;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.core.io.Resource;\n+import org.springframework.core.io.support.PropertiesLoaderUtils;\n+import org.springframework.jdbc.datasource.DataSourceUtils;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n+import org.w3c.dom.bootstrap.DOMImplementationRegistry;\n+import org.w3c.dom.ls.DOMImplementationLS;\n+import org.w3c.dom.ls.LSInput;\n+import org.w3c.dom.ls.LSParser;\n+\n+/**\n+ * LOG4J SQL connection factory that first attempts to obtain a {@link javax.sql.DataSource} from the JNDI name\n+ * configured in Spring or, when not found, builds a new {@link javax.sql.DataSource DataSource} via Commons DBCP; if\n+ * any datasource if found, the SQL init script is used to populate the database.\n+ */\n+public class AuditConnectionFactory {\n+\n+    private static DataSource datasource;\n+\n+    private static final String PERSISTENCE_CONTEXT = \"/persistenceContext.xml\";\n+\n+    static {\n+        // 1. Attempts to lookup for configured JNDI datasource (if present and available)\n+        InputStream springConf = AuditConnectionFactory.class.getResourceAsStream(PERSISTENCE_CONTEXT);\n+        try {\n+            DOMImplementationRegistry reg = DOMImplementationRegistry.newInstance();\n+            DOMImplementationLS impl = (DOMImplementationLS) reg.getDOMImplementation(\"LS\");\n+            LSParser parser = impl.createLSParser(DOMImplementationLS.MODE_SYNCHRONOUS, null);\n+            LSInput lsinput = impl.createLSInput();\n+            lsinput.setByteStream(springConf);\n+\n+            XPathFactory xPathfactory = XPathFactory.newInstance();\n+            XPath xpath = xPathfactory.newXPath();\n+            XPathExpression expr = xpath.compile(\"//*[local-name()='property' and @name='jndiName']/@value\");\n+            String jndiName = (String) expr.evaluate(parser.parse(lsinput), XPathConstants.STRING);\n+\n+            Context ctx = new InitialContext();\n+            Object obj = ctx.lookup(jndiName);\n+\n+            datasource = (DataSource) PortableRemoteObject.narrow(obj, DataSource.class);\n+        } catch (Exception e) {\n+            // ignore\n+        } finally {\n+            IOUtils.closeQuietly(springConf);\n+        }\n+\n+        // 2. Creates Commons DBCP datasource\n+        String initSQLScript = null;\n+        try {\n+            Properties persistence = PropertiesLoaderUtils.loadProperties(\n+                    new ClassPathResource(AbstractContentDealer.PERSISTENCE_PROPERTIES));\n+\n+            initSQLScript = persistence.getProperty(\"audit.sql\");\n+\n+            if (datasource == null) {\n+                BasicDataSource bds = new BasicDataSource();\n+                bds.setDriverClassName(persistence.getProperty(\"jpa.driverClassName\"));\n+                bds.setUrl(persistence.getProperty(\"jpa.url\"));\n+                bds.setUsername(persistence.getProperty(\"jpa.username\"));\n+                bds.setPassword(persistence.getProperty(\"jpa.password\"));\n+\n+                bds.setLogAbandoned(true);\n+                bds.setRemoveAbandoned(true);\n+\n+                datasource = bds;\n+            }\n+        } catch (Exception e) {\n+            throw new IllegalStateException(\"Audit datasource configuration failed\", e);\n+        }\n+\n+        // 3. Initializes the chosen datasource\n+        ResourceDatabasePopulator populator = new ResourceDatabasePopulator();\n+        populator.setScripts(new Resource[] {new ClassPathResource(\"/audit/\" + initSQLScript)});\n+        // forces no statement separation\n+        populator.setSeparator(\"XXXXXXXXXXXXXXXXX\");\n+        Connection conn = DataSourceUtils.getConnection(datasource);\n+        try {\n+            populator.populate(conn);\n+        } catch (SQLException e) {\n+            throw new IllegalStateException(\"Could not init the Audit datasource\", e);\n+        } finally {\n+            DataSourceUtils.releaseConnection(conn, datasource);\n+        }\n+    }\n+\n+    public static Connection getConnection() {\n+        if (datasource != null) {\n+            return DataSourceUtils.getConnection(datasource);\n+        }\n+\n+        throw new IllegalStateException(\"Audit dataSource init failed: check logs\");\n+    }\n+}"},{"sha":"867b5beac097782f0883138a426c39876e281992","filename":"core/src/main/java/org/apache/syncope/core/audit/AuditManager.java","status":"modified","additions":24,"deletions":11,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -21,10 +21,15 @@\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditLoggerName;\n+import org.apache.syncope.common.types.LoggerLevel;\n+import org.apache.syncope.core.persistence.beans.SyncopeLogger;\n+import org.apache.syncope.core.persistence.dao.LoggerDAO;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.core.context.SecurityContext;\n import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.transaction.annotation.Transactional;\n \n public class AuditManager {\n \n@@ -33,10 +38,15 @@ public class AuditManager {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(AuditManager.class);\n \n+    @Autowired\n+    private LoggerDAO loggerDAO;\n+\n+    @Transactional\n     public void audit(final Category category, final Enum<?> subcategory, final Result result, final String message) {\n         audit(category, subcategory, result, message, null);\n     }\n \n+    @Transactional\n     public void audit(final Category category, final Enum<?> subcategory, final Result result, final String message,\n             final Throwable throwable) {\n \n@@ -48,19 +58,22 @@ public void audit(final Category category, final Enum<?> subcategory, final Resu\n         }\n \n         if (auditLoggerName != null) {\n-            StringBuilder auditMessage = new StringBuilder();\n+            SyncopeLogger syncopeLogger = loggerDAO.find(auditLoggerName.toLoggerName());\n+            if (syncopeLogger != null && syncopeLogger.getLevel() == LoggerLevel.DEBUG) {\n+                StringBuilder auditMessage = new StringBuilder();\n \n-            final SecurityContext ctx = SecurityContextHolder.getContext();\n-            if (ctx != null && ctx.getAuthentication() != null) {\n-                auditMessage.append('[').append(ctx.getAuthentication().getName()).append(']').append(' ');\n-            }\n-            auditMessage.append(message);\n+                final SecurityContext ctx = SecurityContextHolder.getContext();\n+                if (ctx != null && ctx.getAuthentication() != null) {\n+                    auditMessage.append('[').append(ctx.getAuthentication().getName()).append(']').append(' ');\n+                }\n+                auditMessage.append(message);\n \n-            Logger logger = LoggerFactory.getLogger(auditLoggerName.toLoggerName());\n-            if (throwable == null) {\n-                logger.debug(auditMessage.toString());\n-            } else {\n-                logger.debug(auditMessage.toString(), throwable);\n+                Logger logger = LoggerFactory.getLogger(auditLoggerName.toLoggerName());\n+                if (throwable == null) {\n+                    logger.debug(auditMessage.toString());\n+                } else {\n+                    logger.debug(auditMessage.toString(), throwable);\n+                }\n             }\n         }\n     }"},{"sha":"553c306412c7e3b87cf2b4c78f47c438449b8ac9","filename":"core/src/main/java/org/apache/syncope/core/audit/JNDIFallbackConnectionSource.java","status":"removed","additions":0,"deletions":155,"changes":155,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FJNDIFallbackConnectionSource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FJNDIFallbackConnectionSource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Faudit%2FJNDIFallbackConnectionSource.java?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,155 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.audit;\n-\n-import ch.qos.logback.core.db.ConnectionSource;\n-import ch.qos.logback.core.db.ConnectionSourceBase;\n-import ch.qos.logback.core.db.DataSourceConnectionSource;\n-import ch.qos.logback.core.db.JNDIConnectionSource;\n-import ch.qos.logback.core.db.dialect.SQLDialectCode;\n-import ch.qos.logback.core.spi.ContextAwareBase;\n-import java.sql.Connection;\n-import java.sql.SQLException;\n-import javax.naming.Context;\n-import javax.naming.InitialContext;\n-import javax.naming.NamingException;\n-import javax.rmi.PortableRemoteObject;\n-import javax.sql.DataSource;\n-\n-/**\n- * Implementation of {@link ConnectionSource} that attempts at first to obtain a {@link javax.sql.DataSource} from a\n- * JNDI provider and, if not found, from a provided {@link javax.sql.DataSource DataSource}.\n- */\n-public class JNDIFallbackConnectionSource extends ContextAwareBase implements ConnectionSource {\n-\n-    private String jndiLocation;\n-\n-    private DataSource dataSource;\n-\n-    private ConnectionSourceBase delegate;\n-\n-    public String getJndiLocation() {\n-        return jndiLocation;\n-    }\n-\n-    public void setJndiLocation(final String jndiLocation) {\n-        this.jndiLocation = jndiLocation;\n-    }\n-\n-    public DataSource getDataSource() {\n-        return dataSource;\n-    }\n-\n-    public void setDataSource(final DataSource dataSource) {\n-        this.dataSource = dataSource;\n-    }\n-\n-    private void chooseDelegate() {\n-        if (delegate != null) {\n-            return;\n-        }\n-\n-        JNDIConnectionSource jndiCS = new JNDIConnectionSource();\n-        jndiCS.setJndiLocation(jndiLocation);\n-        try {\n-            Context ctx = new InitialContext();\n-            Object obj = ctx.lookup(jndiCS.getJndiLocation());\n-\n-            PortableRemoteObject.narrow(obj, DataSource.class);\n-\n-            delegate = jndiCS;\n-            addInfo(\"DataSource obtained from \" + jndiLocation);\n-        } catch (NamingException e) {\n-            addError(\"During lookup of \" + jndiLocation);\n-        } catch (ClassCastException e) {\n-            addError(\"Object at \" + jndiLocation + \" does not seem to be a DataSource instance\", e);\n-        }\n-\n-        if (delegate == null) {\n-            addInfo(\"Could not obtain DataSource via JNDI\");\n-\n-            DataSourceConnectionSource dataSourceCS = new DataSourceConnectionSource();\n-            dataSourceCS.setDataSource(dataSource);\n-            Connection conn = null;\n-            try {\n-                conn = dataSourceCS.getConnection();\n-\n-                delegate = dataSourceCS;\n-                addInfo(\"Provided DataSource successfully reported\");\n-            } catch (SQLException e) {\n-                addError(\"While trying to get connection from DataSource \" + dataSource, e);\n-            } finally {\n-                if (conn != null) {\n-                    try {\n-                        conn.close();\n-                    } catch (SQLException sqle) {\n-                        addError(\"Could not close connection\", sqle);\n-                    }\n-                }\n-            }\n-        }\n-\n-        if (delegate != null) {\n-            delegate.setContext(context);\n-        }\n-    }\n-\n-    @Override\n-    public boolean isStarted() {\n-        chooseDelegate();\n-        return delegate.isStarted();\n-    }\n-\n-    @Override\n-    public void start() {\n-        chooseDelegate();\n-        delegate.start();\n-    }\n-\n-    @Override\n-    public void stop() {\n-        chooseDelegate();\n-        delegate.stop();\n-    }\n-\n-    @Override\n-    public Connection getConnection() throws SQLException {\n-\n-        chooseDelegate();\n-        return delegate.getConnection();\n-    }\n-\n-    @Override\n-    public SQLDialectCode getSQLDialectCode() {\n-        chooseDelegate();\n-        return delegate.getSQLDialectCode();\n-    }\n-\n-    @Override\n-    public boolean supportsGetGeneratedKeys() {\n-        chooseDelegate();\n-        return delegate.supportsGetGeneratedKeys();\n-    }\n-\n-    @Override\n-    public boolean supportsBatchUpdates() {\n-        chooseDelegate();\n-        return delegate.supportsBatchUpdates();\n-    }\n-}"},{"sha":"261c1e94d6c8e952cc02a194bd195d8d6f8a2901","filename":"core/src/main/java/org/apache/syncope/core/init/LoggerLoader.java","status":"modified","additions":33,"deletions":31,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -21,19 +21,19 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\n-import org.apache.syncope.common.types.SyncopeLoggerType;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Logger;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.apache.syncope.common.SyncopeConstants;\n+import org.apache.syncope.common.types.LoggerLevel;\n+import org.apache.syncope.common.types.LoggerType;\n import org.apache.syncope.core.persistence.beans.SyncopeLogger;\n import org.apache.syncope.core.persistence.dao.LoggerDAO;\n-import org.slf4j.ILoggerFactory;\n-import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n-import ch.qos.logback.classic.Logger;\n-import ch.qos.logback.classic.LoggerContext;\n-\n @Component\n public class LoggerLoader {\n \n@@ -42,46 +42,48 @@ public class LoggerLoader {\n \n     @Transactional\n     public void load() {\n-        Map<String, SyncopeLogger> loggerLogs = new HashMap<String, SyncopeLogger>();\n-        for (SyncopeLogger syncopeLogger : loggerDAO.findAll(SyncopeLoggerType.LOG)) {\n-            loggerLogs.put(syncopeLogger.getName(), syncopeLogger);\n+        Map<String, SyncopeLogger> syncopeLoggers = new HashMap<String, SyncopeLogger>();\n+        for (SyncopeLogger syncopeLogger : loggerDAO.findAll(LoggerType.LOG)) {\n+            syncopeLoggers.put(syncopeLogger.getName(), syncopeLogger);\n         }\n \n-        for (SyncopeLogger syncopeLogger : loggerDAO.findAll(SyncopeLoggerType.AUDIT)) {\n-            loggerLogs.put(syncopeLogger.getName(), syncopeLogger);\n+        for (SyncopeLogger syncopeLogger : loggerDAO.findAll(LoggerType.AUDIT)) {\n+            syncopeLoggers.put(syncopeLogger.getName(), syncopeLogger);\n         }\n \n-        ILoggerFactory loggerFactory = LoggerFactory.getILoggerFactory();\n-\n-        LoggerContext lc = (LoggerContext) loggerFactory;\n+        LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n \n         /*\n-         * Traverse all defined Logback loggers: if there is a matching SyncopeLogger, set Logback level accordingly,\n+         * Traverse all defined log4j loggers: if there is a matching SyncopeLogger, set log4j level accordingly,\n          * otherwise create a SyncopeLogger instance with given name and level.\n          */\n-        for (Logger logger : lc.getLoggerList()) {\n-            if (logger.getLevel() != null) {\n-                if (loggerLogs.containsKey(logger.getName())) {\n-                    logger.setLevel(loggerLogs.get(logger.getName()).getLevel().getLevel());\n-                    loggerLogs.remove(logger.getName());\n-                } else if (!logger.getName().equals(SyncopeLoggerType.AUDIT.getPrefix())) {\n+        for (LoggerConfig logConf : ctx.getConfiguration().getLoggers().values()) {\n+            final String loggerName = LogManager.ROOT_LOGGER_NAME.equals(logConf.getName())\n+                    ? SyncopeConstants.ROOT_LOGGER : logConf.getName();\n+            if (logConf.getLevel() != null) {\n+                if (syncopeLoggers.containsKey(loggerName)) {\n+                    logConf.setLevel(syncopeLoggers.get(loggerName).getLevel().getLevel());\n+                    syncopeLoggers.remove(loggerName);\n+                } else if (!loggerName.equals(LoggerType.AUDIT.getPrefix())) {\n                     SyncopeLogger syncopeLogger = new SyncopeLogger();\n-                    syncopeLogger.setName(logger.getName());\n-                    syncopeLogger.setLevel(SyncopeLoggerLevel.fromLevel(logger.getLevel()));\n-                    syncopeLogger.setType(logger.getName().startsWith(SyncopeLoggerType.AUDIT.getPrefix())\n-                            ? SyncopeLoggerType.AUDIT\n-                            : SyncopeLoggerType.LOG);\n+                    syncopeLogger.setName(loggerName);\n+                    syncopeLogger.setLevel(LoggerLevel.fromLevel(logConf.getLevel()));\n+                    syncopeLogger.setType(loggerName.startsWith(LoggerType.AUDIT.getPrefix())\n+                            ? LoggerType.AUDIT\n+                            : LoggerType.LOG);\n                     loggerDAO.save(syncopeLogger);\n                 }\n             }\n         }\n \n         /*\n-         * Foreach SyncopeLogger not found in Logback, create a new Logback logger with given name and level.\n+         * Foreach SyncopeLogger not found in log4j create a new log4j logger with given name and level.\n          */\n-        for (SyncopeLogger syncopeLogger : loggerLogs.values()) {\n-            Logger logger = lc.getLogger(syncopeLogger.getName());\n-            logger.setLevel(syncopeLogger.getLevel().getLevel());\n+        for (SyncopeLogger syncopeLogger : syncopeLoggers.values()) {\n+            LoggerConfig logConf = ctx.getConfiguration().getLoggerConfig(syncopeLogger.getName());\n+            logConf.setLevel(syncopeLogger.getLevel().getLevel());\n         }\n+\n+        ctx.updateLoggers();\n     }\n }"},{"sha":"4993ac8147c14219d1c989d0eff3aa51fa6ec334","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SyncopeLogger.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeLogger.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -24,8 +24,8 @@\n import javax.persistence.Enumerated;\n import javax.persistence.Id;\n \n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\n-import org.apache.syncope.common.types.SyncopeLoggerType;\n+import org.apache.syncope.common.types.LoggerLevel;\n+import org.apache.syncope.common.types.LoggerType;\n \n @Entity\n public class SyncopeLogger extends AbstractBaseBean {\n@@ -38,17 +38,17 @@ public class SyncopeLogger extends AbstractBaseBean {\n \n     @Column(name = \"logLevel\", nullable = false)\n     @Enumerated(EnumType.STRING)\n-    private SyncopeLoggerLevel level;\n+    private LoggerLevel level;\n \n     @Column(name = \"logType\", nullable = false)\n     @Enumerated(EnumType.STRING)\n-    private SyncopeLoggerType type;\n+    private LoggerType type;\n \n-    public SyncopeLoggerLevel getLevel() {\n+    public LoggerLevel getLevel() {\n         return level;\n     }\n \n-    public void setLevel(final SyncopeLoggerLevel level) {\n+    public void setLevel(final LoggerLevel level) {\n         this.level = level;\n     }\n \n@@ -60,11 +60,11 @@ public void setName(final String name) {\n         this.name = name;\n     }\n \n-    public SyncopeLoggerType getType() {\n+    public LoggerType getType() {\n         return type;\n     }\n \n-    public void setType(SyncopeLoggerType type) {\n+    public void setType(final LoggerType type) {\n         this.type = type;\n     }\n }"},{"sha":"8815c8a489bad06b6ab62910b90674e8d5d42221","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/LoggerDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FLoggerDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FLoggerDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FLoggerDAO.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -20,15 +20,15 @@\n \n import java.util.List;\n \n-import org.apache.syncope.common.types.SyncopeLoggerType;\n+import org.apache.syncope.common.types.LoggerType;\n import org.apache.syncope.core.persistence.beans.SyncopeLogger;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n public interface LoggerDAO extends DAO {\n \n     SyncopeLogger find(String name);\n \n-    List<SyncopeLogger> findAll(SyncopeLoggerType type);\n+    List<SyncopeLogger> findAll(LoggerType type);\n \n     SyncopeLogger save(SyncopeLogger logger) throws InvalidEntityException;\n "},{"sha":"33c36d141cad3ce9122e17ae7eea23b6c9f66458","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AbstractContentDealer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractContentDealer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractContentDealer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractContentDealer.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -35,7 +35,7 @@ public abstract class AbstractContentDealer {\n \n     protected static final String ROOT_ELEMENT = \"dataset\";\n \n-    private static final String PERSISTENCE_PROPERTIES = \"/persistence.properties\";\n+    public static final String PERSISTENCE_PROPERTIES = \"/persistence.properties\";\n \n     private static final String VIEWS_XML = \"/views.xml\";\n "},{"sha":"b2368b9d38de5cf29800c47914365165a7c53e44","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/LoggerDAOImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FLoggerDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FLoggerDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FLoggerDAOImpl.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -20,8 +20,8 @@\n \n import java.util.List;\n import javax.persistence.TypedQuery;\n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\n-import org.apache.syncope.common.types.SyncopeLoggerType;\n+import org.apache.syncope.common.types.LoggerLevel;\n+import org.apache.syncope.common.types.LoggerType;\n import org.apache.syncope.core.persistence.beans.SyncopeLogger;\n import org.apache.syncope.core.persistence.dao.LoggerDAO;\n import org.springframework.stereotype.Repository;\n@@ -35,7 +35,7 @@ public SyncopeLogger find(final String name) {\n     }\n \n     @Override\n-    public List<SyncopeLogger> findAll(final SyncopeLoggerType type) {\n+    public List<SyncopeLogger> findAll(final LoggerType type) {\n         TypedQuery<SyncopeLogger> query = entityManager.createQuery(\n                 \"SELECT e FROM \" + SyncopeLogger.class.getSimpleName() + \" e WHERE e.type=:type\", SyncopeLogger.class);\n         query.setParameter(\"type\", type);\n@@ -45,8 +45,8 @@ public List<SyncopeLogger> findAll(final SyncopeLoggerType type) {\n     @Override\n     public SyncopeLogger save(final SyncopeLogger logger) {\n         // Audit loggers must be either OFF or DEBUG, no more options\n-        if (SyncopeLoggerType.AUDIT == logger.getType() && SyncopeLoggerLevel.OFF != logger.getLevel()) {\n-            logger.setLevel(SyncopeLoggerLevel.DEBUG);\n+        if (LoggerType.AUDIT == logger.getType() && LoggerLevel.OFF != logger.getLevel()) {\n+            logger.setLevel(LoggerLevel.DEBUG);\n         }\n         return entityManager.merge(logger);\n     }"},{"sha":"9a29a661f7ea8b09acc9a3647082ac58b5bd2689","filename":"core/src/main/java/org/apache/syncope/core/quartz/SpringBeanJobFactory.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -61,8 +61,7 @@ protected Object createJobInstance(final TriggerFiredBundle bundle) throws Excep\n \n         final ApplicationContext ctx = ((ConfigurableApplicationContext) schedulerContext.get(\"applicationContext\"));\n \n-        // Try to re-create job bean from underlying task (useful for managing\n-        // failover scenarios)\n+        // Try to re-create job bean from underlying task (useful for managing failover scenarios)\n         if (!ctx.containsBean(bundle.getJobDetail().getKey().getName())) {\n             Long taskId = JobInstanceLoader.getTaskIdFromJobName(bundle.getJobDetail().getKey().getName());\n             if (taskId != null) {"},{"sha":"7eeeffd10ed47f6252a68bf78cc51a33a3e39790","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/LoggerController.java","status":"modified","additions":32,"deletions":27,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLoggerController.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -20,30 +20,30 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Logger;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.LoggerTO;\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.LoggerSubCategory;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditLoggerName;\n import org.apache.syncope.common.types.SyncopeClientExceptionType;\n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\n-import org.apache.syncope.common.types.SyncopeLoggerType;\n+import org.apache.syncope.common.types.LoggerLevel;\n+import org.apache.syncope.common.types.LoggerType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.persistence.beans.SyncopeLogger;\n import org.apache.syncope.core.persistence.dao.LoggerDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n-import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.transaction.annotation.Transactional;\n-\n-import ch.qos.logback.classic.Level;\n-import ch.qos.logback.classic.Logger;\n-import ch.qos.logback.classic.LoggerContext;\n import org.apache.syncope.common.util.BeanUtils;\n import org.springframework.stereotype.Component;\n \n@@ -56,7 +56,7 @@ public class LoggerController extends AbstractController {\n     @Autowired\n     private LoggerDAO loggerDAO;\n \n-    private List<LoggerTO> list(final SyncopeLoggerType type) {\n+    private List<LoggerTO> list(final LoggerType type) {\n         List<LoggerTO> result = new ArrayList<LoggerTO>();\n         for (SyncopeLogger syncopeLogger : loggerDAO.findAll(type)) {\n             LoggerTO loggerTO = new LoggerTO();\n@@ -73,15 +73,15 @@ private List<LoggerTO> list(final SyncopeLoggerType type) {\n     @PreAuthorize(\"hasRole('LOG_LIST')\")\n     @Transactional(readOnly = true)\n     public List<LoggerTO> listLogs() {\n-        return list(SyncopeLoggerType.LOG);\n+        return list(LoggerType.LOG);\n     }\n \n     @PreAuthorize(\"hasRole('AUDIT_LIST')\")\n     @Transactional(readOnly = true)\n     public List<AuditLoggerName> listAudits() {\n         List<AuditLoggerName> result = new ArrayList<AuditLoggerName>();\n \n-        for (LoggerTO logger : list(SyncopeLoggerType.AUDIT)) {\n+        for (LoggerTO logger : list(LoggerType.AUDIT)) {\n             try {\n                 result.add(AuditLoggerName.fromLoggerName(logger.getName()));\n             } catch (Exception e) {\n@@ -92,7 +92,7 @@ public List<AuditLoggerName> listAudits() {\n         return result;\n     }\n \n-    private void throwInvalidLogger(final SyncopeLoggerType type) {\n+    private void throwInvalidLogger(final LoggerType type) {\n         SyncopeClientCompositeErrorException sccee = new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n \n         SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidLogger);\n@@ -101,28 +101,31 @@ private void throwInvalidLogger(final SyncopeLoggerType type) {\n         throw sccee;\n     }\n \n-    private LoggerTO setLevel(final String name, final Level level, final SyncopeLoggerType expectedType) {\n+    private LoggerTO setLevel(final String name, final Level level, final LoggerType expectedType) {\n         SyncopeLogger syncopeLogger = loggerDAO.find(name);\n         if (syncopeLogger == null) {\n             LOG.debug(\"Logger {} not found: creating new...\", name);\n \n             syncopeLogger = new SyncopeLogger();\n             syncopeLogger.setName(name);\n-            syncopeLogger.setType(name.startsWith(SyncopeLoggerType.AUDIT.getPrefix())\n-                    ? SyncopeLoggerType.AUDIT\n-                    : SyncopeLoggerType.LOG);\n+            syncopeLogger.setType(name.startsWith(LoggerType.AUDIT.getPrefix())\n+                    ? LoggerType.AUDIT\n+                    : LoggerType.LOG);\n         }\n \n         if (expectedType != syncopeLogger.getType()) {\n             throwInvalidLogger(expectedType);\n         }\n \n-        syncopeLogger.setLevel(SyncopeLoggerLevel.fromLevel(level));\n+        syncopeLogger.setLevel(LoggerLevel.fromLevel(level));\n         syncopeLogger = loggerDAO.save(syncopeLogger);\n \n-        LoggerContext lc = (LoggerContext) LoggerFactory.getILoggerFactory();\n-        Logger logger = lc.getLogger(name);\n-        logger.setLevel(level);\n+        LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n+        LoggerConfig logConf = SyncopeConstants.ROOT_LOGGER.equals(name)\n+                ? ctx.getConfiguration().getLoggerConfig(LogManager.ROOT_LOGGER_NAME)\n+                : ctx.getConfiguration().getLoggerConfig(name);\n+        logConf.setLevel(level);\n+        ctx.updateLoggers();\n \n         LoggerTO result = new LoggerTO();\n         BeanUtils.copyProperties(syncopeLogger, result);\n@@ -135,13 +138,13 @@ private LoggerTO setLevel(final String name, final Level level, final SyncopeLog\n \n     @PreAuthorize(\"hasRole('LOG_SET_LEVEL')\")\n     public LoggerTO setLogLevel(final String name, final Level level) {\n-        return setLevel(name, level, SyncopeLoggerType.LOG);\n+        return setLevel(name, level, LoggerType.LOG);\n     }\n \n     @PreAuthorize(\"hasRole('AUDIT_ENABLE')\")\n     public void enableAudit(final AuditLoggerName auditLoggerName) {\n         try {\n-            setLevel(auditLoggerName.toLoggerName(), Level.DEBUG, SyncopeLoggerType.AUDIT);\n+            setLevel(auditLoggerName.toLoggerName(), Level.DEBUG, LoggerType.AUDIT);\n         } catch (IllegalArgumentException e) {\n             SyncopeClientCompositeErrorException sccee =\n                     new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n@@ -154,7 +157,7 @@ public void enableAudit(final AuditLoggerName auditLoggerName) {\n         }\n     }\n \n-    private LoggerTO delete(final String name, final SyncopeLoggerType expectedType) throws NotFoundException {\n+    private LoggerTO delete(final String name, final LoggerType expectedType) throws NotFoundException {\n         SyncopeLogger syncopeLogger = loggerDAO.find(name);\n         if (syncopeLogger == null) {\n             throw new NotFoundException(\"Logger \" + name);\n@@ -169,9 +172,11 @@ private LoggerTO delete(final String name, final SyncopeLoggerType expectedType)\n         loggerDAO.delete(syncopeLogger);\n \n         // set log level to OFF in order to disable configured logger until next reboot\n-        LoggerContext lc = (LoggerContext) LoggerFactory.getILoggerFactory();\n-        Logger logger = lc.getLogger(name);\n+        LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n+        Logger logger = SyncopeConstants.ROOT_LOGGER.equals(name)\n+                ? ctx.getLogger(LogManager.ROOT_LOGGER_NAME) : ctx.getLogger(name);\n         logger.setLevel(Level.OFF);\n+        ctx.updateLoggers();\n \n         auditManager.audit(Category.logger, LoggerSubCategory.setLevel, Result.success, String.format(\n                 \"Successfully deleted logger %s (%s)\", name, expectedType));\n@@ -181,13 +186,13 @@ private LoggerTO delete(final String name, final SyncopeLoggerType expectedType)\n \n     @PreAuthorize(\"hasRole('LOG_DELETE')\")\n     public LoggerTO deleteLog(final String name) throws NotFoundException {\n-        return delete(name, SyncopeLoggerType.LOG);\n+        return delete(name, LoggerType.LOG);\n     }\n \n     @PreAuthorize(\"hasRole('AUDIT_DISABLE')\")\n     public void disableAudit(final AuditLoggerName auditLoggerName) {\n         try {\n-            delete(auditLoggerName.toLoggerName(), SyncopeLoggerType.AUDIT);\n+            delete(auditLoggerName.toLoggerName(), LoggerType.AUDIT);\n         } catch (NotFoundException e) {\n             LOG.debug(\"Ignoring disable of non existing logger {}\", auditLoggerName.toLoggerName());\n         } catch (IllegalArgumentException e) {"},{"sha":"6629e31692ca11e16243f4d1147e37e58cb46c96","filename":"core/src/main/java/org/apache/syncope/core/services/LoggerServiceImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FLoggerServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FLoggerServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FLoggerServiceImpl.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -42,7 +42,7 @@ public class LoggerServiceImpl extends AbstractServiceImpl implements LoggerServ\n     @Override\r\n     public void delete(final LoggerType type, final String name) {\r\n         switch (type) {\r\n-            case NORMAL:\r\n+            case LOG:\r\n                 controller.deleteLog(name);\r\n                 break;\r\n \r\n@@ -65,7 +65,7 @@ public void delete(final LoggerType type, final String name) {\n     @Override\r\n     public List<LoggerTO> list(final LoggerType type) {\r\n         switch (type) {\r\n-            case NORMAL:\r\n+            case LOG:\r\n                 return controller.listLogs();\r\n \r\n             case AUDIT:\r\n@@ -91,7 +91,7 @@ public LoggerTO read(final LoggerType type, final String name) {\n     @Override\r\n     public void update(final LoggerType type, final String name, final LoggerTO logger) {\r\n         switch (type) {\r\n-            case NORMAL:\r\n+            case LOG:\r\n                 controller.setLogLevel(name, logger.getLevel().getLevel());\r\n                 break;\r\n \r"},{"sha":"6e7bd364d34051c484e97facb29ed7932d3c0b35","filename":"core/src/main/resources/META-INF/cxf/org.apache.cxf.Logger","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1 @@\n+org.apache.cxf.common.logging.Slf4jLogger"},{"sha":"f3ecbb154184c277c86021c5f6e267feb5cfa440","filename":"core/src/main/resources/audit.xml","status":"removed","additions":0,"deletions":39,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Faudit.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Faudit.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Faudit.xml?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,39 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<included>\n-  <property resource=\"persistence.properties\"/>\n-  \n-  <appender name=\"audit\" class=\"ch.qos.logback.classic.db.DBAppender\">\n-    <connectionSource class=\"org.apache.syncope.core.audit.JNDIFallbackConnectionSource\">\n-      <param name=\"jndiLocation\" value=\"java:comp/env/jdbc/syncopeDataSource\"/>\n-      <dataSource class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n-        <param name=\"driverClassName\" value=\"${jpa.driverClassName}\"/>\n-        <param name=\"url\" value=\"${jpa.url}\"/>\n-        <param name=\"username\" value=\"${jpa.username}\"/>\n-        <param name=\"password\" value=\"${jpa.password}\"/>\n-      </dataSource>\n-    </connectionSource>\n-  </appender>\n-  \n-  <logger name=\"syncope.audit\" additivity=\"false\">\n-    <level value=\"OFF\"/>\n-    <appender-ref ref=\"audit\"/>\n-  </logger>\n-</included>"},{"sha":"faf8c5bb87dd66b955c1db796efb6cdc3ce7af1d","filename":"core/src/main/resources/audit/audit.sql","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit.sql?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1,24 @@\n+-- Licensed to the Apache Software Foundation (ASF) under one\n+-- or more contributor license agreements.  See the NOTICE file\n+-- distributed with this work for additional information\n+-- regarding copyright ownership.  The ASF licenses this file\n+-- to you under the Apache License, Version 2.0 (the\n+-- \"License\"); you may not use this file except in compliance\n+-- with the License.  You may obtain a copy of the License at\n+--\n+--   http://www.apache.org/licenses/LICENSE-2.0\n+--\n+-- Unless required by applicable law or agreed to in writing,\n+-- software distributed under the License is distributed on an\n+-- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+-- KIND, either express or implied.  See the License for the\n+-- specific language governing permissions and limitations\n+-- under the License.\n+\n+CREATE TABLE IF NOT EXISTS SYNCOPEAUDIT (\n+  EVENT_DATE TIMESTAMP,\n+  LOGGER_LEVEL VARCHAR(255) NOT NULL,\n+  LOGGER VARCHAR(255) NOT NULL,\n+  MESSAGE TEXT NOT NULL,\n+  THROWABLE TEXT\n+)"},{"sha":"ff753fa2e20cd2cd12ac074e30ac7ba4ca00316d","filename":"core/src/main/resources/audit/audit_mysql_innodb.sql","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_mysql_innodb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_mysql_innodb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_mysql_innodb.sql?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1,24 @@\n+-- Licensed to the Apache Software Foundation (ASF) under one\n+-- or more contributor license agreements.  See the NOTICE file\n+-- distributed with this work for additional information\n+-- regarding copyright ownership.  The ASF licenses this file\n+-- to you under the Apache License, Version 2.0 (the\n+-- \"License\"); you may not use this file except in compliance\n+-- with the License.  You may obtain a copy of the License at\n+--\n+--   http://www.apache.org/licenses/LICENSE-2.0\n+--\n+-- Unless required by applicable law or agreed to in writing,\n+-- software distributed under the License is distributed on an\n+-- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+-- KIND, either express or implied.  See the License for the\n+-- specific language governing permissions and limitations\n+-- under the License.\n+\n+CREATE TABLE IF NOT EXISTS SYNCOPEAUDIT (\n+  EVENT_DATE TIMESTAMP,\n+  LOGGER_LEVEL VARCHAR(255) NOT NULL,\n+  LOGGER VARCHAR(255) NOT NULL,\n+  MESSAGE TEXT NOT NULL,\n+  THROWABLE TEXT\n+) ENGINE=InnoDB"},{"sha":"e1b7d81fac937123ddd5c06c4b8d221da710181c","filename":"core/src/main/resources/audit/audit_oracle.sql","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_oracle.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_oracle.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_oracle.sql?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1,38 @@\n+-- Licensed to the Apache Software Foundation (ASF) under one\n+-- or more contributor license agreements.  See the NOTICE file\n+-- distributed with this work for additional information\n+-- regarding copyright ownership.  The ASF licenses this file\n+-- to you under the Apache License, Version 2.0 (the\n+-- \"License\"); you may not use this file except in compliance\n+-- with the License.  You may obtain a copy of the License at\n+--\n+--   http://www.apache.org/licenses/LICENSE-2.0\n+--\n+-- Unless required by applicable law or agreed to in writing,\n+-- software distributed under the License is distributed on an\n+-- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+-- KIND, either express or implied.  See the License for the\n+-- specific language governing permissions and limitations\n+-- under the License.\n+\n+BEGIN\n+    BEGIN\n+         EXECUTE IMMEDIATE 'DROP TABLE SYNCOPEAUDIT';\n+    EXCEPTION\n+         WHEN OTHERS THEN\n+                IF SQLCODE != -942 THEN\n+                     RAISE;\n+                END IF;\n+    END;\n+\n+    EXECUTE IMMEDIATE '\n+CREATE TABLE SYNCOPEAUDIT (\n+  EVENT_DATE TIMESTAMP,\n+  LOGGER_LEVEL VARCHAR(255) NOT NULL,\n+  LOGGER VARCHAR(255) NOT NULL,\n+  MESSAGE CLOB NOT NULL,\n+  THROWABLE CLOB\n+)\n+';\n+\n+END;"},{"sha":"191428a84633455455df82af95d6706ea66a517a","filename":"core/src/main/resources/audit/audit_sqlserver.sql","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_sqlserver.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_sqlserver.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Faudit%2Faudit_sqlserver.sql?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1,28 @@\n+-- Licensed to the Apache Software Foundation (ASF) under one\n+-- or more contributor license agreements.  See the NOTICE file\n+-- distributed with this work for additional information\n+-- regarding copyright ownership.  The ASF licenses this file\n+-- to you under the Apache License, Version 2.0 (the\n+-- \"License\"); you may not use this file except in compliance\n+-- with the License.  You may obtain a copy of the License at\n+--\n+--   http://www.apache.org/licenses/LICENSE-2.0\n+--\n+-- Unless required by applicable law or agreed to in writing,\n+-- software distributed under the License is distributed on an\n+-- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+-- KIND, either express or implied.  See the License for the\n+-- specific language governing permissions and limitations\n+-- under the License.\n+\n+IF NOT EXISTS\n+(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SYNCOPEAUDIT]') AND type in (N'U'))\n+BEGIN\n+CREATE TABLE SYNCOPEAUDIT (\n+  EVENT_DATE DATETIME,\n+  LOGGER_LEVEL VARCHAR(255) NOT NULL,\n+  LOGGER VARCHAR(255) NOT NULL,\n+  MESSAGE TEXT NOT NULL,\n+  THROWABLE TEXT\n+)\n+END"},{"sha":"ae9cf5354034b5139be69e9d95a8ed7ae140e5fc","filename":"core/src/main/resources/log4j2.xml","status":"added","additions":155,"deletions":0,"changes":155,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -0,0 +1,155 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\">\n+\n+  <appenders>\n+    \n+    <RollingFile name=\"main\" fileName=\"${log.directory}/core.log\"\n+                 filePattern=\"${log.directory}/core-%d{yyyy-MM-dd}.log.gz\"\n+                 immediateFlush=\"false\" append=\"false\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingFile>\n+\n+    <RollingFile name=\"persistence\" fileName=\"${log.directory}/core-persistence.log\"\n+                 filePattern=\"${log.directory}/core-persistence-%d{yyyy-MM-dd}.log.gz\"\n+                 immediateFlush=\"false\" append=\"false\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingFile>\n+\n+    <RollingFile name=\"rest\" fileName=\"${log.directory}/core-rest.log\"\n+                 filePattern=\"${log.directory}/core-rest-%d{yyyy-MM-dd}.log.gz\"\n+                 immediateFlush=\"false\" append=\"false\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingFile>\n+\n+    <RollingFile name=\"connid\" fileName=\"${log.directory}/core-connid.log\"\n+                 filePattern=\"${log.directory}/core-connid-%d{yyyy-MM-dd}.log.gz\"\n+                 immediateFlush=\"false\" append=\"false\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingFile>\n+\n+    <!-- Audit -->    \n+    <Jdbc name=\"audit\" tableName=\"SYNCOPEAUDIT\">\n+      <ConnectionFactory class=\"org.apache.syncope.core.audit.AuditConnectionFactory\" method=\"getConnection\" />\n+      <Column name=\"EVENT_DATE\" isEventTimestamp=\"true\"/>\n+      <Column name=\"LOGGER_LEVEL\" pattern=\"%level\" isUnicode=\"false\"/>\n+      <Column name=\"LOGGER\" pattern=\"%logger\" isUnicode=\"false\"/>\n+      <Column name=\"MESSAGE\" pattern=\"%message\" isUnicode=\"false\"/>\n+      <Column name=\"THROWABLE\" pattern=\"%ex{full}\" isUnicode=\"false\"/>\n+    </Jdbc>\n+\n+  </appenders>\n+  \n+  <loggers>\n+    \n+    <asyncLogger name=\"org.apache.syncope.common\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.syncope.core.persistence\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.syncope.core.security\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.syncope.core.quartz\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.sync\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.notification\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.report\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+  \n+    <asyncLogger name=\"org.apache.syncope.core.rest\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.identityconnectors\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.connid\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.connid\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.util.ConnIdBundleManager\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.springframework.orm\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.springframework.web\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+            \n+    <logger name=\"syncope.audit\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"audit\"/>\n+    </logger>\n+    \n+    <root level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </root>\n+    \n+  </loggers>\n+</configuration>"},{"sha":"c5ffd5fa6b20349ef4dd74c39e87d25575a62c9a","filename":"core/src/main/resources/logback.xml","status":"removed","additions":0,"deletions":153,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,153 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<configuration>\n-\n-  <include resource=\"audit.xml\"/>\n-\n-  <appender name=\"main\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n-    <file>${log.directory}/core.log</file>\n-    <append>true</append>\n-    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n-      <fileNamePattern>${log.directory}/core.log.%d{yyyy-MM-dd}</fileNamePattern>\n-      <maxHistory>30</maxHistory>\n-    </rollingPolicy>\n-    <encoder>\n-      <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n-    </encoder>\n-  </appender>\n-\n-  <appender name=\"persistence\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n-    <file>${log.directory}/core-persistence.log</file>\n-    <append>true</append>\n-    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n-      <fileNamePattern>${log.directory}/core-persistence.log.%d{yyyy-MM-dd}</fileNamePattern>\n-      <maxHistory>30</maxHistory>\n-    </rollingPolicy>\n-    <encoder>\n-      <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n-    </encoder>\n-  </appender>\n-\n-  <appender name=\"rest\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n-    <file>${log.directory}/core-rest.log</file>\n-    <append>true</append>\n-    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n-      <fileNamePattern>${log.directory}/core-rest.log.%d{yyyy-MM-dd}</fileNamePattern>\n-      <maxHistory>30</maxHistory>\n-    </rollingPolicy>\n-    <encoder>\n-      <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n-    </encoder>\n-  </appender>\n-\n-  <appender name=\"connid\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n-    <file>${log.directory}/core-connid.log</file>\n-    <append>true</append>\n-    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n-      <fileNamePattern>${log.directory}/core-connid.log.%d{yyyy-MM-dd}</fileNamePattern>\n-      <maxHistory>30</maxHistory>\n-    </rollingPolicy>\n-    <encoder>\n-      <pattern>%d{HH:mm:ss.SSS} %-5level %msg%n</pattern>\n-    </encoder>\n-  </appender>\n-\n-  <logger name=\"org.apache.syncope.common\" additivity=\"false\">\n-    <level value=\"OFF\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-\n-  <logger name=\"org.apache.syncope.core.persistence\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"persistence\"/>\n-  </logger>\n-    \n-  <logger name=\"org.apache.syncope.core.security\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-\n-  <logger name=\"org.apache.syncope.core.quartz\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-  <logger name=\"org.apache.syncope.core.sync\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-  <logger name=\"org.apache.syncope.core.notification\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-  <logger name=\"org.apache.syncope.core.report\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-  \n-  <logger name=\"org.apache.syncope.core.rest\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"rest\"/>\n-  </logger>\n-    \n-  <logger name=\"org.identityconnectors\" additivity=\"false\">\n-    <level value=\"DEBUG\"/>\n-    <appender-ref ref=\"connid\"/>\n-  </logger>\n-  <logger name=\"org.connid\" additivity=\"false\">\n-    <level value=\"DEBUG\"/>\n-    <appender-ref ref=\"connid\"/>\n-  </logger>\n-  <logger name=\"org.apache.syncope.core.connid\" additivity=\"false\">\n-    <level value=\"DEBUG\"/>\n-    <appender-ref ref=\"connid\"/>\n-  </logger>\n-  <logger name=\"org.apache.syncope.core.util.ConnIdBundleManager\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"connid\"/>\n-  </logger>\n-    \n-  <logger name=\"org.springframework\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </logger>\n-  <logger name=\"org.springframework.orm\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"persistence\"/>\n-  </logger>\n-  <logger name=\"org.springframework.web\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"rest\"/>\n-  </logger>\n-\n-  <logger name=\"org.apache.http\" additivity=\"false\">\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"rest\"/>\n-  </logger>\n-\n-  <logger name=\"org.apache.cxf\" additivity=\"false\">\n-    <level value=\"ERROR\"/>\n-    <appender-ref ref=\"rest\"/>\n-  </logger>\n-            \n-  <root>\n-    <level value=\"INFO\"/>\n-    <appender-ref ref=\"main\"/>\n-  </root>\n-</configuration>"},{"sha":"7f944199ccf5a887593737305b4f53efad569b6d","filename":"core/src/main/resources/logback/h2.sql","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fh2.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fh2.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fh2.sql?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,56 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n-# This SQL script creates the required tables by ch.qos.logback.classic.db.DBAppender.\n-#\n-# It is intended for H2 databases. \n-\n-DROP TABLE logging_event_exception IF EXISTS;\n-DROP TABLE logging_event_property IF EXISTS;\n-DROP TABLE logging_event IF EXISTS;\n-\n-CREATE TABLE logging_event (\n-  timestmp BIGINT NOT NULL,\n-  formatted_message LONGVARCHAR NOT NULL,\n-  logger_name VARCHAR(256) NOT NULL,\n-  level_string VARCHAR(256) NOT NULL,\n-  thread_name VARCHAR(256),\n-  reference_flag SMALLINT,\n-  arg0 VARCHAR(256),\n-  arg1 VARCHAR(256),\n-  arg2 VARCHAR(256),\n-  arg3 VARCHAR(256),\n-  caller_filename VARCHAR(256), \n-  caller_class VARCHAR(256), \n-  caller_method VARCHAR(256), \n-  caller_line CHAR(4),\n-  event_id IDENTITY NOT NULL);\n-\n-\n-CREATE TABLE logging_event_property (\n-  event_id BIGINT NOT NULL,\n-  mapped_key  VARCHAR(254) NOT NULL,\n-  mapped_value LONGVARCHAR,\n-  PRIMARY KEY(event_id, mapped_key),\n-  FOREIGN KEY (event_id) REFERENCES logging_event(event_id));\n-\n-CREATE TABLE logging_event_exception (\n-  event_id BIGINT NOT NULL,\n-  i SMALLINT NOT NULL,\n-  trace_line VARCHAR(256) NOT NULL,\n-  PRIMARY KEY(event_id, i),\n-  FOREIGN KEY (event_id) REFERENCES logging_event(event_id));"},{"sha":"cd8cb55d41ac7a7b3ace9f37d9619231f362ea74","filename":"core/src/main/resources/logback/hsqldb.sql","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fhsqldb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fhsqldb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fhsqldb.sql?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,56 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n-# This SQL script creates the required tables by ch.qos.logback.classic.db.DBAppender.\n-#\n-# It is intended for HSQL databases. It has been tested on HSQL 1.8.07.\n-\n-DROP TABLE logging_event_exception IF EXISTS;\n-DROP TABLE logging_event_property IF EXISTS;\n-DROP TABLE logging_event IF EXISTS;\n-\n-CREATE TABLE logging_event (\n-  timestmp BIGINT NOT NULL,\n-  formatted_message LONGVARCHAR NOT NULL,\n-  logger_name VARCHAR(256) NOT NULL,\n-  level_string VARCHAR(256) NOT NULL,\n-  thread_name VARCHAR(256),\n-  reference_flag SMALLINT,\n-  arg0 VARCHAR(256),\n-  arg1 VARCHAR(256),\n-  arg2 VARCHAR(256),\n-  arg3 VARCHAR(256),\n-  caller_filename VARCHAR(256), \n-  caller_class VARCHAR(256), \n-  caller_method VARCHAR(256), \n-  caller_line CHAR(4),\n-  event_id BIGINT NOT NULL IDENTITY);\n-\n-\n-CREATE TABLE logging_event_property (\n-  event_id BIGINT NOT NULL,\n-  mapped_key  VARCHAR(254) NOT NULL,\n-  mapped_value LONGVARCHAR,\n-  PRIMARY KEY(event_id, mapped_key),\n-  FOREIGN KEY (event_id) REFERENCES logging_event(event_id));\n-\n-CREATE TABLE logging_event_exception (\n-  event_id BIGINT NOT NULL,\n-  i SMALLINT NOT NULL,\n-  trace_line VARCHAR(256) NOT NULL,\n-  PRIMARY KEY(event_id, i),\n-  FOREIGN KEY (event_id) REFERENCES logging_event(event_id));\n\\ No newline at end of file"},{"sha":"e3ba00572987ffa4cdaddf129a7e0e9bf9d1b683","filename":"core/src/main/resources/logback/mysql.sql","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fmysql.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fmysql.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fmysql.sql?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,71 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n-# This SQL script creates the required tables by ch.qos.logback.classic.db.DBAppender.\n-#\n-# It is intended for MySQL databases. It has been tested on MySQL 5.1.37 \n-# on Linux\n-\n-BEGIN;\n-DROP TABLE IF EXISTS logging_event_property;\n-DROP TABLE IF EXISTS logging_event_exception;\n-DROP TABLE IF EXISTS logging_event;\n-COMMIT;\n-\n-\n-BEGIN;\n-CREATE TABLE logging_event \n-  (\n-    timestmp         BIGINT NOT NULL,\n-    formatted_message  TEXT NOT NULL,\n-    logger_name       VARCHAR(254) NOT NULL,\n-    level_string      VARCHAR(254) NOT NULL,\n-    thread_name       VARCHAR(254),\n-    reference_flag    SMALLINT,\n-    arg0              VARCHAR(254),\n-    arg1              VARCHAR(254),\n-    arg2              VARCHAR(254),\n-    arg3              VARCHAR(254),\n-    caller_filename   VARCHAR(254) NOT NULL,\n-    caller_class      VARCHAR(254) NOT NULL,\n-    caller_method     VARCHAR(254) NOT NULL,\n-    caller_line       CHAR(4) NOT NULL,\n-    event_id          BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY\n-  );\n-COMMIT;\n-\n-BEGIN;\n-CREATE TABLE logging_event_property\n-  (\n-    event_id\t      BIGINT NOT NULL,\n-    mapped_key        VARCHAR(254) NOT NULL,\n-    mapped_value      TEXT,\n-    PRIMARY KEY(event_id, mapped_key),\n-    FOREIGN KEY (event_id) REFERENCES logging_event(event_id)\n-  );\n-COMMIT;\n-\n-BEGIN;\n-CREATE TABLE logging_event_exception\n-  (\n-    event_id         BIGINT NOT NULL,\n-    i                SMALLINT NOT NULL,\n-    trace_line       VARCHAR(254) NOT NULL,\n-    PRIMARY KEY(event_id, i),\n-    FOREIGN KEY (event_id) REFERENCES logging_event(event_id)\n-  );\n-COMMIT;\n\\ No newline at end of file"},{"sha":"1963991088d28d50ab5a7b9eb3a46d07e238d8c9","filename":"core/src/main/resources/logback/oracle.sql","status":"removed","additions":0,"deletions":90,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Foracle.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Foracle.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Foracle.sql?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,90 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n--- This SQL script creates the required tables by ch.qos.logback.classic.db.DBAppender\n---\n--- It is intended for Oracle 9i, 10g and 11g databases. Tested on version 9.2, \n--- 10g and 11g.\n-\n--- The following lines are useful in cleaning any previously existing tables \n-\n---drop TRIGGER logging_event_id_seq_trig; \n---drop SEQUENCE logging_event_id_seq; \n---drop table logging_event_property; \n---drop table logging_event_exception; \n---drop table logging_event; \n-\n-\n-CREATE SEQUENCE logging_event_id_seq MINVALUE 1 START WITH 1;\n-\n-CREATE TABLE logging_event \n-  (\n-    timestmp         NUMBER(20) NOT NULL,\n-    formatted_message  VARCHAR2(4000) NOT NULL,\n-    logger_name       VARCHAR(254) NOT NULL,\n-    level_string      VARCHAR(254) NOT NULL,\n-    thread_name       VARCHAR(254),\n-    reference_flag    SMALLINT,\n-    arg0              VARCHAR(254),\n-    arg1              VARCHAR(254),\n-    arg2              VARCHAR(254),\n-    arg3              VARCHAR(254),\n-    caller_filename   VARCHAR(254) NOT NULL,\n-    caller_class      VARCHAR(254) NOT NULL,\n-    caller_method     VARCHAR(254) NOT NULL,\n-    caller_line       CHAR(4) NOT NULL,\n-    event_id          NUMBER(10) PRIMARY KEY\n-  );\n-\n-\n--- the / suffix may or may not be needed depending on your SQL Client\n--- Some SQL Clients, e.g. SQuirrel SQL has trouble with the following\n--- trigger creation command, while SQLPlus (the basic SQL Client which\n--- ships with Oracle) has no trouble at all.\n-\n-CREATE TRIGGER logging_event_id_seq_trig\n-  BEFORE INSERT ON logging_event\n-  FOR EACH ROW  \n-  BEGIN  \n-    SELECT logging_event_id_seq.NEXTVAL \n-    INTO   :NEW.event_id \n-    FROM   DUAL;  \n-  END;\n-/\n-\n-\n-CREATE TABLE logging_event_property\n-  (\n-    event_id\t      NUMBER(10) NOT NULL,\n-    mapped_key        VARCHAR2(254) NOT NULL,\n-    mapped_value      VARCHAR2(1024),\n-    PRIMARY KEY(event_id, mapped_key),\n-    FOREIGN KEY (event_id) REFERENCES logging_event(event_id)\n-  );\n-  \n-CREATE TABLE logging_event_exception\n-  (\n-    event_id         NUMBER(10) NOT NULL,\n-    i                SMALLINT NOT NULL,\n-    trace_line       VARCHAR2(254) NOT NULL,\n-    PRIMARY KEY(event_id, i),\n-    FOREIGN KEY (event_id) REFERENCES logging_event(event_id)\n-  );\n-  \n-\n-\n-"},{"sha":"a4126dbaf99f7e37f54c8bf840fc25c23b68383c","filename":"core/src/main/resources/logback/postgresql.sql","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fpostgresql.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fpostgresql.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fpostgresql.sql?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,66 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n--- This SQL script creates the required tables by ch.qos.logback.classic.db.DBAppender\n---\n--- It is intended for PostgreSQL databases.\n-\n-DROP TABLE    logging_event_property;\n-DROP TABLE    logging_event_exception;\n-DROP TABLE    logging_event;\n-DROP SEQUENCE logging_event_id_seq;\n-\n-\n-CREATE SEQUENCE logging_event_id_seq MINVALUE 1 START 1;\n-\n-\n-CREATE TABLE logging_event \n-  (\n-    timestmp         BIGINT NOT NULL,\n-    formatted_message  TEXT NOT NULL,\n-    logger_name       VARCHAR(254) NOT NULL,\n-    level_string      VARCHAR(254) NOT NULL,\n-    thread_name       VARCHAR(254),\n-    reference_flag    SMALLINT,\n-    arg0              VARCHAR(254),\n-    arg1              VARCHAR(254),\n-    arg2              VARCHAR(254),\n-    arg3              VARCHAR(254),\n-    caller_filename   VARCHAR(254) NOT NULL,\n-    caller_class      VARCHAR(254) NOT NULL,\n-    caller_method     VARCHAR(254) NOT NULL,\n-    caller_line       CHAR(4) NOT NULL,\n-    event_id          BIGINT DEFAULT nextval('logging_event_id_seq') PRIMARY KEY\n-  );\n-\n-CREATE TABLE logging_event_property\n-  (\n-    event_id\t      BIGINT NOT NULL,\n-    mapped_key        VARCHAR(254) NOT NULL,\n-    mapped_value      VARCHAR(1024),\n-    PRIMARY KEY(event_id, mapped_key),\n-    FOREIGN KEY (event_id) REFERENCES logging_event(event_id)\n-  );\n-\n-CREATE TABLE logging_event_exception\n-  (\n-    event_id         BIGINT NOT NULL,\n-    i                SMALLINT NOT NULL,\n-    trace_line       VARCHAR(254) NOT NULL,\n-    PRIMARY KEY(event_id, i),\n-    FOREIGN KEY (event_id) REFERENCES logging_event(event_id)\n-  );"},{"sha":"56adcd1c47b3f4aba6ea90570b63952977c2926c","filename":"core/src/main/resources/logback/sqlserver.sql","status":"removed","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fsqlserver.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/555da1b154a2f846047541873dde7fc58deddd3f/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fsqlserver.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback%2Fsqlserver.sql?ref=555da1b154a2f846047541873dde7fc58deddd3f","patch":"@@ -1,26 +0,0 @@\n--- Licensed to the Apache Software Foundation (ASF) under one\n--- or more contributor license agreements.  See the NOTICE file\n--- distributed with this work for additional information\n--- regarding copyright ownership.  The ASF licenses this file\n--- to you under the Apache License, Version 2.0 (the\n--- \"License\"); you may not use this file except in compliance\n--- with the License.  You may obtain a copy of the License at\n---\n---   http://www.apache.org/licenses/LICENSE-2.0\n---\n--- Unless required by applicable law or agreed to in writing,\n--- software distributed under the License is distributed on an\n--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n--- KIND, either express or implied.  See the License for the\n--- specific language governing permissions and limitations\n--- under the License.\n-\n-DROP TABLE logging_event_property\n-DROP TABLE logging_event_exception\n-DROP TABLE logging_event\n-\n-CREATE TABLE logging_event ( timestmp         DECIMAL(20) NOT NULL, formatted_message  VARCHAR(4000) NOT NULL, logger_name       VARCHAR(254) NOT NULL, level_string      VARCHAR(254) NOT NULL, thread_name       VARCHAR(254), reference_flag    SMALLINT, arg0              VARCHAR(254), arg1              VARCHAR(254), arg2              VARCHAR(254), arg3              VARCHAR(254), caller_filename   VARCHAR(254) NOT NULL, caller_class      VARCHAR(254) NOT NULL, caller_method     VARCHAR(254) NOT NULL, caller_line       CHAR(4) NOT NULL, event_id          DECIMAL(38) NOT NULL identity, PRIMARY KEY(event_id))\n-\n-CREATE TABLE logging_event_property ( event_id          DECIMAL(38) NOT NULL, mapped_key        VARCHAR(254) NOT NULL, mapped_value      VARCHAR(1024), PRIMARY KEY(event_id, mapped_key), FOREIGN KEY (event_id) REFERENCES logging_event(event_id))\n-\n-CREATE TABLE logging_event_exception ( event_id         DECIMAL(38) NOT NULL, i                SMALLINT NOT NULL, trace_line       VARCHAR(254) NOT NULL, PRIMARY KEY(event_id, i), FOREIGN KEY (event_id) REFERENCES logging_event(event_id) ) "},{"sha":"cce365a01af4b2ee39a24bcd6bcbb383293458fa","filename":"core/src/main/resources/persistence.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -21,4 +21,4 @@ jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.PostgresDictionary\n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql\n-logback.sql=postgresql.sql\n+audit.sql=audit.sql"},{"sha":"a2dd7a5e4c4c46b66875074f112407f961a396a2","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -35,8 +35,6 @@ under the License.\n   <context:component-scan base-package=\"org.apache.syncope.core.util\"/>\n   <context:component-scan base-package=\"org.apache.syncope.core.policy\"/>\n \n-  <bean id=\"xStream\" class=\"com.thoughtworks.xstream.XStream\"/>\n-\n   <!-- Use JNDI datasource as default but, when not available, revert to\n   local datasource, with different properties for execution and testing. \n   In any case, get all JDBC connections with a determined isolation level. -->"},{"sha":"81410985c42fc6a00d431f7bd1db98b86d2a2e6a","filename":"core/src/main/resources/syncopeContext.xml","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -65,9 +65,6 @@ under the License.\n             <value type=\"org.springframework.core.io.Resource\">\n               classpath:/quartz/${quartz.sql}\n             </value>\n-            <value type=\"org.springframework.core.io.Resource\">\n-              classpath:/logback/${logback.sql}\n-            </value>\n           </array>\n         </property>\n       </bean>\n@@ -87,6 +84,8 @@ under the License.\n   <task:annotation-driven executor=\"connectorExecutor\"/>\n   <task:executor id=\"connectorExecutor\" pool-size=\"10\"/>\n \n+  <bean id=\"xStream\" class=\"com.thoughtworks.xstream.XStream\"/>\n+\n   <bean id=\"jexlEngine\" class=\"org.apache.commons.jexl2.JexlEngine\">\n     <property name=\"cache\" value=\"512\"/>\n     <property name=\"lenient\" value=\"true\"/>"},{"sha":"9dca3ebb0b05b79cc4d831efbe582bad411d36b7","filename":"core/src/test/java/org/apache/syncope/core/rest/LoggerTestITCase.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -29,7 +29,7 @@\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditLoggerName;\n import org.apache.syncope.common.types.LoggerType;\n-import org.apache.syncope.common.types.SyncopeLoggerLevel;\n+import org.apache.syncope.common.types.LoggerLevel;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -40,7 +40,7 @@ public class LoggerTestITCase extends AbstractTest {\n \n     @Test\n     public void listLogs() {\n-        List<LoggerTO> loggers = loggerService.list(LoggerType.NORMAL);\n+        List<LoggerTO> loggers = loggerService.list(LoggerType.LOG);\n         assertNotNull(loggers);\n         assertFalse(loggers.isEmpty());\n         for (LoggerTO logger : loggers) {\n@@ -61,25 +61,25 @@ public void listAudits() throws ParseException {\n \n     @Test\n     public void setLevel() {\n-        List<LoggerTO> loggers = loggerService.list(LoggerType.NORMAL);\n+        List<LoggerTO> loggers = loggerService.list(LoggerType.LOG);\n         assertNotNull(loggers);\n         int startSize = loggers.size();\n \n         LoggerTO logger = new LoggerTO();\n         logger.setName(\"TEST\");\n-        logger.setLevel(SyncopeLoggerLevel.INFO);\n-        loggerService.update(LoggerType.NORMAL, logger.getName(), logger);\n-        logger = loggerService.read(LoggerType.NORMAL, logger.getName());\n+        logger.setLevel(LoggerLevel.INFO);\n+        loggerService.update(LoggerType.LOG, logger.getName(), logger);\n+        logger = loggerService.read(LoggerType.LOG, logger.getName());\n         assertNotNull(logger);\n-        assertEquals(SyncopeLoggerLevel.INFO, logger.getLevel());\n+        assertEquals(LoggerLevel.INFO, logger.getLevel());\n \n-        loggers = loggerService.list(LoggerType.NORMAL);\n+        loggers = loggerService.list(LoggerType.LOG);\n         assertNotNull(loggers);\n         assertEquals(startSize + 1, loggers.size());\n \n         // TEST Delete\n-        loggerService.delete(LoggerType.NORMAL, \"TEST\");\n-        loggers = loggerService.list(LoggerType.NORMAL);\n+        loggerService.delete(LoggerType.LOG, \"TEST\");\n+        loggers = loggerService.list(LoggerType.LOG);\n         assertNotNull(loggers);\n         assertEquals(startSize, loggers.size());\n     }\n@@ -96,7 +96,7 @@ public void enableDisableAudit() {\n         LoggerTO loggerTO = new LoggerTO();\n         String name = auditLoggerName.toLoggerName();\n         loggerTO.setName(name);\n-        loggerTO.setLevel(SyncopeLoggerLevel.DEBUG);\n+        loggerTO.setLevel(LoggerLevel.DEBUG);\n         loggerService.update(LoggerType.AUDIT, name, loggerTO);\n \n         audits = CollectionWrapper.wrapLogger(loggerService.list(LoggerType.AUDIT));"},{"sha":"2412928dc66d31ce09601df2777d38355b819352","filename":"core/src/test/resources/mysql/persistence.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -21,4 +21,4 @@ jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.MySQLDictionary\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.sql=tables_mysql.sql\n-logback.sql=mysql.sql\n+audit.sql=audit.sql"},{"sha":"d23559b441d4b2e2c65163f39deede7fbaff5aa3","filename":"core/src/test/resources/oracle/persistence.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -21,5 +21,5 @@ jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.OracleDictionary\n quartz.jobstore=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n quartz.sql=tables_oracle.sql\n-logback.sql=oracle.sql\n+audit.sql=audit_oracle.sql\n database.schema=SYNCOPE"},{"sha":"c6acdabce9bb92bbf4af6fcbf3211bd83dc6dc76","filename":"core/src/test/resources/persistence.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -21,4 +21,4 @@ jpa.password=\n jpa.dialect=org.apache.openjpa.jdbc.sql.H2Dictionary\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.sql=tables_h2.sql\n-logback.sql=h2.sql\n+audit.sql=audit.sql"},{"sha":"8154fb91f50a2ee6229221c7e321f8c5924ca673","filename":"core/src/test/resources/persistenceTestEnv.xml","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2FpersistenceTestEnv.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2FpersistenceTestEnv.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FpersistenceTestEnv.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -63,9 +63,6 @@ under the License.\n             <value type=\"org.springframework.core.io.Resource\">\n               classpath:/quartz/${quartz.sql}\n             </value>\n-            <value type=\"org.springframework.core.io.Resource\">\n-              classpath:/logback/${logback.sql}\n-            </value>\n           </array>\n         </property>\n       </bean>"},{"sha":"74e570b8814f1acd8125e6ea123dbc0ad058a48c","filename":"core/src/test/resources/postgres/persistence.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -21,4 +21,3 @@ jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.PostgresDictionary\n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql\n-logback.sql=postgresql.sql\n\\ No newline at end of file"},{"sha":"d68a09c51742198e475c3ec7c53bda57ae81d165","filename":"core/src/test/resources/sqlserver/persistence.properties","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -14,12 +14,11 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\n jpa.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver\n jpa.url=jdbc:sqlserver://acacia:1433;database=syncope;selectMethod=cursor;sendStringParametersAsUnicode=false\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n quartz.sql=tables_sqlServer.sql\n-logback.sql=sqlserver.sql\n+audit.sql=audit_sqlserver.sql"},{"sha":"cbc53a641839300d49a2b4a75b6eb95ee67ce1f2","filename":"legal_ext/LICENSE","status":"modified","additions":5,"deletions":58,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/legal_ext%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/legal_ext%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/legal_ext%2FLICENSE?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -202,64 +202,6 @@\n \n ==\n \n-For Code Generation Library - cglib (http://cglib.sourceforge.net/):\n-This is licensed under the AL 2.0, see above.\n-\n-==\n-\n-For Logback (http://logback.qos.ch):\n-\n-This program and the accompanying materials are licensed under\n-the terms of the Eclipse Public License v 1.0.\n-\n-Eclipse Public License - v 1.0\n-\n-THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n-1. DEFINITIONS\n-\"Contribution\" means:\n-a) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and\n-b) in the case of each subsequent Contributor:\n-i) changes to the Program, and\n-ii) additions to the Program;\n-where such changes and/or additions to the Program originate from and are distributed by that particular Contributor. A Contribution 'originates' from a Contributor if it was added to the Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions do not include additions to the Program which: (i) are separate modules of software distributed in conjunction with the Program under their own license agreement, and (ii) are not derivative works of the Program.\n-\"Contributor\" means any person or entity that distributes the Program.\n-\"Licensed Patents\" mean patent claims licensable by a Contributor which are necessarily infringed by the use or sale of its Contribution alone or when combined with the Program.\n-\"Program\" means the Contributions distributed in accordance with this Agreement.\n-\"Recipient\" means anyone who receives the Program under this Agreement, including all Contributors.\n-2. GRANT OF RIGHTS\n-a) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, distribute and sublicense the Contribution of such Contributor, if any, and such derivative works, in source code and object code form.\n-b) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in source code and object code form. This patent license shall apply to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder.\n-c) Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual property rights needed, if any. For example, if a third party patent license is required to allow Recipient to distribute the Program, it is Recipient's responsibility to acquire that license before distributing the Program.\n-d) Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, to grant the copyright license set forth in this Agreement.\n-3. REQUIREMENTS\n-A Contributor may choose to distribute the Program in object code form under its own license agreement, provided that:\n-a) it complies with the terms and conditions of this Agreement; and\n-b) its license agreement:\n-i) effectively disclaims on behalf of all Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose;\n-ii) effectively excludes on behalf of all Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits;\n-iii) states that any provisions which differ from this Agreement are offered by that Contributor alone and not by any other party; and\n-iv) states that source code for the Program is available from such Contributor, and informs licensees how to obtain it in a reasonable manner on or through a medium customarily used for software exchange.\n-When the Program is made available in source code form:\n-a) it must be made available under this Agreement; and\n-b) a copy of this Agreement must be included with each copy of the Program.\n-Contributors may not remove or alter any copyright notices contained within the Program.\n-Each Contributor must identify itself as the originator of its Contribution, if any, in a manner that reasonably allows subsequent Recipients to identify the originator of the Contribution.\n-4. COMMERCIAL DISTRIBUTION\n-Commercial distributors of software may accept certain responsibilities with respect to end users, business partners and the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes the Program in a commercial product offering should do so in a manner which does not create potential liability for other Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor (\"Commercial Contributor\") hereby agrees to defend and indemnify every other Contributor (\"Indemnified Contributor\") against any losses, damages and costs (collectively \"Losses\") arising from claims, lawsuits and other legal actions brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such Commercial Contributor in connection with its distribution of the Program in a commercial product offering. The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual property infringement. In order to qualify, an Indemnified Contributor must: a) promptly notify the Commercial Contributor in writing of such claim, and b) allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its own expense.\n-For example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to Product X, those performance claims and warranties are such Commercial Contributor's responsibility alone. Under this section, the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay those damages.\n-5. NO WARRANTY\n-EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement , including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, programs or equipment, and unavailability or interruption of operations.\n-6. DISCLAIMER OF LIABILITY\n-EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n-7. GENERAL\n-If any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.\n-If Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient's patent(s), then such Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed.\n-All Recipient's rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. If all Recipient's rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as reasonably practicable. However, Recipient's obligations under this Agreement and any licenses granted by Recipient relating to the Program shall continue and survive.\n-Everyone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to modify this Agreement. The Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing version number. The Program (including Contributions) may always be distributed subject to the version of the Agreement under which it was received. In addition, after a new version of the Agreement is published, Contributor may elect to distribute the Program (including its Contributions) under the new version. Except as expressly stated in Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved.\n-This Agreement is governed by the laws of the State of New York and the intellectual property laws of the United States of America. No party to this Agreement will bring a legal action under this Agreement more than one year after the cause of action arose. Each party waives its rights to a jury trial in any resulting litigation.\n-\n-==\n-\n For XStream (http://xstream.codehaus.org):\n \n This program and the accompanying materials are licensed under\n@@ -875,3 +817,8 @@ For javax.inject (http://code.google.com/p/atinject/):\n This is licensed under the AL 2.0, see above.\n \n ==\n+\n+For LMAX Disruptor (http://lmax-exchange.github.io/disruptor/):\n+This is licensed under the AL 2.0, see above.\n+\n+=="},{"sha":"34e7fa8d010c64198c9f830f5c2209d7e5c611b1","filename":"legal_ext/NOTICE","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/legal_ext%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/legal_ext%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/legal_ext%2FNOTICE?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -9,16 +9,6 @@ with which this file is now or was at one time distributed.\n \n ==\n \n-This product includes software developed by the Code Generation Library project.\n-\n-==\n-\n-This product includes software developed by QOS.ch.\n-Copyright (C) 1999-2011, QOS.ch. All rights reserved.\n-This software is included in binary form only.\n-\n-==\n-\n This product contains unmodified binary redistributions for H2 database engine\n (http://www.h2database.com/), which is dual licensed and available under a \n modified version of the MPL 1.1 (Mozilla Public License) or under the \n@@ -155,3 +145,9 @@ Copyright (c) 2009, http://code.google.com/p/atinject/\n All rights reserved.\n \n ==\n+\n+This product includes software developed by the LMAX Disruptor Project.\n+Copyright (c) 2011 LMAX Ltd., http://lmax-exchange.github.io/disruptor/\n+All rights reserved.\n+\n+=="},{"sha":"fb3af32228a6ca8c23faacf61d88ab17de5aca08","filename":"pom.xml","status":"modified","additions":20,"deletions":8,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=7c3c2bd0bc6f45b96e9a94a81fa9913bc50fb535","patch":"@@ -329,8 +329,9 @@ under the License.\n \n     <h2.version>1.3.173</h2.version>\n \n-    <logback.version>1.0.13</logback.version>\n+    <log4j.version>2.0-beta9-SNAPSHOT</log4j.version>\n     <slf4j.version>1.7.5</slf4j.version>\n+    <disruptor.version>3.2.0</disruptor.version>\n \n     <junit.version>4.11</junit.version>\n     <selenium-java-client-driver.version>1.0.2</selenium-java-client-driver.version>\n@@ -777,14 +778,24 @@ under the License.\n         <version>${slf4j.version}</version>\n       </dependency>\n       <dependency>\n-        <groupId>ch.qos.logback</groupId>\n-        <artifactId>logback-core</artifactId>\n-        <version>${logback.version}</version>\n+        <groupId>org.apache.logging.log4j</groupId>\n+        <artifactId>log4j-api</artifactId>\n+        <version>${log4j.version}</version>\n       </dependency>\n       <dependency>\n-        <groupId>ch.qos.logback</groupId>\n-        <artifactId>logback-classic</artifactId>\n-        <version>${logback.version}</version>\n+        <groupId>org.apache.logging.log4j</groupId>\n+        <artifactId>log4j-core</artifactId>\n+        <version>${log4j.version}</version>\n+      </dependency>      \n+      <dependency>\n+        <groupId>com.lmax</groupId>\n+        <artifactId>disruptor</artifactId>\n+        <version>${disruptor.version}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.logging.log4j</groupId>\n+        <artifactId>log4j-slf4j-impl</artifactId>\n+        <version>${log4j.version}</version>\n       </dependency>\n       <dependency>\n         <groupId>commons-logging</groupId>\n@@ -797,7 +808,7 @@ under the License.\n         <artifactId>jcl-over-slf4j</artifactId>\n         <version>${slf4j.version}</version>\n       </dependency>\n-        \n+      \n       <!-- TEST -->\n       <dependency>\n         <groupId>junit</groupId>\n@@ -1168,6 +1179,7 @@ under the License.\n           <excludes>\n             <exclude>nbactions.xml</exclude>\n             <exclude>nb-configuration.xml</exclude>\n+            <exclude>**/META-INF/cxf/**</exclude>\n             <exclude>**/META-INF/services/**</exclude>\n             <exclude>**/META-INF/MANIFEST.MF</exclude>            \n             <exclude>**/*.css</exclude>"}]}