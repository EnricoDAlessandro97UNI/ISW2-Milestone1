{"sha":"e0a5bcea57e936971f749f70b0cd669d772839f6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwYTViY2VhNTdlOTM2OTcxZjc0OWY3MGIwY2Q2NjlkNzcyODM5ZjY=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2019-05-23T10:27:36Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2019-05-23T10:27:44Z"},"message":"[SYNCOPE-1421] Added start button for User Requests to improve UX","tree":{"sha":"281c6c6f53bc2a88b952be420438785f5e47b97d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/281c6c6f53bc2a88b952be420438785f5e47b97d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e0a5bcea57e936971f749f70b0cd669d772839f6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0a5bcea57e936971f749f70b0cd669d772839f6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e0a5bcea57e936971f749f70b0cd669d772839f6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0a5bcea57e936971f749f70b0cd669d772839f6/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"bc50b6496433564df1388344d394f75bdd0b0dbe","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc50b6496433564df1388344d394f75bdd0b0dbe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bc50b6496433564df1388344d394f75bdd0b0dbe"}],"stats":{"total":65,"additions":45,"deletions":20},"files":[{"sha":"90f5edfae58e71a720752f2e70a7d87db392dcca","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/Flowable.java","status":"modified","additions":38,"deletions":19,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java?ref=e0a5bcea57e936971f749f70b0cd669d772839f6","patch":"@@ -67,15 +67,15 @@ public class Flowable extends BaseExtPage {\n \n     private final UserRequestRestClient userRequestRestClient = new UserRequestRestClient();\n \n-    private final WebMarkupContainer paginationContainer;\n+    private final WebMarkupContainer container;\n \n     private final DataView<UserRequest> urDataView;\n \n     public Flowable(final PageParameters parameters) {\n         super(parameters);\n \n-        paginationContainer = new WebMarkupContainer(\"content\");\n-        paginationContainer.setOutputMarkupId(true);\n+        container = new WebMarkupContainer(\"content\");\n+        container.setOutputMarkupId(true);\n \n         // list of accordions containing request form (if any) and delete button\n         urDataView = new DataView<UserRequest>(\"userRequests\", new URDataProvider(rowsPerPage, \"bpmnProcess\")) {\n@@ -86,7 +86,7 @@ public Flowable(final PageParameters parameters) {\n             protected void populateItem(final Item<UserRequest> item) {\n                 final UserRequest userRequest = item.getModelObject();\n                 item.add(new Accordion(\"userRequestDetails\", Collections.<ITab>singletonList(new AbstractTab(\n-                        new StringResourceModel(\"user.requests.accordion\", paginationContainer,\n+                        new StringResourceModel(\"user.requests.accordion\", container,\n                                 Model.of(userRequest))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n@@ -102,8 +102,32 @@ public WebMarkupContainer getPanel(final String panelId) {\n \n         urDataView.setItemsPerPage(rowsPerPage);\n         urDataView.setOutputMarkupId(true);\n-        paginationContainer.add(urDataView);\n-        paginationContainer.add(new AjaxPagingNavigator(\"navigator\", urDataView));\n+        container.add(urDataView);\n+        container.add(new AjaxPagingNavigator(\"navigator\", urDataView));\n+\n+        final AjaxLink<Void> startButton =\n+                new AjaxLink<>(\"start\") {\n+\n+            private static final long serialVersionUID = 3669569969172391336L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                if (StringUtils.isNotBlank(bpmnProcessModel.getObject())) {\n+                    try {\n+                        userRequestRestClient.start(bpmnProcessModel.getObject(), null);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Unable to start bpmnProcess [{}]\", bpmnProcessModel.getObject(), e);\n+                        SyncopeEnduserSession.get()\n+                                .error(String.format(\"Unable to start bpmnProcess [%s]\", e.getMessage()));\n+                        notificationPanel.refresh(target);\n+                    }\n+                    target.add(container);\n+                }\n+            }\n+        };\n+\n+        startButton.setEnabled(false);\n+        container.add(startButton);\n \n         // autocomplete select with bpmnProcesses\n         final BpmnProcessesAjaxPanel bpmnProcesses =\n@@ -115,24 +139,19 @@ public WebMarkupContainer getPanel(final String panelId) {\n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n                         if (StringUtils.isNotBlank(bpmnProcessModel.getObject())) {\n-                            try {\n-                                userRequestRestClient.start(bpmnProcessModel.getObject(), null);\n-                            } catch (Exception e) {\n-                                LOG.error(\"Unable to start bpmnProcess [{}]\", bpmnProcessModel.getObject(), e);\n-                                SyncopeEnduserSession.get()\n-                                        .error(String.format(\"Unable to start bpmnProcess [%s]\", e.getMessage()));\n-                                notificationPanel.refresh(target);\n-                            }\n-                            target.add(paginationContainer);\n+                            startButton.setEnabled(true);\n+                        } else {\n+                            startButton.setEnabled(false);\n                         }\n+                        target.add(container);\n                     }\n                 });\n         bpmnProcesses.setChoices(restClient.getDefinitions().stream()\n                 .filter(definition -> !definition.isUserWorkflow())\n                 .map(definition -> definition.getKey()).collect(Collectors.toList()));\n-        paginationContainer.add(bpmnProcesses);\n+        container.add(bpmnProcesses);\n \n-        body.add(paginationContainer);\n+        body.add(container);\n     }\n \n     @Override\n@@ -181,7 +200,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                                             try {\n                                                 userRequestRestClient.claimForm(formTO.getTaskId());\n                                                 userRequestRestClient.submitForm(formTO);\n-                                                target.add(paginationContainer);\n+                                                target.add(container);\n                                             } catch (SyncopeClientException sce) {\n                                                 LOG.error(\"Unable to submit user request form for BPMN process [{}]\",\n                                                         formTO.getBpmnProcess(), sce);\n@@ -201,7 +220,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n                     userRequestRestClient.cancelRequest(userRequest.getExecutionId(), null);\n-                    target.add(paginationContainer);\n+                    target.add(container);\n                 }\n \n             });"},{"sha":"b3cd2155493536d415ebbc490f958c8bc080c339","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/client/enduser/pages/Flowable.html","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.html?ref=e0a5bcea57e936971f749f70b0cd669d772839f6","patch":"@@ -30,7 +30,8 @@ <h1>\n             </div>\n \n             <div>\n-              <span wicket:id=\"bpmnProcesses\">[BPMN PROCESSES]</span>\n+              <span wicket:id=\"bpmnProcesses\">[BPMN PROCESSES]</span> \n+              <input wicket:id=\"start\" wicket:message=\"value:start\" type=\"button\" class=\"btn btn-success\">\n             </div>\n \n           </div>"},{"sha":"1cb340b84530683278807154eb55f370579ead9c","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/client/enduser/pages/Flowable.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.properties?ref=e0a5bcea57e936971f749f70b0cd669d772839f6","patch":"@@ -20,3 +20,4 @@ submit=Submit\n executionId=Execution ID\n startTime=Start time\n delete=Delete\n+start=Start"},{"sha":"896af9efa1a1f9f3bb23a4d47d83dc137eae69a5","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/client/enduser/pages/Flowable_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_it.properties?ref=e0a5bcea57e936971f749f70b0cd669d772839f6","patch":"@@ -20,3 +20,4 @@ submit=Salva\n executionId=Execution ID\n startTime=Eseguito il\n delete=Cancella\n+start=Esegui"},{"sha":"f08cec1ba20383ce11e0edd8292c78afa8480ff8","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/client/enduser/pages/Flowable_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_ja.properties?ref=e0a5bcea57e936971f749f70b0cd669d772839f6","patch":"@@ -20,3 +20,4 @@ submit=\\u63d0\\u51fa\\u3059\\u308b\n executionId=\\u5b9f\\u884cID\n startTime=\\u59cb\\u307e\\u308b\\u6642\\u9593\n delete=\\u30af\\u30ea\\u30a2\n+start=\\u958b\\u59cb"},{"sha":"0fcaf09ac515d70940b171630e6672c200dc1401","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/client/enduser/pages/Flowable_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_pt_BR.properties?ref=e0a5bcea57e936971f749f70b0cd669d772839f6","patch":"@@ -20,3 +20,4 @@ submit=Enviar\n executionId=Execution ID\n startTime=Hora de in\\u00edcio\n delete=Limpa\n+start=Come\\u00e7ar"},{"sha":"9164ee7157466665d796448bb94479e25dc35502","filename":"ext/flowable/client-enduser/src/main/resources/org/apache/syncope/client/enduser/pages/Flowable_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e0a5bcea57e936971f749f70b0cd669d772839f6/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable_ru.properties?ref=e0a5bcea57e936971f749f70b0cd669d772839f6","patch":"@@ -20,3 +20,4 @@ submit=\\u041e\\u0442\\u043f\\u0440\\u0430\\u0432\\u0438\\u0442\\u044c\n executionId=\\u0438\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f\n startTime=\\u043d\\u0430\\u0447\\u0430\\u043b\\u044c\\u043d\\u043e\\u0435 \\u0432\\u0440\\u0435\\u043c\\u044f\n delete=\\u0440\\u0430\\u0441\\u0441\\u0435\\u0435\\u0442\\u0441\\u044f\n+start=\\u041d\\u0430\\u0447\\u043d\\u0438\\u0442\\u0435"}]}