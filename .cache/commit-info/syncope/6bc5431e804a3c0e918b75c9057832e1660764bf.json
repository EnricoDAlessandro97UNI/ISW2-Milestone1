{"sha":"6bc5431e804a3c0e918b75c9057832e1660764bf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZiYzU0MzFlODA0YTNjMGU5MThiNzVjOTA1NzgzMmUxNjYwNzY0YmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-10T15:46:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-10T16:04:33Z"},"message":"Fixing missing JobActionPanel for SchedTaskDirectoryPanel","tree":{"sha":"baba3caf8815b4ae29f4d3a22b68d1bc069d4426","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/baba3caf8815b4ae29f4d3a22b68d1bc069d4426"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6bc5431e804a3c0e918b75c9057832e1660764bf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6bc5431e804a3c0e918b75c9057832e1660764bf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6bc5431e804a3c0e918b75c9057832e1660764bf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6bc5431e804a3c0e918b75c9057832e1660764bf/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"475e5f924c60509436eb4a74aef1849ded791436","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/475e5f924c60509436eb4a74aef1849ded791436","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/475e5f924c60509436eb4a74aef1849ded791436"}],"stats":{"total":81,"additions":67,"deletions":14},"files":[{"sha":"b45e6ead0708ebe447c1ee858563bdef9912787d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskDirectoryPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6bc5431e804a3c0e918b75c9057832e1660764bf/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6bc5431e804a3c0e918b75c9057832e1660764bf/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java?ref=6bc5431e804a3c0e918b75c9057832e1660764bf","patch":"@@ -145,10 +145,9 @@ public void populateItem(\n                 try {\n                     JobTO jobTO = TaskRestClient.getJob(rowModel.getObject().getKey());\n                     panel = new JobActionPanel(componentId, jobTO, false, ProvisioningTaskDirectoryPanel.this, pageRef);\n-                    MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.ENABLE,\n-                            String.format(\"%s,%s\",\n-                                    IdRepoEntitlement.TASK_EXECUTE,\n-                                    IdRepoEntitlement.TASK_UPDATE));\n+                    MetaDataRoleAuthorizationStrategy.authorize(\n+                            panel, WebPage.ENABLE,\n+                            String.format(\"%s,%s\", IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE));\n                 } catch (Exception e) {\n                     LOG.error(\"Could not get job for task {}\", rowModel.getObject().getKey(), e);\n                     panel = new Label(componentId, Model.of());"},{"sha":"1de241bc8c41cc11b252128d5be89e1636c3d37f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":41,"deletions":4,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6bc5431e804a3c0e918b75c9057832e1660764bf/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6bc5431e804a3c0e918b75c9057832e1660764bf/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=6bc5431e804a3c0e918b75c9057832e1660764bf","patch":"@@ -42,19 +42,24 @@\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.client.console.widgets.JobActionPanel;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.JobTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.TemplatableTO;\n+import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n@@ -128,7 +133,7 @@ protected Serializable onApplyInternal(\n     }\n \n     protected List<IColumn<T, String>> getFieldColumns() {\n-        final List<IColumn<T, String>> columns = new ArrayList<>();\n+        List<IColumn<T, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<>(\n                 new StringResourceModel(Constants.KEY_FIELD_NAME, this), Constants.KEY_FIELD_NAME));\n@@ -143,8 +148,11 @@ protected List<IColumn<T, String>> getFieldColumns() {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n-                final IModel<?> model = getDataModel(rowModel);\n+                    final Item<ICellPopulator<T>> item,\n+                    final String componentId,\n+                    final IModel<T> rowModel) {\n+\n+                IModel<?> model = getDataModel(rowModel);\n                 if (model != null && model.getObject() instanceof String) {\n                     String value = String.class.cast(model.getObject());\n                     if (value.length() > 20) {\n@@ -156,7 +164,6 @@ public void populateItem(\n                     super.populateItem(item, componentId, rowModel);\n                 }\n             }\n-\n         });\n \n         columns.add(new DatePropertyColumn<>(\n@@ -171,6 +178,36 @@ public void populateItem(\n         columns.add(new BooleanPropertyColumn<>(\n                 new StringResourceModel(\"active\", this), \"active\", \"active\"));\n \n+        columns.add(new AbstractColumn<T, String>(new Model<>(\"\"), \"running\") {\n+\n+            private static final long serialVersionUID = -4008579357070833846L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<T>> cellItem,\n+                    final String componentId,\n+                    final IModel<T> rowModel) {\n+\n+                Component panel;\n+                try {\n+                    JobTO jobTO = restClient.getJob(rowModel.getObject().getKey());\n+                    panel = new JobActionPanel(componentId, jobTO, false, SchedTaskDirectoryPanel.this, pageRef);\n+                    MetaDataRoleAuthorizationStrategy.authorize(\n+                            panel, WebPage.ENABLE,\n+                            String.format(\"%s,%s\", IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE));\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not get job for task {}\", rowModel.getObject().getKey(), e);\n+                    panel = new Label(componentId, Model.of());\n+                }\n+                cellItem.add(panel);\n+            }\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"col-xs-1\";\n+            }\n+        });\n+\n         return columns;\n     }\n "},{"sha":"ad6c6d449a1e5f88faaa3434c5aa21c0f67eb52f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":23,"deletions":6,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6bc5431e804a3c0e918b75c9057832e1660764bf/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6bc5431e804a3c0e918b75c9057832e1660764bf/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=6bc5431e804a3c0e918b75c9057832e1660764bf","patch":"@@ -354,12 +354,29 @@ public void populateItem(\n \n                     JobTO jobTO = rowModel.getObject();\n                     JobActionPanel panel = new JobActionPanel(componentId, jobTO, true, JobWidget.this, pageRef);\n-                    MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.ENABLE,\n-                            String.format(\"%s,%s,%s,%s\",\n-                                    IdRepoEntitlement.TASK_EXECUTE,\n-                                    IdRepoEntitlement.REPORT_EXECUTE,\n-                                    IdRepoEntitlement.TASK_UPDATE,\n-                                    IdRepoEntitlement.REPORT_UPDATE));\n+\n+                    String roles;\n+                    switch (jobTO.getType()) {\n+                        case TASK:\n+                            roles = String.format(\"%s,%s\",\n+                                    IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE);\n+                            break;\n+\n+                        case REPORT:\n+                            roles = String.format(\"%s,%s\",\n+                                    IdRepoEntitlement.REPORT_EXECUTE, IdRepoEntitlement.REPORT_UPDATE);\n+                            break;\n+\n+                        case NOTIFICATION:\n+                            roles = String.format(\"%s,%s\",\n+                                    IdRepoEntitlement.NOTIFICATION_EXECUTE, IdRepoEntitlement.NOTIFICATION_UPDATE);\n+                            break;\n+\n+                        default:\n+                            roles = \"NO_ROLES\";\n+                    }\n+                    MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.ENABLE, roles);\n+\n                     cellItem.add(panel);\n                 }\n "}]}