{"sha":"921947687a25efbefaa71a1178a0c3d918236fbb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkyMTk0NzY4N2EyNWVmYmVmYWE3MWExMTc4YTBjM2Q5MTgyMzZmYmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2021-03-30T17:45:16Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-03-30T17:45:16Z"},"message":"[SYNCOPE-1545] Allow to manage and deploy ClientApp's properties (#255)","tree":{"sha":"31b236dd3888d2e20c35a3e598b72a5be1128f2a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/31b236dd3888d2e20c35a3e598b72a5be1128f2a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/921947687a25efbefaa71a1178a0c3d918236fbb","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgY2OsCRBK7hj4Ov3rIwAAdHIIAB9r7E1VSD2D2bPx2tjosvSN\nzmzzMHOvFX1Amdpml7m78iJXU91xds8RmsDp2FC6ZfOd4WOenkfHUz9s3sSoXQ4i\nxtw8Loz223uvjgv8hsOHK2seoBqD05+x6rphKAkTAAMH2shg5JySe5hI0/oiClvq\ndpMyfJxNkYkzOrw4y7d/4+QhGQ+vxahlxzwGfbZIExU8c941e1roi5F7hXMmVadW\nav0PQ2zweqe8QNX51lnA/iMFik6nWf3/fR5BMfGC5qw2WeWO2LUwUn1eaWH3LWtq\nJypndOAczAwXrmpNRmqfxCE+nKF69vb6GKS0DQJWjnz8y/h9/Dj4+7Io7mx16GA=\n=hOJt\n-----END PGP SIGNATURE-----\n","payload":"tree 31b236dd3888d2e20c35a3e598b72a5be1128f2a\nparent f721673e0b65de0413d4935378ca48f2c3b6cbcd\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1617126316 +0200\ncommitter GitHub <noreply@github.com> 1617126316 +0200\n\n[SYNCOPE-1545] Allow to manage and deploy ClientApp's properties (#255)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/921947687a25efbefaa71a1178a0c3d918236fbb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/921947687a25efbefaa71a1178a0c3d918236fbb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/921947687a25efbefaa71a1178a0c3d918236fbb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"f721673e0b65de0413d4935378ca48f2c3b6cbcd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f721673e0b65de0413d4935378ca48f2c3b6cbcd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f721673e0b65de0413d4935378ca48f2c3b6cbcd"}],"stats":{"total":1207,"additions":874,"deletions":333},"files":[{"sha":"cb00413724021209d4d0d4d99de933a0254f2e8b","filename":".github/workflows/codeql-analysis.yml","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/.github%2Fworkflows%2Fcodeql-analysis.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/.github%2Fworkflows%2Fcodeql-analysis.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Fcodeql-analysis.yml?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -42,16 +42,6 @@ jobs:\n     steps:\n     - name: Checkout repository\n       uses: actions/checkout@v2\n-      with:\n-        # We must fetch at least the immediate parents so that if this is\n-        # a pull request then we can checkout the head.\n-        fetch-depth: 2\n-\n-    # If this run was triggered by a pull request event, then checkout\n-    # the head of the pull request instead of the merge commit.\n-    - run: git checkout HEAD^2\n-      if: ${{ github.event_name == 'pull_request' }}\n-\n     - name: Setup Java JDK\n       uses: actions/setup-java@v1.4.3\n       with:"},{"sha":"afd6f115bd1421997531172ba9a265ba38408687","filename":"client/am/console/pom.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fpom.xml?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -94,6 +94,16 @@ under the License.\n       <resource>\n         <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n+        <excludes>\n+          <exclude>org/apache/syncope/**/*.properties</exclude>\n+        </excludes>\n+      </resource>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>false</filtering>\n+        <includes>\n+          <include>org/apache/syncope/**/*.properties</include>\n+        </includes>\n       </resource>\n     </resources>\n   </build>"},{"sha":"e3ff01a113cc28428dee804e2713aa9f4ee1961d","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/SyncopeAMConsoleContext.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeAMConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeAMConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeAMConsoleContext.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -22,19 +22,17 @@\n import org.apache.syncope.client.console.commons.AMRealmPolicyProvider;\n import org.apache.syncope.client.console.commons.PolicyTabProvider;\n import org.apache.syncope.client.console.commons.RealmPolicyProvider;\n-import org.apache.syncope.client.console.init.AMClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.AMClassPathScanImplementationContributor;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationContributor;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n \n @Configuration\n public class SyncopeAMConsoleContext {\n \n     @Bean\n-    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n-        AMClassPathScanImplementationLookup lookup = new AMClassPathScanImplementationLookup();\n-        lookup.load();\n-        return lookup;\n+    public ClassPathScanImplementationContributor amClassPathScanImplementationContributor() {\n+        return new AMClassPathScanImplementationContributor();\n     }\n \n     @Bean"},{"sha":"7964935c5ceec6ad15011b9a459dc5091fab07c3","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel.java","status":"modified","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.rest.ClientAppRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -49,6 +50,7 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n \n public abstract class ClientAppDirectoryPanel<T extends ClientAppTO>\n@@ -58,6 +60,8 @@\n \n     private final ClientAppType type;\n \n+    protected final BaseModal<T> propertiesModal;\n+\n     public ClientAppDirectoryPanel(final String id, final ClientAppType type, final PageReference pageRef) {\n         super(id, pageRef, true);\n         this.type = type;\n@@ -70,6 +74,20 @@ public ClientAppDirectoryPanel(final String id, final ClientAppType type, final\n         });\n         setFooterVisibility(true);\n \n+        propertiesModal = new BaseModal<>(Constants.OUTER) {\n+\n+            private static final long serialVersionUID = 389935548143327858L;\n+\n+            @Override\n+            protected void onConfigure() {\n+                super.onConfigure();\n+                setFooterVisible(false);\n+            }\n+        };\n+        propertiesModal.size(Modal.Size.Large);\n+        propertiesModal.setWindowClosedCallback(target -> propertiesModal.show(false));\n+        addOuterObject(propertiesModal);\n+\n         disableCheckBoxes();\n     }\n \n@@ -108,6 +126,22 @@ public void onClick(final AjaxRequestTarget target, final ClientAppTO ignore) {\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.CLIENTAPP_UPDATE);\n \n+        panel.add(new ActionLink<T>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ClientAppTO ignore) {\n+                model.setObject(ClientAppRestClient.read(type, model.getObject().getKey()));\n+                target.add(propertiesModal.setContent(new ClientAppPropertiesModalPanel<>(\n+                        propertiesModal,\n+                        new ClientAppPropertiesDirectoryPanel<>(\"properties\", propertiesModal, type, model, pageRef),\n+                        pageRef)));\n+                propertiesModal.header(new Model<>(getString(\"properties.title\", new Model<>(model.getObject()))));\n+                propertiesModal.show(true);\n+            }\n+        }, ActionLink.ActionType.TYPE_EXTENSIONS, AMEntitlement.CLIENTAPP_UPDATE);\n+\n         panel.add(new ActionLink<T>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"3e95a399c9d814a6a85a68f615c575b1838d3761","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppModalPanelBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -148,7 +148,7 @@ private class Profile extends AbstractModalPanel<T> {\n                     new PropertyModel<>(clientAppTO, \"clientAppId\")).setRequired(true));\n \n             fields.add(new AjaxTextFieldPanel(\n-                    \"field\", \"description\", new PropertyModel<>(clientAppTO, \"description\"), false).setRequired(true));\n+                    \"field\", \"description\", new PropertyModel<>(clientAppTO, \"description\"), false));\n \n             AjaxDropDownChoicePanel<String> accessPolicy = new AjaxDropDownChoicePanel<>(\n                     \"field\", \"accessPolicy\", new PropertyModel<>(clientAppTO, \"accessPolicy\"), false);\n@@ -168,11 +168,11 @@ private class Profile extends AbstractModalPanel<T> {\n                     \"field\", \"authPolicy\", new PropertyModel<>(clientAppTO, \"authPolicy\"), false);\n             authPolicy.setChoiceRenderer(new PolicyRenderer(authPolicies));\n             authPolicy.setChoices(new ArrayList<>(authPolicies.getObject().keySet()));\n+            authPolicy.setRequired(true);\n             ((AbstractSingleSelectChoice<?>) authPolicy.getField()).setNullValid(true);\n             fields.add(authPolicy);\n \n-            fields.add(new AjaxTextFieldPanel(\n-                    \"field\", \"theme\", new PropertyModel<>(clientAppTO, \"theme\"), false).setRequired(true));\n+            fields.add(new AjaxTextFieldPanel(\"field\", \"theme\", new PropertyModel<>(clientAppTO, \"theme\"), false));\n \n             switch (type) {\n                 case CASSP:"},{"sha":"3b05408eee43865ab12ac4639d54b99c2da0a2c5","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppPropertiesDirectoryPanel.java","status":"added","additions":150,"deletions":0,"changes":150,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesDirectoryPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,150 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.clientapps;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.AMConstants;\n+import org.apache.syncope.client.console.panels.AttrListDirectoryPanel;\n+import org.apache.syncope.client.console.rest.ClientAppRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard.EditItemActionEvent;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.ClientAppTO;\n+import org.apache.syncope.common.lib.types.AMEntitlement;\n+import org.apache.syncope.common.lib.types.ClientAppType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.model.IModel;\n+\n+public class ClientAppPropertiesDirectoryPanel<T extends ClientAppTO> extends AttrListDirectoryPanel {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final BaseModal<T> propertiesModal;\n+\n+    private final ClientAppType type;\n+\n+    private final IModel<T> model;\n+\n+    public ClientAppPropertiesDirectoryPanel(\n+            final String id,\n+            final BaseModal<T> propertiesModal,\n+            final ClientAppType type,\n+            final IModel<T> model,\n+            final PageReference pageRef) {\n+\n+        super(id, pageRef, false);\n+\n+        this.propertiesModal = propertiesModal;\n+        this.type = type;\n+        this.model = model;\n+\n+        setOutputMarkupId(true);\n+\n+        enableUtilityButton();\n+        setFooterVisibility(false);\n+\n+        addNewItemPanelBuilder(new ClientAppPropertyWizardBuilder(type, model.getObject(), new Attr(), pageRef), true);\n+\n+        initResultTable();\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof ExitEvent) {\n+            AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n+            propertiesModal.close(target);\n+        } else if (event.getPayload() instanceof EditItemActionEvent) {\n+            @SuppressWarnings(\"unchecked\")\n+            EditItemActionEvent<T> payload = (EditItemActionEvent<T>) event.getPayload();\n+            payload.getTarget().ifPresent(actionTogglePanel::close);\n+        }\n+        super.onEvent(event);\n+    }\n+\n+    @Override\n+    protected AttrListProvider dataProvider() {\n+        return new ClientAppPropertiesProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return AMConstants.PREF_CLIENTAPP_PROPERTIES_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected ActionsPanel<Attr> getActions(final IModel<Attr> model) {\n+        ActionsPanel<Attr> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<Attr>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n+                send(ClientAppPropertiesDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, AMEntitlement.CLIENTAPP_UPDATE);\n+\n+        panel.add(new ActionLink<Attr>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n+                try {\n+                    ClientAppPropertiesDirectoryPanel.this.model.getObject().getProperties().remove(model.getObject());\n+                    ClientAppRestClient.update(type, ClientAppPropertiesDirectoryPanel.this.model.getObject());\n+\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject().getSchema(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, AMEntitlement.CLIENTAPP_UPDATE, true);\n+\n+        return panel;\n+    }\n+\n+    protected final class ClientAppPropertiesProvider extends AttrListProvider {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private ClientAppPropertiesProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+        }\n+\n+        @Override\n+        protected List<Attr> list() {\n+            return model.getObject().getProperties();\n+        }\n+    }\n+}"},{"sha":"b8530adcfe391c35c8792c7d1dbdee214c954904","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppPropertiesModalPanel.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesModalPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.clientapps;\n+\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.ClientAppTO;\n+import org.apache.wicket.PageReference;\n+\n+public class ClientAppPropertiesModalPanel<T extends ClientAppTO> extends AbstractModalPanel<T> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public ClientAppPropertiesModalPanel(\n+            final BaseModal<T> modal,\n+            final ClientAppPropertiesDirectoryPanel<T> directoryPanel,\n+            final PageReference pageRef) {\n+\n+        super(modal, pageRef);\n+        add(directoryPanel);\n+    }\n+}"},{"sha":"a735c809fcd02d0c933309fac9709ade2dce3a59","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppPropertyWizardBuilder.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertyWizardBuilder.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.clientapps;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.rest.ClientAppRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.ClientAppTO;\n+import org.apache.syncope.common.lib.types.ClientAppType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class ClientAppPropertyWizardBuilder extends BaseAjaxWizardBuilder<Attr> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final ClientAppType type;\n+\n+    private final ClientAppTO clientApp;\n+\n+    public ClientAppPropertyWizardBuilder(\n+            final ClientAppType type,\n+            final ClientAppTO clientApp,\n+            final Attr attr,\n+            final PageReference pageRef) {\n+\n+        super(attr, pageRef);\n+        this.type = type;\n+        this.clientApp = clientApp;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final Attr modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new AttrStep(modelObject));\n+        return wizardModel;\n+    }\n+\n+    private static class AttrStep extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        AttrStep(final Attr modelObject) {\n+            AjaxTextFieldPanel schema = new AjaxTextFieldPanel(\n+                    Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME, new PropertyModel<>(modelObject, \"schema\"));\n+            schema.addRequiredLabel();\n+            schema.setEnabled(modelObject.getSchema() == null);\n+            add(schema);\n+\n+            AjaxTextFieldPanel value = new AjaxTextFieldPanel(\"panel\", \"values\", new Model<>());\n+            add(new MultiFieldPanel.Builder<String>(\n+                    new PropertyModel<>(modelObject, \"values\")).build(\"values\", \"values\", value));\n+        }\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final Attr modelObject) {\n+        clientApp.getProperties().removeIf(p -> modelObject.getSchema().equals(p.getSchema()));\n+        clientApp.getProperties().add(modelObject);\n+\n+        ClientAppRestClient.update(type, clientApp);\n+\n+        return null;\n+    }\n+}"},{"sha":"82d5f51b8d26aca75f1bdb3dadc43cc856d44610","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMConstants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -28,6 +28,8 @@ public final class AMConstants {\n \n     public static final String PREF_CLIENTAPP_PAGINATOR_ROWS = \"clientapp.paginator.rows\";\n \n+    public static final String PREF_CLIENTAPP_PROPERTIES_PAGINATOR_ROWS = \"clientapp.properties.paginator.rows\";\n+\n     private AMConstants() {\n         // private constructor for static utility class\n     }"},{"sha":"25acc7dbf24910ee8b3d4e9bb46a1129421f25fd","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/init/AMClassPathScanImplementationContributor.java","status":"renamed","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationContributor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationContributor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FAMClassPathScanImplementationContributor.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -18,26 +18,23 @@\n  */\n package org.apache.syncope.client.console.init;\n \n+import java.util.Optional;\n import org.apache.syncope.common.lib.auth.AuthModuleConf;\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n import org.springframework.core.type.filter.AssignableTypeFilter;\n \n-public class AMClassPathScanImplementationLookup extends ClassPathScanImplementationLookup {\n+public class AMClassPathScanImplementationContributor implements ClassPathScanImplementationContributor {\n \n     @Override\n-    protected ClassPathScanningCandidateComponentProvider scanner() {\n-        ClassPathScanningCandidateComponentProvider scanner = super.scanner();\n-\n+    public void extend(final ClassPathScanningCandidateComponentProvider scanner) {\n         scanner.addIncludeFilter(new AssignableTypeFilter(AuthModuleConf.class));\n-\n-        return scanner;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     @Override\n-    protected void additional(final Class<?> clazz) {\n+    public Optional<String> getLabel(final Class<?> clazz) {\n         if (AuthModuleConf.class.isAssignableFrom(clazz)) {\n-            addClass(AuthModuleConf.class.getName(), clazz);\n+            return Optional.of(AuthModuleConf.class.getName());\n         }\n+        return Optional.empty();\n     }\n }","previous_filename":"client/am/console/src/main/java/org/apache/syncope/client/console/init/AMClassPathScanImplementationLookup.java"},{"sha":"1b291e9780bbe83eba7ab292628f582ba4e47857","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/pages/WA.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.client.console.rest.WAConfigRestClient;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -71,7 +72,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     LOG.error(\"While pushing to WA\", e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n             }\n         };\n         push.setEnabled(!serviceOps.list(NetworkService.Type.WA).isEmpty()"},{"sha":"65290a42589f48bc82dbf7db3cb260ecd63c2f79","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AMConstants;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AuthModuleDirectoryPanel.AuthModuleProvider;\n import org.apache.syncope.client.console.rest.AuthModuleRestClient;\n@@ -53,20 +52,18 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n public class AuthModuleDirectoryPanel\n         extends DirectoryPanel<AuthModuleTO, AuthModuleTO, AuthModuleProvider, AuthModuleRestClient> {\n \n-    @SpringBean\n-    private ClassPathScanImplementationLookup lookup;\n+    private static final long serialVersionUID = 1L;\n \n     public AuthModuleDirectoryPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef);\n \n         disableCheckBoxes();\n \n-        this.addNewItemPanelBuilder(new AuthModuleWizardBuilder(lookup, new AuthModuleTO(), pageRef), true);\n+        this.addNewItemPanelBuilder(new AuthModuleWizardBuilder(new AuthModuleTO(), pageRef), true);\n \n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, AMEntitlement.AUTH_MODULE_CREATE);\n "},{"sha":"8fc4c9f2770213d181b1339972375f21e051e3c0","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel.java","status":"modified","additions":7,"deletions":83,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -18,59 +18,30 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Iterator;\n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AMConstants;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.WAConfigDirectoryPanel.WAConfigProvider;\n import org.apache.syncope.client.console.rest.WAConfigRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n-import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class WAConfigDirectoryPanel\n-        extends DirectoryPanel<Attr, Attr, WAConfigProvider, WAConfigRestClient> {\n+public class WAConfigDirectoryPanel extends AttrListDirectoryPanel {\n \n     private static final long serialVersionUID = 1538796157345L;\n \n     public WAConfigDirectoryPanel(final String id, final PageReference pageRef) {\n-        super(id, new Builder<Attr, Attr, WAConfigRestClient>(new WAConfigRestClient(), pageRef) {\n-\n-            private static final long serialVersionUID = 8769126634538601689L;\n-\n-            @Override\n-            protected WizardMgtPanel<Attr> newInstance(final String id, final boolean wizardInModal) {\n-                throw new UnsupportedOperationException();\n-            }\n-        });\n-\n-        itemKeyFieldName = \"schema\";\n-        disableCheckBoxes();\n+        super(id, pageRef, true);\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<Attr>(new Attr(), pageRef) {\n \n@@ -82,7 +53,6 @@ public WizardModalPanel<Attr> build(final String id, final int index, final Ajax\n             }\n         }, true);\n \n-        modal.size(Modal.Size.Default);\n         initResultTable();\n     }\n \n@@ -96,36 +66,6 @@ protected String paginatorRowsKey() {\n         return AMConstants.PREF_WACONFIG_PAGINATOR_ROWS;\n     }\n \n-    @Override\n-    protected Collection<ActionLink.ActionType> getBatches() {\n-        return List.of();\n-    }\n-\n-    @Override\n-    protected List<IColumn<Attr, String>> getColumns() {\n-        final List<IColumn<Attr, String>> columns = new ArrayList<>();\n-        columns.add(new PropertyColumn<>(new ResourceModel(\"schema\"), \"schema\"));\n-        columns.add(new PropertyColumn<Attr, String>(new ResourceModel(\"values\"), \"values\") {\n-\n-            private static final long serialVersionUID = -1822504503325964706L;\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<Attr>> item,\n-                    final String componentId,\n-                    final IModel<Attr> rowModel) {\n-\n-                if (rowModel.getObject().getValues().toString().length() > 96) {\n-                    item.add(new Label(componentId, getString(\"tooLong\")).\n-                            add(new AttributeModifier(\"style\", \"font-style:italic\")));\n-                } else {\n-                    super.populateItem(item, componentId, rowModel);\n-                }\n-            }\n-        });\n-        return columns;\n-    }\n-\n     @Override\n     public ActionsPanel<Attr> getActions(final IModel<Attr> model) {\n         ActionsPanel<Attr> panel = super.getActions(model);\n@@ -158,40 +98,24 @@ public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n                     LOG.error(\"While deleting {}\", model.getObject().getSchema(), e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n         }, ActionLink.ActionType.DELETE, AMEntitlement.WA_CONFIG_DELETE, true);\n \n         return panel;\n     }\n \n-    protected static final class WAConfigProvider extends DirectoryDataProvider<Attr> {\n+    protected static final class WAConfigProvider extends AttrListProvider {\n \n         private static final long serialVersionUID = -185944053385660794L;\n \n-        private final SortableDataProviderComparator<Attr> comparator;\n-\n         private WAConfigProvider(final int paginatorRows) {\n             super(paginatorRows);\n-            setSort(\"schema\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-        }\n-\n-        @Override\n-        public Iterator<Attr> iterator(final long first, final long count) {\n-            List<Attr> result = WAConfigRestClient.list();\n-            result.sort(comparator);\n-            return result.subList((int) first, (int) first + (int) count).iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return WAConfigRestClient.list().size();\n         }\n \n         @Override\n-        public IModel<Attr> model(final Attr object) {\n-            return new CompoundPropertyModel<>(object);\n+        protected List<Attr> list() {\n+            return WAConfigRestClient.list();\n         }\n     }\n }"},{"sha":"520d21d685610cfbd6f2c3048a092c349baf2e41","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.panels.BeanPanel;\n import org.apache.syncope.client.console.rest.AuthModuleRestClient;\n import org.apache.syncope.client.console.wizards.mapping.AuthModuleMappingPanel;\n@@ -44,12 +44,11 @@\n \n public class AuthModuleWizardBuilder extends BaseAjaxWizardBuilder<AuthModuleTO> {\n \n+    private static final long serialVersionUID = 1L;\n+\n     private final LoadableDetachableModel<List<String>> authModuleConfs;\n \n-    public AuthModuleWizardBuilder(\n-            final ClassPathScanImplementationLookup lookup,\n-            final AuthModuleTO defaultItem,\n-            final PageReference pageRef) {\n+    public AuthModuleWizardBuilder(final AuthModuleTO defaultItem, final PageReference pageRef) {\n \n         super(defaultItem, pageRef);\n \n@@ -59,7 +58,7 @@ public AuthModuleWizardBuilder(\n \n             @Override\n             protected List<String> load() {\n-                return lookup.getClasses(AuthModuleConf.class).stream().\n+                return SyncopeWebApplication.get().getLookup().getClasses(AuthModuleConf.class).stream().\n                         map(Class::getName).sorted().collect(Collectors.toList());\n             }\n         };"},{"sha":"79eff6df8f0906b58bed53e36f54b556af8aae6f","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -54,3 +54,5 @@ theme=Theme\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+properties.title=Properties for ${name}\n+type_extensions.title=properties"},{"sha":"e7cfc6ddf86fe61c33cb43e2cc073cda416132ed","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_fr_CA.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_fr_CA.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -54,3 +54,5 @@ theme=Theme\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+properties.title=Properties for ${name}\n+type_extensions.title=properties"},{"sha":"0e56d19ea2740cc728c71503688d0af0bf6cea08","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_it.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -54,3 +54,5 @@ theme=Tema\n authPolicy=Politica Autenticazione\n accessPolicy=Politica Accesso\n attrReleasePolicy=Politica Rilascio Attributi\n+properties.title=Propriet\\u00e0 di ${name}\n+type_extensions.title=propriet\\u00e0"},{"sha":"aa9925bf121cbd40ef7da9ffa02d14f8088d630b","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_ja.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ja.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -54,3 +54,5 @@ theme=Theme\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+properties.title=Properties for ${name}\n+type_extensions.title=properties"},{"sha":"79eff6df8f0906b58bed53e36f54b556af8aae6f","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_pt_BR.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -54,3 +54,5 @@ theme=Theme\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+properties.title=Properties for ${name}\n+type_extensions.title=properties"},{"sha":"c0e48ebe7dd5e740ef69a7c8a3ff68890ce02797","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel_ru.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel_ru.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -55,3 +55,5 @@ theme=Theme\n authPolicy=Authentication Policy\n accessPolicy=Access Policy\n attrReleasePolicy=Attribute Release Policy\n+properties.title=Properties for ${name}\n+type_extensions.title=properties"},{"sha":"69bafa90e37a40599b112d7360fa59eba50082e0","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppPropertiesModalPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesModalPanel.html?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div wicket:id=\"properties\"></div>\n+  </wicket:extend>\n+</html>"},{"sha":"0c74006ea6a98cdd71f1154806cb27c353d6f98f","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/clientapps/ClientAppPropertyWizardBuilder$AttrStep.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertyWizardBuilder%24AttrStep.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertyWizardBuilder%24AttrStep.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertyWizardBuilder%24AttrStep.html?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"key\">[schema]</span>\n+    <span wicket:id=\"values\">[values]</span>\n+  </wicket:panel>\n+</html>"},{"sha":"aac406299906b0bb68727888e8f1cd3c8dc70bfe","filename":"client/idm/console/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidm%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidm%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fpom.xml?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -96,17 +96,13 @@ under the License.\n         <filtering>true</filtering>\n         <excludes>\n           <exclude>org/apache/syncope/**/*.properties</exclude>\n-          <exclude>**/*.woff</exclude>\n-          <exclude>**/*.woff2</exclude>\n         </excludes>\n       </resource>\n       <resource>\n         <directory>src/main/resources</directory>\n         <filtering>false</filtering>\n         <includes>\n           <include>org/apache/syncope/**/*.properties</include>\n-          <include>**/*.woff</include>\n-          <include>**/*.woff2</include>\n         </includes>\n       </resource>\n     </resources>"},{"sha":"15b3e07819f6e0f2ea94b3d3ee68bc896bf3b4b6","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/SyncopeIdMConsoleContext.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeIdMConsoleContext.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -36,10 +36,17 @@\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.apache.syncope.client.console.commons.AnyDirectoryPanelAdditionalActionLinksProvider;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationContributor;\n+import org.apache.syncope.client.console.init.IdMClassPathScanImplementationContributor;\n \n @Configuration\n public class SyncopeIdMConsoleContext {\n \n+    @Bean\n+    public ClassPathScanImplementationContributor idmClassPathScanImplementationContributor() {\n+        return new IdMClassPathScanImplementationContributor();\n+    }\n+\n     @Bean\n     public ExternalResourceProvider resourceProvider() {\n         return new IdMExternalResourceProvider();"},{"sha":"0337aaaa372113d6e27bc29fa6a3ad5a39f68a5a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMImplementationInfoProvider.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -23,6 +23,8 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n+import org.apache.syncope.common.lib.policy.PushCorrelationRuleConf;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.types.IdMImplementationType;\n@@ -47,13 +49,13 @@ public List<String> getClasses(final ImplementationTO implementation, final View\n         if (viewMode == ViewMode.JSON_BODY) {\n             switch (implementation.getType()) {\n                 case IdMImplementationType.PULL_CORRELATION_RULE:\n-                    classes = lookup.getPullCorrelationRuleConfs().keySet().stream().\n-                            collect(Collectors.toList());\n+                    classes = lookup.getClasses(PullCorrelationRuleConf.class).stream().\n+                            map(Class::getName).collect(Collectors.toList());\n                     break;\n \n                 case IdMImplementationType.PUSH_CORRELATION_RULE:\n-                    classes = lookup.getPushCorrelationRuleConfs().keySet().stream().\n-                            collect(Collectors.toList());\n+                    classes = lookup.getClasses(PushCorrelationRuleConf.class).stream().\n+                            map(Class::getName).collect(Collectors.toList());\n                     break;\n \n                 default:\n@@ -111,11 +113,13 @@ public Class<?> getClass(final String implementationType, final String name) {\n         Class<?> clazz;\n         switch (implementationType) {\n             case IdMImplementationType.PULL_CORRELATION_RULE:\n-                clazz = lookup.getPullCorrelationRuleConfs().get(name);\n+                clazz = lookup.getClasses(PullCorrelationRuleConf.class).stream().\n+                        filter(c -> c.getName().equals(name)).findFirst().orElse(null);\n                 break;\n \n             case IdMImplementationType.PUSH_CORRELATION_RULE:\n-                clazz = lookup.getPushCorrelationRuleConfs().get(name);\n+                clazz = lookup.getClasses(PushCorrelationRuleConf.class).stream().\n+                        filter(c -> c.getName().equals(name)).findFirst().orElse(null);\n                 break;\n \n             default:"},{"sha":"f14133105748e8d9b582b7caee51f0662555fbd5","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/init/IdMClassPathScanImplementationContributor.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FIdMClassPathScanImplementationContributor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FIdMClassPathScanImplementationContributor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FIdMClassPathScanImplementationContributor.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.init;\n+\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n+import org.apache.syncope.common.lib.policy.PushCorrelationRuleConf;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.core.type.filter.AssignableTypeFilter;\n+\n+public class IdMClassPathScanImplementationContributor implements ClassPathScanImplementationContributor {\n+\n+    @Override\n+    public void extend(final ClassPathScanningCandidateComponentProvider scanner) {\n+        scanner.addIncludeFilter(new AssignableTypeFilter(PullCorrelationRuleConf.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(PushCorrelationRuleConf.class));\n+    }\n+\n+    @Override\n+    public Optional<String> getLabel(final Class<?> clazz) {\n+        if (PullCorrelationRuleConf.class.isAssignableFrom(clazz)\n+                || PushCorrelationRuleConf.class.isAssignableFrom(clazz)) {\n+\n+            return Optional.of(clazz.getName());\n+        }\n+        return Optional.empty();\n+    }\n+}"},{"sha":"ce2153e69281efd097c15c01bb45e9e06dd2b1a7","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGridFieldPanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -37,6 +37,8 @@\n \n public class AjaxGridFieldPanel<K, V, S> extends Panel {\n \n+    private static final long serialVersionUID = 1L;\n+\n     public AjaxGridFieldPanel(final String id, final String name, final IModel<Map<K, V>> model) {\n         super(id, model);\n \n@@ -73,7 +75,7 @@ protected void onSave(final AjaxRequestTarget target, final IModel<Pair<K, V>> r\n         });\n     }\n \n-    public AjaxGridFieldPanel hideLabel() {\n+    public AjaxGridFieldPanel<K, V, S> hideLabel() {\n         Component label = get(AbstractFieldPanel.LABEL);\n         if (label != null) {\n             label.setVisible(false);"},{"sha":"8f53c23ac6824c7b9f9c57400ca41f67d7bd4b78","filename":"client/idrepo/console/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -181,17 +181,13 @@ under the License.\n         <filtering>true</filtering>\n         <excludes>\n           <exclude>org/apache/syncope/**/*.properties</exclude>\n-          <exclude>**/*.woff</exclude>\n-          <exclude>**/*.woff2</exclude>\n         </excludes>\n       </resource>\n       <resource>\n         <directory>src/main/resources</directory>\n         <filtering>false</filtering>\n         <includes>\n           <include>org/apache/syncope/**/*.properties</include>\n-          <include>**/*.woff</include>\n-          <include>**/*.woff2</include>\n         </includes>\n       </resource>\n "},{"sha":"fc0e993868440fc34880a7b3e2929c812887f3e0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -38,27 +38,33 @@\n import org.apache.syncope.client.console.commons.RealmPolicyProvider;\n import org.apache.syncope.client.console.commons.StatusProvider;\n import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationContributor;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.wizards.any.UserFormFinalizerUtils;\n import org.apache.syncope.client.ui.commons.ApplicationContextProvider;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStart;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStop;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n import org.springframework.boot.builder.SpringApplicationBuilder;\n import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n \n @SpringBootApplication(exclude = {\n     ErrorMvcAutoConfiguration.class,\n     HttpMessageConvertersAutoConfiguration.class })\n public class SyncopeConsoleApplication extends SpringBootServletInitializer {\n \n+    @Autowired\n+    private ApplicationContext ctx;\n+\n     public static void main(final String[] args) {\n         SpringApplication.run(SyncopeConsoleApplication.class, args);\n     }\n@@ -87,7 +93,8 @@ public ApplicationContextProvider applicationContextProvider() {\n     @ConditionalOnMissingBean(name = \"classPathScanImplementationLookup\")\n     @Bean\n     public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n-        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup(\n+                ctx.getBeansOfType(ClassPathScanImplementationContributor.class).values());\n         lookup.load();\n         return lookup;\n     }"},{"sha":"30b3b32fc22f5edbdb5f8e4d8d2322d20b6fc913","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -371,6 +371,10 @@ public Class<? extends Page> getHomePage() {\n                 : Dashboard.class;\n     }\n \n+    public ClassPathScanImplementationLookup getLookup() {\n+        return lookup;\n+    }\n+\n     public Class<? extends BasePage> getPageClass(final String key) {\n         return pageClasses.get(key);\n     }"},{"sha":"887df150169bb3ef8ca0d25727a5417865a6ad6d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoImplementationInfoProvider.java","status":"modified","additions":15,"deletions":6,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -25,6 +25,9 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n+import org.apache.syncope.common.lib.policy.AccountRuleConf;\n+import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ImplementationTO;\n import org.apache.syncope.common.lib.types.IdRepoImplementationType;\n@@ -60,15 +63,18 @@ public List<String> getClasses(final ImplementationTO implementation, final View\n         } else if (viewMode == ViewMode.JSON_BODY) {\n             switch (implementation.getType()) {\n                 case IdRepoImplementationType.REPORTLET:\n-                    classes = new ArrayList<>(lookup.getReportletConfs().keySet());\n+                    classes = lookup.getClasses(ReportletConf.class).stream().\n+                            map(Class::getName).collect(Collectors.toList());\n                     break;\n \n                 case IdRepoImplementationType.ACCOUNT_RULE:\n-                    classes = new ArrayList<>(lookup.getAccountRuleConfs().keySet());\n+                    classes = lookup.getClasses(AccountRuleConf.class).stream().\n+                            map(Class::getName).collect(Collectors.toList());\n                     break;\n \n                 case IdRepoImplementationType.PASSWORD_RULE:\n-                    classes = new ArrayList<>(lookup.getPasswordRuleConfs().keySet());\n+                    classes = lookup.getClasses(PasswordRuleConf.class).stream().\n+                            map(Class::getName).collect(Collectors.toList());\n                     break;\n \n                 default:\n@@ -129,15 +135,18 @@ public Class<?> getClass(final String implementationType, final String name) {\n         Class<?> clazz = null;\n         switch (implementationType) {\n             case IdRepoImplementationType.REPORTLET:\n-                clazz = lookup.getReportletConfs().get(name);\n+                clazz = lookup.getClasses(ReportletConf.class).stream().\n+                        filter(c -> c.getName().equals(name)).findFirst().orElse(null);\n                 break;\n \n             case IdRepoImplementationType.ACCOUNT_RULE:\n-                clazz = lookup.getAccountRuleConfs().get(name);\n+                clazz = lookup.getClasses(AccountRuleConf.class).stream().\n+                        filter(c -> c.getName().equals(name)).findFirst().orElse(null);\n                 break;\n \n             case IdRepoImplementationType.PASSWORD_RULE:\n-                clazz = lookup.getPasswordRuleConfs().get(name);\n+                clazz = lookup.getClasses(PasswordRuleConf.class).stream().\n+                        filter(c -> c.getName().equals(name)).findFirst().orElse(null);\n                 break;\n \n             default:"},{"sha":"a392f206106377d229643af2d72129c96d1eb172","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationContributor.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationContributor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationContributor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationContributor.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.init;\n+\n+import java.util.Optional;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+\n+public interface ClassPathScanImplementationContributor {\n+\n+    void extend(ClassPathScanningCandidateComponentProvider scanner);\n+\n+    Optional<String> getLabel(Class<?> clazz);\n+}"},{"sha":"b49ed98a3a83ebe894c19c6f1c5fdadb07f191cc","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":20,"deletions":70,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -46,8 +46,6 @@\n import org.apache.syncope.client.console.widgets.ExtAlertWidget;\n import org.apache.syncope.common.lib.policy.AccountRuleConf;\n import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n-import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n-import org.apache.syncope.common.lib.policy.PushCorrelationRuleConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -95,6 +93,17 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n         });\n     }\n \n+    /**\n+     * This method can be overridden by subclasses to customize classpath scan.\n+     *\n+     * @return basePackage for classpath scanning\n+     */\n+    protected static String getBasePackage() {\n+        return DEFAULT_BASE_PACKAGE;\n+    }\n+\n+    private final Collection<ClassPathScanImplementationContributor> contributors;\n+\n     private Map<String, List<Class<?>>> classes;\n \n     private List<Class<? extends BasePage>> idRepoPages;\n@@ -103,23 +112,8 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n \n     private List<Class<? extends BasePage>> amPages;\n \n-    private Map<String, Class<? extends ReportletConf>> reportletConfs;\n-\n-    private Map<String, Class<? extends AccountRuleConf>> accountRuleConfs;\n-\n-    private Map<String, Class<? extends PasswordRuleConf>> passwordRuleConfs;\n-\n-    private Map<String, Class<? extends PullCorrelationRuleConf>> pullCorrelationRuleConfs;\n-\n-    private Map<String, Class<? extends PushCorrelationRuleConf>> pushCorrelationRuleConfs;\n-\n-    /**\n-     * This method can be overridden by subclasses to customize classpath scan.\n-     *\n-     * @return basePackage for classpath scanning\n-     */\n-    protected static String getBasePackage() {\n-        return DEFAULT_BASE_PACKAGE;\n+    public ClassPathScanImplementationLookup(final Collection<ClassPathScanImplementationContributor> contributors) {\n+        this.contributors = contributors;\n     }\n \n     protected ClassPathScanningCandidateComponentProvider scanner() {\n@@ -135,10 +129,10 @@ protected ClassPathScanningCandidateComponentProvider scanner() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(ReportletConf.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AccountRuleConf.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PasswordRuleConf.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(PullCorrelationRuleConf.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(PushCorrelationRuleConf.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractResource.class));\n \n+        contributors.forEach(contributor -> contributor.extend(scanner));\n+\n         return scanner;\n     }\n \n@@ -151,21 +145,12 @@ protected void addClass(final String category, final Class<?> clazz) {\n         clazzes.add(clazz);\n     }\n \n-    protected void additional(final Class<?> clazz) {\n-        // nothing to do\n-    }\n-\n     @SuppressWarnings(\"unchecked\")\n     public void load() {\n         classes = new HashMap<>();\n         idRepoPages = new ArrayList<>();\n         idmPages = new ArrayList<>();\n         amPages = new ArrayList<>();\n-        reportletConfs = new HashMap<>();\n-        accountRuleConfs = new HashMap<>();\n-        passwordRuleConfs = new HashMap<>();\n-        pullCorrelationRuleConfs = new HashMap<>();\n-        pushCorrelationRuleConfs = new HashMap<>();\n \n         scanner().findCandidateComponents(getBasePackage()).forEach(bd -> {\n             try {\n@@ -208,15 +193,11 @@ public void load() {\n                     } else if (BaseSSOLoginFormPanel.class.isAssignableFrom(clazz)) {\n                         addClass(BaseSSOLoginFormPanel.class.getName(), clazz);\n                     } else if (ReportletConf.class.isAssignableFrom(clazz)) {\n-                        reportletConfs.put(clazz.getName(), (Class<? extends ReportletConf>) clazz);\n+                        addClass(ReportletConf.class.getName(), clazz);\n                     } else if (AccountRuleConf.class.isAssignableFrom(clazz)) {\n-                        accountRuleConfs.put(clazz.getName(), (Class<? extends AccountRuleConf>) clazz);\n+                        addClass(AccountRuleConf.class.getName(), clazz);\n                     } else if (PasswordRuleConf.class.isAssignableFrom(clazz)) {\n-                        passwordRuleConfs.put(clazz.getName(), (Class<? extends PasswordRuleConf>) clazz);\n-                    } else if (PullCorrelationRuleConf.class.isAssignableFrom(clazz)) {\n-                        pullCorrelationRuleConfs.put(clazz.getName(), (Class<? extends PullCorrelationRuleConf>) clazz);\n-                    } else if (PushCorrelationRuleConf.class.isAssignableFrom(clazz)) {\n-                        pushCorrelationRuleConfs.put(clazz.getName(), (Class<? extends PushCorrelationRuleConf>) clazz);\n+                        addClass(PasswordRuleConf.class.getName(), clazz);\n                     } else if (AbstractResource.class.isAssignableFrom(clazz)) {\n                         if (clazz.isAnnotationPresent(Resource.class)) {\n                             addClass(AbstractResource.class.getName(), clazz);\n@@ -225,7 +206,8 @@ public void load() {\n                                     Resource.class.getName(), clazz.getName());\n                         }\n                     } else {\n-                        additional(clazz);\n+                        contributors.forEach(contributor -> contributor.getLabel(clazz).\n+                                ifPresent(label -> addClass(label, clazz)));\n                     }\n                 }\n             } catch (Throwable t) {\n@@ -257,18 +239,6 @@ public void load() {\n         }\n \n         classes.forEach((category, clazzes) -> LOG.debug(\"{} found: {}\", category, clazzes));\n-\n-        reportletConfs = Collections.unmodifiableMap(reportletConfs);\n-        accountRuleConfs = Collections.unmodifiableMap(accountRuleConfs);\n-        passwordRuleConfs = Collections.unmodifiableMap(passwordRuleConfs);\n-        pullCorrelationRuleConfs = Collections.unmodifiableMap(pullCorrelationRuleConfs);\n-        pushCorrelationRuleConfs = Collections.unmodifiableMap(pushCorrelationRuleConfs);\n-\n-        LOG.debug(\"Reportlet configurations found: {}\", reportletConfs);\n-        LOG.debug(\"Account Rule configurations found: {}\", accountRuleConfs);\n-        LOG.debug(\"Password Rule configurations found: {}\", passwordRuleConfs);\n-        LOG.debug(\"Pull Correlation Rule configurations found: {}\", pullCorrelationRuleConfs);\n-        LOG.debug(\"Push Correlation Rule configurations found: {}\", pushCorrelationRuleConfs);\n     }\n \n     public List<Class<? extends BasePage>> getIdRepoPageClasses() {\n@@ -320,24 +290,4 @@ public List<Class<? extends UserFormFinalizer>> getUserFormFinalizerClasses(fina\n                 map(clazz -> (Class<? extends UserFormFinalizer>) clazz).\n                 collect(Collectors.toList());\n     }\n-\n-    public Map<String, Class<? extends ReportletConf>> getReportletConfs() {\n-        return reportletConfs;\n-    }\n-\n-    public Map<String, Class<? extends AccountRuleConf>> getAccountRuleConfs() {\n-        return accountRuleConfs;\n-    }\n-\n-    public Map<String, Class<? extends PasswordRuleConf>> getPasswordRuleConfs() {\n-        return passwordRuleConfs;\n-    }\n-\n-    public Map<String, Class<? extends PullCorrelationRuleConf>> getPullCorrelationRuleConfs() {\n-        return pullCorrelationRuleConfs;\n-    }\n-\n-    public Map<String, Class<? extends PushCorrelationRuleConf>> getPushCorrelationRuleConfs() {\n-        return pushCorrelationRuleConfs;\n-    }\n }"},{"sha":"e67ef029fdc913414cd9a7a55febce4e440e6a42","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -25,11 +25,11 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.annotations.AMPage;\n import org.apache.syncope.client.ui.commons.annotations.ExtPage;\n import org.apache.syncope.client.console.annotations.IdMPage;\n import org.apache.syncope.client.ui.commons.HttpResourceStream;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.rest.SyncopeRestClient;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.widgets.ExtAlertWidget;\n@@ -66,17 +66,13 @@\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.request.resource.ContentDisposition;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n public class BasePage extends BaseWebPage {\n \n     private static final long serialVersionUID = 1571997737305598502L;\n \n     protected static final HeaderItem META_IE_EDGE = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n \n-    @SpringBean\n-    protected ClassPathScanImplementationLookup lookup;\n-\n     public BasePage() {\n         this(null);\n     }\n@@ -155,7 +151,7 @@ public void onClick() {\n         MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, IdRepoEntitlement.REPORT_LIST);\n         liContainer.add(link);\n \n-        List<Class<? extends BasePage>> idmPageClasses = lookup.getIdMPageClasses();\n+        List<Class<? extends BasePage>> idmPageClasses = SyncopeWebApplication.get().getLookup().getIdMPageClasses();\n         ListView<Class<? extends BasePage>> idmPages = new ListView<Class<? extends BasePage>>(\n                 \"idmPages\", idmPageClasses) {\n \n@@ -195,7 +191,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         idmPages.setOutputMarkupId(true);\n         body.add(idmPages);\n \n-        List<Class<? extends BasePage>> amPageClasses = lookup.getAMPageClasses();\n+        List<Class<? extends BasePage>> amPageClasses = SyncopeWebApplication.get().getLookup().getAMPageClasses();\n         ListView<Class<? extends BasePage>> amPages = new ListView<Class<? extends BasePage>>(\n                 \"amPages\", amPageClasses) {\n \n@@ -445,7 +441,8 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         }\n \n         // Extensions\n-        List<Class<? extends ExtAlertWidget<?>>> extAlertWidgetClasses = lookup.getExtAlertWidgetClasses();\n+        List<Class<? extends ExtAlertWidget<?>>> extAlertWidgetClasses =\n+                SyncopeWebApplication.get().getLookup().getExtAlertWidgetClasses();\n         ListView<Class<? extends ExtAlertWidget<?>>> extAlertWidgets = new ListView<Class<? extends ExtAlertWidget<?>>>(\n                 \"extAlertWidgets\", extAlertWidgetClasses) {\n \n@@ -468,7 +465,8 @@ protected void populateItem(final ListItem<Class<? extends ExtAlertWidget<?>>> i\n         };\n         body.add(extAlertWidgets);\n \n-        List<Class<? extends BaseExtPage>> extPageClasses = lookup.getClasses(BaseExtPage.class);\n+        List<Class<? extends BaseExtPage>> extPageClasses =\n+                SyncopeWebApplication.get().getLookup().getClasses(BaseExtPage.class);\n \n         WebMarkupContainer extensionsLI = new WebMarkupContainer(getLIContainerId(\"extensions\"));\n         extensionsLI.setOutputMarkupPlaceholderTag(true);"},{"sha":"c5030629c73b752241c85874ead11bb828f096dd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Dashboard.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -21,6 +21,7 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.panels.DashboardAccessTokensPanel;\n import org.apache.syncope.client.console.panels.DashboardControlPanel;\n import org.apache.syncope.client.console.panels.DashboardExtensionsPanel;\n@@ -79,7 +80,8 @@ public Panel getPanel(final String panelId) {\n             }\n         });\n \n-        List<Class<? extends BaseExtWidget>> extWidgetClasses = lookup.getClasses(BaseExtWidget.class);\n+        List<Class<? extends BaseExtWidget>> extWidgetClasses =\n+                SyncopeWebApplication.get().getLookup().getClasses(BaseExtWidget.class);\n         if (!extWidgetClasses.isEmpty()) {\n             tabs.add(new AbstractTab(new ResourceModel(\"extensions\")) {\n "},{"sha":"37944e880e5fe0a289001c38deee7d82d89b781e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Login.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -24,7 +24,6 @@\n import java.util.Locale;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.ui.commons.BaseLogin;\n import org.apache.syncope.client.ui.commons.BaseSession;\n import org.apache.syncope.client.ui.commons.panels.BaseSSOLoginFormPanel;\n@@ -33,15 +32,11 @@\n import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n \n public class Login extends BaseLogin {\n \n     private static final long serialVersionUID = 5889157642852559004L;\n \n-    @SpringBean\n-    private ClassPathScanImplementationLookup lookup;\n-\n     public Login(final PageParameters parameters) {\n         super(parameters);\n     }\n@@ -54,7 +49,7 @@ protected BaseSession getBaseSession() {\n     @Override\n     protected List<Panel> getSSOLoginFormPanels() {\n         List<Panel> ssoLoginFormPanels = new ArrayList<>();\n-        lookup.getClasses(BaseSSOLoginFormPanel.class).forEach(ssoLoginFormPanel -> {\n+        SyncopeWebApplication.get().getLookup().getClasses(BaseSSOLoginFormPanel.class).forEach(ssoLoginFormPanel -> {\n             try {\n                 ssoLoginFormPanels.add(ssoLoginFormPanel.getConstructor(String.class, BaseSession.class).newInstance(\n                         \"ssoLogin\", SyncopeConsoleSession.get()));"},{"sha":"99810373ab97ffa627be70f81b8d2b86fdd65e0c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AbstractModalPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -20,9 +20,9 @@\n \n import org.apache.syncope.client.ui.commons.panels.SubmitableModalPanel;\n import java.io.Serializable;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -72,12 +72,12 @@ public void renderHead(final IHeaderResponse response) {\n \n     @Override\n     public void onSubmit(final AjaxRequestTarget target) {\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n     }\n \n     @Override\n     public void onError(final AjaxRequestTarget target) {\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n     }\n \n     @Override"},{"sha":"dfe285d1eca30ef71854e9e61e137ade1cd9cfb2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AttrListDirectoryPanel.java","status":"added","additions":119,"deletions":0,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.AttrListDirectoryPanel.AttrListProvider;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public abstract class AttrListDirectoryPanel\n+        extends DirectoryPanel<Attr, Attr, AttrListProvider, BaseRestClient> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    protected AttrListDirectoryPanel(final String id, final PageReference pageRef, final boolean wizardInModal) {\n+        super(id, pageRef, wizardInModal);\n+\n+        itemKeyFieldName = \"schema\";\n+        disableCheckBoxes();\n+\n+        modal.size(Modal.Size.Default);\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBatches() {\n+        return List.of();\n+    }\n+\n+    @Override\n+    protected List<IColumn<Attr, String>> getColumns() {\n+        final List<IColumn<Attr, String>> columns = new ArrayList<>();\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"schema\"), \"schema\"));\n+        columns.add(new PropertyColumn<Attr, String>(new ResourceModel(\"values\"), \"values\") {\n+\n+            private static final long serialVersionUID = -1822504503325964706L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<Attr>> item,\n+                    final String componentId,\n+                    final IModel<Attr> rowModel) {\n+\n+                if (rowModel.getObject().getValues().toString().length() > 96) {\n+                    item.add(new Label(componentId, getString(\"tooLong\")).\n+                            add(new AttributeModifier(\"style\", \"font-style:italic\")));\n+                } else {\n+                    super.populateItem(item, componentId, rowModel);\n+                }\n+            }\n+        });\n+        return columns;\n+    }\n+\n+    protected abstract static class AttrListProvider extends DirectoryDataProvider<Attr> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final SortableDataProviderComparator<Attr> comparator;\n+\n+        protected AttrListProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            setSort(\"schema\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        protected abstract List<Attr> list();\n+\n+        @Override\n+        public Iterator<Attr> iterator(final long first, final long count) {\n+            List<Attr> result = list();\n+            result.sort(comparator);\n+            return result.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return list().size();\n+        }\n+\n+        @Override\n+        public IModel<Attr> model(final Attr object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"fae688757e07d9852a0e96a51d6fd876f641ebec","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -349,7 +349,7 @@ protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n     }\n \n     protected ActionsPanel<T> getActions(final IModel<T> model) {\n-        return model == null ? new ActionsPanel<>(\"actions\", new Model<>()) : new ActionsPanel<>(\"actions\", model);\n+        return new ActionsPanel<>(\"actions\", model == null ? new Model<>() : model);\n     }\n \n     protected ActionLinksTogglePanel<T> actionTogglePanel() {"},{"sha":"7545c0356f70f2409964637846b115c4b71e02c8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -29,14 +29,14 @@\n import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.IdRepoConstants;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.ParametersDirectoryPanel.ParametersProvider;\n import org.apache.syncope.client.console.rest.SyncopeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.ui.commons.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.wicket.AttributeModifier;\n@@ -166,7 +166,7 @@ public void onClick(final AjaxRequestTarget target, final ConfParam ignore) {\n                     LOG.error(\"While deleting {}\", model.getObject(), e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n         }, ActionLink.ActionType.DELETE, null, true);\n "},{"sha":"7c0ca80b6901d0c9e5d1227e4784122f29d1b4aa","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -95,7 +95,6 @@ protected void onConfigure() {\n             super.onConfigure();\n             setFooterVisible(footerVisibility);\n         }\n-\n     };\n \n     protected WizardMgtPanel(final String id) {\n@@ -160,7 +159,6 @@ public void onClick(final AjaxRequestTarget target) {\n             protected void populateItem(final ListItem<Component> item) {\n                 item.add(item.getModelObject());\n             }\n-\n         });\n     }\n "},{"sha":"b4dd675f7a863469113dabcac74517a48d870104","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/AttrListDirectoryPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel.properties"},{"sha":"788dbfd4f998ec86a641b4acad2f1604a636369d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/AttrListDirectoryPanel_fr_CA.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_fr_CA.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_fr_CA.properties"},{"sha":"2c0a04f2f69484f856d5497eb808e5ca45f20952","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/AttrListDirectoryPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_it.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_it.properties"},{"sha":"5b0c3400112902f26ecaa99620021215cff3a7a2","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/AttrListDirectoryPanel_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_ja.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_ja.properties"},{"sha":"017cf2ac00618b59b7519759225e601fb055ce0f","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/AttrListDirectoryPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_pt_BR.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_pt_BR.properties"},{"sha":"d5509959b10d81520981cc517bdba8249bcd547e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/AttrListDirectoryPanel_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel_ru.properties?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel_ru.properties"},{"sha":"0dca1957b97dda7ad1c8f31eeb703428e5679ae4","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/AbstractTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FAbstractTest.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -33,6 +33,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Properties;\n+import java.util.Set;\n import java.util.stream.Stream;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.Client;\n@@ -123,7 +124,7 @@ public WicketEndpointRepository wicketEndpointRepository() {\n \n         @Bean\n         public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n-            ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+            ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup(Set.of());\n             lookup.load();\n             return lookup;\n         }"},{"sha":"4f2026bb12148e55c1eccb0141af5af95e9836fc","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AccessPolicyTO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAccessPolicyTO.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -23,6 +23,7 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n \n+@Schema(allOf = { PolicyTO.class })\n public class AccessPolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -6711411162433533300L;"},{"sha":"0f4d68c8d0ea870ac36ddacc4f487b243184f18f","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AttrReleasePolicyTO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAttrReleasePolicyTO.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -22,6 +22,7 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n \n+@Schema(allOf = { PolicyTO.class })\n public class AttrReleasePolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -1432411162433533300L;"},{"sha":"575b1263e6cdb266083de3af8ec9fcbee9c8479c","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AuthPolicyTO.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAuthPolicyTO.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -22,6 +22,7 @@\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n \n+@Schema(allOf = { PolicyTO.class })\n public class AuthPolicyTO extends PolicyTO {\n \n     private static final long serialVersionUID = -6711411162433533300L;"},{"sha":"f00da296fafca447812eb16602c016c05edb0e61","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/ClientAppTO.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FClientAppTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FClientAppTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FClientAppTO.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -21,11 +21,15 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n+import java.util.ArrayList;\n+import java.util.List;\n import javax.ws.rs.PathParam;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.syncope.common.lib.Attr;\n \n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n @JsonPropertyOrder(value = { \"_class\", \"key\", \"description\" })\n@@ -54,6 +58,8 @@ public abstract class ClientAppTO implements NamedEntityTO {\n \n     private String theme;\n \n+    private final List<Attr> properties = new ArrayList<>();\n+\n     @Schema(name = \"_class\", required = true)\n     public abstract String getDiscriminator();\n \n@@ -130,6 +136,12 @@ public void setDescription(final String description) {\n         this.description = description;\n     }\n \n+    @JacksonXmlElementWrapper(localName = \"properties\")\n+    @JacksonXmlProperty(localName = \"property\")\n+    public List<Attr> getProperties() {\n+        return properties;\n+    }\n+\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder()\n@@ -142,6 +154,7 @@ public int hashCode() {\n                 .append(accessPolicy)\n                 .append(attrReleasePolicy)\n                 .append(theme)\n+                .append(properties)\n                 .toHashCode();\n     }\n \n@@ -167,6 +180,7 @@ public boolean equals(final Object obj) {\n                 .append(this.accessPolicy, rhs.accessPolicy)\n                 .append(this.attrReleasePolicy, rhs.attrReleasePolicy)\n                 .append(this.theme, rhs.theme)\n+                .append(this.properties, rhs.properties)\n                 .isEquals();\n     }\n }"},{"sha":"c1471b101057da6837cebc7ab56fdeba28b32550","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/OIDCGrantType.java","status":"modified","additions":14,"deletions":11,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCGrantType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCGrantType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCGrantType.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -1,17 +1,20 @@\n /*\n- * Copyright 2021 The Apache Software Foundation.\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n  */\n package org.apache.syncope.common.lib.types;\n "},{"sha":"2ccffa9c21fa9e8b4b24eb06c23200204a4940c5","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/OIDCResponseType.java","status":"modified","additions":14,"deletions":11,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCResponseType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCResponseType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCResponseType.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -1,17 +1,20 @@\n /*\n- * Copyright 2021 The Apache Software Foundation.\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n  */\n package org.apache.syncope.common.lib.types;\n "},{"sha":"e88c84031517ea8664e3e2de0b6d4906e460f937","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractCorrelationRuleConf.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractCorrelationRuleConf.java"},{"sha":"e19003eb1e18fb7c9020a82588ee2352df8b43c4","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPullCorrelationRuleConf.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPullCorrelationRuleConf.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPullCorrelationRuleConf.java"},{"sha":"b8a7974a2022f3d4fa6a7a021023c878d8ac5308","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPushCorrelationRuleConf.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPushCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPushCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FDefaultPushCorrelationRuleConf.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPushCorrelationRuleConf.java"},{"sha":"5dd01226b27de0803977324ff43e7539e54ec950","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/policy/ProvisioningPolicyTO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FProvisioningPolicyTO.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/ProvisioningPolicyTO.java"},{"sha":"9c6e8505dec43971a61e0afe8e0108de40c35efb","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/policy/PullCorrelationRuleConf.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullCorrelationRuleConf.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PullCorrelationRuleConf.java"},{"sha":"1cd2939870b8c24e1e086702a28359e0f38e9e0b","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/policy/PullPolicyTO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPullPolicyTO.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PullPolicyTO.java"},{"sha":"c19236fe96ab0bee23063dbae5891ea743aebe59","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/policy/PushCorrelationRuleConf.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushCorrelationRuleConf.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PushCorrelationRuleConf.java"},{"sha":"8b958d4c3ef31fd0871ec87b1f5a75618fbbc46f","filename":"common/idm/lib/src/main/java/org/apache/syncope/common/lib/policy/PushPolicyTO.java","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPushPolicyTO.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","previous_filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PushPolicyTO.java"},{"sha":"fe9363d60410ccd27b6c10fdaeeaf21cfee779e0","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/policy/PolicyTO.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -33,9 +33,7 @@\n \n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"_class\")\n @JsonPropertyOrder(value = { \"_class\", \"key\", \"description\" })\n-@Schema(\n-        subTypes = { AccountPolicyTO.class, PasswordPolicyTO.class, ProvisioningPolicyTO.class },\n-        discriminatorProperty = \"_class\")\n+@Schema(subTypes = { AccountPolicyTO.class, PasswordPolicyTO.class }, discriminatorProperty = \"_class\")\n public abstract class PolicyTO implements EntityTO {\n \n     private static final long serialVersionUID = -2903888572649721035L;"},{"sha":"e313e38510a6f49804ef88fd1555cc77d0d9332e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/auth/ClientApp.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fauth%2FClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fauth%2FClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fauth%2FClientApp.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.persistence.api.entity.auth;\n \n+import java.util.List;\n+import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.policy.AccessPolicy;\n@@ -57,4 +59,8 @@ public interface ClientApp extends Entity {\n     void setTheme(String name);\n \n     String getTheme();\n+\n+    List<Attr> getProperties();\n+\n+    void setProperties(List<Attr> properties);\n }"},{"sha":"b1a9e9ea430ac7e21762f65f789e00e91e55d0af","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/auth/AbstractClientApp.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FAbstractClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FAbstractClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FAbstractClientApp.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.auth;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.auth.ClientApp;\n import org.apache.syncope.core.persistence.api.entity.policy.AttrReleasePolicy;\n@@ -29,9 +32,12 @@\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAAccessPolicy;\n import javax.persistence.Column;\n import javax.persistence.FetchType;\n+import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n+import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.core.persistence.api.entity.policy.AuthPolicy;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @MappedSuperclass\n public class AbstractClientApp extends AbstractGeneratedKeyEntity implements ClientApp {\n@@ -62,6 +68,9 @@ public class AbstractClientApp extends AbstractGeneratedKeyEntity implements Cli\n     @ManyToOne(fetch = FetchType.EAGER)\n     private JPAAttrReleasePolicy attrReleasePolicy;\n \n+    @Lob\n+    private String properties;\n+\n     @Override\n     public Long getClientAppId() {\n         return clientAppId;\n@@ -145,4 +154,17 @@ public String getTheme() {\n     public void setTheme(final String theme) {\n         this.theme = theme;\n     }\n+\n+    @Override\n+    public List<Attr> getProperties() {\n+        return properties == null\n+                ? new ArrayList<>(0)\n+                : POJOHelper.deserialize(properties, new TypeReference<List<Attr>>() {\n+                });\n+    }\n+\n+    @Override\n+    public void setProperties(final List<Attr> properties) {\n+        this.properties = POJOHelper.serialize(properties);\n+    }\n }"},{"sha":"ee766e37418c167ddbf4df86e04a007d2afbb7e2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ClientAppDataBinderImpl.java","status":"modified","additions":29,"deletions":22,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FClientAppDataBinderImpl.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -102,7 +102,7 @@ private CASSP doCreate(final CASSPTO clientAppTO) {\n     }\n \n     private void doUpdate(final SAML2SP clientApp, final SAML2SPTO clientAppTO) {\n-        doUpdateCommon(clientApp, clientAppTO);\n+        copyToEntity(clientApp, clientAppTO);\n \n         clientApp.setEntityId(clientAppTO.getEntityId());\n         clientApp.setMetadataLocation(clientAppTO.getMetadataLocation());\n@@ -140,9 +140,29 @@ private void doUpdate(final SAML2SP clientApp, final SAML2SPTO clientAppTO) {\n                 clientAppTO.getEncryptionBlackListedAlgorithms());\n     }\n \n+    private static void copyToTO(final ClientApp clientApp, final ClientAppTO clientAppTO) {\n+        clientAppTO.setName(clientApp.getName());\n+        clientAppTO.setKey(clientApp.getKey());\n+        clientAppTO.setDescription(clientApp.getDescription());\n+        clientAppTO.setClientAppId(clientApp.getClientAppId());\n+        clientAppTO.setTheme(clientApp.getTheme());\n+\n+        if (clientApp.getAuthPolicy() != null) {\n+            clientAppTO.setAuthPolicy(clientApp.getAuthPolicy().getKey());\n+        }\n+        if (clientApp.getAccessPolicy() != null) {\n+            clientAppTO.setAccessPolicy(clientApp.getAccessPolicy().getKey());\n+        }\n+        if (clientApp.getAttrReleasePolicy() != null) {\n+            clientAppTO.setAttrReleasePolicy(clientApp.getAttrReleasePolicy().getKey());\n+        }\n+\n+        clientAppTO.getProperties().addAll(clientApp.getProperties());\n+    }\n+\n     private static SAML2SPTO getSAMLClientAppTO(final SAML2SP clientApp) {\n         SAML2SPTO clientAppTO = new SAML2SPTO();\n-        updateCommonClientAppTO(clientApp, clientAppTO);\n+        copyToTO(clientApp, clientAppTO);\n \n         clientAppTO.setEntityId(clientApp.getEntityId());\n         clientAppTO.setMetadataLocation(clientApp.getMetadataLocation());\n@@ -182,7 +202,7 @@ private OIDCRP doCreate(final OIDCRPTO clientAppTO) {\n     }\n \n     private void doUpdate(final OIDCRP clientApp, final OIDCRPTO clientAppTO) {\n-        doUpdateCommon(clientApp, clientAppTO);\n+        copyToEntity(clientApp, clientAppTO);\n \n         clientApp.setClientSecret(clientAppTO.getClientSecret());\n         clientApp.setClientId(clientAppTO.getClientId());\n@@ -200,7 +220,7 @@ private void doUpdate(final OIDCRP clientApp, final OIDCRPTO clientAppTO) {\n \n     private static OIDCRPTO getOIDCClientAppTO(final OIDCRP clientApp) {\n         OIDCRPTO clientAppTO = new OIDCRPTO();\n-        updateCommonClientAppTO(clientApp, clientAppTO);\n+        copyToTO(clientApp, clientAppTO);\n \n         clientAppTO.setClientId(clientApp.getClientId());\n         clientAppTO.setClientSecret(clientApp.getClientSecret());\n@@ -215,34 +235,19 @@ private static OIDCRPTO getOIDCClientAppTO(final OIDCRP clientApp) {\n     }\n \n     private void doUpdate(final CASSP clientApp, final CASSPTO clientAppTO) {\n-        doUpdateCommon(clientApp, clientAppTO);\n+        copyToEntity(clientApp, clientAppTO);\n \n         clientApp.setServiceId(clientAppTO.getServiceId());\n     }\n \n     private static CASSPTO getCASClientAppTO(final CASSP clientApp) {\n         CASSPTO clientAppTO = new CASSPTO();\n-        updateCommonClientAppTO(clientApp, clientAppTO);\n+        copyToTO(clientApp, clientAppTO);\n         clientAppTO.setServiceId(clientApp.getServiceId());\n         return clientAppTO;\n     }\n \n-    private static void updateCommonClientAppTO(final ClientApp clientApp, final ClientAppTO clientAppTO) {\n-        clientAppTO.setName(clientApp.getName());\n-        clientAppTO.setKey(clientApp.getKey());\n-        clientAppTO.setDescription(clientApp.getDescription());\n-        clientAppTO.setClientAppId(clientApp.getClientAppId());\n-        clientAppTO.setTheme(clientApp.getTheme());\n-\n-        clientAppTO.setAuthPolicy(clientApp.getAuthPolicy() == null\n-                ? null : clientApp.getAuthPolicy().getKey());\n-        clientAppTO.setAccessPolicy(clientApp.getAccessPolicy() == null\n-                ? null : clientApp.getAccessPolicy().getKey());\n-        clientAppTO.setAttrReleasePolicy(clientApp.getAttrReleasePolicy() == null\n-                ? null : clientApp.getAttrReleasePolicy().getKey());\n-    }\n-\n-    private void doUpdateCommon(final ClientApp clientApp, final ClientAppTO clientAppTO) {\n+    private void copyToEntity(final ClientApp clientApp, final ClientAppTO clientAppTO) {\n         clientApp.setName(clientAppTO.getName());\n         clientApp.setClientAppId(clientAppTO.getClientAppId());\n         clientApp.setDescription(clientAppTO.getDescription());\n@@ -289,5 +294,7 @@ private void doUpdateCommon(final ClientApp clientApp, final ClientAppTO clientA\n                 throw sce;\n             }\n         }\n+\n+        clientApp.setProperties(clientAppTO.getProperties());\n     }\n }"},{"sha":"2088d500aa03b011facaad17807afdeaa314ef87","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -25,6 +25,7 @@\n import com.giffing.wicket.spring.boot.starter.configuration.extensions.external.spring.boot.actuator.WicketEndpointRepositoryDefault;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Set;\n import org.apache.syncope.client.console.SyncopeAMConsoleContext;\n import org.apache.syncope.client.console.SyncopeIdMConsoleContext;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n@@ -82,7 +83,7 @@ public ApplicationContextProvider applicationContextProvider() {\n \n         @Bean\n         public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n-            ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+            ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup(Set.of());\n             lookup.load();\n             return lookup;\n         }"},{"sha":"4c1064ab6ad1dd4ee44963abb20f184cac999282","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/AbstractClientAppMapper.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.wa.starter.mapping;\n+\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.common.lib.Attr;\n+import org.apache.syncope.common.lib.to.ClientAppTO;\n+import org.apereo.cas.services.DefaultRegisteredServiceProperty;\n+import org.apereo.cas.services.RegexRegisteredService;\n+import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n+import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n+import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n+import org.apereo.cas.services.RegisteredServiceProperty;\n+\n+abstract class AbstractClientAppMapper implements ClientAppMapper {\n+\n+    protected void setCommon(final RegexRegisteredService service, final ClientAppTO clientApp) {\n+        service.setId(clientApp.getClientAppId());\n+        service.setName(clientApp.getName());\n+        service.setDescription(clientApp.getDescription());\n+\n+        if (!clientApp.getProperties().isEmpty()) {\n+            Map<String, RegisteredServiceProperty> properties = clientApp.getProperties().stream().\n+                    collect(Collectors.toMap(\n+                            Attr::getSchema,\n+                            attr -> new DefaultRegisteredServiceProperty(attr.getValues()),\n+                            (existing, replacement) -> existing));\n+            service.setProperties(properties);\n+        }\n+    }\n+\n+    protected void setPolicies(\n+            final RegexRegisteredService service,\n+            final RegisteredServiceAuthenticationPolicy authenticationPolicy,\n+            final RegisteredServiceAccessStrategy accessStrategy,\n+            final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy) {\n+\n+        if (authenticationPolicy != null) {\n+            service.setAuthenticationPolicy(authenticationPolicy);\n+        }\n+        if (accessStrategy != null) {\n+            service.setAccessStrategy(accessStrategy);\n+        }\n+        if (attributeReleasePolicy != null) {\n+            service.setAttributeReleasePolicy(attributeReleasePolicy);\n+        }\n+    }\n+}"},{"sha":"74c41a8227f59c3af989717d3b11e16d3b0bbc73","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/CASSPTOMapper.java","status":"modified","additions":4,"deletions":15,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPTOMapper.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -27,10 +27,10 @@\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n \n @ClientAppMapFor(clientAppClass = CASSPTO.class)\n-public class CASSPTOMapper implements ClientAppMapper {\n+public class CASSPTOMapper extends AbstractClientAppMapper {\n \n     @Override\n-    public RegisteredService build(\n+    public RegisteredService map(\n             final WAClientApp clientApp,\n             final RegisteredServiceAuthenticationPolicy authenticationPolicy,\n             final RegisteredServiceAccessStrategy accessStrategy,\n@@ -39,21 +39,10 @@ public RegisteredService build(\n         CASSPTO cas = CASSPTO.class.cast(clientApp.getClientAppTO());\n \n         RegexRegisteredService service = new RegexRegisteredService();\n-\n         service.setServiceId(cas.getServiceId());\n-        service.setId(cas.getClientAppId());\n-        service.setName(cas.getName());\n-        service.setDescription(cas.getDescription());\n+        setCommon(service, cas);\n \n-        if (authenticationPolicy != null) {\n-            service.setAuthenticationPolicy(authenticationPolicy);\n-        }\n-        if (accessStrategy != null) {\n-            service.setAccessStrategy(accessStrategy);\n-        }\n-        if (attributeReleasePolicy != null) {\n-            service.setAttributeReleasePolicy(attributeReleasePolicy);\n-        }\n+        setPolicies(service, authenticationPolicy, accessStrategy, attributeReleasePolicy);\n \n         return service;\n     }"},{"sha":"4951adb6e2fcf309fa10d661036a0f09b041d808","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/ClientAppMapper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FClientAppMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FClientAppMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FClientAppMapper.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -27,7 +27,7 @@\n @FunctionalInterface\n public interface ClientAppMapper {\n \n-    RegisteredService build(\n+    RegisteredService map(\n             WAClientApp clientApp,\n             RegisteredServiceAuthenticationPolicy authPolicy,\n             RegisteredServiceAccessStrategy accessStrategy,"},{"sha":"1b8a1a4ed421c5229c8aa0a0c0a9cc13263bdbed","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/OIDCRPTOMapper.java","status":"modified","additions":5,"deletions":12,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FOIDCRPTOMapper.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -47,28 +47,26 @@\n import org.springframework.context.ApplicationContext;\n \n @ClientAppMapFor(clientAppClass = OIDCRPTO.class)\n-public class OIDCRPTOMapper implements ClientAppMapper {\n+public class OIDCRPTOMapper extends AbstractClientAppMapper {\n \n     private static final Logger LOG = LoggerFactory.getLogger(OIDCRPTOMapper.class);\n \n     private static final String CUSTOM_SCOPE = \"syncope\";\n \n     @Override\n-    public RegisteredService build(\n+    public RegisteredService map(\n             final WAClientApp clientApp,\n             final RegisteredServiceAuthenticationPolicy authenticationPolicy,\n             final RegisteredServiceAccessStrategy accessStrategy,\n             final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy) {\n \n         OIDCRPTO rp = OIDCRPTO.class.cast(clientApp.getClientAppTO());\n-\n         OidcRegisteredService service = new OidcRegisteredService();\n+        setCommon(service, rp);\n+\n         service.setServiceId(Stream.concat(rp.getRedirectUris().stream(), Stream.of(rp.getLogoutUri())).\n                 filter(Objects::nonNull).\n                 collect(Collectors.joining(\"|\")));\n-        service.setId(rp.getClientAppId());\n-        service.setName(rp.getName());\n-        service.setDescription(rp.getDescription());\n         service.setRedirectUrl(service.getServiceId());\n         service.setClientId(rp.getClientId());\n         service.setClientSecret(rp.getClientSecret());\n@@ -86,12 +84,7 @@ public RegisteredService build(\n         }\n         service.setLogoutUrl(rp.getLogoutUri());\n \n-        if (authenticationPolicy != null) {\n-            service.setAuthenticationPolicy(authenticationPolicy);\n-        }\n-        if (accessStrategy != null) {\n-            service.setAccessStrategy(accessStrategy);\n-        }\n+        setPolicies(service, authenticationPolicy, accessStrategy, attributeReleasePolicy);\n         if (attributeReleasePolicy != null) {\n             ChainingAttributeReleasePolicy chain = new ChainingAttributeReleasePolicy();\n             if (attributeReleasePolicy instanceof ReturnMappedAttributeReleasePolicy) {"},{"sha":"f6f4fd86709906946ff2fec9095a2b34a72e9e7e","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/RegisteredServiceMapper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FRegisteredServiceMapper.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -90,6 +90,6 @@ public RegisteredService toRegisteredService(final WAClientApp clientApp) {\n             }\n         }\n \n-        return clientAppMapper.build(clientApp, authPolicy, accessStrategy, attributeReleasePolicy);\n+        return clientAppMapper.map(clientApp, authPolicy, accessStrategy, attributeReleasePolicy);\n     }\n }"},{"sha":"610d0e0d4838f1766934eb88ca2cf40d70fc4a86","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/SAML2SPTOMapper.java","status":"modified","additions":6,"deletions":16,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/921947687a25efbefaa71a1178a0c3d918236fbb/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPTOMapper.java?ref=921947687a25efbefaa71a1178a0c3d918236fbb","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.wa.starter.mapping;\n \n+import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.syncope.common.lib.to.SAML2SPTO;\n import org.apache.syncope.common.lib.wa.WAClientApp;\n@@ -28,23 +29,20 @@\n import org.apereo.cas.support.saml.services.SamlRegisteredService;\n \n @ClientAppMapFor(clientAppClass = SAML2SPTO.class)\n-public class SAML2SPTOMapper implements ClientAppMapper {\n+public class SAML2SPTOMapper extends AbstractClientAppMapper {\n \n     @Override\n-    public RegisteredService build(\n+    public RegisteredService map(\n             final WAClientApp clientApp,\n             final RegisteredServiceAuthenticationPolicy authenticationPolicy,\n             final RegisteredServiceAccessStrategy accessStrategy,\n             final RegisteredServiceAttributeReleasePolicy attributeReleasePolicy) {\n \n         SAML2SPTO sp = SAML2SPTO.class.cast(clientApp.getClientAppTO());\n-\n         SamlRegisteredService service = new SamlRegisteredService();\n+        setCommon(service, sp);\n \n         service.setServiceId(sp.getEntityId());\n-        service.setId(sp.getClientAppId());\n-        service.setName(sp.getName());\n-        service.setDescription(sp.getDescription());\n \n         service.setMetadataLocation(sp.getMetadataLocation());\n         service.setMetadataSignatureLocation(sp.getMetadataSignatureLocation());\n@@ -54,22 +52,14 @@ public RegisteredService build(\n         service.setEncryptAssertions(sp.isEncryptAssertions());\n         service.setRequiredAuthenticationContextClass(sp.getRequiredAuthenticationContextClass());\n         service.setRequiredNameIdFormat(sp.getRequiredNameIdFormat().getNameId());\n-        service.setSkewAllowance(sp.getSkewAllowance() == null ? 0 : sp.getSkewAllowance());\n+        service.setSkewAllowance(Optional.ofNullable(sp.getSkewAllowance()).orElse(0));\n         service.setNameIdQualifier(sp.getNameIdQualifier());\n         if (!sp.getAssertionAudiences().isEmpty()) {\n             service.setAssertionAudiences(sp.getAssertionAudiences().stream().collect(Collectors.joining(\",\")));\n         }\n         service.setServiceProviderNameIdQualifier(sp.getServiceProviderNameIdQualifier());\n \n-        if (authenticationPolicy != null) {\n-            service.setAuthenticationPolicy(authenticationPolicy);\n-        }\n-        if (accessStrategy != null) {\n-            service.setAccessStrategy(accessStrategy);\n-        }\n-        if (attributeReleasePolicy != null) {\n-            service.setAttributeReleasePolicy(attributeReleasePolicy);\n-        }\n+        setPolicies(service, authenticationPolicy, accessStrategy, attributeReleasePolicy);\n \n         return service;\n     }"}]}