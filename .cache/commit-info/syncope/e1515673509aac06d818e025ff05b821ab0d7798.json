{"sha":"e1515673509aac06d818e025ff05b821ab0d7798","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUxNTE1NjczNTA5YWFjMDZkODE4ZTAyNWZmMDViODIxYWIwZDc3OTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-28T13:16:55Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-28T13:17:07Z"},"message":"[SYNCOPE-1315] Do not sort client-side if sort is done server-side","tree":{"sha":"64219ec0e6f292626c3c4095347a4793e9e64337","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/64219ec0e6f292626c3c4095347a4793e9e64337"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e1515673509aac06d818e025ff05b821ab0d7798","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e1515673509aac06d818e025ff05b821ab0d7798","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e1515673509aac06d818e025ff05b821ab0d7798","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e1515673509aac06d818e025ff05b821ab0d7798/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"21bb4dc3cac6365d2823a8b7fab0aea11103ea03","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/21bb4dc3cac6365d2823a8b7fab0aea11103ea03","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/21bb4dc3cac6365d2823a8b7fab0aea11103ea03"}],"stats":{"total":110,"additions":53,"deletions":57},"files":[{"sha":"29924fc2878e9219816dc51641e0f3f743454429","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AccessTokenDirectoryPanel.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AccessTokenDirectoryPanel.AccessTokenDataProvider;\n import org.apache.syncope.client.console.rest.AccessTokenRestClient;\n@@ -162,24 +161,20 @@ protected class AccessTokenDataProvider extends DirectoryDataProvider<AccessToke\n \n         private static final long serialVersionUID = 6267494272884913376L;\n \n-        private final SortableDataProviderComparator<AccessTokenTO> comparator;\n-\n         private final AccessTokenRestClient restClient = new AccessTokenRestClient();\n \n         public AccessTokenDataProvider(final int paginatorRows) {\n             super(paginatorRows);\n \n             setSort(\"owner\", SortOrder.ASCENDING);\n-            this.comparator = new SortableDataProviderComparator<>(this);\n         }\n \n         @Override\n         public Iterator<AccessTokenTO> iterator(final long first, final long count) {\n             int page = ((int) first / paginatorRows);\n-            List<AccessTokenTO> tasks = restClient.list((page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n-\n-            Collections.sort(tasks, comparator);\n-            return tasks.iterator();\n+            return restClient.list(\n+                    (page < 0 ? 0 : page) + 1, paginatorRows, getSort()).\n+                    iterator();\n         }\n \n         @Override"},{"sha":"824c2b1285d2bf9627c896e58c49a9708168f18b","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AnyPropagationTaskDirectoryPanel.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -18,9 +18,7 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import java.util.Collections;\n import java.util.Iterator;\n-import java.util.List;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n@@ -67,13 +65,10 @@ public long size() {\n \n         @Override\n         public Iterator<PropagationTaskTO> iterator(final long first, final long count) {\n-            final int page = ((int) first / paginatorRows);\n-\n-            final List<PropagationTaskTO> tasks = restClient.listPropagationTasks(\n-                    anyTypeKind, entityKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n-\n-            Collections.sort(tasks, getComparator());\n-            return tasks.iterator();\n+            int page = ((int) first / paginatorRows);\n+            return restClient.listPropagationTasks(\n+                    anyTypeKind, entityKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort()).\n+                    iterator();\n         }\n     }\n }"},{"sha":"345a1ebfb9485a4b51e24a32f5f53ea5969647c0","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ExecutionsDirectoryPanel.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -20,7 +20,6 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -187,10 +186,10 @@ public SortableDataProviderComparator<ExecTO> getComparator() {\n \n         @Override\n         public Iterator<ExecTO> iterator(final long first, final long count) {\n-            final int page = ((int) first / paginatorRows);\n-            List<ExecTO> list = restClient.listExecutions(taskKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n-            Collections.sort(list, comparator);\n-            return list.iterator();\n+            int page = ((int) first / paginatorRows);\n+            return restClient.listExecutions(\n+                    taskKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort()).\n+                    iterator();\n         }\n \n         @Override"},{"sha":"656b707d4930ee32587fbd0a41aff83e81d69dcc","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/NotificationTaskDirectoryPanel.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -20,7 +20,6 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n@@ -223,13 +222,10 @@ public long size() {\n \n         @Override\n         public Iterator<NotificationTaskTO> iterator(final long first, final long count) {\n-            final int page = ((int) first / paginatorRows);\n-\n-            final List<NotificationTaskTO> tasks = restClient.listNotificationTasks(\n-                    notification, anyTypeKind, entityKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n-\n-            Collections.sort(tasks, getComparator());\n-            return tasks.iterator();\n+            int page = ((int) first / paginatorRows);\n+            return restClient.listNotificationTasks(\n+                    notification, anyTypeKind, entityKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort()).\n+                    iterator();\n         }\n     }\n }"},{"sha":"5298b22bbc7da90d8e6ec519b25c3de51244b0b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -20,7 +20,6 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n@@ -216,13 +215,10 @@ public long size() {\n \n         @Override\n         public Iterator<PropagationTaskTO> iterator(final long first, final long count) {\n-            final int page = ((int) first / paginatorRows);\n-\n-            final List<PropagationTaskTO> tasks = restClient.listPropagationTasks(\n-                    resource, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n-\n-            Collections.sort(tasks, getComparator());\n-            return tasks.iterator();\n+            int page = ((int) first / paginatorRows);\n+            return restClient.listPropagationTasks(\n+                    resource, (page < 0 ? 0 : page) + 1, paginatorRows, getSort()).\n+                    iterator();\n         }\n     }\n "},{"sha":"0577433f1a26dbdd3543e8c97facc09328504a41","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskDirectoryPanel.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.tasks;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n@@ -185,13 +184,10 @@ public long size() {\n \n         @Override\n         public Iterator<T> iterator(final long first, final long count) {\n-            final int page = ((int) first / paginatorRows);\n-\n-            final List<T> tasks = restClient.list(\n-                    resource, reference, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n-\n-            Collections.sort(tasks, getComparator());\n-            return tasks.iterator();\n+            int page = ((int) first / paginatorRows);\n+            return restClient.list(\n+                    resource, reference, (page < 0 ? 0 : page) + 1, paginatorRows, getSort()).\n+                    iterator();\n         }\n     }\n }"},{"sha":"ed2f7c2b36e87136ae1c320d53c9eb8b59a65599","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -21,7 +21,6 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n@@ -315,10 +314,9 @@ public long size() {\n         @Override\n         public Iterator<T> iterator(final long first, final long count) {\n             int page = ((int) first / paginatorRows);\n-\n-            List<T> tasks = restClient.list(reference, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n-            Collections.sort(tasks, getComparator());\n-            return tasks.iterator();\n+            return restClient.list(\n+                    reference, (page < 0 ? 0 : page) + 1, paginatorRows, getSort()).\n+                    iterator();\n         }\n     }\n }"},{"sha":"fc9dbb05e9a7c726ce58d171e60a50a36ced9160","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -479,11 +479,11 @@ private <T extends Task> List<T> buildResult(final List<Object> raw) {\n                     : ((String) anyKey);\n \n             @SuppressWarnings(\"unchecked\")\n-            T any = find(actualKey);\n-            if (any == null) {\n+            T task = find(actualKey);\n+            if (task == null) {\n                 LOG.error(\"Could not find task with id {}, even if returned by native query\", actualKey);\n-            } else if (!result.contains(any)) {\n-                result.add(any);\n+            } else if (!result.contains(task)) {\n+                result.add(task);\n             }\n         }\n "},{"sha":"506b4a2b3cae0a8b116602614f97c5468d2d68d8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -89,6 +89,27 @@ protected <V extends Serializable> Component findComponentByProp(\n                 });\n     }\n \n+    protected <V extends Serializable> Component findComponentByPropNotNull(\n+            final String property, final String searchPath) {\n+\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(ListItem.class, new IVisitor<ListItem<?>, Component>() {\n+\n+                    @Override\n+                    public void component(final ListItem<?> object, final IVisit<Component> visit) {\n+                        try {\n+                            Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n+                            if (getter != null && getter.invoke(object.getModelObject()) != null) {\n+                                visit.stop(object);\n+                            }\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error invoke method\", e);\n+                        }\n+                    }\n+                });\n+    }\n+\n     protected Component findComponentById(final String searchPath, final String id) {\n         Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n         return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage())."},{"sha":"81a03569a7c5f65cf42bce03fda7b574fcee7f4b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e1515673509aac06d818e025ff05b821ab0d7798/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e1515673509aac06d818e025ff05b821ab0d7798/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=e1515673509aac06d818e025ff05b821ab0d7798","patch":"@@ -369,9 +369,9 @@ public void readPropagationTaskExecutions() {\n         TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        component = findComponentByProp(\"operation\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        component = findComponentByPropNotNull(\"start\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n-                + \"checkgroup:dataTable\", ResourceOperation.CREATE);\n+                + \"checkgroup:dataTable\");\n \n         assertNotNull(component);\n         TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);"}]}