{"sha":"6d368c8b264e11e35d709365e39e663ede7bc57e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZkMzY4YzhiMjY0ZTExZTM1ZDcwOTM2NWUzOWU2NjNlZGU3YmM1N2U=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-29T12:27:57Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-29T12:27:57Z"},"message":"message refactoring, SYNCOPE-158","tree":{"sha":"e06384d5d1842d8568503bdffc9f50ded042844a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e06384d5d1842d8568503bdffc9f50ded042844a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6d368c8b264e11e35d709365e39e663ede7bc57e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d368c8b264e11e35d709365e39e663ede7bc57e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6d368c8b264e11e35d709365e39e663ede7bc57e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d368c8b264e11e35d709365e39e663ede7bc57e/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"e486aaf3a1ac1b5a3281a2c93598cc38cca4073e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e486aaf3a1ac1b5a3281a2c93598cc38cca4073e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e486aaf3a1ac1b5a3281a2c93598cc38cca4073e"}],"stats":{"total":1234,"additions":781,"deletions":453},"files":[{"sha":"8b6150a9764934aaf5bf850969e879fec597895a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -50,12 +50,13 @@ public static void main(final String[] args) {\n             System.out.println(helpMessage());\n         } catch (final IllegalArgumentException ex) {\n             LOG.error(\"Error in main\", ex);\n-            RESULT_MANAGER.generic(ex.getMessage());\n+            RESULT_MANAGER.genericError(ex.getMessage());\n             if (!ex.getMessage().startsWith(\"It seems you\")) {\n                 System.out.println(helpMessage());\n             }\n         } catch (final ProcessingException e) {\n-            RESULT_MANAGER.generic(\"Syncope server offline\", e.getCause().getMessage());\n+            RESULT_MANAGER.genericError(\"Syncope server offline\");\n+            RESULT_MANAGER.genericError(e.getCause().getMessage());\n         }\n \n     }\n@@ -73,7 +74,7 @@ private static String helpMessage() {\n                 helpMessageBuilder.append(\"\\n\");\n             }\n         } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n-            RESULT_MANAGER.generic(ex.getMessage());\n+            RESULT_MANAGER.genericError(ex.getMessage());\n         }\n \n         return helpMessageBuilder.toString();"},{"sha":"4764d4d8b2759e427406ca220a03895fec850105","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/CommonsResultManager.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.cli.commands;\n \n+import java.util.List;\n import java.util.Set;\n import org.apache.syncope.client.cli.view.Messages;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n@@ -28,6 +29,10 @@ public void numberFormatException(final String what, final String key) {\n         Messages.printIdNotNumberDeletedMessage(what, key);\n     }\n \n+    public void unnecessaryParameters(final List<String> parameters, final String helpMessage) {\n+        Messages.printUnnecessaryParameters(parameters, helpMessage);\n+    }\n+\n     public void deletedMessage(final String what, final String key) {\n         Messages.printDeletedMessage(what, key);\n     }\n@@ -52,10 +57,14 @@ public void defaultError(final String option, final String helpMessage) {\n         Messages.printDefaultMessage(option, helpMessage);\n     }\n \n-    public void generic(final String... messages) {\n+    public void genericMessage(final String... messages) {\n         Messages.printMessage(messages);\n     }\n-    \n+\n+    public void genericError(final String error) {\n+        Messages.printMessage(\"Error: \" + error);\n+    }\n+\n     protected void printConfiguration(final Set<ConnConfProperty> configurationPropertys) {\n         for (final ConnConfProperty configuration : configurationPropertys) {\n             System.out.println(\"       name: \" + configuration.getSchema().getName());"},{"sha":"28cebf42de9aafd5280ad6edee1be29345047ac6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -49,7 +49,7 @@ public void execute(final Input input) {\n \n         switch (Options.fromName(input.getOption())) {\n             case GET:\n-                new ConfigurationGet().get();\n+                new ConfigurationGet(input).get();\n                 break;\n             case READ:\n                 new ConfigurationRead(input).read();"},{"sha":"79b679b363e5f273c7221056dc600dfe8095d5dc","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationDelete.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -42,9 +42,9 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        configurationResultManager.generic(\"You cannot delete configuration\", parameter);\n+                        configurationResultManager.genericError(\"You cannot delete configuration \" + parameter);\n                     } else {\n-                        configurationResultManager.generic(ex.getMessage());\n+                        configurationResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 }\n@@ -53,5 +53,4 @@ public void delete() {\n             configurationResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"2eaeb75a6a7142fb2ce89577493469a515a9661b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationExport.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationExport.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -47,22 +47,22 @@ public void export() {\n                 XMLUtils.createXMLFile(\n                         (SequenceInputStream) configurationSyncopeOperations.export().getEntity(),\n                         input.firstParameter() + EXPORT_FILE_NAME);\n-                configurationResultManager.generic(\n+                configurationResultManager.genericMessage(\n                         input.firstParameter() + EXPORT_FILE_NAME + \" successfully created\");\n             } catch (final IOException ex) {\n-                configurationResultManager.generic(ex.getMessage());\n+                configurationResultManager.genericError(ex.getMessage());\n             } catch (ParserConfigurationException | SAXException | TransformerConfigurationException ex) {\n-                configurationResultManager.generic(\n+                configurationResultManager.genericError(\n                         \"Error creating \" + input.firstParameter() + EXPORT_FILE_NAME + \" \" + ex.getMessage());\n             } catch (final TransformerException ex) {\n                 if (ex.getCause() instanceof FileNotFoundException) {\n-                    configurationResultManager.generic(\"Permission denied on \" + input.firstParameter());\n+                    configurationResultManager.genericError(\"Permission denied on \" + input.firstParameter());\n                 } else {\n-                    configurationResultManager.generic(\n+                    configurationResultManager.genericError(\n                             \"Error creating \" + input.firstParameter() + EXPORT_FILE_NAME + \" \" + ex.getMessage());\n                 }\n             } catch (final SyncopeClientException ex) {\n-                configurationResultManager.generic(\"Error calling configuration service \" + ex.getMessage());\n+                configurationResultManager.genericError(\"Error calling configuration service \" + ex.getMessage());\n             }\n         } else {\n             configurationResultManager.commandOptionError(EXPORT_HELP_MESSAGE);"},{"sha":"f0b768210c1d0361d4e22e9979d290cf7c535a9b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationGet.java","status":"modified","additions":15,"deletions":6,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationGet.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -19,18 +19,27 @@\n package org.apache.syncope.client.cli.commands.configuration;\n \n import java.util.LinkedList;\n+import org.apache.syncope.client.cli.Input;\n \n public class ConfigurationGet extends AbstractConfigurationCommand {\n \n-    public ConfigurationGet() {\n+    private static final String GET_HELP_MESSAGE = \"configuration --get\";\n+\n+    private final Input input;\n+\n+    public ConfigurationGet(final Input input) {\n+        this.input = input;\n     }\n \n     public void get() {\n-        try {\n-            configurationResultManager.fromGet(new LinkedList<>(configurationSyncopeOperations.list()));\n-        } catch (final Exception ex) {\n-            configurationResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                configurationResultManager.fromGet(new LinkedList<>(configurationSyncopeOperations.list()));\n+            } catch (final Exception ex) {\n+                configurationResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            configurationResultManager.unnecessaryParameters(input.listParameters(), GET_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"e315f33ec86403bd320b642c706f548ba56c6511","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", parameter);\n                     } else {\n-                        configurationResultManager.generic(ex.getMessage());\n+                        configurationResultManager.genericError(ex.getMessage());\n                     }\n                     failed = true;\n                     break;\n@@ -58,5 +58,4 @@ public void read() {\n             configurationResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"e3aff4ed1c3376db201f4e77b73c7bb1fb4411d5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationUpdate.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationUpdate.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -50,17 +50,18 @@ public void update() {\n                     configurationSyncopeOperations.set(attrTO);\n                     attrList.add(attrTO);\n                 } catch (final IllegalArgumentException ex) {\n-                    configurationResultManager.generic(ex.getMessage(), UPDATE_HELP_MESSAGE);\n+                    configurationResultManager.genericError(ex.getMessage());\n+                    configurationResultManager.genericError(UPDATE_HELP_MESSAGE);\n                     failed = true;\n                     break;\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         configurationResultManager.notFoundError(\"Configuration\", pairParameter.getKey());\n                     } else if (ex.getMessage().startsWith(\"InvalidValues\")) {\n-                        configurationResultManager.generic(\n+                        configurationResultManager.genericError(\n                                 pairParameter.getValue() + \" is not a valid value for \" + pairParameter.getKey());\n                     } else {\n-                        configurationResultManager.generic(ex.getMessage());\n+                        configurationResultManager.genericError(ex.getMessage());\n                     }\n                     failed = true;\n                     break;"},{"sha":"c87055c9202bb85d57e0dce23b1b5f971d2ade3f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorCommand.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -48,10 +48,10 @@ public void execute(final Input input) {\n \n         switch (ConnectorOptions.fromName(input.getOption())) {\n             case LIST:\n-                new ConnectorList().list();\n+                new ConnectorList(input).list();\n                 break;\n             case LIST_BUNDLES:\n-                new ConnectorListBundles().list();\n+                new ConnectorListBundles(input).list();\n                 break;\n             case LIST_CONFIGURATION:\n                 new ConnectorListConfigurationProperties(input).list();"},{"sha":"1454d28480f5ea9f56647c5915d155f4f2b80756","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorDelete.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -48,15 +48,14 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Connector\", parameter);\n                     } else {\n-                        connectorResultManager.generic(ex.getMessage());\n+                        connectorResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 }\n             }\n-            connectorResultManager.toView(connInstanceTOs);\n+            connectorResultManager.printConnectors(connInstanceTOs);\n         } else {\n             connectorResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"1c86bbbf47e6f3f410e5237daa82f4ec73211aa6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorList.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,15 +18,28 @@\n  */\n package org.apache.syncope.client.cli.commands.connector;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class ConnectorList extends AbstractConnectorCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"connector --list\";\n+\n+    private final Input input;\n+\n+    public ConnectorList(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            connectorResultManager.toView(connectorSyncopeOperations.list());\n-        } catch (final SyncopeClientException ex) {\n-            connectorResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                connectorResultManager.printConnectors(connectorSyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                connectorResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            connectorResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"293fa133cfaca9e0b8baae3faa445e820a3acb0c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListBundles.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,15 +18,28 @@\n  */\n package org.apache.syncope.client.cli.commands.connector;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class ConnectorListBundles extends AbstractConnectorCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"connector --list-bundles\";\n+\n+    private final Input input;\n+\n+    public ConnectorListBundles(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            connectorResultManager.fromListBundles(connectorSyncopeOperations.getBundles());\n-        } catch (final SyncopeClientException ex) {\n-            connectorResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                connectorResultManager.printBundles(connectorSyncopeOperations.getBundles());\n+            } catch (final SyncopeClientException ex) {\n+                connectorResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            connectorResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"5f5197cefddcafa3c7501fea23d54b4640a704fa","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListConfigurationProperties.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -24,7 +24,7 @@\n \n public class ConnectorListConfigurationProperties extends AbstractConnectorCommand {\n \n-    private static final String LIST_CONFIGURATION_HELP_MESSAGE \n+    private static final String LIST_CONFIGURATION_HELP_MESSAGE\n             = \"connector --list-configuration-properties {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n \n     private final Input input;\n@@ -37,22 +37,20 @@ public void list() {\n         if (input.getParameters().length >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    connectorResultManager.fromConfigurationProperties(\n+                    connectorResultManager.printConfigurationProperties(\n                             connectorSyncopeOperations.read(parameter).getConf());\n                 } catch (final NumberFormatException ex) {\n                     connectorResultManager.numberFormatException(\"connector\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Connector\", parameter);\n                     } else {\n-                        connectorResultManager.generic(ex.getMessage());\n+                        connectorResultManager.genericError(ex.getMessage());\n                     }\n-                    break;\n                 }\n             }\n         } else {\n             connectorResultManager.commandOptionError(LIST_CONFIGURATION_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"dc29d74dd48688498c3469b5b65d8d8332352026","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorRead.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.client.cli.commands.connector;\n \n-import java.util.ArrayList;\n-import java.util.List;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n \n public class ConnectorRead extends AbstractConnectorCommand {\n \n@@ -37,25 +34,21 @@ public ConnectorRead(final Input input) {\n \n     public void read() {\n         if (input.getParameters().length >= 1) {\n-            final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    connInstanceTOs.add(connectorSyncopeOperations.read(parameter));\n+                    connectorResultManager.printConnector(connectorSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n                     connectorResultManager.numberFormatException(\"connector\", parameter);\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Connector\", parameter);\n                     } else {\n-                        connectorResultManager.generic(ex.getMessage());\n+                        connectorResultManager.genericError(ex.getMessage());\n                     }\n-                    break;\n                 }\n             }\n-            connectorResultManager.toView(connInstanceTOs);\n         } else {\n             connectorResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"cc8bbaca3592ccc8a700066561cfd5adb611d32e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorReadByResource.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.client.cli.commands.connector;\n \n-import java.util.ArrayList;\n-import java.util.List;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n \n public class ConnectorReadByResource extends AbstractConnectorCommand {\n \n@@ -38,23 +35,19 @@ public ConnectorReadByResource(final Input input) {\n \n     public void read() {\n         if (input.getParameters().length >= 1) {\n-            final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    connInstanceTOs.add(connectorSyncopeOperations.readByResource(parameter));\n+                    connectorResultManager.printConnector(connectorSyncopeOperations.readByResource(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         connectorResultManager.notFoundError(\"Resource\", parameter);\n                     } else {\n-                        connectorResultManager.generic(ex.getMessage());\n+                        connectorResultManager.genericError(ex.getMessage());\n                     }\n-                    break;\n                 }\n             }\n-            connectorResultManager.toView(connInstanceTOs);\n         } else {\n             connectorResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"4ff92ed41d0c94f923507bd8a4a0aa9937cddcd7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorResultManager.java","status":"modified","additions":20,"deletions":19,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -30,30 +30,13 @@\n \n public class ConnectorResultManager extends CommonsResultManager {\n \n-    public void toView(final List<ConnInstanceTO> connInstanceTOs) {\n+    public void printConnectors(final List<ConnInstanceTO> connInstanceTOs) {\n         for (final ConnInstanceTO connInstanceTO : connInstanceTOs) {\n             printConnector(connInstanceTO);\n         }\n     }\n \n-    public void fromListBundles(final List<ConnBundleTO> connBundleTOs) {\n-        for (final ConnBundleTO connBundleTO : connBundleTOs) {\n-            System.out.println(\" > BUNDLE NAME: \" + connBundleTO.getBundleName());\n-            System.out.println(\"    connector name: \" + connBundleTO.getConnectorName());\n-            System.out.println(\"    display name: \" + connBundleTO.getDisplayName());\n-            System.out.println(\"    location: \" + connBundleTO.getLocation());\n-            System.out.println(\"    version: \" + connBundleTO.getVersion());\n-            System.out.println(\"    PROPERTIES:\");\n-            printConfPropSchema(connBundleTO.getProperties());\n-        }\n-    }\n-\n-    public void fromConfigurationProperties(final Set<ConnConfProperty> connConfPropertys) {\n-        printConfiguration(connConfPropertys);\n-\n-    }\n-\n-    private void printConnector(final ConnInstanceTO connInstanceTO) {\n+    public void printConnector(final ConnInstanceTO connInstanceTO) {\n         System.out.println(\" > CONNECTOR ID: \" + connInstanceTO.getKey());\n         System.out.println(\"    bundle name: \" + connInstanceTO.getBundleName());\n         System.out.println(\"    connector name: \" + connInstanceTO.getConnectorName());\n@@ -67,6 +50,7 @@ private void printConnector(final ConnInstanceTO connInstanceTO) {\n         printConfiguration(connInstanceTO.getConf());\n         System.out.println(\"    POOL CONFIGURATION:\");\n         printConfPool(connInstanceTO.getPoolConf());\n+        System.out.println(\"\");\n     }\n \n     private void printCapabilities(final Set<ConnectorCapability> capabilities) {\n@@ -83,6 +67,18 @@ private void printConfPool(final ConnPoolConfTO connPoolConfTO) {\n         System.out.println(\"       max wait: \" + connPoolConfTO.getMaxWait());\n     }\n \n+    public void printBundles(final List<ConnBundleTO> connBundleTOs) {\n+        for (final ConnBundleTO connBundleTO : connBundleTOs) {\n+            System.out.println(\" > BUNDLE NAME: \" + connBundleTO.getBundleName());\n+            System.out.println(\"    connector name: \" + connBundleTO.getConnectorName());\n+            System.out.println(\"    display name: \" + connBundleTO.getDisplayName());\n+            System.out.println(\"    location: \" + connBundleTO.getLocation());\n+            System.out.println(\"    version: \" + connBundleTO.getVersion());\n+            System.out.println(\"    PROPERTIES:\");\n+            printConfPropSchema(connBundleTO.getProperties());\n+        }\n+    }\n+\n     private void printConfPropSchema(final List<ConnConfPropSchema> connConfPropSchemas) {\n         for (final ConnConfPropSchema connConfPropSchema : connConfPropSchemas) {\n             System.out.println(\"       name: \" + connConfPropSchema.getName());\n@@ -94,4 +90,9 @@ private void printConfPropSchema(final List<ConnConfPropSchema> connConfPropSche\n             System.out.println(\"\");\n         }\n     }\n+\n+    public void printConfigurationProperties(final Set<ConnConfProperty> connConfPropertys) {\n+        printConfiguration(connConfPropertys);\n+\n+    }\n }"},{"sha":"11ac0361f55209fdcc15cde6b52ffd51da874831","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorSyncopeOperations.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -26,7 +26,7 @@\n \n public class ConnectorSyncopeOperations {\n \n-    protected final ConnectorService connectorService = SyncopeServices.get(ConnectorService.class);\n+    private final ConnectorService connectorService = SyncopeServices.get(ConnectorService.class);\n \n     public ConnInstanceTO readByResource(final String resourceName) {\n         return connectorService.readByResource(resourceName, null);"},{"sha":"adda76bab91d3bcf1fb3757eda7583aff564b8ff","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainCommand.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -33,7 +33,7 @@ public class DomainCommand extends AbstractCommand {\n             + \"    --help \\n\"\n             + \"    --list \\n\"\n             + \"    --delete \\n\"\n-            + \"       Syntax: --delete {DOMAIN-KEY} {DOMAIN-KEY} [...]\\n\";\n+            + \"       Syntax: --delete {DOMAIN-NAME} {DOMAIN-NAME} [...]\\n\";\n \n     @Override\n     public void execute(final Input input) {\n@@ -42,7 +42,7 @@ public void execute(final Input input) {\n         }\n         switch (Options.fromName(input.getOption())) {\n             case LIST:\n-                new DomainList().list();\n+                new DomainList(input).list();\n                 break;\n             case DELETE:\n                 new DomainDelete(input).delete();"},{"sha":"06e733a02d64fce076188e66f3f07d613d54958a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainDelete.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -23,7 +23,7 @@\n \n public class DomainDelete extends AbstractDomainCommand {\n \n-    private static final String DELETE_HELP_MESSAGE = \"domain --delete {DOMAIN-KEY} {DOMAIN-KEY} [...]\";\n+    private static final String DELETE_HELP_MESSAGE = \"domain --delete {DOMAIN-NAME} {DOMAIN-NAME} [...]\";\n \n     private final Input input;\n \n@@ -41,13 +41,12 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         domainResultManager.notFoundError(\"Domain\", parameter);\n                     } else {\n-                        domainResultManager.generic(ex.getMessage());\n+                        domainResultManager.genericError(ex.getMessage());\n                     }\n                 }\n             }\n         } else {\n             domainResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"7c6084449c4366e9045067dc6e72f38806bb6d91","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainList.java","status":"modified","additions":15,"deletions":7,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,21 +18,29 @@\n  */\n package org.apache.syncope.client.cli.commands.domain;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.DomainTO;\n \n public class DomainList extends AbstractDomainCommand {\n \n-    public DomainList() {\n+    private static final String LIST_HELP_MESSAGE = \"domain --list\";\n+\n+    private final Input input;\n+\n+    public DomainList(final Input input) {\n+        this.input = input;\n     }\n \n     public void list() {\n-        try {\n-            for (final DomainTO domainTO : domainSyncopeOperations.list()) {\n-                domainResultManager.generic(domainTO.getKey());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                domainResultManager.toView(domainSyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                domainResultManager.genericError(ex.getMessage());\n             }\n-        } catch (final SyncopeClientException ex) {\n-            domainResultManager.generic(\"Error: \" + ex.getMessage());\n+        } else {\n+            domainResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n+\n     }\n }"},{"sha":"94989ffe8c1e1299447394452bdc48d2222b58c3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainRead.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -23,7 +23,7 @@\n \n public class DomainRead extends AbstractDomainCommand {\n \n-    private static final String READ_HELP_MESSAGE = \"domain --read {DOMAIN-KEY} {DOMAIN-KEY} [...]\";\n+    private static final String READ_HELP_MESSAGE = \"domain --read {DOMAIN-NAME} {DOMAIN-NAME} [...]\";\n \n     private final Input input;\n \n@@ -35,12 +35,12 @@ public void read() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    domainResultManager.generic(domainSyncopeOperations.read(parameter).getKey());\n+                    domainResultManager.printDomain(domainSyncopeOperations.read(parameter));\n                 } catch (final SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         domainResultManager.notFoundError(\"Domain\", parameter);\n                     } else {\n-                        domainResultManager.generic(ex.getMessage());\n+                        domainResultManager.genericError(ex.getMessage());\n                     }\n                 }\n             }"},{"sha":"d0b28ed18264672e61116af3fc0c97a935b6721e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainResultManager.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,8 +18,20 @@\n  */\n package org.apache.syncope.client.cli.commands.domain;\n \n+import java.util.List;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.DomainTO;\n \n public class DomainResultManager extends CommonsResultManager {\n \n+    public void toView(final List<DomainTO> domainTOs) {\n+        for (final DomainTO domainTO : domainTOs) {\n+            printDomain(domainTO);\n+        }\n+    }\n+\n+    public void printDomain(final DomainTO domainTO) {\n+        System.out.println(\" > DOIMAIN NAME: \" + domainTO.getKey());\n+        System.out.println(\"    chiper algorithm: \" + domainTO.getAdminCipherAlgorithm());\n+    }\n }"},{"sha":"f09665d0fa40b5e1efb75b4dccde628bc381bc14","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/AbstractEntitlementCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.cli.commands.entitlement;\n \n-public class AbstractEntitlementCommand {\n+public abstract class AbstractEntitlementCommand {\n \n     protected final EntitlementSyncopeOperations entitlementSyncopeOperations = new EntitlementSyncopeOperations();\n "},{"sha":"1dc49663df1ca809475536f5d0388462d9e94047","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementCommand.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -37,7 +37,7 @@ public class EntitlementCommand extends AbstractCommand {\n             + \"    --read-by-username\\n\"\n             + \"       Syntax: --read-by-username {USERNAME}\\n\"\n             + \"    --read-by-userid\\n\"\n-            + \"       Syntax: --read-by-userid {USERID}\\n\"\n+            + \"       Syntax: --read-by-userid {USER-ID}\\n\"\n             + \"    --search-by-role\\n\"\n             + \"       Syntax: --search-by-role {ROLE-ID}\";\n \n@@ -49,7 +49,7 @@ public void execute(final Input input) {\n \n         switch (EntitlementOptions.fromName(input.getOption())) {\n             case LIST:\n-                new EntitlementList().list();\n+                new EntitlementList(input).list();\n                 break;\n             case READ_BY_USERNAME:\n                 new EntitlementReadByUsername(input).read();\n@@ -117,5 +117,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"e20482348ef9d9b1a302089c566c7755ded6ca17","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementList.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,9 +18,23 @@\n  */\n package org.apache.syncope.client.cli.commands.entitlement;\n \n+import org.apache.syncope.client.cli.Input;\n+\n public class EntitlementList extends AbstractEntitlementCommand {\n \n+    private static final String READ_HELP_MESSAGE = \"entitlement --list\";\n+\n+    private final Input input;\n+\n+    public EntitlementList(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        entitlementResultManager.toView(entitlementSyncopeOperations.list());\n+        if (input.parameterNumber() == 0) {\n+            entitlementResultManager.toView(entitlementSyncopeOperations.list());\n+        } else {\n+            entitlementResultManager.unnecessaryParameters(input.listParameters(), READ_HELP_MESSAGE);\n+        }\n     }\n }"},{"sha":"0b4144e0ed8cc05674d2e801a186097711820650","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementListRole.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,13 +43,13 @@ public void list() {\n                 } else if (roleTOs != null && !roleTOs.isEmpty()) {\n                     entitlementResultManager.rolesToView(roleTOs);\n                 } else {\n-                    entitlementResultManager.generic(\"No roles found for entitlement \" + input.firstParameter());\n+                    entitlementResultManager.genericMessage(\"No roles found for entitlement \" + input.firstParameter());\n                 }\n             } catch (final SyncopeClientException | WebServiceException ex) {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n-                    entitlementResultManager.generic(\"Error: \" + ex.getMessage());\n+                    entitlementResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n                 entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n@@ -58,5 +58,4 @@ public void list() {\n             entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"3cd41cbaf540ed10ef402329c005025bb8198238","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementReadByUserId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -41,7 +41,7 @@ public void read() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n-                    entitlementResultManager.generic(\"Error: \" + ex.getMessage());\n+                    entitlementResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n                 entitlementResultManager.numberFormatException(\"user\", input.firstParameter());"},{"sha":"40a73fc8b6d98647ada644fe85b96f21833cc33a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementReadByUsername.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -41,7 +41,7 @@ public void read() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n-                    entitlementResultManager.generic(\"Error: \" + ex.getMessage());\n+                    entitlementResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n                 entitlementResultManager.numberFormatException(\"user\", input.firstParameter());"},{"sha":"e6003adf5b9e48fb11c19be87ab4e7325f6fad90","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementResultManager.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -50,5 +50,4 @@ private void printRealms(final List<String> realms) {\n             System.out.println(\"       - \" + realm);\n         }\n     }\n-\n }"},{"sha":"91f982884f8b06d9c93c9fe6c5aeda097002152f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSearchByRole.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -41,7 +41,7 @@ public void search() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n-                    entitlementResultManager.generic(\"Error: \" + ex.getMessage());\n+                    entitlementResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n                 entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n@@ -50,5 +50,4 @@ public void search() {\n             entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-    \n }"},{"sha":"0492a2632608c6c43d58284e66d440d86c528a95","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/help/Help.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -24,6 +24,8 @@\n \n public class Help {\n \n+    private final HelpResultManager helpResultManager = new HelpResultManager();\n+\n     public void help() {\n         final StringBuilder generalHelpBuilder = new StringBuilder(\"General help\\n\");\n         try {\n@@ -35,9 +37,9 @@ public void help() {\n                         .append(\"\\n\")\n                         .append(\" \\n\");\n             }\n-            System.out.println(generalHelpBuilder.toString());\n+            helpResultManager.toView(generalHelpBuilder.toString());\n         } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException e) {\n-            new HelpResultManager().generic(e.getMessage());\n+            helpResultManager.genericMessage(e.getMessage());\n         }\n     }\n }"},{"sha":"b70664d3b438eba1869b84840028c119b56f9432","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/help/HelpResultManager.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -22,4 +22,7 @@\n \n public class HelpResultManager extends CommonsResultManager {\n \n+    public void toView(final String generalHelp) {\n+        System.out.println(generalHelp);\n+    }\n }"},{"sha":"4fa0163c006bce916a8bae9ace3fe93eadd087b3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/Info.java","status":"modified","additions":51,"deletions":82,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -25,219 +25,188 @@\n public class Info {\n \n     private final SyncopeTO syncopeTO = SyncopeServices.get(SyncopeService.class).info();\n-    \n+\n     private final InfoResultManager infoResultManager = new InfoResultManager();\n \n     public void version() {\n         try {\n-            infoResultManager.generic(\"Syncope version: \" + syncopeTO.getVersion());\n+            infoResultManager.printVersion(syncopeTO.getVersion());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void pwdResetAllowed() {\n         try {\n-            infoResultManager.generic(\"Password reset allowed: \" + syncopeTO.isPwdResetAllowed());\n+            infoResultManager.printPwdResetAllowed(syncopeTO.isPwdResetAllowed());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void resetWithSecurityQuestion() {\n         try {\n-            infoResultManager.generic(\"Password reset requiring security question: \"\n-                    + syncopeTO.isPwdResetRequiringSecurityQuestions());\n+            infoResultManager.printPwdResetRequiringSecurityQuestions(syncopeTO.isPwdResetRequiringSecurityQuestions());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void selfRegistrationAllowed() {\n         try {\n-            infoResultManager.generic(\"Self registration allowed: \" + syncopeTO.isSelfRegAllowed());\n+            infoResultManager.printSelfRegistrationAllowed(syncopeTO.isSelfRegAllowed());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void provisioningManager() {\n         try {\n-            infoResultManager.generic(\n-                    \"Any object provisioning manager class: \" + syncopeTO.getAnyObjectProvisioningManager(),\n-                    \"User       provisioning manager class: \" + syncopeTO.getUserProvisioningManager(),\n-                    \"Group      provisioning manager class: \" + syncopeTO.getGroupProvisioningManager());\n+            infoResultManager.printProvisioningManager(\n+                    syncopeTO.getAnyObjectProvisioningManager(),\n+                    syncopeTO.getUserProvisioningManager(),\n+                    syncopeTO.getGroupProvisioningManager());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void workflowAdapter() {\n         try {\n-            infoResultManager.generic(\n-                    \"Any object workflow adapter class: \" + syncopeTO.getAnyObjectWorkflowAdapter(),\n-                    \"User       workflow adapter class: \" + syncopeTO.getUserWorkflowAdapter(),\n-                    \"Group      workflow adapter class: \" + syncopeTO.getGroupWorkflowAdapter());\n+            infoResultManager.printWorkflowAdapter(\n+                    syncopeTO.getAnyObjectWorkflowAdapter(),\n+                    syncopeTO.getUserWorkflowAdapter(),\n+                    syncopeTO.getGroupWorkflowAdapter());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void accountRules() {\n         try {\n-            for (final String accountRule : syncopeTO.getAccountRules()) {\n-                infoResultManager.generic(\"Account rule: \" + accountRule);\n-            }\n+            infoResultManager.printAccountRules(syncopeTO.getAccountRules());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void connidLocation() {\n         try {\n-            for (final String location : syncopeTO.getConnIdLocations()) {\n-                infoResultManager.generic(\"ConnId location: \" + location);\n-            }\n+            infoResultManager.printConnidLocations(syncopeTO.getConnIdLocations());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void logicActions() {\n         try {\n-            for (final String logic : syncopeTO.getLogicActions()) {\n-                infoResultManager.generic(\"Logic action: \" + logic);\n-            }\n+            infoResultManager.printLogicActions(syncopeTO.getLogicActions());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void mailTemplates() {\n         try {\n-            for (final String template : syncopeTO.getMailTemplates()) {\n-                infoResultManager.generic(\"Mail template: \" + template);\n-            }\n+            infoResultManager.printMailTemplates(syncopeTO.getMailTemplates());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void mappingItemTransformers() {\n         try {\n-            for (final String tranformer : syncopeTO.getMappingItemTransformers()) {\n-                infoResultManager.generic(\"Mapping item tranformer: \" + tranformer);\n-            }\n+            infoResultManager.printMappingItemTransformers(syncopeTO.getMappingItemTransformers());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void passwordRules() {\n         try {\n-            for (final String rules : syncopeTO.getPasswordRules()) {\n-                infoResultManager.generic(\"Password rule: \" + rules);\n-            }\n+            infoResultManager.printPasswordRules(syncopeTO.getPasswordRules());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void propagationActions() {\n         try {\n-            for (final String action : syncopeTO.getPropagationActions()) {\n-                infoResultManager.generic(\"Propagation action: \" + action);\n-            }\n+            infoResultManager.printPropagationActions(syncopeTO.getPropagationActions());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void pushActions() {\n         try {\n-            for (final String action : syncopeTO.getPushActions()) {\n-                infoResultManager.generic(\"Push action: \" + action);\n-            }\n+            infoResultManager.printPushActions(syncopeTO.getPushActions());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void pushCorrelationActions() {\n         try {\n-            for (final String rule : syncopeTO.getPushCorrelationRules()) {\n-                infoResultManager.generic(\"Push correlation rule: \" + rule);\n-            }\n+            infoResultManager.printCorrelationActions(syncopeTO.getPushCorrelationRules());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void reportlets() {\n         try {\n-            for (final String reportlet : syncopeTO.getReportlets()) {\n-                infoResultManager.generic(\"Reportlet: \" + reportlet);\n-            }\n+            infoResultManager.printReportlets(syncopeTO.getReportlets());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void syncActions() {\n         try {\n-            for (final String action : syncopeTO.getSyncActions()) {\n-                infoResultManager.generic(\"Sync action: \" + action);\n-            }\n+            infoResultManager.printSyncActions(syncopeTO.getSyncActions());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void syncCorrelationRules() {\n         try {\n-            for (final String rule : syncopeTO.getSyncCorrelationRules()) {\n-                infoResultManager.generic(\"Sync correlation rule: \" + rule);\n-            }\n+            infoResultManager.printCorrelationRules(syncopeTO.getSyncCorrelationRules());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void taskJobs() {\n         try {\n-            for (final String job : syncopeTO.getTaskJobs()) {\n-                infoResultManager.generic(\"Task job: \" + job);\n-            }\n+            infoResultManager.printJobs(syncopeTO.getTaskJobs());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void validators() {\n         try {\n-            for (final String validator : syncopeTO.getValidators()) {\n-                infoResultManager.generic(\"Validator: \" + validator);\n-            }\n+            infoResultManager.printValidators(syncopeTO.getValidators());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void passwordGenerators() {\n         try {\n-            infoResultManager.generic(\n-                    \"Password generator class: \" + syncopeTO.getPasswordGenerator());\n+            infoResultManager.printPasswordGenerator(syncopeTO.getPasswordGenerator());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n \n     public void virAttrCache() {\n         try {\n-            infoResultManager.generic(\n-                    \"Virtual attribute cache class: \" + syncopeTO.getVirAttrCache());\n+            infoResultManager.printVirtualAttributeCacheClass(syncopeTO.getVirAttrCache());\n         } catch (final Exception ex) {\n-            infoResultManager.generic(ex.getMessage());\n+            infoResultManager.genericError(ex.getMessage());\n         }\n     }\n }"},{"sha":"6ea04f765761bd0a53bc3fd5cc3ec4d0846b524b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoResultManager.java","status":"modified","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,8 +18,134 @@\n  */\n package org.apache.syncope.client.cli.commands.info;\n \n+import java.util.List;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n \n public class InfoResultManager extends CommonsResultManager {\n \n+    public void printVersion(final String version) {\n+        genericMessage(\" - Syncope version: \" + version);\n+    }\n+\n+    public void printPwdResetAllowed(final boolean pwdResetAllowed) {\n+        genericMessage(\"Password reset allowed: \" + pwdResetAllowed);\n+    }\n+\n+    public void printPwdResetRequiringSecurityQuestions(final boolean pwdResetRequiringSecurityQuestions) {\n+        genericMessage(\"Password reset requiring security question: \" + pwdResetRequiringSecurityQuestions);\n+    }\n+\n+    public void printSelfRegistrationAllowed(final boolean selfRegAllowed) {\n+        genericMessage(\"Self registration allowed: \" + selfRegAllowed);\n+    }\n+\n+    public void printProvisioningManager(final String anyObjectProvisioningManager,\n+            final String getUserProvisioningManager,\n+            final String getGroupProvisioningManager) {\n+        genericMessage(\n+                \"Any object provisioning manager class: \" + anyObjectProvisioningManager,\n+                \"User provisioning manager class: \" + getUserProvisioningManager,\n+                \"Group provisioning manager class: \" + getGroupProvisioningManager);\n+    }\n+\n+    public void printWorkflowAdapter(final String anyObjectWorkflowAdapter,\n+            final String userWorkflowAdapter,\n+            final String groupWorkflowAdapter) {\n+        genericMessage(\n+                \"Any object workflow adapter class: \" + anyObjectWorkflowAdapter,\n+                \"User       workflow adapter class: \" + userWorkflowAdapter,\n+                \"Group      workflow adapter class: \" + groupWorkflowAdapter);\n+    }\n+\n+    public void printAccountRules(final List<String> rules) {\n+        for (final String accountRule : rules) {\n+            genericMessage(\"Account rule: \" + accountRule);\n+        }\n+    }\n+\n+    public void printConnidLocations(final List<String> locations) {\n+        for (final String location : locations) {\n+            genericMessage(\"ConnId location: \" + location);\n+        }\n+    }\n+\n+    public void printLogicActions(final List<String> actions) {\n+        for (final String action : actions) {\n+            genericMessage(\"Logic action: \" + action);\n+        }\n+    }\n+\n+    public void printMailTemplates(final List<String> mailTemplates) {\n+        for (final String template : mailTemplates) {\n+            genericMessage(\"Mail template: \" + template);\n+        }\n+    }\n+\n+    public void printMappingItemTransformers(final List<String> transformers) {\n+        for (final String tranformer : transformers) {\n+            genericMessage(\"Mapping item tranformer: \" + tranformer);\n+        }\n+    }\n+\n+    public void printPasswordRules(final List<String> rules) {\n+        for (final String rule : rules) {\n+            genericMessage(\"Password rule: \" + rule);\n+        }\n+    }\n+\n+    public void printCorrelationRules(final List<String> rules) {\n+        for (final String rule : rules) {\n+            genericMessage(\"Correlation rule: \" + rule);\n+        }\n+    }\n+\n+    public void printPropagationActions(final List<String> actions) {\n+        for (final String action : actions) {\n+            genericMessage(\"Propagation action: \" + action);\n+        }\n+    }\n+\n+    public void printPushActions(final List<String> actions) {\n+        for (final String action : actions) {\n+            genericMessage(\"Push action: \" + action);\n+        }\n+    }\n+\n+    public void printSyncActions(final List<String> actions) {\n+        for (final String action : actions) {\n+            genericMessage(\"Sync action: \" + action);\n+        }\n+    }\n+\n+    public void printCorrelationActions(final List<String> actions) {\n+        for (final String action : actions) {\n+            genericMessage(\"Push correlation rule: \" + action);\n+        }\n+    }\n+\n+    public void printReportlets(final List<String> reportlets) {\n+        for (final String reportlet : reportlets) {\n+            genericMessage(\"Reportlet: \" + reportlet);\n+        }\n+    }\n+\n+    public void printJobs(final List<String> jobs) {\n+        for (final String job : jobs) {\n+            genericMessage(\"Task job: \" + job);\n+        }\n+    }\n+\n+    public void printValidators(final List<String> validators) {\n+        for (final String validator : validators) {\n+            genericMessage(\"Validator: \" + validator);\n+        }\n+    }\n+\n+    public void printPasswordGenerator(final String passwordGenerator) {\n+        genericMessage(\"Password generator class: \" + passwordGenerator);\n+    }\n+    \n+    public void printVirtualAttributeCacheClass(final String virAttrCache) {\n+        genericMessage(\"Virtual attribute cache class: \" + virAttrCache);\n+    }\n }"},{"sha":"b9f4c836f4d2433b29a6e7900edd8fee451dc102","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallCommand.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.cli.commands.install;\n \n+import java.io.FileNotFoundException;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.cli.Command;\n import org.apache.syncope.client.cli.Input;\n@@ -26,6 +27,8 @@\n @Command(name = \"install\")\n public class InstallCommand extends AbstractCommand {\n \n+    private final InstallResultManager installResultManager = new InstallResultManager();\n+\n     private static final String HELP_MESSAGE = \"Usage: install [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n@@ -39,13 +42,18 @@ public void execute(final Input input) {\n \n         switch (Options.fromName(input.getOption())) {\n             case INSTALL:\n-                new InstallSetup().setup();\n+                try {\n+                    new InstallSetup().setup();\n+                } catch (final FileNotFoundException | IllegalAccessException ex) {\n+                    installResultManager.genericError(ex.getMessage());\n+                    break;\n+                }\n                 break;\n             case HELP:\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new InstallResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                installResultManager.defaultError(input.getOption(), HELP_MESSAGE);\n         }\n     }\n \n@@ -83,5 +91,4 @@ public static Options fromName(final String name) {\n             return optionToReturn;\n         }\n     }\n-\n }"},{"sha":"39837bfa3e546aa93179ea29b33be0f83b6e077a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallResultManager.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -26,6 +26,16 @@\n \n public class InstallResultManager extends CommonsResultManager {\n \n+    public void printWelcome() {\n+        System.out.println(\"\");\n+        System.out.println(\"###############################################\");\n+        System.out.println(\"#                                             #\");\n+        System.out.println(\"# Welcome to Syncope CLI installation process #\");\n+        System.out.println(\"#                                             #\");\n+        System.out.println(\"###############################################\");\n+        System.out.println(\"\");\n+    }\n+\n     public void installationSuccessful(final String version) {\n         System.out.println(\"Installation parameters checked on Syncope core version: \" + version);\n         System.out.println(\"\");"},{"sha":"7e1eaec588a745a6d99392fa507d63ea7bca036c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetup.java","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetup.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -44,23 +44,18 @@ public class InstallSetup {\n \n     private String syncopeServerRestContext = \"/syncope/rest/\";\n \n-    public InstallSetup() {\n-    }\n-\n-    public void setup() {\n-        System.out.println(\"\");\n-        System.out.println(\"###############################################\");\n-        System.out.println(\"#                                             #\");\n-        System.out.println(\"# Welcome to Syncope CLI installation process #\");\n-        System.out.println(\"#                                             #\");\n-        System.out.println(\"###############################################\");\n-        System.out.println(\"\");\n+    public void setup() throws FileNotFoundException, IllegalAccessException {\n+        installResultManager.printWelcome();\n \n         System.out.println(\"Path to config files of Syncope CLI client will be: \"\n                 + InstallConfigFileTemplate.DIR_PATH);\n \n+        if (!FileSystemUtils.exists(InstallConfigFileTemplate.DIR_PATH)) {\n+            throw new FileNotFoundException(\"Directory: \" + InstallConfigFileTemplate.DIR_PATH + \" does not exists!\");\n+        }\n+\n         if (!FileSystemUtils.canWrite(InstallConfigFileTemplate.DIR_PATH)) {\n-            System.out.println(\"Permission denied on \" + InstallConfigFileTemplate.DIR_PATH);\n+            throw new IllegalAccessException(\"Permission denied on \" + InstallConfigFileTemplate.DIR_PATH);\n         }\n         System.out.println(\"- File system permission checked\");\n         System.out.println(\"\");\n@@ -153,7 +148,6 @@ public void setup() {\n         scanIn.close();\n \n         final JasyptUtils jasyptUtils = JasyptUtils.getJasyptUtils();\n-\n         try {\n             FileSystemUtils.createNewDirectory(InstallConfigFileTemplate.DIR_PATH);\n             final String contentCliPropertiesFile = InstallConfigFileTemplate.createFile("},{"sha":"4d2a55e0069a60ccddb91ee91d2c3c61278c98c6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCommand.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -51,7 +51,7 @@ public void execute(final Input input) {\n \n         switch (LoggerOptions.fromName(input.getOption())) {\n             case LIST:\n-                new LoggerList().list();\n+                new LoggerList(input).list();\n                 break;\n             case READ:\n                 new LoggerRead(input).read();\n@@ -123,5 +123,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"221629526847ba3abb46def9d6e028796e082990","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCreate.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCreate.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -65,5 +65,4 @@ public void create() {\n             loggerResultManager.commandOptionError(CREATE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"88c30c587b4385f6cc2fdcdae67ecec65c1eaa3e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDelete.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -42,13 +42,12 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);\n                     } else {\n-                        loggerResultManager.generic(ex.getMessage());\n+                        loggerResultManager.genericError(ex.getMessage());\n                     }\n                 }\n             }\n         } else {\n             loggerResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"6a4bfecfb09a34697c1149f109f47fd081b495b5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerList.java","status":"modified","additions":15,"deletions":5,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -19,18 +19,28 @@\n package org.apache.syncope.client.cli.commands.logger;\n \n import java.util.LinkedList;\n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class LoggerList extends AbstractLoggerCommand {\n \n-    public LoggerList() {\n+    private static final String LIST_HELP_MESSAGE = \"logger --list\";\n+\n+    private final Input input;\n+\n+    public LoggerList(final Input input) {\n+        this.input = input;\n     }\n \n     public void list() {\n-        try {\n-            loggerResultManager.fromList(new LinkedList<>(loggerSyncopeOperations.list()));\n-        } catch (final SyncopeClientException ex) {\n-            loggerResultManager.generic(\"Error: \" + ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                loggerResultManager.fromList(new LinkedList<>(loggerSyncopeOperations.list()));\n+            } catch (final SyncopeClientException ex) {\n+                loggerResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            loggerResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"321e257b134215b1ccc3f875b4bad39a1ef3d2fa","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);\n                     } else {\n-                        loggerResultManager.generic(\"Error: \" + ex.getMessage());\n+                        loggerResultManager.genericError(ex.getMessage());\n                     }\n                     failed = true;\n                     break;"},{"sha":"d6f759ce1260db19b7e2bed9b0d00b1a9685fe55","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerResultManager.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -57,5 +57,4 @@ private void fromCommandToView(final String title,\n         }\n         tableBuilder.build().print();\n     }\n-\n }"},{"sha":"6f118e9d4977768d83363f66ba013ec100865cb5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdate.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdate.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -57,11 +57,13 @@ public void update() {\n                                 input.firstParameter(),\n                                 CommandUtils.fromEnumToArray(LoggerLevel.class));\n                     } else if (\"Parameter syntax error!\".equalsIgnoreCase(ex.getMessage())) {\n-                        loggerResultManager.generic(ex.getMessage(), UPDATE_HELP_MESSAGE);\n+                        loggerResultManager.genericError(ex.getMessage());\n+                        loggerResultManager.genericError(UPDATE_HELP_MESSAGE);\n                     } else if (ex.getMessage().startsWith(\"NotFound\")) {\n                         loggerResultManager.notFoundError(\"Logger\", parameter);\n                     } else {\n-                        loggerResultManager.generic(ex.getMessage(), UPDATE_HELP_MESSAGE);\n+                        loggerResultManager.genericError(ex.getMessage());\n+                        loggerResultManager.genericError(UPDATE_HELP_MESSAGE);\n                     }\n                     failed = true;\n                     break;"},{"sha":"981b2aa87bc3ac78faa50c39e1fc8223eabdb877","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerUpdateAll.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerUpdateAll.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -52,7 +52,8 @@ public void updateAll() {\n                                 input.firstParameter(),\n                                 CommandUtils.fromEnumToArray(LoggerLevel.class));\n                     } else {\n-                        loggerResultManager.generic(ex.getMessage(), UPDATE_ALL_HELP_MESSAGE);\n+                        loggerResultManager.genericError(ex.getMessage());\n+                        loggerResultManager.genericError(UPDATE_ALL_HELP_MESSAGE);\n                     }\n                     failed = true;\n                     break;"},{"sha":"ee0f77cb83ef3c9ae10b8ad1a18676493604ecc8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationCommand.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void execute(final Input input) {\n \n         switch (Options.fromName(input.getOption())) {\n             case LIST:\n-                new NotificationList().list();\n+                new NotificationList(input).list();\n                 break;\n             case READ:\n                 new NotificationRead(input).read();\n@@ -105,5 +105,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"4690d24b841bf3a9b91690611c971c0bb3ba479d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationDelete.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -20,7 +20,6 @@\n \n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.view.Messages;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class NotificationDelete extends AbstractNotificationCommand {\n@@ -43,7 +42,7 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         notificationResultManager.notFoundError(\"Notification\", parameter);\n                     } else {\n-                        Messages.printMessage(ex.getMessage());\n+                        notificationResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     notificationResultManager.notBooleanDeletedError(\"notification\", parameter);"},{"sha":"9341ae20352bbbf5e163e75fa61869b6e69d8b44","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationList.java","status":"modified","additions":18,"deletions":5,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,18 +18,31 @@\n  */\n package org.apache.syncope.client.cli.commands.notification;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.NotificationTO;\n \n public class NotificationList extends AbstractNotificationCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"notification --list\";\n+\n+    private final Input input;\n+\n+    public NotificationList(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            for (final NotificationTO notificationTO : notificationSyncopeOperations.list()) {\n-                System.out.println(notificationTO);\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                for (final NotificationTO notificationTO : notificationSyncopeOperations.list()) {\n+                    System.out.println(notificationTO);\n+                }\n+            } catch (final SyncopeClientException ex) {\n+                notificationResultManager.genericError(ex.getMessage());\n             }\n-        } catch (final SyncopeClientException ex) {\n-            notificationResultManager.generic(ex.getMessage());\n+        } else {\n+            notificationResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"d493fa51c4716468e9e7a6ba0e380f5cff6bd9c0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,7 +43,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         notificationResultManager.notFoundError(\"Notification\", parameter);\n                     } else {\n-                        notificationResultManager.generic(ex.getMessage());\n+                        notificationResultManager.genericError(ex.getMessage());\n                     }\n                 }\n             }"},{"sha":"f6651139027e9f6d0dc9af5d9ec3485c18bb0e68","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyCommand.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -107,5 +107,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"5dde82bc92f20bded7af24707cd581b3a64924ca","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDelete.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -39,13 +39,12 @@ public void delete() {\n                     policySyncopeOperations.delete(parameter);\n                     policyResultManager.deletedMessage(\"Policy\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n-                    System.out.println(\"Error:\");\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         policyResultManager.notFoundError(\"Policy\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        policyResultManager.generic(\"You cannot delete policy \" + parameter);\n+                        policyResultManager.genericError(\"You cannot delete policy \" + parameter);\n                     } else {\n-                        policyResultManager.generic(ex.getMessage());\n+                        policyResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     policyResultManager.notBooleanDeletedError(\"policy\", parameter);\n@@ -55,5 +54,4 @@ public void delete() {\n             policyResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"d23fa11aa799065404388e95cc457a94ba6ec02d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -47,7 +47,7 @@ public void list() {\n                 }\n                 policyResultManager.fromList(policyType, policyTOs);\n             } catch (final SyncopeClientException ex) {\n-                policyResultManager.generic(ex.getMessage());\n+                policyResultManager.genericError(ex.getMessage());\n             } catch (final IllegalArgumentException ex) {\n                 policyResultManager.typeNotValidError(\n                         \"policy\", input.firstParameter(), CommandUtils.fromEnumToArray(PolicyType.class));"},{"sha":"0a466e0610c6bc684e906ac1c5727b543556d7a9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyRead.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -40,17 +40,17 @@ public void read() {\n             for (final String parameter : input.getParameters()) {\n                 try {\n                     policyTOs.add(policySyncopeOperations.read(parameter));\n-                    policyResultManager.fromRead(policyTOs);\n                 } catch (final NumberFormatException ex) {\n                     policyResultManager.notBooleanDeletedError(\"policy\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         policyResultManager.notFoundError(\"Policy\", parameter);\n                     } else {\n-                        policyResultManager.generic(ex.getMessage());\n+                        policyResultManager.genericError(ex.getMessage());\n                     }\n                 }\n             }\n+            policyResultManager.fromRead(policyTOs);\n         } else {\n             policyResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }"},{"sha":"0259e309ee368ee512f85a1b918203cd5f3d1cc6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionCommand.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void execute(final Input input) {\n \n         switch (QuestionOptions.fromName(input.getOption())) {\n             case LIST:\n-                new QuestionList().list();\n+                new QuestionList(input).list();\n                 break;\n             case READ:\n                 new QuestionRead(input).read();\n@@ -104,5 +104,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"29cff9daa675e451443c354365807407b32eda7d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionDelete.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -42,7 +42,7 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         questionResultManager.notFoundError(\"Security question\", parameter);\n                     } else {\n-                        questionResultManager.generic(\"Error: \" + ex.getMessage());\n+                        questionResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n@@ -53,5 +53,4 @@ public void delete() {\n             questionResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"7d2e18d135c689ebff0906e7d2a21669bfd04c16","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionList.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,15 +18,28 @@\n  */\n package org.apache.syncope.client.cli.commands.question;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class QuestionList extends AbstractQuestionCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"question --list\";\n+\n+    private final Input input;\n+\n+    public QuestionList(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            questionResultManager.toView(questionSyncopeOperations.list());\n-        } catch (final SyncopeClientException ex) {\n-            questionResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                questionResultManager.toView(questionSyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                questionResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            questionResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"306f4497c0deabcfe344cb4829dd4432c5ed7466","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         questionResultManager.notFoundError(\"Security question\", parameter);\n                     } else {\n-                        questionResultManager.generic(\"Error: \" + ex.getMessage());\n+                        questionResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n@@ -57,5 +57,4 @@ public void read() {\n             questionResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"8caced7021283e92c80ffa7601f31d0f6433f9e8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionSyncopeOperations.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -42,5 +42,4 @@ public SecurityQuestionTO read(final String questionId) {\n     public SecurityQuestionTO readByUser(final String username) {\n         return securityQuestionService.readByUser(username);\n     }\n-\n }"},{"sha":"95b8ec475e6fd54d7195f92929866400c865c20d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmCommand.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -40,7 +40,7 @@ public void execute(final Input input) {\n         }\n         switch (Options.fromName(input.getOption())) {\n             case LIST:\n-                new RealmList().list();\n+                new RealmList(input).list();\n                 break;\n             case HELP:\n                 System.out.println(HELP_MESSAGE);\n@@ -92,5 +92,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"51b5fe4eaeb27c4b9f747cae17dbde5b997be03f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmList.java","status":"modified","additions":15,"deletions":6,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,19 +18,28 @@\n  */\n package org.apache.syncope.client.cli.commands.realm;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class RealmList extends AbstractRealmCommand {\n \n-    public RealmList() {\n+    private static final String LIST_HELP_MESSAGE = \"realm --list\";\n+\n+    private final Input input;\n+\n+    public RealmList(final Input input) {\n+        this.input = input;\n     }\n \n     public void list() {\n-        try {\n-            realmResultManager.toView(realmSyncopeOperations.list());\n-        } catch (final SyncopeClientException ex) {\n-            realmResultManager.generic(\"Error: \" + ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                realmResultManager.toView(realmSyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                realmResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            realmResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"19af12f7709e9d7e15be8c509185129e3502013c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmSyncopeOperations.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmSyncopeOperations.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -40,5 +40,4 @@ public boolean exists(final String realm) {\n         }\n         return exists;\n     }\n-\n }"},{"sha":"ac67fcf539adb34869b0555d63afcd183ac922ae","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportCommand.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -32,6 +32,7 @@ public class ReportCommand extends AbstractCommand {\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n             + \"    --list \\n\"\n+            + \"    --list-jobs \\n\"\n             + \"    --read \\n\"\n             + \"       Syntax: --read {REPORT-ID} {REPORT-ID} [...] \\n\"\n             + \"    --delete \\n\"\n@@ -54,10 +55,10 @@ public void execute(final Input input) {\n \n         switch (Options.fromName(input.getOption())) {\n             case LIST:\n-                new ReportList().list();\n+                new ReportList(input).list();\n                 break;\n             case LIST_JOBS:\n-                new ReportListJobs().list();\n+                new ReportListJobs(input).list();\n                 break;\n             case READ:\n                 new ReportRead(input).read();"},{"sha":"52850bde2110d508170f00a6a81d7286835f7c65","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDelete.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -42,9 +42,9 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        reportResultManager.generic(\"You cannot delete report \" + parameter);\n+                        reportResultManager.genericError(\"You cannot delete report \" + parameter);\n                     } else {\n-                        reportResultManager.generic(ex.getMessage());\n+                        reportResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     reportResultManager.numberFormatException(\"report\", parameter);\n@@ -54,5 +54,4 @@ public void delete() {\n             reportResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"3ae7bb7c72400e409bd2a29cb33e5e72969b82b4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDeleteExecution.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDeleteExecution.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -34,20 +34,18 @@ public ReportDeleteExecution(final Input input) {\n     }\n \n     public void delete() {\n-\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n-\n                 try {\n                     reportSyncopeOperations.deleteExecution(parameter);\n                     reportResultManager.deletedMessage(\"Report execution\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        reportResultManager.generic(\"You cannot delete report \" + parameter);\n+                        reportResultManager.genericError(\"You cannot delete report \" + parameter);\n                     } else {\n-                        reportResultManager.generic(ex.getMessage());\n+                        reportResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     reportResultManager.numberFormatException(\"report\", parameter);\n@@ -57,5 +55,4 @@ public void delete() {\n             reportResultManager.commandOptionError(DELETE_EXECUTION_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"f8a4f6d65c2f0ca4be0d90b32603a2b37e3decfe","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExecute.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExecute.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -37,7 +37,6 @@ public ReportExecute(final Input input) {\n \n     public void execute() {\n         if (input.parameterNumber() == 1) {\n-\n             try {\n                 reportSyncopeOperations.execute(input.firstParameter());\n                 final List<ReportExecTO> executionList\n@@ -48,9 +47,9 @@ public void execute() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     reportResultManager.notFoundError(\"Report\", input.firstParameter());\n                 } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                    reportResultManager.generic(\"You cannot delete report \" + input.firstParameter());\n+                    reportResultManager.genericError(\"You cannot delete report \" + input.firstParameter());\n                 } else {\n-                    reportResultManager.generic(ex.getMessage());\n+                    reportResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n                 reportResultManager.numberFormatException(\"report\", input.firstParameter());\n@@ -59,5 +58,4 @@ public void execute() {\n             reportResultManager.commandOptionError(EXECUTE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"e7aca1ec75b211d13cd3dbaffbc342144d3d5c97","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExportExecution.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -55,34 +55,35 @@ public void export() {\n                         case XML:\n                             final String xmlFinalName = \"export_\" + parameter + \".xml\";\n                             XMLUtils.createXMLFile(report, xmlFinalName);\n-                            reportResultManager.generic(xmlFinalName + \" successfully created\");\n+                            reportResultManager.genericMessage(xmlFinalName + \" successfully created\");\n                             break;\n                         case CSV:\n-                            reportResultManager.generic(format + \" doesn't supported\");\n+                            reportResultManager.genericError(format + \" doesn't supported\");\n                             break;\n                         case PDF:\n-                            reportResultManager.generic(format + \" doesn't supported\");\n+                            reportResultManager.genericError(format + \" doesn't supported\");\n                             break;\n                         case HTML:\n-                            reportResultManager.generic(format + \" doesn't supported\");\n+                            reportResultManager.genericError(format + \" doesn't supported\");\n                             break;\n                         case RTF:\n-                            reportResultManager.generic(format + \" doesn't supported\");\n+                            reportResultManager.genericError(format + \" doesn't supported\");\n                             break;\n                         default:\n-                            reportResultManager.generic(format + \" doesn't supported\");\n+                            reportResultManager.genericError(format + \" doesn't supported\");\n                             break;\n                     }\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else {\n-                        reportResultManager.generic(ex.getMessage());\n+                        reportResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     reportResultManager.numberFormatException(\"report\", parameter);\n                 } catch (IOException | ParserConfigurationException | SAXException | TransformerException e) {\n-                    reportResultManager.generic(\" - Error creating \" + \"export_\" + parameter + \" \" + e.getMessage());\n+                    reportResultManager.genericError(\n+                            \" - Error creating \" + \"export_\" + parameter + \" \" + e.getMessage());\n                 } catch (final IllegalArgumentException ex) {\n                     reportResultManager.typeNotValidError(\n                             \"format\", input.firstParameter(),\n@@ -94,5 +95,4 @@ public void export() {\n             reportResultManager.commandOptionError(EXPORT_EXECUTION_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"abeaf4e30f7ebcc333aa388fc2c1c9ba17efad39","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportList.java","status":"modified","additions":17,"deletions":5,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,16 +18,28 @@\n  */\n package org.apache.syncope.client.cli.commands.report;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class ReportList extends AbstractReportCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"report --list\";\n+\n+    private final Input input;\n+\n+    public ReportList(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            reportResultManager.fromValueToView(reportSyncopeOperations.list());\n-        } catch (final SyncopeClientException ex) {\n-            reportResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                reportResultManager.fromValueToView(reportSyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                reportResultManager.genericMessage(ex.getMessage());\n+            }\n+        } else {\n+            reportResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"2735f85ca3f297a6a3fdc4b3d368b96bb4e75d08","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportListJobs.java","status":"modified","additions":18,"deletions":5,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,18 +18,31 @@\n  */\n package org.apache.syncope.client.cli.commands.report;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.JobStatusType;\n \n public class ReportListJobs extends AbstractReportCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"report --list-jobs\";\n+\n+    private final Input input;\n+\n+    public ReportListJobs(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            for (final JobStatusType jobStatusType : JobStatusType.values()) {\n-                reportResultManager.printReportExecution(reportSyncopeOperations.listJobs(jobStatusType));\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                for (final JobStatusType jobStatusType : JobStatusType.values()) {\n+                    reportResultManager.printReportExecution(reportSyncopeOperations.listJobs(jobStatusType));\n+                }\n+            } catch (final SyncopeClientException ex) {\n+                reportResultManager.genericError(ex.getMessage());\n             }\n-        } catch (final SyncopeClientException ex) {\n-            reportResultManager.generic(ex.getMessage());\n+        } else {\n+            reportResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"acd5da0457b989fc8b9adf0d99592cf7fb6b4acd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -47,7 +47,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else {\n-                        reportResultManager.generic(ex.getMessage());\n+                        reportResultManager.genericError(ex.getMessage());\n                     }\n                 }\n             }"},{"sha":"f7c9ec32698758411ebf183bffa32df6f95c6fd6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportReadExecution.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportReadExecution.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,11 +43,10 @@ public void read() {\n                 try {\n                     reportExecTOs.add(reportSyncopeOperations.readExecution(parameter));\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n-                    System.out.println(\"Error:\");\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         reportResultManager.notFoundError(\"Report\", parameter);\n                     } else {\n-                        reportResultManager.generic(ex.getMessage());\n+                        reportResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     reportResultManager.numberFormatException(\"report\", parameter);\n@@ -58,5 +57,4 @@ public void read() {\n             reportResultManager.commandOptionError(READ_EXECUTION_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"185cd992b6b9af2379d733bff325dfc91ef9c1ba","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceCommand.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void execute(final Input input) {\n \n         switch (ResourceOptions.fromName(input.getOption())) {\n             case LIST:\n-                new ResourceList().list();\n+                new ResourceList(input).list();\n                 break;\n             case READ:\n                 new ResourceRead(input).read();\n@@ -105,5 +105,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"3b94ecb64ee33267a5777332cd30e845f5fd2f5e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceDelete.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,7 +43,7 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         resourceResultManager.notFoundError(\"Resource\", parameter);\n                     } else {\n-                        resourceResultManager.generic(ex.getMessage());\n+                        resourceResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 }\n@@ -52,5 +52,4 @@ public void delete() {\n             resourceResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"8b095362ccf25854b96e6eec6c908e4bd3872a79","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceList.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,15 +18,28 @@\n  */\n package org.apache.syncope.client.cli.commands.resource;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class ResourceList extends AbstractResourceCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"resource --list\";\n+\n+    private final Input input;\n+\n+    public ResourceList(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            resourceResultManager.toView(resourceSyncopeOperations.list());\n-        } catch (final SyncopeClientException ex) {\n-            resourceResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                resourceResultManager.toView(resourceSyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                resourceResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            resourceResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"8f8c874b62bdb134f1e3423e797cccb192f3815a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -46,7 +46,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         resourceResultManager.notFoundError(\"Resource\", parameter);\n                     } else {\n-                        resourceResultManager.generic(ex.getMessage());\n+                        resourceResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 }\n@@ -56,5 +56,4 @@ public void read() {\n             resourceResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"488f574fd35688b87d7c754ff8a3a39a69731d68","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceResultManager.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -31,7 +31,6 @@ public void toView(final List<ResourceTO> resourceTOs) {\n         for (final ResourceTO resourceTO : resourceTOs) {\n             printResource(resourceTO);\n         }\n-        System.out.println(\"\");\n     }\n \n     private void printResource(final ResourceTO resourceTO) {\n@@ -90,5 +89,4 @@ private void printMappingItem(final List<MappingItemTO> mappingItemTOs) {\n             System.out.println(\"\");\n         }\n     }\n-\n }"},{"sha":"63c9f0979597456a1b54b5ce2f69bb41fc800306","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleCommand.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void execute(final Input input) {\n \n         switch (RoleOptions.fromName(input.getOption())) {\n             case LIST:\n-                new RoleList().list();\n+                new RoleList(input).list();\n                 break;\n             case READ:\n                 new RoleRead(input).read();\n@@ -105,5 +105,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"469131279a9182e85b41f1dc5b50efd1121be32a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -42,7 +42,7 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         roleResultManager.notFoundError(\"Role\", parameter);\n                     } else {\n-                        roleResultManager.generic(\"Error: \" + ex.getMessage());\n+                        roleResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {"},{"sha":"53f710508dac41df159c6e5376c1f988c4b24782","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleList.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,15 +18,28 @@\n  */\n package org.apache.syncope.client.cli.commands.role;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n public class RoleList extends AbstractRoleCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"role --list\";\n+\n+    private final Input input;\n+\n+    public RoleList(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            roleResultManager.toView(roleSyncopeOperations.list());\n-        } catch (final SyncopeClientException ex) {\n-            roleResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                roleResultManager.toView(roleSyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                roleResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            roleResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"021b65c7c48ade4503156901e7ac8869d1ebc561","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         roleResultManager.notFoundError(\"Role\", parameter);\n                     } else {\n-                        roleResultManager.generic(\"Error: \" + ex.getMessage());\n+                        roleResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n@@ -57,5 +57,4 @@ public void read() {\n             roleResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"11c207d9a2303cb727b102c6322b8ce550089ac4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleSyncopeOperations.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleSyncopeOperations.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -38,5 +38,4 @@ public RoleTO read(final String roleId) {\n     public void delete(final String roleId) {\n         roleService.delete(Long.valueOf(roleId));\n     }\n-\n }"},{"sha":"c0d3976246366785d10198083df6b6297460f61e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaCommand.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -51,16 +51,16 @@ public void execute(final Input input) {\n                 new SchemaList(input).list();\n                 break;\n             case LIST_ALL:\n-                new SchemaListAll().listAll();\n+                new SchemaListAll(input).listAll();\n                 break;\n             case LIST_PLAIN:\n-                new SchemaListPlain().listPlain();\n+                new SchemaListPlain(input).listPlain();\n                 break;\n             case LIST_DERIVED:\n-                new SchemaListDerived().listDerived();\n+                new SchemaListDerived(input).listDerived();\n                 break;\n             case LIST_VIRTUAL:\n-                new SchemaListVirtual().listVirtual();\n+                new SchemaListVirtual(input).listVirtual();\n                 break;\n             case READ:\n                 new SchemaRead(input).read();"},{"sha":"d3d5314cf46bdcb28854566a58e599b8b1a2c113","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaDelete.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -48,9 +48,9 @@ public void delete() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     schemaResultManager.notFoundError(\"Schema\", parameters[0]);\n                 } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                    schemaResultManager.generic(\"You cannot delete schema \" + parameters[0]);\n+                    schemaResultManager.genericError(\"You cannot delete schema \" + parameters[0]);\n                 } else {\n-                    schemaResultManager.generic(ex.getMessage());\n+                    schemaResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n                 schemaResultManager.typeNotValidError(\n@@ -60,5 +60,4 @@ public void delete() {\n             schemaResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"cf41aa72cb75a785d70081e07862534b308d0fcc","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -58,7 +58,7 @@ public void list() {\n                         break;\n                 }\n             } catch (final SyncopeClientException ex) {\n-                schemaResultManager.generic(ex.getMessage());\n+                schemaResultManager.genericError(ex.getMessage());\n             } catch (final IllegalArgumentException ex) {\n                 schemaResultManager.typeNotValidError(\n                         \"schema\", input.firstParameter(), CommandUtils.fromEnumToArray(SchemaType.class));"},{"sha":"2c17a3a1db8e947e218d5f56f96c61672c74d96f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListAll.java","status":"modified","additions":33,"deletions":21,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -20,36 +20,48 @@\n \n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n \n public class SchemaListAll extends AbstractSchemaCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"schema --list-all\";\n+\n+    private final Input input;\n+\n+    public SchemaListAll(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void listAll() {\n-        try {\n-            for (final SchemaType schemaType : SchemaType.values()) {\n-                final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-                for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.list(schemaType)) {\n-                    schemaTOs.add(schemaTO);\n-                }\n-                switch (schemaType) {\n-                    case PLAIN:\n-                        schemaResultManager.fromListPlain(schemaTOs);\n-                        break;\n-                    case DERIVED:\n-                        schemaResultManager.fromListDerived(schemaTOs);\n-                        break;\n-                    case VIRTUAL:\n-                        schemaResultManager.fromListVirtual(schemaTOs);\n-                        break;\n-                    default:\n-                        break;\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                for (final SchemaType schemaType : SchemaType.values()) {\n+                    final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n+                    for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.list(schemaType)) {\n+                        schemaTOs.add(schemaTO);\n+                    }\n+                    switch (schemaType) {\n+                        case PLAIN:\n+                            schemaResultManager.fromListPlain(schemaTOs);\n+                            break;\n+                        case DERIVED:\n+                            schemaResultManager.fromListDerived(schemaTOs);\n+                            break;\n+                        case VIRTUAL:\n+                            schemaResultManager.fromListVirtual(schemaTOs);\n+                            break;\n+                        default:\n+                            break;\n+                    }\n                 }\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                schemaResultManager.genericError(ex.getMessage());\n             }\n-        } catch (final SyncopeClientException | WebServiceException ex) {\n-            schemaResultManager.generic(ex.getMessage());\n+        } else {\n+            schemaResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"fa7668447b6d2298bc7bada94c2614c8d7246cbb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListDerived.java","status":"modified","additions":20,"deletions":7,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListDerived.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -20,20 +20,33 @@\n \n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n \n public class SchemaListDerived extends AbstractSchemaCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"schema --list-derived\";\n+\n+    private final Input input;\n+\n+    public SchemaListDerived(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void listDerived() {\n-        try {\n-            final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-            for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listDerived()) {\n-                schemaTOs.add(schemaTO);\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n+                for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listDerived()) {\n+                    schemaTOs.add(schemaTO);\n+                }\n+                schemaResultManager.fromListDerived(schemaTOs);\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                schemaResultManager.genericError(ex.getMessage());\n             }\n-            schemaResultManager.fromListDerived(schemaTOs);\n-        } catch (final SyncopeClientException | WebServiceException ex) {\n-            schemaResultManager.generic(ex.getMessage());\n+        } else {\n+            schemaResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"746b8560b773194a9310bddd6161170714debf15","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListPlain.java","status":"modified","additions":20,"deletions":7,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -20,20 +20,33 @@\n \n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n \n public class SchemaListPlain extends AbstractSchemaCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"schema --list-plain\";\n+\n+    private final Input input;\n+\n+    public SchemaListPlain(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void listPlain() {\n-        try {\n-            final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-            for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listPlain()) {\n-                schemaTOs.add(schemaTO);\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n+                for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listPlain()) {\n+                    schemaTOs.add(schemaTO);\n+                }\n+                schemaResultManager.fromListPlain(schemaTOs);\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                schemaResultManager.genericError(ex.getMessage());\n             }\n-            schemaResultManager.fromListPlain(schemaTOs);\n-        } catch (final SyncopeClientException | WebServiceException ex) {\n-            schemaResultManager.generic(ex.getMessage());\n+        } else {\n+            schemaResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"d7da8c8acb058dcd5dac2e57d17730a7accc1a0d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListVirtual.java","status":"modified","additions":20,"deletions":7,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListVirtual.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -20,20 +20,33 @@\n \n import java.util.LinkedList;\n import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n \n public class SchemaListVirtual extends AbstractSchemaCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"schema --list-virtual\";\n+\n+    private final Input input;\n+\n+    public SchemaListVirtual(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void listVirtual() {\n-        try {\n-            final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-            for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listVirtual()) {\n-                schemaTOs.add(schemaTO);\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n+                for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listVirtual()) {\n+                    schemaTOs.add(schemaTO);\n+                }\n+                schemaResultManager.fromListVirtual(schemaTOs);\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                schemaResultManager.genericError(ex.getMessage());\n             }\n-            schemaResultManager.fromListVirtual(schemaTOs);\n-        } catch (final SyncopeClientException | WebServiceException ex) {\n-            schemaResultManager.generic(ex.getMessage());\n+        } else {\n+            schemaResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"133a14c777b60ac6ae93c2cf4b72abf9b3b113fd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -64,7 +64,7 @@ public void read() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     schemaResultManager.notFoundError(\"Schema\", parameters[0]);\n                 } else {\n-                    schemaResultManager.generic(ex.getMessage());\n+                    schemaResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n                 schemaResultManager.typeNotValidError(\n@@ -74,5 +74,4 @@ public void read() {\n             schemaResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"dd5a3ff4c27f234a9c5b2d62df8ba3f59dc8807c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowCommand.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -100,5 +100,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"aa1d8a3567895b7c85794eadf012ab1359178bbb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowExportDefinition.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,7 +43,7 @@ public void export() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     workflowResultManager.notFoundError(\"Workflow\", input.firstParameter());\n                 } else {\n-                    workflowResultManager.generic(ex.getMessage());\n+                    workflowResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n                 workflowResultManager.typeNotValidError("},{"sha":"abc4c6132c99d7cc9fa6d476411a83e2b6c08a8e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowExportDiagram.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -48,18 +48,18 @@ public void export() {\n                 final FileOutputStream fos = new FileOutputStream(\"/tmp/diagram.png\");\n                 fos.write(diagram);\n                 fos.close();\n-                workflowResultManager.generic(\"Diagram created: /tmp/diagram.png\");\n+                workflowResultManager.genericMessage(\"Diagram created: /tmp/diagram.png\");\n             } catch (final SyncopeClientException | WebServiceException ex) {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     workflowResultManager.notFoundError(\"Workflow\", input.firstParameter());\n                 } else {\n-                    workflowResultManager.generic(ex.getMessage());\n+                    workflowResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n                 workflowResultManager.typeNotValidError(\n                         \"workflow\", input.firstParameter(), CommandUtils.fromEnumToArray(AnyTypeKind.class));\n             } catch (final IOException ex) {\n-\n+                workflowResultManager.genericError(ex.getMessage());\n             }\n         } else {\n             workflowResultManager.commandOptionError(EXPORT_HELP_MESSAGE);"},{"sha":"173db439469b4acab69deb17d1e65033b193a5e3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowSyncopeOperations.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -37,5 +37,4 @@ public Response exportDiagram(final AnyTypeKind anyTypeKind) {\n     public Response exportDefinition(final AnyTypeKind anyTypeKind) {\n         return workflowService.exportDefinition(anyTypeKind);\n     }\n-\n }"},{"sha":"f95d69f34d52981388ff8e388ef6689d6e67f026","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskCommand.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -59,10 +59,10 @@ public void execute(final Input input) {\n                 new TaskList(input).list();\n                 break;\n             case LIST_RUNNING_JOBS:\n-                new TaskRunningJobs().list();\n+                new TaskListRunningJobs(input).list();\n                 break;\n             case LIST_SCHEDULED_JOBS:\n-                new TaskScheduledJobs().list();\n+                new TaskListScheduledJobs(input).list();\n                 break;\n             case READ:\n                 new TaskRead(input).read();\n@@ -85,7 +85,6 @@ public void execute(final Input input) {\n             default:\n                 new TaskResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n         }\n-\n     }\n \n     @Override"},{"sha":"c5089fff6c1ba44a969ffe898c0e19465f2ab8b0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDelete.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,9 +43,9 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         taskResultManager.notFoundError(\"Task\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        taskResultManager.generic(\"You cannot delete task \" + parameter);\n+                        taskResultManager.genericError(\"You cannot delete task \" + parameter);\n                     } else {\n-                        taskResultManager.generic(ex.getMessage());\n+                        taskResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     taskResultManager.notBooleanDeletedError(\"task\", parameter);"},{"sha":"a501905608a340faf3db467b64f5e8265fd56284","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecute.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecute.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -51,9 +51,9 @@ public void execute() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     taskResultManager.notFoundError(\"Task\", input.firstParameter());\n                 } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                    taskResultManager.generic(\"You cannot delete task \" + input.firstParameter());\n+                    taskResultManager.genericError(\"You cannot delete task \" + input.firstParameter());\n                 } else {\n-                    taskResultManager.generic(ex.getMessage());\n+                    taskResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n                 taskResultManager.notBooleanDeletedError(\"task\", input.firstParameter());\n@@ -62,5 +62,4 @@ public void execute() {\n             taskResultManager.commandOptionError(EXECUTE_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"30cbf4218364cc9dc96d2a359cfff15feb094680","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecutionDelete.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,9 +43,9 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         taskResultManager.notFoundError(\"Task execution\", parameter);\n                     } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n-                        taskResultManager.generic(\"You cannot delete task execution\" + parameter);\n+                        taskResultManager.genericError(\"You cannot delete task execution\" + parameter);\n                     } else {\n-                        taskResultManager.generic(ex.getMessage());\n+                        taskResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     taskResultManager.notBooleanDeletedError(\"task execution\", parameter);"},{"sha":"c234028e8818ad30ed2bdf32b60c8b7e33dedc8b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskExecutionRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskExecutionRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         taskResultManager.notFoundError(\"Task execution\", parameter);\n                     } else {\n-                        taskResultManager.generic(\"Error: \" + ex.getMessage());\n+                        taskResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 }\n@@ -54,5 +54,4 @@ public void read() {\n             taskResultManager.commandOptionError(EXECUTION_READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"e01141a66485c5eabbf391baa54fdfa3a0ad0a0a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -47,7 +47,7 @@ public void list() {\n                 }\n                 taskResultManager.fromList(taskType, taskTOs);\n             } catch (final SyncopeClientException ex) {\n-                taskResultManager.generic(ex.getMessage());\n+                taskResultManager.genericError(ex.getMessage());\n             } catch (final IllegalArgumentException ex) {\n                 taskResultManager.typeNotValidError(\n                         \"task\", input.firstParameter(), CommandUtils.fromEnumToArray(TaskType.class));"},{"sha":"931cfef825058ffa394d8c961534cbc41a479f6e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskListRunningJobs.java","status":"renamed","additions":19,"deletions":6,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListRunningJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListRunningJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListRunningJobs.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,16 +18,29 @@\n  */\n package org.apache.syncope.client.cli.commands.task;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n-public class TaskRunningJobs extends AbstractTaskCommand {\n+public class TaskListRunningJobs extends AbstractTaskCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"task --list-running-jobs\";\n+\n+    private final Input input;\n+\n+    public TaskListRunningJobs(final Input input) {\n+        this.input = input;\n+    }\n \n     public void list() {\n-        try {\n-            taskResultManager.printTaskExecTO(taskSyncopeOperations.listRunningJobs());\n-        } catch (final SyncopeClientException ex) {\n-            taskResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                taskResultManager.printTaskExecTO(taskSyncopeOperations.listRunningJobs());\n+            } catch (final SyncopeClientException ex) {\n+                taskResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            taskResultManager.unnecessaryParameters(input.listParameters(), READ_HELP_MESSAGE);\n         }\n-    }\n \n+    }\n }","previous_filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskRunningJobs.java"},{"sha":"ec2cab12bf68b80143ef05eedb1224b1cee7357d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskListScheduledJobs.java","status":"renamed","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListScheduledJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListScheduledJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskListScheduledJobs.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,16 +18,28 @@\n  */\n package org.apache.syncope.client.cli.commands.task;\n \n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n-public class TaskScheduledJobs extends AbstractTaskCommand {\n+public class TaskListScheduledJobs extends AbstractTaskCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"task --list-scheduled-jobs\";\n+\n+    private final Input input;\n+\n+    public TaskListScheduledJobs(final Input input) {\n+        this.input = input;\n+    }\n \n     public void list() {\n-        try {\n-            taskResultManager.printTaskExecTO(taskSyncopeOperations.listScheduledJobs());\n-        } catch (final SyncopeClientException ex) {\n-            taskResultManager.generic(ex.getMessage());\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                taskResultManager.printTaskExecTO(taskSyncopeOperations.listScheduledJobs());\n+            } catch (final SyncopeClientException ex) {\n+                taskResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            taskResultManager.unnecessaryParameters(input.listParameters(), READ_HELP_MESSAGE);\n         }\n     }\n-\n }","previous_filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskScheduledJobs.java"},{"sha":"7b9b5d56edbceaef6331405f52846a637e51fdf4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -46,7 +46,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         taskResultManager.notFoundError(\"Task\", parameter);\n                     } else {\n-                        taskResultManager.generic(\"Error: \" + ex.getMessage());\n+                        taskResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 }\n@@ -56,5 +56,4 @@ public void read() {\n             taskResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"f34d1d0e700bdee4ef8592d982583ffb3c3fd28b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCommand.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -59,7 +59,7 @@ public void execute(final Input input) {\n                 new UserCount(input).count();\n                 break;\n             case LIST:\n-                new UserList().list();\n+                new UserList(input).list();\n                 break;\n             case GET_BY_KEY:\n                 new UserGetKey(input).get();\n@@ -140,5 +140,4 @@ public static List<String> toList() {\n             return options;\n         }\n     }\n-\n }"},{"sha":"73167685ebb1e94c1a6abb95cbddd455a75873ff","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCount.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCount.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCount.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCount.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -23,6 +23,8 @@\n \n public class UserCount extends AbstractUserCommand {\n \n+    private static final String COUNT_HELP_MESSAGE = \"user --count\";\n+\n     private final Input input;\n \n     public UserCount(final Input input) {\n@@ -32,12 +34,12 @@ public UserCount(final Input input) {\n     public void count() {\n         if (input.parameterNumber() == 0) {\n             try {\n-                userResultManager.generic(\"Total users: \" + userSyncopeOperations.count());\n+                userResultManager.genericMessage(\"Total users: \" + userSyncopeOperations.count());\n             } catch (final SyncopeClientException ex) {\n-                userResultManager.generic(\"Error: \" + ex.getMessage());\n+                userResultManager.genericError(ex.getMessage());\n             }\n         } else {\n-            userResultManager.generic(\"Error: unnecessary parameters \" + input.listParameters());\n+            userResultManager.unnecessaryParameters(input.listParameters(), COUNT_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"80195f866d856206f0903f5912c67c0c165e28ab","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDelete.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -42,7 +42,7 @@ public void delete() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         userResultManager.notFoundError(\"User\", parameter);\n                     } else {\n-                        userResultManager.generic(ex.getMessage());\n+                        userResultManager.genericError(ex.getMessage());\n                     }\n                 } catch (final NumberFormatException ex) {\n                     userResultManager.numberFormatException(\"user\", parameter);"},{"sha":"d11c9c887f79f88c149368258b37fafdab7dd522","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserGetKey.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -34,9 +34,9 @@ public UserGetKey(final Input input) {\n     public void get() {\n         if (input.getParameters().length == 1) {\n             try {\n-                userResultManager.generic(userSyncopeOperations.getIdFromUsername(input.firstParameter()));\n+                userResultManager.genericMessage(userSyncopeOperations.getIdFromUsername(input.firstParameter()));\n             } catch (final SyncopeClientException ex) {\n-                userResultManager.generic(\"Error: \" + ex.getMessage());\n+                userResultManager.genericError(ex.getMessage());\n             }\n         } else {\n             userResultManager.commandOptionError(GET_HELP_MESSAGE);"},{"sha":"66866633d6c9aa29527d177d352b1eb2e5fb36f5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserGetUsername.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -34,9 +34,9 @@ public UserGetUsername(final Input input) {\n     public void get() {\n         if (input.getParameters().length == 1) {\n             try {\n-                userResultManager.generic(userSyncopeOperations.getUsernameFromId(input.firstParameter()));\n+                userResultManager.genericMessage(userSyncopeOperations.getUsernameFromId(input.firstParameter()));\n             } catch (final SyncopeClientException ex) {\n-                userResultManager.generic(\"Error: \" + ex.getMessage());\n+                userResultManager.genericError(ex.getMessage());\n             }\n         } else {\n             userResultManager.commandOptionError(GET_HELP_MESSAGE);"},{"sha":"94dad592a6e8c2132219170913c867c4734f5b31","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserList.java","status":"modified","additions":28,"deletions":15,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -20,29 +20,42 @@\n \n import java.util.LinkedList;\n import java.util.Scanner;\n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.UserTO;\n \n public class UserList extends AbstractUserCommand {\n \n+    private static final String LIST_HELP_MESSAGE = \"user --list\";\n+\n+    private final Input input;\n+\n+    public UserList(final Input input) {\n+        this.input = input;\n+    }\n+\n     public void list() {\n-        try {\n-            final Scanner scanIn = new Scanner(System.in);\n-            System.out.println(\n-                    \"This operation could be print a lot of information \"\n-                    + \"on your screen. Do you want to continue? [yes/no]\");\n-            final String answer = scanIn.nextLine();\n-            if (\"yes\".equalsIgnoreCase(answer)) {\n-                final PagedResult<UserTO> uResult = userSyncopeOperations.list();\n-                userResultManager.toView(new LinkedList<>(uResult.getResult()));\n-            } else if (\"no\".equalsIgnoreCase(answer)) {\n-                userResultManager.generic(\"List operation skipped\");\n-            } else {\n-                userResultManager.generic(\"Invalid parameter, please use [yes/no]\");\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Scanner scanIn = new Scanner(System.in);\n+                System.out.println(\n+                        \"This operation could be print a lot of information \"\n+                        + \"on your screen. Do you want to continue? [yes/no]\");\n+                final String answer = scanIn.nextLine();\n+                if (\"yes\".equalsIgnoreCase(answer)) {\n+                    final PagedResult<UserTO> uResult = userSyncopeOperations.list();\n+                    userResultManager.toView(new LinkedList<>(uResult.getResult()));\n+                } else if (\"no\".equalsIgnoreCase(answer)) {\n+                    userResultManager.genericError(\"List operation skipped\");\n+                } else {\n+                    userResultManager.genericError(\"Invalid parameter, please use [yes/no]\");\n+                }\n+            } catch (final SyncopeClientException ex) {\n+                userResultManager.genericError(ex.getMessage());\n             }\n-        } catch (final SyncopeClientException ex) {\n-            userResultManager.generic(ex.getMessage());\n+        } else {\n+            userResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n         }\n     }\n }"},{"sha":"39dcb23487d44c918afe3694895247332a893d45","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserRead.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserRead.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,7 +45,7 @@ public void read() {\n                     if (ex.getMessage().startsWith(\"NotFound\")) {\n                         userResultManager.notFoundError(\"User\", parameter);\n                     } else {\n-                        userResultManager.generic(\"Error: \" + ex.getMessage());\n+                        userResultManager.genericError(ex.getMessage());\n                     }\n                     break;\n                 } catch (final NumberFormatException ex) {\n@@ -57,5 +57,4 @@ public void read() {\n             userResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"900d32cee48ca436d2c4aa6fc39639e031aea950","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserResultManager.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -32,7 +32,6 @@ public void toView(final List<UserTO> userTOs) {\n         for (final UserTO userTO : userTOs) {\n             printUser(userTO);\n         }\n-        System.out.println(\"\");\n     }\n \n     private void printUser(final UserTO userTO) {"},{"sha":"a00812faca56f0ea7caa4e39843c299dbb7e10f5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByAttribute.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,12 +43,13 @@ public void search() {\n             try {\n                 List<UserTO> userTOs;\n                 if (!realmSyncopeOperations.exists(realm)) {\n-                    userResultManager.generic(\"Operation performed on root realm because \" + realm + \"does not exists\");\n+                    userResultManager.genericMessage(\"Operation performed on root realm because \" + realm\n+                            + \"does not exists\");\n                 }\n                 userTOs = userSyncopeOperations.searchByAttribute(\n                         realm, pairParameter.getKey(), pairParameter.getValue());\n                 if (userTOs == null || userTOs.isEmpty()) {\n-                    userResultManager.generic(\"No users found with attribute \"\n+                    userResultManager.genericMessage(\"No users found with attribute \"\n                             + pairParameter.getKey() + \" and value \" + pairParameter.getValue());\n                 } else {\n                     userResultManager.toView(userTOs);\n@@ -57,13 +58,13 @@ public void search() {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n                     userResultManager.notFoundError(\"User with \" + pairParameter.getKey(), pairParameter.getValue());\n                 } else {\n-                    userResultManager.generic(ex.getMessage(), SEARCH_HELP_MESSAGE);\n+                    userResultManager.genericError(ex.getMessage());\n                 }\n             } catch (final IllegalArgumentException ex) {\n-                userResultManager.generic(ex.getMessage(), SEARCH_HELP_MESSAGE);\n+                userResultManager.genericError(ex.getMessage());\n+                userResultManager.genericError(SEARCH_HELP_MESSAGE);\n             }\n             userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"5d6177c24c686f6afaa49e5059cc883e80f9fc35","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByResource.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,24 +45,25 @@ public void search() {\n             try {\n                 List<UserTO> userTOs = null;\n                 if (!realmSyncopeOperations.exists(realm)) {\n-                    userResultManager.generic(\"Operation performed on root realm because \" + realm + \"does not exists\");\n+                    userResultManager.genericMessage(\"Operation performed on root realm because \" + realm\n+                            + \"does not exists\");\n                 }\n                 if (!resourceSyncopeOperations.exists(resource)) {\n                     userResultManager.notFoundError(\"Resource\", resource);\n                 } else {\n                     userTOs = userSyncopeOperations.searchByResource(realm, resource);\n                 }\n                 if (userTOs == null || userTOs.isEmpty()) {\n-                    userResultManager.generic(\"No users has \" + resource + \" assigned\");\n+                    userResultManager.genericMessage(\"No users has \" + resource + \" assigned\");\n                 } else {\n                     userResultManager.toView(userTOs);\n                 }\n             } catch (final WebServiceException | SyncopeClientException ex) {\n-                userResultManager.generic(ex.getMessage(), SEARCH_HELP_MESSAGE);\n+                userResultManager.genericError(ex.getMessage());\n+                userResultManager.genericError(SEARCH_HELP_MESSAGE);\n             }\n         } else {\n             userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"6e041fe636558187a16608c027f5588a50e3c358","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByRole.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -43,20 +43,21 @@ public void search() {\n             try {\n                 List<UserTO> userTOs;\n                 if (!realmSyncopeOperations.exists(realm)) {\n-                    userResultManager.generic(\"Operation performed on root realm because \" + realm + \"does not exists\");\n+                    userResultManager.genericMessage(\"Operation performed on root realm because \"\n+                            + realm + \"does not exists\");\n                 }\n                 userTOs = userSyncopeOperations.searchByRole(realm, input.secondParameter());\n                 if (userTOs == null || userTOs.isEmpty()) {\n-                    userResultManager.generic(\"No users has \" + role + \" assigned\");\n+                    userResultManager.genericMessage(\"No users has \" + role + \" assigned\");\n                 } else {\n                     userResultManager.toView(userTOs);\n                 }\n             } catch (final WebServiceException | SyncopeClientException ex) {\n-                userResultManager.generic(ex.getMessage(), SEARCH_HELP_MESSAGE);\n+                userResultManager.genericError(ex.getMessage());\n+                userResultManager.genericError(SEARCH_HELP_MESSAGE);\n             }\n         } else {\n             userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n         }\n     }\n-\n }"},{"sha":"c1c21823d8642abc14b50bafd2fd4de1fdb37218","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/CommandUtils.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -88,5 +88,4 @@ public static String helpMessage(final String command, final List<String> option\n     private CommandUtils() {\n \n     }\n-\n }"},{"sha":"aed3bd5ac4078d7c8003888736a0a1af4588d5b1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/FileSystemUtils.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -41,8 +41,13 @@ public static boolean canWrite(final String path) {\n         final File installationDirectory = new File(path);\n         return installationDirectory.canWrite();\n     }\n-    \n+\n+    public static boolean exists(final String path) {\n+        final File installationDirectory = new File(path);\n+        return installationDirectory.exists();\n+    }\n+\n     private FileSystemUtils() {\n-        \n+\n     }\n }"},{"sha":"c0af3b0122c8c6a9b48210558367a57636253b68","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/JasyptUtils.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -45,5 +45,4 @@ public String encrypt(final String password) {\n     public String decrypt(final String encryptedString) {\n         return textEncryptor.decrypt(encryptedString);\n     }\n-\n }"},{"sha":"c06252407ba4b13b66522395ebf097cc7ac5f0eb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/view/Messages.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FMessages.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d368c8b264e11e35d709365e39e663ede7bc57e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FMessages.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FMessages.java?ref=6d368c8b264e11e35d709365e39e663ede7bc57e","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.cli.view;\n \n+import java.util.List;\n+\n public final class Messages {\n \n     private static final String OPTION_COMMAND_MESSAGE_TEMPLATE = \"\\n - Usage: %s\\n\";\n@@ -87,7 +89,10 @@ public static void printTypeNotValidMessage(final String what, final String key,\n     public static void printDefaultMessage(final String option, final String helpMessage) {\n         printMessage(String.format(DEFAULT_MESSAGE_TEMPLATE, option, helpMessage));\n     }\n-\n+    \n+    public static void printUnnecessaryParameters(final List<String> parameters, final String helpMessage) {\n+        printMessage(\"Unnecessary parameter: \" + parameters, \"Usage: \" + helpMessage);\n+    }\n     private Messages() {\n \n     }"}]}