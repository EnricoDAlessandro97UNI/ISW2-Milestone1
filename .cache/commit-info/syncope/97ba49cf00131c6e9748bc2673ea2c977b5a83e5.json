{"sha":"97ba49cf00131c6e9748bc2673ea2c977b5a83e5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk3YmE0OWNmMDAxMzFjNmU5NzQ4YmMyNjczZWEyYzk3N2I1YTgzZTU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-09T11:16:27Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-09T11:16:27Z"},"message":"Missing stuff from former commit :-(\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247185 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c65e2e454be6105b4e840b2700fdb54ddd4e2968","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c65e2e454be6105b4e840b2700fdb54ddd4e2968"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/97ba49cf00131c6e9748bc2673ea2c977b5a83e5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/97ba49cf00131c6e9748bc2673ea2c977b5a83e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/97ba49cf00131c6e9748bc2673ea2c977b5a83e5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/comments","author":null,"committer":null,"parents":[{"sha":"add4f6a50152da0e60031820d63360da998cf662","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/add4f6a50152da0e60031820d63360da998cf662","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/add4f6a50152da0e60031820d63360da998cf662"}],"stats":{"total":49,"additions":8,"deletions":41},"files":[{"sha":"cf5f462e10797c9f71d5426dfcccbbaf3014fad4","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=97ba49cf00131c6e9748bc2673ea2c977b5a83e5","patch":"@@ -37,9 +37,6 @@ public enum SyncopeClientExceptionType {\n     InvalidSyncPolicy(\n     \"Syncope.InvalidPolicy\",\n     \"Syncope.InvalidPolicy.reason\"),\n-    IncompletePropagationTaskExec(\n-    \"Syncope.IncompletePropagationTaskExec\",\n-    \"Syncope.IncompletePropagationTaskExec.id\"),\n     InvalidRoles(\n     \"Syncope.InvalidRoles\",\n     \"Syncope.InvalidRoles.name\"),"},{"sha":"aafc41c96d5554c1b6f29c20c4868be85bc50522","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=97ba49cf00131c6e9748bc2673ea2c977b5a83e5","patch":"@@ -739,7 +739,7 @@ public TaskExec execute(final PropagationTask task) {\n         final Date startDate = new Date();\n \n         TaskExec execution = new TaskExec();\n-        execution.setStatus(PropagationTaskExecStatus.CREATED.toString());\n+        execution.setStatus(PropagationTaskExecStatus.CREATED.name());\n \n         String taskExecutionMessage = null;\n \n@@ -831,8 +831,8 @@ public TaskExec execute(final PropagationTask task) {\n \n             execution.setStatus(\n                     task.getPropagationMode() == PropagationMode.SYNC\n-                    ? PropagationTaskExecStatus.SUCCESS.toString()\n-                    : PropagationTaskExecStatus.SUBMITTED.toString());\n+                    ? PropagationTaskExecStatus.SUCCESS.name()\n+                    : PropagationTaskExecStatus.SUBMITTED.name());\n \n             LOG.debug(\"Successfully propagated to resource {}\",\n                     task.getResource());\n@@ -852,8 +852,8 @@ public TaskExec execute(final PropagationTask task) {\n             try {\n                 execution.setStatus(\n                         task.getPropagationMode() == PropagationMode.SYNC\n-                        ? PropagationTaskExecStatus.FAILURE.toString()\n-                        : PropagationTaskExecStatus.UNSUBMITTED.toString());\n+                        ? PropagationTaskExecStatus.FAILURE.name()\n+                        : PropagationTaskExecStatus.UNSUBMITTED.name());\n             } catch (Throwable wft) {\n                 LOG.error(\"While executing KO action on {}\", execution, wft);\n             }"},{"sha":"bf4413fe3af833ab4dec41a8e8404f40b4be29ac","filename":"core/src/main/java/org/syncope/core/rest/controller/TaskController.java","status":"modified","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=97ba49cf00131c6e9748bc2673ea2c977b5a83e5","patch":"@@ -485,24 +485,6 @@ public void deleteExecution(@PathVariable(\"executionId\") Long executionId)\n             throw new NotFoundException(\"Task execution \" + executionId);\n         }\n \n-        if (PropagationTaskExecStatus.CREATED.toString().equals(\n-                execution.getStatus())\n-                || PropagationTaskExecStatus.SUBMITTED.toString().equals(\n-                execution.getStatus())) {\n-\n-            SyncopeClientException incompleteTaskExecution =\n-                    new SyncopeClientException(\n-                    SyncopeClientExceptionType.IncompletePropagationTaskExec);\n-            incompleteTaskExecution.addElement(\n-                    execution.getId().toString());\n-\n-            SyncopeClientCompositeErrorException scce =\n-                    new SyncopeClientCompositeErrorException(\n-                    HttpStatus.BAD_REQUEST);\n-            scce.addException(incompleteTaskExecution);\n-            throw scce;\n-        }\n-\n         taskExecDAO.delete(execution);\n     }\n }"},{"sha":"658b887de292af50e26172e6adb3cac56cdcbddc","filename":"core/src/test/java/org/syncope/core/persistence/relationships/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java?ref=97ba49cf00131c6e9748bc2673ea2c977b5a83e5","patch":"@@ -98,7 +98,7 @@ public final void addPropagationTaskExecution() {\n \n         TaskExec execution = new TaskExec();\n         execution.setTask(task);\n-        execution.setStatus(PropagationTaskExecStatus.CREATED.toString());\n+        execution.setStatus(PropagationTaskExecStatus.CREATED.name());\n         task.addExec(execution);\n         execution.setStartDate(new Date());\n "},{"sha":"cfdeca532834beb307542d6d3fc2ba2a43fd020c","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97ba49cf00131c6e9748bc2673ea2c977b5a83e5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=97ba49cf00131c6e9748bc2673ea2c977b5a83e5","patch":"@@ -26,9 +26,7 @@\n import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.to.TaskTO;\n-import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.types.PropagationTaskExecStatus;\n-import org.syncope.types.SyncopeClientExceptionType;\n \n public class TaskTestITCase extends AbstractTest {\n \n@@ -166,24 +164,14 @@ public final void deal() {\n         TaskExecTO execution = restTemplate.postForObject(\n                 BASE_URL + \"task/execute/{taskId}\", null,\n                 TaskExecTO.class, 1);\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED.toString(),\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED.name(),\n                 execution.getStatus());\n \n-        Exception exception = null;\n-        try {\n-            restTemplate.delete(BASE_URL + \"task/delete/{taskId}\", 1);\n-        } catch (SyncopeClientCompositeErrorException scce) {\n-            assertTrue(scce.hasException(\n-                    SyncopeClientExceptionType.IncompletePropagationTaskExec));\n-            exception = scce;\n-        }\n-        assertNotNull(exception);\n-\n         execution = restTemplate.getForObject(\n                 BASE_URL + \"task/execution/report/{executionId}\"\n                 + \"?executionStatus=SUCCESS&message=OK\",\n                 TaskExecTO.class, execution.getId());\n-        assertEquals(PropagationTaskExecStatus.SUCCESS.toString(),\n+        assertEquals(PropagationTaskExecStatus.SUCCESS.name(),\n                 execution.getStatus());\n         assertEquals(\"OK\", execution.getMessage());\n "}]}