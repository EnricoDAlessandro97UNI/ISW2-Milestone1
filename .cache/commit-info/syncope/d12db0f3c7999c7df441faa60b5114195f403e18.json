{"sha":"d12db0f3c7999c7df441faa60b5114195f403e18","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQxMmRiMGYzYzc5OTljN2RmNDQxZmFhNjBiNTExNDE5NWY0MDNlMTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-13T13:58:59Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-13T13:58:59Z"},"message":"[SYNCOPE-502] Implementation provided for both core and console\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1602430 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"38314a1bf09defa2044d6e9b1122f5babc265039","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/38314a1bf09defa2044d6e9b1122f5babc265039"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d12db0f3c7999c7df441faa60b5114195f403e18","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d12db0f3c7999c7df441faa60b5114195f403e18","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d12db0f3c7999c7df441faa60b5114195f403e18","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d12db0f3c7999c7df441faa60b5114195f403e18/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7450a07e98f0ee3f197d277701c1d60e09b1dc73","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7450a07e98f0ee3f197d277701c1d60e09b1dc73","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7450a07e98f0ee3f197d277701c1d60e09b1dc73"}],"stats":{"total":1171,"additions":757,"deletions":414},"files":[{"sha":"64adf2301ee0d568dfe9107883bf12fb2d92ae62","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractSyncTaskTO.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSyncTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSyncTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSyncTaskTO.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -18,6 +18,8 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlSeeAlso;\r\n import javax.xml.bind.annotation.XmlType;\r\n@@ -41,12 +43,12 @@ public class AbstractSyncTaskTO extends SchedTaskTO {\n \r\n     private boolean syncStatus;\r\n \r\n-    private String actionsClassName;\r\n-\r\n     private UnmatchingRule unmatchigRule;\r\n \r\n     private MatchingRule matchigRule;\r\n \r\n+    private List<String> actionsClassNames = new ArrayList<String>();\r\n+\r\n     public String getResource() {\r\n         return resource;\r\n     }\r\n@@ -87,12 +89,8 @@ public void setSyncStatus(boolean syncStatus) {\n         this.syncStatus = syncStatus;\r\n     }\r\n \r\n-    public String getActionsClassName() {\r\n-        return actionsClassName;\r\n-    }\r\n-\r\n-    public void setActionsClassName(final String actionsClassName) {\r\n-        this.actionsClassName = actionsClassName;\r\n+    public List<String> getActionsClassNames() {\r\n+        return actionsClassNames;\r\n     }\r\n \r\n     public UnmatchingRule getUnmatchigRule() {\r"},{"sha":"b5f8485c0ae8ba824cdeac7a21144c71baee0a08","filename":"common/src/main/java/org/apache/syncope/common/to/ResourceTO.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FResourceTO.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -19,7 +19,9 @@\n package org.apache.syncope.common.to;\r\n \r\n import com.fasterxml.jackson.annotation.JsonProperty;\r\n+import java.util.ArrayList;\r\n import java.util.HashSet;\r\n+import java.util.List;\r\n import java.util.Set;\r\n import javax.xml.bind.annotation.XmlElement;\r\n import javax.xml.bind.annotation.XmlElementWrapper;\r\n@@ -84,7 +86,7 @@ public class ResourceTO extends AbstractSysInfoTO {\n \r\n     private String rsyncToken;\r\n \r\n-    private String propagationActionsClassName;\r\n+    private List<String> propagationActionsClassNames = new ArrayList<String>();\r\n \r\n     public ResourceTO() {\r\n         super();\r\n@@ -258,11 +260,8 @@ public void setRsyncToken(final String syncToken) {\n         this.rsyncToken = syncToken;\r\n     }\r\n \r\n-    public String getPropagationActionsClassName() {\r\n-        return propagationActionsClassName;\r\n+    public List<String> getPropagationActionsClassNames() {\r\n+        return propagationActionsClassNames;\r\n     }\r\n \r\n-    public void setPropagationActionsClassName(final String propagationActionsClassName) {\r\n-        this.propagationActionsClassName = propagationActionsClassName;\r\n-    }\r\n }\r"},{"sha":"8f7530004f72afea2f3bc6652454a1aba3f3b124","filename":"console/src/main/java/org/apache/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":161,"deletions":85,"changes":246,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.types.CipherAlgorithm;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.JexlHelpUtil;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n@@ -77,102 +78,98 @@ public void setSchemaModalPage(final PageReference pageRef, final ModalWindow wi\n         final Form<SchemaTO> schemaForm = new Form<SchemaTO>(FORM);\n \n         schemaForm.setModel(new CompoundPropertyModel<SchemaTO>(schema));\n-        schemaForm.setOutputMarkupId(Boolean.TRUE);\n+        schemaForm.setOutputMarkupId(true);\n \n         final AjaxTextFieldPanel name =\n                 new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(schema, \"name\"));\n-\n         name.addRequiredLabel();\n         name.setEnabled(createFlag);\n-\n-        final AjaxTextFieldPanel conversionPattern = new AjaxTextFieldPanel(\"conversionPattern\",\n-                getString(\"conversionPattern\"), new PropertyModel<String>(schema, \"conversionPattern\"));\n-\n-        final IModel<List<String>> validatorsList = new LoadableDetachableModel<List<String>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<String> load() {\n-                return schemaRestClient.getAllValidatorClasses();\n-            }\n-        };\n-\n-        final AjaxDropDownChoicePanel<String> validatorClass = new AjaxDropDownChoicePanel<String>(\"validatorClass\",\n-                getString(\"validatorClass\"), new PropertyModel<String>(schema, \"validatorClass\"));\n-\n-        ((DropDownChoice) validatorClass.getField()).setNullValid(true);\n-        validatorClass.setChoices(validatorsList.getObject());\n+        schemaForm.add(name);\n \n         final AjaxDropDownChoicePanel<AttributeSchemaType> type = new AjaxDropDownChoicePanel<AttributeSchemaType>(\n                 \"type\", getString(\"type\"), new PropertyModel<AttributeSchemaType>(schema, \"type\"));\n         type.setChoices(Arrays.asList(AttributeSchemaType.values()));\n         type.addRequiredLabel();\n+        schemaForm.add(type);\n+\n+        // -- long, double, date\n+        final AjaxTextFieldPanel conversionPattern = new AjaxTextFieldPanel(\"conversionPattern\",\n+                getString(\"conversionPattern\"), new PropertyModel<String>(schema, \"conversionPattern\"));\n+        schemaForm.add(conversionPattern);\n+\n+        final WebMarkupContainer conversionParams = new WebMarkupContainer(\"conversionParams\");\n+        conversionParams.setOutputMarkupPlaceholderTag(true);\n+        conversionParams.add(conversionPattern);\n+        schemaForm.add(conversionParams);\n \n+        // -- enum\n         final AjaxTextFieldPanel enumerationValuesPanel =\n                 new AjaxTextFieldPanel(\"panel\", \"enumerationValues\", new Model<String>(null));\n         @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-        final MultiFieldPanel<String> enumerationValues =\n-                new MultiFieldPanel<String>(\"enumerationValues\",\n-                        new Model(),\n-                        enumerationValuesPanel);\n-        schemaForm.add(enumerationValues);\n-\n+        final MultiFieldPanel<String> enumerationValues = new MultiFieldPanel<String>(\"enumerationValues\",\n+                new Model(),\n+                enumerationValuesPanel);\n         enumerationValues.setModelObject(getEnumValuesAsList(schema.getEnumerationValues()));\n \n         @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-        final MultiFieldPanel<String> enumerationKeys =\n-                new MultiFieldPanel<String>(\"enumerationKeys\",\n-                        new Model(),\n-                        new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model<String>(null)));\n-        schemaForm.add(enumerationKeys);\n-\n+        final MultiFieldPanel<String> enumerationKeys = new MultiFieldPanel<String>(\"enumerationKeys\",\n+                new Model(),\n+                new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model<String>(null)));\n         enumerationKeys.setModelObject(getEnumValuesAsList(schema.getEnumerationKeys()));\n \n-        if (AttributeSchemaType.Enum == schema.getType()) {\n-            enumerationValues.setEnabled(Boolean.TRUE);\n-            enumerationKeys.setEnabled(Boolean.TRUE);\n-            enumerationValuesPanel.addRequiredLabel();\n-        } else {\n-            enumerationValues.setEnabled(Boolean.FALSE);\n-            enumerationKeys.setEnabled(Boolean.FALSE);\n-        }\n-\n+        final WebMarkupContainer enumParams = new WebMarkupContainer(\"enumParams\");\n+        enumParams.setOutputMarkupPlaceholderTag(true);\n+        enumParams.add(enumerationValues);\n+        enumParams.add(enumerationKeys);\n+        schemaForm.add(enumParams);\n+\n+        // -- encrypted\n+        final AjaxTextFieldPanel secretKey = new AjaxTextFieldPanel(\"secretKey\",\n+                getString(\"secretKey\"), new PropertyModel<String>(schema, \"secretKey\"));\n+\n+        final AjaxDropDownChoicePanel<CipherAlgorithm> cipherAlgorithm = new AjaxDropDownChoicePanel<CipherAlgorithm>(\n+                \"cipherAlgorithm\", getString(\"cipherAlgorithm\"),\n+                new PropertyModel<CipherAlgorithm>(schema, \"cipherAlgorithm\"));\n+        cipherAlgorithm.setChoices(Arrays.asList(CipherAlgorithm.values()));\n+\n+        final WebMarkupContainer encryptedParams = new WebMarkupContainer(\"encryptedParams\");\n+        encryptedParams.setOutputMarkupPlaceholderTag(true);\n+        encryptedParams.add(secretKey);\n+        encryptedParams.add(cipherAlgorithm);\n+        schemaForm.add(encryptedParams);\n+\n+        showHide(schema, type,\n+                conversionParams, conversionPattern,\n+                enumParams, enumerationValuesPanel, enumerationValues, enumerationKeys,\n+                encryptedParams, secretKey, cipherAlgorithm);\n         type.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                if (AttributeSchemaType.Enum.ordinal() == Integer.parseInt(type.getField().getValue())) {\n-                    if (!enumerationValuesPanel.isRequired()) {\n-                        enumerationValuesPanel.addRequiredLabel();\n-                    }\n-                    enumerationValues.setEnabled(Boolean.TRUE);\n-                    enumerationValues.setModelObject(getEnumValuesAsList(schema.getEnumerationValues()));\n-\n-                    enumerationKeys.setEnabled(Boolean.TRUE);\n-                    enumerationKeys.setModelObject(getEnumValuesAsList(schema.getEnumerationKeys()));\n-                } else {\n-                    if (enumerationValuesPanel.isRequired()) {\n-                        enumerationValuesPanel.removeRequiredLabel();\n-                    }\n-                    final List<String> values = new ArrayList<String>();\n-                    values.add(\"\");\n-\n-                    enumerationValues.setEnabled(Boolean.FALSE);\n-                    enumerationValues.setModelObject(values);\n+                SchemaModalPage.this.showHide(schema, type,\n+                        conversionParams, conversionPattern,\n+                        enumParams, enumerationValuesPanel, enumerationValues, enumerationKeys,\n+                        encryptedParams, secretKey, cipherAlgorithm);\n+                target.add(schemaForm);\n+            }\n+        });\n \n-                    final List<String> keys = new ArrayList<String>();\n-                    keys.add(\"\");\n+        final IModel<List<String>> validatorsList = new LoadableDetachableModel<List<String>>() {\n \n-                    enumerationKeys.setEnabled(Boolean.FALSE);\n-                    enumerationKeys.setModelObject(keys);\n-                }\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                target.add(schemaForm);\n+            @Override\n+            protected List<String> load() {\n+                return schemaRestClient.getAllValidatorClasses();\n             }\n-        });\n+        };\n+        final AjaxDropDownChoicePanel<String> validatorClass = new AjaxDropDownChoicePanel<String>(\"validatorClass\",\n+                getString(\"validatorClass\"), new PropertyModel<String>(schema, \"validatorClass\"));\n+        ((DropDownChoice) validatorClass.getField()).setNullValid(true);\n+        validatorClass.setChoices(validatorsList.getObject());\n+        schemaForm.add(validatorClass);\n \n         final AutoCompleteTextField<String> mandatoryCondition =\n                 new AutoCompleteTextField<String>(\"mandatoryCondition\") {\n@@ -185,10 +182,7 @@ protected Iterator<String> getChoices(final String input) {\n \n                         if (Strings.isEmpty(input)) {\n                             choices = Collections.emptyList();\n-                            return choices.iterator();\n-                        }\n-\n-                        if (\"true\".startsWith(input.toLowerCase())) {\n+                        } else if (\"true\".startsWith(input.toLowerCase())) {\n                             choices.add(\"true\");\n                         } else if (\"false\".startsWith(input.toLowerCase())) {\n                             choices.add(\"false\");\n@@ -197,7 +191,6 @@ protected Iterator<String> getChoices(final String input) {\n                         return choices.iterator();\n                     }\n                 };\n-\n         mandatoryCondition.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n@@ -206,6 +199,7 @@ protected Iterator<String> getChoices(final String input) {\n             protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n+        schemaForm.add(mandatoryCondition);\n \n         final WebMarkupContainer pwdJexlHelp = JexlHelpUtil.getJexlHelpWebContainer(\"jexlHelp\");\n \n@@ -215,12 +209,15 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         final AjaxCheckBoxPanel multivalue = new AjaxCheckBoxPanel(\"multivalue\", getString(\"multivalue\"),\n                 new PropertyModel<Boolean>(schema, \"multivalue\"));\n+        schemaForm.add(multivalue);\n \n         final AjaxCheckBoxPanel readonly = new AjaxCheckBoxPanel(\"readonly\", getString(\"readonly\"),\n                 new PropertyModel<Boolean>(schema, \"readonly\"));\n+        schemaForm.add(readonly);\n \n         final AjaxCheckBoxPanel uniqueConstraint = new AjaxCheckBoxPanel(\"uniqueConstraint\",\n                 getString(\"uniqueConstraint\"), new PropertyModel<Boolean>(schema, \"uniqueConstraint\"));\n+        schemaForm.add(uniqueConstraint);\n \n         final AjaxButton submit = new IndicatingAjaxButton(APPLY, new ResourceModel(SUBMIT)) {\n \n@@ -261,6 +258,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 feedbackPanel.refresh(target);\n             }\n         };\n+        schemaForm.add(submit);\n \n         final AjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n \n@@ -271,28 +269,106 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 window.close(target);\n             }\n         };\n-\n         cancel.setDefaultFormProcessing(false);\n+        schemaForm.add(cancel);\n \n         String allowedRoles = createFlag\n                 ? xmlRolesReader.getAllAllowedRoles(\"Schema\", \"create\")\n                 : xmlRolesReader.getAllAllowedRoles(\"Schema\", \"update\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n \n-        schemaForm.add(name);\n-        schemaForm.add(conversionPattern);\n-        schemaForm.add(validatorClass);\n-        schemaForm.add(type);\n-        schemaForm.add(mandatoryCondition);\n-        schemaForm.add(multivalue);\n-        schemaForm.add(readonly);\n-        schemaForm.add(uniqueConstraint);\n+        add(schemaForm);\n+    }\n \n-        schemaForm.add(submit);\n-        schemaForm.add(cancel);\n+    private void showHide(final SchemaTO schema, final AjaxDropDownChoicePanel<AttributeSchemaType> type,\n+            final WebMarkupContainer conversionParams, final AjaxTextFieldPanel conversionPattern,\n+            final WebMarkupContainer enumParams, final AjaxTextFieldPanel enumerationValuesPanel,\n+            final MultiFieldPanel<String> enumerationValues, final MultiFieldPanel<String> enumerationKeys,\n+            final WebMarkupContainer encryptedParams,\n+            final AjaxTextFieldPanel secretKey, final AjaxDropDownChoicePanel<CipherAlgorithm> cipherAlgorithm) {\n \n-        add(schemaForm);\n+        final int typeOrdinal = Integer.parseInt(type.getField().getValue());\n+        if (AttributeSchemaType.Long.ordinal() == typeOrdinal || AttributeSchemaType.Double.ordinal() == typeOrdinal\n+                || AttributeSchemaType.Date.ordinal() == typeOrdinal) {\n+\n+            conversionParams.setVisible(true);\n+\n+            enumParams.setVisible(false);\n+            if (enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.removeRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+\n+            encryptedParams.setVisible(false);\n+            if (secretKey.isRequired()) {\n+                secretKey.removeRequiredLabel();\n+            }\n+            secretKey.setModelObject(null);\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.removeRequiredLabel();\n+            }\n+            cipherAlgorithm.setModelObject(null);\n+        } else if (AttributeSchemaType.Enum.ordinal() == typeOrdinal) {\n+            conversionParams.setVisible(false);\n+            conversionPattern.setModelObject(null);\n+\n+            enumParams.setVisible(true);\n+            if (!enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.addRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(schema.getEnumerationValues()));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(schema.getEnumerationKeys()));\n+\n+            encryptedParams.setVisible(false);\n+            if (secretKey.isRequired()) {\n+                secretKey.removeRequiredLabel();\n+            }\n+            secretKey.setModelObject(null);\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.removeRequiredLabel();\n+            }\n+            cipherAlgorithm.setModelObject(null);\n+        } else if (AttributeSchemaType.Encrypted.ordinal() == typeOrdinal) {\n+            conversionParams.setVisible(false);\n+            conversionPattern.setModelObject(null);\n+\n+            enumParams.setVisible(false);\n+            if (enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.removeRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+\n+            encryptedParams.setVisible(true);\n+            if (!secretKey.isRequired()) {\n+                secretKey.addRequiredLabel();\n+            }\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.addRequiredLabel();\n+            }\n+        } else {\n+            conversionParams.setVisible(false);\n+            conversionPattern.setModelObject(null);\n+\n+            enumParams.setVisible(false);\n+            if (enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.removeRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+\n+            encryptedParams.setVisible(false);\n+            if (secretKey.isRequired()) {\n+                secretKey.removeRequiredLabel();\n+            }\n+            secretKey.setModelObject(null);\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.removeRequiredLabel();\n+            }\n+            cipherAlgorithm.setModelObject(null);\n+        }\n     }\n \n     private String getEnumValuesAsString(final List<String> enumerationValues) {\n@@ -319,7 +395,7 @@ private List<String> getEnumValuesAsList(final String enumerationValues) {\n                 values.add(value.trim());\n             }\n         } else {\n-            values.add(\"\");\n+            values.add(StringUtils.EMPTY);\n         }\n \n         return values;"},{"sha":"948f8d6fd9539035e69722244198ae50364cb822","filename":"console/src/main/java/org/apache/syncope/console/pages/SyncTaskModalPage.java","status":"modified","additions":87,"deletions":5,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -20,15 +20,26 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.SyncTaskTO;\n+import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.SelectChoiceRenderer;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n \n /**\n@@ -68,11 +79,82 @@ protected List<String> load() {\n \n         profile.add(resource);\n \n-        final AjaxDropDownChoicePanel<String> actionsClassName = new AjaxDropDownChoicePanel<String>(\n-                \"actionsClassName\", getString(\"actionsClass\"), new PropertyModel<String>(taskTO, \"actionsClassName\"));\n-        actionsClassName.setChoices(taskRestClient.getSyncActionsClasses());\n-        actionsClassName.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n-        profile.add(actionsClassName);\n+        final WebMarkupContainer syncActionsClassNames = new WebMarkupContainer(\"syncActionsClassNames\");\n+        syncActionsClassNames.setOutputMarkupId(true);\n+        profile.add(syncActionsClassNames);\n+\n+        final AjaxLink<Void> first = new IndicatingAjaxLink<Void>(\"first\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                taskTO.getActionsClassNames().add(StringUtils.EMPTY);\n+                setVisible(false);\n+                target.add(syncActionsClassNames);\n+            }\n+        };\n+        first.setOutputMarkupPlaceholderTag(true);\n+        first.setVisible(taskTO.getActionsClassNames().isEmpty());\n+        syncActionsClassNames.add(first);\n+\n+        final ListView<String> actionsClasses = new ListView<String>(\"actionsClasses\",\n+                new PropertyModel<List<String>>(taskTO, \"actionsClassNames\")) {\n+\n+                    private static final long serialVersionUID = 9101744072914090143L;\n+\n+                    @Override\n+                    protected void populateItem(final ListItem<String> item) {\n+                        final String className = item.getModelObject();\n+\n+                        final DropDownChoice<String> actionsClass = new DropDownChoice<String>(\n+                                \"actionsClass\", new Model<String>(className), taskRestClient.getSyncActionsClasses());\n+                        actionsClass.setNullValid(true);\n+                        actionsClass.setRequired(true);\n+                        actionsClass.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n+\n+                            private static final long serialVersionUID = -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(final AjaxRequestTarget target) {\n+                                taskTO.getActionsClassNames().\n+                                set(item.getIndex(), actionsClass.getModelObject());\n+                            }\n+                        });\n+                        actionsClass.setRequired(true);\n+                        actionsClass.setOutputMarkupId(true);\n+                        actionsClass.setRequired(true);\n+                        item.add(actionsClass);\n+\n+                        AjaxLink<Void> minus = new IndicatingAjaxLink<Void>(\"drop\") {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target) {\n+                                taskTO.getActionsClassNames().remove(className);\n+                                first.setVisible(taskTO.getActionsClassNames().isEmpty());\n+                                target.add(syncActionsClassNames);\n+                            }\n+                        };\n+                        item.add(minus);\n+\n+                        final AjaxLink<Void> plus = new IndicatingAjaxLink<Void>(\"add\") {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target) {\n+                                taskTO.getActionsClassNames().add(StringUtils.EMPTY);\n+                                target.add(syncActionsClassNames);\n+                            }\n+                        };\n+                        plus.setOutputMarkupPlaceholderTag(true);\n+                        plus.setVisible(item.getIndex() == taskTO.getActionsClassNames().size() - 1);\n+                        item.add(plus);\n+                    }\n+                };\n+        syncActionsClassNames.add(actionsClasses);\n \n         final AjaxCheckBoxPanel creates = new AjaxCheckBoxPanel(\"performCreate\", getString(\"creates\"),\n                 new PropertyModel<Boolean>(taskTO, \"performCreate\"));"},{"sha":"dfb664b6a23783a3d011c4dca5072139998a1b69","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/DerivedAttributesPanel.java","status":"modified","additions":46,"deletions":51,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -127,75 +127,70 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 target.add(attributesContainer);\n             }\n         };\n-\n-        add(addAttributeBtn.setDefaultFormProcessing(Boolean.FALSE));\n+        add(addAttributeBtn.setDefaultFormProcessing(false));\n \n         ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attrs\",\n                 new PropertyModel<List<? extends AttributeTO>>(entityTO, \"derAttrs\")) {\n \n-            private static final long serialVersionUID = 9101744072914090143L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<AttributeTO> item) {\n-                final AttributeTO attributeTO = item.getModelObject();\n-\n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model<Boolean>(Boolean.FALSE)) {\n-\n-                    private static final long serialVersionUID = 7170946748485726506L;\n+                    private static final long serialVersionUID = 9101744072914090143L;\n \n                     @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        entityTO.getDerAttrs().remove(attributeTO);\n-                        target.add(attributesContainer);\n-                    }\n+                    protected void populateItem(final ListItem<AttributeTO> item) {\n+                        final AttributeTO attributeTO = item.getModelObject();\n \n-                    @Override\n-                    protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n-                        super.updateAjaxAttributes(attributes);\n-\n-                        IAjaxCallListener ajaxCallListener = new AjaxCallListener() {\n+                        item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model<Boolean>(Boolean.FALSE)) {\n \n-                            private static final long serialVersionUID = 7160235486520935153L;\n+                            private static final long serialVersionUID = 7170946748485726506L;\n \n                             @Override\n-                            public CharSequence getPrecondition(final Component component) {\n-                                return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) return false;\";\n+                            protected void onUpdate(final AjaxRequestTarget target) {\n+                                entityTO.getDerAttrs().remove(attributeTO);\n+                                target.add(attributesContainer);\n                             }\n-                        };\n-                        attributes.getAjaxCallListeners().add(ajaxCallListener);\n-                    }\n-                });\n \n-                final DropDownChoice<String> schemaChoice = new DropDownChoice<String>(\"schema\",\n-                        new PropertyModel<String>(attributeTO, \"schema\"), derSchemas);\n-\n-                schemaChoice.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n+                            @Override\n+                            protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n+                                super.updateAjaxAttributes(attributes);\n \n-                    private static final long serialVersionUID = -1107858522700306810L;\n+                                IAjaxCallListener ajaxCallListener = new AjaxCallListener() {\n \n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        attributeTO.setSchema(schemaChoice.getModelObject());\n-                    }\n-                });\n+                                    private static final long serialVersionUID = 7160235486520935153L;\n \n-                item.add(schemaChoice.setRequired(true));\n+                                    @Override\n+                                    public CharSequence getPrecondition(final Component component) {\n+                                        return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) return false;\";\n+                                    }\n+                                };\n+                                attributes.getAjaxCallListeners().add(ajaxCallListener);\n+                            }\n+                        });\n \n-                schemaChoice.setOutputMarkupId(true);\n-                schemaChoice.setRequired(true);\n-                item.add(schemaChoice);\n+                        final DropDownChoice<String> schemaChoice = new DropDownChoice<String>(\"schema\",\n+                                new PropertyModel<String>(attributeTO, \"schema\"), derSchemas);\n+                        schemaChoice.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n \n-                final List<String> values = attributeTO.getValues();\n-                if (values == null || values.isEmpty()) {\n-                    item.add(new TextField<String>(\"value\",\n-                            new Model<String>(null)).setVisible(Boolean.FALSE));\n-                } else {\n-                    item.add(new TextField<String>(\"value\",\n-                            new Model<String>(values.get(0))).setEnabled(Boolean.FALSE));\n-                }\n-            }\n-        };\n+                            private static final long serialVersionUID = -1107858522700306810L;\n \n+                            @Override\n+                            protected void onUpdate(final AjaxRequestTarget target) {\n+                                attributeTO.setSchema(schemaChoice.getModelObject());\n+                            }\n+                        });\n+                        schemaChoice.setRequired(true);\n+                        schemaChoice.setOutputMarkupId(true);\n+                        schemaChoice.setRequired(true);\n+                        item.add(schemaChoice);\n+\n+                        final List<String> values = attributeTO.getValues();\n+                        if (values == null || values.isEmpty()) {\n+                            item.add(new TextField<String>(\"value\",\n+                                            new Model<String>(null)).setVisible(false));\n+                        } else {\n+                            item.add(new TextField<String>(\"value\",\n+                                            new Model<String>(values.get(0))).setEnabled(false));\n+                        }\n+                    }\n+                };\n         attributesContainer.add(attributes);\n     }\n "},{"sha":"0ad2849fc7bfa0c67a3cb48088ea0fe17ea61e8f","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceDetailsPanel.java","status":"modified","additions":84,"deletions":7,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.types.PropagationMode;\n@@ -33,8 +34,14 @@\n import org.apache.syncope.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n@@ -52,7 +59,7 @@ public class ResourceDetailsPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(ResourceDetailsPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ResourceDetailsPanel.class);\n \n     @SpringBean\n     private ConnectorRestClient connRestClient;\n@@ -98,12 +105,82 @@ public ResourceDetailsPanel(final String id, final ResourceTO resourceTO, final\n                 new PropertyModel<Boolean>(resourceTO, \"randomPwdIfNotProvided\"));\n         add(randomPwdIfNotProvided);\n \n-        final AjaxDropDownChoicePanel<String> actionsClassName = new AjaxDropDownChoicePanel<String>(\n-                \"propagationActionsClassName\", new ResourceModel(\"actionsClass\", \"actionsClass\").getObject(),\n-                new PropertyModel<String>(resourceTO, \"propagationActionsClassName\"));\n-        actionsClassName.setChoices(actionClassNames);\n-        actionsClassName.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n-        add(actionsClassName);\n+        final WebMarkupContainer propagationActionsClassNames = new WebMarkupContainer(\"propagationActionsClassNames\");\n+        propagationActionsClassNames.setOutputMarkupId(true);\n+        add(propagationActionsClassNames);\n+\n+        final AjaxLink<Void> first = new IndicatingAjaxLink<Void>(\"first\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                resourceTO.getPropagationActionsClassNames().add(StringUtils.EMPTY);\n+                setVisible(false);\n+                target.add(propagationActionsClassNames);\n+            }\n+        };\n+        first.setOutputMarkupPlaceholderTag(true);\n+        first.setVisible(resourceTO.getPropagationActionsClassNames().isEmpty());\n+        propagationActionsClassNames.add(first);\n+\n+        final ListView<String> actionsClasses = new ListView<String>(\"actionsClasses\",\n+                new PropertyModel<List<String>>(resourceTO, \"propagationActionsClassNames\")) {\n+\n+                    private static final long serialVersionUID = 9101744072914090143L;\n+\n+                    @Override\n+                    protected void populateItem(final ListItem<String> item) {\n+                        final String className = item.getModelObject();\n+\n+                        final DropDownChoice<String> actionsClass = new DropDownChoice<String>(\n+                                \"actionsClass\", new Model<String>(className), actionClassNames);\n+                        actionsClass.setNullValid(true);\n+                        actionsClass.setRequired(true);\n+                        actionsClass.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n+\n+                            private static final long serialVersionUID = -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(final AjaxRequestTarget target) {\n+                                resourceTO.getPropagationActionsClassNames().\n+                                set(item.getIndex(), actionsClass.getModelObject());\n+                            }\n+                        });\n+                        actionsClass.setRequired(true);\n+                        actionsClass.setOutputMarkupId(true);\n+                        actionsClass.setRequired(true);\n+                        item.add(actionsClass);\n+\n+                        AjaxLink<Void> minus = new IndicatingAjaxLink<Void>(\"drop\") {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target) {\n+                                resourceTO.getPropagationActionsClassNames().remove(className);\n+                                first.setVisible(resourceTO.getPropagationActionsClassNames().isEmpty());\n+                                target.add(propagationActionsClassNames);\n+                            }\n+                        };\n+                        item.add(minus);\n+\n+                        final AjaxLink<Void> plus = new IndicatingAjaxLink<Void>(\"add\") {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target) {\n+                                resourceTO.getPropagationActionsClassNames().add(StringUtils.EMPTY);\n+                                target.add(propagationActionsClassNames);\n+                            }\n+                        };\n+                        plus.setOutputMarkupPlaceholderTag(true);\n+                        plus.setVisible(item.getIndex() == resourceTO.getPropagationActionsClassNames().size() - 1);\n+                        item.add(plus);\n+                    }\n+                };\n+        propagationActionsClassNames.add(actionsClasses);\n \n         final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n                 \"createTraceLevel\", new ResourceModel(\"createTraceLevel\", \"createTraceLevel\").getObject(),"},{"sha":"9db9e891fa9b457e0c551256f347d0ab1f33da03","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourcesPanel.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -110,14 +110,10 @@ private ResourcesPanel(final Builder builder) {\n                     new PropertyModel<List<String>>(attributableTO, \"resources\"),\n                     new ListModel<String>(allResources), builder.statusPanel);\n         } else if (attributableTO instanceof RoleTO) {\n-            List<String> selectedResources = new ArrayList<String>(((RoleTO) attributableTO).getResources());\n-            Collections.sort(selectedResources);\n-\n             resourcesPalette = new AjaxPalettePanel<String>(\"resourcesPalette\",\n                     new PropertyModel<List<String>>(attributableTO, \"resources\"), new ListModel<String>(allResources));\n         }\n         add(resourcesPalette);\n-\n     }\n \n     private class AjaxRecordingPalettePanel<T> extends AjaxPalettePanel<T> {"},{"sha":"0812a80a34dfc92217764f2d446bf5e7ac2cc238","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -56,7 +56,7 @@ resetToken=Reset token\n success_connection=Successful connection\n error_connection=Connection failure\n check=Check connection\n-actionsClass=Actions class\n+actionsClasses=Actions classes\n rmapping=Role mapping\n new=New\n randomPwdIfNotProvided=Generate random passwords when missing"},{"sha":"ab3b73eb5331da4d548bbe886e0693a0f36b5fe8","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -57,8 +57,7 @@ resetToken=Reset token\n success_connection=Connessione avvenuta con successo\n error_connection=Connessione non riuscita\n check=Verifica connessione\n-actionsClass=Classe azioni\n+actionsClasses=Classi azioni\n rmapping=Mapping ruoli\n new=Nuova\n-randomPwdIfNotProvided=GGenera password casuali se mancanti\n-enera password casuali se mancanti\n+randomPwdIfNotProvided=Genera password casuali se mancanti"},{"sha":"d27f58b43e114402696b25cd3870f6302d70759b","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage_pt_BR.properties","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -15,48 +15,48 @@\n # specific language governing permissions and limitations\n # under the License.\n resource=Detalhes de Recursos\n-umapping=Mapeamento de usu\\u00E1rios\n+umapping=Mapeamento de usu\\u00e1rios\n connectorProperties=Propriedades de Conectores\n-security=Seguran\\u00E7a\n+security=Seguran\\u00e7a\n create_attribute=Criar novo recurso\n-required_alert=Todos os campos deste formul\\u00E1rio s\\u00E3o obrigat\\u00F3rios\n+required_alert=Todos os campos deste formul\\u00e1rio s\\u00e3o obrigat\\u00f3rios\n connector=Conector\n existing_resources=Recursos Existentes\n-action=A\\u00E7\\u00E3o\n+action=A\\u00e7\\u00e3o\n edit_attribute=Alterar Recurso\n title=Recurso\n extAttrNames=Atributos Externos\n intMappingTypes=Tipos internos de mapeamentos\n entity=Entidade\n-roleSchema=Esquema de Fun\\u00E7\\u00E3o\n+roleSchema=Esquema de Fun\\u00e7\\u00e3o\n accountId=Identificador da Conta\n-mandatoryCondition=Obrigat\\u00F3rio\n+mandatoryCondition=Obrigat\\u00f3rio\n password=Senha\n-purpose=Prop\\u00F3sito\n-mappingUserSchema=Esquema de mapeamento de usu\\u00E1rio\n-mappingRoleSchema=Esquema de mapeamento de fun\\u00E7\\u00E3o\n+purpose=Prop\\u00f3sito\n+mappingUserSchema=Esquema de mapeamento de usu\\u00e1rio\n+mappingRoleSchema=Esquema de mapeamento de fun\\u00e7\\u00e3o\n delete=Excluir\n intAttrNames=Atributos internos\n-enforceMandatoryCondition=Aplicar condi\\u00E7\\u00E3o obrigat\\u00F3ria\n+enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria\n fieldName=Nome do Campo\n \n accountIdValidation=Precisa ser exatamente um Identificador de Conta\n-propagationMode=Modo de propaga\\u00E7\\u00E3o\n+propagationMode=Modo de propaga\\u00e7\\u00e3o\n accountLink=Link de Conta\n enable=Habilitado\n \n-createTraceLevel=Criar n\\u00EDvel de trace\n-updateTraceLevel=Atualizar n\\u00EDvel de trace\n-deleteTraceLevel=Excluir n\\u00EDvel de trace\n-syncTraceLevel=N\\u00EDvel de trace de sincroniza\\u00E7\\u00E3o\n-propagationPriority=Prioridade de propaga\\u00E7\\u00E3o\n-propagationPrimary=Propaga\\u00E7\\u00E3o prim\\u00E1ria\n+createTraceLevel=Criar n\\u00edvel de trace\n+updateTraceLevel=Atualizar n\\u00edvel de trace\n+deleteTraceLevel=Excluir n\\u00edvel de trace\n+syncTraceLevel=N\\u00edvel de trace de sincroniza\\u00e7\\u00e3o\n+propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n+propagationPrimary=Propaga\\u00e7\\u00e3o prim\\u00e1ria\n resetToken=Resetar token\n \n-success_connection=Conex\\u00E3o com sucesso\n-error_connection=Conex\\u00E3o sem sucesso\n-check=Verificar a conex\\u00E3o\n-actionsClass=Classe de A\\u00E7\\u00F5es\n+success_connection=Conex\\u00e3o com sucesso\n+error_connection=Conex\\u00e3o sem sucesso\n+check=Verificar a conex\\u00e3o\n+actionsClasses=Classes de a\\u00e7\\u00f5es\n rmapping=Regra de Mapeamento\n new=novo\n-randomPwdIfNotProvided=Gerar senhas aleat\\u00F3rias quando n\\u00E3o houver\n+randomPwdIfNotProvided=Gerar senhas aleat\\u00f3rias quando n\\u00e3o houver"},{"sha":"e25c72fd64d8ad28a01be81ac6fb1dc018f2f8be","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage.html","status":"modified","additions":40,"deletions":18,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -40,30 +40,52 @@\n             </div>\n           </div>\n \n-          <div class=\"tablerow alt\">\n-            <div class=\"tablecolumn_label short_dynamicsize\">\n-              <label for=\"conversionPattern\"><wicket:message key=\"conversionPattern\"/></label>\n-            </div>\n-            <div class=\"tablecolumn_field medium_dynamicsize\">\n-              <span wicket:id=\"conversionPattern\">[conversionPattern]</span>\n+          <div wicket:id=\"conversionParams\">\n+            <div class=\"tablerow alt\">\n+              <div class=\"tablecolumn_label short_dynamicsize\">\n+                <label for=\"conversionPattern\"><wicket:message key=\"conversionPattern\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"conversionPattern\">[conversionPattern]</span>\n+              </div>\n             </div>\n           </div>\n \n-          <div class=\"tablerow\">\n-            <div class=\"tablecolumn_label short_dynamicsize\">\n-              <label for=\"enumerationValues\"><wicket:message key=\"enumerationValues\"/></label>\n-            </div>\n-            <div class=\"tablecolumn_field medium_dynamicsize\">\n-              <span wicket:id=\"enumerationValues\">[enumerationValues]</span>\n+          <div wicket:id=\"enumParams\">\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label short_dynamicsize\">\n+                <label for=\"enumerationValues\"><wicket:message key=\"enumerationValues\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"enumerationValues\">[enumerationValues]</span>\n+              </div>\n+            </div>\n+            <div class=\"tablerow alt\">\n+              <div class=\"tablecolumn_label short_dynamicsize\">\n+                <label for=\"enumerationKeys\"><wicket:message key=\"enumerationKeys\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"enumerationKeys\">[enumerationKeys]</span>\n+              </div>\n             </div>\n           </div>\n \n-          <div class=\"tablerow alt\">\n-            <div class=\"tablecolumn_label short_dynamicsize\">\n-              <label for=\"enumerationKeys\"><wicket:message key=\"enumerationKeys\"/></label>\n-            </div>\n-            <div class=\"tablecolumn_field medium_dynamicsize\">\n-              <span wicket:id=\"enumerationKeys\">[enumerationValues]</span>\n+          <div wicket:id=\"encryptedParams\">\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label short_dynamicsize\">\n+                <label for=\"secretKey\"><wicket:message key=\"secretKey\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"secretKey\">[secretKey]</span>\n+              </div>\n+            </div>\n+            <div class=\"tablerow alt\">\n+              <div class=\"tablecolumn_label short_dynamicsize\">\n+                <label for=\"cipherAlgorithm\"><wicket:message key=\"cipherAlgorithm\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"cipherAlgorithm\">[cipherAlgorithm]</span>\n+              </div>\n             </div>\n           </div>\n "},{"sha":"65edc7d730348d586f3cb7cff976083261cd358e","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -34,3 +34,5 @@ action=Action\n edit_attribute=Edit attribute\n title=Schema\n readonly=Read-only\n+secretKey=Secret key\n+cipherAlgorithm=Cipher algorithm"},{"sha":"85b59e8ef6d0ceda04033da4d7fbcf36081dce89","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage_it.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -27,10 +27,12 @@ multivalue=Multivalore\n type=Tipo\n validatorClass=Validatore\n conversionPattern=Conversion pattern\n-existing_schemas=Schema esistenti\n+existing_schemas=Schema esistenti:\n action=Azione\n edit_attribute=Modifica attributo\n title=Schema\n readonly=Read-only\n uniqueConstraint=Univoco\n multivalueAndUniqueConstr.validation=Le opzioni 'Multivalore' e 'Vincolo unique' non possono essere entrambe impostate\n+secretKey=Chiave segreta\n+cipherAlgorithm=Algoritmo di cifratura"},{"sha":"3fcbb21ede8d36f53b781510fcc6831769b320b1","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage_pt_BR.properties","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_pt_BR.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -16,21 +16,23 @@\n # under the License.\n tab1=Atributos\n tab2=Atributos derivados\n-tab3=Atributos de usu\\u00E1rios\n-tab4=Atributos derivados de usu\\u00E1rios\n+tab3=Atributos de usu\\u00e1rios\n+tab4=Atributos derivados de usu\\u00e1rios\n create_attribute=Criar novo atributo\n-required_alert=Todos os campos s\\u00E3o obrigat\\u00F3rios\n-mandatoryCondition=obrigat\\u00F3rio\n+required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n+mandatoryCondition=obrigat\\u00f3rio\n enumerationValues= Valores enumerados\n-enumerationKeys= R\\u00F3tulos de enumera\\u00E7\\u00E3o\n-uniqueConstraint=\\u00DAnico\n+enumerationKeys= R\\u00f3tulos de enumera\\u00e7\\u00e3o\n+uniqueConstraint=\\u00danico\n multivalue=Multivalorado\n-multivalueAndUniqueConstr.validation=As op\\u00E7\\u00F5es 'Multivalorado' e 'Restri\\u00E7\\u00E3o \\u00FAnica' n\\u00E3o podem serem ambas selecionadas\n+multivalueAndUniqueConstr.validation=As op\\u00e7\\u00f5es 'Multivalorado' e 'Restri\\u00e7\\u00e3o \\u00fanica' n\\u00e3o podem serem ambas selecionadas\n type=Tipo\n-validatorClass=Classe de Valida\\u00E7\\u00E3o\n-conversionPattern=Padr\\u00E3o de Convers\\u00E3o\n+validatorClass=Classe de Valida\\u00e7\\u00e3o\n+conversionPattern=Padr\\u00e3o de Convers\\u00e3o\n existing_schemas=Esquemas Existentes\\:\n-action=A\\u00E7\\u00E3o\n+action=A\\u00e7\\u00e3o\n edit_attribute=Editar Atributo\n title=Esquema\n readonly=Apenas leitura\n+secretKey=Chave secreta\n+cipherAlgorithm=Algoritmo de criptografia"},{"sha":"ade2335de3410b8cca5e65bdb63b9501e491733e","filename":"console/src/main/resources/org/apache/syncope/console/pages/SyncTaskModalPage.html","status":"modified","additions":12,"deletions":6,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -30,7 +30,7 @@\n             <li><a href=\"#executions\"><span><wicket:message key=\"executions\"/></span></a></li>\n           </ul>\n           <div id=\"profile\">\n-            <div id=\"users-contain\" class=\"ui-widget\">\n+            <div class=\"ui-widget\">\n               <span wicket:id=\"profile\">\n                 <div id=\"formtable\">\n \n@@ -90,11 +90,17 @@\n \n                   <div class=\"tablerow alt\">\n                     <div class=\"tablecolumn_label short_dynamicsize\">\n-                      <label for=\"actionsClassName\"><wicket:message key=\"actionsClass\"/></label>\n-                    </div>\n-                    <div class=\"tablecolumn_field medium_dynamicsize\">\n-                      <span wicket:id=\"actionsClassName\">[actionsClassName]</span>\n-                    </div>\n+                      <label for=\"actionsClassNames\"><wicket:message key=\"actionsClasses\"/></label>\n+                    </div>\n+                    <span wicket:id=\"syncActionsClassNames\">\n+                      <span wicket:id=\"actionsClasses\">\n+                        <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"actionsClass\"/>\n+                        <a wicket:id=\"drop\"><img src=\"img/minus-icon.png\" alt=\"remove icon\" class=\"drop_button\"/></a>\n+                        <a wicket:id=\"add\"><img src=\"img/plus-icon.png\" alt=\"add icon\" class=\"add_button\"/></a>\n+                        <br/>\n+                      </span>\n+                      <a wicket:id=\"first\"><img src=\"img/plus-icon.png\" alt=\"add icon\" class=\"add_button\"/></a>\n+                    </span>                         \n                   </div>\n \n                   <div class=\"tablerow\">"},{"sha":"44aed2a2ac7813437e4dade5b1a6de4866190903","filename":"console/src/main/resources/org/apache/syncope/console/pages/SyncTaskModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -38,4 +38,4 @@ creates=Create new identities\n deletes=Delete matching identities\n syncStatus=Synchronize user status\n fullReconciliation=Full reconciliation\n-actionsClass=Actions class\n+actionsClasses=Actions classes"},{"sha":"2fd29280f085117f1a4258a763cb7e44e1281e63","filename":"console/src/main/resources/org/apache/syncope/console/pages/SyncTaskModalPage_it.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -38,4 +38,5 @@ creates=Crea nuove identit\\u00e0\n deletes=Elimina identit\\u00e0 esistenti\n status=Sincronizza stato utente\n fullReconciliation=Riconciliazione totale\n-actionsClass=Classe azioni\n+actionsClasses=Classi azioni\n+syncStatus=Sincronizza stato utente"},{"sha":"ac4b078057d4ba37091103ddc2d2fa80486fd7ef","filename":"console/src/main/resources/org/apache/syncope/console/pages/SyncTaskModalPage_pt_BR.properties","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_pt_BR.properties?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -16,18 +16,18 @@\n # under the License.\n profile=Perfil\n crontab=Agenda\n-executions=Execu\\u00E7\\u00F5es\n+executions=Execu\\u00e7\\u00f5es\n title=Tarefas\n resourceName=Nome de Recursos\n name=Nome\n-description=Descri\\u00E7\\u00E3o\n-lastExec=\\u00DAltima Execu\\u00E7\\u00E3o\n-nextExec=Pr\\u00F3xima Execu\\u00E7\\u00E3o\n+description=Descri\\u00e7\\u00e3o\n+lastExec=\\u00daltima Execu\\u00e7\\u00e3o\n+nextExec=Pr\\u00f3xima Execu\\u00e7\\u00e3o\n updates=Atualizar Identidades correspondentes\n-cron=Agenda (segundos, minutos, horas, dias do m\\u00EAs, meses, dias da semana)\n+cron=Agenda (segundos, minutos, horas, dias do m\\u00eas, meses, dias da semana)\n templates=Remover tarefa agendada / usar template para agendar\n apply=Salvar\n-startDate=Data de In\\u00EDcio\n+startDate=Data de In\\u00edcio\n endDate=Data Final\n status=Estatus\n message=Mensagem\n@@ -36,6 +36,6 @@ showMessage=Mostrar\n chooseForTemplate=Usar um template\n creates=Criar Nova identidade\n deletes=Excluir identidades correspondentes\n-syncStatus=Sincronizar status de usu\\u00E1rio\n-fullReconciliation=Reconcilia\\u00E7\\u00E3o completa\n-actionsClass=Classes de a\\u00E7\\u00F5es\n+syncStatus=Sincronizar status de usu\\u00e1rio\n+fullReconciliation=Reconcilia\\u00e7\\u00e3o completa\n+actionsClasses=Classes de a\\u00e7\\u00f5es"},{"sha":"40d55ee6b2dc7769101c584e056d99795a2e948a","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/DerivedAttributesPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.html?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -33,15 +33,15 @@\n         <tr>\n           <td>\n             <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                   wicket:id=\"addAttributeBtn\" />\n+                   wicket:id=\"addAttributeBtn\"/>\n           </td>\n         </tr>\n       </tfoot>\n \n       <tbody wicket:id=\"derAttrContainer\">\n         <tr wicket:id=\"attrs\">\n           <td align=\"center\" valign=\"middle\">\n-            <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+            <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"toRemove\"/>\n           </td>\n \n           <td>"},{"sha":"611241a0329f8c4c537ccd16102e5e399db35342","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ResourceDetailsPanel.html","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -84,11 +84,17 @@\n \n       <div class=\"tablerow\">\n         <div class=\"tablecolumn_label short_dynamicsize\">\n-          <label for=\"propagationActionsClassName\"><wicket:message key=\"actionsClass\"/></label>\n-        </div>\n-        <div class=\"tablecolumn_field medium_dynamicsize\">\n-          <span wicket:id=\"propagationActionsClassName\">[propagationActionsClassName]</span>\n-        </div>\n+          <label for=\"propagationActionsClassNames\"><wicket:message key=\"actionsClasses\"/></label>\n+        </div>\n+        <span wicket:id=\"propagationActionsClassNames\">\n+          <span wicket:id=\"actionsClasses\">\n+            <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"actionsClass\"/>\n+            <a wicket:id=\"drop\"><img src=\"img/minus-icon.png\" alt=\"remove icon\" class=\"drop_button\"/></a>\n+            <a wicket:id=\"add\"><img src=\"img/plus-icon.png\" alt=\"add icon\" class=\"add_button\"/></a>\n+            <br/>\n+          </span>\n+          <a wicket:id=\"first\"><img src=\"img/plus-icon.png\" alt=\"add icon\" class=\"add_button\"/></a>\n+        </span>        \n       </div>\n \n       <div class=\"tablerow alt\">"},{"sha":"6f818eece99c285cef03d336965ffbda144ba0e2","filename":"console/src/main/webapp/img/down-icon.png","status":"modified","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fdown-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fdown-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fdown-icon.png?ref=d12db0f3c7999c7df441faa60b5114195f403e18"},{"sha":"1a4dbdfbc044b67b7e655751e0219d5bc9e7bd3f","filename":"console/src/main/webapp/img/up-icon.png","status":"modified","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fup-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fup-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fup-icon.png?ref=d12db0f3c7999c7df441faa60b5114195f403e18"},{"sha":"2bef48a069b1b998e04e9df726ff21246bfe5b99","filename":"core/pom.xml","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -742,6 +742,11 @@ under the License.\n           <groupId>com.h2database</groupId>\n           <artifactId>h2</artifactId>\n         </dependency>\n+        <dependency>\n+          <groupId>org.apache.openjpa</groupId>\n+          <artifactId>openjpa</artifactId>\n+          <version>${openjpa.version}</version>\n+        </dependency>        \n       </dependencies>\n \n       <build>\n@@ -772,7 +777,7 @@ under the License.\n                   <dependency>org.apache.geronimo.specs:geronimo-jpa_2.0_spec</dependency>\n                   <dependency>org.apache.geronimo.specs:geronimo-jms_1.1_spec</dependency>\n                   <dependency>org.apache.geronimo.specs:geronimo-jta_1.1_spec</dependency>\n-                  <dependency>javax.validation:validation-api</dependency>\n+                  <dependency>org.apache.geronimo.specs:geronimo-validation_1.0_spec</dependency>\n                   <dependency>net.sourceforge.serp:serp</dependency>\n                   <dependency>commons-pool:commons-pool</dependency>\n                   <dependency>commons-dbcp:commons-dbcp</dependency>"},{"sha":"73ba2498c78f1aae919b684199c288a52e3e779c","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":14,"deletions":26,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -19,7 +19,9 @@\n package org.apache.syncope.core.init;\n \n import java.text.ParseException;\n+import java.util.ArrayList;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n@@ -38,8 +40,6 @@\n import org.apache.syncope.core.quartz.TaskJob;\n import org.apache.syncope.core.report.ReportJob;\n import org.apache.syncope.core.sync.AbstractSyncActions;\n-import org.apache.syncope.core.sync.DefaultPushActions;\n-import org.apache.syncope.core.sync.DefaultSyncActions;\n import org.apache.syncope.core.sync.impl.AbstractSyncJob;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.quartz.Job;\n@@ -172,34 +172,22 @@ public void registerJob(final Task task, final String jobClassName, final String\n         // In case of synchronization job/task retrieve and set synchronization actions:\n         // actions cannot be changed at runtime but connector and synchronization policies (reloaded at execution time).\n         if (jobInstance instanceof AbstractSyncJob && task instanceof AbstractSyncTask) {\n-            final String jobActionsClassName = ((AbstractSyncTask) task).getActionsClassName();\n-\n-            try {\n-\n-                Class<?> syncActionsClass = Class.forName(jobActionsClassName);\n-\n-                final AbstractSyncActions<?> syncActions =\n-                        (AbstractSyncActions<?>) ApplicationContextProvider.getBeanFactory().\n-                        createBean(syncActionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n-\n-                // Assume that syncActions object implements the right interface: \n-                // * SyncActions for a SyncJob; \n-                // * PushActions for a PushJob.\n-                ((AbstractSyncJob) jobInstance).setActions(syncActions);\n-\n-            } catch (Exception e) {\n-                final Class<? extends AbstractSyncActions<?>> defaultSyncActions =\n-                        task instanceof SyncTask ? DefaultSyncActions.class : DefaultPushActions.class;\n+            final List<AbstractSyncActions<?>> actions = new ArrayList<AbstractSyncActions<?>>();\n+            for (String className : ((AbstractSyncTask) task).getActionsClassNames()) {\n+                try {\n+                    Class<?> actionsClass = Class.forName(className);\n \n-                LOG.info(\"Class '{}' not found, reverting to {}\", jobActionsClassName, defaultSyncActions.getName());\n+                    final AbstractSyncActions<?> syncActions =\n+                            (AbstractSyncActions<?>) ApplicationContextProvider.getBeanFactory().\n+                            createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n \n-                try {\n-                    ((AbstractSyncJob) jobInstance).setActions(defaultSyncActions.newInstance());\n-                } catch (Exception ie) {\n-                    // Shouldn't happen, BTW ...\n-                    LOG.error(\"Default action class {} instantiation failed\", defaultSyncActions.getName(), ie);\n+                    actions.add(syncActions);\n+                } catch (Exception e) {\n+                    LOG.info(\"Class '{}' not found\", className, e);\n                 }\n             }\n+\n+            ((AbstractSyncJob) jobInstance).setActions(actions);\n         }\n \n         registerJob(getJobName(task), jobInstance, cronExpression);"},{"sha":"2c6660a401e29be0de52b3bd07838cb0448c4086","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractSyncTask.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -18,19 +18,23 @@\n  */\n package org.apache.syncope.core.persistence.beans;\n \n+import java.util.ArrayList;\n+import java.util.List;\n import javax.persistence.Basic;\n+import javax.persistence.ElementCollection;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n+import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n import org.apache.syncope.common.types.MatchingRule;\n import org.apache.syncope.common.types.UnmatchingRule;\n-import org.apache.syncope.core.persistence.validation.entity.SyncTaskCheck;\n+import org.apache.syncope.core.persistence.validation.entity.AbstractSyncTaskCheck;\n \n @MappedSuperclass\n-@SyncTaskCheck\n+@AbstractSyncTaskCheck\n public abstract class AbstractSyncTask extends SchedTask {\n \n     private static final long serialVersionUID = -4141057723006682562L;\n@@ -61,8 +65,6 @@ public abstract class AbstractSyncTask extends SchedTask {\n     @Max(1)\n     private Integer syncStatus;\n \n-    private String actionsClassName;\n-\n     /**\n      * @see UnmatchingRule\n      */\n@@ -75,6 +77,9 @@ public abstract class AbstractSyncTask extends SchedTask {\n     @Enumerated(EnumType.STRING)\n     protected MatchingRule matchigRule;\n \n+    @ElementCollection(fetch = FetchType.EAGER)\n+    private List<String> actionsClassNames = new ArrayList<String>();\n+\n     public AbstractSyncTask(final String jobClassName) {\n         super();\n         super.setJobClassName(jobClassName);\n@@ -125,14 +130,6 @@ public void setSyncStatus(final boolean syncStatus) {\n         this.syncStatus = getBooleanAsInteger(syncStatus);\n     }\n \n-    public String getActionsClassName() {\n-        return actionsClassName;\n-    }\n-\n-    public void setActionsClassName(final String actionsClassName) {\n-        this.actionsClassName = actionsClassName;\n-    }\n-\n     public abstract UnmatchingRule getUnmatchigRule();\n \n     public void setUnmatchigRule(final UnmatchingRule unmatchigRule) {\n@@ -144,4 +141,8 @@ public void setUnmatchigRule(final UnmatchingRule unmatchigRule) {\n     public void setMatchigRule(final MatchingRule matchigRule) {\n         this.matchigRule = matchigRule;\n     }\n+\n+    public List<String> getActionsClassNames() {\n+        return actionsClassNames;\n+    }\n }"},{"sha":"0aba6b0c6e32880884bb6af840d86889280006dd","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -18,12 +18,15 @@\n  */\n package org.apache.syncope.core.persistence.beans;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n import javax.persistence.Column;\n+import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n@@ -36,6 +39,7 @@\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.openjpa.persistence.PersistentCollection;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.PropagationMode;\n import org.apache.syncope.common.types.TraceLevel;\n@@ -163,9 +167,10 @@ public class ExternalResource extends AbstractSysInfo {\n     private String rserializedSyncToken;\n \n     /**\n-     * (Optional) class for PropagationAction.\n+     * (Optional) classes for PropagationAction.\n      */\n-    private String propagationActionsClassName;\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    private List<String> propagationActionsClassNames = new ArrayList<String>();\n \n     /**\n      * Default constructor.\n@@ -319,7 +324,7 @@ public PushPolicy getPushPolicy() {\n         return pushPolicy;\n     }\n \n-    public void setPushPolicy(PushPolicy pushPolicy) {\n+    public void setPushPolicy(final PushPolicy pushPolicy) {\n         this.pushPolicy = pushPolicy;\n     }\n \n@@ -375,11 +380,8 @@ public void setRsyncToken(final SyncToken syncToken) {\n         this.rserializedSyncToken = XMLSerializer.serialize(syncToken);\n     }\n \n-    public String getPropagationActionsClassName() {\n-        return propagationActionsClassName;\n+    public List<String> getPropagationActionsClassNames() {\n+        return propagationActionsClassNames;\n     }\n \n-    public void setPropagationActionsClassName(final String propagationActionsClassName) {\n-        this.propagationActionsClassName = propagationActionsClassName;\n-    }\n }"},{"sha":"ac3821dcce987dcf102da1f45286c8f062b79a4b","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AbstractSyncTaskCheck.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskCheck.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -29,11 +29,11 @@\n \n @Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n-@Constraint(validatedBy = SyncTaskValidator.class)\n+@Constraint(validatedBy = AbstractSyncTaskValidator.class)\n @Documented\n-public @interface SyncTaskCheck {\n+public @interface AbstractSyncTaskCheck {\n \n-    String message() default \"{org.apache.syncope.core.validation.synctask}\";\n+    String message() default \"{org.apache.syncope.core.validation.abstractsynctask}\";\n \n     Class<?>[] groups() default {};\n ","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncTaskCheck.java"},{"sha":"af049a2bd7c39bf2dea1bdcf3dd90c3343f7bfb4","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/AbstractSyncTaskValidator.java","status":"renamed","additions":27,"deletions":20,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractSyncTaskValidator.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -19,17 +19,18 @@\n package org.apache.syncope.core.persistence.validation.entity;\n \n import javax.validation.ConstraintValidatorContext;\n-\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.core.persistence.beans.AbstractSyncTask;\n+import org.apache.syncope.core.persistence.beans.PushTask;\n+import org.apache.syncope.core.persistence.beans.SyncTask;\n+import org.apache.syncope.core.sync.PushActions;\n import org.apache.syncope.core.sync.SyncActions;\n \n-public class SyncTaskValidator extends AbstractValidator<SyncTaskCheck, AbstractSyncTask> {\n+public class AbstractSyncTaskValidator extends AbstractValidator<AbstractSyncTaskCheck, AbstractSyncTask> {\n \n     private final SchedTaskValidator schedV;\n \n-    public SyncTaskValidator() {\n+    public AbstractSyncTaskValidator() {\n         super();\n \n         schedV = new SchedTaskValidator();\n@@ -50,24 +51,30 @@ public boolean isValid(final AbstractSyncTask object, final ConstraintValidatorC\n                         addNode(\"resource\").addConstraintViolation();\n             }\n \n-            if (StringUtils.isNotBlank(object.getActionsClassName())) {\n-                Class<?> actionsClass = null;\n-                boolean isAssignable = false;\n-                try {\n-                    actionsClass = Class.forName(object.getActionsClassName());\n-                    isAssignable = SyncActions.class.isAssignableFrom(actionsClass);\n-                } catch (Exception e) {\n-                    LOG.error(\"Invalid SyncActions specified\", e);\n-                    isValid = false;\n-                }\n+            if (!object.getActionsClassNames().isEmpty()) {\n+                for (String className : object.getActionsClassNames()) {\n+                    Class<?> actionsClass = null;\n+                    boolean isAssignable = false;\n+                    try {\n+                        actionsClass = Class.forName(className);\n+                        isAssignable = object instanceof SyncTask\n+                                ? SyncActions.class.isAssignableFrom(actionsClass)\n+                                : object instanceof PushTask\n+                                ? PushActions.class.isAssignableFrom(actionsClass)\n+                                : false;\n+                    } catch (Exception e) {\n+                        LOG.error(\"Invalid SyncActions specified\", e);\n+                        isValid = false;\n+                    }\n \n-                if (actionsClass == null || !isAssignable) {\n-                    isValid = false;\n+                    if (actionsClass == null || !isAssignable) {\n+                        isValid = false;\n \n-                    context.disableDefaultConstraintViolation();\n-                    context.buildConstraintViolationWithTemplate(\n-                            getTemplate(EntityViolationType.InvalidSyncTask, \"Invalid class name\")).\n-                            addNode(\"actionsClassName\").addConstraintViolation();\n+                        context.disableDefaultConstraintViolation();\n+                        context.buildConstraintViolationWithTemplate(\n+                                getTemplate(EntityViolationType.InvalidSyncTask, \"Invalid class name\")).\n+                                addNode(\"actionsClassName\").addConstraintViolation();\n+                    }\n                 }\n             }\n         }","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncTaskValidator.java"},{"sha":"a3183f2ffe9f5b906b840234d77e0d86e9cd5252","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ExternalResourceValidator.java","status":"modified","additions":17,"deletions":15,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -105,21 +105,23 @@ public boolean isValid(final ExternalResource resource, final ConstraintValidato\n             return false;\n         }\n \n-        if (StringUtils.isNotBlank(resource.getPropagationActionsClassName())) {\n-            Class<?> actionsClass = null;\n-            boolean isAssignable = false;\n-            try {\n-                actionsClass = Class.forName(resource.getPropagationActionsClassName());\n-                isAssignable = PropagationActions.class.isAssignableFrom(actionsClass);\n-            } catch (Exception e) {\n-                LOG.error(\"Invalid PropagationActions specified: {}\", resource.getPropagationActionsClassName(), e);\n-            }\n-\n-            if (actionsClass == null || !isAssignable) {\n-                context.buildConstraintViolationWithTemplate(\n-                        getTemplate(EntityViolationType.InvalidResource, \"Ivalid actions class name\")).\n-                        addNode(\"actionsClassName\").addConstraintViolation();\n-                return false;\n+        if (!resource.getPropagationActionsClassNames().isEmpty()) {\n+            for (String className : resource.getPropagationActionsClassNames()) {\n+                Class<?> actionsClass = null;\n+                boolean isAssignable = false;\n+                try {\n+                    actionsClass = Class.forName(className);\n+                    isAssignable = PropagationActions.class.isAssignableFrom(actionsClass);\n+                } catch (Exception e) {\n+                    LOG.error(\"Invalid PropagationActions specified: {}\", className, e);\n+                }\n+\n+                if (actionsClass == null || !isAssignable) {\n+                    context.buildConstraintViolationWithTemplate(\n+                            getTemplate(EntityViolationType.InvalidResource, \"Invalid actions class name\")).\n+                            addNode(\"actionsClassName\").addConstraintViolation();\n+                    return false;\n+                }\n             }\n         }\n "},{"sha":"109d0ae2e554a821ec0b35a9491d068d2b9adbe1","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/AbstractPropagationTaskExecutor.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -42,7 +42,6 @@\n import org.apache.syncope.core.persistence.beans.TaskExec;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n-import org.apache.syncope.core.propagation.DefaultPropagationActions;\n import org.apache.syncope.core.propagation.PropagationActions;\n import org.apache.syncope.core.propagation.PropagationReporter;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n@@ -116,24 +115,21 @@ public TaskExec execute(final PropagationTask task) {\n         return execute(task, null);\n     }\n \n-    protected PropagationActions getPropagationActions(final ExternalResource resource) {\n-        PropagationActions result = null;\n+    protected List<PropagationActions> getPropagationActions(final ExternalResource resource) {\n+        List<PropagationActions> result = new ArrayList<PropagationActions>();\n \n-        if (StringUtils.isNotBlank(resource.getPropagationActionsClassName())) {\n-            try {\n-                Class<?> actionsClass = Class.forName(resource.getPropagationActionsClassName());\n-                result = (PropagationActions) ApplicationContextProvider.getBeanFactory().\n-                        createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n-            } catch (ClassNotFoundException e) {\n-                LOG.error(\"Invalid PropagationAction class name '{}' for resource {}\",\n-                        resource, resource.getPropagationActionsClassName(), e);\n+        if (!resource.getPropagationActionsClassNames().isEmpty()) {\n+            for (String className : resource.getPropagationActionsClassNames()) {\n+                try {\n+                    Class<?> actionsClass = Class.forName(className);\n+                    result.add((PropagationActions) ApplicationContextProvider.getBeanFactory().\n+                            createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true));\n+                } catch (ClassNotFoundException e) {\n+                    LOG.error(\"Invalid PropagationAction class name '{}' for resource {}\", resource, className, e);\n+                }\n             }\n         }\n \n-        if (result == null) {\n-            result = new DefaultPropagationActions();\n-        }\n-\n         return result;\n     }\n \n@@ -327,7 +323,7 @@ protected void delete(final PropagationTask task, final ConnectorObject beforeOb\n \n     @Override\n     public TaskExec execute(final PropagationTask task, final PropagationReporter reporter) {\n-        final PropagationActions actions = getPropagationActions(task.getResource());\n+        final List<PropagationActions> actions = getPropagationActions(task.getResource());\n \n         final Date startDate = new Date();\n \n@@ -351,7 +347,9 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n             // Try to read remote object (user / group) BEFORE any actual operation\n             beforeObj = getRemoteObject(task, connector, false);\n \n-            actions.before(task, beforeObj);\n+            for (PropagationActions action : actions) {\n+                action.before(task, beforeObj);\n+            }\n \n             switch (task.getPropagationOperation()) {\n                 case CREATE:\n@@ -440,7 +438,9 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n             }\n         }\n \n-        actions.after(task, execution, afterObj);\n+        for (PropagationActions action : actions) {\n+            action.after(task, execution, afterObj);\n+        }\n \n         notificationManager.createTasks(\n                 AuditElements.EventCategoryType.PROPAGATION,\n@@ -531,7 +531,7 @@ protected ConnectorObject getRemoteObject(final PropagationTask task, final Conn\n                     new ObjectClass(task.getObjectClassName()),\n                     new Uid(accountId),\n                     connector.getOperationOptions(AttributableUtil.getInstance(task.getSubjectType()).\n-                    getMappingItems(task.getResource(), MappingPurpose.PROPAGATION)));\n+                            getMappingItems(task.getResource(), MappingPurpose.PROPAGATION)));\n         } catch (TimeoutException toe) {\n             LOG.debug(\"Request timeout\", toe);\n             throw toe;"},{"sha":"b6734f7bca87df9d34c13052dbc65403c37bf004","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PriorityPropagationTaskExecutor.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -104,10 +104,10 @@ protected static class PriorityComparator implements Comparator<PropagationTask>\n         public int compare(final PropagationTask task1, final PropagationTask task2) {\n             int prop1 = task1.getResource().getPropagationPriority() == null\n                     ? Integer.MIN_VALUE\n-                    : task1.getResource().getPropagationPriority().intValue();\n+                    : task1.getResource().getPropagationPriority();\n             int prop2 = task2.getResource().getPropagationPriority() == null\n                     ? Integer.MIN_VALUE\n-                    : task2.getResource().getPropagationPriority().intValue();\n+                    : task2.getResource().getPropagationPriority();\n \n             return prop1 > prop2\n                     ? 1"},{"sha":"2ad64d66378b8a5762e4dd730db2627a31ae2108","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -141,7 +141,8 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n             resource.setRserializedSyncToken(null);\n         }\n \n-        resource.setPropagationActionsClassName(resourceTO.getPropagationActionsClassName());\n+        resource.getPropagationActionsClassNames().clear();\n+        resource.getPropagationActionsClassNames().addAll(resourceTO.getPropagationActionsClassNames());\n \n         return resource;\n     }\n@@ -337,7 +338,7 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n         resourceTO.setUsyncToken(resource.getUserializedSyncToken());\n         resourceTO.setRsyncToken(resource.getRserializedSyncToken());\n \n-        resourceTO.setPropagationActionsClassName(resource.getPropagationActionsClassName());\n+        resourceTO.getPropagationActionsClassNames().addAll(resource.getPropagationActionsClassNames());\n \n         return resourceTO;\n     }"},{"sha":"cc18f21780882a743355f2cc69a25fd7ca9246c7","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -68,7 +68,7 @@ public class TaskDataBinder {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(TaskDataBinder.class);\n \n-    private static final String[] IGNORE_TASK_PROPERTIES = { \"executions\", \"resource\", };\n+    private static final String[] IGNORE_TASK_PROPERTIES = { \"executions\", \"resource\" };\n \n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = { \"id\", \"task\" };\n \n@@ -113,12 +113,14 @@ private void fill(final AbstractSyncTask task, final AbstractSyncTaskTO taskTO)\n             if (syncTaskTO.getUserTemplate() != null) {\n                 UserTO template = syncTaskTO.getUserTemplate();\n \n-                if (StringUtils.isNotBlank(template.getUsername()) && !JexlUtil.\n-                        isExpressionValid(template.getUsername())) {\n+                if (StringUtils.isNotBlank(template.getUsername())\n+                        && !JexlUtil.isExpressionValid(template.getUsername())) {\n+\n                     sce.getElements().add(\"Invalid JEXL: \" + template.getUsername());\n                 }\n-                if (StringUtils.isNotBlank(template.getPassword()) && !JexlUtil.\n-                        isExpressionValid(template.getPassword())) {\n+                if (StringUtils.isNotBlank(template.getPassword())\n+                        && !JexlUtil.isExpressionValid(template.getPassword())) {\n+\n                     sce.getElements().add(\"Invalid JEXL: \" + template.getPassword());\n                 }\n \n@@ -155,7 +157,8 @@ private void fill(final AbstractSyncTask task, final AbstractSyncTaskTO taskTO)\n         task.setSyncStatus(taskTO.isSyncStatus());\n         task.setMatchigRule(taskTO.getMatchigRule());\n         task.setUnmatchigRule(taskTO.getUnmatchigRule());\n-        task.setActionsClassName(taskTO.getActionsClassName());\n+        task.getActionsClassNames().clear();\n+        task.getActionsClassNames().addAll(taskTO.getActionsClassNames());\n     }\n \n     public SchedTask createSchedTask(final SchedTaskTO taskTO, final TaskUtil taskUtil) {\n@@ -192,7 +195,6 @@ public void updateSchedTask(final SchedTask task, final SchedTaskTO taskTO, fina\n         Class<? extends Task> taskClass = taskUtil.taskClass();\n         Class<? extends AbstractTaskTO> taskTOClass = taskUtil.taskTOClass();\n \n-\n         if (taskClass == null || !taskClass.equals(task.getClass())) {\n             throw new ClassCastException(\n                     String.format(\"taskUtil is type %s but task is not: %s\", taskClass, task.getClass()));\n@@ -297,6 +299,7 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtil ta\n                 ((SyncTaskTO) taskTO).setDescription(((SyncTask) task).getDescription());\n                 ((SyncTaskTO) taskTO).setResource(((SyncTask) task).getResource().getName());\n                 break;\n+\n             case PUSH:\n                 if (!(task instanceof PushTask)) {\n                     throw new ClassCastException(\"taskUtil is type Push but task is not PushTask: \""},{"sha":"3f3fcfc97616f9354290b2641aba95ff123b271b","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -86,9 +86,9 @@\n     /**\n      * SyncJob actions.\n      */\n-    protected A actions;\n+    protected List<A> actions;\n \n-    public void setActions(final A actions) {\n+    public void setActions(final List<A> actions) {\n         this.actions = actions;\n     }\n \n@@ -326,11 +326,13 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n \n             final UMapping uMapping = syncTask.getResource().getUmapping();\n             if (uMapping != null && uMapping.getAccountIdItem() == null) {\n-                throw new JobExecutionException(\"Invalid user account id mapping for resource \" + syncTask.getResource());\n+                throw new JobExecutionException(\n+                        \"Invalid user account id mapping for resource \" + syncTask.getResource());\n             }\n             final RMapping rMapping = syncTask.getResource().getRmapping();\n             if (rMapping != null && rMapping.getAccountIdItem() == null) {\n-                throw new JobExecutionException(\"Invalid role account id mapping for resource \" + syncTask.getResource());\n+                throw new JobExecutionException(\n+                        \"Invalid role account id mapping for resource \" + syncTask.getResource());\n             }\n             if (uMapping == null && rMapping == null) {\n                 return \"No mapping configured for both users and roles: aborting...\";"},{"sha":"91bf55869ca04705c4bf1cc0d24665e5eb17fd8b","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncopeResultHandler.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.sync.impl;\n \n import java.util.Collection;\n+import java.util.List;\n import org.apache.syncope.common.types.ConflictResolutionAction;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n@@ -104,15 +105,15 @@\n \n     protected ConflictResolutionAction resAct;\n \n-    protected A actions;\n+    protected List<A> actions;\n \n     protected T syncTask;\n \n-    public A getActions() {\n+    public List<A> getActions() {\n         return actions;\n     }\n \n-    public void setActions(A actions) {\n+    public void setActions(final List<A> actions) {\n         this.actions = actions;\n     }\n "},{"sha":"c0193cce502a7e3cc31780ca522816d96bde5d32","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/DBPasswordSyncActions.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -38,13 +38,15 @@\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n- * A SyncActions implementation which allows the ability to import passwords from a Database \n+ * A SyncActions implementation which allows the ability to import passwords from a Database\n  * backend, where the passwords are hashed according to the password cipher algorithm property\n  * of the (DB) Connector and HEX-encoded.\n  */\n public class DBPasswordSyncActions extends DefaultSyncActions {\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(DBPasswordSyncActions.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(DBPasswordSyncActions.class);\n+\n+    private static final String CLEARTEXT = \"CLEARTEXT\";\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -64,19 +66,21 @@ public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n             String password = ((UserTO) subject).getPassword();\n             if (password != null) {\n                 Connector connector = handler.getConnector();\n-                \n                 ConnInstance connInstance = connector.getActiveConnInstance();\n-                Iterator<ConnConfProperty> propertyIterator = connInstance.getConfiguration().iterator();\n-                String cipherAlgorithm = \"CLEARTEXT\";\n-                while (propertyIterator.hasNext()) {\n+                \n+                String cipherAlgorithm = CLEARTEXT;\n+                boolean found = false;\n+                for (Iterator<ConnConfProperty> propertyIterator = connInstance.getConfiguration().iterator();\n+                        propertyIterator.hasNext() && !found;) {\n+\n                     ConnConfProperty property = propertyIterator.next();\n                     if (\"cipherAlgorithm\".equals(property.getSchema().getName())\n                             && property.getValues() != null && !property.getValues().isEmpty()) {\n+\n                         cipherAlgorithm = (String) property.getValues().get(0);\n-                        break;\n                     }\n                 }\n-                if (!\"CLEARTEXT\".equals(cipherAlgorithm)) {\n+                if (!CLEARTEXT.equals(cipherAlgorithm)) {\n                     try {\n                         encodedPassword = password;\n                         cipher = CipherAlgorithm.valueOf(cipherAlgorithm);"},{"sha":"f17614d423e2f818adc263fd19b2a004b7a47fc8","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/PushJob.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -91,14 +91,16 @@ protected String executeWithSecurityContext(\n         final SyncopePushResultHandler handler =\n                 (SyncopePushResultHandler) ((DefaultListableBeanFactory) ApplicationContextProvider.\n                 getApplicationContext().getBeanFactory()).createBean(\n-                SyncopePushResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                        SyncopePushResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         handler.setConnector(connector);\n         handler.setDryRun(dryRun);\n         handler.setResults(results);\n         handler.setSyncTask(pushTask);\n         handler.setActions(actions);\n \n-        actions.beforeAll(handler);\n+        for (PushActions action : actions) {\n+            action.beforeAll(handler);\n+        }\n \n         if (uMapping != null) {\n             final int count = userDAO.count(authorizations);\n@@ -135,7 +137,9 @@ protected String executeWithSecurityContext(\n             }\n         }\n \n-        actions.afterAll(handler, results);\n+        for (PushActions action : actions) {\n+            action.afterAll(handler, results);\n+        }\n \n         final String result = createReport(results, pushTask.getResource().getSyncTraceLevel(), dryRun);\n "},{"sha":"ca4d4148df117c1cc3a1810c3402a7b460b02748","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncJob.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncJob.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -99,15 +99,17 @@ protected String executeWithSecurityContext(\n         final SyncopeSyncResultHandler handler =\n                 (SyncopeSyncResultHandler) ((DefaultListableBeanFactory) ApplicationContextProvider.\n                 getApplicationContext().getBeanFactory()).createBean(\n-                SyncopeSyncResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                        SyncopeSyncResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         handler.setConnector(connector);\n         handler.setActions(actions);\n         handler.setDryRun(dryRun);\n         handler.setResAct(syncPolicySpec.getConflictResolutionAction());\n         handler.setResults(results);\n         handler.setSyncTask(syncTask);\n \n-        actions.beforeAll(handler);\n+        for (SyncActions action : actions) {\n+            action.beforeAll(handler);\n+        }\n         try {\n             SyncToken latestUSyncToken = null;\n             if (uMapping != null && !syncTask.isFullReconciliation()) {\n@@ -162,7 +164,9 @@ protected String executeWithSecurityContext(\n             LOG.error(\"While setting role owners\", e);\n         }\n \n-        actions.afterAll(handler, results);\n+        for (SyncActions action : actions) {\n+            action.afterAll(handler, results);\n+        }\n \n         final String result = createReport(results, syncTask.getResource().getSyncTraceLevel(), dryRun);\n "},{"sha":"5c2a1e44eaa4a6822942347c37d3db2b597e8281","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopePushResultHandler.java","status":"modified","additions":27,"deletions":9,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopePushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopePushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopePushResultHandler.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -139,21 +139,27 @@ protected final void doHandle(final AbstractAttributable attributable)\n                 switch (getSyncTask().getUnmatchigRule()) {\n                     case ASSIGN:\n                         result.setOperation(ResourceOperation.CREATE);\n-                        actions.beforeAssign(this, values, toBeHandled);\n+                        for (PushActions action : actions) {\n+                            action.beforeAssign(this, values, toBeHandled);\n+                        }\n                         controller.assign(\n                                 toBeHandled.getId(),\n                                 Collections.singleton(getSyncTask().getResource().getName()), true, null);\n                         break;\n                     case PROVISION:\n                         result.setOperation(ResourceOperation.CREATE);\n-                        actions.beforeProvision(this, values, toBeHandled);\n+                        for (PushActions action : actions) {\n+                            action.beforeProvision(this, values, toBeHandled);\n+                        }\n                         controller.provision(\n                                 toBeHandled.getId(),\n                                 Collections.singleton(getSyncTask().getResource().getName()), true, null);\n                         break;\n                     case UNLINK:\n                         result.setOperation(ResourceOperation.NONE);\n-                        actions.beforeUnlink(this, values, toBeHandled);\n+                        for (PushActions action : actions) {\n+                            action.beforeUnlink(this, values, toBeHandled);\n+                        }\n                         controller.unlink(\n                                 toBeHandled.getId(), Collections.singleton(getSyncTask().getResource().getName()));\n                         break;\n@@ -166,7 +172,9 @@ protected final void doHandle(final AbstractAttributable attributable)\n                 switch (getSyncTask().getMatchigRule()) {\n                     case UPDATE:\n                         result.setOperation(ResourceOperation.UPDATE);\n-                        actions.beforeUpdate(this, values, toBeHandled);\n+                        for (PushActions action : actions) {\n+                            action.beforeUpdate(this, values, toBeHandled);\n+                        }\n \n                         AbstractPropagationTaskExecutor.createOrUpdate(\n                                 oclass,\n@@ -181,27 +189,35 @@ protected final void doHandle(final AbstractAttributable attributable)\n                         break;\n                     case DEPROVISION:\n                         result.setOperation(ResourceOperation.DELETE);\n-                        actions.beforeDeprovision(this, values, toBeHandled);\n+                        for (PushActions action : actions) {\n+                            action.beforeDeprovision(this, values, toBeHandled);\n+                        }\n                         controller.deprovision(\n                                 toBeHandled.getId(), Collections.singleton(getSyncTask().getResource().getName()));\n                         break;\n                     case UNASSIGN:\n                         result.setOperation(ResourceOperation.DELETE);\n-                        actions.beforeUnassign(this, values, toBeHandled);\n+                        for (PushActions action : actions) {\n+                            action.beforeUnassign(this, values, toBeHandled);\n+                        }\n                         controller.unlink(\n                                 toBeHandled.getId(), Collections.singleton(getSyncTask().getResource().getName()));\n                         controller.deprovision(\n                                 toBeHandled.getId(), Collections.singleton(getSyncTask().getResource().getName()));\n                         break;\n                     case LINK:\n                         result.setOperation(ResourceOperation.NONE);\n-                        actions.beforeLink(this, values, toBeHandled);\n+                        for (PushActions action : actions) {\n+                            action.beforeLink(this, values, toBeHandled);\n+                        }\n                         controller.link(\n                                 toBeHandled.getId(), Collections.singleton(getSyncTask().getResource().getName()));\n                         break;\n                     case UNLINK:\n                         result.setOperation(ResourceOperation.NONE);\n-                        actions.beforeUnlink(this, values, toBeHandled);\n+                        for (PushActions action : actions) {\n+                            action.beforeUnlink(this, values, toBeHandled);\n+                        }\n                         controller.unlink(\n                                 toBeHandled.getId(), Collections.singleton(getSyncTask().getResource().getName()));\n                         break;\n@@ -222,7 +238,9 @@ protected final void doHandle(final AbstractAttributable attributable)\n             LOG.warn(\"Error pushing {} towards {}\", toBeHandled, getSyncTask().getResource(), e);\n             throw new JobExecutionException(e);\n         } finally {\n-            actions.after(this, values, toBeHandled, result);\n+            for (PushActions action : actions) {\n+                action.after(this, values, toBeHandled, result);\n+            }\n             notificationManager.createTasks(\n                     AuditElements.EventCategoryType.PUSH,\n                     AttributableType.USER.name().toLowerCase(),"},{"sha":"d3b4f564aa0d9aa48af59ef31898ffcd0fb487c4","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":53,"deletions":17,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -350,7 +350,7 @@ public Long findMatchingAttributableId(final ObjectClass objectClass, final Stri\n \n         final List<ConnectorObject> found = connector.search(objectClass,\n                 new EqualsFilter(new Name(name)), connector.getOperationOptions(\n-                attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)));\n+                        attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)));\n \n         if (found.isEmpty()) {\n             LOG.debug(\"No {} found on {} with __NAME__ {}\", objectClass, syncTask.getResource(), name);\n@@ -397,7 +397,12 @@ protected List<SyncResult> assign(\n \n         subjectTO.getResources().add(getSyncTask().getResource().getName());\n \n-        return create(subjectTO, actions.beforeAssign(this, delta, subjectTO), attrUtil, \"assign\", dryRun);\n+        SyncDelta _delta = delta;\n+        for (SyncActions action : actions) {\n+            _delta = action.beforeAssign(this, _delta, subjectTO);\n+        }\n+\n+        return create(subjectTO, _delta, attrUtil, \"assign\", dryRun);\n     }\n \n     protected List<SyncResult> create(\n@@ -407,12 +412,17 @@ protected List<SyncResult> create(\n         final AbstractAttributableTO subjectTO =\n                 connObjectUtil.getAttributableTO(delta.getObject(), syncTask, attrUtil);\n \n-        return create(subjectTO, actions.beforeCreate(this, delta, subjectTO), attrUtil, \"provision\", dryRun);\n+        SyncDelta _delta = delta;\n+        for (SyncActions action : actions) {\n+            _delta = action.beforeCreate(this, _delta, subjectTO);\n+        }\n+\n+        return create(subjectTO, _delta, attrUtil, \"provision\", dryRun);\n     }\n \n     private List<SyncResult> create(\n             final AbstractAttributableTO subjectTO,\n-            SyncDelta delta,\n+            final SyncDelta delta,\n             final AttributableUtil attrUtil,\n             final String operation,\n             final boolean dryRun)\n@@ -517,7 +527,9 @@ private List<SyncResult> create(\n                     delta);\n         }\n \n-        actions.after(this, delta, actual, result);\n+        for (SyncActions action : actions) {\n+            action.after(this, delta, actual, result);\n+        }\n         return Collections.singletonList(result);\n     }\n \n@@ -529,7 +541,9 @@ protected Map.Entry<UserTO, UserTO> updateUser(final Long id, SyncDelta delta, f\n         UserMod userMod = connObjectUtil.getAttributableMod(\n                 id, delta.getObject(), before, syncTask, AttributableUtil.getInstance(AttributableType.USER));\n \n-        delta = actions.beforeUpdate(this, delta, before, userMod);\n+        for (SyncActions action : actions) {\n+            delta = action.beforeUpdate(this, delta, before, userMod);\n+        }\n \n         if (dryRun) {\n             return new AbstractMap.SimpleEntry<UserTO, UserTO>(before, before);\n@@ -582,7 +596,9 @@ protected Map.Entry<UserTO, UserTO> updateUser(final Long id, SyncDelta delta, f\n         taskExecutor.execute(tasks);\n \n         final UserTO after = userDataBinder.getUserTO(updated.getResult().getKey().getId());\n-        actions.after(this, delta, after, result);\n+        for (SyncActions action : actions) {\n+            action.after(this, delta, after, result);\n+        }\n \n         return new AbstractMap.SimpleEntry<UserTO, UserTO>(before, after);\n     }\n@@ -595,7 +611,9 @@ protected Map.Entry<RoleTO, RoleTO> updateRole(\n         RoleMod roleMod = connObjectUtil.getAttributableMod(\n                 id, delta.getObject(), before, syncTask, AttributableUtil.getInstance(AttributableType.ROLE));\n \n-        delta = actions.beforeUpdate(this, delta, before, roleMod);\n+        for (SyncActions action : actions) {\n+            delta = action.beforeUpdate(this, delta, before, roleMod);\n+        }\n \n         if (dryRun) {\n             return new AbstractMap.SimpleEntry<RoleTO, RoleTO>(before, before);\n@@ -625,7 +643,9 @@ protected Map.Entry<RoleTO, RoleTO> updateRole(\n \n         final RoleTO after = roleDataBinder.getRoleTO(updated.getResult());\n \n-        actions.after(this, delta, after, result);\n+        for (SyncActions action : actions) {\n+            action.after(this, delta, after, result);\n+        }\n \n         return new AbstractMap.SimpleEntry<RoleTO, RoleTO>(before, after);\n     }\n@@ -759,16 +779,22 @@ protected List<SyncResult> deprovision(\n             try {\n                 if (!dryRun) {\n                     if (unlink) {\n-                        actions.beforeUnassign(this, delta, before);\n+                        for (SyncActions action : actions) {\n+                            action.beforeUnassign(this, delta, before);\n+                        }\n                         controller.unlink(id, Collections.<String>singleton(getSyncTask().getResource().getName()));\n                     } else {\n-                        actions.beforeDeprovision(this, delta, before);\n+                        for (SyncActions action : actions) {\n+                            action.beforeDeprovision(this, delta, before);\n+                        }\n                     }\n \n                     controller.deprovision(id, Collections.<String>singleton(getSyncTask().getResource().getName()));\n \n                     output = controller.read(id);\n-                    actions.after(this, delta, AbstractAttributableTO.class.cast(output), result);\n+                    for (SyncActions action : actions) {\n+                        action.after(this, delta, AbstractAttributableTO.class.cast(output), result);\n+                    }\n                 } else {\n                     output = before;\n                 }\n@@ -860,15 +886,21 @@ protected List<SyncResult> link(\n             try {\n                 if (!dryRun) {\n                     if (unlink) {\n-                        actions.beforeUnlink(this, delta, before);\n+                        for (SyncActions action : actions) {\n+                            action.beforeUnlink(this, delta, before);\n+                        }\n                         controller.unlink(id, Collections.<String>singleton(getSyncTask().getResource().getName()));\n                     } else {\n-                        actions.beforeLink(this, delta, before);\n+                        for (SyncActions action : actions) {\n+                            action.beforeLink(this, delta, before);\n+                        }\n                         controller.link(id, Collections.<String>singleton(getSyncTask().getResource().getName()));\n                     }\n \n                     output = controller.read(id);\n-                    actions.after(this, delta, AbstractAttributableTO.class.cast(output), result);\n+                    for (SyncActions action : actions) {\n+                        action.after(this, delta, AbstractAttributableTO.class.cast(output), result);\n+                    }\n                 } else {\n                     output = before;\n                 }\n@@ -941,7 +973,9 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                         ? userDataBinder.getUserTO(id)\n                         : roleDataBinder.getRoleTO(id);\n \n-                delta = actions.beforeDelete(this, delta, before);\n+                for (SyncActions action : actions) {\n+                    delta = action.beforeDelete(this, delta, before);\n+                }\n \n                 final SyncResult result = new SyncResult();\n                 result.setId(id);\n@@ -986,7 +1020,9 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                     }\n                 }\n \n-                actions.after(this, delta, before, result);\n+                for (SyncActions action : actions) {\n+                    action.after(this, delta, before, result);\n+                }\n                 delResults.add(result);\n \n             } catch (NotFoundException e) {"},{"sha":"0ec40ee38c36311064ee86cdd7ecf3b49a063978","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -321,7 +321,7 @@ public void sync() {\n             assertNotNull(task);\n \n             // add custom SyncJob actions\n-            task.setActionsClassName(TestSyncActions.class.getName());\n+            task.getActionsClassNames().add(TestSyncActions.class.getName());\n \n             // add user template\n             UserTO template = new UserTO();\n@@ -341,7 +341,7 @@ public void sync() {\n             SyncTaskTO actual = taskService.read(task.getId());\n             assertNotNull(actual);\n             assertEquals(task.getId(), actual.getId());\n-            assertEquals(TestSyncActions.class.getName(), actual.getActionsClassName());\n+            assertEquals(TestSyncActions.class.getName(), actual.getActionsClassNames().get(0));\n \n             execSyncTask(SYNC_TASK_ID, 50, false);\n "},{"sha":"a924509f0055723e624bae1c27f28f101283a0c7","filename":"core/src/test/java/org/apache/syncope/core/sync/SyncTaskTest.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncTaskTest.java?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -72,7 +72,7 @@ public void saveSyncTask() {\n         assertNotNull(exception);\n \n         task.setResource(resource);\n-        task.setActionsClassName(getClass().getName());\n+        task.getActionsClassNames().add(getClass().getName());\n \n         // this save() fails because jobActionsClassName does not implement \n         // the right interface\n@@ -84,7 +84,8 @@ public void saveSyncTask() {\n         }\n         assertNotNull(exception);\n \n-        task.setActionsClassName(TestSyncActions.class.getName());\n+        task.getActionsClassNames().clear();\n+        task.getActionsClassNames().add(TestSyncActions.class.getName());\n         // this save() finally works\n         task = taskDAO.save(task);\n         assertNotNull(task);\n@@ -103,7 +104,7 @@ public void issueSYNCOPE144() {\n         task.setResource(resource);\n         task.setName(\"issueSYNCOPE144\");\n         task.setDescription(\"issueSYNCOPE144 Description\");\n-        task.setActionsClassName(TestSyncActions.class.getName());\n+        task.getActionsClassNames().add(TestSyncActions.class.getName());\n \n         task = taskDAO.save(task);\n         assertNotNull(task);"},{"sha":"c93bbbb760ccd14e89d2bb4132f9cb9b535fb59c","filename":"core/src/test/resources/content.xml","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d12db0f3c7999c7df441faa60b5114195f403e18/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=d12db0f3c7999c7df441faa60b5114195f403e18","patch":"@@ -532,10 +532,11 @@ under the License.\n   <ExternalResource name=\"resource-ldap\" connector_id=\"105\"\n                     randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\"\n-                    propagationActionsClassName=\"org.apache.syncope.core.propagation.impl.LDAPMembershipPropagationActions\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n+  <ExternalResource_propagationActionsClassNames externalResource_name=\"resource-ldap\"\n+                                                 element=\"org.apache.syncope.core.propagation.impl.LDAPMembershipPropagationActions\"/>\n   <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" \n@@ -844,8 +845,8 @@ under the License.\n         jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n   <Task DTYPE=\"SyncTask\" id=\"11\" name=\"LDAP Sync Task\" resource_name=\"resource-ldap\"\n         fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n-        actionsClassName=\"org.apache.syncope.core.sync.impl.LDAPMembershipSyncActions\"  \n         jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+  <SyncTask_actionsClassNames SyncTask_id=\"11\" element=\"org.apache.syncope.core.sync.impl.LDAPMembershipSyncActions\"/>\n   <Task DTYPE=\"SyncTask\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n         performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" fullReconciliation=\"1\"\n         jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>"}]}