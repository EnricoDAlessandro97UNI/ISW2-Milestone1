{"sha":"5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjViMmQwYTFlOGUxNzRkNWM4M2M4MThkMzJiNTJhZWZjMzFjMWRlMzc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-17T15:19:25Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-17T15:19:25Z"},"message":"Fixes issue 211\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247206 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"55db084bfa1ef56c0d36c1a5db5ee6a54b026fbd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/55db084bfa1ef56c0d36c1a5db5ee6a54b026fbd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/comments","author":null,"committer":null,"parents":[{"sha":"0f25d712ae3ca8a714559058296feedae043354e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f25d712ae3ca8a714559058296feedae043354e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f25d712ae3ca8a714559058296feedae043354e"}],"stats":{"total":233,"additions":119,"deletions":114},"files":[{"sha":"5d7a30795d893aca9108829a04ec065c9b04cb0b","filename":"console/src/main/java/org/syncope/console/pages/DerivedSchemaModalPage.java","status":"modified","additions":22,"deletions":12,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java?ref=5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","patch":"@@ -27,6 +27,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.syncope.client.AbstractBaseBean;\n import org.syncope.client.to.DerivedSchemaTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n \n /**\n@@ -73,19 +74,28 @@ public void setSchemaModalPage(\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                if (createFlag) {\n-                    restClient.createDerivedSchema(kind,\n-                            (DerivedSchemaTO) form.getDefaultModelObject());\n-                } else {\n-                    restClient.updateDerivedSchema(kind,\n-                            (DerivedSchemaTO) form.getDefaultModelObject());\n-                }\n-\n-                Schema callerPage = (Schema) callerPageRef.getPage();\n-                callerPage.setModalResult(true);\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n \n-                window.close(target);\n+                DerivedSchemaTO schemaTO =\n+                        (DerivedSchemaTO) form.getDefaultModelObject();\n+\n+                try {\n+                    if (createFlag) {\n+                        restClient.createDerivedSchema(kind, schemaTO);\n+                    } else {\n+                        restClient.updateDerivedSchema(kind, schemaTO);\n+                    }\n+                    if (callerPageRef.getPage() instanceof BasePage) {\n+                        ((BasePage) callerPageRef.getPage()).setModalResult(\n+                                true);\n+                    }\n+\n+                    window.close(target);\n+                } catch (SyncopeClientCompositeErrorException e) {\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n             }\n \n             @Override"},{"sha":"7ffc0955605beff70ff77fe7cbf4fc6dd63e1c83","filename":"console/src/main/java/org/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":16,"deletions":9,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","patch":"@@ -39,6 +39,7 @@\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.ResourceModel;\n import org.syncope.client.AbstractBaseBean;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -207,16 +208,22 @@ protected void onSubmit(final AjaxRequestTarget target,\n                     return;\n                 }\n \n-                if (createFlag) {\n-                    restClient.createSchema(kind, schemaTO);\n-                } else {\n-                    restClient.updateSchema(kind, schemaTO);\n-                }\n-\n-                Schema callerPage = (Schema) callerPageRef.getPage();\n-                callerPage.setModalResult(true);\n+                try {\n+                    if (createFlag) {\n+                        restClient.createSchema(kind, schemaTO);\n+                    } else {\n+                        restClient.updateSchema(kind, schemaTO);\n+                    }\n+                    if (callerPageRef.getPage() instanceof BasePage) {\n+                        ((BasePage) callerPageRef.getPage()).setModalResult(\n+                                true);\n+                    }\n \n-                window.close(target);\n+                    window.close(target);\n+                } catch (SyncopeClientCompositeErrorException e) {\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n             }\n \n             @Override"},{"sha":"ef6bf1db564dd1373906bcd8313107f07304af74","filename":"console/src/main/java/org/syncope/console/pages/VirtualSchemaModalPage.java","status":"modified","additions":22,"deletions":13,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java?ref=5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","patch":"@@ -27,6 +27,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.syncope.client.AbstractBaseBean;\n import org.syncope.client.to.VirtualSchemaTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n \n /**\n@@ -68,20 +69,28 @@ public void setSchemaModalPage(\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(AjaxRequestTarget target, Form form) {\n-\n-                if (createFlag) {\n-                    restClient.createVirtualSchema(kind,\n-                            (VirtualSchemaTO) form.getDefaultModelObject());\n-                } else {\n-                    restClient.updateVirtualSchema(kind,\n-                            (VirtualSchemaTO) form.getDefaultModelObject());\n-                }\n-\n-                Schema callerPage = (Schema) callerPageRef.getPage();\n-                callerPage.setModalResult(true);\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n \n-                window.close(target);\n+                VirtualSchemaTO schemaTO =\n+                        (VirtualSchemaTO) form.getDefaultModelObject();\n+\n+                try {\n+                    if (createFlag) {\n+                        restClient.createVirtualSchema(kind, schemaTO);\n+                    } else {\n+                        restClient.updateVirtualSchema(kind, schemaTO);\n+                    }\n+                    if (callerPageRef.getPage() instanceof BasePage) {\n+                        ((BasePage) callerPageRef.getPage()).setModalResult(\n+                                true);\n+                    }\n+\n+                    window.close(target);\n+                } catch (SyncopeClientCompositeErrorException e) {\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n             }\n \n             @Override"},{"sha":"1c96b244ffe57f9c51d86243d7dc554ba5f2fae2","filename":"console/src/main/java/org/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":47,"deletions":69,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","patch":"@@ -31,9 +31,9 @@ public class SchemaRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get schemas.\n-     * @return List of schamas.\n+     * @return List of schemas.\n      */\n-    public List<SchemaTO> getSchemas(String kind) {\n+    public List<SchemaTO> getSchemas(final String kind) {\n         List<SchemaTO> userSchemas = null;\n \n         try {\n@@ -52,7 +52,7 @@ public List<SchemaTO> getSchemas(String kind) {\n      * Get schema names.\n      * @return List of schema names.\n      */\n-    public List<String> getSchemaNames(String kind) {\n+    public List<String> getSchemaNames(final String kind) {\n \n         final List<String> schemasNames = new ArrayList<String>();\n \n@@ -76,7 +76,7 @@ public List<String> getSchemaNames(String kind) {\n      * Get derived schemas.\n      * @return List of derived schemas.\n      */\n-    public List<DerivedSchemaTO> getDerivedSchemas(String kind) {\n+    public List<DerivedSchemaTO> getDerivedSchemas(final String kind) {\n \n         List<DerivedSchemaTO> userDerivedSchemas = null;\n \n@@ -96,7 +96,7 @@ public List<DerivedSchemaTO> getDerivedSchemas(String kind) {\n      * Get derived schemas.\n      * @return List of derived schemas.\n      */\n-    public List<VirtualSchemaTO> getVirtualSchemas(String kind) {\n+    public List<VirtualSchemaTO> getVirtualSchemas(final String kind) {\n \n         List<VirtualSchemaTO> userVirtualSchemas = null;\n \n@@ -116,7 +116,7 @@ public List<VirtualSchemaTO> getVirtualSchemas(String kind) {\n      * Get derived schema names.\n      * @return List of derived schema names.\n      */\n-    public List<String> getDerivedSchemaNames(String kind) {\n+    public List<String> getDerivedSchemaNames(final String kind) {\n \n         final List<String> userDerivedSchemasNames = new ArrayList<String>();\n \n@@ -141,7 +141,7 @@ public List<String> getDerivedSchemaNames(String kind) {\n      * Get virtual schema names.\n      * @return List of virtual schema names.\n      */\n-    public List<String> getVirtualSchemaNames(String kind) {\n+    public List<String> getVirtualSchemaNames(final String kind) {\n \n         final List<String> userVirtualSchemasNames = new ArrayList<String>();\n \n@@ -166,21 +166,17 @@ public List<String> getVirtualSchemaNames(String kind) {\n      * Create new user schema.\n      * @param schemaTO\n      */\n-    public void createSchema(String kind, SchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"schema/\" + kind + \"/create\", schemaTO, SchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a user schema\", e);\n-        }\n+    public void createSchema(final String kind, final SchemaTO schemaTO) {\n+        restTemplate.postForObject(baseURL\n+                + \"schema/\" + kind + \"/create\", schemaTO, SchemaTO.class);\n     }\n \n     /**\n      * Load an already existent user schema by its name.\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public SchemaTO readSchema(String kind, String name) {\n+    public SchemaTO readSchema(final String kind, final String name) {\n         SchemaTO schema = null;\n \n         try {\n@@ -199,12 +195,8 @@ public SchemaTO readSchema(String kind, String name) {\n      * @param schemaTO updated\n      */\n     public void updateSchema(String kind, SchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"schema/\" + kind + \"/update\", schemaTO, SchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a user schema\", e);\n-        }\n+        restTemplate.postForObject(baseURL\n+                + \"schema/\" + kind + \"/update\", schemaTO, SchemaTO.class);\n     }\n \n     /**\n@@ -213,48 +205,42 @@ public void updateSchema(String kind, SchemaTO schemaTO) {\n      * @return schemaTO\n      */\n     public void deleteSchema(String kind, String name) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"schema/\" + kind + \"/delete/\" + name + \".json\");\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a user schema\", e);\n-        }\n+        restTemplate.delete(baseURL\n+                + \"schema/\" + kind + \"/delete/\" + name + \".json\");\n     }\n \n     /**\n      * Create new derived user schema.\n      * @param schemaTO\n      */\n-    public void createDerivedSchema(String kind, DerivedSchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"derivedSchema/\" + kind + \"/create\", schemaTO,\n-                    DerivedSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a derived user schema\", e);\n-        }\n+    public void createDerivedSchema(final String kind,\n+            final DerivedSchemaTO schemaTO) {\n+\n+        restTemplate.postForObject(baseURL\n+                + \"derivedSchema/\" + kind + \"/create\", schemaTO,\n+                DerivedSchemaTO.class);\n     }\n \n     /**\n      * Create new derived user schema.\n      * @param schemaTO\n      */\n-    public void createVirtualSchema(String kind, VirtualSchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"virtualSchema/\" + kind + \"/create\", schemaTO,\n-                    VirtualSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While creating a derived user schema\", e);\n-        }\n+    public void createVirtualSchema(final String kind,\n+            final VirtualSchemaTO schemaTO) {\n+\n+        restTemplate.postForObject(baseURL\n+                + \"virtualSchema/\" + kind + \"/create\", schemaTO,\n+                VirtualSchemaTO.class);\n     }\n \n     /**\n      * Load an already existent user derived schema by its name.\n      * @param name (e.g.:surname)\n      * @return DerivedSchemaTO\n      */\n-    public DerivedSchemaTO readDerivedSchema(String kind, String name) {\n+    public DerivedSchemaTO readDerivedSchema(final String kind,\n+            final String name) {\n+\n         DerivedSchemaTO derivedSchemaTO = null;\n         try {\n             derivedSchemaTO = restTemplate.getForObject(\n@@ -271,34 +257,29 @@ public DerivedSchemaTO readDerivedSchema(String kind, String name) {\n      * Update an already existent user derived schema.\n      * @param schemaTO updated\n      */\n-    public void updateDerivedSchema(String kind, DerivedSchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"derivedSchema/\" + kind + \"/update\", schemaTO,\n-                    DerivedSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a derived user schema\", e);\n-        }\n+    public void updateDerivedSchema(final String kind,\n+            final DerivedSchemaTO schemaTO) {\n+\n+        restTemplate.postForObject(baseURL\n+                + \"derivedSchema/\" + kind + \"/update\", schemaTO,\n+                DerivedSchemaTO.class);\n     }\n \n     /**\n      * Update an already existent user derived schema.\n      * @param schemaTO updated\n      */\n-    public void updateVirtualSchema(String kind, VirtualSchemaTO schemaTO) {\n-        try {\n-            restTemplate.postForObject(baseURL\n-                    + \"virtualSchema/\" + kind + \"/update\", schemaTO,\n-                    VirtualSchemaTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While updating a derived user schema\", e);\n-        }\n+    public void updateVirtualSchema(final String kind,\n+            final VirtualSchemaTO schemaTO) {\n+\n+        restTemplate.postForObject(baseURL\n+                + \"virtualSchema/\" + kind + \"/update\", schemaTO,\n+                VirtualSchemaTO.class);\n     }\n \n     /**\n      * Delete an already existent user derived schema by its name.\n      * @param name (e.g.:surname)\n-     * @return schemaTO\n      */\n     public void deleteDerivedSchema(String kind, String name) {\n         try {\n@@ -312,15 +293,12 @@ public void deleteDerivedSchema(String kind, String name) {\n     /**\n      * Delete an already existent user derived schema by its name.\n      * @param name (e.g.:surname)\n-     * @return schemaTO\n      */\n-    public void deleteVirtualSchema(String kind, String name) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"virtualSchema/\" + kind + \"/delete/\" + name + \".json\");\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a role derived schema\", e);\n-        }\n+    public void deleteVirtualSchema(final String kind,\n+            final String name) {\n+\n+        restTemplate.delete(baseURL\n+                + \"virtualSchema/\" + kind + \"/delete/\" + name + \".json\");\n     }\n \n     /**"},{"sha":"c422e949ab1b10c68b39cc5b40db056067e3d584","filename":"core/src/main/java/org/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b2d0a1e8e174d5c83c818d32b52aefc31c1de37/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=5b2d0a1e8e174d5c83c818d32b52aefc31c1de37","patch":"@@ -15,6 +15,7 @@\n package org.syncope.core.rest.data;\n \n import java.util.Iterator;\n+import org.apache.commons.lang.StringUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n@@ -57,23 +58,23 @@ private <T extends AbstractDerSchema> AbstractSchema populate(\n             final SyncopeClientCompositeErrorException scce)\n             throws SyncopeClientCompositeErrorException {\n \n-        if (schemaTO.getMandatoryCondition() == null) {\n+        if (StringUtils.isBlank(schemaTO.getMandatoryCondition())) {\n             SyncopeClientException requiredValuesMissing =\n                     new SyncopeClientException(\n                     SyncopeClientExceptionType.RequiredValuesMissing);\n             requiredValuesMissing.addElement(\"mandatoryCondition\");\n \n             scce.addException(requiredValuesMissing);\n-        }\n-\n-        if (!jexlUtil.isExpressionValid(schemaTO.getMandatoryCondition())) {\n-            SyncopeClientException invalidMandatoryCondition =\n-                    new SyncopeClientException(\n-                    SyncopeClientExceptionType.InvalidValues);\n-            invalidMandatoryCondition.addElement(\n-                    schemaTO.getMandatoryCondition());\n-\n-            scce.addException(invalidMandatoryCondition);\n+        } else {\n+            if (!jexlUtil.isExpressionValid(schemaTO.getMandatoryCondition())) {\n+                SyncopeClientException invalidMandatoryCondition =\n+                        new SyncopeClientException(\n+                        SyncopeClientExceptionType.InvalidValues);\n+                invalidMandatoryCondition.addElement(\n+                        schemaTO.getMandatoryCondition());\n+\n+                scce.addException(invalidMandatoryCondition);\n+            }\n         }\n \n         if (scce.hasExceptions()) {"}]}