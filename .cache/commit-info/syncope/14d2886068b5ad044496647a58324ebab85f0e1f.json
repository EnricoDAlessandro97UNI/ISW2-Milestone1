{"sha":"14d2886068b5ad044496647a58324ebab85f0e1f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE0ZDI4ODYwNjhiNWFkMDQ0NDk2NjQ3YTU4MzI0ZWJhYjg1ZjBlMWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-03T14:17:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-03T14:17:38Z"},"message":"Removing useless 'import static'\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1555105 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6ebbe4ed2d890cef280b566e8a0b7bd2f91524af","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6ebbe4ed2d890cef280b566e8a0b7bd2f91524af"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/14d2886068b5ad044496647a58324ebab85f0e1f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14d2886068b5ad044496647a58324ebab85f0e1f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/14d2886068b5ad044496647a58324ebab85f0e1f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14d2886068b5ad044496647a58324ebab85f0e1f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"00cd27c4bdac866a3cbbe151985585a23935af11","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/00cd27c4bdac866a3cbbe151985585a23935af11","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/00cd27c4bdac866a3cbbe151985585a23935af11"}],"stats":{"total":186,"additions":92,"deletions":94},"files":[{"sha":"a1ce775b24de3ccdcf508a8c6d1513d83309df85","filename":"console/src/main/java/org/apache/syncope/console/pages/StatusModalPage.java","status":"modified","additions":92,"deletions":92,"changes":184,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14d2886068b5ad044496647a58324ebab85f0e1f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14d2886068b5ad044496647a58324ebab85f0e1f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=14d2886068b5ad044496647a58324ebab85f0e1f","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import static org.apache.syncope.console.pages.AbstractBasePage.LOG;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -123,56 +122,57 @@ public StatusModalPage(\n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"resourceName\", this, null, \"Resource name\"), \"resourceName\") {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<StatusBean>> cellItem,\n-                    final String componentId,\n-                    final IModel<StatusBean> model) {\n-\n-                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n-\n-                    private static final long serialVersionUID = 8432079838783825801L;\n+                    private static final long serialVersionUID = 2054811145491901166L;\n \n                     @Override\n-                    protected void onComponentTag(final ComponentTag tag) {\n-                        if (model.getObject().isLinked()) {\n-                            super.onComponentTag(tag);\n-                        } else {\n-                            tag.put(\"style\", \"color: #DDDDDD\");\n-                        }\n-                    }\n+                    public void populateItem(\n+                            final Item<ICellPopulator<StatusBean>> cellItem,\n+                            final String componentId,\n+                            final IModel<StatusBean> model) {\n+\n+                                cellItem.add(new Label(componentId, model.getObject().getResourceName()) {\n+\n+                                    private static final long serialVersionUID = 8432079838783825801L;\n+\n+                                    @Override\n+                                    protected void onComponentTag(final ComponentTag tag) {\n+                                        if (model.getObject().isLinked()) {\n+                                            super.onComponentTag(tag);\n+                                        } else {\n+                                            tag.put(\"style\", \"color: #DDDDDD\");\n+                                        }\n+                                    }\n+                                });\n+                            }\n                 });\n-            }\n-        });\n \n         columns.add(new PropertyColumn<StatusBean, String>(\n                 new StringResourceModel(\"accountLink\", this, null, \"Account link\"), \"accountLink\", \"accountLink\"));\n \n         columns.add(new AbstractColumn<StatusBean, String>(\n                 new StringResourceModel(\"status\", this, null, \"\")) {\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+                    private static final long serialVersionUID = -3503023501954863131L;\n \n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n+                    @Override\n+                    public String getCssClass() {\n+                        return \"action\";\n+                    }\n \n-            @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<StatusBean>> cellItem,\n-                    final String componentId,\n-                    final IModel<StatusBean> model) {\n-\n-                if (model.getObject().isLinked()) {\n-                    cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().getStatus()));\n-                } else {\n-                    cellItem.add(new Label(componentId, \"\"));\n-                }\n-            }\n-        });\n+                    @Override\n+                    public void populateItem(\n+                            final Item<ICellPopulator<StatusBean>> cellItem,\n+                            final String componentId,\n+                            final IModel<StatusBean> model) {\n+\n+                                if (model.getObject().isLinked()) {\n+                                    cellItem.add(statusUtils.getStatusImagePanel(componentId, model.getObject().\n+                                                    getStatus()));\n+                                } else {\n+                                    cellItem.add(new Label(componentId, \"\"));\n+                                }\n+                            }\n+                });\n \n         table = new ActionDataTablePanel<StatusBean, String>(\n                 \"resourceDatatable\",\n@@ -181,13 +181,13 @@ public void populateItem(\n                 rowsPerPage,\n                 pageRef) {\n \n-            private static final long serialVersionUID = 6510391461033818316L;\n+                    private static final long serialVersionUID = 6510391461033818316L;\n \n-            @Override\n-            public boolean isElementEnabled(final StatusBean element) {\n-                return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n-            }\n-        };\n+                    @Override\n+                    public boolean isElementEnabled(final StatusBean element) {\n+                        return !statusOnly || element.getStatus() != Status.OBJECT_NOT_FOUND;\n+                    }\n+                };\n         table.setOutputMarkupId(true);\n \n         final String pageId = attributableTO instanceof RoleTO ? \"Roles\" : \"Users\";\n@@ -240,13 +240,13 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n         final ClearIndicatingAjaxButton goon =\n                 new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\"), pageRef) {\n \n-            private static final long serialVersionUID = -2341391430136818027L;\n+                    private static final long serialVersionUID = -2341391430136818027L;\n \n-            @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                // none\n-            }\n-        };\n+                    @Override\n+                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                        // none\n+                    }\n+                };\n \n         pwdMgtForm.add(goon);\n \n@@ -525,53 +525,53 @@ private void passwordManagement(\n         final ClearIndicatingAjaxButton goon =\n                 new ClearIndicatingAjaxButton(\"continue\", new ResourceModel(\"continue\", \"Continue\"), pageRef) {\n \n-            private static final long serialVersionUID = -2341391430136818027L;\n+                    private static final long serialVersionUID = -2341391430136818027L;\n \n-            @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                try {\n-                    if (StringUtils.isNotBlank(password.getModelObject())\n+                    @Override\n+                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            if (StringUtils.isNotBlank(password.getModelObject())\n                             && !password.getModelObject().equals(confirm.getModelObject())) {\n-                        throw new Exception(getString(\"passwordMismatch\"));\n-                    }\n-\n-                    final BulkActionResult bulkActionResult;\n-                    switch (type) {\n-                        case ASSIGN:\n-                            bulkActionResult = userRestClient.assign(\n-                                    attributableTO.getId(),\n-                                    new ArrayList<StatusBean>(selection),\n-                                    changepwd.getModelObject(),\n-                                    password.getModelObject());\n-                            break;\n-                        case PROVISION:\n-                            bulkActionResult = userRestClient.provision(\n-                                    attributableTO.getId(),\n-                                    new ArrayList<StatusBean>(selection),\n-                                    changepwd.getModelObject(),\n-                                    password.getModelObject());\n-                            break;\n-                        default:\n-                            bulkActionResult = null;\n-                        // ignore\n-                        }\n+                                throw new Exception(getString(\"passwordMismatch\"));\n+                            }\n+\n+                            final BulkActionResult bulkActionResult;\n+                            switch (type) {\n+                                case ASSIGN:\n+                                    bulkActionResult = userRestClient.assign(\n+                                            attributableTO.getId(),\n+                                            new ArrayList<StatusBean>(selection),\n+                                            changepwd.getModelObject(),\n+                                            password.getModelObject());\n+                                    break;\n+                                case PROVISION:\n+                                    bulkActionResult = userRestClient.provision(\n+                                            attributableTO.getId(),\n+                                            new ArrayList<StatusBean>(selection),\n+                                            changepwd.getModelObject(),\n+                                            password.getModelObject());\n+                                    break;\n+                                default:\n+                                    bulkActionResult = null;\n+                                // ignore\n+                            }\n \n-                    ((BasePage) pageRef.getPage()).setModalResult(true);\n+                            ((BasePage) pageRef.getPage()).setModalResult(true);\n \n-                    if (bulkActionResult != null) {\n-                        loadBulkActionResultPage(selection, bulkActionResult);\n-                    } else {\n+                            if (bulkActionResult != null) {\n+                                loadBulkActionResultPage(selection, bulkActionResult);\n+                            } else {\n \n-                        target.add(((BasePage) pageRef.getPage()).getFeedbackPanel());\n-                        window.close(target);\n+                                target.add(((BasePage) pageRef.getPage()).getFeedbackPanel());\n+                                window.close(target);\n+                            }\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error provisioning resources\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            target.add(feedbackPanel);\n+                        }\n                     }\n-                } catch (Exception e) {\n-                    LOG.error(\"Error provisioning resources\", e);\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                    target.add(feedbackPanel);\n-                }\n-            }\n-        }.feedbackPanelAutomaticReload(false);\n+                }.feedbackPanelAutomaticReload(false);\n \n         pwdMgtForm.addOrReplace(goon);\n "},{"sha":"392c516abb222ece0d2dd7cb812a3a5171bdeb1a","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SearchSupport.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14d2886068b5ad044496647a58324ebab85f0e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSearchSupport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14d2886068b5ad044496647a58324ebab85f0e1f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSearchSupport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSearchSupport.java?ref=14d2886068b5ad044496647a58324ebab85f0e1f","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n-import static org.apache.syncope.common.types.AttributeSchemaType.Double;\n-\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.types.AttributableType;"}]}