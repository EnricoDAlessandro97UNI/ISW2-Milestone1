{"sha":"e32abd3f0797dd23ecd868327c3cdb3afed24ab4","node_id":"C_kwDOJfYA1toAKGUzMmFiZDNmMDc5N2RkMjNlY2Q4NjgzMjdjM2NkYjNhZmVkMjRhYjQ","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-07-26T07:01:45Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-07-26T07:01:45Z"},"message":"Fixing project generation from archetype","tree":{"sha":"f1dba739490a10ba50c77e082aa1c4078f89117e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f1dba739490a10ba50c77e082aa1c4078f89117e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e32abd3f0797dd23ecd868327c3cdb3afed24ab4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e32abd3f0797dd23ecd868327c3cdb3afed24ab4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e32abd3f0797dd23ecd868327c3cdb3afed24ab4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ab6ff63ace4b51d48c32a0799735fcdfdab75e6a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ab6ff63ace4b51d48c32a0799735fcdfdab75e6a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ab6ff63ace4b51d48c32a0799735fcdfdab75e6a"}],"stats":{"total":823,"additions":79,"deletions":744},"files":[{"sha":"ae585b059d3fd0e039e39e3d17f4be2737391f1c","filename":"archetype/pom.xml","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=e32abd3f0797dd23ecd868327c3cdb3afed24ab4","patch":"@@ -188,6 +188,7 @@ under the License.\n         <includes>\n           <include>core-embedded.properties</include>\n           <include>core-all.properties</include>\n+          <include>core-https.properties</include>\n           <include>userWorkflow.bpmn20.xml</include>\n         </includes>\n       </resource>\n@@ -215,6 +216,7 @@ under the License.\n         <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/test/resources</targetPath>\n         <includes>\n           <include>console-embedded.properties</include>\n+          <include>console-https.properties</include>\n         </includes>\n       </resource>\n       \n@@ -242,6 +244,7 @@ under the License.\n         <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/test/resources</targetPath>\n         <includes>\n           <include>enduser-embedded.properties</include>\n+          <include>enduser-https.properties</include>\n         </includes>\n       </resource>\n       \n@@ -283,6 +286,14 @@ under the License.\n           <include>wa-embedded.properties</include>\n         </includes>\n       </resource>\n+\n+      <resource>\n+        <directory>../fit/wa-reference/src/test/resources</directory>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/fit/src/test/resources</targetPath>\n+        <includes>\n+          <include>keystore.jks</include>\n+        </includes>\n+      </resource>\n     </resources>\n   </build>\n   "},{"sha":"b88cdeef5fafbca46756a8c746147ebf16bd4314","filename":"archetype/src/main/resources/archetype-resources/fit/pom.xml","status":"modified","additions":30,"deletions":3,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml?ref=e32abd3f0797dd23ecd868327c3cdb3afed24ab4","patch":"@@ -33,7 +33,7 @@ under the License.\n   <packaging>war</packaging>\n \n   <properties>\n-    <spring.profiles.active>embedded</spring.profiles.active>\n+    <spring.profiles.active>embedded,https</spring.profiles.active>\n     <exec.skip>true</exec.skip>\n   </properties>\n \n@@ -138,17 +138,26 @@ under the License.\n                 <copy file=\"../core/target/test-classes/core-embedded.properties\" \n                       todir=\"../core/target/syncope/WEB-INF/classes\" \n                       overwrite=\"true\"/>\n+                <copy file=\"../core/target/test-classes/core-https.properties\" \n+                      todir=\"../core/target/syncope/WEB-INF/classes\" \n+                      overwrite=\"true\"/>\n                 <copy file=\"../core/target/test-classes/core-all.properties\" \n                       todir=\"../core/target/syncope/WEB-INF/classes\" \n                       overwrite=\"true\"/>\n \n                 <copy file=\"../console/target/test-classes/console-embedded.properties\" \n                       todir=\"../console/target/syncope-console/WEB-INF/classes\" \n                       overwrite=\"true\"/>\n+                <copy file=\"../console/target/test-classes/console-https.properties\" \n+                      todir=\"../console/target/syncope-console/WEB-INF/classes\" \n+                      overwrite=\"true\"/>\n \n                 <copy file=\"../enduser/target/test-classes/enduser-embedded.properties\" \n                       todir=\"../enduser/target/syncope-enduser/WEB-INF/classes\" \n                       overwrite=\"true\"/>                \n+                <copy file=\"../enduser/target/test-classes/enduser-https.properties\" \n+                      todir=\"../enduser/target/syncope-enduser/WEB-INF/classes\" \n+                      overwrite=\"true\"/>                \n \n                 <copy file=\"../wa/target/test-classes/wa-embedded.properties\" \n                       todir=\"../wa/target/syncope-wa/WEB-INF/classes\" \n@@ -183,6 +192,8 @@ under the License.\n             <configuration>\n               <executable>${JAVA_HOME}/bin/java</executable>\n               <arguments>\n+                <argument>-Djavax.net.ssl.trustStore=${basedir}/src/test/resources/keystore.jks</argument>\n+                <argument>-Djavax.net.ssl.trustStorePassword=password</argument>\n                 <argument>-jar</argument>\n                 <argument>${basedir}/../sra/target/syncope-sra.jar</argument>\n                 <argument>-Dreactor.netty.http.server.accessLogEnabled=true</argument>\n@@ -210,9 +221,10 @@ under the License.\n               <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n               <extractDir>${project.build.directory}/cargo/extract</extractDir>\n             </zipUrlInstaller>\n-            <timeout>300000</timeout>\n+            <timeout>600000</timeout>\n             <log>${cargo.log}</log>\n             <output>${cargo.output}</output> \n+\n             <dependencies>\n               <dependency>\n                 <groupId>com.h2database</groupId>\n@@ -225,13 +237,26 @@ under the License.\n               <java.util.secureRandomSeed>true</java.util.secureRandomSeed>\n \n               <h2.returnOffsetDateTime>true</h2.returnOffsetDateTime>\n+\n+              <javax.net.ssl.trustStore>${basedir}/src/test/resources/keystore.jks</javax.net.ssl.trustStore>\n+              <javax.net.ssl.trustStorePassword>password</javax.net.ssl.trustStorePassword>\n             </systemProperties>\n           </container>\n           <configuration>\n             <properties>\n               <cargo.jvmargs>\n                 -Dspring.profiles.active=${spring.profiles.active}\n                 -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n+\n+              <cargo.servlet.port>9443</cargo.servlet.port>\n+              <cargo.protocol>https</cargo.protocol>\n+              <cargo.tomcat.connector.keystoreFile>${basedir}/src/test/resources/keystore.jks</cargo.tomcat.connector.keystoreFile>\n+              <cargo.tomcat.connector.keystorePass>password</cargo.tomcat.connector.keystorePass>\n+              <cargo.tomcat.connector.keyAlias>tomcat</cargo.tomcat.connector.keyAlias>\n+              <cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>\n+              <cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>\n+              <cargo.tomcat.connector.redirectPort>9443</cargo.tomcat.connector.redirectPort>\n+              <cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>\n             </properties>\n           </configuration>\n           <deployables>\n@@ -245,6 +270,8 @@ under the License.\n             </deployable>\n             <deployable>\n               <location>../core/target/syncope</location>\n+              <pingURL>https://localhost:9443/syncope/index.html</pingURL>\n+              <pingTimeout>${cargo.deployable.ping.timeout}</pingTimeout>\n               <properties>\n                 <context>syncope</context>\n               </properties>\n@@ -290,7 +317,7 @@ under the License.\n       <id>all</id>\n \n       <properties>\n-        <spring.profiles.active>embedded,all</spring.profiles.active>\n+        <spring.profiles.active>embedded,https,all</spring.profiles.active>\n       </properties>\n \n       <build>"},{"sha":"ddc3dff626c6738e8061cca01b9a1a9f13a5984b","filename":"fit/wa-reference/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/fit%2Fwa-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/fit%2Fwa-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fpom.xml?ref=e32abd3f0797dd23ecd868327c3cdb3afed24ab4","patch":"@@ -273,7 +273,7 @@ under the License.\n         </configuration>\n       </plugin>\n     </plugins>\n-    \n+\n     <resources>\n       <resource>\n         <directory>src/main/resources</directory>"},{"sha":"67c92dfe687a4d3fe29e062080e0b64c93eafa68","filename":"sra/LICENSE","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/sra%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/sra%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2FLICENSE?ref=e32abd3f0797dd23ecd868327c3cdb3afed24ab4","patch":"@@ -213,6 +213,11 @@ This is licensed under the AL 2.0, see above.\n \n ==\n \n+For ClassMate (https://github.com/FasterXML/java-classmate):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n For JCIP Annotations (https://github.com/stephenc/jcip-annotations):\n This is licensed under the AL 2.0, see above.\n \n@@ -1190,13 +1195,23 @@ Commons is not a party to this document and has no duty or\n obligation with respect to this CC0 or use of the Work.\n \n \n+==\n+\n+For Hibernate Validator (https://hibernate.org/validator/):\n+This is licensed under the AL 2.0, see above.\n+\n ==\n \n For Java Apereo CAS Client (https://www.apereo.org/cas):\n This is licensed under the AL 2.0, see above.\n \n ==\n \n+For JBoss Logging (http://www.jboss.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n For jsoup (https://jsoup.org/):\n This is licensed under the MIT license, see above.\n "},{"sha":"41f011cddb33488cbdb64ad70c9daedd352425c6","filename":"sra/NOTICE","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/sra%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/sra%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2FNOTICE?ref=e32abd3f0797dd23ecd868327c3cdb3afed24ab4","patch":"@@ -155,11 +155,21 @@ All content is the property of the respective authors or their employers.\n \n ==\n \n+This product includes software developed by Hibernate Validator\n+Copyright 2022, The Hibernate Validator project\n+\n+==\n+\n This product includes software developed by Java Apereo CAS Client\n Copyright (c) 2007, JA-SIG, Inc.\n \n ==\n \n+This product includes software developed by JBoss Logging\n+Copyright 2020 Red Hat, Inc.\n+\n+==\n+\n This product includes software developed by jsoup\n Copyright (c) 2009-2022 Jonathan Hedley\n "},{"sha":"5d280b46872422d054ae056af18879a9f708146f","filename":"sra/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/sra%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/sra%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fpom.xml?ref=e32abd3f0797dd23ecd868327c3cdb3afed24ab4","patch":"@@ -111,8 +111,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.bval</groupId>\n-      <artifactId>bval-jsr</artifactId>\n+      <groupId>org.hibernate.validator</groupId>\n+      <artifactId>hibernate-validator</artifactId>\n     </dependency>\n \n     <dependency>"},{"sha":"9d559a9d1433418df31c1535218b5b7f4955049b","filename":"sra/src/main/java/org/springframework/cloud/gateway/config/DataSizeMax.java","status":"removed","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ab6ff63ace4b51d48c32a0799735fcdfdab75e6a/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FDataSizeMax.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ab6ff63ace4b51d48c32a0799735fcdfdab75e6a/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FDataSizeMax.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FDataSizeMax.java?ref=ab6ff63ace4b51d48c32a0799735fcdfdab75e6a","patch":"@@ -1,48 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.springframework.cloud.gateway.config;\n-\n-import java.lang.annotation.Documented;\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-import java.lang.annotation.Target;\n-import javax.validation.Constraint;\n-import javax.validation.Payload;\n-import org.springframework.util.unit.DataUnit;\n-\n-// Keep until\n-// https://lists.apache.org/thread/km7c4ojrlw5q5j42cbw7nht6b0f4z5r2\n-// is clear.\n-@Documented\n-@Constraint(validatedBy = DataSizeMaxValidator.class)\n-@Target({ ElementType.FIELD, ElementType.METHOD })\n-@Retention(RetentionPolicy.RUNTIME)\n-public @interface DataSizeMax {\n-\n-    String message() default \"must be less than or equal to {value} {unit}\";\n-\n-    Class<?>[] groups() default {};\n-\n-    Class<? extends Payload>[] payload() default {};\n-\n-    int value();\n-\n-    DataUnit unit();\n-}"},{"sha":"5e3d5aaa57c65d656b9a7ad8adcd17012e1089cc","filename":"sra/src/main/java/org/springframework/cloud/gateway/config/DataSizeMaxValidator.java","status":"removed","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ab6ff63ace4b51d48c32a0799735fcdfdab75e6a/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FDataSizeMaxValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ab6ff63ace4b51d48c32a0799735fcdfdab75e6a/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FDataSizeMaxValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FDataSizeMaxValidator.java?ref=ab6ff63ace4b51d48c32a0799735fcdfdab75e6a","patch":"@@ -1,41 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements. See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership. The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License. You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.springframework.cloud.gateway.config;\n-\n-import javax.validation.ConstraintValidator;\n-import javax.validation.ConstraintValidatorContext;\n-import org.springframework.util.unit.DataSize;\n-\n-// Keep until\n-// https://lists.apache.org/thread/km7c4ojrlw5q5j42cbw7nht6b0f4z5r2\n-// is clear.\n-public class DataSizeMaxValidator implements ConstraintValidator<DataSizeMax, DataSize> {\n-\n-    private DataSize dataSizeMax;\n-\n-    @Override\n-    public void initialize(final DataSizeMax dataSizeMax) {\n-        this.dataSizeMax = DataSize.of(dataSizeMax.value(), dataSizeMax.unit());\n-    }\n-\n-    @Override\n-    public boolean isValid(final DataSize value, final ConstraintValidatorContext context) {\n-        return value == null || dataSizeMax.compareTo(value) >= 0;\n-    }\n-}"},{"sha":"ff4a755b240c8e8e483767651c07a5b92fcd2347","filename":"sra/src/main/java/org/springframework/cloud/gateway/config/HttpClientProperties.java","status":"removed","additions":0,"deletions":643,"changes":643,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ab6ff63ace4b51d48c32a0799735fcdfdab75e6a/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FHttpClientProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ab6ff63ace4b51d48c32a0799735fcdfdab75e6a/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FHttpClientProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fcloud%2Fgateway%2Fconfig%2FHttpClientProperties.java?ref=ab6ff63ace4b51d48c32a0799735fcdfdab75e6a","patch":"@@ -1,643 +0,0 @@\n-/*\n- * Copyright 2013-2020 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.springframework.cloud.gateway.config;\n-\n-import java.io.IOException;\n-import java.net.URL;\n-import java.security.KeyStore;\n-import java.security.KeyStoreException;\n-import java.security.NoSuchProviderException;\n-import java.security.cert.Certificate;\n-import java.security.cert.CertificateException;\n-import java.security.cert.CertificateFactory;\n-import java.security.cert.X509Certificate;\n-import java.time.Duration;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.List;\n-import javax.net.ssl.KeyManagerFactory;\n-import org.springframework.boot.context.properties.ConfigurationProperties;\n-import org.springframework.boot.web.server.WebServerException;\n-import org.springframework.core.style.ToStringCreator;\n-import org.springframework.util.ResourceUtils;\n-import org.springframework.util.unit.DataSize;\n-import org.springframework.util.unit.DataUnit;\n-import org.springframework.validation.annotation.Validated;\n-import reactor.netty.resources.ConnectionProvider;\n-import reactor.netty.tcp.SslProvider;\n-import reactor.netty.transport.ProxyProvider;\n-\n-// CHECKSTYLE:OFF\n-// Semi-blind copy from Spring Cloud Gateway sources, to keep until they are tied\n-// to Hibernate Validator and not Jakarta Validation API - see\n-// https://lists.apache.org/thread/km7c4ojrlw5q5j42cbw7nht6b0f4z5r2\n-// for details.\n-/**\n- * Configuration properties for the Netty {@link reactor.netty.http.client.HttpClient}.\n- */\n-@ConfigurationProperties(\"spring.cloud.gateway.httpclient\")\n-@Validated\n-@SuppressWarnings(\"deprecation\")\n-public class HttpClientProperties {\n-\n-\t/** The connect timeout in millis, the default is 45s. */\n-\tprivate Integer connectTimeout;\n-\n-\t/** The response timeout. */\n-\tprivate Duration responseTimeout;\n-\n-\t/** The max response header size. */\n-\tprivate DataSize maxHeaderSize;\n-\n-\t/** The max initial line length. */\n-\tprivate DataSize maxInitialLineLength;\n-\n-\t/** Pool configuration for Netty HttpClient. */\n-\tprivate Pool pool = new Pool();\n-\n-\t/** Proxy configuration for Netty HttpClient. */\n-\tprivate Proxy proxy = new Proxy();\n-\n-\t/** SSL configuration for Netty HttpClient. */\n-\tprivate Ssl ssl = new Ssl();\n-\n-\t/** Websocket configuration for Netty HttpClient. */\n-\tprivate Websocket websocket = new Websocket();\n-\n-\t/** Enables wiretap debugging for Netty HttpClient. */\n-\tprivate boolean wiretap;\n-\n-\t/** Enables compression for Netty HttpClient. */\n-\tprivate boolean compression;\n-\n-\tpublic Integer getConnectTimeout() {\n-\t\treturn connectTimeout;\n-\t}\n-\n-\tpublic void setConnectTimeout(Integer connectTimeout) {\n-\t\tthis.connectTimeout = connectTimeout;\n-\t}\n-\n-\tpublic Duration getResponseTimeout() {\n-\t\treturn responseTimeout;\n-\t}\n-\n-\tpublic void setResponseTimeout(Duration responseTimeout) {\n-\t\tthis.responseTimeout = responseTimeout;\n-\t}\n-\n-\t@DataSizeMax(value = Integer.MAX_VALUE, unit = DataUnit.BYTES)\n-\tpublic DataSize getMaxHeaderSize() {\n-\t\treturn maxHeaderSize;\n-\t}\n-\n-\tpublic void setMaxHeaderSize(DataSize maxHeaderSize) {\n-\t\tthis.maxHeaderSize = maxHeaderSize;\n-\t}\n-\n-\t@DataSizeMax(value = Integer.MAX_VALUE, unit = DataUnit.BYTES)\n-\tpublic DataSize getMaxInitialLineLength() {\n-\t\treturn maxInitialLineLength;\n-\t}\n-\n-\tpublic void setMaxInitialLineLength(DataSize maxInitialLineLength) {\n-\t\tthis.maxInitialLineLength = maxInitialLineLength;\n-\t}\n-\n-\tpublic Pool getPool() {\n-\t\treturn pool;\n-\t}\n-\n-\tpublic void setPool(Pool pool) {\n-\t\tthis.pool = pool;\n-\t}\n-\n-\tpublic Proxy getProxy() {\n-\t\treturn proxy;\n-\t}\n-\n-\tpublic void setProxy(Proxy proxy) {\n-\t\tthis.proxy = proxy;\n-\t}\n-\n-\tpublic Ssl getSsl() {\n-\t\treturn ssl;\n-\t}\n-\n-\tpublic void setSsl(Ssl ssl) {\n-\t\tthis.ssl = ssl;\n-\t}\n-\n-\tpublic Websocket getWebsocket() {\n-\t\treturn this.websocket;\n-\t}\n-\n-\tpublic void setWebsocket(Websocket websocket) {\n-\t\tthis.websocket = websocket;\n-\t}\n-\n-\tpublic boolean isWiretap() {\n-\t\treturn this.wiretap;\n-\t}\n-\n-\tpublic void setWiretap(boolean wiretap) {\n-\t\tthis.wiretap = wiretap;\n-\t}\n-\n-\tpublic boolean isCompression() {\n-\t\treturn compression;\n-\t}\n-\n-\tpublic void setCompression(boolean compression) {\n-\t\tthis.compression = compression;\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\t// @formatter:off\n-\t\treturn new ToStringCreator(this)\n-\t\t\t\t.append(\"connectTimeout\", connectTimeout)\n-\t\t\t\t.append(\"responseTimeout\", responseTimeout)\n-\t\t\t\t.append(\"maxHeaderSize\", maxHeaderSize)\n-\t\t\t\t.append(\"maxInitialLineLength\", maxInitialLineLength)\n-\t\t\t\t.append(\"pool\", pool)\n-\t\t\t\t.append(\"proxy\", proxy)\n-\t\t\t\t.append(\"ssl\", ssl)\n-\t\t\t\t.append(\"websocket\", websocket)\n-\t\t\t\t.append(\"wiretap\", wiretap)\n-\t\t\t\t.append(\"compression\", compression)\n-\t\t\t\t.toString();\n-\t\t// @formatter:on\n-\n-\t}\n-\n-\tpublic static class Pool {\n-\n-\t\t/** Type of pool for HttpClient to use, defaults to ELASTIC. */\n-\t\tprivate PoolType type = PoolType.ELASTIC;\n-\n-\t\t/** The channel pool map name, defaults to proxy. */\n-\t\tprivate String name = \"proxy\";\n-\n-\t\t/**\n-\t\t * Only for type FIXED, the maximum number of connections before starting pending\n-\t\t * acquisition on existing ones.\n-\t\t */\n-\t\tprivate Integer maxConnections = ConnectionProvider.DEFAULT_POOL_MAX_CONNECTIONS;\n-\n-\t\t/** Only for type FIXED, the maximum time in millis to wait for acquiring. */\n-\t\tprivate Long acquireTimeout = ConnectionProvider.DEFAULT_POOL_ACQUIRE_TIMEOUT;\n-\n-\t\t/**\n-\t\t * Time in millis after which the channel will be closed. If NULL, there is no max\n-\t\t * idle time.\n-\t\t */\n-\t\tprivate Duration maxIdleTime = null;\n-\n-\t\t/**\n-\t\t * Duration after which the channel will be closed. If NULL, there is no max life\n-\t\t * time.\n-\t\t */\n-\t\tprivate Duration maxLifeTime = null;\n-\n-\t\t/**\n-\t\t * Perform regular eviction checks in the background at a specified interval.\n-\t\t * Disabled by default ({@link Duration#ZERO})\n-\t\t */\n-\t\tprivate Duration evictionInterval = Duration.ZERO;\n-\n-\t\t/**\n-\t\t * Enables channel pools metrics to be collected and registered in Micrometer.\n-\t\t * Disabled by default.\n-\t\t */\n-\t\tprivate boolean metrics = false;\n-\n-\t\tpublic PoolType getType() {\n-\t\t\treturn type;\n-\t\t}\n-\n-\t\tpublic void setType(PoolType type) {\n-\t\t\tthis.type = type;\n-\t\t}\n-\n-\t\tpublic String getName() {\n-\t\t\treturn name;\n-\t\t}\n-\n-\t\tpublic void setName(String name) {\n-\t\t\tthis.name = name;\n-\t\t}\n-\n-\t\tpublic Integer getMaxConnections() {\n-\t\t\treturn maxConnections;\n-\t\t}\n-\n-\t\tpublic void setMaxConnections(Integer maxConnections) {\n-\t\t\tthis.maxConnections = maxConnections;\n-\t\t}\n-\n-\t\tpublic Long getAcquireTimeout() {\n-\t\t\treturn acquireTimeout;\n-\t\t}\n-\n-\t\tpublic void setAcquireTimeout(Long acquireTimeout) {\n-\t\t\tthis.acquireTimeout = acquireTimeout;\n-\t\t}\n-\n-\t\tpublic Duration getMaxIdleTime() {\n-\t\t\treturn maxIdleTime;\n-\t\t}\n-\n-\t\tpublic void setMaxIdleTime(Duration maxIdleTime) {\n-\t\t\tthis.maxIdleTime = maxIdleTime;\n-\t\t}\n-\n-\t\tpublic Duration getMaxLifeTime() {\n-\t\t\treturn maxLifeTime;\n-\t\t}\n-\n-\t\tpublic void setMaxLifeTime(Duration maxLifeTime) {\n-\t\t\tthis.maxLifeTime = maxLifeTime;\n-\t\t}\n-\n-\t\tpublic Duration getEvictionInterval() {\n-\t\t\treturn evictionInterval;\n-\t\t}\n-\n-\t\tpublic void setEvictionInterval(Duration evictionInterval) {\n-\t\t\tthis.evictionInterval = evictionInterval;\n-\t\t}\n-\n-\t\tpublic boolean isMetrics() {\n-\t\t\treturn metrics;\n-\t\t}\n-\n-\t\tpublic void setMetrics(boolean metrics) {\n-\t\t\tthis.metrics = metrics;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic String toString() {\n-\t\t\treturn \"Pool{\" + \"type=\" + type + \", name='\" + name + '\\'' + \", maxConnections=\" + maxConnections\n-\t\t\t\t\t+ \", acquireTimeout=\" + acquireTimeout + \", maxIdleTime=\" + maxIdleTime + \", maxLifeTime=\"\n-\t\t\t\t\t+ maxLifeTime + \", evictionInterval=\" + evictionInterval + \", metrics=\" + metrics + '}';\n-\t\t}\n-\n-\t\tpublic enum PoolType {\n-\n-\t\t\t/**\n-\t\t\t * Elastic pool type.\n-\t\t\t */\n-\t\t\tELASTIC,\n-\n-\t\t\t/**\n-\t\t\t * Fixed pool type.\n-\t\t\t */\n-\t\t\tFIXED,\n-\n-\t\t\t/**\n-\t\t\t * Disabled pool type.\n-\t\t\t */\n-\t\t\tDISABLED\n-\n-\t\t}\n-\n-\t}\n-\n-\tpublic static class Proxy {\n-\n-\t\t/** proxyType for proxy configuration of Netty HttpClient. */\n-\t\tprivate ProxyProvider.Proxy type = ProxyProvider.Proxy.HTTP;\n-\n-\t\t/** Hostname for proxy configuration of Netty HttpClient. */\n-\t\tprivate String host;\n-\n-\t\t/** Port for proxy configuration of Netty HttpClient. */\n-\t\tprivate Integer port;\n-\n-\t\t/** Username for proxy configuration of Netty HttpClient. */\n-\t\tprivate String username;\n-\n-\t\t/** Password for proxy configuration of Netty HttpClient. */\n-\t\tprivate String password;\n-\n-\t\t/**\n-\t\t * Regular expression (Java) for a configured list of hosts. that should be\n-\t\t * reached directly, bypassing the proxy\n-\t\t */\n-\t\tprivate String nonProxyHostsPattern;\n-\n-\t\tpublic ProxyProvider.Proxy getType() {\n-\t\t\treturn type;\n-\t\t}\n-\n-\t\tpublic void setType(ProxyProvider.Proxy type) {\n-\t\t\tthis.type = type;\n-\t\t}\n-\n-\t\tpublic String getHost() {\n-\t\t\treturn host;\n-\t\t}\n-\n-\t\tpublic void setHost(String host) {\n-\t\t\tthis.host = host;\n-\t\t}\n-\n-\t\tpublic Integer getPort() {\n-\t\t\treturn port;\n-\t\t}\n-\n-\t\tpublic void setPort(Integer port) {\n-\t\t\tthis.port = port;\n-\t\t}\n-\n-\t\tpublic String getUsername() {\n-\t\t\treturn username;\n-\t\t}\n-\n-\t\tpublic void setUsername(String username) {\n-\t\t\tthis.username = username;\n-\t\t}\n-\n-\t\tpublic String getPassword() {\n-\t\t\treturn password;\n-\t\t}\n-\n-\t\tpublic void setPassword(String password) {\n-\t\t\tthis.password = password;\n-\t\t}\n-\n-\t\tpublic String getNonProxyHostsPattern() {\n-\t\t\treturn nonProxyHostsPattern;\n-\t\t}\n-\n-\t\tpublic void setNonProxyHostsPattern(String nonProxyHostsPattern) {\n-\t\t\tthis.nonProxyHostsPattern = nonProxyHostsPattern;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic String toString() {\n-\t\t\treturn \"Proxy{\" + \"type='\" + type + '\\'' + \"host='\" + host + '\\'' + \", port=\" + port + \", username='\"\n-\t\t\t\t\t+ username + '\\'' + \", password='\" + password + '\\'' + \", nonProxyHostsPattern='\"\n-\t\t\t\t\t+ nonProxyHostsPattern + '\\'' + '}';\n-\t\t}\n-\n-\t}\n-\n-\tpublic static class Ssl {\n-\n-\t\t/**\n-\t\t * Installs the netty InsecureTrustManagerFactory. This is insecure and not\n-\t\t * suitable for production.\n-\t\t */\n-\t\tprivate boolean useInsecureTrustManager = false;\n-\n-\t\t/** Trusted certificates for verifying the remote endpoint's certificate. */\n-\t\tprivate List<String> trustedX509Certificates = new ArrayList<>();\n-\n-\t\t// use netty default SSL timeouts\n-\t\t/** SSL handshake timeout. Default to 10000 ms */\n-\t\tprivate Duration handshakeTimeout = Duration.ofMillis(10000);\n-\n-\t\t/** SSL close_notify flush timeout. Default to 3000 ms. */\n-\t\tprivate Duration closeNotifyFlushTimeout = Duration.ofMillis(3000);\n-\n-\t\t/** SSL close_notify read timeout. Default to 0 ms. */\n-\t\tprivate Duration closeNotifyReadTimeout = Duration.ZERO;\n-\n-\t\t/** The default ssl configuration type. Defaults to TCP. */\n-\t\t@Deprecated\n-\t\tprivate SslProvider.DefaultConfigurationType defaultConfigurationType = SslProvider.DefaultConfigurationType.TCP;\n-\n-\t\t/** Keystore path for Netty HttpClient. */\n-\t\tprivate String keyStore;\n-\n-\t\t/** Keystore type for Netty HttpClient, default is JKS. */\n-\t\tprivate String keyStoreType = \"JKS\";\n-\n-\t\t/** Keystore provider for Netty HttpClient, optional field. */\n-\t\tprivate String keyStoreProvider;\n-\n-\t\t/** Keystore password. */\n-\t\tprivate String keyStorePassword;\n-\n-\t\t/** Key password, default is same as keyStorePassword. */\n-\t\tprivate String keyPassword;\n-\n-\t\tpublic String getKeyStorePassword() {\n-\t\t\treturn keyStorePassword;\n-\t\t}\n-\n-\t\tpublic void setKeyStorePassword(String keyStorePassword) {\n-\t\t\tthis.keyStorePassword = keyStorePassword;\n-\t\t}\n-\n-\t\tpublic String getKeyStoreType() {\n-\t\t\treturn keyStoreType;\n-\t\t}\n-\n-\t\tpublic void setKeyStoreType(String keyStoreType) {\n-\t\t\tthis.keyStoreType = keyStoreType;\n-\t\t}\n-\n-\t\tpublic String getKeyStoreProvider() {\n-\t\t\treturn keyStoreProvider;\n-\t\t}\n-\n-\t\tpublic void setKeyStoreProvider(String keyStoreProvider) {\n-\t\t\tthis.keyStoreProvider = keyStoreProvider;\n-\t\t}\n-\n-\t\tpublic String getKeyStore() {\n-\t\t\treturn keyStore;\n-\t\t}\n-\n-\t\tpublic void setKeyStore(String keyStore) {\n-\t\t\tthis.keyStore = keyStore;\n-\t\t}\n-\n-\t\tpublic String getKeyPassword() {\n-\t\t\treturn keyPassword;\n-\t\t}\n-\n-\t\tpublic void setKeyPassword(String keyPassword) {\n-\t\t\tthis.keyPassword = keyPassword;\n-\t\t}\n-\n-\t\tpublic List<String> getTrustedX509Certificates() {\n-\t\t\treturn trustedX509Certificates;\n-\t\t}\n-\n-\t\tpublic void setTrustedX509Certificates(List<String> trustedX509) {\n-\t\t\tthis.trustedX509Certificates = trustedX509;\n-\t\t}\n-\n-\t\tpublic X509Certificate[] getTrustedX509CertificatesForTrustManager() {\n-\t\t\ttry {\n-\t\t\t\tCertificateFactory certificateFactory = CertificateFactory.getInstance(\"X.509\");\n-\t\t\t\tArrayList<Certificate> allCerts = new ArrayList<>();\n-\t\t\t\tfor (String trustedCert : getTrustedX509Certificates()) {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tURL url = ResourceUtils.getURL(trustedCert);\n-\t\t\t\t\t\tCollection<? extends Certificate> certs = certificateFactory\n-\t\t\t\t\t\t\t\t.generateCertificates(url.openStream());\n-\t\t\t\t\t\tallCerts.addAll(certs);\n-\t\t\t\t\t}\n-\t\t\t\t\tcatch (IOException e) {\n-\t\t\t\t\t\tthrow new WebServerException(\"Could not load certificate '\" + trustedCert + \"'\", e);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\treturn allCerts.toArray(new X509Certificate[allCerts.size()]);\n-\t\t\t}\n-\t\t\tcatch (CertificateException e1) {\n-\t\t\t\tthrow new WebServerException(\"Could not load CertificateFactory X.509\", e1);\n-\t\t\t}\n-\t\t}\n-\n-\t\tpublic KeyManagerFactory getKeyManagerFactory() {\n-\t\t\ttry {\n-\t\t\t\tif (getKeyStore() != null && getKeyStore().length() > 0) {\n-\t\t\t\t\tKeyManagerFactory keyManagerFactory = KeyManagerFactory\n-\t\t\t\t\t\t\t.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n-\t\t\t\t\tchar[] keyPassword = getKeyPassword() != null ? getKeyPassword().toCharArray() : null;\n-\n-\t\t\t\t\tif (keyPassword == null && getKeyStorePassword() != null) {\n-\t\t\t\t\t\tkeyPassword = getKeyStorePassword().toCharArray();\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tkeyManagerFactory.init(this.createKeyStore(), keyPassword);\n-\n-\t\t\t\t\treturn keyManagerFactory;\n-\t\t\t\t}\n-\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t\tcatch (Exception e) {\n-\t\t\t\tthrow new IllegalStateException(e);\n-\t\t\t}\n-\t\t}\n-\n-\t\tpublic KeyStore createKeyStore() {\n-\t\t\ttry {\n-\t\t\t\tKeyStore store = getKeyStoreProvider() != null\n-\t\t\t\t\t\t? KeyStore.getInstance(getKeyStoreType(), getKeyStoreProvider())\n-\t\t\t\t\t\t: KeyStore.getInstance(getKeyStoreType());\n-\t\t\t\ttry {\n-\t\t\t\t\tURL url = ResourceUtils.getURL(getKeyStore());\n-\t\t\t\t\tstore.load(url.openStream(),\n-\t\t\t\t\t\t\tgetKeyStorePassword() != null ? getKeyStorePassword().toCharArray() : null);\n-\t\t\t\t}\n-\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\tthrow new WebServerException(\"Could not load key store ' \" + getKeyStore() + \"'\", e);\n-\t\t\t\t}\n-\n-\t\t\t\treturn store;\n-\t\t\t}\n-\t\t\tcatch (KeyStoreException | NoSuchProviderException e) {\n-\t\t\t\tthrow new WebServerException(\"Could not load KeyStore for given type and provider\", e);\n-\t\t\t}\n-\t\t}\n-\n-\t\t// TODO: support configuration of other trust manager factories\n-\n-\t\tpublic boolean isUseInsecureTrustManager() {\n-\t\t\treturn useInsecureTrustManager;\n-\t\t}\n-\n-\t\tpublic void setUseInsecureTrustManager(boolean useInsecureTrustManager) {\n-\t\t\tthis.useInsecureTrustManager = useInsecureTrustManager;\n-\t\t}\n-\n-\t\tpublic Duration getHandshakeTimeout() {\n-\t\t\treturn handshakeTimeout;\n-\t\t}\n-\n-\t\tpublic void setHandshakeTimeout(Duration handshakeTimeout) {\n-\t\t\tthis.handshakeTimeout = handshakeTimeout;\n-\t\t}\n-\n-\t\tpublic Duration getCloseNotifyFlushTimeout() {\n-\t\t\treturn closeNotifyFlushTimeout;\n-\t\t}\n-\n-\t\tpublic void setCloseNotifyFlushTimeout(Duration closeNotifyFlushTimeout) {\n-\t\t\tthis.closeNotifyFlushTimeout = closeNotifyFlushTimeout;\n-\t\t}\n-\n-\t\tpublic Duration getCloseNotifyReadTimeout() {\n-\t\t\treturn closeNotifyReadTimeout;\n-\t\t}\n-\n-\t\tpublic void setCloseNotifyReadTimeout(Duration closeNotifyReadTimeout) {\n-\t\t\tthis.closeNotifyReadTimeout = closeNotifyReadTimeout;\n-\t\t}\n-\n-\t\t@Deprecated\n-\t\tpublic SslProvider.DefaultConfigurationType getDefaultConfigurationType() {\n-\t\t\treturn defaultConfigurationType;\n-\t\t}\n-\n-\t\t@Deprecated\n-\t\tpublic void setDefaultConfigurationType(SslProvider.DefaultConfigurationType defaultConfigurationType) {\n-\t\t\tthis.defaultConfigurationType = defaultConfigurationType;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic String toString() {\n-\t\t\treturn new ToStringCreator(this).append(\"useInsecureTrustManager\", useInsecureTrustManager)\n-\t\t\t\t\t.append(\"trustedX509Certificates\", trustedX509Certificates)\n-\t\t\t\t\t.append(\"handshakeTimeout\", handshakeTimeout)\n-\t\t\t\t\t.append(\"closeNotifyFlushTimeout\", closeNotifyFlushTimeout)\n-\t\t\t\t\t.append(\"closeNotifyReadTimeout\", closeNotifyReadTimeout)\n-\t\t\t\t\t.append(\"defaultConfigurationType\", defaultConfigurationType).toString();\n-\t\t}\n-\n-\t}\n-\n-\tpublic static class Websocket {\n-\n-\t\t/** Max frame payload length. */\n-\t\tprivate Integer maxFramePayloadLength;\n-\n-\t\t/** Proxy ping frames to downstream services, defaults to true. */\n-\t\tprivate boolean proxyPing = true;\n-\n-\t\tpublic Integer getMaxFramePayloadLength() {\n-\t\t\treturn this.maxFramePayloadLength;\n-\t\t}\n-\n-\t\tpublic void setMaxFramePayloadLength(Integer maxFramePayloadLength) {\n-\t\t\tthis.maxFramePayloadLength = maxFramePayloadLength;\n-\t\t}\n-\n-\t\tpublic boolean isProxyPing() {\n-\t\t\treturn proxyPing;\n-\t\t}\n-\n-\t\tpublic void setProxyPing(boolean proxyPing) {\n-\t\t\tthis.proxyPing = proxyPing;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic String toString() {\n-\t\t\treturn new ToStringCreator(this).append(\"maxFramePayloadLength\", maxFramePayloadLength)\n-\t\t\t\t\t.append(\"proxyPing\", proxyPing).toString();\n-\t\t}\n-\n-\t}\n-\n-}"},{"sha":"d0b285f40580e9c6dff7c79ccff383d1a4c4d5ad","filename":"src/main/asciidoc/getting-started/obtain.adoc","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e32abd3f0797dd23ecd868327c3cdb3afed24ab4/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc?ref=e32abd3f0797dd23ecd868327c3cdb3afed24ab4","patch":"@@ -631,6 +631,10 @@ $ mvn -P embedded,all\n \n ===== Paths and Components\n \n+[WARNING]\n+While accessing the URLs below, your browser will warn that the presented TLS certificate is invalid: it is safe to\n+just ignore the message, take the risk and discover how deep does the rabbit hole go. Not for production, of course.\n+\n [cols=\"1,2\"]\n |===\n \n@@ -641,23 +645,23 @@ $ mvn -P embedded,all\n | Available under `core/target/bundles`\n \n | REST API reference\n-| http://localhost:9080/syncope/\n+| https://localhost:9443/syncope/\n \n | Admini UI\n-| http://localhost:9080/syncope-console/ +\n+| https://localhost:9443/syncope-console/ +\n Credentials: `admin` / `password`\n \n | End-user UI\n-| http://localhost:9080/syncope-enduser/\n+| https://localhost:9443/syncope-enduser/\n \n | WA\n-| http://localhost:9080/syncope-wa/\n+| https://localhost:9443/syncope-wa/\n \n | SRA\n | http://localhost:8080/\n \n | Internal storage\n-| A SQL web interface is available at http://localhost:9080/syncope/h2 +\n+| A SQL web interface is available at https://localhost:9443/syncope/h2 +\n  +\n  Choose configuration 'Generic H2 (Embedded)' +\n  Insert `jdbc:h2:mem:syncopedb` as JDBC URL +\n@@ -674,7 +678,7 @@ You can configure any LDAP client (such as http://jxplorer.org/[JXplorer^], for\n  bind password: `secret`\n \n | External resource: SOAP and REST\n-| Example SOAP and REST services are available at http://localhost:9080/syncope-fit-build-tools/cxf/\n+| Example SOAP and REST services are available at https://localhost:9443/syncope-fit-build-tools/cxf/\n \n | External resource: database\n | http://www.h2database.com/[H2^] TCP database is available. +"}]}