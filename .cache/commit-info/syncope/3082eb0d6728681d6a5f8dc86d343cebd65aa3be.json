{"sha":"3082eb0d6728681d6a5f8dc86d343cebd65aa3be","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMwODJlYjBkNjcyODY4MWQ2YTVmOGRjODZkMzQzY2ViZDY1YWEzYmU=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-03T15:52:42Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-03T15:52:42Z"},"message":"bugfix in schema output and refactoring, SYNCOPE-158","tree":{"sha":"148fb488301b305bac1af17af326252e35cef466","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/148fb488301b305bac1af17af326252e35cef466"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3082eb0d6728681d6a5f8dc86d343cebd65aa3be","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3082eb0d6728681d6a5f8dc86d343cebd65aa3be","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3082eb0d6728681d6a5f8dc86d343cebd65aa3be","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"2d036afe28f7024c76e0ed76d86c9b0805541b78","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2d036afe28f7024c76e0ed76d86c9b0805541b78","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2d036afe28f7024c76e0ed76d86c9b0805541b78"}],"stats":{"total":279,"additions":124,"deletions":155},"files":[{"sha":"64030491ea621e0e143040e25eaed1364ebfa667","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyCommand.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -32,7 +32,7 @@ public class PolicyCommand extends AbstractCommand {\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n             + \"    --details \\n\"\n-            + \"    --list-policy \\n\"\n+            + \"    --list \\n\"\n             + \"       Syntax: --list-policy {POLICY-TYPE} \\n\"\n             + \"          Policy type: ACCOUNT / PASSWORD / SYNC / PUSH\\n\"\n             + \"    --read \\n\"\n@@ -50,7 +50,7 @@ public void execute(final Input input) {\n             case DETAILS:\n                 new PolicyDetails(input).details();\n                 break;\n-            case LIST_POLICY:\n+            case LIST:\n                 new PolicyList(input).list();\n                 break;\n             case READ:\n@@ -76,7 +76,7 @@ private enum Options {\n \n         HELP(\"--help\"),\n         DETAILS(\"--details\"),\n-        LIST_POLICY(\"--list-policy\"),\n+        LIST(\"--list\"),\n         READ(\"--read\"),\n         DELETE(\"--delete\");\n "},{"sha":"077ab4523808df2b10e06735d4bb96c04d3a0297","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDetails.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -41,10 +41,10 @@ public void details() {\n         if (input.parameterNumber() == 0) {\n             try {\n                 final Map<String, String> details = new LinkedMap<>();\n-                final int accountPolicySize = policySyncopeOperations.list(PolicyType.ACCOUNT).size();\n-                final int passwordPolicySize = policySyncopeOperations.list(PolicyType.PASSWORD).size();\n-                final int syncPolicySize = policySyncopeOperations.list(PolicyType.SYNC).size();\n-                final int pushPolicySize = policySyncopeOperations.list(PolicyType.PUSH).size();\n+                final int accountPolicySize = policySyncopeOperations.list(PolicyType.ACCOUNT.name()).size();\n+                final int passwordPolicySize = policySyncopeOperations.list(PolicyType.PASSWORD.name()).size();\n+                final int syncPolicySize = policySyncopeOperations.list(PolicyType.SYNC.name()).size();\n+                final int pushPolicySize = policySyncopeOperations.list(PolicyType.PUSH.name()).size();\n                 details.put(\"total number\", String.valueOf(accountPolicySize\n                         + passwordPolicySize\n                         + syncPolicySize"},{"sha":"95a7d98d618559bdab7b51ecfe76618dfc50c268","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyList.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -31,7 +31,7 @@ public class PolicyList extends AbstractPolicyCommand {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PolicyList.class);\n \n-    private static final String LIST_HELP_MESSAGE = \"policy --list-policy {POLICY-TYPE}\\n\"\n+    private static final String LIST_HELP_MESSAGE = \"policy --list {POLICY-TYPE}\\n\"\n             + \"   Policy type: ACCOUNT / PASSWORD / SYNC / PUSH\";\n \n     private final Input input;\n@@ -43,12 +43,11 @@ public PolicyList(final Input input) {\n     public void list() {\n         if (input.parameterNumber() == 1) {\n             try {\n-                final PolicyType policyType = PolicyType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractPolicyTO> policyTOs = new LinkedList<>();\n-                for (final AbstractPolicyTO policyTO : policySyncopeOperations.list(policyType)) {\n+                for (final AbstractPolicyTO policyTO : policySyncopeOperations.list(input.firstParameter())) {\n                     policyTOs.add(policyTO);\n                 }\n-                policyResultManager.printPoliciesByType(policyType, policyTOs);\n+                policyResultManager.printPoliciesByType(input.firstParameter(), policyTOs);\n             } catch (final SyncopeClientException ex) {\n                 LOG.error(\"Error listing policy\", ex);\n                 policyResultManager.genericError(ex.getMessage());"},{"sha":"acd7eb3c4ad324c73e76c9158840ea363f2d2c98","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyResultManager.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -55,8 +55,9 @@ public void printPolicies(final LinkedList<AbstractPolicyTO> policyTOs) {\n \n     }\n \n-    public void printPoliciesByType(final PolicyType policyType, final LinkedList<AbstractPolicyTO> policyTOs) {\n+    public void printPoliciesByType(final String policyTypeString, final LinkedList<AbstractPolicyTO> policyTOs) {\n         System.out.println(\"\");\n+        final PolicyType policyType = PolicyType.valueOf(policyTypeString);\n         switch (policyType) {\n             case ACCOUNT:\n                 for (final AbstractPolicyTO policyTO : policyTOs) {"},{"sha":"e2d40704c4d2037c6f51c5796df50092c9152fdb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicySyncopeOperations.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -32,8 +32,8 @@ public <T extends AbstractPolicyTO> T read(final String policyId) {\n         return policyService.read(Long.valueOf(policyId));\n     }\n \n-    public <T extends AbstractPolicyTO> List<T> list(final PolicyType policyType) {\n-        return policyService.list(policyType);\n+    public <T extends AbstractPolicyTO> List<T> list(final String policyType) {\n+        return policyService.list(PolicyType.valueOf(policyType));\n     }\n \n     public void delete(final String policyId) {"},{"sha":"0dd7fb8fe031c659da1500a8d51b38bb71649fae","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportExportExecution.java","status":"modified","additions":3,"deletions":27,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportExportExecution.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -19,14 +19,12 @@\n package org.apache.syncope.client.cli.commands.report;\n \n import java.io.IOException;\n-import java.io.SequenceInputStream;\n import java.util.Arrays;\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.transform.TransformerException;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.util.CommandUtils;\n-import org.apache.syncope.client.cli.util.XMLUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.slf4j.Logger;\n@@ -52,31 +50,9 @@ public void export() {\n             final String[] parameters = Arrays.copyOf(input.getParameters(), input.parameterNumber() - 1);\n             for (final String parameter : parameters) {\n                 try {\n-                    final ReportExecExportFormat format = ReportExecExportFormat.valueOf(input.lastParameter());\n-                    final SequenceInputStream report = (SequenceInputStream) reportSyncopeOperations.\n-                            exportExecutionResult(parameter, format).getEntity();\n-                    switch (format) {\n-                        case XML:\n-                            final String xmlFinalName = \"export_\" + parameter + \".xml\";\n-                            XMLUtils.createXMLFile(report, xmlFinalName);\n-                            reportResultManager.genericMessage(xmlFinalName + \" successfully created\");\n-                            break;\n-                        case CSV:\n-                            reportResultManager.genericError(format + \" doesn't supported\");\n-                            break;\n-                        case PDF:\n-                            reportResultManager.genericError(format + \" doesn't supported\");\n-                            break;\n-                        case HTML:\n-                            reportResultManager.genericError(format + \" doesn't supported\");\n-                            break;\n-                        case RTF:\n-                            reportResultManager.genericError(format + \" doesn't supported\");\n-                            break;\n-                        default:\n-                            reportResultManager.genericError(format + \" doesn't supported\");\n-                            break;\n-                    }\n+                    final String result = reportSyncopeOperations.exportExecutionResult(\n+                            parameter, input.lastParameter());\n+                    reportResultManager.genericMessage(result);\n                 } catch (final WebServiceException | SyncopeClientException ex) {\n                     LOG.error(\"Error exporting execution\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"ff743dcadfcc935ead199c79da8a7525b814be51","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportListJobs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportListJobs.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -40,7 +40,7 @@ public void list() {\n         if (input.parameterNumber() == 0) {\n             try {\n                 for (final JobStatusType jobStatusType : JobStatusType.values()) {\n-                    reportResultManager.printReportExecution(reportSyncopeOperations.listJobs(jobStatusType));\n+                    reportResultManager.printReportExecution(reportSyncopeOperations.listJobs(jobStatusType.name()));\n                 }\n             } catch (final SyncopeClientException ex) {\n                 LOG.error(\"Error listing report\", ex);"},{"sha":"a02ae762a8d751cf367abb4c3c95f14029fe988a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportSyncopeOperations.java","status":"modified","additions":30,"deletions":5,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -18,14 +18,19 @@\n  */\n package org.apache.syncope.client.cli.commands.report;\n \n+import java.io.IOException;\n+import java.io.SequenceInputStream;\n import java.util.List;\n-import javax.ws.rs.core.Response;\n+import javax.xml.parsers.ParserConfigurationException;\n+import javax.xml.transform.TransformerException;\n import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.client.cli.util.XMLUtils;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.JobStatusType;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.apache.syncope.common.rest.api.service.ReportService;\n+import org.xml.sax.SAXException;\n \n public class ReportSyncopeOperations {\n \n@@ -39,16 +44,36 @@ public ReportTO read(final String reportId) {\n         return reportService.read(Long.valueOf(reportId));\n     }\n \n-    public List<ReportExecTO> listJobs(final JobStatusType jobStatusType) {\n-        return reportService.listJobs(jobStatusType);\n+    public List<ReportExecTO> listJobs(final String jobStatusType) {\n+        return reportService.listJobs(JobStatusType.valueOf(jobStatusType));\n     }\n \n     public List<ReportTO> list() {\n         return reportService.list();\n     }\n \n-    public Response exportExecutionResult(final String executionKey, final ReportExecExportFormat fmt) {\n-        return reportService.exportExecutionResult(Long.valueOf(executionKey), fmt);\n+    public String exportExecutionResult(final String executionKey, final String reportExecExportFormat)\n+            throws TransformerException, SAXException, IOException, ParserConfigurationException {\n+        final ReportExecExportFormat format = ReportExecExportFormat.valueOf(reportExecExportFormat);\n+        final SequenceInputStream report = (SequenceInputStream) reportService.exportExecutionResult(Long.valueOf(\n+                executionKey), format).getEntity();\n+        final String xmlFinalName = \"export_\" + executionKey + \".xml\";\n+        switch (format) {\n+            case XML:\n+                XMLUtils.createXMLFile(report, xmlFinalName);\n+                break;\n+            case CSV:\n+                return format + \" doesn't supported\";\n+            case PDF:\n+                return format + \" doesn't supported\";\n+            case HTML:\n+                return format + \" doesn't supported\";\n+            case RTF:\n+                return format + \" doesn't supported\";\n+            default:\n+                return format + \" doesn't supported\";\n+        }\n+        return xmlFinalName;\n     }\n \n     public void execute(final String reportId) {"},{"sha":"beae0883bbf0ae07a8f9b2b749ed1e71d7b75702","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDelete.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -45,7 +45,7 @@ public void delete() {\n             final String[] parameters = Arrays.copyOfRange(input.getParameters(), 1, input.parameterNumber());\n             try {\n                 for (final String parameter : parameters) {\n-                    schemaSyncopeOperations.delete(SchemaType.valueOf(input.firstParameter()), parameter);\n+                    schemaSyncopeOperations.delete(input.firstParameter(), parameter);\n                     schemaResultManager.deletedMessage(\"Schema\", parameter);\n                 }\n             } catch (final SyncopeClientException | WebServiceException ex) {"},{"sha":"5615b50728bc99f7307187f9ba79278018ca0a54","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaList.java","status":"modified","additions":2,"deletions":15,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaList.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -43,24 +43,11 @@ public SchemaList(final Input input) {\n     public void list() {\n         if (input.parameterNumber() == 1) {\n             try {\n-                final SchemaType schemaType = SchemaType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-                for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.list(schemaType)) {\n+                for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.list(input.firstParameter())) {\n                     schemaTOs.add(schemaTO);\n                 }\n-                switch (schemaType) {\n-                    case PLAIN:\n-                        schemaResultManager.printSchemas(schemaTOs);\n-                        break;\n-                    case DERIVED:\n-                        schemaResultManager.fromListDerived(schemaTOs);\n-                        break;\n-                    case VIRTUAL:\n-                        schemaResultManager.fromListVirtual(schemaTOs);\n-                        break;\n-                    default:\n-                        break;\n-                }\n+                schemaResultManager.toView(input.firstParameter(), schemaTOs);\n             } catch (final SyncopeClientException ex) {\n                 LOG.error(\"Error listing schema\", ex);\n                 schemaResultManager.genericError(ex.getMessage());"},{"sha":"fb0334721ef4ce522c24e07128313d817410019b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListAll.java","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListAll.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -44,22 +44,10 @@ public void listAll() {\n             try {\n                 for (final SchemaType schemaType : SchemaType.values()) {\n                     final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n-                    for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.list(schemaType)) {\n+                    for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.list(schemaType.name())) {\n                         schemaTOs.add(schemaTO);\n                     }\n-                    switch (schemaType) {\n-                        case PLAIN:\n-                            schemaResultManager.printSchemas(schemaTOs);\n-                            break;\n-                        case DERIVED:\n-                            schemaResultManager.fromListDerived(schemaTOs);\n-                            break;\n-                        case VIRTUAL:\n-                            schemaResultManager.fromListVirtual(schemaTOs);\n-                            break;\n-                        default:\n-                            break;\n-                    }\n+                    schemaResultManager.toView(schemaType.name(), schemaTOs);\n                 }\n             } catch (final SyncopeClientException | WebServiceException ex) {\n                 LOG.error(\"Error listing schema\", ex);"},{"sha":"5b18219ac7c958874a740927f62bcd0343f98b76","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaListPlain.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaListPlain.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -45,7 +45,7 @@ public void listPlain() {\n                 for (final AbstractSchemaTO schemaTO : schemaSyncopeOperations.listPlain()) {\n                     schemaTOs.add(schemaTO);\n                 }\n-                schemaResultManager.printSchemas(schemaTOs);\n+                schemaResultManager.printPlainSchemas(schemaTOs);\n             } catch (final SyncopeClientException | WebServiceException ex) {\n                 LOG.error(\"Error listing schema\", ex);\n                 schemaResultManager.genericError(ex.getMessage());"},{"sha":"0459cac0d156f419fdc4e5d03278826812df150d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaRead.java","status":"modified","additions":2,"deletions":15,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaRead.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -46,24 +46,11 @@ public void read() {\n         if (input.parameterNumber() >= 2) {\n             final String[] parameters = Arrays.copyOfRange(input.getParameters(), 1, input.parameterNumber());\n             try {\n-                final SchemaType schemaType = SchemaType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractSchemaTO> schemaTOs = new LinkedList<>();\n                 for (final String parameter : parameters) {\n-                    schemaTOs.add(schemaSyncopeOperations.read(schemaType, parameter));\n-                }\n-                switch (schemaType) {\n-                    case PLAIN:\n-                        schemaResultManager.printSchemasWithDetails(schemaTOs);\n-                        break;\n-                    case DERIVED:\n-                        schemaResultManager.fromListDerived(schemaTOs);\n-                        break;\n-                    case VIRTUAL:\n-                        schemaResultManager.fromListVirtual(schemaTOs);\n-                        break;\n-                    default:\n-                        break;\n+                    schemaTOs.add(schemaSyncopeOperations.read(input.firstParameter(), parameter));\n                 }\n+                schemaResultManager.toView(input.firstParameter(), schemaTOs);\n             } catch (final SyncopeClientException | WebServiceException ex) {\n                 LOG.error(\"Error reading schema\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"7dbdfd8361b981bdd6b09a4e8034d7733c0e1e7a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaResultManager.java","status":"modified","additions":37,"deletions":31,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -27,48 +27,54 @@\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n \n public class SchemaResultManager extends CommonsResultManager {\n \n-    public void printSchemas(final LinkedList<? extends AbstractSchemaTO> schemaTOs) {\n-        final Table.TableBuilder tableBuilder\n-                = new Table.TableBuilder(\"plain schemas\").header(\"schema key\").header(\"type\").header(\"mandatory\");\n+    public void toView(final String schemaTypeString, final LinkedList<? extends AbstractSchemaTO> schemaTOs) {\n+        switch (SchemaType.valueOf(schemaTypeString)) {\n+            case PLAIN:\n+                printPlainSchemasDetailed(schemaTOs);\n+                break;\n+            case DERIVED:\n+                fromListDerived(schemaTOs);\n+                break;\n+            case VIRTUAL:\n+                fromListVirtual(schemaTOs);\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n+    private void printPlainSchemasDetailed(final LinkedList<? extends AbstractSchemaTO> schemaTOs) {\n+        System.out.println(\"\");\n         for (final AbstractSchemaTO schemaTO : schemaTOs) {\n-            tableBuilder.rowValues(new LinkedList(Arrays.asList(\n-                    ((PlainSchemaTO) schemaTO).getKey(),\n-                    ((PlainSchemaTO) schemaTO).getType().toString(),\n-                    ((PlainSchemaTO) schemaTO).getMandatoryCondition())));\n+            printPlanSchemaDetailed((PlainSchemaTO) schemaTO);\n         }\n-        tableBuilder.build().print();\n     }\n \n-    public void printSchemasWithDetails(final LinkedList<? extends AbstractSchemaTO> schemaTOs) {\n+    private void printPlanSchemaDetailed(final PlainSchemaTO schemaTO) {\n+        System.out.println(\" > SCHEMA ID: \" + schemaTO.getKey());\n+        System.out.println(\"    type: \" + schemaTO.getType().toString());\n+        System.out.println(\"    any type class: \" + schemaTO.getAnyTypeClass());\n+        System.out.println(\"    conversion pattern: \" + schemaTO.getConversionPattern());\n+        System.out.println(\"    mandatory condition: \" + schemaTO.getMandatoryCondition());\n+        System.out.println(\"    mime type: \" + schemaTO.getMimeType());\n+        System.out.println(\"    validator class: \" + schemaTO.getValidatorClass());\n+        System.out.println(\"    chiper algorithm: \" + (schemaTO.getCipherAlgorithm() == null\n+                ? \"\" : schemaTO.getCipherAlgorithm().getAlgorithm()));\n+        System.out.println(\"\");\n+    }\n+\n+    public void printPlainSchemas(final LinkedList<? extends AbstractSchemaTO> schemaTOs) {\n         final Table.TableBuilder tableBuilder\n-                = new Table.TableBuilder(\"plain schema details \")\n-                .header(\"schema key\")\n-                .header(\"type class\")\n-                .header(\"pattern\")\n-                .header(\"enum keys\")\n-                .header(\"enum values\")\n-                .header(\"mandatory condition\")\n-                .header(\"mime type\")\n-                .header(\"secret key\")\n-                .header(\"class validator\")\n-                .header(\"chiper\")\n-                .header(\"type\");\n+                = new Table.TableBuilder(\"plain schemas\").header(\"schema key\").header(\"type\").header(\"mandatory\");\n         for (final AbstractSchemaTO schemaTO : schemaTOs) {\n             tableBuilder.rowValues(new LinkedList(Arrays.asList(\n                     ((PlainSchemaTO) schemaTO).getKey(),\n-                    ((PlainSchemaTO) schemaTO).getAnyTypeClass(),\n-                    ((PlainSchemaTO) schemaTO).getConversionPattern(),\n-                    ((PlainSchemaTO) schemaTO).getEnumerationKeys(),\n-                    ((PlainSchemaTO) schemaTO).getEnumerationValues(),\n-                    ((PlainSchemaTO) schemaTO).getMandatoryCondition(),\n-                    ((PlainSchemaTO) schemaTO).getMimeType(),\n-                    ((PlainSchemaTO) schemaTO).getSecretKey(),\n-                    ((PlainSchemaTO) schemaTO).getValidatorClass(),\n-                    ((PlainSchemaTO) schemaTO).getCipherAlgorithm(),\n-                    ((PlainSchemaTO) schemaTO).getType().toString())));\n+                    ((PlainSchemaTO) schemaTO).getType().toString(),\n+                    ((PlainSchemaTO) schemaTO).getMandatoryCondition())));\n         }\n         tableBuilder.build().print();\n     }"},{"sha":"757e2d6074f0dae3860d8b773e933223b79fe168","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaSyncopeOperations.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaSyncopeOperations.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -28,12 +28,12 @@ public class SchemaSyncopeOperations {\n \n     private final SchemaService schemaService = SyncopeServices.get(SchemaService.class);\n \n-    public <T extends AbstractSchemaTO> T read(final SchemaType schemaType, final String schemaName) {\n-        return schemaService.read(schemaType, schemaName);\n+    public <T extends AbstractSchemaTO> T read(final String schemaTypeString, final String schemaName) {\n+        return schemaService.read(SchemaType.valueOf(schemaTypeString), schemaName);\n     }\n \n-    public <T extends AbstractSchemaTO> List<T> list(final SchemaType schemaType) {\n-        return schemaService.list(schemaType, null);\n+    public <T extends AbstractSchemaTO> List<T> list(final String schemaTypeString) {\n+        return schemaService.list(SchemaType.valueOf(schemaTypeString), null);\n     }\n \n     public <T extends AbstractSchemaTO> List<T> listVirtual() {\n@@ -48,7 +48,7 @@ public <T extends AbstractSchemaTO> List<T> listDerived() {\n         return schemaService.list(SchemaType.DERIVED, null);\n     }\n \n-    public void delete(final SchemaType schemaType, final String schemaName) {\n-        schemaService.delete(schemaType, schemaName);\n+    public void delete(final String schemaTypeString, final String schemaName) {\n+        schemaService.delete(SchemaType.valueOf(schemaTypeString), schemaName);\n     }\n }"},{"sha":"2b09a9262c24a217965424f68df6010dc335540b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowExportDefinition.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.cli.commands.self;\n \n+import javax.ws.rs.core.Response;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.util.CommandUtils;\n@@ -41,8 +42,8 @@ public WorkflowExportDefinition(final Input input) {\n     public void export() {\n         if (input.parameterNumber() == 1) {\n             try {\n-                final AnyTypeKind anyTypeKind = AnyTypeKind.valueOf(input.firstParameter());\n-                System.out.println(\" > > > > \" + workflowSyncopeOperations.exportDefinition(anyTypeKind).getEntity());\n+\n+                final Response response = workflowSyncopeOperations.exportDefinition(input.firstParameter());\n             } catch (final SyncopeClientException | WebServiceException ex) {\n                 LOG.error(\"Error\", ex);\n                 if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"7d98d70c596849e96cd8a4a2fb3cb7e2b00e77d8","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowExportDiagram.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -42,8 +42,7 @@ public WorkflowExportDiagram(final Input input) {\n     public void export() {\n         if (input.parameterNumber() == 1) {\n             try {\n-                final AnyTypeKind anyTypeKind = AnyTypeKind.valueOf(input.firstParameter());\n-                final Response response = workflowSyncopeOperations.exportDiagram(anyTypeKind);\n+                final Response response = workflowSyncopeOperations.exportDiagram(input.firstParameter());\n                 final byte[] diagram = IOUtils.readBytesFromStream((InputStream) response.getEntity());\n                 final FileOutputStream fos = new FileOutputStream(\"/tmp/diagram.png\");\n                 fos.write(diagram);"},{"sha":"6d0f3b2d52dbfb7f8f151445a58c2504d454d5c0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowSyncopeOperations.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -29,12 +29,12 @@ public class WorkflowSyncopeOperations {\n \n     private final WorkflowService workflowService = SyncopeServices.get(WorkflowService.class);\n \n-    public Response exportDiagram(final AnyTypeKind anyTypeKind) {\n+    public Response exportDiagram(final String anyTypeKindString) {\n         WebClient.client(workflowService).accept(RESTHeaders.MEDIATYPE_IMAGE_PNG);\n-        return workflowService.exportDiagram(anyTypeKind);\n+        return workflowService.exportDiagram(AnyTypeKind.valueOf(anyTypeKindString));\n     }\n \n-    public Response exportDefinition(final AnyTypeKind anyTypeKind) {\n-        return workflowService.exportDefinition(anyTypeKind);\n+    public Response exportDefinition(final String anyTypeKindString) {\n+        return workflowService.exportDefinition(AnyTypeKind.valueOf(anyTypeKindString));\n     }\n }"},{"sha":"67946676169ef42ab51872aa5e46421e8b8175cb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskCommand.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -32,8 +32,8 @@ public class TaskCommand extends AbstractCommand {\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n             + \"    --details\\n\"\n-            + \"    --list-task \\n\"\n-            + \"       Syntax: --list-task {TASK-TYPE} \\n\"\n+            + \"    --list\\n\"\n+            + \"       Syntax: --list {TASK-TYPE} \\n\"\n             + \"          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / SYNCHRONIZATION\\n\"\n             + \"    --list-running-jobs \\n\"\n             + \"    --list-scheduled-jobs \\n\"\n@@ -59,7 +59,7 @@ public void execute(final Input input) {\n             case DETAILS:\n                 new TaskDetails(input).details();\n                 break;\n-            case LIST_TASK:\n+            case LIST:\n                 new TaskList(input).list();\n                 break;\n             case LIST_RUNNING_JOBS:\n@@ -100,7 +100,7 @@ private enum Options {\n \n         HELP(\"--help\"),\n         DETAILS(\"--details\"),\n-        LIST_TASK(\"--list-task\"),\n+        LIST(\"--list\"),\n         LIST_RUNNING_JOBS(\"--list-running-jobs\"),\n         LIST_SCHEDULED_JOBS(\"--list-scheduled-jobs\"),\n         READ(\"--read\"),"},{"sha":"0e125905422f51dc0e85e94ca709604d3cda5ca9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDetails.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -51,11 +51,12 @@ public void details() {\n         if (input.parameterNumber() == 0) {\n             try {\n                 final Map<String, String> details = new LinkedMap<>();\n-                final List<AbstractTaskTO> notificationTaskTOs = taskSyncopeOperations.list(TaskType.NOTIFICATION);\n-                final List<AbstractTaskTO> propagationTaskTOs = taskSyncopeOperations.list(TaskType.PROPAGATION);\n-                final List<AbstractTaskTO> pushTaskTOs = taskSyncopeOperations.list(TaskType.PUSH);\n-                final List<AbstractTaskTO> scheduledTaskTOs = taskSyncopeOperations.list(TaskType.SCHEDULED);\n-                final List<AbstractTaskTO> syncTaskTOs = taskSyncopeOperations.list(TaskType.SYNCHRONIZATION);\n+                final List<AbstractTaskTO> notificationTaskTOs\n+                        = taskSyncopeOperations.list(TaskType.NOTIFICATION.name());\n+                final List<AbstractTaskTO> propagationTaskTOs = taskSyncopeOperations.list(TaskType.PROPAGATION.name());\n+                final List<AbstractTaskTO> pushTaskTOs = taskSyncopeOperations.list(TaskType.PUSH.name());\n+                final List<AbstractTaskTO> scheduledTaskTOs = taskSyncopeOperations.list(TaskType.SCHEDULED.name());\n+                final List<AbstractTaskTO> syncTaskTOs = taskSyncopeOperations.list(TaskType.SYNCHRONIZATION.name());\n                 final List<TaskExecTO> runningTOs = taskSyncopeOperations.listRunningJobs();\n                 final List<TaskExecTO> scheduledTOs = taskSyncopeOperations.listScheduledJobs();\n                 final int notificationTaskSize = notificationTaskTOs.size();"},{"sha":"02a22b08475031a4fa7ebe44aac4aca2394af01b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskList.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -31,7 +31,7 @@ public class TaskList extends AbstractTaskCommand {\n \n     private static final Logger LOG = LoggerFactory.getLogger(TaskList.class);\n \n-    private static final String LIST_HELP_MESSAGE = \"task --list-task {TASK-TYPE}\\n\"\n+    private static final String LIST_HELP_MESSAGE = \"task --list {TASK-TYPE}\\n\"\n             + \"   Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / SYNCHRONIZATION\";\n \n     private final Input input;\n@@ -43,12 +43,11 @@ public TaskList(final Input input) {\n     public void list() {\n         if (input.parameterNumber() == 1) {\n             try {\n-                final TaskType taskType = TaskType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractTaskTO> taskTOs = new LinkedList<>();\n-                for (final AbstractTaskTO taskTO : taskSyncopeOperations.list(taskType)) {\n+                for (final AbstractTaskTO taskTO : taskSyncopeOperations.list(input.firstParameter())) {\n                     taskTOs.add(taskTO);\n                 }\n-                taskResultManager.printTasksType(taskType, taskTOs);\n+                taskResultManager.printTasksType(input.firstParameter(), taskTOs);\n             } catch (final SyncopeClientException ex) {\n                 LOG.error(\"Error listing task\", ex);\n                 taskResultManager.genericError(ex.getMessage());"},{"sha":"2441864a18703bbb3010c87e1bda199baabaa850","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskResultManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -51,9 +51,9 @@ public void printTasks(final LinkedList<AbstractTaskTO> taskTOs) {\n         }\n     }\n \n-    public void printTasksType(final TaskType taskType, final LinkedList<AbstractTaskTO> taskTOs) {\n+    public void printTasksType(final String taskTypeString, final LinkedList<AbstractTaskTO> taskTOs) {\n         System.out.println(\"\");\n-        switch (taskType) {\n+        switch (TaskType.valueOf(taskTypeString)) {\n             case NOTIFICATION:\n                 for (final AbstractTaskTO taskTO : taskTOs) {\n                     printNotificationTask(((NotificationTaskTO) taskTO));"},{"sha":"cecb2b809cb9e4a2266083c0938311b56589ef96","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskSyncopeOperations.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3082eb0d6728681d6a5f8dc86d343cebd65aa3be/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java?ref=3082eb0d6728681d6a5f8dc86d343cebd65aa3be","patch":"@@ -47,8 +47,8 @@ public void delete(final String taskId) {\n         taskService.read(Long.valueOf(taskId));\n     }\n \n-    public List<AbstractTaskTO> list(final TaskType type) {\n-        return taskService.list(type, new TaskQuery()).getResult();\n+    public List<AbstractTaskTO> list(final String type) {\n+        return taskService.list(TaskType.valueOf(type), new TaskQuery()).getResult();\n     }\n \n     public TaskExecTO readExecution(final String executionId) {"}]}