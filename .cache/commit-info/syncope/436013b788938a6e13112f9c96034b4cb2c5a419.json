{"sha":"436013b788938a6e13112f9c96034b4cb2c5a419","node_id":"C_kwDOJfYA1toAKDQzNjAxM2I3ODg5MzhhNmUxMzExMmY5Yzk2MDM0YjRjYjJjNWE0MTk","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-11-18T17:43:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-11-18T17:43:27Z"},"message":"[SYNCOPE-1713] Fixing missing update in RemediationDAO","tree":{"sha":"baa7c98b57348397988aed5fef94048a36846c50","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/baa7c98b57348397988aed5fef94048a36846c50"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/436013b788938a6e13112f9c96034b4cb2c5a419","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/436013b788938a6e13112f9c96034b4cb2c5a419","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/436013b788938a6e13112f9c96034b4cb2c5a419","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/436013b788938a6e13112f9c96034b4cb2c5a419/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c17d1a0a179a6b7c696b39f1bf429ecdc16725a3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c17d1a0a179a6b7c696b39f1bf429ecdc16725a3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c17d1a0a179a6b7c696b39f1bf429ecdc16725a3"}],"stats":{"total":43,"additions":31,"deletions":12},"files":[{"sha":"0fa145302aefeaeb458dbc2fcf52b71e62621fcb","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/RemediationLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/436013b788938a6e13112f9c96034b4cb2c5a419/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/436013b788938a6e13112f9c96034b4cb2c5a419/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRemediationLogic.java?ref=436013b788938a6e13112f9c96034b4cb2c5a419","patch":"@@ -80,7 +80,7 @@ public Pair<Integer, List<RemediationTO>> list(\n             final int size,\n             final List<OrderByClause> orderByClauses) {\n \n-        int count = remediationDAO.count();\n+        int count = remediationDAO.count(before, after);\n \n         List<RemediationTO> result = remediationDAO.findAll(before, after, page, size, orderByClauses).stream().\n                 map(binder::getRemediationTO).collect(Collectors.toList());"},{"sha":"6ae0936f4fd679fef9242b609345afef531fdcf5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RemediationDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/436013b788938a6e13112f9c96034b4cb2c5a419/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRemediationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/436013b788938a6e13112f9c96034b4cb2c5a419/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRemediationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRemediationDAO.java?ref=436013b788938a6e13112f9c96034b4cb2c5a419","patch":"@@ -33,7 +33,7 @@ public interface RemediationDAO extends DAO<Remediation> {\n \n     List<Remediation> findByPullTask(PullTask pullTask);\n \n-    int count();\n+    int count(OffsetDateTime before, OffsetDateTime after);\n \n     List<Remediation> findAll(\n             OffsetDateTime before,"},{"sha":"2f77611fd8d349087e9d414b78d92c03fadcdd64","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARemediationDAO.java","status":"modified","additions":29,"deletions":10,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/436013b788938a6e13112f9c96034b4cb2c5a419/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARemediationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/436013b788938a6e13112f9c96034b4cb2c5a419/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARemediationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARemediationDAO.java?ref=436013b788938a6e13112f9c96034b4cb2c5a419","patch":"@@ -58,9 +58,35 @@ public List<Remediation> findByPullTask(final PullTask pullTask) {\n         return query.getResultList();\n     }\n \n+    protected StringBuilder query(\n+            final StringBuilder select,\n+            final OffsetDateTime before,\n+            final OffsetDateTime after) {\n+\n+        StringBuilder query = select.\n+                append(JPARemediation.class.getSimpleName()).\n+                append(\" e WHERE 1=1 \");\n+        if (before != null) {\n+            query.append(\"AND e.instant <= :before \");\n+        }\n+        if (after != null) {\n+            query.append(\"AND e.instant >= :after \");\n+        }\n+        return query;\n+    }\n+\n     @Override\n-    public int count() {\n-        Query query = entityManager().createNativeQuery(\"SELECT COUNT(id) FROM \" + JPARemediation.TABLE);\n+    public int count(final OffsetDateTime before, final OffsetDateTime after) {\n+        StringBuilder queryString = query(new StringBuilder(\"SELECT COUNT(e) FROM \"), before, after);\n+\n+        Query query = entityManager().createQuery(queryString.toString());\n+        if (before != null) {\n+            query.setParameter(\"before\", before);\n+        }\n+        if (after != null) {\n+            query.setParameter(\"after\", after);\n+        }\n+\n         return ((Number) query.getSingleResult()).intValue();\n     }\n \n@@ -72,14 +98,7 @@ public List<Remediation> findAll(\n             final int itemsPerPage,\n             final List<OrderByClause> orderByClauses) {\n \n-        StringBuilder queryString = new StringBuilder(\n-                \"SELECT e FROM \" + JPARemediation.class.getSimpleName() + \" e WHERE 1=1 \");\n-        if (before != null) {\n-            queryString.append(\" AND e.instant <= :before\");\n-        }\n-        if (after != null) {\n-            queryString.append(\" AND e.instant >= :after\");\n-        }\n+        StringBuilder queryString = query(new StringBuilder(\"SELECT e FROM \"), before, after);\n \n         if (!orderByClauses.isEmpty()) {\n             queryString.append(\" ORDER BY \");"}]}