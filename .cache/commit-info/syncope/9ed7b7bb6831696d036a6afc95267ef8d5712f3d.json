{"sha":"9ed7b7bb6831696d036a6afc95267ef8d5712f3d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjllZDdiN2JiNjgzMTY5NmQwMzZhNmFmYzk1MjY3ZWY4ZDU3MTJmM2Q=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-22T14:39:16Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-06-22T14:39:16Z"},"message":"Add a test to make sure we can't fake a JWT Id","tree":{"sha":"6701c7d05a53f2991aa6e79fe554dab182e5c82d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6701c7d05a53f2991aa6e79fe554dab182e5c82d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9ed7b7bb6831696d036a6afc95267ef8d5712f3d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ed7b7bb6831696d036a6afc95267ef8d5712f3d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ed7b7bb6831696d036a6afc95267ef8d5712f3d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ed7b7bb6831696d036a6afc95267ef8d5712f3d/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"0e21f7c1a6492c5cc61956c3654a1483d2680092","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e21f7c1a6492c5cc61956c3654a1483d2680092","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e21f7c1a6492c5cc61956c3654a1483d2680092"}],"stats":{"total":45,"additions":45,"deletions":0},"files":[{"sha":"bc1767a4d875bba4391a1212b945d8249a96705c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/JWTITCase.java","status":"modified","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed7b7bb6831696d036a6afc95267ef8d5712f3d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed7b7bb6831696d036a6afc95267ef8d5712f3d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FJWTITCase.java?ref=9ed7b7bb6831696d036a6afc95267ef8d5712f3d","patch":"@@ -48,6 +48,8 @@\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.Test;\n \n+import com.fasterxml.uuid.Generators;\n+\n /**\n  * Some tests for JWT Tokens\n  */\n@@ -339,4 +341,47 @@ public void testNoneSignature() throws ParseException {\n         }\n     }\n \n+    @Test\n+    public void testUnknownId() throws ParseException {\n+        // Get an initial token\n+        SyncopeClient adminClient = clientFactory.create(ADMIN_UNAME, ADMIN_PWD);\n+        AccessTokenService accessTokenService = adminClient.getService(AccessTokenService.class);\n+\n+        Response response = accessTokenService.login();\n+        String token = response.getHeaderString(RESTHeaders.TOKEN);\n+        assertNotNull(token);\n+\n+        // Create a new token using an unknown Id\n+        Date now = new Date();\n+\n+        Calendar expiry = Calendar.getInstance();\n+        expiry.setTime(now);\n+        expiry.add(Calendar.MINUTE, 5);\n+\n+        JwtClaims jwtClaims = new JwtClaims();\n+        jwtClaims.setTokenId(Generators.randomBasedGenerator().generate().toString());\n+        jwtClaims.setSubject(\"admin\");\n+        jwtClaims.setIssuedAt(now.getTime());\n+        jwtClaims.setIssuer(JWT_ISSUER);\n+        jwtClaims.setExpiryTime(expiry.getTime().getTime());\n+        jwtClaims.setNotBefore(now.getTime());\n+\n+        JwsHeaders jwsHeaders = new JwsHeaders(JoseType.JWT, SignatureAlgorithm.HS512);\n+        JwtToken jwtToken = new JwtToken(jwsHeaders, jwtClaims);\n+        JwsJwtCompactProducer producer = new JwsJwtCompactProducer(jwtToken);\n+\n+        JwsSignatureProvider jwsSignatureProvider =\n+            new HmacJwsSignatureProvider(JWS_KEY.getBytes(), SignatureAlgorithm.HS512);\n+        String signed = producer.signWith(jwsSignatureProvider);\n+\n+        SyncopeClient jwtClient = clientFactory.create(signed);\n+        UserSelfService jwtUserSelfService = jwtClient.getService(UserSelfService.class);\n+        try {\n+            jwtUserSelfService.read();\n+            fail(\"Failure expected on an unknown id\");\n+        } catch (AccessControlException ex) {\n+            // expected\n+        }\n+    }\n+\n }"}]}