{"sha":"bd695da79888cab82c8cf4803cc01cecba804e41","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJkNjk1ZGE3OTg4OGNhYjgyYzhjZjQ4MDNjYzAxY2VjYmE4MDRlNDE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-06T13:01:54Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-06-06T13:02:37Z"},"message":"[SYNCOPE-1103] Option to put Quartz scheduler in standby, from provisioning.properties","tree":{"sha":"054aa2fb45fc50510cf2a645d43f580f7ba7f7cb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/054aa2fb45fc50510cf2a645d43f580f7ba7f7cb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bd695da79888cab82c8cf4803cc01cecba804e41","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bd695da79888cab82c8cf4803cc01cecba804e41","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bd695da79888cab82c8cf4803cc01cecba804e41","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bd695da79888cab82c8cf4803cc01cecba804e41/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"95c933ac887c4e6dd1fe005395ba38f9ec0908c2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/95c933ac887c4e6dd1fe005395ba38f9ec0908c2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/95c933ac887c4e6dd1fe005395ba38f9ec0908c2"}],"stats":{"total":611,"additions":429,"deletions":182},"files":[{"sha":"640e1faf89e62714c4caa773ec06dc8c37b6bf94","filename":"core/logic/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fpom.xml?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -51,10 +51,6 @@ under the License.\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-context-support</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-jdbc</artifactId>\n-    </dependency>\n     \n     <dependency>\n       <groupId>org.aspectj</groupId>"},{"sha":"b4779df359146058cfa6f97a9c801ef0cd6159f0","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -136,6 +136,7 @@ public List<AnyObjectTO> search(final SearchCond searchCond, final int page, fin\n                 effectiveRealms, searchCond, page, size, orderBy, AnyTypeKind.ANY_OBJECT);\n         return CollectionUtils.collect(matchingAnyObjects, new Transformer<AnyObject, AnyObjectTO>() {\n \n+            @Transactional(readOnly = true)\n             @Override\n             public AnyObjectTO transform(final AnyObject input) {\n                 return binder.getAnyObjectTO(input, details);"},{"sha":"b93142d54757276b7a44cc321e49c0b9d9ea5a22","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -155,6 +155,7 @@ public List<GroupTO> own() {\n                 userDAO.findAllGroups(userDAO.findByUsername(AuthContextUtils.getUsername())),\n                 new Transformer<Group, GroupTO>() {\n \n+            @Transactional(readOnly = true)\n             @Override\n             public GroupTO transform(final Group input) {\n                 return binder.getGroupTO(input, true);\n@@ -193,6 +194,7 @@ public List<GroupTO> list(\n                 page, size, orderBy),\n                 new Transformer<Group, GroupTO>() {\n \n+            @Transactional(readOnly = true)\n             @Override\n             public GroupTO transform(final Group input) {\n                 return binder.getGroupTO(input, details);\n@@ -220,6 +222,7 @@ public List<GroupTO> search(final SearchCond searchCondition, final int page, fi\n                 searchCondition, page, size, orderBy, AnyTypeKind.GROUP);\n         return CollectionUtils.collect(matchingGroups, new Transformer<Group, GroupTO>() {\n \n+            @Transactional(readOnly = true)\n             @Override\n             public GroupTO transform(final Group input) {\n                 return binder.getGroupTO(input, details);\n@@ -281,6 +284,7 @@ public ProvisioningResult<GroupTO> delete(final String key, final boolean nullPr\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.GroupOwnership);\n             sce.getElements().addAll(CollectionUtils.collect(ownedGroups, new Transformer<Group, String>() {\n \n+                @Transactional(readOnly = true)\n                 @Override\n                 public String transform(final Group group) {\n                     return group.getKey() + \" \" + group.getName();"},{"sha":"2d126822b76e46a207387bb2321e9bedd8cd54d7","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/LogicInvocationHandler.java","status":"modified","additions":16,"deletions":21,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -24,13 +24,15 @@\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n+import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n import org.aspectj.lang.ProceedingJoinPoint;\n import org.aspectj.lang.annotation.Around;\n import org.aspectj.lang.annotation.Aspect;\n import org.aspectj.lang.reflect.MethodSignature;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationEventPublisher;\n \n @Aspect\n public class LogicInvocationHandler {\n@@ -43,6 +45,9 @@ public class LogicInvocationHandler {\n     @Autowired\n     private AuditManager auditManager;\n \n+    @Autowired\n+    private ApplicationEventPublisher publisher;\n+\n     @Around(\"execution(* org.apache.syncope.core.logic.AbstractLogic+.*(..))\")\n     public Object around(final ProceedingJoinPoint joinPoint) throws Throwable {\n         Class<?> clazz = joinPoint.getTarget().getClass();\n@@ -89,27 +94,17 @@ public Object around(final ProceedingJoinPoint joinPoint) throws Throwable {\n             LOG.debug(\"After throwing {}.{}\", clazz.getSimpleName(), event);\n             throw t;\n         } finally {\n-            if (notificationsAvailable) {\n-                notificationManager.createTasks(AuditElements.EventCategoryType.LOGIC,\n-                        category,\n-                        null,\n-                        event,\n-                        condition,\n-                        before,\n-                        output,\n-                        input);\n-            }\n-\n-            if (auditRequested) {\n-                auditManager.audit(AuditElements.EventCategoryType.LOGIC,\n-                        category,\n-                        null,\n-                        event,\n-                        condition,\n-                        before,\n-                        output,\n-                        input);\n-            }\n+            publisher.publishEvent(new AfterHandlingEvent(this,\n+                    notificationsAvailable,\n+                    auditRequested,\n+                    AuditElements.EventCategoryType.LOGIC,\n+                    category,\n+                    null,\n+                    event,\n+                    condition,\n+                    before,\n+                    output,\n+                    input));\n         }\n     }\n }"},{"sha":"3b867b4228c49c0d1b2c869ab0c7678cf33cc783","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/NotificationLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationLogic.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -30,12 +30,12 @@\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.syncope.core.logic.notification.NotificationJob;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n import org.apache.syncope.core.provisioning.api.data.NotificationDataBinder;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n+import org.apache.syncope.core.provisioning.java.job.notification.NotificationJob;\n import org.quartz.JobKey;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;"},{"sha":"1f232adb03739fb3b7d175ff3dd28e13871b953f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -40,29 +40,29 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.to.JobTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.JobAction;\n+import org.apache.syncope.common.lib.types.JobType;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.apache.syncope.common.lib.types.ReportExecStatus;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.core.logic.cocoon.FopSerializer;\n+import org.apache.syncope.core.logic.cocoon.TextSerializer;\n+import org.apache.syncope.core.logic.cocoon.XSLTTransformer;\n+import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.ReportDAO;\n import org.apache.syncope.core.persistence.api.dao.ReportExecDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.api.entity.ReportExec;\n import org.apache.syncope.core.provisioning.api.data.ReportDataBinder;\n import org.apache.syncope.core.provisioning.api.job.JobNamer;\n-import org.apache.syncope.core.logic.report.TextSerializer;\n-import org.apache.syncope.common.lib.to.BulkActionResult;\n-import org.apache.syncope.common.lib.to.JobTO;\n-import org.apache.syncope.common.lib.types.JobAction;\n-import org.apache.syncope.common.lib.types.JobType;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.syncope.core.logic.report.FopSerializer;\n-import org.apache.syncope.core.logic.report.XSLTTransformer;\n-import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.xmlgraphics.util.MimeConstants;\n import org.quartz.JobKey;\n import org.springframework.beans.factory.annotation.Autowired;"},{"sha":"82ca4b96617bb75bd309e0630bfe67a496d102f0","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -62,6 +62,8 @@\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.springframework.aop.support.AopUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.PayloadApplicationEvent;\n+import org.springframework.context.event.EventListener;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -234,10 +236,11 @@ private void initSystemInfo() {\n         }\n     }\n \n-    public void addLoadInstant(final SystemInfo.LoadInstant instant) {\n+    @EventListener\n+    public void addLoadInstant(final PayloadApplicationEvent<SystemInfo.LoadInstant> event) {\n         synchronized (MONITOR) {\n             initSystemInfo();\n-            SYSTEM_INFO.getLoad().add(instant);\n+            SYSTEM_INFO.getLoad().add(event.getPayload());\n         }\n     }\n "},{"sha":"a310e47e54fdc354fb8065aac5988769072853e5","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -53,11 +53,11 @@\n import org.apache.syncope.core.provisioning.api.data.TaskDataBinder;\n import org.apache.syncope.core.provisioning.api.job.JobNamer;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.apache.syncope.core.logic.notification.NotificationJobDelegate;\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n+import org.apache.syncope.core.provisioning.java.job.notification.NotificationJobDelegate;\n import org.quartz.JobDataMap;\n import org.quartz.JobKey;\n import org.springframework.beans.factory.annotation.Autowired;"},{"sha":"7cc54145209365682239928e9966b6a32164e42f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -118,6 +118,7 @@ public List<UserTO> list(\n                 page, size, orderBy),\n                 new Transformer<User, UserTO>() {\n \n+            @Transactional(readOnly = true)\n             @Override\n             public UserTO transform(final User input) {\n                 return binder.returnUserTO(binder.getUserTO(input, details));\n@@ -160,6 +161,7 @@ public List<UserTO> search(final SearchCond searchCondition, final int page, fin\n                 searchCondition, page, size, orderBy, AnyTypeKind.USER);\n         return CollectionUtils.collect(matchingUsers, new Transformer<User, UserTO>() {\n \n+            @Transactional(readOnly = true)\n             @Override\n             public UserTO transform(final User input) {\n                 return binder.returnUserTO(binder.getUserTO(input, details));"},{"sha":"bacec1f85a723a17878e8b2620a4f9387b4f96f8","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/cocoon/FopSerializer.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FFopSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FFopSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FFopSerializer.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.logic.cocoon;\n \n import java.io.File;\n import java.io.OutputStream;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/FopSerializer.java"},{"sha":"ce4ffb4e274798514961d0ea64538562c85daee8","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/cocoon/TextSerializer.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FTextSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FTextSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FTextSerializer.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.logic.cocoon;\n \n import org.apache.cocoon.sax.component.XMLSerializer;\n import org.xml.sax.Attributes;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/TextSerializer.java"},{"sha":"1d8c6e21f1a3a44ad5ad4e309c648b89d4141ad9","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/cocoon/XSLTTransformer.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FXSLTTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FXSLTTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FXSLTTransformer.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.logic.cocoon;\n \n import java.util.HashMap;\n import java.util.Map;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/XSLTTransformer.java"},{"sha":"d010e4b0d3a100eb7e19211d7c320c4a3178de36","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -57,9 +57,9 @@\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAARelationship;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAnyObject;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship;\n+import org.apache.syncope.core.provisioning.api.event.AnyCreatedUpdatedEvent;\n+import org.apache.syncope.core.provisioning.api.event.AnyDeletedEvent;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.spring.event.AnyCreatedUpdatedEvent;\n-import org.apache.syncope.core.spring.event.AnyDeletedEvent;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n@@ -210,7 +210,7 @@ public List<AnyObject> findAll(final int page, final int itemsPerPage) {\n     @Override\n     public AnyObject save(final AnyObject anyObject) {\n         AnyObject merged = super.save(anyObject);\n-        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, merged));\n+        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, merged, AuthContextUtils.getDomain()));\n \n         groupDAO().refreshDynMemberships(merged);\n \n@@ -253,7 +253,8 @@ public void delete(final AnyObject anyObject) {\n         }\n \n         entityManager().remove(anyObject);\n-        publisher.publishEvent(new AnyDeletedEvent(this, AnyTypeKind.ANY_OBJECT, anyObject.getKey()));\n+        publisher.publishEvent(\n+                new AnyDeletedEvent(this, AnyTypeKind.ANY_OBJECT, anyObject.getKey(), AuthContextUtils.getDomain()));\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)"},{"sha":"1b7374a790a30f0693575b07d79a3583969d82c0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -65,9 +65,9 @@\n import org.apache.syncope.core.persistence.jpa.entity.group.JPATypeExtension;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUDynGroupMembership;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUMembership;\n+import org.apache.syncope.core.provisioning.api.event.AnyCreatedUpdatedEvent;\n+import org.apache.syncope.core.provisioning.api.event.AnyDeletedEvent;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.spring.event.AnyCreatedUpdatedEvent;\n-import org.apache.syncope.core.spring.event.AnyDeletedEvent;\n import org.springframework.aop.support.AopUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n@@ -278,7 +278,7 @@ private SearchCond buildDynMembershipCond(final String baseCondFIQL, final Realm\n     @Override\n     public Group save(final Group group) {\n         Group merged = super.save(group);\n-        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, merged));\n+        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, merged, AuthContextUtils.getDomain()));\n \n         // refresh dynamic memberships\n         if (merged.getUDynMembership() != null) {\n@@ -294,7 +294,7 @@ public Group save(final Group group) {\n                 insert.setParameter(2, merged.getKey());\n                 insert.executeUpdate();\n \n-                publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, user));\n+                publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, user, AuthContextUtils.getDomain()));\n             }\n         }\n         for (ADynGroupMembership memb : merged.getADynMemberships()) {\n@@ -311,7 +311,7 @@ public Group save(final Group group) {\n                 insert.setParameter(3, merged.getKey());\n                 insert.executeUpdate();\n \n-                publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, anyObject));\n+                publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, anyObject, AuthContextUtils.getDomain()));\n             }\n         }\n \n@@ -332,7 +332,7 @@ public void delete(final Group group) {\n             }\n \n             anyObjectDAO().save(leftEnd);\n-            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, leftEnd));\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, leftEnd, AuthContextUtils.getDomain()));\n         }\n         for (UMembership membership : findUMemberships(group)) {\n             User leftEnd = membership.getLeftEnd();\n@@ -346,11 +346,12 @@ public void delete(final Group group) {\n             }\n \n             userDAO().save(leftEnd);\n-            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, leftEnd));\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, leftEnd, AuthContextUtils.getDomain()));\n         }\n \n         entityManager().remove(group);\n-        publisher.publishEvent(new AnyDeletedEvent(this, AnyTypeKind.GROUP, group.getKey()));\n+        publisher.publishEvent(\n+                new AnyDeletedEvent(this, AnyTypeKind.GROUP, group.getKey(), AuthContextUtils.getDomain()));\n     }\n \n     @Override\n@@ -420,7 +421,7 @@ public void refreshDynMemberships(final AnyObject anyObject) {\n                 insert.executeUpdate();\n             }\n \n-            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, memb.getGroup()));\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, memb.getGroup(), AuthContextUtils.getDomain()));\n         }\n     }\n \n@@ -433,7 +434,7 @@ public void removeDynMemberships(final AnyObject anyObject) {\n         delete.executeUpdate();\n \n         for (Group group : dynGroups) {\n-            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group, AuthContextUtils.getDomain()));\n         }\n     }\n \n@@ -494,7 +495,7 @@ public void refreshDynMemberships(final User user) {\n                 insert.executeUpdate();\n             }\n \n-            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, memb.getGroup()));\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, memb.getGroup(), AuthContextUtils.getDomain()));\n         }\n     }\n \n@@ -507,7 +508,7 @@ public void removeDynMemberships(final User user) {\n         delete.executeUpdate();\n \n         for (Group group : dynGroups) {\n-            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group, AuthContextUtils.getDomain()));\n         }\n     }\n "},{"sha":"9796f4d79ebcbc0ece6aeb3d4b6474557ca00cce","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARoleDAO.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -32,8 +32,9 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.entity.JPARole;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUser;\n+import org.apache.syncope.core.provisioning.api.event.AnyCreatedUpdatedEvent;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.spring.event.AnyCreatedUpdatedEvent;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.stereotype.Repository;\n@@ -102,7 +103,7 @@ public Role save(final Role role) {\n                 insert.setParameter(2, merged.getKey());\n                 insert.executeUpdate();\n \n-                publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, user));\n+                publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, user, AuthContextUtils.getDomain()));\n             }\n         }\n \n@@ -117,7 +118,7 @@ public void delete(final Role role) {\n \n         for (User user : query.getResultList()) {\n             user.getRoles().remove(role);\n-            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, user));\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, user, AuthContextUtils.getDomain()));\n         }\n \n         entityManager().remove(role);"},{"sha":"40db0c430d2498c344dea3f34243957049683009","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -72,9 +72,9 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.entity.JPAAnyUtilsFactory;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUser;\n+import org.apache.syncope.core.provisioning.api.event.AnyCreatedUpdatedEvent;\n+import org.apache.syncope.core.provisioning.api.event.AnyDeletedEvent;\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n-import org.apache.syncope.core.spring.event.AnyCreatedUpdatedEvent;\n-import org.apache.syncope.core.spring.event.AnyDeletedEvent;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.stereotype.Repository;\n@@ -444,7 +444,7 @@ public User save(final User user) {\n             throw e;\n         }\n \n-        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, merged));\n+        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, merged, AuthContextUtils.getDomain()));\n \n         roleDAO.refreshDynMemberships(merged);\n         groupDAO().refreshDynMemberships(merged);\n@@ -463,7 +463,8 @@ public void delete(final User user) {\n         }\n \n         entityManager().remove(user);\n-        publisher.publishEvent(new AnyDeletedEvent(this, AnyTypeKind.USER, user.getKey()));\n+        publisher.publishEvent(\n+                new AnyDeletedEvent(this, AnyTypeKind.USER, user.getKey(), AuthContextUtils.getDomain()));\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)"},{"sha":"4521db6fa5ec99f8f583f0d91325e0d2d8abf5ba","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -655,7 +655,7 @@ under the License.\n                 location=\"${connid.location}\"\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n-                jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]}]'/>\n+                jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]}]'/>\n   <ConnInstance_capabilities connInstance_id=\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\" capability=\"CREATE\"/>\n   <ConnInstance_capabilities connInstance_id=\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\" capability=\"UPDATE\"/>\n   <ConnInstance_capabilities connInstance_id=\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\" capability=\"DELETE\"/>\n@@ -1402,7 +1402,7 @@ $$ }&#10;\n     &lt;/html&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n     &lt;h2&gt;Reportlet: &#10;\n       &lt;xsl:value-of select=&quot;@name&quot;/&gt;&#10;\n     &lt;/h2&gt;&#10;\n@@ -1452,7 +1452,7 @@ $$ }&#10;\n     &lt;/xsl:if&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;h3&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h3&gt;&#10;\n     &#10;\n@@ -1597,7 +1597,7 @@ $$ }&#10;\n        &#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n     &lt;h2&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h2&gt;&#10;\n     &lt;xsl:for-each select=&quot;group&quot;&gt;&#10;\n       &lt;h3&gt;Group &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/h3&gt;&#10;\n@@ -1763,7 +1763,7 @@ $$ }&#10;\n &#10;\n   &lt;xsl:variable name=&quot;delimiter&quot; select=&quot;';'&quot;/&gt;&#10;\n    &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/staticAttributes&quot;/&gt;&#10;\n     &lt;/xsl:call-template&gt;&#10;\n@@ -1821,7 +1821,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/userAttributes&quot;/&gt;&#10;\n@@ -1902,7 +1902,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n     &#10;\n     &lt;xsl:call-template name=&quot;header&quot;&gt;&#10;\n       &lt;xsl:with-param name=&quot;node&quot; select=&quot;configurations/groupAttributes&quot;/&gt;&#10;\n@@ -2044,7 +2044,7 @@ $$ }&#10;\n     &lt;/fo:root&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.StaticReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.StaticReportlet']&quot;&gt;&#10;\n &#10;\n     &lt;fo:block font-size=&quot;14pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot;&gt;Reportlet: &#10;\n       &lt;xsl:value-of select=&quot;@name&quot;/&gt;&#10;\n@@ -2103,7 +2103,7 @@ $$ }&#10;\n         &#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.UserReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.UserReportlet']&quot;&gt;&#10;\n    &#10;\n     &lt;fo:block font-size=&quot;16pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot; space-before=&quot;5mm&quot;&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/fo:block&gt;&#10;\n         &#10;\n@@ -2267,7 +2267,7 @@ $$ }&#10;\n     &lt;/xsl:for-each&gt;&#10;\n   &lt;/xsl:template&gt;&#10;\n   &#10;\n-  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.logic.report.GroupReportlet']&quot;&gt;&#10;\n+  &lt;xsl:template match=&quot;reportlet[@class='org.apache.syncope.core.provisioning.java.job.report.GroupReportlet']&quot;&gt;&#10;\n    &#10;\n     &lt;fo:block font-size=&quot;16pt&quot; font-weight=&quot;bold&quot; space-after=&quot;0.5cm&quot; space-before=&quot;5mm&quot;&gt;Reportlet: &lt;xsl:value-of select=&quot;@name&quot;/&gt;&lt;/fo:block&gt;&#10;\n         &#10;"},{"sha":"8078788a581f794550d15062a9fd43da1cb4a99a","filename":"core/provisioning-api/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fpom.xml?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -51,6 +51,11 @@ under the License.\n       <artifactId>jackson-module-afterburner</artifactId>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-context</artifactId>\n+    </dependency>\n+    \n     <dependency>\n       <groupId>org.quartz-scheduler</groupId>\n       <artifactId>quartz</artifactId>"},{"sha":"f397351f5863325bba17b0f8a35e0dfc234949b9","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/AuditManager.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditManager.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.api;\n \n+import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n import org.apache.syncope.common.lib.types.AuditElements;\n \n public interface AuditManager {\n@@ -38,7 +39,14 @@ boolean auditRequested(\n             String event);\n \n     /**\n-     * Create notification tasks for each notification matching provided conditions.\n+     * Create audit entries according to the provided event.\n+     * \n+     * @param event Spring event raised during Logic processing\n+     */\n+    void audit(final AfterHandlingEvent event);\n+\n+    /**\n+     * Create audit entries for each audit matching provided conditions.\n      *\n      * @param type event category type\n      * @param category event category"},{"sha":"e732097e4d3a6c4e5a438e209d8fe923c910abef","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/event/AfterHandlingEvent.java","status":"added","additions":115,"deletions":0,"changes":115,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAfterHandlingEvent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAfterHandlingEvent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAfterHandlingEvent.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.event;\n+\n+import org.apache.syncope.common.lib.types.AuditElements;\n+import org.springframework.context.ApplicationEvent;\n+\n+public class AfterHandlingEvent extends ApplicationEvent {\n+\n+    private static final long serialVersionUID = 5950986229089263378L;\n+\n+    private final boolean notificationsAvailable;\n+\n+    private final boolean auditRequested;\n+\n+    private final AuditElements.EventCategoryType type;\n+\n+    private final String category;\n+\n+    private final String subcategory;\n+\n+    private final String event;\n+\n+    private final AuditElements.Result condition;\n+\n+    private final Object before;\n+\n+    private final Object output;\n+\n+    private final Object[] input;\n+\n+    public AfterHandlingEvent(\n+            final Object source,\n+            final boolean notificationsAvailable,\n+            final boolean auditRequested,\n+            final AuditElements.EventCategoryType type,\n+            final String category,\n+            final String subcategory,\n+            final String event,\n+            final AuditElements.Result condition,\n+            final Object before,\n+            final Object output,\n+            final Object... input) {\n+\n+        super(source);\n+\n+        this.notificationsAvailable = notificationsAvailable;\n+        this.auditRequested = auditRequested;\n+        this.type = type;\n+        this.category = category;\n+        this.subcategory = subcategory;\n+        this.event = event;\n+        this.condition = condition;\n+        this.before = before;\n+        this.output = output;\n+        this.input = input;\n+    }\n+\n+    public boolean isNotificationsAvailable() {\n+        return notificationsAvailable;\n+    }\n+\n+    public boolean isAuditRequested() {\n+        return auditRequested;\n+    }\n+\n+    public AuditElements.EventCategoryType getType() {\n+        return type;\n+    }\n+\n+    public String getCategory() {\n+        return category;\n+    }\n+\n+    public String getSubcategory() {\n+        return subcategory;\n+    }\n+\n+    public String getEvent() {\n+        return event;\n+    }\n+\n+    public AuditElements.Result getCondition() {\n+        return condition;\n+    }\n+\n+    public Object getBefore() {\n+        return before;\n+    }\n+\n+    public Object getOutput() {\n+        return output;\n+    }\n+\n+    public Object[] getInput() {\n+        return input;\n+    }\n+\n+}"},{"sha":"4a2f9a177c4ddfe821298f4fa4000d0722e35ce2","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/event/AnyCreatedUpdatedEvent.java","status":"renamed","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAnyCreatedUpdatedEvent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAnyCreatedUpdatedEvent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAnyCreatedUpdatedEvent.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,10 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.spring.event;\n+package org.apache.syncope.core.provisioning.api.event;\n \n import org.apache.syncope.core.persistence.api.entity.Any;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.springframework.context.ApplicationEvent;\n \n public class AnyCreatedUpdatedEvent<A extends Any<?>> extends ApplicationEvent {\n@@ -30,10 +29,10 @@\n \n     private final String domain;\n \n-    public AnyCreatedUpdatedEvent(final Object source, final A any) {\n+    public AnyCreatedUpdatedEvent(final Object source, final A any, final String domain) {\n         super(source);\n         this.any = any;\n-        this.domain = AuthContextUtils.getDomain();\n+        this.domain = domain;\n     }\n \n     public A getAny() {","previous_filename":"core/spring/src/main/java/org/apache/syncope/core/spring/event/AnyCreatedUpdatedEvent.java"},{"sha":"b2c978be8deb653934c38651f75c0e3bc5a44906","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/event/AnyDeletedEvent.java","status":"renamed","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAnyDeletedEvent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAnyDeletedEvent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAnyDeletedEvent.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,10 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.spring.event;\n+package org.apache.syncope.core.provisioning.api.event;\n \n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.springframework.context.ApplicationEvent;\n \n public class AnyDeletedEvent extends ApplicationEvent {\n@@ -32,11 +31,16 @@ public class AnyDeletedEvent extends ApplicationEvent {\n \n     private final String domain;\n \n-    public AnyDeletedEvent(final Object source, final AnyTypeKind anyTypeKind, final String anyKey) {\n+    public AnyDeletedEvent(\n+            final Object source,\n+            final AnyTypeKind anyTypeKind,\n+            final String anyKey,\n+            final String domain) {\n+\n         super(source);\n         this.anyTypeKind = anyTypeKind;\n         this.anyKey = anyKey;\n-        this.domain = AuthContextUtils.getDomain();\n+        this.domain = domain;\n     }\n \n     public AnyTypeKind getAnyTypeKind() {","previous_filename":"core/spring/src/main/java/org/apache/syncope/core/spring/event/AnyDeletedEvent.java"},{"sha":"548ed93e257ee0b9b890707723e2540a2eeba38d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/notification/NotificationManager.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fnotification%2FNotificationManager.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -22,6 +22,7 @@\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n+import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n \n /**\n  * Create notification tasks that will be executed by NotificationJob.\n@@ -54,6 +55,13 @@ boolean notificationsAvailable(\n             String subcategory,\n             String event);\n \n+    /**\n+     * Create notification tasks according to the provided event.\n+     *\n+     * @param event Spring event raised during Logic processing\n+     */\n+    void createTasks(AfterHandlingEvent event);\n+\n     /**\n      * Create notification tasks for each notification matching provided conditions.\n      *"},{"sha":"a9e881e106b11d9b9885601f8ff392e33e149a64","filename":"core/provisioning-java/pom.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fpom.xml?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -58,7 +58,11 @@ under the License.\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-context-support</artifactId>\n     </dependency>\n-    \n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-jdbc</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.geronimo.javamail</groupId>\n       <artifactId>geronimo-javamail_1.4_mail</artifactId>"},{"sha":"d553762a894e58df93cf1a4f3dc07c03db0d30a1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/AuditManagerImpl.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditManagerImpl.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -27,10 +27,13 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.dao.LoggerDAO;\n+import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.event.EventListener;\n import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(readOnly = true)\n@@ -77,6 +80,23 @@ public boolean auditRequested(\n         return auditRequested;\n     }\n \n+    @EventListener\n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n+    @Override\n+    public void audit(final AfterHandlingEvent event) {\n+        if (event.isAuditRequested()) {\n+            audit(\n+                    event.getType(),\n+                    event.getCategory(),\n+                    event.getSubcategory(),\n+                    event.getEvent(),\n+                    event.getCondition(),\n+                    event.getBefore(),\n+                    event.getOutput(),\n+                    event.getInput());\n+        }\n+    }\n+\n     @Override\n     public void audit(\n             final AuditElements.EventCategoryType type,"},{"sha":"c76344769d35adc03fce7cdff2fabf97abae8e13","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -66,6 +66,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n import org.springframework.util.ClassUtils;\n \n public class ConnectorFacadeProxy implements Connector {\n@@ -264,6 +265,7 @@ public void delete(\n         }\n     }\n \n+    @Transactional\n     @Override\n     public void sync(final ObjectClass objectClass, final SyncToken token, final SyncResultsHandler handler,\n             final OperationOptions options) {\n@@ -330,6 +332,7 @@ public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, f\n         }\n     }\n \n+    @Transactional\n     @Override\n     public void fullReconciliation(\n             final ObjectClass objectClass,\n@@ -339,6 +342,7 @@ public void fullReconciliation(\n         filteredReconciliation(objectClass, null, handler, options);\n     }\n \n+    @Transactional\n     @Override\n     public void filteredReconciliation(\n             final ObjectClass objectClass,\n@@ -348,6 +352,7 @@ public void filteredReconciliation(\n \n         search(objectClass, filterBuilder == null ? null : filterBuilder.build(), new ResultsHandler() {\n \n+            @Transactional\n             @Override\n             public boolean handle(final ConnectorObject obj) {\n                 return handler.handle(new SyncDeltaBuilder()."},{"sha":"0b2fba0551a6f2b5da2876bc2d6da0c73a6dff79","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/JobManagerImpl.java","status":"renamed","additions":21,"deletions":7,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.init;\n+package org.apache.syncope.core.provisioning.java.job;\n \n import java.sql.Connection;\n import java.sql.PreparedStatement;\n@@ -34,7 +34,6 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.core.logic.SystemLoadReporterJob;\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.ReportDAO;\n@@ -45,13 +44,10 @@\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.provisioning.api.job.JobNamer;\n-import org.apache.syncope.core.logic.notification.NotificationJob;\n-import org.apache.syncope.core.logic.report.ReportJob;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.persistence.api.DomainsHolder;\n-import org.apache.syncope.core.provisioning.java.job.TaskJob;\n import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.quartz.CronScheduleBuilder;\n@@ -70,15 +66,15 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n-import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.identityconnectors.common.IOUtil;\n import org.quartz.impl.jdbcjobstore.Constants;\n import org.springframework.jdbc.datasource.DataSourceUtils;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.java.job.notification.NotificationJob;\n+import org.apache.syncope.core.provisioning.java.job.report.ReportJob;\n \n-@Component\n public class JobManagerImpl implements JobManager, SyncopeLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(JobManager.class);\n@@ -98,6 +94,12 @@ public class JobManagerImpl implements JobManager, SyncopeLoader {\n     @Autowired\n     private ConfDAO confDAO;\n \n+    private boolean disableQuartzInstance;\n+\n+    public void setDisableQuartzInstance(final boolean disableQuartzInstance) {\n+        this.disableQuartzInstance = disableQuartzInstance;\n+    }\n+\n     private boolean isRunningHere(final JobKey jobKey) throws SchedulerException {\n         return IterableUtils.matchesAny(scheduler.getScheduler().getCurrentlyExecutingJobs(),\n                 new Predicate<JobExecutionContext>() {\n@@ -286,6 +288,18 @@ public Integer getPriority() {\n     @Transactional\n     @Override\n     public void load() {\n+        if (disableQuartzInstance) {\n+            String instanceId = \"AUTO\";\n+            try {\n+                instanceId = scheduler.getScheduler().getSchedulerInstanceId();\n+                scheduler.getScheduler().standby();\n+\n+                LOG.info(\"Successfully put Quartz instance {} in standby\", instanceId);\n+            } catch (SchedulerException e) {\n+                LOG.error(\"Could not put Quartz instance {} in standby\", instanceId, e);\n+            }\n+        }\n+\n         final Pair<String, Long> conf = AuthContextUtils.execWithAuthContext(\n                 SyncopeConstants.MASTER_DOMAIN, new AuthContextUtils.Executable<Pair<String, Long>>() {\n ","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/JobManagerImpl.java"},{"sha":"59c195f0f2a542d9998f0c453b3ef65e31d3383b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SystemLoadReporterJob.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSystemLoadReporterJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSystemLoadReporterJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSystemLoadReporterJob.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,14 +16,14 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic;\n+package org.apache.syncope.core.provisioning.java.job;\n \n import java.lang.management.ManagementFactory;\n import org.apache.syncope.common.lib.info.SystemInfo;\n-import org.apache.syncope.core.provisioning.java.job.AbstractInterruptableJob;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -35,7 +35,7 @@ public class SystemLoadReporterJob extends AbstractInterruptableJob {\n     private static final Integer MB = 1024 * 1024;\n \n     @Autowired\n-    private SyncopeLogic logic;\n+    private ApplicationEventPublisher publisher;\n \n     @Override\n     public void execute(final JobExecutionContext context) throws JobExecutionException {\n@@ -52,6 +52,6 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n         instant.setMaxMemory(runtime.maxMemory() / MB);\n         instant.setFreeMemory(runtime.freeMemory() / MB);\n \n-        logic.addLoadInstant(instant);\n+        publisher.publishEvent(instant);\n     }\n }","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SystemLoadReporterJob.java"},{"sha":"153a221ad4b49e621e361a437098ca0dd3fcb30d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/NotificationJob.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJob.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.notification;\n+package org.apache.syncope.core.provisioning.java.job.notification;\n \n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.persistence.api.DomainsHolder;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/notification/NotificationJob.java"},{"sha":"0d37d86b24d8d0d481500a72c37f5266341e54ea","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/NotificationJobDelegate.java","status":"renamed","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FNotificationJobDelegate.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.notification;\n+package org.apache.syncope.core.provisioning.java.job.notification;\n \n import java.util.Date;\n import java.util.Properties;\n@@ -31,11 +31,13 @@\n import org.apache.syncope.core.persistence.api.entity.task.NotificationTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n+import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.mail.javamail.JavaMailSender;\n import org.springframework.mail.javamail.JavaMailSenderImpl;\n import org.springframework.mail.javamail.MimeMessageHelper;\n@@ -65,6 +67,9 @@ public class NotificationJobDelegate {\n     @Autowired\n     private NotificationManager notificationManager;\n \n+    @Autowired\n+    private ApplicationEventPublisher publisher;\n+\n     private long maxRetries;\n \n     private void init() {\n@@ -151,7 +156,9 @@ public TaskExec executeSingle(final NotificationTask task) {\n                         execution.setMessage(report.toString());\n                     }\n \n-                    auditManager.audit(\n+                    publisher.publishEvent(new AfterHandlingEvent(this,\n+                            true,\n+                            true,\n                             AuditElements.EventCategoryType.TASK,\n                             \"notification\",\n                             null,\n@@ -160,7 +167,7 @@ public TaskExec executeSingle(final NotificationTask task) {\n                             null,\n                             null,\n                             task,\n-                            \"Successfully sent notification to \" + to);\n+                            \"Successfully sent notification to \" + to));\n                 } catch (Exception e) {\n                     LOG.error(\"Could not send e-mail\", e);\n \n@@ -169,7 +176,9 @@ public TaskExec executeSingle(final NotificationTask task) {\n                         execution.setMessage(ExceptionUtils2.getFullStackTrace(e));\n                     }\n \n-                    auditManager.audit(\n+                    publisher.publishEvent(new AfterHandlingEvent(this,\n+                            true,\n+                            true,\n                             AuditElements.EventCategoryType.TASK,\n                             \"notification\",\n                             null,\n@@ -178,7 +187,7 @@ public TaskExec executeSingle(final NotificationTask task) {\n                             null,\n                             null,\n                             task,\n-                            \"Could not send notification to \" + to, e);\n+                            \"Could not send notification to \" + to, e));\n                 }\n \n                 execution.setEnd(new Date());","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/notification/NotificationJobDelegate.java"},{"sha":"2c85b203f18b3f42f808f2023918461556f85e68","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/AbstractReportlet.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAbstractReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAbstractReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAbstractReportlet.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n import org.apache.syncope.core.persistence.api.dao.Reportlet;\n import org.apache.syncope.common.lib.report.ReportletConf;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/AbstractReportlet.java"},{"sha":"96039f011731ebb35f2bdbe647ec1263b9937d2b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/AuditReportlet.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n import java.util.List;\n import java.util.Map;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/AuditReportlet.java"},{"sha":"fa558b63106b15a629cbb618d91bc5c60380cd92","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/GroupReportlet.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FGroupReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FGroupReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FGroupReportlet.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n import java.util.Collection;\n import java.util.Collections;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/GroupReportlet.java"},{"sha":"f39ee1cc6f7a751226608233c4bdfa2b0994f492","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReconciliationReportlet.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n import java.util.Collections;\n import java.util.HashMap;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReconciliationReportlet.java"},{"sha":"db42152f343c1eff8040e0495d395972e3476663","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReportException.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportException.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n public class ReportException extends RuntimeException {\n ","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReportException.java"},{"sha":"78183d54f81f075cc0447b21862772d83887e00d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReportJob.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJob.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.provisioning.java.job.AbstractInterruptableJob;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReportJob.java"},{"sha":"28f4894b89a6ea3f34831c8ea1239bca76d64dd3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReportJobDelegate.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportJobDelegate.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n import java.io.ByteArrayOutputStream;\n import java.io.IOException;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReportJobDelegate.java"},{"sha":"6b21695e07e5a3ade91154e4b7e908854850d57d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReportXMLConst.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportXMLConst.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportXMLConst.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReportXMLConst.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n public final class ReportXMLConst {\n ","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReportXMLConst.java"},{"sha":"1156d254484cfab5e0be1182240293d2bdba5d6e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/StaticReportlet.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FStaticReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FStaticReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FStaticReportlet.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n import org.apache.syncope.core.persistence.api.dao.ReportletConfClass;\n import org.apache.syncope.common.lib.report.ReportletConf;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/StaticReportlet.java"},{"sha":"200f64a70df507d4b57885ac578f34d858e310d7","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/UserReportlet.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FUserReportlet.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.logic.report;\n+package org.apache.syncope.core.provisioning.java.job.report;\n \n import java.util.Collection;\n import java.util.Collections;","previous_filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/UserReportlet.java"},{"sha":"aecfe695d3c373f694fddab4417783e371698755","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -76,11 +76,14 @@\n import org.apache.syncope.core.provisioning.api.data.AnyObjectDataBinder;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.provisioning.api.notification.NotificationRecipientsProvider;\n+import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+import org.springframework.context.event.EventListener;\n import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n@@ -276,6 +279,23 @@ public boolean evaluate(final Notification notification) {\n         });\n     }\n \n+    @EventListener\n+    @Transactional(propagation = Propagation.REQUIRES_NEW)\n+    @Override\n+    public void createTasks(final AfterHandlingEvent event) {\n+        if (event.isNotificationsAvailable()) {\n+            createTasks(\n+                    event.getType(),\n+                    event.getCategory(),\n+                    event.getSubcategory(),\n+                    event.getEvent(),\n+                    event.getCondition(),\n+                    event.getBefore(),\n+                    event.getOutput(),\n+                    event.getInput());\n+        }\n+    }\n+\n     @Override\n     public List<NotificationTask> createTasks(\n             final AuditElements.EventCategoryType type,"},{"sha":"34917361c9a32d18bfcc387ac93321af35fb9ea7","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":16,"deletions":4,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -42,14 +42,17 @@\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n+import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n+import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncDeltaType;\n@@ -65,14 +68,23 @@ public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHan\n     protected PullUtils pullUtils;\n \n     @Autowired\n-    protected VirSchemaDAO virSchemaDAO;\n+    private NotificationManager notificationManager;\n \n     @Autowired\n-    protected VirAttrCache virAttrCache;\n+    private AuditManager auditManager;\n \n-    protected SyncopePullExecutor executor;\n+    @Autowired\n+    private ConnObjectUtils connObjectUtils;\n+\n+    @Autowired\n+    private VirSchemaDAO virSchemaDAO;\n+\n+    @Autowired\n+    private VirAttrCache virAttrCache;\n+\n+    private SyncopePullExecutor executor;\n \n-    protected Result latestResult;\n+    private Result latestResult;\n \n     protected abstract String getName(AnyTO anyTO);\n "},{"sha":"a17c789f3d2125c0af1c514fb146c1480b6f9065","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -46,6 +46,7 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n+import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n@@ -55,6 +56,7 @@\n import org.identityconnectors.framework.common.objects.Uid;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -64,6 +66,9 @@ public abstract class AbstractPushResultHandler extends AbstractSyncopeResultHan\n     @Autowired\n     protected MappingManager mappingManager;\n \n+    @Autowired\n+    private ApplicationEventPublisher publisher;\n+\n     protected abstract String getName(Any<?> any);\n \n     protected void deprovision(final Any<?> any) {\n@@ -357,22 +362,17 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n \n                 throw new JobExecutionException(e);\n             } finally {\n-                notificationManager.createTasks(AuditElements.EventCategoryType.PUSH,\n-                        any.getType().getKind().name().toLowerCase(),\n-                        profile.getTask().getResource().getKey(),\n-                        operation,\n-                        resultStatus,\n-                        beforeObj,\n-                        output,\n-                        any);\n-                auditManager.audit(AuditElements.EventCategoryType.PUSH,\n+                publisher.publishEvent(new AfterHandlingEvent(this,\n+                        true,\n+                        true,\n+                        AuditElements.EventCategoryType.PUSH,\n                         any.getType().getKind().name().toLowerCase(),\n                         profile.getTask().getResource().getKey(),\n                         operation,\n                         resultStatus,\n                         beforeObj,\n                         output,\n-                        any);\n+                        any));\n             }\n         }\n     }"},{"sha":"e914ce3595763069b279efaa9d2a638fc20ece90","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractRealmResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -38,7 +38,7 @@\n     protected static final Logger LOG = LoggerFactory.getLogger(SyncopeResultHandler.class);\n \n     protected static final String REALM_TYPE = \"REALM\";\n-    \n+\n     @Autowired\n     protected RealmDAO realmDAO;\n "},{"sha":"61e37e10f153b4b2660284e3ac207c8aeaaf593c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractSyncopeResultHandler.java","status":"modified","additions":0,"deletions":33,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -23,24 +23,18 @@\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n-import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n-import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopeResultHandler;\n-import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n-import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n-import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.AnyObjectDataBinder;\n-import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningActions;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n@@ -63,24 +57,6 @@\n     @Autowired\n     protected GroupDAO groupDAO;\n \n-    /**\n-     * ConnectorObject utils.\n-     */\n-    @Autowired\n-    protected ConnObjectUtils connObjectUtils;\n-\n-    /**\n-     * Notification Manager.\n-     */\n-    @Autowired\n-    protected NotificationManager notificationManager;\n-\n-    /**\n-     * Audit Manager.\n-     */\n-    @Autowired\n-    protected AuditManager auditManager;\n-\n     /**\n      * Propagation manager.\n      */\n@@ -116,15 +92,6 @@\n     @Autowired\n     protected GroupDataBinder groupDataBinder;\n \n-    @Autowired\n-    protected AnyObjectProvisioningManager anyObjectProvisioningManager;\n-\n-    @Autowired\n-    protected UserProvisioningManager userProvisioningManager;\n-\n-    @Autowired\n-    protected GroupProvisioningManager groupProvisioningManager;\n-\n     @Autowired\n     protected AnyUtilsFactory anyUtilsFactory;\n "},{"sha":"a328e56ce3769dabc22cc2ac145eac1919b6854e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AnyObjectPullResultHandlerImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAnyObjectPullResultHandlerImpl.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -29,14 +29,19 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n+import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPullResultHandler;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n public class AnyObjectPullResultHandlerImpl extends AbstractPullResultHandler implements AnyObjectPullResultHandler {\n \n+    @Autowired\n+    private AnyObjectProvisioningManager anyObjectProvisioningManager;\n+\n     @Override\n     protected AnyUtils getAnyUtils() {\n         return anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT);"},{"sha":"01af49f96695415819ff8f1b6acf6425be920e0e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/GroupPullResultHandlerImpl.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FGroupPullResultHandlerImpl.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -32,15 +32,20 @@\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n+import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.apache.syncope.core.provisioning.api.pushpull.GroupPullResultHandler;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n public class GroupPullResultHandlerImpl extends AbstractPullResultHandler implements GroupPullResultHandler {\n \n-    protected final Map<String, String> groupOwnerMap = new HashMap<>();\n+    @Autowired\n+    private GroupProvisioningManager groupProvisioningManager;\n+\n+    private final Map<String, String> groupOwnerMap = new HashMap<>();\n \n     @Override\n     public Map<String, String> getGroupOwnerMap() {"},{"sha":"4d7ad3c4d9e6ca276f721c1d2aaa12a30058c38c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPushResultHandlerImpl.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n+import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n@@ -44,13 +45,18 @@\n import org.identityconnectors.framework.common.objects.ResultsHandler;\n import org.identityconnectors.framework.common.objects.filter.EqualsFilter;\n import org.quartz.JobExecutionException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n public class RealmPushResultHandlerImpl\n         extends AbstractRealmResultHandler<PushTask, PushActions>\n         implements SyncopePushResultHandler {\n \n+    @Autowired\n+    private ApplicationEventPublisher publisher;\n+\n     @Transactional(propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public boolean handle(final String realmKey) {\n@@ -313,22 +319,17 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n                 throw new JobExecutionException(e);\n             } finally {\n-                notificationManager.createTasks(AuditElements.EventCategoryType.PUSH,\n-                        REALM_TYPE.toLowerCase(),\n-                        profile.getTask().getResource().getKey(),\n-                        operation,\n-                        resultStatus,\n-                        beforeObj,\n-                        output,\n-                        realm);\n-                auditManager.audit(AuditElements.EventCategoryType.PUSH,\n+                publisher.publishEvent(new AfterHandlingEvent(this,\n+                        true,\n+                        true,\n+                        AuditElements.EventCategoryType.PUSH,\n                         REALM_TYPE.toLowerCase(),\n                         profile.getTask().getResource().getKey(),\n                         operation,\n                         resultStatus,\n                         beforeObj,\n                         output,\n-                        realm);\n+                        realm));\n             }\n         }\n     }"},{"sha":"91575e272c64c0d53c760c19b93f93e8b5662c85","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/UserPullResultHandlerImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FUserPullResultHandlerImpl.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -31,13 +31,18 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.apache.syncope.core.provisioning.api.pushpull.UserPullResultHandler;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n public class UserPullResultHandlerImpl extends AbstractPullResultHandler implements UserPullResultHandler {\n \n+    @Autowired\n+    private UserProvisioningManager userProvisioningManager;\n+\n     @Override\n     protected AnyUtils getAnyUtils() {\n         return anyUtilsFactory.getInstance(AnyTypeKind.USER);"},{"sha":"29aca0d0875595f51563cba12eeea30d9ff0b7ec","filename":"core/provisioning-java/src/main/resources/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -28,3 +28,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n \n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql\n+quartz.disableInstance=false"},{"sha":"fab70998691ce1e5eadf9f525b3a0c21348e7910","filename":"core/provisioning-java/src/main/resources/provisioningContext.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -93,6 +93,9 @@ under the License.\n     </property>\n   </bean>\n   <bean class=\"org.apache.syncope.core.provisioning.java.job.SchedulerShutdown\"/>\n+  <bean class=\"org.apache.syncope.core.provisioning.java.job.JobManagerImpl\">\n+    <property name=\"disableQuartzInstance\" value=\"${quartz.disableInstance:false}\"/>\n+  </bean>\n   \n   <bean id=\"mailSender\" class=\"org.springframework.mail.javamail.JavaMailSenderImpl\">\n     <property name=\"defaultEncoding\" value=\"${smtpEncoding}\"/>"},{"sha":"5af0e9165bf62a2c6a132ed50e0e25452c2b3eb6","filename":"ext/camel/provisioning-camel/src/main/resources/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -30,3 +30,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n \n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql\n+quartz.disableInstance=false"},{"sha":"1e34f6aa24e6f5829e0e25cab0d020020a861c92","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchIndexManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchIndexManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchIndexManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchIndexManager.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -20,8 +20,8 @@\n \n import java.io.IOException;\n import org.apache.syncope.core.persistence.api.entity.Any;\n-import org.apache.syncope.core.spring.event.AnyCreatedUpdatedEvent;\n-import org.apache.syncope.core.spring.event.AnyDeletedEvent;\n+import org.apache.syncope.core.provisioning.api.event.AnyCreatedUpdatedEvent;\n+import org.apache.syncope.core.provisioning.api.event.AnyDeletedEvent;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.elasticsearch.action.delete.DeleteResponse;\n import org.elasticsearch.action.get.GetResponse;"},{"sha":"ea86696cb5480e0a79d418ad43e1c6197ed0323b","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -35,11 +35,11 @@\n import org.apache.syncope.common.lib.report.UserReportletConf;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.core.logic.TaskLogic;\n-import org.apache.syncope.core.logic.report.AuditReportlet;\n-import org.apache.syncope.core.logic.report.GroupReportlet;\n-import org.apache.syncope.core.logic.report.ReconciliationReportlet;\n-import org.apache.syncope.core.logic.report.StaticReportlet;\n-import org.apache.syncope.core.logic.report.UserReportlet;\n+import org.apache.syncope.core.provisioning.java.job.report.AuditReportlet;\n+import org.apache.syncope.core.provisioning.java.job.report.GroupReportlet;\n+import org.apache.syncope.core.provisioning.java.job.report.ReconciliationReportlet;\n+import org.apache.syncope.core.provisioning.java.job.report.StaticReportlet;\n+import org.apache.syncope.core.provisioning.java.job.report.UserReportlet;\n import org.apache.syncope.core.migration.MigrationPullActions;\n import org.apache.syncope.core.persistence.api.DomainsHolder;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;"},{"sha":"b66ef9701dbfe6450c9abbc61aebf73221b9bd8c","filename":"fit/core-reference/src/main/resources/all/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -31,3 +31,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.sql=tables_h2.sql\n quartz.scheduler.idleWaitTime=5000\n+quartz.disableInstance=false"},{"sha":"cc042e7eb948e5c104b56b99a0e83884cf818ecf","filename":"fit/core-reference/src/main/resources/mariadb/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -29,3 +29,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.sql=tables_mariadb.sql\n quartz.scheduler.idleWaitTime=5000\n+quartz.disableInstance=false"},{"sha":"48f9ef6cecac61e824453881392d0fdf9ce7dc9c","filename":"fit/core-reference/src/main/resources/mysql/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -29,3 +29,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.sql=tables_mysql.sql\n quartz.scheduler.idleWaitTime=5000\n+quartz.disableInstance=false"},{"sha":"67bc0138bfc573fb8ca34c56c0bd14406225bc41","filename":"fit/core-reference/src/main/resources/oracle/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -29,3 +29,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n quartz.jobstore=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n quartz.sql=tables_oracle.sql\n quartz.scheduler.idleWaitTime=5000\n+quartz.disableInstance=false"},{"sha":"378e75e614a94509e38bff551647b54f050ed24e","filename":"fit/core-reference/src/main/resources/postgres/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -29,3 +29,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql\n quartz.scheduler.idleWaitTime=5000\n+quartz.disableInstance=false"},{"sha":"b2a8cb625ddfdd131d2b76097255d63cf9ee280e","filename":"fit/core-reference/src/main/resources/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -29,3 +29,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.sql=tables_h2.sql\n quartz.scheduler.idleWaitTime=5000\n+quartz.disableInstance=false"},{"sha":"1a21fefe1b0ba6f0c53a2bd5b2c1a861baa88054","filename":"fit/core-reference/src/main/resources/sqlserver/provisioning.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -29,3 +29,4 @@ virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n quartz.sql=tables_sqlServer.sql\n quartz.scheduler.idleWaitTime=5000\n+quartz.disableInstance=false"},{"sha":"1674621bf33f609c08c68cc5ff036c312092c899","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AbstractTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAbstractTaskITCase.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -42,7 +42,7 @@\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.TaskService;\n-import org.apache.syncope.core.logic.notification.NotificationJob;\n+import org.apache.syncope.core.provisioning.java.job.notification.NotificationJob;\n import org.apache.syncope.fit.AbstractITCase;\n \n public abstract class AbstractTaskITCase extends AbstractITCase {"},{"sha":"4cea200df4f6d732202eb81e68fb25733df6f289","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConnectorITCase.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -559,7 +559,6 @@ public void buildObjectClassInfo() {\n \n         objectClassInfo = connectorService.buildObjectClassInfo(ldap, true);\n         assertNotNull(objectClassInfo);\n-        assertEquals(2, objectClassInfo.size());\n \n         Collection<String> objectClasses = CollectionUtils.collect(objectClassInfo,\n                 new Transformer<ConnIdObjectClassTO, String>() {\n@@ -570,7 +569,6 @@ public String transform(final ConnIdObjectClassTO info) {\n             }\n \n         });\n-        assertEquals(2, objectClasses.size());\n         assertTrue(objectClasses.contains(ObjectClass.ACCOUNT_NAME));\n         assertTrue(objectClasses.contains(ObjectClass.GROUP_NAME));\n     }"},{"sha":"f4cd5d7a67a7b4009cc2daf5892c5edd48900024","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/NotificationTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationTaskITCase.java?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -51,7 +51,7 @@\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.NotificationService;\n-import org.apache.syncope.core.logic.notification.NotificationJob;\n+import org.apache.syncope.core.provisioning.java.job.notification.NotificationJob;\n import org.apache.syncope.fit.core.reference.TestNotificationRecipientsProvider;\n import org.junit.AfterClass;\n import org.junit.BeforeClass;"},{"sha":"f9742cdefaa4bb41486d55c0de0c68a64d962379","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/systemadministration/highavailability.adoc","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bd695da79888cab82c8cf4803cc01cecba804e41/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fhighavailability.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bd695da79888cab82c8cf4803cc01cecba804e41/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fhighavailability.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fhighavailability.adoc?ref=bd695da79888cab82c8cf4803cc01cecba804e41","patch":"@@ -18,6 +18,9 @@\n //\n ==== High-Availability\n \n+[discrete]\n+===== OpenJPA\n+\n When deploying multiple Syncope <<core>> instances with a single database or database cluster, it is of\n fundamental importance that the contained OpenJPA instances are correctly configured for\n http://openjpa.apache.org/builds/2.4.2/apache-openjpa/docs/ref_guide_event.html[remote event notification^]. +\n@@ -93,3 +96,26 @@ becomes:\n <entry key=\"openjpa.RemoteCommitProvider\" value=\"tcp(Addresses=10.0.1.10;10.0.1.11)\"/>\n ....\n ====\n+\n+[discrete]\n+===== Quartz\n+\n+The http://www.quartz-scheduler.org[Quartz^] scheduler is largely used within Syncope <<core>> to schedule the execution\n+of jobs, including <<tasks-pull,pull>>, <<tasks-push,push>>, <<tasks-notification,notification>> and \n+<<tasks-custom,custom>> tasks, and <<reportlets,reportlets>>.\n+\n+By default, Quartz is configured for\n+http://www.quartz-scheduler.org/documentation/quartz-2.2.x/configuration/ConfigJDBCJobStoreClustering.html[clustering^],\n+where each node is automatically handled via the underlying JDBC store, and all cluster nodes are equally selectable\n+for processing jobs.\n+\n+There are deployment scenarios which might have different requirements: for example, there could be three Core nodes\n+configured with OpenJPA remote commit provider (see above), where two of them are dedicated to serve REST requests,\n+leaving the third for running Quartz jobs.\n+\n+In such cases, it is possible to prevent Quartz from running on a given node by setting the following parameter in\n+`core/src/main/resources/provisioning.properties`:\n+\n+....\n+quartz.disableInstance=true\n+...."}]}