{"sha":"20f5c70e80b8004bec66782bebb061e63f32e720","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIwZjVjNzBlODBiODAwNGJlYzY2NzgyYmViYjA2MWU2M2YzMmU3MjA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-18T10:35:02Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-18T10:35:02Z"},"message":"Better usage of Java 8 APIs","tree":{"sha":"f989e29e408c304f5a12467ee7e6b2a1354528c1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f989e29e408c304f5a12467ee7e6b2a1354528c1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/20f5c70e80b8004bec66782bebb061e63f32e720","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/20f5c70e80b8004bec66782bebb061e63f32e720","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/20f5c70e80b8004bec66782bebb061e63f32e720","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/20f5c70e80b8004bec66782bebb061e63f32e720/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"01dba343087df9b0f8f4b8c66f636b9ea9aa6f18","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01dba343087df9b0f8f4b8c66f636b9ea9aa6f18","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/01dba343087df9b0f8f4b8c66f636b9ea9aa6f18"}],"stats":{"total":29,"additions":10,"deletions":19},"files":[{"sha":"b47638761f6253aa1e06362599b62e159a19bcb9","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/20f5c70e80b8004bec66782bebb061e63f32e720/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/20f5c70e80b8004bec66782bebb061e63f32e720/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=20f5c70e80b8004bec66782bebb061e63f32e720","patch":"@@ -20,7 +20,6 @@\n \n import java.lang.reflect.Method;\n import java.util.ArrayList;\n-import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Optional;\n@@ -319,10 +318,8 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n         Optional<String> connObjectKeyValue = mappingManager.getConnObjectKeyValue(any, init.getRight());\n \n         // 3. determine attributes to query\n-        Set<MappingItem> linkinMappingItems = new HashSet<>();\n-        virSchemaDAO.findByProvision(init.getRight()).forEach(virSchema -> {\n-            linkinMappingItems.add(virSchema.asLinkingMappingItem());\n-        });\n+        Set<MappingItem> linkinMappingItems = virSchemaDAO.findByProvision(init.getRight()).stream().\n+                map(virSchema -> virSchema.asLinkingMappingItem()).collect(Collectors.toSet());\n         Iterator<MappingItem> mapItems = new IteratorChain<>(\n                 init.getRight().getMapping().getItems().iterator(),\n                 linkinMappingItems.iterator());\n@@ -377,10 +374,8 @@ public Pair<SearchResult, List<ConnObjectTO>> listConnObjects(final String key,\n             objectClass = init.getRight().getObjectClass();\n             init.getRight().getMapping().getItems();\n \n-            Set<MappingItem> linkinMappingItems = new HashSet<>();\n-            virSchemaDAO.findByProvision(init.getRight()).forEach(virSchema -> {\n-                linkinMappingItems.add(virSchema.asLinkingMappingItem());\n-            });\n+            Set<MappingItem> linkinMappingItems = virSchemaDAO.findByProvision(init.getRight()).stream().\n+                    map(virSchema -> virSchema.asLinkingMappingItem()).collect(Collectors.toSet());\n             Iterator<MappingItem> mapItems = new IteratorChain<>(\n                     init.getRight().getMapping().getItems().iterator(),\n                     linkinMappingItems.iterator());"},{"sha":"de5513082cbf39f588884113c30cf1a56c258aa9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/20f5c70e80b8004bec66782bebb061e63f32e720/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/20f5c70e80b8004bec66782bebb061e63f32e720/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=20f5c70e80b8004bec66782bebb061e63f32e720","patch":"@@ -579,10 +579,8 @@ protected ConnectorObject getRemoteObject(\n                 ? task.getConnObjectKey()\n                 : task.getOldConnObjectKey();\n \n-        List<MappingItem> linkingMappingItems = new ArrayList<>();\n-        virSchemaDAO.findByProvision(provision).forEach(schema -> {\n-            linkingMappingItems.add(schema.asLinkingMappingItem());\n-        });\n+        Set<MappingItem> linkingMappingItems = virSchemaDAO.findByProvision(provision).stream().\n+                map(schema -> schema.asLinkingMappingItem()).collect(Collectors.toSet());\n \n         ConnectorObject obj = null;\n         try {"},{"sha":"63e02decf6f7ed8533de79f3af5c535e1764ac73","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/20f5c70e80b8004bec66782bebb061e63f32e720/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/20f5c70e80b8004bec66782bebb061e63f32e720/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=20f5c70e80b8004bec66782bebb061e63f32e720","patch":"@@ -20,12 +20,12 @@\n \n import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.collections.IteratorChain;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n@@ -264,13 +264,11 @@ protected String doExecuteProvisioning(\n                 }\n \n                 try {\n-                    Set<MappingItem> linkinMappingItems = new HashSet<>();\n-                    virSchemaDAO.findByProvision(provision).forEach(virSchema -> {\n-                        linkinMappingItems.add(virSchema.asLinkingMappingItem());\n-                    });\n+                    Set<MappingItem> linkingMappingItems = virSchemaDAO.findByProvision(provision).stream().\n+                            map(schema -> schema.asLinkingMappingItem()).collect(Collectors.toSet());\n                     Iterator<MappingItem> mapItems = new IteratorChain<>(\n                             provision.getMapping().getItems().iterator(),\n-                            linkinMappingItems.iterator());\n+                            linkingMappingItems.iterator());\n                     OperationOptions options = MappingUtils.buildOperationOptions(mapItems);\n \n                     switch (pullTask.getPullMode()) {"}]}