{"sha":"0e621242be705bb048a14bcb96740564a6a7461f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBlNjIxMjQyYmU3MDViYjA0OGExNGJjYjk2NzQwNTY0YTZhNzQ2MWY=","commit":{"author":{"name":"Matteo Di Carlo","email":"matteo.dicarlo@tirasa.net","date":"2016-10-05T15:20:24Z"},"committer":{"name":"Matteo Di Carlo","email":"matteo.dicarlo@tirasa.net","date":"2016-10-05T15:21:59Z"},"message":"[SYNCOPE-941] adds dynamic configuration screens to enduser","tree":{"sha":"7c7fe249f2059056d929cb2a1cb92a35127a28a6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7c7fe249f2059056d929cb2a1cb92a35127a28a6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0e621242be705bb048a14bcb96740564a6a7461f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e621242be705bb048a14bcb96740564a6a7461f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e621242be705bb048a14bcb96740564a6a7461f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e621242be705bb048a14bcb96740564a6a7461f/comments","author":null,"committer":null,"parents":[{"sha":"a6ad0608dd72e917ade89f0cfb3138850f3c844c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a6ad0608dd72e917ade89f0cfb3138850f3c844c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a6ad0608dd72e917ade89f0cfb3138850f3c844c"}],"stats":{"total":140,"additions":83,"deletions":57},"files":[{"sha":"5984f213911ec14c8b0895bcb0516badcc54501f","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e621242be705bb048a14bcb96740564a6a7461f/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e621242be705bb048a14bcb96740564a6a7461f/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=0e621242be705bb048a14bcb96740564a6a7461f","patch":"@@ -256,6 +256,7 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n       };\n     });\n   }]);\n+\n app.run(['$rootScope', '$location', '$state', 'AuthService',\n   function ($rootScope, $location, $state, AuthService) {\n     // main program\n@@ -420,16 +421,12 @@ app.controller('ApplicationController', ['$scope', '$rootScope', 'InfoService',\n       $scope.$on('hideErrorMessage', function (event, popupMessage) {\n         $scope.hideError(popupMessage, $scope.notification);\n       });\n-      //wizard active element\n-      $scope.wizard = {\n-        \"credentials\": {url: \"/credentials\"},\n-        \"groups\": {url: \"/groups\"},\n-        \"plainSchemas\": {url: \"/plainSchemas\"},\n-        \"derivedSchemas\": {url: \"/derivedSchemas\"},\n-        \"virtualSchemas\": {url: \"/virtualSchemas\"},\n-        \"resources\": {url: \"/resources\"},\n-        \"finish\": {url: \"/finish\"}\n+\n+      $rootScope.wizard = {\n+        \"credentials\": \"/credentials\",\n+        \"groups\": \"/groups\"\n       };\n+\n       $scope.clearCache = function () {\n         $templateCache.removeAll();\n       };"},{"sha":"5047c0687e169c48775133a0d8fa41b893096f2a","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":36,"deletions":5,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e621242be705bb048a14bcb96740564a6a7461f/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e621242be705bb048a14bcb96740564a6a7461f/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=0e621242be705bb048a14bcb96740564a6a7461f","patch":"@@ -17,7 +17,7 @@\n  * under the License.\n  */\n \n-/* global message, component, $state, rootScope */\n+/* global message, component, $state, rootScope, $q */\n \n 'use strict';\n \n@@ -73,6 +73,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             $scope.dynamicForm.groupSchemas.push(group);\n           //initializing user schemas values\n           initSchemaValues(schemas);\n+          initWizard();\n         }, function (response) {\n           var errorMessage;\n           // parse error response \n@@ -84,6 +85,26 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       };\n \n+      var initWizard = function () {\n+        $rootScope.wizard = {\n+          \"credentials\": \"/credentials\",\n+          \"groups\": \"/groups\"\n+        };\n+        if ($scope.dynamicForm.plainSchemas.length > 0) {\n+          $rootScope.wizard[\"plainSchemas\"] = \"/plainSchemas\";\n+        }\n+        if ($scope.dynamicForm.derSchemas.length > 0) {\n+          $rootScope.wizard[\"derivedSchemas\"] = \"/derivedSchemas\";\n+        }\n+        if ($scope.dynamicForm.virSchemas.length > 0) {\n+          $rootScope.wizard[\"virtualSchemas\"] = \"/virtualSchemas\";\n+        }\n+        if ($scope.dynamicForm.resources.length > 0) {\n+          $rootScope.wizard[\"resources\"] = \"/resources\";\n+        }\n+        $rootScope.wizard[\"finish\"] = \"/finish\";\n+      };\n+\n       var initSchemaValues = function (schemas) {\n         // initialize plain attributes\n         for (var i = 0; i < schemas.plainSchemas.length; i++) {\n@@ -182,6 +203,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             $scope.dynamicForm.resources.push(response[i].key);\n           }\n           $scope.dynamicForm.resources.sort();\n+          initWizard();\n         });\n       };\n \n@@ -243,11 +265,11 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         UserSelfService.read().then(function (response) {\n           $scope.user = UserUtil.getUnwrappedUser(response);\n           $scope.user.password = undefined;\n-          \n+\n           $scope.initialSecurityQuestion = $scope.user.securityQuestion;\n           // initialize already assigned resources\n           $scope.dynamicForm.selectedResources = $scope.user.resources;\n- \n+\n           // initialize already assigned groups -- keeping the same structure of groups       \n           for (var index in $scope.user.memberships) {\n             $scope.dynamicForm.selectedGroups.push(\n@@ -333,9 +355,18 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           initUserSchemas(null, group);\n       });\n \n+      $scope.$on('addFinish', function (event) {\n+        $rootScope.wizard.finish = {\n+          url: \"/finish\"\n+        };\n+      });\n+\n+\n+\n       $scope.$on('groupRemoved', function (event, group) {\n         if (group)\n           removeUserSchemas(null, group);\n+        initWizard();\n       });\n \n       if ($scope.createMode) {\n@@ -409,7 +440,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       }\n     };\n-    \n+\n     $scope.retrieveSecurityQuestion = function (user) {\n       if ($rootScope.pwdResetRequiringSecurityQuestions) {\n         if (user && user.username && user.username.length) {\n@@ -431,7 +462,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         }\n       }\n     };\n-    \n+\n     $scope.resetPassword = function (user) {\n       if (user && user.username) {\n         $scope.retrieveSecurityQuestion(user);"},{"sha":"3dcb70bfc44ec325a7209f759762592ab72ce6cf","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/navigationButtons.js","status":"modified","additions":41,"deletions":43,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e621242be705bb048a14bcb96740564a6a7461f/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FnavigationButtons.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e621242be705bb048a14bcb96740564a6a7461f/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FnavigationButtons.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FnavigationButtons.js?ref=0e621242be705bb048a14bcb96740564a6a7461f","patch":"@@ -19,54 +19,52 @@\n 'use strict';\n \n angular.module('self')\n-        .directive('navigationButtons', ['$state', 'GenericUtil', 'ValidationExecutor', function ($state, GenericUtil, ValidationExecutor) {\n-            return {\n-              restrict: 'E',\n-              templateUrl: 'views/navigationButtons.html',\n-              scope: {\n+        .directive('navigationButtons', ['$state', '$rootScope', 'GenericUtil', 'ValidationExecutor', function ($state, $rootScope, GenericUtil, ValidationExecutor) {\n+        return {\n+        restrict: 'E',\n+                templateUrl: 'views/navigationButtons.html',\n+                scope: {\n                 base: \"@\",\n-                current: \"@\"\n-              },\n-              link: function (scope, element, attrs) {\n+                        current: \"@\"\n+                },\n+                link: function (scope, element, attrs) {\n                 var base = (scope.base && scope.base != \"\" ? scope.base + \".\" : \"\");\n-                scope.wizard = scope.$eval(attrs.wizard) || scope.$parent.wizard;\n-                scope.previous = \"none\";\n-                if (scope.wizard) {\n-                  var urls = Object.keys(scope.wizard);\n-                  var index = urls.indexOf(scope.current);\n-                  scope.previous = (index > 0 ? base + urls[index - 1] : scope.previous = \"none\");\n-                  scope.next = (index < urls.length - 1 ? base + urls[index + 1] : scope.next = \"none\");\n+                        $rootScope.wizard = scope.$eval(attrs.wizard) || scope.$parent.wizard;\n+                        scope.previous = \"none\";\n+                        if ($rootScope.wizard) {\n+                var urls = Object.keys($rootScope.wizard);\n+                        var index = urls.indexOf(scope.current);\n+                        scope.previous = (index > 0 ? base + urls[index - 1] : scope.previous = \"none\");\n+                        scope.next = (index < urls.length - 1 ? base + urls[index + 1] : scope.next = \"none\");\n                 }\n-              },\n-              controller: function ($scope) {\n+                },\n+                controller: function ($scope) {\n \n                 $scope.validateAndNext = function (event, state) {\n-                  //getting the enclosing form in order to access to its name                \n-                  var currentForm = GenericUtil.getEnclosingForm(event.target);\n-                  if (currentForm != null) {\n-                    if (ValidationExecutor.validate(currentForm, $scope.$parent)) {\n-                      if (state) {\n-                        $scope.nextTab(state);\n-                      } else if ($scope.wizard) {\n-                        $scope.nextTab($scope.next);\n-                      }\n-                    }\n-                  }\n-\n-                };\n-\n-                $scope.nextTab = function (state) {\n-                  //change route through parent event\n-                  console.log(\"State: \", state);\n-                  $state.go(state);\n-                };\n+                //getting the enclosing form in order to access to its name                \n+                var currentForm = GenericUtil.getEnclosingForm(event.target);\n+                        if (currentForm != null) {\n+                if (ValidationExecutor.validate(currentForm, $scope.$parent)) {\n+                if (state) {\n+                $scope.nextTab(state);\n+                } else if ($rootScope.wizard) {\n+                $scope.nextTab($scope.next);\n+                }\n+                }\n+                }\n \n-                $scope.previousTab = function () {\n-                  //change route through parent event\n-                  $state.go($scope.previous);\n                 };\n-              }\n+                        $scope.nextTab = function (state) {\n+                        //change route through parent event\n+                        console.log(\"State: \", state);\n+                                $state.go(state);\n+                        };\n+                                $scope.previousTab = function () {\n+                                //change route through parent event\n+                                $state.go($scope.previous);\n+                                };\n+                        }\n \n-            }\n-            ;\n-          }]);\n+                        }\n+                ;\n+                }]);"}]}