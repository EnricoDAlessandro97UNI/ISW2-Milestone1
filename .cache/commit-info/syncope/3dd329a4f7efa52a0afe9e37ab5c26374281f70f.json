{"sha":"3dd329a4f7efa52a0afe9e37ab5c26374281f70f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNkZDMyOWE0ZjdlZmE1MmEwYWZlOWUzN2FiNWMyNjM3NDI4MWY3MGY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-22T16:52:04Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-22T16:52:04Z"},"message":"Users' paginator enhanced\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246709 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"66c7dbe1a0de5722b619726717beb17c9735825f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/66c7dbe1a0de5722b619726717beb17c9735825f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3dd329a4f7efa52a0afe9e37ab5c26374281f70f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3dd329a4f7efa52a0afe9e37ab5c26374281f70f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3dd329a4f7efa52a0afe9e37ab5c26374281f70f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/comments","author":null,"committer":null,"parents":[{"sha":"d3011872f84f3ec7413ad0890e4fd440e5bb80cf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d3011872f84f3ec7413ad0890e4fd440e5bb80cf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d3011872f84f3ec7413ad0890e4fd440e5bb80cf"}],"stats":{"total":368,"additions":320,"deletions":48},"files":[{"sha":"6c75b7766962b223aa81059da2e2474346dae70a","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":242,"deletions":27,"changes":269,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=3dd329a4f7efa52a0afe9e37ab5c26374281f70f","patch":"@@ -16,7 +16,6 @@\n \n import java.io.Serializable;\n import java.util.ArrayList;\n-\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n@@ -40,6 +39,7 @@\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.list.PageableListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n@@ -49,6 +49,7 @@\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n+import org.syncope.client.search.PaginatedResult;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.RoleTO;\n@@ -114,18 +115,28 @@ public class Users extends BasePage {\n     int currentViewPage = 1;\n     int currentSearchPage = 1;\n \n+    /** Ajax Links for paginator**/\n     AjaxLink incrementUserViewLink;\n+    AjaxLink firstPageLink;\n     AjaxLink decrementUserViewLink;\n-    Label currentPageUserViewLabel;\n-\n+    AjaxLink lastPageLink;\n     AjaxLink incrementUserSearchLink;\n     AjaxLink decrementUserSearchLink;\n+    \n+    /** Labels for paginator */\n     Label currentPageUserSearchLabel;\n+    Label pageRecordFrom;\n+    Label pageRecordTo;\n+    Label totalRecords;\n \n     List<String> columnsList;\n \n     NodeCond nodeCond;\n \n+    PaginatedResult paginatedUsers;\n+\n+    ListView pageLinksView;\n+\n     public Users(PageParameters parameters) {\n         super(parameters);\n \n@@ -183,28 +194,70 @@ protected void populateItem(final ListItem item) {\n         paginatorSearchRows = utility.getPaginatorRowsToDisplay(Constants\n                     .CONF_USERS_SEARCH_PAGINATOR_ROWS);\n \n-        IModel usersModel = new LoadableDetachableModel() {\n+        setupPaginatedUsers();\n \n+        IModel usersModel = new LoadableDetachableModel() {\n+        \n             @Override\n             protected Object load() {\n+                paginatedUsers = usersRestClient\n+                        .getPaginatedUser(currentViewPage, paginatorRows);\n+\n+                //Refresh links just after the selecting page click\n+                if(incrementUserViewLink != null && decrementUserViewLink != null\n+                        && firstPageLink != null && lastPageLink != null) {\n+                    int totalPages =  (int) Math.ceil(\n+                            paginatedUsers.getTotalRecords().doubleValue()/\n+                        new Double(paginatedUsers.getPageSize()));\n+\n+                    if (currentViewPage == totalPages) {\n+                        incrementUserViewLink.setEnabled(false);\n+                        lastPageLink.setEnabled(false);\n+                    } else {\n+                        incrementUserViewLink.setEnabled(true);\n+                        lastPageLink.setEnabled(true);\n+                    }\n \n-                List<UserTO> list = usersRestClient.getPaginatedUsersList(\n-                        currentViewPage, paginatorRows);\n+                    if (currentViewPage == 1) {\n+                        decrementUserViewLink.setEnabled(false);\n+                    } else \n+                        decrementUserViewLink.setEnabled(true);\n \n-                List<UserTO> nextList = usersRestClient.getPaginatedUsersList(\n-                        currentViewPage + 1, paginatorRows);\n+                    if (totalPages == 1 || currentViewPage == 1) {\n+                        firstPageLink.setEnabled(false);\n+                    } else\n+                        firstPageLink.setEnabled(true);\n+                }\n \n-                if(nextList.size() == 0)\n-                    incrementUserViewLink.setVisible(false);\n-                else\n-                    incrementUserViewLink.setVisible(true);\n+                if(pageRecordFrom != null && pageRecordTo != null\n+                        && totalRecords != null) {\n \n-                if(currentViewPage <= 1)\n-                    decrementUserViewLink.setVisible(false);\n-                else\n-                    decrementUserViewLink.setVisible(true);\n+                    //Records indexes for paginator's labels\n+                    int firstPageRecord = 1;\n+                    int lastPageRecord = paginatedUsers.getRecordsInPage();\n+\n+                    if (paginatedUsers.getPageNumber() > 1) {\n+                        firstPageRecord = (paginatedUsers.getPageSize() *\n+                                (paginatedUsers.getPageNumber() - 1)) + 1;\n+\n+                        lastPageRecord = (paginatedUsers.getPageSize() *\n+                                (paginatedUsers.getPageNumber() - 1)) +\n+                                paginatedUsers.getRecordsInPage();\n+                    }\n+\n+                    pageRecordFrom.setDefaultModelObject(\n+                            String.valueOf(firstPageRecord));\n+\n+                    pageRecordTo.setDefaultModelObject(\n+                            String.valueOf(lastPageRecord));\n \n-                return list;\n+                    totalRecords.setDefaultModelObject(String.valueOf(\n+                            paginatedUsers.getTotalRecords()));\n+\n+                }\n+\n+\n+                return paginatedUsers.getRecords();\n             }\n         };\n \n@@ -307,16 +360,53 @@ public CharSequence preDecorateScript(CharSequence script) {\n         usersTableContainer.add(usersView);\n         usersTableContainer.setOutputMarkupId(true);\n \n-        currentPageUserViewLabel = new Label(\"currentPageLabel\",\n-                new Model<String>(String.valueOf(currentViewPage)));\n-\n         incrementUserViewLink = new AjaxLink(\"incrementLink\"){\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n                 currentViewPage++;\n-                currentPageUserViewLabel.setDefaultModelObject(\n-                        String.valueOf(currentViewPage));\n+                \n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorIndexes();\n+                pageLinksView.setList(pageIdList);\n+                target.addChildren(pageLinksView, AjaxLink.class);\n+\n+                target.addComponent(usersTableContainer);\n+            }\n+        };\n+\n+        int totalPages =  (int) Math.ceil(paginatedUsers.getTotalRecords()\n+                .doubleValue()/new Double(paginatedUsers.getPageSize()));\n+\n+        firstPageLink = new AjaxLink(\"firstPageLink\"){\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                currentViewPage = 1;\n+\n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorIndexes();\n+                pageLinksView.setList(pageIdList);\n+                target.addChildren(pageLinksView, AjaxLink.class);\n+\n+                target.addComponent(usersTableContainer);\n+            }\n+        };\n+\n+        lastPageLink = new AjaxLink(\"lastPageLink\"){\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                int totalPages =  (int) Math.ceil(paginatedUsers\n+                        .getTotalRecords().doubleValue()/ new Double(\n+                        paginatedUsers.getPageSize()));\n+                currentViewPage = totalPages;\n+\n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorIndexes();\n+                pageLinksView.setList(pageIdList);\n+                target.addChildren(pageLinksView, AjaxLink.class);\n+\n                 target.addComponent(usersTableContainer);\n             }\n         };\n@@ -326,17 +416,89 @@ public void onClick(AjaxRequestTarget target) {\n             @Override\n             public void onClick(AjaxRequestTarget target) {\n                 currentViewPage--;\n-                currentPageUserViewLabel.setDefaultModelObject(\n-                        String.valueOf(currentViewPage));\n+\n+                //Update pageLinks on paginator\n+                List<Integer> pageIdList = getPaginatorIndexes();\n+                pageLinksView.setList(pageIdList);\n+                target.addChildren(pageLinksView, AjaxLink.class);\n+\n                 target.addComponent(usersTableContainer);\n             }\n         };\n \n+        if(currentViewPage == totalPages) {\n+            incrementUserViewLink.setEnabled(false);\n+            lastPageLink.setEnabled(false);\n+        }\n+\n+        if(currentViewPage == 1)\n+            decrementUserViewLink.setEnabled(false);\n+\n+        if(totalPages == 1 || currentViewPage == 1)\n+            firstPageLink.setEnabled(false);\n+        \n         //Add to usersTableSearchContainer users' list navigation controls\n         usersTableContainer.add(incrementUserViewLink);\n-        usersTableContainer.add(currentPageUserViewLabel);\n+        //usersTableContainer.add(currentPageUserViewLabel);\n+        usersTableContainer.add(firstPageLink);\n+        usersTableContainer.add(lastPageLink);\n+\n+        //Records indexes for paginator's labels\n+        int firstPageRecord = 1;\n+        int lastPageRecord = paginatedUsers.getRecordsInPage();\n+\n+        if(paginatedUsers.getPageNumber() > 1) {\n+          firstPageRecord = (paginatedUsers.getPageSize() *\n+                             (paginatedUsers.getPageNumber()-1) ) + 1;\n+          \n+          lastPageRecord = (paginatedUsers.getPageSize() *\n+                             (paginatedUsers.getPageNumber()-1) ) +\n+                             paginatedUsers.getRecordsInPage();\n+        }\n+\n+        usersTableContainer.add(pageRecordFrom = new Label(\"pageRecordFrom\",\n+                new Model<String>(String.valueOf(firstPageRecord))));\n+\n+        usersTableContainer.add(pageRecordTo = new Label(\"pageRecordTo\",\n+                new Model<String>(String.valueOf(lastPageRecord))));\n+\n+        usersTableContainer.add(totalRecords = new Label(\"totalRecords\",\n+                new Model<String>(String.valueOf(paginatedUsers\n+                .getTotalRecords()))));\n+\n         usersTableContainer.add(decrementUserViewLink);\n \n+        //Build pages link for paginator\n+        List<Integer> pageIdList = getPaginatorIndexes();\n+\n+        pageLinksView = new ListView(\"pageLinksView\", pageIdList) {\n+\n+            @Override\n+            protected void populateItem(ListItem item) {\n+                final int pageId = (Integer) item.getDefaultModelObject();\n+                \n+                AjaxLink pageLink = new AjaxLink(\"pageLink\"){\n+\n+                @Override\n+                public void onClick(AjaxRequestTarget target) {\n+                    currentViewPage = pageId;\n+                    target.addComponent(usersTableContainer);\n+                }\n+            };\n+\n+            if(currentViewPage == pageId)\n+                pageLink.setEnabled(false);\n+            else\n+                pageLink.setEnabled(true);\n+            \n+            pageLink.add(new Label(\"name\",new Model<String>(\n+                    String.valueOf(pageId))));\n+            \n+            item.add(pageLink);\n+            }\n+        };\n+\n+        usersTableContainer.add(pageLinksView);\n         usersTableContainer.add(columnsView);\n \n         add(usersTableContainer);\n@@ -415,8 +577,9 @@ protected void onUpdate( AjaxRequestTarget target )\n                       paginatorRows);\n \n               usersView.setRowsPerPage(paginatorRows);\n-\n-              target.addComponent(usersTableContainer);\n+              \n+              //Reload page\n+              setResponsePage(Users.class);\n             }\n           });\n \n@@ -867,6 +1030,50 @@ protected void onUpdate( AjaxRequestTarget target )\n         add(paginatorSearchForm);\n     }\n \n+    public PaginatedResult getPaginatedUsers(int page, int size) {\n+\n+         PaginatedResult paginatedResult =\n+                 usersRestClient.getPaginatedUser(page, size);\n+\n+         return paginatedResult;\n+    }\n+\n+    /**\n+     * Refresh paginator after page link click.\n+     */\n+    public List<Integer> getPaginatorIndexes(){\n+      int totalPages =  (int) Math.ceil(paginatedUsers.getTotalRecords()\n+                .doubleValue()/new Double(paginatedUsers.getPageSize()));\n+\n+        //Build pages link for paginator\n+        List<Integer> pageIdList = new ArrayList<Integer>();\n+\n+        int startIndex = 1;\n+\n+        if(totalPages > 10) {\n+            if (currentViewPage < 10)\n+                startIndex = 1;\n+            else\n+                startIndex = currentViewPage - 2;\n+        }\n+\n+        int endIndex = totalPages;\n+\n+        if(totalPages > 10) {\n+\n+            if(startIndex +9 <= totalPages)\n+                endIndex = startIndex +9;\n+            else\n+                endIndex = startIndex + (totalPages - startIndex);\n+        }\n+\n+        for(int i = startIndex; i <= endIndex; i++ ) {\n+            pageIdList.add(i);\n+        }\n+\n+        return pageIdList;\n+    }\n+\n      /**\n      * Return the user's attributes columnsList to display, ordered\n      * @param userTO instance\n@@ -1079,6 +1286,14 @@ public NodeCond buildSearchExpression(\n         }\n     }\n \n+    /**\n+     *  Init users to display.\n+     */\n+    public void setupPaginatedUsers() {\n+        paginatedUsers = usersRestClient\n+                        .getPaginatedUser(currentViewPage, paginatorRows);\n+    }\n+\n     /**\n      * Wrapper class for displaying attribute\n      */"},{"sha":"88f629432792991c6bd62b412f0d214fb0047091","filename":"console/src/main/java/org/syncope/console/rest/UsersRestClient.java","status":"modified","additions":25,"deletions":2,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java?ref=3dd329a4f7efa52a0afe9e37ab5c26374281f70f","patch":"@@ -44,7 +44,7 @@ public List<UserTO> getAllUsers() {\n         return users;\n     }\n \n-    public List<UserTO> getPaginatedUsersList(int page, int size) {\n+    /*public List<UserTO> getPaginatedUsersList(int page, int size) {\n         List<UserTO> users = null;\n         try {\n             final PaginatedResult paginatedResult =\n@@ -59,7 +59,7 @@ public List<UserTO> getPaginatedUsersList(int page, int size) {\n             e.printStackTrace();\n         }\n         return users;\n-    }\n+    }*/\n \n     /**\n      * Create a new user and start off the workflow.\n@@ -203,6 +203,29 @@ public List<UserTO> paginatedSearchUsers(NodeCond nodeSearchCondition,\n         return matchedUsers;\n     }\n \n+    public PaginatedResult paginatedSearchUser(NodeCond nodeSearchCondition,\n+            int page, int size)\n+            throws HttpServerErrorException {\n+\n+        PaginatedResult paginatedResult =\n+                restClient.getRestTemplate().postForObject(\n+                restClient.getBaseURL() + \"user/paginatedSearch/{page}/{size}\",\n+                nodeSearchCondition, PaginatedResult.class, page, size);\n+\n+        return paginatedResult;\n+    }\n+\n+    public PaginatedResult getPaginatedUser(int page, int size)\n+            throws HttpServerErrorException {\n+\n+        PaginatedResult paginatedResult =\n+                restClient.getRestTemplate().getForObject(\n+                restClient.getBaseURL() + \"user/paginatedList/{page}/{size}\",\n+                PaginatedResult.class, page, size);\n+\n+        return paginatedResult;\n+    }\n+\n     public RestClient getRestClient() {\n         return restClient;\n     }"},{"sha":"b1c1f2fd90e1ba76da505a152f529241d70dfe74","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":47,"deletions":17,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=3dd329a4f7efa52a0afe9e37ab5c26374281f70f","patch":"@@ -30,6 +30,14 @@\n             padding: 0px;\n             margin: 0px;\n         }\n+\n+        #pageNavigator a:visited {\n+            text-decoration: none;\n+        }\n+\n+        #pageNavigator a:hover {\n+            text-decoration: underline;\n+        }\n     </style>\n </wicket:head>\n <wicket:extend>\n@@ -105,24 +113,46 @@\n                 <h1><wicket:message key=\"users_title\"/></h1>\n \n                 <span wicket:id=\"usersTableContainer\">\n-                            <table id=\"users\" class=\"ui-widget ui-widget-content table-hover\">\n-                                <thead>\n-                                    <tr>\n-                                        <td style=\"border-color:transparent\">\n-                                            <div style=\"font-style:oblique\">\n-                                                <wicket:message key=\"navigation\"/>\n-                                                <a wicket:id=\"decrementLink\">\n-                                                     &lt;\n-                                                </a>\n+                         <span id=\"pageNavigator\" style=\"font-style:oblique\">\n+                                <span style=\"float:left\">\n+                                    <wicket:message key=\"showingFrom\"/>\n+                                        <span wicket:id=\"pageRecordFrom\"/>\n+                                    <wicket:message key=\"showingTo\"/>\n+                                        <span wicket:id=\"pageRecordTo\"/>\n+                                    <wicket:message key=\"showingOf\"/>\n+                                        <span wicket:id=\"totalRecords\"/>\n+                                </span>\n \n-                                                <span wicket:id=\"currentPageLabel\"/>\n+                                <span style=\"float:right\">\n+                                    <a wicket:id=\"firstPageLink\">\n+                                         &lt;&lt;\n+                                    </a>\n \n-                                                <a wicket:id=\"incrementLink\">\n-                                                     &gt;\n-                                                </a>\n-                                            </div>\n-                                        </td>\n-                                    </tr>\n+                                    <a wicket:id=\"decrementLink\">\n+                                         &lt;\n+                                    </a>\n+\n+                                    <span wicket:id=\"pageLinksView\">\n+                                        <a wicket:id=\"pageLink\">\n+                                            <span wicket:id=\"name\"/>\n+                                        </a>\n+                                    </span>\n+\n+                                    <a wicket:id=\"incrementLink\">\n+                                         &gt;\n+                                    </a>\n+                                    <a wicket:id=\"lastPageLink\">\n+                                         &gt;&gt;\n+                                    </a>\n+                                </span>\n+                            </span>\n+\n+                            <span>\n+                                &nbsp;\n+                            </span>\n+                                    \n+                            <table id=\"users\" class=\"ui-widget ui-widget-content table-hover\">\n+                                <thead>\n                                     <tr class=\"ui-widget-header\">\n                                         <th><wicket:message key=\"id\"/></th>\n                                         <th><wicket:message key=\"status\"/></th>\n@@ -273,7 +303,7 @@ <h1 style=\"display:inline\"><wicket:message key=\"search_results_title\"/></h1>\n                                     <tr>\n                                         <td style=\"border-color:transparent\">\n                                             <div style=\"font-style:oblique\">\n-                                                <wicket:message key=\"navigation\"/>\n+                                                <!--wicket:message key=\"navigation\"/-->\n                                                 <a wicket:id=\"decrementLink\">\n                                                      &lt;\n                                                 </a>"},{"sha":"2ac47387c14b4208d4391e34d64472e1e1ebbc5a","filename":"console/src/main/resources/org/syncope/console/pages/Users.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties?ref=3dd329a4f7efa52a0afe9e37ab5c26374281f70f","patch":"@@ -30,4 +30,6 @@ search_filter_type=Filter value\n search_filter_name=Filter name\n search_filter_value=Filter value\n search_type_cond=Condition\n-navigation=Pages:\n+showingFrom=Showing\n+showingTo=to\n+showingOf=of"},{"sha":"3756d4c625428a20dc4b89008bfc8fc6abbd9a3d","filename":"console/src/main/resources/org/syncope/console/pages/Users_it.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3dd329a4f7efa52a0afe9e37ab5c26374281f70f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties?ref=3dd329a4f7efa52a0afe9e37ab5c26374281f70f","patch":"@@ -29,4 +29,6 @@ search_filter_type=Filtro\n search_filter_name=Nome\n search_filter_value=Valore\n search_type_cond=Condizione\n-navigation=Pagine:\n+showingFrom=Risultati da\n+showingTo=a\n+showingOf=di"}]}