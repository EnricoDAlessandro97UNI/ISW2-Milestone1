{"sha":"ec25fe7f8f9dbb2b871df9f2ba56f753065015bb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVjMjVmZTdmOGY5ZGJiMmI4NzFkZjlmMmJhNTZmNzUzMDY1MDE1YmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-02-08T14:37:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-02-08T14:37:31Z"},"message":"Backporting fix for CXF-7968","tree":{"sha":"92437dda1b1aeb64b98abec166565178d1af7307","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/92437dda1b1aeb64b98abec166565178d1af7307"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6f86a2f10bab861f7094651e6222e54edd1da90b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f86a2f10bab861f7094651e6222e54edd1da90b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6f86a2f10bab861f7094651e6222e54edd1da90b"}],"stats":{"total":71,"additions":59,"deletions":12},"files":[{"sha":"978d99fcf27f21461f4d61cf8b3661da500a7352","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RESTCXFContext.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java?ref=ec25fe7f8f9dbb2b871df9f2ba56f753065015bb","patch":"@@ -42,6 +42,7 @@\n import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n import org.apache.cxf.validation.BeanValidationProvider;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.search.SyncopeFiqlParser;\n import org.apache.syncope.common.rest.api.DateParamConverterProvider;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -84,7 +85,7 @@ public DateParamConverterProvider dateParamConverterProvider() {\n     @Bean\n     public JAXBElementProvider<?> jaxbProvider() {\n         JAXBElementProvider<?> jaxbProvider = new JAXBElementProvider<>();\n-        jaxbProvider.setNamespacePrefixes(Collections.singletonMap(\"http://syncope.apache.org/30\", \"syncope30\"));\n+        jaxbProvider.setNamespacePrefixes(Collections.singletonMap(SyncopeConstants.NS, SyncopeConstants.NS_PREFIX));\n \n         DocumentDepthProperties documentDepthProperties = new DocumentDepthProperties();\n         documentDepthProperties.setInnerElementCountThreshold(500);\n@@ -169,7 +170,7 @@ public AddETagFilter addETagFilter() {\n     public WadlGenerator wadlGenerator() {\n         WadlGenerator wadlGenerator = new WadlGenerator();\n         wadlGenerator.setApplicationTitle(\"Apache Syncope \" + version);\n-        wadlGenerator.setNamespacePrefix(\"syncope30\");\n+        wadlGenerator.setNamespacePrefix(SyncopeConstants.NS_PREFIX);\n         wadlGenerator.setIncrementNamespacePrefix(false);\n         wadlGenerator.setLinkAnyMediaTypeToXmlSchema(true);\n         wadlGenerator.setUseJaxbContextForQnames(true);"},{"sha":"2ee7b5165adf4185633bc587c0d3add9c58b44f2","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeJavaDocProvider.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeJavaDocProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeJavaDocProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeJavaDocProvider.java?ref=ec25fe7f8f9dbb2b871df9f2ba56f753065015bb","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf;\n+\n+import java.net.URL;\n+import org.apache.cxf.jaxrs.model.doc.JavaDocProvider;\n+\n+/**\n+ * Keep this class until CXF 3.3.1 is released, then use its parent class.\n+ */\n+public class SyncopeJavaDocProvider extends JavaDocProvider {\n+\n+    public SyncopeJavaDocProvider(final URL... javaDocUrls) {\n+        super(javaDocUrls);\n+    }\n+\n+    public SyncopeJavaDocProvider(final String... paths) throws Exception {\n+        super(paths);\n+    }\n+\n+    @Override\n+    protected String getOperLink() {\n+        String operLink = \"<A NAME=\\\"\";\n+        return JAVA_VERSION == JAVA_VERSION_16\n+                ? operLink\n+                : JAVA_VERSION <= JAVA_VERSION_18\n+                        ? operLink.toLowerCase()\n+                        : \"<a id=\\\"\";\n+    }\n+}"},{"sha":"d37de126604b8326e9390f5f8ce08025a2e85fac","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec25fe7f8f9dbb2b871df9f2ba56f753065015bb/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=ec25fe7f8f9dbb2b871df9f2ba56f753065015bb","patch":"@@ -57,30 +57,36 @@ public class SyncopeOpenApiCustomizer extends OpenApiCustomizer {\n \n     private final Environment env;\n \n-    private boolean inited = false;\n-\n     private List<String> domains;\n \n+    private boolean inited = false;\n+\n     public SyncopeOpenApiCustomizer(final Environment env) {\n         this.env = env;\n     }\n \n     private void init() {\n         synchronized (this) {\n             if (!inited) {\n+                SyncopeJavaDocProvider javaDocProvider = null;\n+\n                 URL[] javaDocURLs = JavaDocUtils.getJavaDocURLs();\n                 if (javaDocURLs == null) {\n                     String[] javaDocPaths = JavaDocUtils.getJavaDocPaths(env);\n                     if (javaDocPaths != null) {\n                         try {\n-                            super.setJavaDocPaths(javaDocPaths);\n+                            javaDocProvider = new SyncopeJavaDocProvider(javaDocPaths);\n                         } catch (Exception e) {\n                             LOG.error(\"Could not set javadoc paths from {}\", Arrays.asList(javaDocPaths), e);\n                         }\n                     }\n                 } else {\n-                    super.setJavaDocURLs(javaDocURLs);\n+                    javaDocProvider = new SyncopeJavaDocProvider(javaDocURLs);\n                 }\n+                super.setJavadocProvider(javaDocProvider);\n+\n+                domains = new ArrayList<>(ApplicationContextProvider.getApplicationContext().\n+                        getBean(DomainsHolder.class).getDomains().keySet());\n \n                 inited = true;\n             }\n@@ -103,12 +109,6 @@ public OpenAPIConfiguration customize(final OpenAPIConfiguration configuration)\n \n     @Override\n     protected void addParameters(final List<Parameter> parameters) {\n-        if (domains == null) {\n-            domains = new ArrayList<>(\n-                    ApplicationContextProvider.getApplicationContext().\n-                            getBean(DomainsHolder.class).getDomains().keySet());\n-        }\n-\n         Optional<Parameter> domainHeaderParameter = parameters.stream().filter(parameter\n                 -> parameter instanceof HeaderParameter && RESTHeaders.DOMAIN.equals(parameter.getName())).\n                 findFirst();"}]}