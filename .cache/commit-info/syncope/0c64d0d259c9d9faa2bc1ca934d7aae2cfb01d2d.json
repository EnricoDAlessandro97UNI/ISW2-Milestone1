{"sha":"0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","node_id":"C_kwDOJfYA1toAKDBjNjRkMGQyNTljOWQ5ZmFhMmJjMWNhOTM0ZDdhYWUyY2ZiMDFkMmQ","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-01-16T09:29:34Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-01-16T09:29:34Z"},"message":"Keeping up with latest pac4j SNAPSHOT","tree":{"sha":"3bca020de545323344e3f285a97f874545b26e8a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3bca020de545323344e3f285a97f874545b26e8a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"192d8e237d158ba1ea096207c1d27c96cd082945","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/192d8e237d158ba1ea096207c1d27c96cd082945","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/192d8e237d158ba1ea096207c1d27c96cd082945"}],"stats":{"total":76,"additions":65,"deletions":11},"files":[{"sha":"9ae4e56988aeaa701d1e6820ba8de8493a87ce23","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/OIDCC4UILogic.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCC4UILogic.java?ref=0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.core.logic.oidc.BaseProfileManagerFactory;\n import org.apache.syncope.core.logic.oidc.NoOpSessionStore;\n import org.apache.syncope.core.logic.oidc.OIDC4UIContext;\n import org.apache.syncope.core.logic.oidc.OIDCClientCache;\n@@ -110,7 +111,8 @@ public OIDCRequest createLoginRequest(final String redirectURI, final String opN\n         oidcClient.setCallbackUrl(redirectURI);\n \n         // 2. create OIDCRequest\n-        WithLocationAction action = oidcClient.getRedirectionAction(new OIDC4UIContext(), NoOpSessionStore.INSTANCE).\n+        WithLocationAction action = oidcClient.getRedirectionAction(\n+                new OIDC4UIContext(), NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE).\n                 map(WithLocationAction.class::cast).\n                 orElseThrow(() -> {\n                     SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n@@ -274,6 +276,7 @@ public OIDCRequest createLogoutRequest(final String accessToken, final String re\n         WithLocationAction action = oidcClient.getLogoutAction(\n                 new OIDC4UIContext(),\n                 NoOpSessionStore.INSTANCE,\n+                BaseProfileManagerFactory.INSTANCE,\n                 profile,\n                 redirectURI).\n                 map(WithLocationAction.class::cast)."},{"sha":"08d34b9824a89b2b695a29a2f197dd4462d3428c","filename":"ext/oidcc4ui/logic/src/main/java/org/apache/syncope/core/logic/oidc/BaseProfileManagerFactory.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FBaseProfileManagerFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FBaseProfileManagerFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Foidc%2FBaseProfileManagerFactory.java?ref=0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic.oidc;\n+\n+import org.pac4j.core.context.WebContext;\n+import org.pac4j.core.context.session.SessionStore;\n+import org.pac4j.core.profile.ProfileManager;\n+import org.pac4j.core.profile.factory.ProfileManagerFactory;\n+\n+public final class BaseProfileManagerFactory implements ProfileManagerFactory {\n+\n+    public static final BaseProfileManagerFactory INSTANCE = new BaseProfileManagerFactory();\n+\n+    private BaseProfileManagerFactory() {\n+        // private constructor for singleton\n+    }\n+\n+    @Override\n+    public ProfileManager apply(final WebContext wc, final SessionStore ss) {\n+        return new ProfileManager(wc, ss);\n+    }\n+}"},{"sha":"610b6d152c852d493aa168281488f20e321611d8","filename":"ext/saml2sp4ui/logic/src/main/java/org/apache/syncope/core/logic/SAML2SP4UILogic.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SP4UILogic.java?ref=0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","patch":"@@ -78,6 +78,7 @@\n import org.pac4j.core.exception.http.WithContentAction;\n import org.pac4j.core.exception.http.WithLocationAction;\n import org.pac4j.core.logout.NoLogoutActionBuilder;\n+import org.pac4j.core.profile.factory.ProfileManagerFactory;\n import org.pac4j.saml.client.SAML2Client;\n import org.pac4j.saml.config.SAML2Configuration;\n import org.pac4j.saml.context.SAML2MessageContext;\n@@ -276,7 +277,9 @@ public SAML2Request createLoginRequest(\n \n                 @Override\n                 public Optional<RedirectionAction> getRedirectionAction(\n-                        final WebContext wc, final SessionStore sessionStore) {\n+                        final WebContext wc,\n+                        final SessionStore sessionStore,\n+                        final ProfileManagerFactory profileManagerFactory) {\n \n                     this.saml2ObjectBuilder = new SAML2AuthnRequestBuilder() {\n \n@@ -287,7 +290,7 @@ public AuthnRequest build(final SAML2MessageContext context) {\n                             return authnRequest;\n                         }\n                     };\n-                    return super.getRedirectionAction(wc, sessionStore);\n+                    return super.getRedirectionAction(wc, sessionStore, profileManagerFactory);\n                 }\n             });\n         });\n@@ -296,7 +299,8 @@ public AuthnRequest build(final SAML2MessageContext context) {\n         SAML2SP4UIContext ctx = new SAML2SP4UIContext(\n                 saml2Client.getConfiguration().getAuthnRequestBindingType(),\n                 null);\n-        RedirectionAction action = saml2Client.getRedirectionAction(ctx, NoOpSessionStore.INSTANCE).\n+        RedirectionAction action = saml2Client.getRedirectionAction(\n+                ctx, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE).\n                 orElseThrow(() -> {\n                     SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n                     sce.getElements().add(\"No RedirectionAction generated for AuthnRequest\");\n@@ -481,7 +485,9 @@ public SAML2Request createLogoutRequest(\n         RedirectionAction action = saml2Client.getLogoutAction(\n                 ctx,\n                 NoOpSessionStore.INSTANCE,\n-                saml2Profile, null).\n+                BaseProfileManagerFactory.INSTANCE,\n+                saml2Profile,\n+                null).\n                 orElseThrow(() -> {\n                     SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n                     sce.getElements().add(\"No RedirectionAction generated for LogoutRequest\");\n@@ -513,7 +519,7 @@ public void validateLogoutResponse(final SAML2Response saml2Response) {\n         LogoutResponse logoutResponse;\n         try {\n             SAML2MessageContext saml2Ctx = saml2Client.getContextProvider().\n-                    buildContext(saml2Client, ctx, NoOpSessionStore.INSTANCE);\n+                    buildContext(saml2Client, ctx, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE);\n             saml2Client.getLogoutProfileHandler().receive(saml2Ctx);\n \n             logoutResponse = (LogoutResponse) saml2Ctx.getMessageContext().getMessage();"},{"sha":"62cea3e12c3edacda3817d264dd92ee8936ec8f3","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","patch":"@@ -440,7 +440,7 @@ under the License.\n     <pac4j.version>6.0.0-RC5-SNAPSHOT</pac4j.version>\n \n     <cas.version>7.0.0-SNAPSHOT</cas.version>\n-    <cas-client.version>4.0.0</cas-client.version>\n+    <cas-client.version>4.0.1</cas-client.version>\n \n     <h2.version>2.1.214</h2.version>\n "},{"sha":"d6b9804ad360aa39541d904167baba29c00ba885","filename":"sra/src/main/java/org/apache/syncope/sra/security/saml2/SAML2LogoutResponseWebFilter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2LogoutResponseWebFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2LogoutResponseWebFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2LogoutResponseWebFilter.java?ref=0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","patch":"@@ -85,7 +85,7 @@ private Mono<Void> handleLogoutResponse(\n \n         try {\n             SAML2MessageContext ctx = saml2Client.getContextProvider().\n-                    buildContext(this.saml2Client, swec, NoOpSessionStore.INSTANCE);\n+                    buildContext(this.saml2Client, swec, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE);\n             saml2Client.getLogoutProfileHandler().receive(ctx);\n         } catch (OkAction e) {\n             LOG.debug(\"LogoutResponse was actually validated but no postLogoutURL was set\", e);"},{"sha":"3c2d3acc861d0e34ea74f57fb1771d0b6da4e11f","filename":"sra/src/main/java/org/apache/syncope/sra/security/saml2/SAML2RequestServerLogoutHandler.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2RequestServerLogoutHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2RequestServerLogoutHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2RequestServerLogoutHandler.java?ref=0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.sra.security.saml2;\n \n import org.apache.syncope.sra.SessionConfig;\n+import org.apache.syncope.sra.security.pac4j.BaseProfileManagerFactory;\n import org.apache.syncope.sra.security.pac4j.NoOpSessionStore;\n import org.apache.syncope.sra.security.pac4j.RedirectionActionUtils;\n import org.apache.syncope.sra.security.pac4j.ServerWebExchangeContext;\n@@ -58,8 +59,12 @@ public Mono<Void> logout(final WebFilterExchange exchange, final Authentication\n \n                     cacheManager.getCache(SessionConfig.DEFAULT_CACHE).evictIfPresent(session.getId());\n                     return session.invalidate().then(\n-                            saml2Client.getLogoutAction(swec,\n-                                NoOpSessionStore.INSTANCE, credentials.getUserProfile(), null).\n+                            saml2Client.getLogoutAction(\n+                                    swec,\n+                                    NoOpSessionStore.INSTANCE,\n+                                    BaseProfileManagerFactory.INSTANCE,\n+                                    credentials.getUserProfile(),\n+                                    null).\n                                     map(action -> RedirectionActionUtils.handle(action, swec)).\n                                     orElseThrow(() -> new IllegalStateException(\"No action generated\")));\n                 }).onErrorResume(Mono::error);"},{"sha":"fcaff70733b624034c2431319949a7297ce33326","filename":"sra/src/main/java/org/apache/syncope/sra/security/saml2/SAML2WebSsoAuthenticationRequestWebFilter.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationRequestWebFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationRequestWebFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2WebSsoAuthenticationRequestWebFilter.java?ref=0c64d0d259c9d9faa2bc1ca934d7aae2cfb01d2d","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.sra.security.saml2;\n \n+import org.apache.syncope.sra.security.pac4j.BaseProfileManagerFactory;\n import org.apache.syncope.sra.security.pac4j.NoOpSessionStore;\n import org.apache.syncope.sra.security.pac4j.RedirectionActionUtils;\n import org.apache.syncope.sra.security.pac4j.ServerWebExchangeContext;\n@@ -58,7 +59,8 @@ public Mono<Void> filter(final ServerWebExchange exchange, final WebFilterChain\n \n                     ServerWebExchangeContext swec = new ServerWebExchangeContext(exchange);\n \n-                    return saml2Client.getRedirectionAction(swec, NoOpSessionStore.INSTANCE).\n+                    return saml2Client.getRedirectionAction(\n+                            swec, NoOpSessionStore.INSTANCE, BaseProfileManagerFactory.INSTANCE).\n                             map(action -> RedirectionActionUtils.handle(action, swec)).\n                             orElseThrow(() -> new IllegalStateException(\"No action generated\"));\n                 }).onErrorResume(Mono::error);"}]}