{"sha":"d43268c10f022e9707b01a95ffdc55c37e91b05e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ0MzI2OGMxMGYwMjJlOTcwN2IwMWE5NWZmZGM1NWMzN2U5MWIwNWU=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-30T10:18:47Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-30T10:18:55Z"},"message":"added details option, SYNCOPE-158","tree":{"sha":"1f98b1c87ec11188415bc63b560b4f28a1c9c564","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1f98b1c87ec11188415bc63b560b4f28a1c9c564"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d43268c10f022e9707b01a95ffdc55c37e91b05e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d43268c10f022e9707b01a95ffdc55c37e91b05e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d43268c10f022e9707b01a95ffdc55c37e91b05e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d43268c10f022e9707b01a95ffdc55c37e91b05e/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"714557e64f309bd4975ed55bb7d182a7727c4667","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/714557e64f309bd4975ed55bb7d182a7727c4667","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/714557e64f309bd4975ed55bb7d182a7727c4667"}],"stats":{"total":953,"additions":904,"deletions":49},"files":[{"sha":"26873a1e4dbd23182115531c742ec7fc3f10e57b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/CommonsResultManager.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -18,9 +18,13 @@\n  */\n package org.apache.syncope.client.cli.commands;\n \n+import java.util.Arrays;\n+import java.util.LinkedList;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.client.cli.view.Messages;\n+import org.apache.syncope.client.cli.view.Table;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n \n public abstract class CommonsResultManager {\n@@ -80,4 +84,13 @@ protected void printConfiguration(final Set<ConnConfProperty> configurationPrope\n             System.out.println(\"\");\n         }\n     }\n+    \n+    protected void printDetails(final String title, final Map<String, String> details) {\n+        final Table.TableBuilder tableBuilder\n+                = new Table.TableBuilder(title).header(\"detail\").header(\"value\");\n+        for (final Map.Entry<String, String> entrySet : details.entrySet()) {\n+            tableBuilder.rowValues(new LinkedList(Arrays.asList(entrySet.getKey(), entrySet.getValue())));\n+        }\n+        tableBuilder.build().print();\n+    }\n }"},{"sha":"01101563fdf15f0f11691b118f5ef921ddd64858","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class ConnectorCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: connector [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details \\n\"\n             + \"    --list \\n\"\n             + \"    --list-bundles \\n\"\n             + \"    --list-configuration-properties\\n\"\n@@ -47,6 +48,9 @@ public void execute(final Input input) {\n         }\n \n         switch (ConnectorOptions.fromName(input.getOption())) {\n+            case DETAILS:\n+                new ConnectorDetails(input).details();\n+                break;\n             case LIST:\n                 new ConnectorList(input).list();\n                 break;\n@@ -82,6 +86,7 @@ private enum ConnectorOptions {\n \n         HELP(\"--help\"),\n         LIST(\"--list\"),\n+        DETAILS(\"--details\"),\n         LIST_BUNDLES(\"--list-bundles\"),\n         LIST_CONFIGURATION(\"--list-configuration-properties\"),\n         READ(\"--read\"),"},{"sha":"deb43ef212abf737360ecb6cea22b3e5c09005b4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorDetails.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.types.ConnectorCapability;\n+\n+public class ConnectorDetails extends AbstractConnectorCommand {\n+\n+    private static final String LIST_HELP_MESSAGE = \"connector --details\";\n+\n+    private final Input input;\n+\n+    public ConnectorDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            final Map<String, String> details = new LinkedMap<>();\n+            final List<ConnInstanceTO> connInstanceTOs = connectorSyncopeOperations.list();\n+            int withCreateCapability = 0;\n+            int withDeleteCapability = 0;\n+            int withSearchCapability = 0;\n+            int withSyncCapability = 0;\n+            int withUpdateCapability = 0;\n+            for (final ConnInstanceTO connInstanceTO : connInstanceTOs) {\n+                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.CREATE)) {\n+                    withCreateCapability++;\n+                }\n+                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.DELETE)) {\n+                    withDeleteCapability++;\n+                }\n+                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n+                    withSearchCapability++;\n+                }\n+                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.SYNC)) {\n+                    withSyncCapability++;\n+                }\n+                if (connInstanceTO.getCapabilities().contains(ConnectorCapability.UPDATE)) {\n+                    withUpdateCapability++;\n+                }\n+            }\n+            details.put(\"Total number\", String.valueOf(connInstanceTOs.size()));\n+            details.put(\"With create capability\", String.valueOf(withCreateCapability));\n+            details.put(\"With delete capability\", String.valueOf(withDeleteCapability));\n+            details.put(\"With search capability\", String.valueOf(withSearchCapability));\n+            details.put(\"With sync capability\", String.valueOf(withSyncCapability));\n+            details.put(\"With update capability\", String.valueOf(withUpdateCapability));\n+            details.put(\"Bundles number\", String.valueOf(connectorSyncopeOperations.getBundles().size()));\n+            connectorResultManager.printDetails(details);\n+        } else {\n+            connectorResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"be44465633f1bc199b5d9f5df3c22692ca4c5784","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorResultManager.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.cli.commands.connector;\n \n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n@@ -74,8 +75,6 @@ public void printBundles(final List<ConnBundleTO> connBundleTOs) {\n             System.out.println(\"    display name: \" + connBundleTO.getDisplayName());\n             System.out.println(\"    location: \" + connBundleTO.getLocation());\n             System.out.println(\"    version: \" + connBundleTO.getVersion());\n-            System.out.println(\"    PROPERTIES:\");\n-            printConfPropSchema(connBundleTO.getProperties());\n         }\n     }\n \n@@ -95,4 +94,8 @@ public void printConfigurationProperties(final Set<ConnConfProperty> connConfPro\n         printConfiguration(connConfPropertys);\n \n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"connectors details\", details);\n+    }\n }"},{"sha":"d27c613f37704c62ea91fe6465438773a79d4d01","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class DomainCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: domain [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details \\n\"\n             + \"    --list \\n\"\n             + \"    --delete \\n\"\n             + \"       Syntax: --delete {DOMAIN-NAME} {DOMAIN-NAME} [...]\\n\";\n@@ -41,6 +42,9 @@ public void execute(final Input input) {\n             input.setOption(Options.HELP.getOptionName());\n         }\n         switch (Options.fromName(input.getOption())) {\n+            case DETAILS:\n+                new DomainDetails(input).details();\n+                break;\n             case LIST:\n                 new DomainList(input).list();\n                 break;\n@@ -63,6 +67,7 @@ public String getHelpMessage() {\n     private enum Options {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST(\"--list\"),\n         DELETE(\"--delete\");\n "},{"sha":"a4808bbc9a784dd0204585658f57d38726693204","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainDetails.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.domain;\n+\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class DomainDetails extends AbstractDomainCommand {\n+\n+    private static final String LIST_HELP_MESSAGE = \"domain --details\";\n+\n+    private final Input input;\n+\n+    public DomainDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                details.put(\"Total number\", String.valueOf(domainSyncopeOperations.list().size()));\n+                domainResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                domainResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            domainResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n+        }\n+\n+    }\n+}"},{"sha":"ca21592cf2476dba92fa70496db820d759efacd1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/domain/DomainResultManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fdomain%2FDomainResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.cli.commands.domain;\n \n import java.util.List;\n+import java.util.Map;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.common.lib.to.DomainTO;\n \n@@ -34,4 +35,8 @@ public void printDomain(final DomainTO domainTO) {\n         System.out.println(\" > DOIMAIN NAME: \" + domainTO.getKey());\n         System.out.println(\"    chiper algorithm: \" + domainTO.getAdminCipherAlgorithm());\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"domains details\", details);\n+    }\n }"},{"sha":"5b0ecc80c4cf0a0b382bf835d5417d6eb6e8233e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class LoggerCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: logger [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details \\n\"\n             + \"    --list \\n\"\n             + \"    --read \\n\"\n             + \"       Syntax: --read {LOG-NAME} {LOG-NAME} [...]\\n\"\n@@ -50,6 +51,9 @@ public void execute(final Input input) {\n         }\n \n         switch (LoggerOptions.fromName(input.getOption())) {\n+            case DETAILS:\n+                new LoggerDetails(input).details();\n+                break;\n             case LIST:\n                 new LoggerList(input).list();\n                 break;\n@@ -84,6 +88,7 @@ public String getHelpMessage() {\n     private enum LoggerOptions {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST(\"--list\"),\n         READ(\"--read\"),\n         UPDATE(\"--update\"),"},{"sha":"b86aeb9613c6f97ea9a8e2db812da4fb69af7ce4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerDetails.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.logger;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.LoggerTO;\n+\n+public class LoggerDetails extends AbstractLoggerCommand {\n+\n+    private static final String LIST_HELP_MESSAGE = \"logger --details\";\n+\n+    private final Input input;\n+\n+    public LoggerDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final List<LoggerTO> loggerTOs = loggerSyncopeOperations.list();\n+                int debugLevel = 0;\n+                int errorLevel = 0;\n+                int fatalLevel = 0;\n+                int infoLevel = 0;\n+                int offLevel = 0;\n+                int traceLevel = 0;\n+                int warnLevel = 0;\n+                for (final LoggerTO loggerTO : loggerTOs) {\n+                    switch (loggerTO.getLevel()) {\n+                        case DEBUG:\n+                            debugLevel++;\n+                            break;\n+                        case ERROR:\n+                            errorLevel++;\n+                            break;\n+                        case FATAL:\n+                            fatalLevel++;\n+                            break;\n+                        case INFO:\n+                            infoLevel++;\n+                            break;\n+                        case OFF:\n+                            offLevel++;\n+                            break;\n+                        case TRACE:\n+                            traceLevel++;\n+                            break;\n+                        case WARN:\n+                            warnLevel++;\n+                            break;\n+                        default:\n+                            break;\n+                    }\n+                }\n+                details.put(\"Total number\", String.valueOf(loggerTOs.size()));\n+                details.put(\"Set to DEBUG\", String.valueOf(debugLevel));\n+                details.put(\"Set to ERROR\", String.valueOf(errorLevel));\n+                details.put(\"Set to FATAL\", String.valueOf(fatalLevel));\n+                details.put(\"Set to INFO\", String.valueOf(infoLevel));\n+                details.put(\"Set to OFF\", String.valueOf(offLevel));\n+                details.put(\"Set to TRACE\", String.valueOf(traceLevel));\n+                details.put(\"Set to WARN\", String.valueOf(warnLevel));\n+                loggerResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                loggerResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            loggerResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"d78f5db493cbbfafbc6c7b169d15fc0b63a7ec6b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerResultManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Arrays;\n import java.util.LinkedList;\n+import java.util.Map;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.client.cli.view.Table;\n import org.apache.syncope.common.lib.to.LoggerTO;\n@@ -57,4 +58,8 @@ private void fromCommandToView(final String title,\n         }\n         tableBuilder.build().print();\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"loggers details\", details);\n+    }\n }"},{"sha":"365c02b18264c69e13146a475990de6cf8c6d06a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationList.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationList.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.NotificationTO;\n \n public class NotificationList extends AbstractNotificationCommand {\n \n@@ -35,9 +34,7 @@ public NotificationList(final Input input) {\n     public void list() {\n         if (input.parameterNumber() == 0) {\n             try {\n-                for (final NotificationTO notificationTO : notificationSyncopeOperations.list()) {\n-                    System.out.println(notificationTO);\n-                }\n+                notificationResultManager.printNotifications(notificationSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n                 notificationResultManager.genericError(ex.getMessage());\n             }"},{"sha":"efd2d7cfc4479293bd346a215f0ce49753541b7d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationRead.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -36,7 +36,7 @@ public void read() {\n         if (input.parameterNumber() >= 1) {\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    System.out.println(notificationSyncopeOperations.read(parameter));\n+                    notificationResultManager.printNotification(notificationSyncopeOperations.read(parameter));\n                 } catch (final NumberFormatException ex) {\n                     notificationResultManager.notBooleanDeletedError(\"notification\", parameter);\n                 } catch (final WebServiceException | SyncopeClientException ex) {"},{"sha":"45c4223ca93ffb39cb0bb09dab64d7679d284cef","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationResultManager.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -18,8 +18,31 @@\n  */\n package org.apache.syncope.client.cli.commands.notification;\n \n+import java.util.List;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.NotificationTO;\n \n public class NotificationResultManager extends CommonsResultManager {\n \n+    public void printNotifications(final List<NotificationTO> notificationTOs) {\n+        for (final NotificationTO notificationTO : notificationTOs) {\n+            printNotification(notificationTO);\n+        }\n+    }\n+\n+    public void printNotification(final NotificationTO notificationTO) {\n+        System.out.println(\" > NOTIFICATION ID: \" + notificationTO.getKey());\n+        System.out.println(\"    events: \" + notificationTO.getEvents());\n+        System.out.println(\"    sender: \" + notificationTO.getSender());\n+        System.out.println(\"    subject: \" + notificationTO.getSubject());\n+        System.out.println(\"    recipients: \" + notificationTO.getRecipients());\n+        System.out.println(\"    recipient attribute name: \" + notificationTO.getRecipientAttrName());\n+        System.out.println(\"    template: \" + notificationTO.getTemplate());\n+        System.out.println(\"    abouts: \" + notificationTO.getAbouts());\n+        System.out.println(\"    recipient attribute types: \" + notificationTO.getRecipientAttrType());\n+        System.out.println(\"    static recipient: \" + notificationTO.getStaticRecipients());\n+        System.out.println(\"    trace level: \" + notificationTO.getTraceLevel());\n+        System.out.println(\"    active: \" + notificationTO.isActive());\n+        System.out.println(\"    self as recipient: \" + notificationTO.isSelfAsRecipient());\n+    }\n }"},{"sha":"a0a697d774bc4345b7205a67def70fc2ae4830b9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class PolicyCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: policy [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details \\n\"\n             + \"    --list-policy \\n\"\n             + \"       Syntax: --list-policy {POLICY-TYPE} \\n\"\n             + \"          Policy type: ACCOUNT / PASSWORD / SYNC / PUSH\\n\"\n@@ -46,6 +47,9 @@ public void execute(final Input input) {\n         }\n \n         switch (Options.fromName(input.getOption())) {\n+            case DETAILS:\n+                new PolicyDetails(input).details();\n+                break;\n             case LIST_POLICY:\n                 new PolicyList(input).list();\n                 break;\n@@ -71,6 +75,7 @@ public String getHelpMessage() {\n     private enum Options {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST_POLICY(\"--list-policy\"),\n         READ(\"--read\"),\n         DELETE(\"--delete\");"},{"sha":"946fb4e0a8f92aecdc008e368fa24499515b1970","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDetails.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.policy;\n+\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+\n+public class PolicyDetails extends AbstractPolicyCommand {\n+\n+    private static final String DETAILS_HELP_MESSAGE = \"policy --details\";\n+\n+    private final Input input;\n+\n+    public PolicyDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final int accountPolicySize = policySyncopeOperations.list(PolicyType.ACCOUNT).size();\n+                final int passwordPolicySize = policySyncopeOperations.list(PolicyType.PASSWORD).size();\n+                final int syncPolicySize = policySyncopeOperations.list(PolicyType.SYNC).size();\n+                final int pushPolicySize = policySyncopeOperations.list(PolicyType.PUSH).size();\n+                details.put(\"total number\", String.valueOf(accountPolicySize\n+                        + passwordPolicySize\n+                        + syncPolicySize\n+                        + pushPolicySize));\n+                details.put(\"account policies\", String.valueOf(accountPolicySize));\n+                details.put(\"password policies\", String.valueOf(passwordPolicySize));\n+                details.put(\"sync policies\", String.valueOf(syncPolicySize));\n+                details.put(\"push policies\", String.valueOf(pushPolicySize));\n+                policyResultManager.printDetails(details);\n+            } catch (final Exception ex) {\n+                policyResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            policyResultManager.commandOptionError(DETAILS_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"0cd8ea4711623c043bf139f9ee12129cedac6de6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyList.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -37,7 +37,6 @@ public PolicyList(final Input input) {\n     }\n \n     public void list() {\n-\n         if (input.parameterNumber() == 1) {\n             try {\n                 final PolicyType policyType = PolicyType.valueOf(input.firstParameter());"},{"sha":"d130f73b8b714b952ef3192c1f37a32fecb23b22","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyResultManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.cli.commands.policy;\n \n import java.util.LinkedList;\n+import java.util.Map;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n@@ -120,4 +121,8 @@ public void printSyncPolicy(final SyncPolicyTO policyTO) {\n         }\n         System.out.println(\"\");\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"policies details\", details);\n+    }\n }"},{"sha":"7e384159ffaf3ccfd323b895a835d0768ba60063","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class RealmCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: realm [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details \\n\"\n             + \"    --list \\n\";\n \n     @Override\n@@ -39,6 +40,9 @@ public void execute(final Input input) {\n             input.setOption(Options.HELP.getOptionName());\n         }\n         switch (Options.fromName(input.getOption())) {\n+            case DETAILS:\n+                new RealmDetails(input).details();\n+                break;\n             case LIST:\n                 new RealmList(input).list();\n                 break;\n@@ -58,6 +62,7 @@ public String getHelpMessage() {\n     private enum Options {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST(\"--list\");\n \n         private final String optionName;"},{"sha":"b68a7b4c0fa4389fff5908aa0d4f95cbcf47f577","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmDetails.java","status":"renamed","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -16,30 +16,34 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.cli.commands.user;\n+package org.apache.syncope.client.cli.commands.realm;\n \n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n-public class UserCount extends AbstractUserCommand {\n+public class RealmDetails extends AbstractRealmCommand {\n \n-    private static final String COUNT_HELP_MESSAGE = \"user --count\";\n+    private static final String DETAILS_HELP_MESSAGE = \"realm --details\";\n \n     private final Input input;\n \n-    public UserCount(final Input input) {\n+    public RealmDetails(final Input input) {\n         this.input = input;\n     }\n \n-    public void count() {\n+    public void details() {\n         if (input.parameterNumber() == 0) {\n             try {\n-                userResultManager.genericMessage(\"Total users: \" + userSyncopeOperations.count());\n+                final Map<String, String> details = new LinkedMap<>();\n+                details.put(\"Total number\", String.valueOf(realmSyncopeOperations.list().size()));\n+                realmResultManager.printDetails(details);\n             } catch (final SyncopeClientException ex) {\n-                userResultManager.genericError(ex.getMessage());\n+                realmResultManager.genericError(ex.getMessage());\n             }\n         } else {\n-            userResultManager.unnecessaryParameters(input.listParameters(), COUNT_HELP_MESSAGE);\n+            realmResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n         }\n     }\n }","previous_filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCount.java"},{"sha":"f6776b3a63c19c25ef9ab670c1c0dd62a6c1e955","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmResultManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.cli.commands.realm;\n \n import java.util.List;\n+import java.util.Map;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.common.lib.to.RealmTO;\n \n@@ -36,4 +37,8 @@ public void toView(final List<RealmTO> realmTOs) {\n             System.out.println(\"    password policy id: \" + realmTO.getPasswordPolicy());\n         }\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"realms details\", details);\n+    }\n }"},{"sha":"c6304acc470b422dbf44092a75c0070219e7ee80","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class ReportCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: report [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details\\n\"\n             + \"    --list \\n\"\n             + \"    --list-jobs \\n\"\n             + \"    --read \\n\"\n@@ -57,6 +58,9 @@ public void execute(final Input input) {\n             case LIST:\n                 new ReportList(input).list();\n                 break;\n+            case DETAILS:\n+                new ReportDetails(input).details();\n+                break;\n             case LIST_JOBS:\n                 new ReportListJobs(input).list();\n                 break;\n@@ -94,6 +98,7 @@ public String getHelpMessage() {\n     private enum Options {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST(\"--list\"),\n         LIST_JOBS(\"--list-jobs\"),\n         READ(\"--read\"),"},{"sha":"05fb901b9074c5944e9fa748098dc8a6f46a7d94","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportDetails.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.report;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+\n+public class ReportDetails extends AbstractReportCommand {\n+\n+    private static final String LIST_HELP_MESSAGE = \"report --details\";\n+\n+    private final Input input;\n+\n+    public ReportDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final List<ReportTO> reportTOs = reportSyncopeOperations.list();\n+                int withoutExecutions = 0;\n+                for (final ReportTO reportTO : reportTOs) {\n+                    if (reportTO.getExecutions().isEmpty()) {\n+                        withoutExecutions++;\n+                    }\n+                }\n+                details.put(\"Total numbers\", String.valueOf(reportTOs.size()));\n+                details.put(\"Never executed\", String.valueOf(withoutExecutions));\n+                reportResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                reportResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            reportResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"1aced78dcc3de9442610558a3daa58687dd42872","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportList.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -34,9 +34,9 @@ public ReportList(final Input input) {\n     public void list() {\n         if (input.parameterNumber() == 0) {\n             try {\n-                reportResultManager.fromValueToView(reportSyncopeOperations.list());\n+                reportResultManager.printReports(reportSyncopeOperations.list());\n             } catch (final SyncopeClientException ex) {\n-                reportResultManager.genericMessage(ex.getMessage());\n+                reportResultManager.genericError(ex.getMessage());\n             }\n         } else {\n             reportResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);"},{"sha":"bf21e65eac49da718303b9a5aa022ab723a165ce","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -51,7 +51,7 @@ public void read() {\n                     }\n                 }\n             }\n-            reportResultManager.fromValueToView(reportTOs);\n+            reportResultManager.printReports(reportTOs);\n         } else {\n             reportResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }"},{"sha":"c93de75200aa3083bcef589f5b5fa5512753ec7d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportResultManager.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.cli.commands.report;\n \n import java.util.List;\n+import java.util.Map;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.common.lib.report.AbstractReportletConf;\n import org.apache.syncope.common.lib.report.UserReportletConf;\n@@ -27,7 +28,7 @@\n \n public class ReportResultManager extends CommonsResultManager {\n \n-    public void fromValueToView(final List<ReportTO> reportTOs) {\n+    public void printReports(final List<ReportTO> reportTOs) {\n         for (final ReportTO reportTO : reportTOs) {\n             printReport(reportTO);\n         }\n@@ -38,8 +39,6 @@ private void printReport(final ReportTO reportTO) {\n         System.out.println(\"    name: \" + reportTO.getName());\n         System.out.println(\"    cron expression: \" + reportTO.getCronExpression());\n         System.out.println(\"    latest execution status: \" + reportTO.getLatestExecStatus());\n-        System.out.println(\"    last execution: \" + reportTO.getLastExec());\n-        System.out.println(\"    next execution: \" + reportTO.getNextExec());\n         System.out.println(\"    start date: \" + reportTO.getStartDate());\n         System.out.println(\"    end date: \" + reportTO.getEndDate());\n         System.out.println(\"    CONF:\");\n@@ -73,4 +72,8 @@ public void printReportExecution(final List<ReportExecTO> reportExecTOs) {\n             System.out.println(\"       report id: \" + reportExecTO.getReport());\n         }\n     }\n+    \n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"reports details\", details);\n+    }\n }"},{"sha":"f2f81451870928f527f641d1b06bf06da7960aa3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class ResourceCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: resource [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details \\n\"\n             + \"    --list \\n\"\n             + \"    --read \\n\"\n             + \"       Syntax: --read {CONNECTOR-ID} {CONNECTOR-ID} [...]\\n\"\n@@ -44,6 +45,9 @@ public void execute(final Input input) {\n         }\n \n         switch (ResourceOptions.fromName(input.getOption())) {\n+            case DETAILS:\n+                new ResourceDetails(input).details();\n+                break;\n             case LIST:\n                 new ResourceList(input).list();\n                 break;\n@@ -69,6 +73,7 @@ public String getHelpMessage() {\n     private enum ResourceOptions {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST(\"--list\"),\n         READ(\"--read\"),\n         DELETE(\"--delete\");"},{"sha":"25d3de7154c96173d10227db1dbdae9b1aa05c6f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceDetails.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.resource;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+\n+public class ResourceDetails extends AbstractResourceCommand {\n+\n+    private static final String DETAILS_HELP_MESSAGE = \"resource --details\";\n+\n+    private final Input input;\n+\n+    public ResourceDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final List<ResourceTO> resourceTOs = resourceSyncopeOperations.list();\n+                details.put(\"Total numbers\", String.valueOf(resourceTOs.size()));\n+                resourceResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                resourceResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            resourceResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"3ce923d070b9e39f6761b5927e511ddd7f923ebf","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceResultManager.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.cli.commands.resource;\n \n import java.util.List;\n+import java.util.Map;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.MappingTO;\n@@ -53,6 +54,9 @@ private void printResource(final ResourceTO resourceTO) {\n         System.out.println(\"    delete trace level: \" + resourceTO.getDeleteTraceLevel());\n         System.out.println(\"    update trace level: \" + resourceTO.getUpdateTraceLevel());\n         System.out.println(\"    sync trace level: \" + resourceTO.getSyncTraceLevel());\n+        System.out.println(\"    enforce mandatory condition: \" + resourceTO.isEnforceMandatoryCondition());\n+        System.out.println(\"    override capabilities: \" + resourceTO.isOverrideCapabilities());\n+        System.out.println(\"    random password if not provided: \" + resourceTO.isRandomPwdIfNotProvided());\n         System.out.println(\"\");\n     }\n \n@@ -89,4 +93,8 @@ private void printMappingItem(final List<MappingItemTO> mappingItemTOs) {\n             System.out.println(\"\");\n         }\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"resources details\", details);\n+    }\n }"},{"sha":"1142a49bef6855db7118f40da2e328772ce36be1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class RoleCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: role [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details \\n\"\n             + \"    --list \\n\"\n             + \"    --read \\n\"\n             + \"       Syntax: --read {ROLE-ID} {ROLE-ID} [...]\"\n@@ -44,6 +45,9 @@ public void execute(final Input input) {\n         }\n \n         switch (RoleOptions.fromName(input.getOption())) {\n+            case DETAILS:\n+                new RoleDetails(input).details();\n+                break;\n             case LIST:\n                 new RoleList(input).list();\n                 break;\n@@ -69,6 +73,7 @@ public String getHelpMessage() {\n     private enum RoleOptions {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST(\"--list\"),\n         READ(\"--read\"),\n         DELETE(\"--delete\");"},{"sha":"879d4495e3ebb08d0cfcf2d7c5ccd41ddea512af","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleDetails.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.role;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+\n+public class RoleDetails extends AbstractRoleCommand {\n+\n+    private static final String DETAILS_HELP_MESSAGE = \"role --details\";\n+\n+    private final Input input;\n+\n+    public RoleDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final List<RoleTO> roleTOs = roleSyncopeOperations.list();\n+                int withoutEntitlements = 0;\n+                for (final RoleTO roleTO : roleTOs) {\n+                    if (roleTO.getEntitlements() == null || roleTO.getEntitlements().isEmpty()) {\n+                        withoutEntitlements++;\n+                    }\n+                }\n+                details.put(\"Total number\", String.valueOf(roleTOs.size()));\n+                details.put(\"Without entitlements\", String.valueOf(withoutEntitlements));\n+                roleResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                roleResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            roleResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"aa3117c5ac3a4458edc554ec200f9aeb2220ddda","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleResultManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.cli.commands.role;\n \n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.common.lib.to.RoleTO;\n@@ -54,4 +55,8 @@ private void printEntitlements(final Set<String> entitlements) {\n             System.out.println(\"       - \" + entitlement);\n         }\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"Roles details\", details);\n+    }\n }"},{"sha":"e58c358177020c7fb44803ac143de0d2e5d1d262","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class SchemaCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: schema [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details \\n\"\n             + \"    --list-all\\n\"\n             + \"    --list-plain\\n\"\n             + \"    --list-derived\\n\"\n@@ -47,6 +48,9 @@ public void execute(final Input input) {\n         }\n \n         switch (Options.fromName(input.getOption())) {\n+            case DETAILS:\n+                new SchemaDetails(input).details();\n+                break;\n             case LIST:\n                 new SchemaList(input).list();\n                 break;\n@@ -84,6 +88,7 @@ public String getHelpMessage() {\n     private enum Options {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST(\"--list\"),\n         LIST_ALL(\"--list-all\"),\n         LIST_PLAIN(\"--list-plain\"),"},{"sha":"7a7683675245ebc480f3356016f9835a3404bc33","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaDetails.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.schema;\n+\n+import java.util.Map;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class SchemaDetails extends AbstractSchemaCommand {\n+\n+    private static final String DETAILS_HELP_MESSAGE = \"schema --details\";\n+\n+    private final Input input;\n+\n+    public SchemaDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final int plainSchemaSize = schemaSyncopeOperations.listPlain().size();\n+                final int derivedSchemaSize = schemaSyncopeOperations.listDerived().size();\n+                final int virtualSchemaSize = schemaSyncopeOperations.listVirtual().size();\n+                details.put(\"total number\", String.valueOf(plainSchemaSize\n+                        + derivedSchemaSize\n+                        + virtualSchemaSize));\n+                details.put(\"plain schema\", String.valueOf(plainSchemaSize));\n+                details.put(\"derived schema\", String.valueOf(derivedSchemaSize));\n+                details.put(\"virtual schema\", String.valueOf(virtualSchemaSize));\n+                schemaResultManager.printDetails(details);\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                schemaResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            schemaResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"46183757a50222d5230ea7a4dbb92c566d8590e2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaResultManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Arrays;\n import java.util.LinkedList;\n+import java.util.Map;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.client.cli.view.Table;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n@@ -93,4 +94,8 @@ public void fromListVirtual(final LinkedList<? extends AbstractSchemaTO> schemaT\n         }\n         tableBuilder.build().print();\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"Schemas details\", details);\n+    }\n }"},{"sha":"e7b5ce59b6bd3d9f9a83fd414720a338917ec598","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskCommand.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -31,6 +31,7 @@ public class TaskCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"Usage: task [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n+            + \"    --details\\n\"\n             + \"    --list-task \\n\"\n             + \"       Syntax: --list-task {TASK-TYPE} \\n\"\n             + \"          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / SYNCHRONIZATION\\n\"\n@@ -55,6 +56,9 @@ public void execute(final Input input) {\n         }\n \n         switch (Options.fromName(input.getOption())) {\n+            case DETAILS:\n+                new TaskDetails(input).details();\n+                break;\n             case LIST_TASK:\n                 new TaskList(input).list();\n                 break;\n@@ -95,6 +99,7 @@ public String getHelpMessage() {\n     private enum Options {\n \n         HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n         LIST_TASK(\"--list-task\"),\n         LIST_RUNNING_JOBS(\"--list-running-jobs\"),\n         LIST_SCHEDULED_JOBS(\"--list-scheduled-jobs\"),"},{"sha":"0eba18709b1530d65925b83603df1f3b67ace4ea","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDetails.java","status":"added","additions":137,"deletions":0,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,137 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.task;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.NotificationTaskTO;\n+import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.syncope.common.lib.to.PushTaskTO;\n+import org.apache.syncope.common.lib.to.SchedTaskTO;\n+import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.TaskExecTO;\n+import org.apache.syncope.common.lib.types.TaskType;\n+\n+public class TaskDetails extends AbstractTaskCommand {\n+\n+    private static final String DETAILS_HELP_MESSAGE = \"task --details\";\n+\n+    private final Input input;\n+\n+    public TaskDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final List<AbstractTaskTO> notificationTaskTOs = taskSyncopeOperations.list(TaskType.NOTIFICATION);\n+                final List<AbstractTaskTO> propagationTaskTOs = taskSyncopeOperations.list(TaskType.PROPAGATION);\n+                final List<AbstractTaskTO> pushTaskTOs = taskSyncopeOperations.list(TaskType.PUSH);\n+                final List<AbstractTaskTO> scheduledTaskTOs = taskSyncopeOperations.list(TaskType.SCHEDULED);\n+                final List<AbstractTaskTO> syncTaskTOs = taskSyncopeOperations.list(TaskType.SYNCHRONIZATION);\n+                final List<TaskExecTO> runningTOs = taskSyncopeOperations.listRunningJobs();\n+                final List<TaskExecTO> scheduledTOs = taskSyncopeOperations.listScheduledJobs();\n+                final int notificationTaskSize = notificationTaskTOs.size();\n+                int notificationNotExecuted = 0;\n+                final int propagationTaskSize = propagationTaskTOs.size();\n+                int propagationNotExecuted = 0;\n+                final int pushTaskSize = pushTaskTOs.size();\n+                int pushNotExecuted = 0;\n+                final int scheduledTaskSize = scheduledTaskTOs.size();\n+                int scheduledNotExecuted = 0;\n+                final int syncTaskSize = syncTaskTOs.size();\n+                int syncNotExecuted = 0;\n+                int syncFull = 0;\n+                final int runningJobsSize = runningTOs.size();\n+                final int scheduledJobsSize = scheduledTOs.size();\n+\n+                for (final AbstractTaskTO notificationTaskTO : notificationTaskTOs) {\n+                    if (!((NotificationTaskTO) notificationTaskTO).isExecuted()) {\n+                        notificationNotExecuted++;\n+                    }\n+                }\n+\n+                for (final AbstractTaskTO propagationTaskTO : propagationTaskTOs) {\n+                    if (((PropagationTaskTO) propagationTaskTO).getExecutions() == null\n+                            || ((PropagationTaskTO) propagationTaskTO).getExecutions().isEmpty()) {\n+                        propagationNotExecuted++;\n+                    }\n+                }\n+\n+                for (final AbstractTaskTO pushTaskTO : pushTaskTOs) {\n+                    if (((PushTaskTO) pushTaskTO).getExecutions() == null\n+                            || ((PushTaskTO) pushTaskTO).getExecutions().isEmpty()) {\n+                        pushNotExecuted++;\n+                    }\n+                }\n+\n+                for (final AbstractTaskTO scheduledTaskTO : scheduledTaskTOs) {\n+                    if (((SchedTaskTO) scheduledTaskTO).getExecutions() == null\n+                            || ((SchedTaskTO) scheduledTaskTO).getExecutions().isEmpty()) {\n+                        scheduledNotExecuted++;\n+                    }\n+                }\n+\n+                for (final AbstractTaskTO syncTaskTO : syncTaskTOs) {\n+                    if (((SyncTaskTO) syncTaskTO).getExecutions() == null\n+                            || ((SyncTaskTO) syncTaskTO).getExecutions().isEmpty()) {\n+                        syncNotExecuted++;\n+                    }\n+                    if (((SyncTaskTO) syncTaskTO).isFullReconciliation()) {\n+                        syncFull++;\n+                    }\n+                }\n+\n+                details.put(\"total number\", String.valueOf(notificationTaskSize\n+                        + propagationTaskSize\n+                        + pushTaskSize\n+                        + scheduledTaskSize\n+                        + syncTaskSize));\n+                details.put(\"notification tasks\", String.valueOf(notificationTaskSize));\n+                details.put(\"notification tasks not executed\", String.valueOf(notificationNotExecuted));\n+                details.put(\"propagation tasks\", String.valueOf(propagationTaskSize));\n+                details.put(\"propagation tasks not executed\", String.valueOf(propagationNotExecuted));\n+                details.put(\"push tasks\", String.valueOf(pushTaskSize));\n+                details.put(\"push tasks not executed\", String.valueOf(pushNotExecuted));\n+                details.put(\"scheduled tasks\", String.valueOf(scheduledTaskSize));\n+                details.put(\"scheduled tasks not executed\", String.valueOf(scheduledNotExecuted));\n+                details.put(\"synchronization tasks\", String.valueOf(syncTaskSize));\n+                details.put(\"synchronization tasks not executed\", String.valueOf(syncNotExecuted));\n+                details.put(\"synchronization tasks with full reconciliation\", String.valueOf(syncFull));\n+                details.put(\"running jobs\", String.valueOf(runningJobsSize));\n+                details.put(\"scheduled jobs\", String.valueOf(scheduledJobsSize));\n+                taskResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                taskResultManager.genericError(ex.getMessage());\n+            } catch (final IllegalArgumentException ex) {\n+                taskResultManager.typeNotValidError(\n+                        \"task\", input.firstParameter(), CommandUtils.fromEnumToArray(TaskType.class));\n+            }\n+        } else {\n+            taskResultManager.commandOptionError(DETAILS_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"2ac538e5df4d2076ccc668cc6d88aaf665d880fc","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskList.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskList.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -24,7 +24,6 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.common.rest.api.beans.TaskQuery;\n \n public class TaskList extends AbstractTaskCommand {\n \n@@ -42,7 +41,7 @@ public void list() {\n             try {\n                 final TaskType taskType = TaskType.valueOf(input.firstParameter());\n                 final LinkedList<AbstractTaskTO> taskTOs = new LinkedList<>();\n-                for (final AbstractTaskTO taskTO : taskSyncopeOperations.list(taskType, new TaskQuery()).getResult()) {\n+                for (final AbstractTaskTO taskTO : taskSyncopeOperations.list(taskType)) {\n                     taskTOs.add(taskTO);\n                 }\n                 taskResultManager.fromList(taskType, taskTOs);"},{"sha":"8611305e11047700148001b69c4d9973f318518f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskResultManager.java","status":"modified","additions":21,"deletions":14,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -144,7 +144,6 @@ private void printPushTask(final PushTaskTO pushTaskTO) {\n         System.out.println(\"     matching rule: \" + pushTaskTO.getMatchingRule());\n         System.out.println(\"     not matching rule: \" + pushTaskTO.getUnmatchingRule());\n         printTaskExecTO(pushTaskTO.getExecutions());\n-\n         System.out.println(\"\");\n     }\n \n@@ -176,19 +175,12 @@ private void printSyncTask(final SyncTaskTO syncTaskTO) {\n         System.out.println(\"     description: \" + syncTaskTO.getDescription());\n         System.out.println(\"     is full reconciliation: \"\n                 + syncTaskTO.isFullReconciliation());\n-        System.out.println(\"     is perform create: \" + syncTaskTO.isPerformCreate());\n-        System.out.println(\"     is perform delete: \" + syncTaskTO.isPerformDelete());\n-        System.out.println(\"     is perform update: \" + syncTaskTO.isPerformUpdate());\n-        System.out.println(\"     is sync status: \" + syncTaskTO.isSyncStatus());\n-        System.out.println(\"     templates:\");\n-        for (Map.Entry<String, AnyTO> entrySet : syncTaskTO.getTemplates().entrySet()) {\n-            final String key = entrySet.getKey();\n-            final AnyTO value = entrySet.getValue();\n-            System.out.println(\"        \" + key + \" key: \" + value.getKey()\n-                    + \" of realm\" + value.getRealm()\n-                    + \" on resource \" + value.getResources());\n-\n-        }\n+        System.out.println(\"     perform create: \" + syncTaskTO.isPerformCreate());\n+        System.out.println(\"     perform delete: \" + syncTaskTO.isPerformDelete());\n+        System.out.println(\"     perform update: \" + syncTaskTO.isPerformUpdate());\n+        System.out.println(\"     sync status: \" + syncTaskTO.isSyncStatus());\n+        System.out.println(\"     TEMPLATES:\");\n+        printTemplates(syncTaskTO.getTemplates());\n         System.out.println(\"     start date: \" + syncTaskTO.getStartDate());\n         System.out.println(\"     end date: \" + syncTaskTO.getEndDate());\n         System.out.println(\"     next execution: \" + syncTaskTO.getNextExec());\n@@ -204,6 +196,17 @@ private void printSyncTask(final SyncTaskTO syncTaskTO) {\n         System.out.println(\"\");\n     }\n \n+    private void printTemplates(final Map<String, AnyTO> templates) {\n+        for (final Map.Entry<String, AnyTO> entrySet : templates.entrySet()) {\n+            final String key = entrySet.getKey();\n+            final AnyTO value = entrySet.getValue();\n+            System.out.println(\"        \" + key + \" key: \" + value.getKey()\n+                    + \" of realm\" + value.getRealm()\n+                    + \" on resource \" + value.getResources());\n+\n+        }\n+    }\n+\n     public void printTaskExecTO(final List<TaskExecTO> taskExecTOs) {\n         for (final TaskExecTO taskExecTO : taskExecTOs) {\n             System.out.println(\"     EXECUTIONS: \");\n@@ -219,4 +222,8 @@ public void printTaskExecTO(final List<TaskExecTO> taskExecTOs) {\n             System.out.println(\"\");\n         }\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"tasks details\", details);\n+    }\n }"},{"sha":"756efa65f7fb9c74a9e25fcb6a442e0343775be0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskSyncopeOperations.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import org.apache.syncope.client.cli.SyncopeServices;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n-import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.types.JobStatusType;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -48,8 +47,8 @@ public void delete(final String taskId) {\n         taskService.read(Long.valueOf(taskId));\n     }\n \n-    public <T extends AbstractTaskTO> PagedResult<T> list(final TaskType type, final TaskQuery query) {\n-        return taskService.list(type, query);\n+    public List<AbstractTaskTO> list(final TaskType type) {\n+        return taskService.list(type, new TaskQuery()).getResult();\n     }\n \n     public TaskExecTO readExecution(final String executionId) {"},{"sha":"359550848f2c611b962d547a5cd9c8b764f06201","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCommand.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -32,7 +32,7 @@ public class UserCommand extends AbstractCommand {\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n             + \"    --list \\n\"\n-            + \"    --count \\n\"\n+            + \"    --details \\n\"\n             + \"    --get-user-key\\n\"\n             + \"       Syntax: --get-user-key {USER-ID} {USER-ID} [...]\\n\"\n             + \"    --get-username\\n\"\n@@ -55,8 +55,8 @@ public void execute(final Input input) {\n         }\n \n         switch (UserOptions.fromName(input.getOption())) {\n-            case COUNT:\n-                new UserCount(input).count();\n+            case DETAILS:\n+                new UserDetails(input).details();\n                 break;\n             case LIST:\n                 new UserList(input).list();\n@@ -98,7 +98,7 @@ public String getHelpMessage() {\n     private enum UserOptions {\n \n         HELP(\"--help\"),\n-        COUNT(\"--count\"),\n+        DETAILS(\"--details\"),\n         LIST(\"--list\"),\n         GET_BY_KEY(\"--get-user-key\"),\n         GET_BY_USERNAME(\"--get-username\"),"},{"sha":"f09b4adf6f834ef2854efd1f182a10df4587e791","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDetails.java","status":"added","additions":73,"deletions":0,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDetails.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class UserDetails extends AbstractUserCommand {\n+\n+    private static final String COUNT_HELP_MESSAGE = \"user --details\";\n+\n+    private final Input input;\n+\n+    public UserDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final List<UserTO> usersTOs = userSyncopeOperations.list().getResult();\n+                int withoutResource = 0;\n+                int withoutRole = 0;\n+                int activeStatus = 0;\n+                int suspendedStatus = 0;\n+                for (final UserTO userTO : usersTOs) {\n+                    if (!userTO.getResources().isEmpty()) {\n+                        withoutResource++;\n+                    }\n+                    if (!userTO.getRoles().isEmpty()) {\n+                        withoutRole++;\n+                    }\n+                    if (\"active\".equalsIgnoreCase(userTO.getStatus())) {\n+                        activeStatus++;\n+                    } else if (\"suspended\".equalsIgnoreCase(userTO.getStatus())) {\n+                        suspendedStatus++;\n+                    }\n+                }\n+                details.put(\"Total number\", String.valueOf(usersTOs.size()));\n+                details.put(\"Active\", String.valueOf(activeStatus));\n+                details.put(\"Suspended\", String.valueOf(suspendedStatus));\n+                details.put(\"Without resources\", String.valueOf(withoutResource));\n+                details.put(\"Without roles\", String.valueOf(withoutRole));\n+                userResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                userResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            userResultManager.unnecessaryParameters(input.listParameters(), COUNT_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"ccc8631167c030fd68e9defe58cb118a493976ba","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserResultManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.cli.commands.user;\n \n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -104,4 +105,8 @@ private void printRelationships(final List<RelationshipTO> relationshipTOs) {\n             System.out.println(\"       type: \" + relationshipTO.getType());\n         }\n     }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"users details\", details);\n+    }\n }"},{"sha":"8df901ff61def32ff7910832d8c073d2edcfe86e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSyncopeOperations.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -64,10 +64,6 @@ public void delete(final String userId) {\n         userService.delete(Long.valueOf(userId));\n     }\n \n-    public int count() {\n-        return list().getResult().size();\n-    }\n-\n     public String getUsernameFromId(final String userId) {\n         return userService.getUsername(Long.valueOf(userId)).getHeaderString(RESTHeaders.USERNAME);\n     }"},{"sha":"3c872fc4a9a82840c9721ea116bba982949e3228","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/view/Table.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d43268c10f022e9707b01a95ffdc55c37e91b05e/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fview%2FTable.java?ref=d43268c10f022e9707b01a95ffdc55c37e91b05e","patch":"@@ -55,6 +55,7 @@ private Table(\n     }\n \n     public void print() {\n+        System.out.println(\"\");\n         columnsNumber = headers.size();\n         tmpValuesArray = new String[columnsNumber];\n \n@@ -69,6 +70,7 @@ public void print() {\n         printBorder();\n         printeContent();\n         printBorder();\n+        System.out.println(\"\");\n     }\n \n     private void buildTableContentFormat() {"}]}