{"sha":"0414964f00c29befa5dd347254707fc65c119fb7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA0MTQ5NjRmMDBjMjliZWZhNWRkMzQ3MjU0NzA3ZmM2NWMxMTlmYjc=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-07-13T15:46:33Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-07-13T15:46:33Z"},"message":"[SYNCOPE-885] leverage on ICondition wizard mechanism","tree":{"sha":"98393a342771de760233db8ab1d77f9c6daa1d20","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/98393a342771de760233db8ab1d77f9c6daa1d20"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0414964f00c29befa5dd347254707fc65c119fb7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0414964f00c29befa5dd347254707fc65c119fb7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0414964f00c29befa5dd347254707fc65c119fb7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0414964f00c29befa5dd347254707fc65c119fb7/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"2526c4564a90e439a0d9a4925eb7db9ce6f0f454","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2526c4564a90e439a0d9a4925eb7db9ce6f0f454","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2526c4564a90e439a0d9a4925eb7db9ce6f0f454"}],"stats":{"total":167,"additions":102,"deletions":65},"files":[{"sha":"47a3dcac6ae1fd92a97777de9cb1bde8ec9dae07","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":52,"deletions":50,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -41,13 +41,15 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.core.util.lang.PropertyResolver;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n \n-public abstract class AbstractAttrs<S extends AbstractSchemaTO> extends WizardStep {\n+public abstract class AbstractAttrs<S extends AbstractSchemaTO> extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = -5387344116983102292L;\n \n@@ -65,64 +67,58 @@\n \n     protected final Map<String, Map<String, S>> membershipSchemas = new LinkedHashMap<>();\n \n-    protected final LoadableDetachableModel<List<AttrTO>> attrTOs;\n+    protected final IModel<List<AttrTO>> attrTOs;\n \n-    protected final LoadableDetachableModel<List<MembershipTO>> membershipTOs;\n+    protected final IModel<List<MembershipTO>> membershipTOs;\n+\n+    private final List<String> anyTypeClasses;\n \n     public AbstractAttrs(final AnyTO anyTO, final List<String> anyTypeClasses, final List<String> whichAttrs) {\n         super();\n+        this.anyTypeClasses = anyTypeClasses;\n+        this.attrTOs = new ListModel<>(Collections.<AttrTO>emptyList());\n+        this.membershipTOs = new ListModel<>(Collections.<MembershipTO>emptyList());\n+\n         this.setOutputMarkupId(true);\n \n         this.anyTO = anyTO;\n         this.whichAttrs = whichAttrs;\n+    }\n \n-        this.attrTOs = new LoadableDetachableModel<List<AttrTO>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n+    private List<AttrTO> loadAttrTOs() {\n+        setSchemas(CollectionUtils.collect(anyTypeClassRestClient.list(anyTO.getAuxClasses()),\n+                EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(anyTypeClasses)));\n+        setAttrs();\n+        return AbstractAttrs.this.getAttrsFromTO();\n+    }\n \n-            @Override\n-            protected List<AttrTO> load() {\n-                setSchemas(CollectionUtils.collect(anyTypeClassRestClient.list(anyTO.getAuxClasses()),\n-                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(anyTypeClasses)));\n-                setAttrs();\n-                return AbstractAttrs.this.getAttrsFromTO();\n-            }\n-        };\n-\n-        this.membershipTOs = new LoadableDetachableModel<List<MembershipTO>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            @SuppressWarnings(\"unchecked\")\n-            protected List<MembershipTO> load() {\n-                List<MembershipTO> memberships = new ArrayList<>();\n-                try {\n-                    membershipSchemas.clear();\n-\n-                    for (MembershipTO membership : (List<MembershipTO>) PropertyResolver.getPropertyField(\n-                            \"memberships\", anyTO).get(anyTO)) {\n-                        setSchemas(membership.getGroupKey(), CollectionUtils.collect(\n-                                anyTypeClassRestClient.list(getMembershipAuxClasses(membership, anyTO.getType())),\n-                                EntityTOUtils.<AnyTypeClassTO>keyTransformer(),\n-                                new ArrayList<String>()));\n-                        setAttrs(membership);\n-\n-                        if (AbstractAttrs.this instanceof PlainAttrs && !membership.getPlainAttrs().isEmpty()) {\n-                            memberships.add(membership);\n-                        } else if (AbstractAttrs.this instanceof DerAttrs && !membership.getDerAttrs().isEmpty()) {\n-                            memberships.add(membership);\n-                        } else if (AbstractAttrs.this instanceof VirAttrs && !membership.getVirAttrs().isEmpty()) {\n-                            memberships.add(membership);\n-                        }\n-                    }\n-                } catch (WicketRuntimeException | IllegalArgumentException | IllegalAccessException ex) {\n-                    // ignore\n+    @SuppressWarnings(\"unchecked\")\n+    private List<MembershipTO> loadMembershipAttrTOs() {\n+        List<MembershipTO> memberships = new ArrayList<>();\n+        try {\n+            membershipSchemas.clear();\n+\n+            for (MembershipTO membership : (List<MembershipTO>) PropertyResolver.getPropertyField(\n+                    \"memberships\", anyTO).get(anyTO)) {\n+                setSchemas(membership.getGroupKey(), CollectionUtils.collect(\n+                        anyTypeClassRestClient.list(getMembershipAuxClasses(membership, anyTO.getType())),\n+                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(),\n+                        new ArrayList<String>()));\n+                setAttrs(membership);\n+\n+                if (AbstractAttrs.this instanceof PlainAttrs && !membership.getPlainAttrs().isEmpty()) {\n+                    memberships.add(membership);\n+                } else if (AbstractAttrs.this instanceof DerAttrs && !membership.getDerAttrs().isEmpty()) {\n+                    memberships.add(membership);\n+                } else if (AbstractAttrs.this instanceof VirAttrs && !membership.getVirAttrs().isEmpty()) {\n+                    memberships.add(membership);\n                 }\n-\n-                return memberships;\n             }\n-        };\n+        } catch (WicketRuntimeException | IllegalArgumentException | IllegalAccessException ex) {\n+            // ignore\n+        }\n+\n+        return memberships;\n     }\n \n     protected boolean reoderSchemas() {\n@@ -200,7 +196,7 @@ public void renderHead(final IHeaderResponse response) {\n                 && org.apache.cxf.common.util.CollectionUtils.isEmpty(membershipTOs.getObject())) {\n             response.render(OnDomReadyHeaderItem.forScript(\n                     String.format(\"$('#emptyPlaceholder').append(\\\"%s\\\"); $('#attributes').hide();\",\n-                            getString(\"attribute.empty.list\"))));\n+                    getString(\"attribute.empty.list\"))));\n         }\n     }\n \n@@ -221,6 +217,13 @@ protected List<String> getMembershipAuxClasses(final MembershipTO membershipTO,\n         }\n     }\n \n+    @Override\n+    public boolean evaluate() {\n+        this.attrTOs.setObject(loadAttrTOs());\n+        this.membershipTOs.setObject(loadMembershipAttrTOs());\n+        return CollectionUtils.isNotEmpty(attrTOs.getObject()) || CollectionUtils.isNotEmpty(membershipTOs.getObject());\n+    }\n+\n     protected static class AttrComparator implements Comparator<AttrTO> {\n \n         @Override\n@@ -243,6 +246,5 @@ public class Schemas extends Panel {\n         public Schemas(final String id) {\n             super(id);\n         }\n-\n     }\n }"},{"sha":"fcc5da0c3d6ba737b68724463193a2ff2974dcc6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -41,13 +41,16 @@\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.util.lang.Args;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n \n-public class Groups extends WizardStep {\n+public class Groups extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n     private final GroupRestClient groupRestClient = new GroupRestClient();\n \n+    private final List<GroupTO> allGroups;\n+\n     public <T extends AnyTO> Groups(final T anyTO, final boolean templateMode) {\n         super();\n         setOutputMarkupId(true);\n@@ -111,7 +114,7 @@ public MembershipTO transform(final GroupTO input) {\n             }\n         }).hideLabel().setOutputMarkupId(true));\n \n-        List<GroupTO> allGroups = groupRestClient.search(\n+        allGroups = groupRestClient.search(\n                 templateMode ? \"/\" : anyTO.getRealm(), null, -1, -1, new SortParam<>(\"name\", true), null);\n \n         final Map<String, GroupTO> allGroupsByKey = new LinkedHashMap<>(allGroups.size());\n@@ -136,4 +139,9 @@ public String transform(final GroupTO input) {\n         }, new ArrayList<String>()))).\n                 hideLabel().setEnabled(false).setOutputMarkupId(true));\n     }\n+\n+    @Override\n+    public boolean evaluate() {\n+        return CollectionUtils.isNotEmpty(allGroups);\n+    }\n }"},{"sha":"bcbd6295042150da06cc10bd590ebb034c88e259","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":14,"deletions":4,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -19,23 +19,28 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class Resources extends WizardStep {\n+public class Resources extends WizardStep implements WizardModel.ICondition {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n+    private final ListModel<String> available;\n+\n     public <T extends AnyTO> Resources(final T entityTO) {\n         this.setOutputMarkupId(true);\n+        this.available = new ListModel<>(Collections.<String>emptyList());\n \n         add(new AjaxPalettePanel.Builder<String>().build(\"resources\",\n                 new PropertyModel<List<String>>(entityTO, \"resources\") {\n@@ -52,8 +57,13 @@ public void setObject(final List<String> object) {\n                 entityTO.getResources().clear();\n                 entityTO.getResources().addAll(object);\n             }\n-        }, new ListModel<>(CollectionUtils.collect(new ResourceRestClient().list(),\n-                        EntityTOUtils.<ResourceTO>keyTransformer(), new ArrayList<String>()))).\n-                hideLabel().setOutputMarkupId(true));\n+        }, available).hideLabel().setOutputMarkupId(true));\n+    }\n+\n+    @Override\n+    public boolean evaluate() {\n+        available.setObject(CollectionUtils.collect(new ResourceRestClient().list(),\n+                EntityTOUtils.<ResourceTO>keyTransformer(), new ArrayList<String>()));\n+        return CollectionUtils.isNotEmpty(available.getObject());\n     }\n }"},{"sha":"9bee78460ecdb1142a9968370dbf6c1970587a01","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -28,18 +28,21 @@\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class Roles extends WizardStep {\n+public class Roles extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n+    private final List<String> allRoles;\n+\n     public <T extends AnyTO> Roles(final UserTO entityTO) {\n         this.setOutputMarkupId(true);\n \n-        List<String> allRoles = CollectionUtils.collect(new RoleRestClient().list(),\n+        allRoles = CollectionUtils.collect(new RoleRestClient().list(),\n                 EntityTOUtils.<RoleTO>keyTransformer(), new ArrayList<String>());\n         Collections.sort(allRoles);\n \n@@ -51,4 +54,9 @@ public <T extends AnyTO> Roles(final UserTO entityTO) {\n                 new PropertyModel<List<String>>(entityTO, \"dynRoles\"),\n                 new ListModel<>(allRoles)).hideLabel().setEnabled(false).setOutputMarkupId(true));\n     }\n+\n+    @Override\n+    public boolean evaluate() {\n+        return CollectionUtils.isNotEmpty(allRoles);\n+    }\n }"},{"sha":"27bc7f33f0453c994f0c763bc06b5bfd656c68cf","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -89,7 +89,7 @@ protected void populateItem(final ListItem<MembershipTO> item) {\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n-                        return new VirAttrs.VirSchemas(panelId, new ListModel<AttrTO>(getAttrsFromTO(membershipTO)));\n+                        return new VirAttrs.VirSchemas(panelId, new ListModel<>(getAttrsFromTO(membershipTO)));\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }"},{"sha":"c1c73f48b0d34ca8f31f267df74ad809a3fa2ec9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/AbstractConnConfPanel.java","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wizards.resources;\n \n import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -29,16 +30,22 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public abstract class AbstractConnConfPanel<T extends AbstractBaseBean> extends WizardStep {\n+public abstract class AbstractConnConfPanel<T extends AbstractBaseBean>\n+        extends WizardStep\n+        implements WizardModel.ICondition {\n \n     private static final long serialVersionUID = -2025535531121434050L;\n \n+    protected LoadableDetachableModel<List<ConnConfProperty>> model;\n+\n     protected final WebMarkupContainer propertiesContainer;\n \n     protected final AjaxButton check;\n@@ -80,4 +87,9 @@ protected void setConfPropertyListView(final IModel<List<ConnConfProperty>> mode\n     protected abstract Pair<Boolean, String> check(final AjaxRequestTarget taget);\n \n     protected abstract List<ConnConfProperty> getConnProperties(final T instance);\n+\n+    @Override\n+    public boolean evaluate() {\n+        return model != null && CollectionUtils.isNotEmpty(model.getObject());\n+    }\n }"},{"sha":"21d494d0e24980670df22a9a67c0420f9113542c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ConnectorConfPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorConfPanel.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -40,7 +40,7 @@ public ConnectorConfPanel(final ConnInstanceTO connInstanceTO, final List<ConnBu\n         super(connInstanceTO);\n         this.bundles = bundles;\n \n-        LoadableDetachableModel<List<ConnConfProperty>> model = new LoadableDetachableModel<List<ConnConfProperty>>() {\n+        model = new LoadableDetachableModel<List<ConnConfProperty>>() {\n \n             private static final long serialVersionUID = -2965284931860212687L;\n "},{"sha":"0869da91579476632d7531a184c372855035f3b7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceConnConfPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -43,7 +43,7 @@ public ResourceConnConfPanel(final ResourceTO resourceTO, final boolean createFl\n         super(resourceTO);\n         this.createFlag = createFlag;\n \n-        LoadableDetachableModel<List<ConnConfProperty>> model = new LoadableDetachableModel<List<ConnConfProperty>>() {\n+        model = new LoadableDetachableModel<List<ConnConfProperty>>() {\n \n             private static final long serialVersionUID = -2965284931860212687L;\n "},{"sha":"96af22e626e5df89a8e0873fec0acf1cc0ad89c5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0414964f00c29befa5dd347254707fc65c119fb7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0414964f00c29befa5dd347254707fc65c119fb7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=0414964f00c29befa5dd347254707fc65c119fb7","patch":"@@ -183,9 +183,6 @@ public void createNewResurceAndProvisionRules() {\n         formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n-        formTester.submit(\"buttons:next\");\n-\n         // click on finish to create the external resource \n         TESTER.cleanupFeedbackMessages();\n         // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)"}]}