{"sha":"1a9cf472927f609d717104f20bd82c518f0d9240","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFhOWNmNDcyOTI3ZjYwOWQ3MTcxMDRmMjBiZDgyYzUxOGYwZDkyNDA=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2021-07-21T14:12:27Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-07-21T14:12:27Z"},"message":"code cleanup; diamond ops && lambda refs (#279)\n\n* code cleanup; diamond ops && lambda refs\r\n\r\n* fix checkstyle;javadocs\r\n\r\n* install latest JDK 11 version for travis ci\r\n\r\n* reset travis ci back to original","tree":{"sha":"dc3c2efa6af0519b591c0ab31b2df9be94b7c3ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dc3c2efa6af0519b591c0ab31b2df9be94b7c3ea"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1a9cf472927f609d717104f20bd82c518f0d9240","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+CtLCRBK7hj4Ov3rIwAA8WsIACRi0pNE2ZlsQqqNSSw7Q6IY\nqOG/ZzWUrMJ5t48DTwNjzXgJ7dmaRbN4TeNr275GT8cqj/o5ILt84boyJ+ylnhmQ\ngUBPuPldIZDmss9x1YF9af1VnKg0dJeEfNlHRF8sBqxUPZMKpjcynxSb5GEcxJpY\no9BWoUnANaY4bK3L6t4tlHrIfP8Yf0B0aKGsGdfqUTgYtMEioTzBHyegNi6EVAkq\nLsIW/QlUpKtsFZPqpFSKOal/eLwXkLL/xONru80sZ4+52bDcg1oKNRL9X9Fj4ZjJ\nHGVou/vdvT2bLRWtWCwTR5hKON09j495l8gBUiovowwzramPy8C5YsGweW/D+Ho=\n=fvay\n-----END PGP SIGNATURE-----\n","payload":"tree dc3c2efa6af0519b591c0ab31b2df9be94b7c3ea\nparent 599b2de0f56eb7617aff3a7fd0fa4c1ce5fec0cb\nauthor Misagh Moayyed <mm1844@gmail.com> 1626876747 +0400\ncommitter GitHub <noreply@github.com> 1626876747 +0430\n\ncode cleanup; diamond ops && lambda refs (#279)\n\n* code cleanup; diamond ops && lambda refs\r\n\r\n* fix checkstyle;javadocs\r\n\r\n* install latest JDK 11 version for travis ci\r\n\r\n* reset travis ci back to original"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a9cf472927f609d717104f20bd82c518f0d9240","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1a9cf472927f609d717104f20bd82c518f0d9240","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a9cf472927f609d717104f20bd82c518f0d9240/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"599b2de0f56eb7617aff3a7fd0fa4c1ce5fec0cb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/599b2de0f56eb7617aff3a7fd0fa4c1ce5fec0cb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/599b2de0f56eb7617aff3a7fd0fa4c1ce5fec0cb"}],"stats":{"total":6147,"additions":3081,"deletions":3066},"files":[{"sha":"474957f0e3a92acb5817d7aaaee3d7e95613abec","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/authprofiles/AuthProfileDirectoryPanel.java","status":"modified","additions":176,"deletions":172,"changes":348,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -119,35 +119,35 @@ protected List<IColumn<AuthProfileTO, String>> getColumns() {\n \n         columns.add(new PropertyColumn<>(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n \n-        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"impersonationAccounts\")) {\n+        columns.add(new BooleanConditionColumn<>(new StringResourceModel(\"impersonationAccounts\")) {\n \n             @Override\n             protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n                 return !rowModel.getObject().getImpersonationAccounts().isEmpty();\n             }\n         });\n-        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"googleMfaAuthTokens\")) {\n+        columns.add(new BooleanConditionColumn<>(new StringResourceModel(\"googleMfaAuthTokens\")) {\n \n             @Override\n             protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n                 return !rowModel.getObject().getGoogleMfaAuthTokens().isEmpty();\n             }\n         });\n-        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"googleMfaAuthAccounts\")) {\n+        columns.add(new BooleanConditionColumn<>(new StringResourceModel(\"googleMfaAuthAccounts\")) {\n \n             @Override\n             protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n                 return !rowModel.getObject().getGoogleMfaAuthAccounts().isEmpty();\n             }\n         });\n-        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"u2fRegisteredDevices\")) {\n+        columns.add(new BooleanConditionColumn<>(new StringResourceModel(\"u2fRegisteredDevices\")) {\n \n             @Override\n             protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n                 return !rowModel.getObject().getU2FRegisteredDevices().isEmpty();\n             }\n         });\n-        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"webAuthnAccount\")) {\n+        columns.add(new BooleanConditionColumn<>(new StringResourceModel(\"webAuthnAccount\")) {\n \n             @Override\n             protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n@@ -162,236 +162,240 @@ protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n     public ActionsPanel<AuthProfileTO> getActions(final IModel<AuthProfileTO> model) {\n         ActionsPanel<AuthProfileTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<AuthProfileTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n                 model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n                 target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n-                        authProfileModal,\n-                        new AuthProfileItemDirectoryPanel<ImpersonationAccount>(\n-                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n-\n-                    @Override\n-                    protected List<ImpersonationAccount> getItems() {\n-                        return model.getObject().getImpersonationAccounts();\n-                    }\n-\n-                    @Override\n-                    protected ImpersonationAccount defaultItem() {\n-                        return new ImpersonationAccount();\n-                    }\n-\n-                    @Override\n-                    protected String sortProperty() {\n-                        return \"impersonated\";\n-                    }\n-\n-                    @Override\n-                    protected String paginatorRowsKey() {\n-                        return AMConstants.PREF_AUTHPROFILE_IMPERSONATED_PAGINATOR_ROWS;\n-                    }\n-\n-                    @Override\n-                    protected List<IColumn<ImpersonationAccount, String>> getColumns() {\n-                        List<IColumn<ImpersonationAccount, String>> columns = new ArrayList<>();\n-                        columns.add(new PropertyColumn<>(new ResourceModel(\"impersonated\"),\n+                    authProfileModal,\n+                    new AuthProfileItemDirectoryPanel<ImpersonationAccount>(\n+                        \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                        @Override\n+                        protected List<ImpersonationAccount> getItems() {\n+                            return model.getObject().getImpersonationAccounts();\n+                        }\n+\n+                        @Override\n+                        protected ImpersonationAccount defaultItem() {\n+                            return new ImpersonationAccount();\n+                        }\n+\n+                        @Override\n+                        protected String sortProperty() {\n+                            return \"impersonated\";\n+                        }\n+\n+                        @Override\n+                        protected String paginatorRowsKey() {\n+                            return AMConstants.PREF_AUTHPROFILE_IMPERSONATED_PAGINATOR_ROWS;\n+                        }\n+\n+                        @Override\n+                        protected List<IColumn<ImpersonationAccount, String>> getColumns() {\n+                            List<IColumn<ImpersonationAccount, String>> columns = new ArrayList<>();\n+                            columns.add(new PropertyColumn<>(new ResourceModel(\"impersonated\"),\n                                 \"impersonated\", \"impersonated\"));\n-                        return columns;\n-                    }\n-                }, pageRef)));\n+                            return columns;\n+                        }\n+                    }, pageRef)));\n                 authProfileModal.header(new Model<>(getString(\"impersonationAccounts\", model)));\n                 authProfileModal.show(true);\n             }\n         }, ActionLink.ActionType.TYPE_EXTENSIONS, AMEntitlement.AUTH_PROFILE_UPDATE);\n \n-        panel.add(new ActionLink<AuthProfileTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n                 model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n                 target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n-                        authProfileModal,\n-                        new AuthProfileItemDirectoryPanel<GoogleMfaAuthToken>(\n-                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n-\n-                    @Override\n-                    protected List<GoogleMfaAuthToken> getItems() {\n-                        return model.getObject().getGoogleMfaAuthTokens();\n-                    }\n-\n-                    @Override\n-                    protected GoogleMfaAuthToken defaultItem() {\n-                        return new GoogleMfaAuthToken();\n-                    }\n-\n-                    @Override\n-                    protected String sortProperty() {\n-                        return \"issueDate\";\n-                    }\n-\n-                    @Override\n-                    protected String paginatorRowsKey() {\n-                        return AMConstants.PREF_AUTHPROFILE_GOOGLEMFAAUTHTOKENS_PAGINATOR_ROWS;\n-                    }\n-\n-                    @Override\n-                    protected List<IColumn<GoogleMfaAuthToken, String>> getColumns() {\n-                        List<IColumn<GoogleMfaAuthToken, String>> columns = new ArrayList<>();\n-                        columns.add(new DatePropertyColumn<>(new ResourceModel(\"issueDate\"), \"issueDate\", \"issueDate\"));\n-                        columns.add(new PropertyColumn<>(new ResourceModel(\"otp\"), \"otp\", \"otp\"));\n-                        return columns;\n-                    }\n-                }, pageRef)));\n+                    authProfileModal,\n+                    new AuthProfileItemDirectoryPanel<GoogleMfaAuthToken>(\n+                        \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                        @Override\n+                        protected List<GoogleMfaAuthToken> getItems() {\n+                            return model.getObject().getGoogleMfaAuthTokens();\n+                        }\n+\n+                        @Override\n+                        protected GoogleMfaAuthToken defaultItem() {\n+                            return new GoogleMfaAuthToken();\n+                        }\n+\n+                        @Override\n+                        protected String sortProperty() {\n+                            return \"issueDate\";\n+                        }\n+\n+                        @Override\n+                        protected String paginatorRowsKey() {\n+                            return AMConstants.PREF_AUTHPROFILE_GOOGLEMFAAUTHTOKENS_PAGINATOR_ROWS;\n+                        }\n+\n+                        @Override\n+                        protected List<IColumn<GoogleMfaAuthToken, String>> getColumns() {\n+                            List<IColumn<GoogleMfaAuthToken, String>> columns = new ArrayList<>();\n+                            columns.add(new DatePropertyColumn<>(\n+                                new ResourceModel(\"issueDate\"), \"issueDate\", \"issueDate\"));\n+                            columns.add(new PropertyColumn<>(\n+                                new ResourceModel(\"otp\"), \"otp\", \"otp\"));\n+                            return columns;\n+                        }\n+                    }, pageRef)));\n                 authProfileModal.header(new Model<>(getString(\"googleMfaAuthTokens\", model)));\n                 authProfileModal.show(true);\n             }\n         }, ActionLink.ActionType.EDIT_APPROVAL, AMEntitlement.AUTH_PROFILE_UPDATE);\n \n-        panel.add(new ActionLink<AuthProfileTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n                 model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n                 target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n-                        authProfileModal,\n-                        new AuthProfileItemDirectoryPanel<GoogleMfaAuthAccount>(\n-                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n-\n-                    @Override\n-                    protected List<GoogleMfaAuthAccount> getItems() {\n-                        return model.getObject().getGoogleMfaAuthAccounts();\n-                    }\n-\n-                    @Override\n-                    protected GoogleMfaAuthAccount defaultItem() {\n-                        return new GoogleMfaAuthAccount();\n-                    }\n-\n-                    @Override\n-                    protected String sortProperty() {\n-                        return \"id\";\n-                    }\n-\n-                    @Override\n-                    protected String paginatorRowsKey() {\n-                        return AMConstants.PREF_AUTHPROFILE_GOOGLEMFAAUTHACCOUNTS_PAGINATOR_ROWS;\n-                    }\n-\n-                    @Override\n-                    protected List<IColumn<GoogleMfaAuthAccount, String>> getColumns() {\n-                        List<IColumn<GoogleMfaAuthAccount, String>> columns = new ArrayList<>();\n-                        columns.add(new PropertyColumn<>(new ResourceModel(\"id\"), \"id\", \"id\"));\n-                        columns.add(new DatePropertyColumn<>(\n+                    authProfileModal,\n+                    new AuthProfileItemDirectoryPanel<GoogleMfaAuthAccount>(\n+                        \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                        @Override\n+                        protected List<GoogleMfaAuthAccount> getItems() {\n+                            return model.getObject().getGoogleMfaAuthAccounts();\n+                        }\n+\n+                        @Override\n+                        protected GoogleMfaAuthAccount defaultItem() {\n+                            return new GoogleMfaAuthAccount();\n+                        }\n+\n+                        @Override\n+                        protected String sortProperty() {\n+                            return \"id\";\n+                        }\n+\n+                        @Override\n+                        protected String paginatorRowsKey() {\n+                            return AMConstants.PREF_AUTHPROFILE_GOOGLEMFAAUTHACCOUNTS_PAGINATOR_ROWS;\n+                        }\n+\n+                        @Override\n+                        protected List<IColumn<GoogleMfaAuthAccount, String>> getColumns() {\n+                            List<IColumn<GoogleMfaAuthAccount, String>> columns = new ArrayList<>();\n+                            columns.add(new PropertyColumn<>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+                            columns.add(new DatePropertyColumn<>(\n                                 new ResourceModel(\"registrationDate\"), \"registrationDate\", \"registrationDate\"));\n-                        columns.add(new PropertyColumn<>(new ResourceModel(\"name\"), \"name\", \"name\"));\n-                        return columns;\n-                    }\n-                }, pageRef)));\n+                            columns.add(new PropertyColumn<>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+                            return columns;\n+                        }\n+                    }, pageRef)));\n                 authProfileModal.header(new Model<>(getString(\"googleMfaAuthAccounts\", model)));\n                 authProfileModal.show(true);\n             }\n         }, ActionLink.ActionType.EXECUTE, AMEntitlement.AUTH_PROFILE_UPDATE);\n \n-        panel.add(new ActionLink<AuthProfileTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n                 model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n                 target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n-                        authProfileModal,\n-                        new AuthProfileItemDirectoryPanel<U2FDevice>(\n-                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n-\n-                    @Override\n-                    protected List<U2FDevice> getItems() {\n-                        return model.getObject().getU2FRegisteredDevices();\n-                    }\n-\n-                    @Override\n-                    protected U2FDevice defaultItem() {\n-                        return new U2FDevice();\n-                    }\n-\n-                    @Override\n-                    protected String sortProperty() {\n-                        return \"id\";\n-                    }\n-\n-                    @Override\n-                    protected String paginatorRowsKey() {\n-                        return AMConstants.PREF_AUTHPROFILE_U2FDEVICES_PAGINATOR_ROWS;\n-                    }\n-\n-                    @Override\n-                    protected List<IColumn<U2FDevice, String>> getColumns() {\n-                        List<IColumn<U2FDevice, String>> columns = new ArrayList<>();\n-                        columns.add(new PropertyColumn<>(new ResourceModel(\"id\"), \"id\", \"id\"));\n-                        columns.add(new DatePropertyColumn<>(\n+                    authProfileModal,\n+                    new AuthProfileItemDirectoryPanel<U2FDevice>(\n+                        \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                        @Override\n+                        protected List<U2FDevice> getItems() {\n+                            return model.getObject().getU2FRegisteredDevices();\n+                        }\n+\n+                        @Override\n+                        protected U2FDevice defaultItem() {\n+                            return new U2FDevice();\n+                        }\n+\n+                        @Override\n+                        protected String sortProperty() {\n+                            return \"id\";\n+                        }\n+\n+                        @Override\n+                        protected String paginatorRowsKey() {\n+                            return AMConstants.PREF_AUTHPROFILE_U2FDEVICES_PAGINATOR_ROWS;\n+                        }\n+\n+                        @Override\n+                        protected List<IColumn<U2FDevice, String>> getColumns() {\n+                            List<IColumn<U2FDevice, String>> columns = new ArrayList<>();\n+                            columns.add(new PropertyColumn<>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+                            columns.add(new DatePropertyColumn<>(\n                                 new ResourceModel(\"issueDate\"), \"issueDate\", \"issueDate\"));\n-                        columns.add(new PropertyColumn<>(new ResourceModel(\"record\"), \"record\", \"record\"));\n-                        return columns;\n-                    }\n-                }, pageRef)));\n+                            columns.add(new PropertyColumn<>(new ResourceModel(\"record\"), \"record\", \"record\"));\n+                            return columns;\n+                        }\n+                    }, pageRef)));\n                 authProfileModal.header(new Model<>(getString(\"u2fRegisteredDevices\", model)));\n                 authProfileModal.show(true);\n             }\n         }, ActionLink.ActionType.FO_EDIT, AMEntitlement.AUTH_PROFILE_UPDATE);\n \n-        panel.add(new ActionLink<AuthProfileTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n                 model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n                 target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n-                        authProfileModal,\n-                        new AuthProfileItemDirectoryPanel<WebAuthnDeviceCredential>(\n-                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n-\n-                    @Override\n-                    protected List<WebAuthnDeviceCredential> getItems() {\n-                        return model.getObject().getWebAuthnDeviceCredentials();\n-                    }\n-\n-                    @Override\n-                    protected WebAuthnDeviceCredential defaultItem() {\n-                        return new WebAuthnDeviceCredential();\n-                    }\n-\n-                    @Override\n-                    protected String sortProperty() {\n-                        return \"identifier\";\n-                    }\n-\n-                    @Override\n-                    protected String paginatorRowsKey() {\n-                        return AMConstants.PREF_AUTHPROFILE_WEBAUTHNDEVICECREDENTIALS_PAGINATOR_ROWS;\n-                    }\n-\n-                    @Override\n-                    protected List<IColumn<WebAuthnDeviceCredential, String>> getColumns() {\n-                        List<IColumn<WebAuthnDeviceCredential, String>> columns = new ArrayList<>();\n-                        columns.add(new PropertyColumn<>(new ResourceModel(\"identifier\"), \"identifier\", \"identifier\"));\n-                        columns.add(new PropertyColumn<>(new ResourceModel(\"json\"), \"json\", \"json\"));\n-                        return columns;\n-                    }\n-                }, pageRef)));\n+                    authProfileModal,\n+                    new AuthProfileItemDirectoryPanel<WebAuthnDeviceCredential>(\n+                        \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                        @Override\n+                        protected List<WebAuthnDeviceCredential> getItems() {\n+                            return model.getObject().getWebAuthnDeviceCredentials();\n+                        }\n+\n+                        @Override\n+                        protected WebAuthnDeviceCredential defaultItem() {\n+                            return new WebAuthnDeviceCredential();\n+                        }\n+\n+                        @Override\n+                        protected String sortProperty() {\n+                            return \"identifier\";\n+                        }\n+\n+                        @Override\n+                        protected String paginatorRowsKey() {\n+                            return AMConstants.PREF_AUTHPROFILE_WEBAUTHNDEVICECREDENTIALS_PAGINATOR_ROWS;\n+                        }\n+\n+                        @Override\n+                        protected List<IColumn<WebAuthnDeviceCredential, String>> getColumns() {\n+                            List<IColumn<WebAuthnDeviceCredential, String>> columns = new ArrayList<>();\n+                            columns.add(new PropertyColumn<>(\n+                                new ResourceModel(\"identifier\"), \"identifier\", \"identifier\"));\n+                            columns.add(new PropertyColumn<>(\n+                                new ResourceModel(\"json\"), \"json\", \"json\"));\n+                            return columns;\n+                        }\n+                    }, pageRef)));\n                 authProfileModal.header(new Model<>(getString(\"webAuthnDeviceCredentials\", model)));\n                 authProfileModal.show(true);\n             }\n         }, ActionLink.ActionType.HTML, AMEntitlement.AUTH_PROFILE_UPDATE);\n \n-        panel.add(new ActionLink<AuthProfileTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"5543a00097ac9a23d86fef1bd3713dc94d99e490","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/authprofiles/AuthProfileItemDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -113,18 +113,18 @@ protected Collection<ActionLink.ActionType> getBatches() {\n     public ActionsPanel<I> getActions(final IModel<I> model) {\n         ActionsPanel<I> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<I>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final I ignore) {\n                 send(AuthProfileItemDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.AUTH_PROFILE_UPDATE);\n \n-        panel.add(new ActionLink<I>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"9cdc7e7a30efcf8c1be94643a9cf1f79cde3b5d4","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -116,35 +116,35 @@ protected void addCustomColumnFields(final List<IColumn<T, String>> columns) {\n     public ActionsPanel<T> getActions(final IModel<T> model) {\n         ActionsPanel<T> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ClientAppTO ignore) {\n                 send(ClientAppDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                ClientAppRestClient.read(type, model.getObject().getKey()), target));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        ClientAppRestClient.read(type, model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.CLIENTAPP_UPDATE);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ClientAppTO ignore) {\n                 model.setObject(ClientAppRestClient.read(type, model.getObject().getKey()));\n                 target.add(propertiesModal.setContent(new ModalDirectoryPanel<>(\n-                        propertiesModal,\n-                        new ClientAppPropertiesDirectoryPanel<>(\"panel\", propertiesModal, type, model, pageRef),\n-                        pageRef)));\n+                    propertiesModal,\n+                    new ClientAppPropertiesDirectoryPanel<>(\"panel\", propertiesModal, type, model, pageRef),\n+                    pageRef)));\n                 propertiesModal.header(new Model<>(getString(\"properties.title\", model)));\n                 propertiesModal.show(true);\n             }\n         }, ActionLink.ActionType.TYPE_EXTENSIONS, AMEntitlement.CLIENTAPP_UPDATE);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -154,11 +154,11 @@ public void onClick(final AjaxRequestTarget target, final ClientAppTO ignore) {\n                 clone.setKey(null);\n                 clone.setClientAppId(null);\n                 send(ClientAppDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(clone, target));\n+                    new AjaxWizard.EditItemActionEvent<>(clone, target));\n             }\n         }, ActionLink.ActionType.CLONE, AMEntitlement.CLIENTAPP_CREATE);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"f0e06dcf6b9ef4362710063bbe15e75a0c2c4d6e","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppModalPanelBuilder.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -70,36 +70,36 @@\n \n     private static final long serialVersionUID = 5945391813567245081L;\n \n-    private final IModel<Map<String, String>> accessPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> accessPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ACCESS).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n-    private final IModel<Map<String, String>> attrReleasePolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> attrReleasePolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ATTR_RELEASE).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n-    private final IModel<Map<String, String>> authPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> authPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.AUTH).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n@@ -332,7 +332,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 default:\n             }\n \n-            add(new ListView<Component>(\"fields\", fields) {\n+            add(new ListView<>(\"fields\", fields) {\n \n                 private static final long serialVersionUID = -9180479401817023838L;\n "},{"sha":"08eafb66a53c12c28efe29bf4f647b34c8e8ba53","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppPropertiesDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppPropertiesDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -100,18 +100,18 @@ protected String paginatorRowsKey() {\n     protected ActionsPanel<Attr> getActions(final IModel<Attr> model) {\n         ActionsPanel<Attr> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<Attr>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n                 send(ClientAppPropertiesDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.CLIENTAPP_UPDATE);\n \n-        panel.add(new ActionLink<Attr>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"7a6ae151712fcc8cbbd03b7747b630d480200d6d","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/OIDCRPDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FOIDCRPDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FOIDCRPDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FOIDCRPDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -52,7 +52,7 @@ protected void addCustomColumnFields(final List<IColumn<OIDCRPClientAppTO, Strin\n         columns.add(new PropertyColumn<>(new StringResourceModel(\"clientId\", this), \"clientId\", \"clientId\"));\n         columns.add(new PropertyColumn<>(\n                 new StringResourceModel(\"redirectUris\", this), \"redirectUris\", \"redirectUris\"));\n-        columns.add(new BooleanConditionColumn<OIDCRPClientAppTO>(new StringResourceModel(\"logout\")) {\n+        columns.add(new BooleanConditionColumn<>(new StringResourceModel(\"logout\")) {\n \n             @Override\n             protected boolean isCondition(final IModel<OIDCRPClientAppTO> rowModel) {"},{"sha":"174d03153d00baa937dc46eb9371446e59cfc837","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMRealmPolicyProvider.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -38,36 +38,36 @@ public class AMRealmPolicyProvider extends IdRepoRealmPolicyProvider {\n \n     private static final long serialVersionUID = 1671878489700L;\n \n-    private final IModel<Map<String, String>> accessPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> accessPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ACCESS).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n-    private final IModel<Map<String, String>> attrReleasePolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> attrReleasePolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ATTR_RELEASE).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n-    private final IModel<Map<String, String>> authPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> authPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.AUTH).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n "},{"sha":"9ad20da11e21a77277cc4529941e3a5442a379e6","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/AMSessionDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -115,20 +115,20 @@ protected List<IColumn<AMSession, String>> getColumns() {\n     protected ActionsPanel<AMSession> getActions(final IModel<AMSession> model) {\n         ActionsPanel<AMSession> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<AMSession>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 22687128346032L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AMSession ignore) {\n                 viewModal.header(new ResourceModel(\"details\"));\n                 target.add(viewModal.setContent(\n-                        new JsonEditorPanel(viewModal, Model.of(model.getObject().getJson()), true, pageRef)));\n+                    new JsonEditorPanel(viewModal, Model.of(model.getObject().getJson()), true, pageRef)));\n                 viewModal.show(true);\n             }\n         }, ActionLink.ActionType.VIEW, listEntitlement);\n \n-        panel.add(new ActionLink<AMSession>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -4608353559809323466L;\n "},{"sha":"20512ed35e784b0186b59826e73d3ceac5df16f2","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -94,20 +94,20 @@ protected List<IColumn<AuthModuleTO, String>> getColumns() {\n                 Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));\n         columns.add(new PropertyColumn<>(new ResourceModel(Constants.DESCRIPTION_FIELD_NAME),\n                 Constants.DESCRIPTION_FIELD_NAME, Constants.DESCRIPTION_FIELD_NAME));\n-        columns.add(new PropertyColumn<AuthModuleTO, String>(new ResourceModel(\"type\"), \"conf\") {\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"type\"), \"conf\") {\n \n             private static final long serialVersionUID = -1822504503325964706L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<AuthModuleTO>> item,\n-                    final String componentId,\n-                    final IModel<AuthModuleTO> rowModel) {\n+                final Item<ICellPopulator<AuthModuleTO>> item,\n+                final String componentId,\n+                final IModel<AuthModuleTO> rowModel) {\n \n                 item.add(new Label(componentId, rowModel.getObject().getConf() == null\n-                        ? StringUtils.EMPTY\n-                        : StringUtils.substringBefore(\n-                                rowModel.getObject().getConf().getClass().getSimpleName(), \"AuthModuleConf\")));\n+                    ? StringUtils.EMPTY\n+                    : StringUtils.substringBefore(\n+                    rowModel.getObject().getConf().getClass().getSimpleName(), \"AuthModuleConf\")));\n             }\n         });\n         return columns;\n@@ -117,18 +117,18 @@ public void populateItem(\n     public ActionsPanel<AuthModuleTO> getActions(final IModel<AuthModuleTO> model) {\n         ActionsPanel<AuthModuleTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<AuthModuleTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AuthModuleTO ignore) {\n                 send(AuthModuleDirectoryPanel.this, Broadcast.EXACT, new AjaxWizard.EditItemActionEvent<>(\n-                        AuthModuleRestClient.read(model.getObject().getKey()), target));\n+                    AuthModuleRestClient.read(model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.AUTH_MODULE_UPDATE);\n \n-        panel.add(new ActionLink<AuthModuleTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"0c5a9b7b73806832e2463f6adfddd2d1e2f2f26f","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/OIDC.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDC.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDC.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDC.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -50,7 +50,7 @@ public class OIDC extends Panel {\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n-    private final BaseModal<String> viewModal = new BaseModal<String>(\"viewModal\") {\n+    private final BaseModal<String> viewModal = new BaseModal<>(\"viewModal\") {\n \n         private static final long serialVersionUID = 389935548143327858L;\n "},{"sha":"9523053a71a8348c65cdee5d1d7b2fba41cbf743","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPEntityDirectoryPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPEntityDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPEntityDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPEntityDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -84,18 +84,18 @@ protected List<IColumn<SAML2IdPEntityTO, String>> getColumns() {\n         columns.add(new PropertyColumn<>(\n                 new StringResourceModel(Constants.KEY_FIELD_NAME, this),\n                 Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));\n-        columns.add(new AbstractColumn<SAML2IdPEntityTO, String>(Model.of(\"URL\")) {\n+        columns.add(new AbstractColumn<>(Model.of(\"URL\")) {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<SAML2IdPEntityTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<SAML2IdPEntityTO> rowModel) {\n+                final Item<ICellPopulator<SAML2IdPEntityTO>> cellItem,\n+                final String componentId,\n+                final IModel<SAML2IdPEntityTO> rowModel) {\n \n                 cellItem.add(new ExternalLink(\n-                        componentId,\n-                        Model.of(metadataURL),\n-                        Model.of(metadataURL)) {\n+                    componentId,\n+                    Model.of(metadataURL),\n+                    Model.of(metadataURL)) {\n \n                     @Override\n                     protected void onComponentTag(final ComponentTag tag) {\n@@ -118,15 +118,15 @@ protected void onComponentTag(final ComponentTag tag) {\n     protected ActionsPanel<SAML2IdPEntityTO> getActions(final IModel<SAML2IdPEntityTO> model) {\n         ActionsPanel<SAML2IdPEntityTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<SAML2IdPEntityTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final SAML2IdPEntityTO ignore) {\n                 send(SAML2IdPEntityDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                SAML2IdPEntityRestClient.get(model.getObject().getKey()), target));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        SAML2IdPEntityRestClient.get(model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.SAML2_IDP_ENTITY_SET);\n "},{"sha":"faafbfc15d69fc38b0d0039b30afcdebd99d4169","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SAML2SPEntityDirectoryPanel.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2SPEntityDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -92,19 +92,19 @@ protected List<IColumn<SAML2SPEntityTO, String>> getColumns() {\n                 new StringResourceModel(Constants.KEY_FIELD_NAME, this),\n                 Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));\n \n-        columns.add(new AbstractColumn<SAML2SPEntityTO, String>(Model.of(\"URL\")) {\n+        columns.add(new AbstractColumn<>(Model.of(\"URL\")) {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<SAML2SPEntityTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<SAML2SPEntityTO> rowModel) {\n+                final Item<ICellPopulator<SAML2SPEntityTO>> cellItem,\n+                final String componentId,\n+                final IModel<SAML2SPEntityTO> rowModel) {\n \n                 String metadataURL = waPrefix + \"/sp/\" + rowModel.getObject().getKey() + \"/metadata\";\n                 cellItem.add(new ExternalLink(\n-                        componentId,\n-                        Model.of(metadataURL),\n-                        Model.of(metadataURL)) {\n+                    componentId,\n+                    Model.of(metadataURL),\n+                    Model.of(metadataURL)) {\n \n                     @Override\n                     protected void onComponentTag(final ComponentTag tag) {\n@@ -127,19 +127,19 @@ protected void onComponentTag(final ComponentTag tag) {\n     protected ActionsPanel<SAML2SPEntityTO> getActions(final IModel<SAML2SPEntityTO> model) {\n         ActionsPanel<SAML2SPEntityTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<SAML2SPEntityTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final SAML2SPEntityTO ignore) {\n                 send(SAML2SPEntityDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                SAML2SPEntityRestClient.get(model.getObject().getKey()), target));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        SAML2SPEntityRestClient.get(model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.SAML2_SP_ENTITY_SET);\n \n-        panel.add(new ActionLink<SAML2SPEntityTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"b8f73fcf6f57bb43db1852d2b7365ed2f42f49eb","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SRARouteDirectoryPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -93,19 +93,19 @@ protected List<IColumn<SRARouteTO, String>> getColumns() {\n     protected ActionsPanel<SRARouteTO> getActions(final IModel<SRARouteTO> model) {\n         ActionsPanel<SRARouteTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<SRARouteTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -4608353559809323466L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final SRARouteTO ignore) {\n                 send(SRARouteDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                SRARouteRestClient.read(model.getObject().getKey()), target));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        SRARouteRestClient.read(model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.SRA_ROUTE_UPDATE);\n \n-        panel.add(new ActionLink<SRARouteTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -4608353559809323466L;\n \n@@ -114,11 +114,11 @@ public void onClick(final AjaxRequestTarget target, final SRARouteTO ignore) {\n                 SRARouteTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(SRARouteDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(clone, target));\n+                    new AjaxWizard.EditItemActionEvent<>(clone, target));\n             }\n         }, ActionLink.ActionType.CLONE, AMEntitlement.SRA_ROUTE_CREATE);\n \n-        panel.add(new ActionLink<SRARouteTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -4608353559809323466L;\n "},{"sha":"d072eb68bd44547ef4987092268fc494d875fc99","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SRARouteFilterPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteFilterPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteFilterPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteFilterPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -66,7 +66,7 @@ protected String createRelAttribute() {\n             }\n         }));\n \n-        ListView<SRARouteFilter> filters = new ListView<SRARouteFilter>(\"filters\", model) {\n+        ListView<SRARouteFilter> filters = new ListView<>(\"filters\", model) {\n \n             private static final long serialVersionUID = 6741044372185745296L;\n \n@@ -75,16 +75,16 @@ protected void populateItem(final ListItem<SRARouteFilter> item) {\n                 SRARouteFilter filter = item.getModelObject();\n \n                 AjaxDropDownChoicePanel<SRARouteFilterFactory> factory =\n-                        new AjaxDropDownChoicePanel<>(\"factory\", \"factory\", new PropertyModel<>(filter, \"factory\"));\n+                    new AjaxDropDownChoicePanel<>(\"factory\", \"factory\", new PropertyModel<>(filter, \"factory\"));\n                 factory.setChoices(List.of(SRARouteFilterFactory.values()));\n                 item.add(factory.hideLabel());\n \n                 AjaxTextFieldPanel args =\n-                        new AjaxTextFieldPanel(\"args\", \"args\", new PropertyModel<>(filter, \"args\"));\n+                    new AjaxTextFieldPanel(\"args\", \"args\", new PropertyModel<>(filter, \"args\"));\n                 item.add(args.hideLabel());\n \n                 ActionsPanel<Serializable> actions = new ActionsPanel<>(\"actions\", null);\n-                actions.add(new ActionLink<Serializable>() {\n+                actions.add(new ActionLink<>() {\n \n                     private static final long serialVersionUID = 2041211756396714619L;\n \n@@ -98,7 +98,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 }, ActionLink.ActionType.DELETE, StringUtils.EMPTY, true).hideLabel();\n                 if (model.getObject().size() > 1) {\n                     if (item.getIndex() > 0) {\n-                        actions.add(new ActionLink<Serializable>() {\n+                        actions.add(new ActionLink<>() {\n \n                             private static final long serialVersionUID = 2041211756396714619L;\n \n@@ -114,7 +114,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         }, ActionLink.ActionType.UP, StringUtils.EMPTY).hideLabel();\n                     }\n                     if (item.getIndex() < model.getObject().size() - 1) {\n-                        actions.add(new ActionLink<Serializable>() {\n+                        actions.add(new ActionLink<>() {\n \n                             private static final long serialVersionUID = 2041211756396714619L;\n "},{"sha":"db542e053f5e9c77c6bfefa724711d3d725a5427","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SRARoutePredicatePanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARoutePredicatePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARoutePredicatePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARoutePredicatePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -68,7 +68,7 @@ protected String createRelAttribute() {\n             }\n         }));\n \n-        ListView<SRARoutePredicate> predicates = new ListView<SRARoutePredicate>(\"predicates\", model) {\n+        ListView<SRARoutePredicate> predicates = new ListView<>(\"predicates\", model) {\n \n             private static final long serialVersionUID = 1814616131938968887L;\n \n@@ -77,25 +77,25 @@ protected void populateItem(final ListItem<SRARoutePredicate> item) {\n                 SRARoutePredicate predicate = item.getModelObject();\n \n                 AjaxCheckBoxPanel negate =\n-                        new AjaxCheckBoxPanel(\"negate\", \"negate\", new PropertyModel<>(predicate, \"negate\"));\n+                    new AjaxCheckBoxPanel(\"negate\", \"negate\", new PropertyModel<>(predicate, \"negate\"));\n                 item.add(negate.hideLabel());\n \n                 AjaxDropDownChoicePanel<SRARoutePredicateFactory> factory =\n-                        new AjaxDropDownChoicePanel<>(\"factory\", \"factory\", new PropertyModel<>(predicate, \"factory\"));\n+                    new AjaxDropDownChoicePanel<>(\"factory\", \"factory\", new PropertyModel<>(predicate, \"factory\"));\n                 factory.setChoices(List.of(SRARoutePredicateFactory.values()));\n                 item.add(factory.hideLabel());\n \n                 AjaxTextFieldPanel args =\n-                        new AjaxTextFieldPanel(\"args\", \"args\", new PropertyModel<>(predicate, \"args\"));\n+                    new AjaxTextFieldPanel(\"args\", \"args\", new PropertyModel<>(predicate, \"args\"));\n                 item.add(args.hideLabel());\n \n                 AjaxDropDownChoicePanel<SRARoutePredicateCond> cond =\n-                        new AjaxDropDownChoicePanel<>(\"cond\", \"cond\", new PropertyModel<>(predicate, \"cond\"));\n+                    new AjaxDropDownChoicePanel<>(\"cond\", \"cond\", new PropertyModel<>(predicate, \"cond\"));\n                 cond.setChoices(List.of(SRARoutePredicateCond.values()));\n                 item.add(cond.hideLabel());\n \n                 ActionsPanel<Serializable> actions = new ActionsPanel<>(\"actions\", null);\n-                actions.add(new ActionLink<Serializable>() {\n+                actions.add(new ActionLink<>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -109,7 +109,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 }, ActionLink.ActionType.DELETE, StringUtils.EMPTY, true).hideLabel();\n                 if (model.getObject().size() > 1) {\n                     if (item.getIndex() > 0) {\n-                        actions.add(new ActionLink<Serializable>() {\n+                        actions.add(new ActionLink<>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -125,7 +125,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         }, ActionLink.ActionType.UP, StringUtils.EMPTY).hideLabel();\n                     }\n                     if (item.getIndex() < model.getObject().size() - 1) {\n-                        actions.add(new ActionLink<Serializable>() {\n+                        actions.add(new ActionLink<>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"96230f6d5a14175cb8d04a9d5073f88bf86de5cb","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SRARouteWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRARouteWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -76,7 +76,7 @@ public Profile(final SRARouteTO route) {\n                     new PropertyModel<>(route, Constants.NAME_FIELD_NAME), false).\n                     addRequiredLabel().setEnabled(true));\n \n-            AjaxTextFieldPanel target = new AjaxTextFieldPanel(\"target\", \"target\", new IModel<String>() {\n+            AjaxTextFieldPanel target = new AjaxTextFieldPanel(\"target\", \"target\", new IModel<>() {\n \n                 private static final long serialVersionUID = 1015030402166681242L;\n \n@@ -98,7 +98,7 @@ public void setObject(final String object) {\n             target.getField().add(new UrlValidator(new String[] { \"http\", \"https\" }));\n             add(target);\n \n-            AjaxTextFieldPanel error = new AjaxTextFieldPanel(\"error\", \"error\", new IModel<String>() {\n+            AjaxTextFieldPanel error = new AjaxTextFieldPanel(\"error\", \"error\", new IModel<>() {\n \n                 private static final long serialVersionUID = 1015030402166681242L;\n \n@@ -127,7 +127,7 @@ public void setObject(final String object) {\n \n             add(new AjaxCheckBoxPanel(\"logout\", \"logout\", new PropertyModel<>(route, \"logout\")));\n \n-            AjaxTextFieldPanel postLogout = new AjaxTextFieldPanel(\"postLogout\", \"postLogout\", new IModel<String>() {\n+            AjaxTextFieldPanel postLogout = new AjaxTextFieldPanel(\"postLogout\", \"postLogout\", new IModel<>() {\n \n                 private static final long serialVersionUID = 1015030402166681242L;\n "},{"sha":"5709553adb3a057171a905cf6bd1cfa02aa812bb","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SRAStatisticsPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRAStatisticsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRAStatisticsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRAStatisticsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -57,14 +57,14 @@ public class SRAStatisticsPanel extends Panel {\n     private final List<Pair<String, String>> selected = new ArrayList<>();\n \n     private final LoadableDetachableModel<Map<String, String>> routes =\n-            new LoadableDetachableModel<Map<String, String>>() {\n+        new LoadableDetachableModel<>() {\n \n-        @Override\n-        protected Map<String, String> load() {\n-            return SRARouteRestClient.list().stream().\n+            @Override\n+            protected Map<String, String> load() {\n+                return SRARouteRestClient.list().stream().\n                     collect(Collectors.toMap(SRARouteTO::getKey, SRARouteTO::getName));\n-        }\n-    };\n+            }\n+        };\n \n     private int current;\n \n@@ -91,7 +91,7 @@ public SRAStatisticsPanel(final String id, final List<NetworkService> instances)\n             protected void populateItem(final ListItem<SRAStatistics.Tag> tag) {\n                 String btnCss = next().cssClassName();\n                 tag.add(new Label(\"label\", tag.getModelObject().getTag()));\n-                tag.add(new ListView<String>(\"tag\", tag.getModelObject().getValues()) {\n+                tag.add(new ListView<>(\"tag\", tag.getModelObject().getValues()) {\n \n                     @Override\n                     protected void populateItem(final ListItem<String> value) {\n@@ -100,7 +100,7 @@ protected void populateItem(final ListItem<String> value) {\n                             @Override\n                             public void onClick(final AjaxRequestTarget target) {\n                                 Pair<String, String> selection =\n-                                        Pair.of(tag.getModelObject().getTag(), value.getModelObject());\n+                                    Pair.of(tag.getModelObject().getTag(), value.getModelObject());\n                                 if (selected.contains(selection)) {\n                                     selected.remove(selection);\n                                 } else {\n@@ -126,8 +126,8 @@ protected void onComponentTag(final ComponentTag tag) {\n                         };\n \n                         IModel<String> valueLabel = routes.getObject().containsKey(value.getModelObject())\n-                                ? Model.of(routes.getObject().get(value.getModelObject()))\n-                                : value.getModel();\n+                            ? Model.of(routes.getObject().get(value.getModelObject()))\n+                            : value.getModel();\n                         valueLink.add(new Label(\"valueLabel\", valueLabel));\n                         value.add(valueLink);\n                     }"},{"sha":"9dfc8d7f724655c080ef7710b21f282de10ae4df","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WAConfigDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWAConfigDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -70,7 +70,7 @@ protected String paginatorRowsKey() {\n     public ActionsPanel<Attr> getActions(final IModel<Attr> model) {\n         ActionsPanel<Attr> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<Attr>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -83,7 +83,7 @@ public void onClick(final AjaxRequestTarget target, final Attr ignore) {\n             }\n         }, ActionLink.ActionType.EDIT, AMEntitlement.WA_CONFIG_SET);\n \n-        panel.add(new ActionLink<Attr>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"4bb49206273673c3109b2e72313b58ad40e93394","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AccessPolicyDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccessPolicyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -62,7 +62,7 @@ protected void addCustomColumnFields(final List<IColumn<AccessPolicyTO, String>>\n \n     @Override\n     protected void addCustomActions(final ActionsPanel<AccessPolicyTO> panel, final IModel<AccessPolicyTO> model) {\n-        panel.add(new ActionLink<AccessPolicyTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -73,9 +73,9 @@ public void onClick(final AjaxRequestTarget target, final AccessPolicyTO ignore)\n                     model.getObject().setConf(new DefaultAccessPolicyConf());\n                 }\n                 target.add(ruleCompositionModal.setContent(new ModalDirectoryPanel<>(\n-                        ruleCompositionModal,\n-                        new AccessPolicyRequiredAttrsDirectoryPanel(\"panel\", ruleCompositionModal, model, pageRef),\n-                        pageRef)));\n+                    ruleCompositionModal,\n+                    new AccessPolicyRequiredAttrsDirectoryPanel(\"panel\", ruleCompositionModal, model, pageRef),\n+                    pageRef)));\n                 ruleCompositionModal.header(new Model<>(getString(\"requiredAttrs.title\", model)));\n                 ruleCompositionModal.show(true);\n             }"},{"sha":"206a74bff6a47c4c0fbf67af582c76aba60146f2","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AttrReleasePolicyDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAttrReleasePolicyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -52,7 +52,7 @@ protected void addCustomActions(\n             final ActionsPanel<AttrReleasePolicyTO> panel,\n             final IModel<AttrReleasePolicyTO> model) {\n \n-        panel.add(new ActionLink<AttrReleasePolicyTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -63,7 +63,7 @@ public void onClick(final AjaxRequestTarget target, final AttrReleasePolicyTO ig\n                     model.getObject().setConf(new DefaultAttrReleasePolicyConf());\n                 }\n                 target.add(policySpecModal.setContent(\n-                        new AttrReleasePolicyModalPanel(policySpecModal, model, pageRef)));\n+                    new AttrReleasePolicyModalPanel(policySpecModal, model, pageRef)));\n                 policySpecModal.header(new Model<>(getString(\"attrReleasePolicyConf.title\", model)));\n                 policySpecModal.show(true);\n             }"},{"sha":"99a690272bdb3b8411419cd1f4fddadcd4fad4ae","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AuthPolicyDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -50,7 +50,7 @@ public AuthPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n     @Override\n     protected void addCustomActions(final ActionsPanel<AuthPolicyTO> panel, final IModel<AuthPolicyTO> model) {\n \n-        panel.add(new ActionLink<AuthPolicyTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -61,7 +61,7 @@ public void onClick(final AjaxRequestTarget target, final AuthPolicyTO ignore) {\n                     model.getObject().setConf(new DefaultAuthPolicyConf());\n                 }\n                 target.add(policySpecModal.setContent(\n-                        new AuthPolicyModalPanel(policySpecModal, model, pageRef)));\n+                    new AuthPolicyModalPanel(policySpecModal, model, pageRef)));\n                 policySpecModal.header(new Model<>(getString(\"authPolicyConf.title\", model)));\n                 policySpecModal.show(true);\n             }"},{"sha":"98ffa462a0df95c39555c9402dfba5af19879365","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/policies/AuthPolicyModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAuthPolicyModalPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -42,7 +42,7 @@ public class AuthPolicyModalPanel extends AbstractModalPanel<AuthPolicyTO> {\n \n     private static final long serialVersionUID = 1L;\n \n-    private final IModel<List<String>> allAuthModules = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> allAuthModules = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n "},{"sha":"a45aa581ddfb2dca80071c22ff72aa9818be5173","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/SRASessionRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRASessionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRASessionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRASessionRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -53,7 +53,7 @@ public List<AMSession> list() {\n \n             Response response = client.get();\n             if (response.getStatus() == Response.Status.OK.getStatusCode()) {\n-                return response.readEntity(new GenericType<List<AMSession>>() {\n+                return response.readEntity(new GenericType<>() {\n                 });\n             }\n "},{"sha":"fd166c419bb2d25a403ca0778ad627082d8936ca","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WASessionRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -67,8 +67,8 @@ public List<AMSession> list() {\n                 JsonNode node = MAPPER.readTree((InputStream) response.getEntity());\n                 if (node.has(\"activeSsoSessions\")) {\n                     return MAPPER.readValue(MAPPER.treeAsTokens(node.get(\"activeSsoSessions\")),\n-                            new TypeReference<List<AMSession>>() {\n-                    });\n+                        new TypeReference<>() {\n+                        });\n                 }\n             } else {\n                 LOG.error(\"Unexpected response for SSO Sessions from {}: {}\","},{"sha":"5b7e433075f130c6c3a27cbe01b611cdd5bc7834","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -52,14 +52,14 @@ public AuthModuleWizardBuilder(final AuthModuleTO defaultItem, final PageReferen\n \n         super(defaultItem, pageRef);\n \n-        authModuleConfs = new LoadableDetachableModel<List<String>>() {\n+        authModuleConfs = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return SyncopeWebApplication.get().getLookup().getClasses(AuthModuleConf.class).stream().\n-                        map(Class::getName).sorted().collect(Collectors.toList());\n+                    map(Class::getName).sorted().collect(Collectors.toList());\n             }\n         };\n     }"},{"sha":"9ae35163f9b2721e5b73c3d71aba2763e251cbbc","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAdditionalActionLinksProvider.java","status":"modified","additions":31,"deletions":31,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionLinksProvider.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -61,22 +61,22 @@ public List<Action<UserTO>> get(\n \n         List<Action<UserTO>> actions = new ArrayList<>();\n \n-        Action<UserTO> enable = new Action<>(new ActionLink<UserTO>() {\n+        Action<UserTO> enable = new Action<>(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                        new AnyWrapper<>(model.getObject()));\n+                    new AnyWrapper<>(model.getObject()));\n                 modal.setFormModel(formModel);\n \n                 target.add(modal.setContent(new AnyStatusModal<>(\n-                        modal,\n-                        pageRef,\n-                        formModel.getObject().getInnerObject(),\n-                        \"resource\",\n-                        true)));\n+                    modal,\n+                    pageRef,\n+                    formModel.getObject().getInnerObject(),\n+                    \"resource\",\n+                    true)));\n \n                 modal.header(new Model<>(header));\n \n@@ -88,23 +88,23 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n         enable.setRealms(realm, model.getObject().getDynRealms());\n         actions.add(enable);\n \n-        Action<UserTO> manageResources = new Action<>(new ActionLink<UserTO>() {\n+        Action<UserTO> manageResources = new Action<>(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 model.setObject(new UserRestClient().read(model.getObject().getKey()));\n                 IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                        new AnyWrapper<>(model.getObject()));\n+                    new AnyWrapper<>(model.getObject()));\n                 modal.setFormModel(formModel);\n \n                 target.add(modal.setContent(new AnyStatusModal<>(\n-                        modal,\n-                        pageRef,\n-                        formModel.getObject().getInnerObject(),\n-                        \"resource\",\n-                        false)));\n+                    modal,\n+                    pageRef,\n+                    formModel.getObject().getInnerObject(),\n+                    \"resource\",\n+                    false)));\n \n                 modal.header(new Model<>(header));\n \n@@ -117,7 +117,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n         manageResources.setRealms(realm, model.getObject().getDynRealms());\n         actions.add(manageResources);\n \n-        Action<UserTO> manageAccounts = new Action<>(new ActionLink<UserTO>() {\n+        Action<UserTO> manageAccounts = new Action<>(new ActionLink<>() {\n \n             private static final long serialVersionUID = 8011039414597736111L;\n \n@@ -138,15 +138,15 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n         manageAccounts.setRealms(realm, model.getObject().getDynRealms());\n         actions.add(manageAccounts);\n \n-        Action<UserTO> mergeAccounts = new Action<>(new ActionLink<UserTO>() {\n+        Action<UserTO> mergeAccounts = new Action<>(new ActionLink<>() {\n \n             private static final long serialVersionUID = 8011039414597736111L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 model.setObject(new UserRestClient().read(model.getObject().getKey()));\n                 MergeLinkedAccountsWizardBuilder builder =\n-                        new MergeLinkedAccountsWizardBuilder(model, pageRef, parentPanel, modal);\n+                    new MergeLinkedAccountsWizardBuilder(model, pageRef, parentPanel, modal);\n                 builder.setEventSink(builder);\n                 target.add(modal.setContent(builder.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.CREATE)));\n                 modal.header(new StringResourceModel(\"mergeLinkedAccounts.title\", model));\n@@ -172,22 +172,22 @@ public List<Action<GroupTO>> get(\n \n         List<Action<GroupTO>> actions = new ArrayList<>();\n \n-        Action<GroupTO> manageResources = new Action<>(new ActionLink<GroupTO>() {\n+        Action<GroupTO> manageResources = new Action<>(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 IModel<AnyWrapper<GroupTO>> formModel = new CompoundPropertyModel<>(\n-                        new AnyWrapper<>(modelObject));\n+                    new AnyWrapper<>(modelObject));\n                 modal.setFormModel(formModel);\n \n                 target.add(modal.setContent(new AnyStatusModal<>(\n-                        modal,\n-                        pageRef,\n-                        formModel.getObject().getInnerObject(),\n-                        \"resource\",\n-                        false)));\n+                    modal,\n+                    pageRef,\n+                    formModel.getObject().getInnerObject(),\n+                    \"resource\",\n+                    false)));\n \n                 modal.header(new Model<>(header));\n \n@@ -215,22 +215,22 @@ public List<Action<AnyObjectTO>> get(\n \n         List<Action<AnyObjectTO>> actions = new ArrayList<>();\n \n-        Action<AnyObjectTO> manageResources = new Action<>(new ActionLink<AnyObjectTO>() {\n+        Action<AnyObjectTO> manageResources = new Action<>(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                 final IModel<AnyWrapper<AnyObjectTO>> formModel = new CompoundPropertyModel<>(\n-                        new AnyWrapper<>(modelObject));\n+                    new AnyWrapper<>(modelObject));\n                 modal.setFormModel(formModel);\n \n                 target.add(modal.setContent(new AnyStatusModal<>(\n-                        modal,\n-                        pageRef,\n-                        formModel.getObject().getInnerObject(),\n-                        \"resource\",\n-                        false)));\n+                    modal,\n+                    pageRef,\n+                    formModel.getObject().getInnerObject(),\n+                    \"resource\",\n+                    false)));\n \n                 modal.header(new Model<>(header));\n "},{"sha":"32d2ebfef0f2b35c8e01b3a55acf1f5c78e4267a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAdditionalActionsProvider.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAdditionalActionsProvider.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -84,15 +84,15 @@ public void add(\n             public void onEvent(final IEvent<?> event) {\n                 if (event.getPayload() instanceof AjaxWizard.NewItemCancelEvent) {\n                     ((AjaxWizard.NewItemCancelEvent<?>) event.getPayload()).getTarget().\n-                            ifPresent(target -> modal.close(target));\n+                            ifPresent(modal::close);\n                 } else if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n                     AjaxWizard.NewItemFinishEvent<?> payload = (AjaxWizard.NewItemFinishEvent) event.getPayload();\n                     Optional<AjaxRequestTarget> target = payload.getTarget();\n \n                     if (payload.getResult() instanceof ArrayList) {\n-                        modal.setContent(new ResultPage<Serializable>(\n-                                null,\n-                                payload.getResult()) {\n+                        modal.setContent(new ResultPage<>(\n+                            null,\n+                            payload.getResult()) {\n \n                             private static final long serialVersionUID = -2630573849050255233L;\n \n@@ -103,7 +103,7 @@ protected void closeAction(final AjaxRequestTarget target) {\n \n                             @Override\n                             protected Panel customResultBody(\n-                                    final String id, final Serializable item, final Serializable result) {\n+                                final String id, final Serializable item, final Serializable result) {\n \n                                 @SuppressWarnings(\"unchecked\")\n                                 ArrayList<ProvisioningReport> reports = (ArrayList<ProvisioningReport>) result;\n@@ -131,7 +131,7 @@ protected Panel customResultBody(\n         };\n         csvEventSink.add(csvDownloadBehavior);\n         panel.addOuterObject(csvEventSink);\n-        csvPushLink = new AjaxLink<Void>(\"csvPush\") {\n+        csvPushLink = new AjaxLink<>(\"csvPush\") {\n \n             private static final long serialVersionUID = -817438685948164787L;\n \n@@ -141,8 +141,8 @@ public void onClick(final AjaxRequestTarget target) {\n                 AnyQuery query = csvAnyQuery(realm, fiql, rows, panel.getDataProvider());\n \n                 target.add(modal.setContent(new CSVPushWizardBuilder(spec, query, csvDownloadBehavior, pageRef).\n-                        setEventSink(csvEventSink).\n-                        build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n+                    setEventSink(csvEventSink).\n+                    build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n \n                 modal.header(new StringResourceModel(\"csvPush\", panel, Model.of(spec)));\n                 modal.show(true);\n@@ -152,7 +152,7 @@ public void onClick(final AjaxRequestTarget target) {\n         MetaDataRoleAuthorizationStrategy.authorize(csvPushLink, Component.RENDER,\n                 String.format(\"%s,%s\", IdRepoEntitlement.IMPLEMENTATION_LIST, IdRepoEntitlement.TASK_EXECUTE));\n         panel.addInnerObject(csvPushLink.setOutputMarkupId(true).setOutputMarkupPlaceholderTag(true));\n-        csvPullLink = new AjaxLink<Void>(\"csvPull\") {\n+        csvPullLink = new AjaxLink<>(\"csvPull\") {\n \n             private static final long serialVersionUID = -817438685948164787L;\n \n@@ -161,8 +161,8 @@ public void onClick(final AjaxRequestTarget target) {\n                 CSVPullSpec spec = csvPullSpec(type, realm);\n \n                 target.add(modal.setContent(new CSVPullWizardBuilder(spec, pageRef).\n-                        setEventSink(csvEventSink).\n-                        build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n+                    setEventSink(csvEventSink).\n+                    build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n \n                 modal.header(new StringResourceModel(\"csvPull\", panel, Model.of(spec)));\n                 modal.show(true);\n@@ -186,10 +186,10 @@ protected CSVPushSpec csvPushSpec(\n                 collect(Collectors.toList()));\n         spec.setPlainAttrs(PreferenceManager.getList(\n                 DisplayAttributesModalPanel.getPrefPlainAttributeView(type)).\n-                stream().filter(name -> pSchemaNames.contains(name)).collect(Collectors.toList()));\n+                stream().filter(pSchemaNames::contains).collect(Collectors.toList()));\n         spec.setDerAttrs(PreferenceManager.getList(\n                 DisplayAttributesModalPanel.getPrefPlainAttributeView(type)).\n-                stream().filter(name -> dSchemaNames.contains(name)).collect(Collectors.toList()));\n+                stream().filter(dSchemaNames::contains).collect(Collectors.toList()));\n         return spec;\n     }\n "},{"sha":"fa15b29b30cc12c776dda01ad2ebfa4f087c4c69","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMImplementationInfoProvider.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMImplementationInfoProvider.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -131,42 +131,42 @@ public Class<?> getClass(final String implementationType, final String name) {\n \n     @Override\n     public IModel<List<String>> getReconFilterBuilders() {\n-        return new LoadableDetachableModel<List<String>>() {\n+        return new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdMImplementationType.RECON_FILTER_BUILDER).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n     }\n \n     @Override\n     public IModel<List<String>> getPullActions() {\n-        return new LoadableDetachableModel<List<String>>() {\n+        return new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdMImplementationType.PULL_ACTIONS).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n     }\n \n     @Override\n     public IModel<List<String>> getPushActions() {\n-        return new LoadableDetachableModel<List<String>>() {\n+        return new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdMImplementationType.PUSH_ACTIONS).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n     }"},{"sha":"ce21c9cba4c649b88e8c0fb14d34cc8bd0ab549a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/status/AbstractStatusBeanProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FAbstractStatusBeanProvider.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -51,7 +51,7 @@ public long size() {\n \n     @Override\n     public IModel<StatusBean> model(final StatusBean statusBean) {\n-        return new IModel<StatusBean>() {\n+        return new IModel<>() {\n \n             private static final long serialVersionUID = -7802635613997243712L;\n "},{"sha":"352547f6bc94aee42743461a572a9dca0f790ea9","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/CSVConfPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCSVConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCSVConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCSVConfPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -69,7 +69,7 @@ public CSVConfPanel(final String id, final AbstractCSVSpec spec) {\n                 \"lineSeparator\", \"lineSeparator\", new PropertyModel<>(spec, \"lineSeparator\"), false);\n         lineSeparator.setChoices(Stream.of(CSVPullWizardBuilder.LineSeparator.values()).\n                 map(CSVPullWizardBuilder.LineSeparator::name).collect(Collectors.toList()));\n-        lineSeparator.setChoiceRenderer(new IChoiceRenderer<String>() {\n+        lineSeparator.setChoiceRenderer(new IChoiceRenderer<>() {\n \n             private static final long serialVersionUID = 8551710814349123350L;\n \n@@ -85,7 +85,7 @@ public String getIdValue(final String object, final int index) {\n \n             @Override\n             public String getObject(\n-                    final String id, final IModel<? extends List<? extends String>> choices) {\n+                final String id, final IModel<? extends List<? extends String>> choices) {\n \n                 return CSVPullWizardBuilder.LineSeparator.valueOf(id).getRepr();\n             }"},{"sha":"17499d3de17ba4827c3207128beaf5d6099f327d","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.java","status":"modified","additions":41,"deletions":41,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -147,8 +147,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n         List<ConnObjectTO> listOfItems = reloadItems(resource.getKey(), anyType, null, null);\n \n-        ListViewPanel.Builder<ConnObjectTO> builder = new ListViewPanel.Builder<ConnObjectTO>(\n-                ConnObjectTO.class, pageRef) {\n+        ListViewPanel.Builder<ConnObjectTO> builder = new ListViewPanel.Builder<>(\n+            ConnObjectTO.class, pageRef) {\n \n             private static final long serialVersionUID = -8251750413385566738L;\n \n@@ -158,52 +158,52 @@ protected Component getValueComponent(final String key, final ConnObjectTO bean)\n                     ReconStatus status;\n                     try {\n                         status = ReconciliationRestClient.status(\n-                                new ReconQuery.Builder(anyType, resource.getKey()).fiql(bean.getFiql()).build());\n+                            new ReconQuery.Builder(anyType, resource.getKey()).fiql(bean.getFiql()).build());\n                     } catch (Exception e) {\n                         LOG.error(\"While requesting for reconciliation status of {} {} with FIQL '{}'\",\n-                                anyType, resource.getKey(), bean.getFiql(), e);\n+                            anyType, resource.getKey(), bean.getFiql(), e);\n \n                         status = new ReconStatus();\n                     }\n \n                     return status.getOnSyncope() == null\n-                            ? StatusUtils.getLabel(\"field\", \"notfound icon\", \"Not found\", Constants.NOT_FOUND_ICON)\n-                            : new Label(\"field\", Model.of()).add(new PopoverBehavior(\n-                                    Model.of(),\n-                                    Model.of(status.getAnyKey()),\n-                                    new PopoverConfig().\n-                                            withTitle(status.getMatchType() == MatchType.LINKED_ACCOUNT\n-                                                    ? MatchType.LINKED_ACCOUNT.name() + \", \" + AnyTypeKind.USER\n-                                                    : status.getAnyTypeKind().name()).\n-                                            withPlacement(TooltipConfig.Placement.left)) {\n-\n-                                private static final long serialVersionUID = -7867802555691605021L;\n-\n-                                @Override\n-                                protected String createRelAttribute() {\n-                                    return \"field\";\n-                                }\n-\n-                                @Override\n-                                public void onComponentTag(final Component component, final ComponentTag tag) {\n-                                    super.onComponentTag(component, tag);\n-                                    tag.put(\"class\", Constants.ACTIVE_ICON);\n-                                }\n-                            });\n+                        ? StatusUtils.getLabel(\"field\", \"notfound icon\", \"Not found\", Constants.NOT_FOUND_ICON)\n+                        : new Label(\"field\", Model.of()).add(new PopoverBehavior(\n+                        Model.of(),\n+                        Model.of(status.getAnyKey()),\n+                        new PopoverConfig().\n+                            withTitle(status.getMatchType() == MatchType.LINKED_ACCOUNT\n+                                ? MatchType.LINKED_ACCOUNT.name() + \", \" + AnyTypeKind.USER\n+                                : status.getAnyTypeKind().name()).\n+                            withPlacement(TooltipConfig.Placement.left)) {\n+\n+                        private static final long serialVersionUID = -7867802555691605021L;\n+\n+                        @Override\n+                        protected String createRelAttribute() {\n+                            return \"field\";\n+                        }\n+\n+                        @Override\n+                        public void onComponentTag(final Component component, final ComponentTag tag) {\n+                            super.onComponentTag(component, tag);\n+                            tag.put(\"class\", Constants.ACTIVE_ICON);\n+                        }\n+                    });\n                 } else {\n                     Optional<Attr> attr =\n-                            bean.getAttrs().stream().filter(object -> object.getSchema().equals(key)).findAny();\n+                        bean.getAttrs().stream().filter(object -> object.getSchema().equals(key)).findAny();\n \n                     return attr.isEmpty() || attr.get().getValues().isEmpty()\n-                            ? new Label(\"field\", StringUtils.EMPTY)\n-                            : new CollectionPanel(\"field\", attr.get().getValues());\n+                        ? new Label(\"field\", StringUtils.EMPTY)\n+                        : new CollectionPanel(\"field\", attr.get().getValues());\n                 }\n             }\n \n         };\n \n         builder.setReuseItem(false);\n-        builder.addAction(new ActionLink<ConnObjectTO>() {\n+        builder.addAction(new ActionLink<>() {\n \n             private static final long serialVersionUID = 7511002881490248598L;\n \n@@ -220,27 +220,27 @@ public void onClick(final AjaxRequestTarget target, final ConnObjectTO modelObje\n                 setReuseItem(false);\n \n         if (!StringUtils.equals(anyType, SyncopeConstants.REALM_ANYTYPE)) {\n-            builder.addAction(new ActionLink<ConnObjectTO>() {\n+            builder.addAction(new ActionLink<>() {\n \n                 private static final long serialVersionUID = 6377238742125L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ConnObjectTO modelObject) {\n                     try {\n                         ReconStatus status = ReconciliationRestClient.status(\n-                                new ReconQuery.Builder(anyType, resource.getKey()).fiql(modelObject.getFiql()).build());\n+                            new ReconQuery.Builder(anyType, resource.getKey()).fiql(modelObject.getFiql()).build());\n \n                         pullConnObject(\n-                                modelObject.getFiql(),\n-                                target,\n-                                resource.getKey(),\n-                                anyType,\n-                                status.getRealm(),\n-                                StringUtils.isNotBlank(status.getAnyKey()),\n-                                pageRef);\n+                            modelObject.getFiql(),\n+                            target,\n+                            resource.getKey(),\n+                            anyType,\n+                            status.getRealm(),\n+                            StringUtils.isNotBlank(status.getAnyKey()),\n+                            pageRef);\n                     } catch (Exception e) {\n                         LOG.error(\"While puling single object {} {} with FIQL '{}'\",\n-                                anyType, resource.getKey(), modelObject.getFiql(), e);\n+                            anyType, resource.getKey(), modelObject.getFiql(), e);\n \n                         SyncopeConsoleSession.get().onException(e);\n                         ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);"},{"sha":"cbed9bb706fef24b3b34539ec467431cf1c222a7","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.java","status":"modified","additions":76,"deletions":76,"changes":152,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -117,19 +117,19 @@ public LinkedAccountModalPanel(\n             wizard = new LinkedAccountWizardBuilder(model, linkedAccountFormLayoutInfo, pageRef);\n         }\n \n-        ListViewPanel.Builder<LinkedAccountTO> builder = new ListViewPanel.Builder<LinkedAccountTO>(\n-                LinkedAccountTO.class, pageRef) {\n+        ListViewPanel.Builder<LinkedAccountTO> builder = new ListViewPanel.Builder<>(\n+            LinkedAccountTO.class, pageRef) {\n \n             private static final long serialVersionUID = -5322423525438435153L;\n \n             @Override\n             protected LinkedAccountTO getActualItem(final LinkedAccountTO item, final List<LinkedAccountTO> list) {\n                 return item == null\n-                        ? null\n-                        : list.stream().filter(\n-                                in -> ((item.getKey() == null && in.getKey() == null)\n-                                || (in.getKey() != null && in.getKey().equals(item.getKey())))).\n-                                findAny().orElse(null);\n+                    ? null\n+                    : list.stream().filter(\n+                    in -> ((item.getKey() == null && in.getKey() == null)\n+                        || (in.getKey() != null && in.getKey().equals(item.getKey())))).\n+                    findAny().orElse(null);\n             }\n \n             @Override\n@@ -186,7 +186,7 @@ protected ActionLinksTogglePanel<LinkedAccountTO> getTogglePanel() {\n         builder.setReuseItem(false);\n         builder.withChecks(ListViewPanel.CheckAvailability.NONE);\n \n-        builder.addAction(new ActionLink<LinkedAccountTO>() {\n+        builder.addAction(new ActionLink<>() {\n \n             private static final long serialVersionUID = 2555747430358755813L;\n \n@@ -196,39 +196,39 @@ public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linked\n                         linkedAccountTO.getResource(),\n                         model.getObject().getType(),\n                         linkedAccountTO.getConnObjectKeyValue()),\n-                        target);\n+                    target);\n                 target.add(mlp);\n \n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                 send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n-                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                    new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n             }\n         }, ActionLink.ActionType.VIEW, IdRepoEntitlement.USER_READ);\n \n         if (!recounciliationOnly) {\n-            builder.addAction(new ActionLink<LinkedAccountTO>() {\n+            builder.addAction(new ActionLink<>() {\n \n                 private static final long serialVersionUID = 2555747430358755813L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n                     try {\n                         send(LinkedAccountModalPanel.this, Broadcast.DEPTH,\n-                                new AjaxWizard.NewItemActionEvent<>(linkedAccountTO, 1, target).\n-                                        setResourceModel(new StringResourceModel(\"inner.edit.linkedAccount\",\n-                                                LinkedAccountModalPanel.this, Model.of(linkedAccountTO))));\n+                            new AjaxWizard.NewItemActionEvent<>(linkedAccountTO, 1, target).\n+                                setResourceModel(new StringResourceModel(\"inner.edit.linkedAccount\",\n+                                    LinkedAccountModalPanel.this, Model.of(linkedAccountTO))));\n                     } catch (SyncopeClientException e) {\n                         LOG.error(\"While attempting to create new linked account\", e);\n                         SyncopeConsoleSession.get().onException(e);\n                         ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n \n                     send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n-                            new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n                 }\n             }, ActionLink.ActionType.EDIT, IdRepoEntitlement.USER_UPDATE);\n \n-            builder.addAction(new ActionLink<LinkedAccountTO>() {\n+            builder.addAction(new ActionLink<>() {\n \n                 private static final long serialVersionUID = 2555747430358755813L;\n \n@@ -237,8 +237,8 @@ public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linked\n                     try {\n                         linkedAccountTO.setSuspended(!linkedAccountTO.isSuspended());\n                         LinkedAccountUR linkedAccountUR = new LinkedAccountUR.Builder().\n-                                operation(PatchOperation.ADD_REPLACE).\n-                                linkedAccountTO(linkedAccountTO).build();\n+                            operation(PatchOperation.ADD_REPLACE).\n+                            linkedAccountTO(linkedAccountTO).build();\n \n                         UserUR req = new UserUR();\n                         req.setKey(model.getObject().getKey());\n@@ -259,69 +259,69 @@ public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linked\n             }, ActionLink.ActionType.ENABLE, IdRepoEntitlement.USER_UPDATE);\n         }\n \n-        builder.addAction(new ActionLink<LinkedAccountTO>() {\n-\n-            private static final long serialVersionUID = 2555747430358755813L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n-                mlp.next(\"PUSH \" + linkedAccountTO.getResource(),\n-                        new ReconTaskPanel(\n-                                linkedAccountTO.getResource(),\n-                                new PushTaskTO(),\n-                                model.getObject().getType(),\n-                                null,\n-                                ConnIdSpecialName.UID + \"==\" + linkedAccountTO.getConnObjectKeyValue(),\n-                                true,\n-                                mlp,\n-                                pageRef),\n-                        target);\n-                target.add(mlp);\n-\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n-                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n-            }\n-        }, ActionLink.ActionType.RECONCILIATION_PUSH,\n-                String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.TASK_EXECUTE));\n-\n-        builder.addAction(new ActionLink<LinkedAccountTO>() {\n-\n-            private static final long serialVersionUID = 2555747430358755813L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n-                mlp.next(\"PULL \" + linkedAccountTO.getResource(),\n-                        new ReconTaskPanel(\n-                                linkedAccountTO.getResource(),\n-                                new PullTaskTO(),\n-                                model.getObject().getType(),\n-                                null,\n-                                ConnIdSpecialName.UID + \"==\" + linkedAccountTO.getConnObjectKeyValue(),\n-                                true,\n-                                mlp,\n-                                pageRef),\n-                        target);\n-                target.add(mlp);\n-\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n-                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n-            }\n-        }, ActionLink.ActionType.RECONCILIATION_PULL,\n-                String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.TASK_EXECUTE));\n+        builder.addAction(new ActionLink<>() {\n+\n+                  private static final long serialVersionUID = 2555747430358755813L;\n+\n+                  @Override\n+                  public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n+                      mlp.next(\"PUSH \" + linkedAccountTO.getResource(),\n+                          new ReconTaskPanel(\n+                              linkedAccountTO.getResource(),\n+                              new PushTaskTO(),\n+                              model.getObject().getType(),\n+                              null,\n+                              ConnIdSpecialName.UID + \"==\" + linkedAccountTO.getConnObjectKeyValue(),\n+                              true,\n+                              mlp,\n+                              pageRef),\n+                          target);\n+                      target.add(mlp);\n+\n+                      ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                      send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n+                          new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                  }\n+              }, ActionLink.ActionType.RECONCILIATION_PUSH,\n+            String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.TASK_EXECUTE));\n+\n+        builder.addAction(new ActionLink<>() {\n+\n+                      private static final long serialVersionUID = 2555747430358755813L;\n+\n+                      @Override\n+                      public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n+                          mlp.next(\"PULL \" + linkedAccountTO.getResource(),\n+                              new ReconTaskPanel(\n+                                  linkedAccountTO.getResource(),\n+                                  new PullTaskTO(),\n+                                  model.getObject().getType(),\n+                                  null,\n+                                  ConnIdSpecialName.UID + \"==\" + linkedAccountTO.getConnObjectKeyValue(),\n+                                  true,\n+                                  mlp,\n+                                  pageRef),\n+                              target);\n+                          target.add(mlp);\n+\n+                          ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                          send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n+                              new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                      }\n+                  }, ActionLink.ActionType.RECONCILIATION_PULL,\n+            String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.TASK_EXECUTE));\n \n         if (!recounciliationOnly) {\n-            builder.addAction(new ActionLink<LinkedAccountTO>() {\n+            builder.addAction(new ActionLink<>() {\n \n                 private static final long serialVersionUID = 2555747430358755813L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linkedAccountTO) {\n                     try {\n                         LinkedAccountUR linkedAccountUR = new LinkedAccountUR.Builder().\n-                                operation(PatchOperation.DELETE).\n-                                linkedAccountTO(linkedAccountTO).build();\n+                            operation(PatchOperation.DELETE).\n+                            linkedAccountTO(linkedAccountTO).build();\n \n                         UserUR req = new UserUR();\n                         req.setKey(model.getObject().getKey());\n@@ -349,19 +349,19 @@ public void onClick(final AjaxRequestTarget target, final LinkedAccountTO linked\n         list.setReadOnly(!SyncopeConsoleSession.get().\n                 owns(IdRepoEntitlement.USER_UPDATE, model.getObject().getRealm()));\n \n-        addAjaxLink = new AjaxLink<LinkedAccountTO>(\"add\") {\n+        addAjaxLink = new AjaxLink<>(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 send(LinkedAccountModalPanel.this, Broadcast.BREADTH,\n-                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                    new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n \n                 // this opens the wizard (set above) in CREATE mode\n                 send(list, Broadcast.DEPTH, new AjaxWizard.NewItemActionEvent<>(new LinkedAccountTO(), target).\n-                        setResourceModel(\n-                                new StringResourceModel(\"inner.create.linkedAccount\", LinkedAccountModalPanel.this)));\n+                    setResourceModel(\n+                        new StringResourceModel(\"inner.create.linkedAccount\", LinkedAccountModalPanel.this)));\n             }\n         };\n         list.addOrReplaceInnerObject(addAjaxLink.setEnabled(!recounciliationOnly).setVisible(!recounciliationOnly));"},{"sha":"d9d6d754ea45fbd5dcca808e47a425db23a0c8e5","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/RemediationDirectoryPanel.java","status":"modified","additions":33,"deletions":33,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemediationDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -124,7 +124,7 @@ protected List<IColumn<RemediationTO, String>> getColumns() {\n     protected ActionsPanel<RemediationTO> getActions(final IModel<RemediationTO> model) {\n         ActionsPanel<RemediationTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<RemediationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 6193210574968203299L;\n \n@@ -146,7 +146,7 @@ public void onClick(final AjaxRequestTarget target, final RemediationTO ignore)\n                 ? IdRepoEntitlement.GROUP_DELETE\n                 : AnyEntitlement.DELETE.getFor(model.getObject().getAnyType()) }, \",\");\n \n-            panel.add(new ActionLink<RemediationTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = 6193210574968203299L;\n \n@@ -180,7 +180,7 @@ public void onClick(final AjaxRequestTarget target, final RemediationTO ignore)\n                 ? IdRepoEntitlement.GROUP_UPDATE\n                 : AnyEntitlement.UPDATE.getFor(model.getObject().getAnyType()) }, \",\");\n \n-            panel.add(new ActionLink<RemediationTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = 6193210574968203299L;\n \n@@ -199,20 +199,20 @@ public void onClick(final AjaxRequestTarget target, final RemediationTO ignore)\n                                 previousUserTO = null;\n                             } else {\n                                 previousUserTO = new UserRestClient().\n-                                        read(remediationTO.getAnyURPayload().getKey());\n+                                    read(remediationTO.getAnyURPayload().getKey());\n                                 newUserTO = AnyOperations.patch(\n-                                        previousUserTO, (UserUR) remediationTO.getAnyURPayload());\n+                                    previousUserTO, (UserUR) remediationTO.getAnyURPayload());\n                             }\n \n                             AjaxWizard.EditItemActionEvent<UserTO> userEvent =\n-                                    new AjaxWizard.EditItemActionEvent<>(newUserTO, target);\n+                                new AjaxWizard.EditItemActionEvent<>(newUserTO, target);\n                             userEvent.forceModalPanel(new RemediationUserWizardBuilder(\n-                                    model.getObject(),\n-                                    previousUserTO,\n-                                    newUserTO,\n-                                    AnyTypeRestClient.read(remediationTO.getAnyType()).getClasses(),\n-                                    AnyLayoutUtils.fetch(List.of(remediationTO.getAnyType())).getUser(),\n-                                    pageRef\n+                                model.getObject(),\n+                                previousUserTO,\n+                                newUserTO,\n+                                AnyTypeRestClient.read(remediationTO.getAnyType()).getClasses(),\n+                                AnyLayoutUtils.fetch(List.of(remediationTO.getAnyType())).getUser(),\n+                                pageRef\n                             ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n                             send(RemediationDirectoryPanel.this, Broadcast.EXACT, userEvent);\n                             break;\n@@ -226,20 +226,20 @@ public void onClick(final AjaxRequestTarget target, final RemediationTO ignore)\n                                 previousGroupTO = null;\n                             } else {\n                                 previousGroupTO = new GroupRestClient().\n-                                        read(remediationTO.getAnyURPayload().getKey());\n+                                    read(remediationTO.getAnyURPayload().getKey());\n                                 newGroupTO = AnyOperations.patch(\n-                                        previousGroupTO, (GroupUR) remediationTO.getAnyURPayload());\n+                                    previousGroupTO, (GroupUR) remediationTO.getAnyURPayload());\n                             }\n \n                             AjaxWizard.EditItemActionEvent<GroupTO> groupEvent =\n-                                    new AjaxWizard.EditItemActionEvent<>(newGroupTO, target);\n+                                new AjaxWizard.EditItemActionEvent<>(newGroupTO, target);\n                             groupEvent.forceModalPanel(new RemediationGroupWizardBuilder(\n-                                    model.getObject(),\n-                                    previousGroupTO,\n-                                    newGroupTO,\n-                                    AnyTypeRestClient.read(remediationTO.getAnyType()).getClasses(),\n-                                    AnyLayoutUtils.fetch(List.of(remediationTO.getAnyType())).getGroup(),\n-                                    pageRef\n+                                model.getObject(),\n+                                previousGroupTO,\n+                                newGroupTO,\n+                                AnyTypeRestClient.read(remediationTO.getAnyType()).getClasses(),\n+                                AnyLayoutUtils.fetch(List.of(remediationTO.getAnyType())).getGroup(),\n+                                pageRef\n                             ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n                             send(RemediationDirectoryPanel.this, Broadcast.EXACT, groupEvent);\n                             break;\n@@ -253,29 +253,29 @@ public void onClick(final AjaxRequestTarget target, final RemediationTO ignore)\n                                 previousAnyObjectTO = null;\n                             } else {\n                                 previousAnyObjectTO = new AnyObjectRestClient().\n-                                        read(remediationTO.getAnyURPayload().getKey());\n+                                    read(remediationTO.getAnyURPayload().getKey());\n                                 newAnyObjectTO = AnyOperations.patch(\n-                                        previousAnyObjectTO, (AnyObjectUR) remediationTO.getAnyURPayload());\n+                                    previousAnyObjectTO, (AnyObjectUR) remediationTO.getAnyURPayload());\n                             }\n \n                             AjaxWizard.EditItemActionEvent<AnyObjectTO> anyObjectEvent =\n-                                    new AjaxWizard.EditItemActionEvent<>(newAnyObjectTO, target);\n+                                new AjaxWizard.EditItemActionEvent<>(newAnyObjectTO, target);\n                             anyObjectEvent.forceModalPanel(new RemediationAnyObjectWizardBuilder(\n-                                    model.getObject(),\n-                                    previousAnyObjectTO,\n-                                    newAnyObjectTO,\n-                                    AnyTypeRestClient.read(remediationTO.getAnyType()).getClasses(),\n-                                    AnyLayoutUtils.fetch(List.of(remediationTO.getAnyType())).getAnyObjects().\n-                                            get(remediationTO.getAnyType()),\n-                                    pageRef\n+                                model.getObject(),\n+                                previousAnyObjectTO,\n+                                newAnyObjectTO,\n+                                AnyTypeRestClient.read(remediationTO.getAnyType()).getClasses(),\n+                                AnyLayoutUtils.fetch(List.of(remediationTO.getAnyType())).getAnyObjects().\n+                                    get(remediationTO.getAnyType()),\n+                                pageRef\n                             ).build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT));\n                             send(RemediationDirectoryPanel.this, Broadcast.EXACT, anyObjectEvent);\n                     }\n                 }\n             }, ActionLink.ActionType.EDIT, entitlements);\n         }\n \n-        panel.add(new ActionLink<RemediationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 6193210574968203299L;\n \n@@ -335,7 +335,7 @@ public long size() {\n \n         @Override\n         public IModel<RemediationTO> model(final RemediationTO remediation) {\n-            return new IModel<RemediationTO>() {\n+            return new IModel<>() {\n \n                 private static final long serialVersionUID = -2566070996511906708L;\n "},{"sha":"2d69576229860f7a06392ed3f5948d3c5668425e","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/search/ConnObjectSearchPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FConnObjectSearchPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -78,7 +78,7 @@ protected ConnObjectSearchPanel(final String id, final AnyTypeKind kind, final S\n \n     @Override\n     protected void populate() {\n-        this.types = new LoadableDetachableModel<List<SearchClause.Type>>() {\n+        this.types = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 22668815812716L;\n \n@@ -88,7 +88,7 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.dnames = new LoadableDetachableModel<Map<String, PlainSchemaTO>>() {\n+        this.dnames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 2989042618372L;\n \n@@ -98,18 +98,18 @@ protected Map<String, PlainSchemaTO> load() {\n             }\n         };\n \n-        this.anames = new LoadableDetachableModel<Map<String, PlainSchemaTO>>() {\n+        this.anames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 3002350300761L;\n \n             @Override\n             protected Map<String, PlainSchemaTO> load() {\n                 return connectorRestClient.buildObjectClassInfo(\n-                        connectorRestClient.read(resource.getConnector()), false).stream().\n-                        map(ConnIdObjectClassTO::getAttributes).\n-                        flatMap(List::stream).\n-                        collect(Collectors.toMap(PlainSchemaTO::getKey, Function.identity(),\n-                                (schema1, schema2) -> schema1));\n+                    connectorRestClient.read(resource.getConnector()), false).stream().\n+                    map(ConnIdObjectClassTO::getAttributes).\n+                    flatMap(List::stream).\n+                    collect(Collectors.toMap(PlainSchemaTO::getKey, Function.identity(),\n+                        (schema1, schema2) -> schema1));\n             }\n         };\n     }"},{"sha":"07ddf96b77cddae83c22c7bcb0d8317bcc94c6d8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/policies/ProvisioningPolicyModalPanel.java","status":"modified","additions":59,"deletions":59,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FProvisioningPolicyModalPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -83,31 +83,31 @@ public ProvisioningPolicyModalPanel(\n         super((BaseModal<ProvisioningPolicyTO>) modal, pageRef);\n         ((BaseModal<ProvisioningPolicyTO>) modal).setFormModel(policyTO);\n \n-        implementations = new LoadableDetachableModel<Map<String, ImplementationTO>>() {\n+        implementations = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected Map<String, ImplementationTO> load() {\n                 return ImplementationRestClient.list(policyTO instanceof PullPolicyTO\n-                        ? IdMImplementationType.PULL_CORRELATION_RULE\n-                        : IdMImplementationType.PUSH_CORRELATION_RULE).stream().\n-                        collect(Collectors.toMap(EntityTO::getKey, Function.identity()));\n+                    ? IdMImplementationType.PULL_CORRELATION_RULE\n+                    : IdMImplementationType.PUSH_CORRELATION_RULE).stream().\n+                    collect(Collectors.toMap(EntityTO::getKey, Function.identity()));\n             }\n         };\n \n-        model = new PropertyModel<List<CorrelationRule>>(policyTO, \"correlationRules\") {\n+        model = new PropertyModel<>(policyTO, \"correlationRules\") {\n \n             private static final long serialVersionUID = -8168676563540297301L;\n \n             private final List<CorrelationRule> rules = policyTO.getCorrelationRules().keySet().stream().\n-                    map(anyType -> new CorrelationRule(\n+                map(anyType -> new CorrelationRule(\n                     policyTO instanceof PullPolicyTO\n-                            ? DefaultPullCorrelationRuleConf.class\n-                            : DefaultPushCorrelationRuleConf.class,\n+                        ? DefaultPullCorrelationRuleConf.class\n+                        : DefaultPushCorrelationRuleConf.class,\n                     anyType,\n                     implementations.getObject().get(policyTO.getCorrelationRules().get(anyType)))).\n-                    collect(Collectors.toList());\n+                collect(Collectors.toList());\n \n             @Override\n             public List<CorrelationRule> getObject() {\n@@ -121,15 +121,15 @@ public void setObject(final List<CorrelationRule> object) {\n             }\n         };\n \n-        add(new MultiPanel<CorrelationRule>(\"correlationRules\", \"correlationRules\", model) {\n+        add(new MultiPanel<>(\"correlationRules\", \"correlationRules\", model) {\n \n             private static final long serialVersionUID = -2481579077338205547L;\n \n             @Override\n             protected CorrelationRule newModelObject() {\n                 return new CorrelationRule(policyTO instanceof PullPolicyTO\n-                        ? DefaultPullCorrelationRuleConf.class\n-                        : DefaultPushCorrelationRuleConf.class);\n+                    ? DefaultPullCorrelationRuleConf.class\n+                    : DefaultPushCorrelationRuleConf.class);\n             }\n \n             @Override\n@@ -196,76 +196,76 @@ protected class CorrelationRulePanel extends Panel {\n             add(rule);\n \n             PropertyModel<Boolean> orSchemasModel =\n-                    new PropertyModel<Boolean>(correlationRule.getObject().getDefaultRuleConf(), \"orSchemas\") {\n+                new PropertyModel<>(correlationRule.getObject().getDefaultRuleConf(), \"orSchemas\") {\n \n-                private static final long serialVersionUID = 807008909842554829L;\n+                    private static final long serialVersionUID = 807008909842554829L;\n \n-                @Override\n-                public Boolean getObject() {\n-                    AbstractCorrelationRuleConf conf = correlationRule.getObject().getDefaultRuleConf();\n-                    return conf instanceof DefaultPullCorrelationRuleConf\n+                    @Override\n+                    public Boolean getObject() {\n+                        AbstractCorrelationRuleConf conf = correlationRule.getObject().getDefaultRuleConf();\n+                        return conf instanceof DefaultPullCorrelationRuleConf\n                             ? DefaultPullCorrelationRuleConf.class.cast(conf).isOrSchemas()\n                             : conf instanceof DefaultPushCorrelationRuleConf\n-                                    ? DefaultPushCorrelationRuleConf.class.cast(conf).isOrSchemas()\n-                                    : false;\n-                }\n+                            ? DefaultPushCorrelationRuleConf.class.cast(conf).isOrSchemas()\n+                            : false;\n+                    }\n \n-                @Override\n-                public void setObject(final Boolean object) {\n-                    AbstractCorrelationRuleConf conf = correlationRule.getObject().getDefaultRuleConf();\n-                    if (conf instanceof DefaultPullCorrelationRuleConf) {\n-                        DefaultPullCorrelationRuleConf.class.cast(conf).setOrSchemas(object);\n-                    } else if (conf instanceof DefaultPushCorrelationRuleConf) {\n-                        DefaultPushCorrelationRuleConf.class.cast(conf).setOrSchemas(object);\n+                    @Override\n+                    public void setObject(final Boolean object) {\n+                        AbstractCorrelationRuleConf conf = correlationRule.getObject().getDefaultRuleConf();\n+                        if (conf instanceof DefaultPullCorrelationRuleConf) {\n+                            DefaultPullCorrelationRuleConf.class.cast(conf).setOrSchemas(object);\n+                        } else if (conf instanceof DefaultPushCorrelationRuleConf) {\n+                            DefaultPushCorrelationRuleConf.class.cast(conf).setOrSchemas(object);\n+                        }\n                     }\n-                }\n-            };\n+                };\n             AjaxCheckBoxPanel orSchemas = new AjaxCheckBoxPanel(\"orSchemas\", \"orSchemas\", orSchemasModel, false);\n             orSchemas.setOutputMarkupPlaceholderTag(true);\n             add(orSchemas.setVisible(correlationRule.getObject().getDefaultRuleConf() != null));\n \n             PropertyModel<List<String>> defaultRuleConfModel =\n-                    new PropertyModel<List<String>>(correlationRule.getObject().getDefaultRuleConf(), \"schemas\") {\n+                new PropertyModel<>(correlationRule.getObject().getDefaultRuleConf(), \"schemas\") {\n \n-                private static final long serialVersionUID = 3799387950428254072L;\n+                    private static final long serialVersionUID = 3799387950428254072L;\n \n-                private List<String> schemas() {\n-                    AbstractCorrelationRuleConf conf = correlationRule.getObject().getDefaultRuleConf();\n-                    return conf instanceof DefaultPullCorrelationRuleConf\n+                    private List<String> schemas() {\n+                        AbstractCorrelationRuleConf conf = correlationRule.getObject().getDefaultRuleConf();\n+                        return conf instanceof DefaultPullCorrelationRuleConf\n                             ? DefaultPullCorrelationRuleConf.class.cast(conf).getSchemas()\n                             : conf instanceof DefaultPushCorrelationRuleConf\n-                                    ? DefaultPushCorrelationRuleConf.class.cast(conf).getSchemas()\n-                                    : List.of();\n-                }\n+                            ? DefaultPushCorrelationRuleConf.class.cast(conf).getSchemas()\n+                            : List.of();\n+                    }\n \n-                @Override\n-                public List<String> getObject() {\n-                    List<String> schemas = new ArrayList<>();\n-                    if (correlationRule.getObject().getDefaultRuleConf() != null) {\n-                        schemas.addAll(schemas());\n+                    @Override\n+                    public List<String> getObject() {\n+                        List<String> schemas = new ArrayList<>();\n+                        if (correlationRule.getObject().getDefaultRuleConf() != null) {\n+                            schemas.addAll(schemas());\n+                        }\n+                        return schemas;\n                     }\n-                    return schemas;\n-                }\n \n-                @Override\n-                public void setObject(final List<String> object) {\n-                    if (correlationRule.getObject().getDefaultRuleConf() != null) {\n-                        schemas().clear();\n-                        schemas().addAll(object);\n+                    @Override\n+                    public void setObject(final List<String> object) {\n+                        if (correlationRule.getObject().getDefaultRuleConf() != null) {\n+                            schemas().clear();\n+                            schemas().addAll(object);\n+                        }\n                     }\n-                }\n-            };\n+                };\n             AjaxPalettePanel<String> defaultRuleConf = new AjaxPalettePanel.Builder<String>().\n                     setName(\"defaultRuleConf\").build(\"defaultRuleConf\",\n-                    defaultRuleConfModel, new AjaxPalettePanel.Builder.Query<String>() {\n+                    defaultRuleConfModel, new AjaxPalettePanel.Builder.Query<>() {\n \n-                private static final long serialVersionUID = -7223078772249308813L;\n+                    private static final long serialVersionUID = -7223078772249308813L;\n \n-                @Override\n-                public List<String> execute(final String filter) {\n-                    return getSchemas(correlationRule.getObject());\n-                }\n-            });\n+                    @Override\n+                    public List<String> execute(final String filter) {\n+                        return getSchemas(correlationRule.getObject());\n+                    }\n+                });\n             defaultRuleConf.hideLabel().setOutputMarkupPlaceholderTag(true);\n             add(defaultRuleConf.setVisible(correlationRule.getObject().getDefaultRuleConf() != null));\n "},{"sha":"9f5eb903b77f27b413322117f877f36d84671faa","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/policies/PullPolicyDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -60,20 +60,20 @@ protected void addCustomColumnFields(final List<IColumn<PullPolicyTO, String>> c\n \n     @Override\n     protected void addCustomActions(final ActionsPanel<PullPolicyTO> panel, final IModel<PullPolicyTO> model) {\n-        panel.add(new ActionLink<PullPolicyTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final PullPolicyTO ignore) {\n                 target.add(policySpecModal.setContent(\n-                        new ProvisioningPolicyModalPanel(model.getObject(), policySpecModal, pageRef)));\n+                    new ProvisioningPolicyModalPanel(model.getObject(), policySpecModal, pageRef)));\n \n                 policySpecModal.header(new StringResourceModel(\n-                        \"policy.rules\", PullPolicyDirectoryPanel.this, Model.of(model.getObject())));\n+                    \"policy.rules\", PullPolicyDirectoryPanel.this, Model.of(model.getObject())));\n \n                 MetaDataRoleAuthorizationStrategy.authorize(\n-                        policySpecModal.getForm(), ENABLE, IdRepoEntitlement.POLICY_UPDATE);\n+                    policySpecModal.getForm(), ENABLE, IdRepoEntitlement.POLICY_UPDATE);\n \n                 policySpecModal.show(true);\n             }"},{"sha":"0cc829ede4f53da0e0f0b79e312ddc0504f6168b","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/policies/PushPolicyDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPushPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPushPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPushPolicyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -60,20 +60,20 @@ protected void addCustomColumnFields(final List<IColumn<PushPolicyTO, String>> c\n \n     @Override\n     protected void addCustomActions(final ActionsPanel<PushPolicyTO> panel, final IModel<PushPolicyTO> model) {\n-        panel.add(new ActionLink<PushPolicyTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final PushPolicyTO ignore) {\n                 target.add(policySpecModal.setContent(\n-                        new ProvisioningPolicyModalPanel(model.getObject(), policySpecModal, pageRef)));\n+                    new ProvisioningPolicyModalPanel(model.getObject(), policySpecModal, pageRef)));\n \n                 policySpecModal.header(new StringResourceModel(\n-                        \"policy.rules\", PushPolicyDirectoryPanel.this, Model.of(model.getObject())));\n+                    \"policy.rules\", PushPolicyDirectoryPanel.this, Model.of(model.getObject())));\n \n                 MetaDataRoleAuthorizationStrategy.authorize(\n-                        policySpecModal.getForm(), ENABLE, IdRepoEntitlement.POLICY_UPDATE);\n+                    policySpecModal.getForm(), ENABLE, IdRepoEntitlement.POLICY_UPDATE);\n \n                 policySpecModal.show(true);\n             }"},{"sha":"4b6dae8482e379851916b79051e01207205b6c06","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/rest/RemediationRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRemediationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRemediationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRemediationRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -52,19 +52,19 @@ public static RemediationTO getRemediation(final String key) {\n \n     public static <C extends AnyCR, A extends AnyTO> ProvisioningResult<A> remedy(final String key, final C anyCR) {\n         Response response = getService(RemediationService.class).remedy(key, anyCR);\n-        return response.readEntity(new GenericType<ProvisioningResult<A>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     public static <T extends AnyTO> ProvisioningResult<T> remedy(final String key, final AnyUR anyUR) {\n         Response response = getService(RemediationService.class).remedy(key, anyUR);\n-        return response.readEntity(new GenericType<ProvisioningResult<T>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     public static ProvisioningResult<? extends AnyTO> remedy(final String key, final String anyKey) {\n         Response response = getService(RemediationService.class).remedy(key, anyKey);\n-        return response.readEntity(new GenericType<ProvisioningResult<? extends AnyTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n "},{"sha":"29796bae8bc0543cef3b24dddf3eb4cad62443b5","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusDirectoryPanel.java","status":"modified","additions":44,"deletions":44,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -127,16 +127,16 @@ protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<StatusB\n     protected List<IColumn<StatusBean, String>> getColumns() {\n         final List<IColumn<StatusBean, String>> columns = new ArrayList<>();\n \n-        columns.add(new AbstractColumn<StatusBean, String>(\n-                new StringResourceModel(\"resource\", this), \"resource\") {\n+        columns.add(new AbstractColumn<>(\n+            new StringResourceModel(\"resource\", this), \"resource\") {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<StatusBean>> cellItem,\n-                    final String componentId,\n-                    final IModel<StatusBean> model) {\n+                final Item<ICellPopulator<StatusBean>> cellItem,\n+                final String componentId,\n+                final IModel<StatusBean> model) {\n \n                 cellItem.add(new Label(componentId, model.getObject().getResource()) {\n \n@@ -145,7 +145,7 @@ public void populateItem(\n                     @Override\n                     protected void onComponentTag(final ComponentTag tag) {\n                         if (anyTO.getResources().contains(model.getObject().getResource())\n-                                || Constants.SYNCOPE.equalsIgnoreCase(model.getObject().getResource())) {\n+                            || Constants.SYNCOPE.equalsIgnoreCase(model.getObject().getResource())) {\n \n                             super.onComponentTag(tag);\n                         } else {\n@@ -160,15 +160,15 @@ protected void onComponentTag(final ComponentTag tag) {\n             columns.add(new PropertyColumn<>(\n                     new StringResourceModel(\"connObjectLink\", this), \"connObjectLink\", \"connObjectLink\"));\n \n-            columns.add(new AbstractColumn<StatusBean, String>(new StringResourceModel(\"status\", this)) {\n+            columns.add(new AbstractColumn<>(new StringResourceModel(\"status\", this)) {\n \n                 private static final long serialVersionUID = -3503023501954863131L;\n \n                 @Override\n                 public void populateItem(\n-                        final Item<ICellPopulator<StatusBean>> cellItem,\n-                        final String componentId,\n-                        final IModel<StatusBean> model) {\n+                    final Item<ICellPopulator<StatusBean>> cellItem,\n+                    final String componentId,\n+                    final IModel<StatusBean> model) {\n \n                     if (model.getObject().isLinked()) {\n                         cellItem.add(StatusUtils.getStatusImage(componentId, model.getObject().getStatus()));\n@@ -187,59 +187,59 @@ public ActionsPanel<StatusBean> getActions(final IModel<StatusBean> model) {\n         final ActionsPanel<StatusBean> panel = super.getActions(model);\n \n         if (!Constants.SYNCOPE.equalsIgnoreCase(model.getObject().getResource())) {\n-            panel.add(new ActionLink<StatusBean>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770645L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                     multiLevelPanelRef.next(bean.getResource(),\n-                            new ReconStatusPanel(bean.getResource(), anyTO.getType(), anyTO.getKey()),\n-                            target);\n+                        new ReconStatusPanel(bean.getResource(), anyTO.getType(), anyTO.getKey()),\n+                        target);\n                     target.add(multiLevelPanelRef);\n                     AnyStatusDirectoryPanel.this.getTogglePanel().close(target);\n                 }\n             }, ActionLink.ActionType.VIEW, IdMEntitlement.RESOURCE_GET_CONNOBJECT);\n         }\n \n         if (!statusOnly) {\n-            panel.add(new ActionLink<StatusBean>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770645L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                     multiLevelPanelRef.next(\"PUSH \" + bean.getResource(),\n-                            new ReconTaskPanel(\n-                                    bean.getResource(),\n-                                    new PushTaskTO(),\n-                                    anyTO.getType(),\n-                                    anyTO.getKey(),\n-                                    true,\n-                                    multiLevelPanelRef,\n-                                    pageRef),\n-                            target);\n+                        new ReconTaskPanel(\n+                            bean.getResource(),\n+                            new PushTaskTO(),\n+                            anyTO.getType(),\n+                            anyTO.getKey(),\n+                            true,\n+                            multiLevelPanelRef,\n+                            pageRef),\n+                        target);\n                     target.add(multiLevelPanelRef);\n                     AnyStatusDirectoryPanel.this.getTogglePanel().close(target);\n                 }\n             }, ActionLink.ActionType.RECONCILIATION_PUSH, IdRepoEntitlement.TASK_EXECUTE);\n \n-            panel.add(new ActionLink<StatusBean>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770645L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                     multiLevelPanelRef.next(\"PULL \" + bean.getResource(),\n-                            new ReconTaskPanel(\n-                                    bean.getResource(),\n-                                    new PullTaskTO(),\n-                                    anyTO.getType(),\n-                                    anyTO.getKey(),\n-                                    true,\n-                                    multiLevelPanelRef,\n-                                    pageRef),\n-                            target);\n+                        new ReconTaskPanel(\n+                            bean.getResource(),\n+                            new PullTaskTO(),\n+                            anyTO.getType(),\n+                            anyTO.getKey(),\n+                            true,\n+                            multiLevelPanelRef,\n+                            pageRef),\n+                        target);\n                     target.add(multiLevelPanelRef);\n                     AnyStatusDirectoryPanel.this.getTogglePanel().close(target);\n                 }\n@@ -254,19 +254,19 @@ public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                         return linkedAccountTO.getResource().equals(model.getObject().getResource());\n                     })) {\n \n-                panel.add(new ActionLink<StatusBean>() {\n+                panel.add(new ActionLink<>() {\n \n-                    private static final long serialVersionUID = 5168094747477174155L;\n+                              private static final long serialVersionUID = 5168094747477174155L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n-                        multiLevelPanelRef.next(\"ACCOUNTS\",\n-                                new LinkedAccountsStatusModalPanel(Model.of(UserTO.class.cast(anyTO)), pageRef),\n-                                target);\n-                        target.add(multiLevelPanelRef);\n-                        AnyStatusDirectoryPanel.this.getTogglePanel().close(target);\n-                    }\n-                }, ActionLink.ActionType.MANAGE_ACCOUNTS,\n+                              @Override\n+                              public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n+                                  multiLevelPanelRef.next(\"ACCOUNTS\",\n+                                      new LinkedAccountsStatusModalPanel(Model.of(UserTO.class.cast(anyTO)), pageRef),\n+                                      target);\n+                                  target.add(multiLevelPanelRef);\n+                                  AnyStatusDirectoryPanel.this.getTogglePanel().close(target);\n+                              }\n+                          }, ActionLink.ActionType.MANAGE_ACCOUNTS,\n                         String.format(\"%s,%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.USER_UPDATE,\n                                 IdMEntitlement.RESOURCE_GET_CONNOBJECT));\n             }"},{"sha":"3071cba9cb46a71ceedefc067d22e8dba05e1bbb","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ReconTaskPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -65,25 +65,25 @@ public class ReconTaskPanel extends MultilevelPanel.SecondLevel {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(ReconTaskPanel.class);\n \n-    private final IModel<List<String>> pullActions = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> pullActions = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n             return ImplementationRestClient.list(IdMImplementationType.PULL_ACTIONS).stream().\n-                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n-    private final IModel<List<String>> pushActions = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> pushActions = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n             return ImplementationRestClient.list(IdMImplementationType.PUSH_ACTIONS).stream().\n-                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n@@ -122,7 +122,7 @@ public ReconTaskPanel(\n             settings.setShowListOnEmptyInput(!isSearchEnabled);\n \n             AjaxSearchFieldPanel realm = new AjaxSearchFieldPanel(\n-                    \"realm\", \"destinationRealm\", new PropertyModel<String>(taskTO, \"destinationRealm\"), settings) {\n+                    \"realm\", \"destinationRealm\", new PropertyModel<>(taskTO, \"destinationRealm\"), settings) {\n \n                 private static final long serialVersionUID = -6390474600233486704L;\n "},{"sha":"b861878b092400d2dfdf6a2543976665177f0aa7","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusDirectoryPanel.java","status":"modified","additions":23,"deletions":23,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -109,7 +109,7 @@ protected List<IColumn<StatusBean, String>> getColumns() {\n     public ActionsPanel<StatusBean> getActions(final IModel<StatusBean> model) {\n         final ActionsPanel<StatusBean> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<StatusBean>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n@@ -121,14 +121,14 @@ protected boolean statusCondition(final StatusBean bean) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                 multiLevelPanelRef.next(bean.getResource(),\n-                        new ReconStatusPanel(bean.getResource(), type, bean.getKey()),\n-                        target);\n+                    new ReconStatusPanel(bean.getResource(), type, bean.getKey()),\n+                    target);\n                 target.add(multiLevelPanelRef);\n                 getTogglePanel().close(target);\n             }\n         }, ActionLink.ActionType.VIEW, IdMEntitlement.RESOURCE_GET_CONNOBJECT);\n \n-        panel.add(new ActionLink<StatusBean>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n@@ -140,21 +140,21 @@ protected boolean statusCondition(final StatusBean bean) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                 multiLevelPanelRef.next(\"PUSH \" + bean.getResource(),\n-                        new ReconTaskPanel(\n-                                bean.getResource(),\n-                                new PushTaskTO(),\n-                                type,\n-                                bean.getKey(),\n-                                true,\n-                                multiLevelPanelRef,\n-                                pageRef),\n-                        target);\n+                    new ReconTaskPanel(\n+                        bean.getResource(),\n+                        new PushTaskTO(),\n+                        type,\n+                        bean.getKey(),\n+                        true,\n+                        multiLevelPanelRef,\n+                        pageRef),\n+                    target);\n                 target.add(multiLevelPanelRef);\n                 getTogglePanel().close(target);\n             }\n         }, ActionLink.ActionType.RECONCILIATION_PUSH, IdRepoEntitlement.TASK_EXECUTE);\n \n-        panel.add(new ActionLink<StatusBean>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n@@ -166,15 +166,15 @@ protected boolean statusCondition(final StatusBean bean) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                 multiLevelPanelRef.next(\"PULL \" + bean.getResource(),\n-                        new ReconTaskPanel(\n-                                bean.getResource(),\n-                                new PullTaskTO(),\n-                                type,\n-                                bean.getKey(),\n-                                true,\n-                                multiLevelPanelRef,\n-                                pageRef),\n-                        target);\n+                    new ReconTaskPanel(\n+                        bean.getResource(),\n+                        new PullTaskTO(),\n+                        type,\n+                        bean.getKey(),\n+                        true,\n+                        multiLevelPanelRef,\n+                        pageRef),\n+                    target);\n                 target.add(multiLevelPanelRef);\n                 getTogglePanel().close(target);\n             }"},{"sha":"b152db8d04e250ffd35681159259059e04fbd712","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":88,"deletions":87,"changes":175,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -83,7 +83,7 @@ public class Topology extends BasePage {\n \n     private final TopologyTogglePanel togglePanel;\n \n-    private final LoadableDetachableModel<List<ResourceTO>> resModel = new LoadableDetachableModel<List<ResourceTO>>() {\n+    private final LoadableDetachableModel<List<ResourceTO>> resModel = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157431L;\n \n@@ -94,50 +94,50 @@ protected List<ResourceTO> load() {\n     };\n \n     private final LoadableDetachableModel<Map<String, List<ConnInstanceTO>>> connModel =\n-            new LoadableDetachableModel<Map<String, List<ConnInstanceTO>>>() {\n+        new LoadableDetachableModel<>() {\n \n-        private static final long serialVersionUID = 5275935387613157432L;\n+            private static final long serialVersionUID = 5275935387613157432L;\n \n-        @Override\n-        protected Map<String, List<ConnInstanceTO>> load() {\n-            final Map<String, List<ConnInstanceTO>> res = new HashMap<>();\n-\n-            ConnectorRestClient.getAllConnectors().forEach(conn -> {\n-                List<ConnInstanceTO> conns;\n-                if (res.containsKey(conn.getLocation())) {\n-                    conns = res.get(conn.getLocation());\n-                } else {\n-                    conns = new ArrayList<>();\n-                    res.put(conn.getLocation(), conns);\n-                }\n-                conns.add(conn);\n-            });\n+            @Override\n+            protected Map<String, List<ConnInstanceTO>> load() {\n+                final Map<String, List<ConnInstanceTO>> res = new HashMap<>();\n \n-            return res;\n-        }\n-    };\n+                ConnectorRestClient.getAllConnectors().forEach(conn -> {\n+                    List<ConnInstanceTO> conns;\n+                    if (res.containsKey(conn.getLocation())) {\n+                        conns = res.get(conn.getLocation());\n+                    } else {\n+                        conns = new ArrayList<>();\n+                        res.put(conn.getLocation(), conns);\n+                    }\n+                    conns.add(conn);\n+                });\n+\n+                return res;\n+            }\n+        };\n \n     private final LoadableDetachableModel<Pair<List<URI>, List<URI>>> csModel =\n-            new LoadableDetachableModel<Pair<List<URI>, List<URI>>>() {\n+        new LoadableDetachableModel<>() {\n \n-        private static final long serialVersionUID = 5275935387613157433L;\n+            private static final long serialVersionUID = 5275935387613157433L;\n \n-        @Override\n-        protected Pair<List<URI>, List<URI>> load() {\n-            final List<URI> connectorServers = new ArrayList<>();\n-            final List<URI> filePaths = new ArrayList<>();\n-\n-            SyncopeConsoleSession.get().getPlatformInfo().getConnIdLocations().forEach(location -> {\n-                if (location.startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n-                    connectorServers.add(URI.create(location));\n-                } else {\n-                    filePaths.add(URI.create(location));\n-                }\n-            });\n+            @Override\n+            protected Pair<List<URI>, List<URI>> load() {\n+                final List<URI> connectorServers = new ArrayList<>();\n+                final List<URI> filePaths = new ArrayList<>();\n \n-            return Pair.of(connectorServers, filePaths);\n-        }\n-    };\n+                SyncopeConsoleSession.get().getPlatformInfo().getConnIdLocations().forEach(location -> {\n+                    if (location.startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n+                        connectorServers.add(URI.create(location));\n+                    } else {\n+                        filePaths.add(URI.create(location));\n+                    }\n+                });\n+\n+                return Pair.of(connectorServers, filePaths);\n+            }\n+        };\n \n     protected enum SupportedOperation {\n \n@@ -163,7 +163,7 @@ public Topology() {\n         // -----------------------------------------\n         ActionsPanel<Serializable> zoomActionPanel = new ActionsPanel<>(\"zoom\", null);\n \n-        zoomActionPanel.add(new ActionLink<Serializable>() {\n+        zoomActionPanel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -172,7 +172,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.appendJavaScript(\"zoomIn($('#drawing')[0]);\");\n             }\n         }, ActionLink.ActionType.ZOOM_IN, IdMEntitlement.CONNECTOR_LIST).disableIndicator().hideLabel();\n-        zoomActionPanel.add(new ActionLink<Serializable>() {\n+        zoomActionPanel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -211,7 +211,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n         // -----------------------------------------\n         // Add Connector Servers\n         // -----------------------------------------\n-        ListView<URI> connectorServers = new ListView<URI>(\"connectorServers\", csModel.getObject().getLeft()) {\n+        ListView<URI> connectorServers = new ListView<>(\"connectorServers\", csModel.getObject().getLeft()) {\n \n             private static final long serialVersionUID = 6978621871488360380L;\n \n@@ -250,7 +250,7 @@ protected void populateItem(final ListItem<URI> item) {\n         // -----------------------------------------\n         // Add File Paths\n         // -----------------------------------------\n-        ListView<URI> filePaths = new ListView<URI>(\"filePaths\", csModel.getObject().getRight()) {\n+        ListView<URI> filePaths = new ListView<>(\"filePaths\", csModel.getObject().getRight()) {\n \n             private static final long serialVersionUID = 6978621871488360380L;\n \n@@ -290,64 +290,65 @@ protected void populateItem(final ListItem<URI> item) {\n         // Add Connector Intances\n         // -----------------------------------------\n         ListView<List<ConnInstanceTO>> conns =\n-                new ListView<List<ConnInstanceTO>>(\"conns\", new ArrayList<>(connModel.getObject().values())) {\n+            new ListView<>(\"conns\", new ArrayList<>(connModel.getObject().values())) {\n \n-            private static final long serialVersionUID = 697862187148836036L;\n+                private static final long serialVersionUID = 697862187148836036L;\n \n-            @Override\n-            protected void populateItem(final ListItem<List<ConnInstanceTO>> item) {\n-                int size = item.getModelObject().size() + 1;\n+                @Override\n+                protected void populateItem(final ListItem<List<ConnInstanceTO>> item) {\n+                    int size = item.getModelObject().size() + 1;\n \n-                ListView<ConnInstanceTO> conns = new ListView<ConnInstanceTO>(\"conns\", item.getModelObject()) {\n+                    ListView<ConnInstanceTO> conns = new ListView<>(\"conns\", item.getModelObject()) {\n \n-                    private static final long serialVersionUID = 6978621871488360381L;\n+                        private static final long serialVersionUID = 6978621871488360381L;\n \n-                    @Override\n-                    protected void populateItem(final ListItem<ConnInstanceTO> item) {\n-                        ConnInstanceTO conn = item.getModelObject();\n+                        @Override\n+                        protected void populateItem(final ListItem<ConnInstanceTO> item) {\n+                            ConnInstanceTO conn = item.getModelObject();\n \n-                        TopologyNode topologynode = new TopologyNode(\n+                            TopologyNode topologynode = new TopologyNode(\n                                 conn.getKey(),\n                                 StringUtils.isBlank(conn.getDisplayName()) // [SYNCOPE-1233]\n-                                ? conn.getBundleName() : conn.getDisplayName(),\n+                                    ? conn.getBundleName() : conn.getDisplayName(),\n                                 TopologyNode.Kind.CONNECTOR);\n \n-                        // Define the parent note\n-                        TopologyNode parent = servers.get(conn.getLocation());\n+                            // Define the parent note\n+                            TopologyNode parent = servers.get(conn.getLocation());\n \n-                        // Set the position\n-                        int kx = size >= 6 ? 800 : (130 * size);\n+                            // Set the position\n+                            int kx = size >= 6 ? 800 : (130 * size);\n \n-                        double hpos = conn.getLocation().startsWith(CONNECTOR_SERVER_LOCATION_PREFIX) ? Math.PI : 0.0;\n+                            double hpos = conn.getLocation().\n+                                startsWith(CONNECTOR_SERVER_LOCATION_PREFIX) ? Math.PI : 0.0;\n \n-                        int x = (int) Math.round((Optional.ofNullable(parent).map(TopologyNode::getX).orElse(origX))\n+                            int x = (int) Math.round((Optional.ofNullable(parent).map(TopologyNode::getX).orElse(origX))\n                                 + kx * Math.cos(hpos + Math.PI * (item.getIndex() + 1) / size));\n-                        int y = (int) Math.round((Optional.ofNullable(parent).map(TopologyNode::getY).orElse(origY))\n+                            int y = (int) Math.round((Optional.ofNullable(parent).map(TopologyNode::getY).orElse(origY))\n                                 + 100 * Math.sin(hpos + Math.PI * (item.getIndex() + 1) / size));\n \n-                        topologynode.setConnectionDisplayName(conn.getBundleName());\n-                        topologynode.setX(x);\n-                        topologynode.setY(y);\n-\n-                        connectors.put(String.class.cast(topologynode.getKey()), topologynode);\n-                        item.add(topologyNodePanel(\"conn\", topologynode, conn.isErrored()));\n-\n-                        // Update connections\n-                        Map<Serializable, TopologyNode> remoteConnections;\n-                        if (connections.containsKey(conn.getLocation())) {\n-                            remoteConnections = connections.get(conn.getLocation());\n-                        } else {\n-                            remoteConnections = new HashMap<>();\n-                            connections.put(conn.getLocation(), remoteConnections);\n+                            topologynode.setConnectionDisplayName(conn.getBundleName());\n+                            topologynode.setX(x);\n+                            topologynode.setY(y);\n+\n+                            connectors.put(String.class.cast(topologynode.getKey()), topologynode);\n+                            item.add(topologyNodePanel(\"conn\", topologynode, conn.isErrored()));\n+\n+                            // Update connections\n+                            Map<Serializable, TopologyNode> remoteConnections;\n+                            if (connections.containsKey(conn.getLocation())) {\n+                                remoteConnections = connections.get(conn.getLocation());\n+                            } else {\n+                                remoteConnections = new HashMap<>();\n+                                connections.put(conn.getLocation(), remoteConnections);\n+                            }\n+                            remoteConnections.put(conn.getKey(), topologynode);\n                         }\n-                        remoteConnections.put(conn.getKey(), topologynode);\n-                    }\n-                };\n+                    };\n \n-                conns.setOutputMarkupId(true);\n-                item.add(conns);\n-            }\n-        };\n+                    conns.setOutputMarkupId(true);\n+                    item.add(conns);\n+                }\n+            };\n \n         conns.setOutputMarkupId(true);\n         body.add(conns);\n@@ -384,16 +385,16 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n                     }\n                 });\n \n-        ListView<String> resources = new ListView<String>(\"resources\", connToBeProcessed) {\n+        ListView<String> resources = new ListView<>(\"resources\", connToBeProcessed) {\n \n             private static final long serialVersionUID = 697862187148836038L;\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n                 String connectorKey = item.getModelObject();\n \n-                ListView<TopologyNode> innerListView = new ListView<TopologyNode>(\"resources\",\n-                        new ArrayList<>(connections.get(connectorKey).values())) {\n+                ListView<TopologyNode> innerListView = new ListView<>(\"resources\",\n+                    new ArrayList<>(connections.get(connectorKey).values())) {\n \n                     private static final long serialVersionUID = -3447760771863754342L;\n \n@@ -411,9 +412,9 @@ protected void populateItem(final ListItem<TopologyNode> item) {\n                         double hpos = (parent == null || parent.getY() < syncopeTopologyNode.getY()) ? Math.PI : 0.0;\n \n                         int x = (int) Math.round((Optional.ofNullable(parent).map(TopologyNode::getX).orElse(origX))\n-                                + kx * Math.cos(hpos + Math.PI * (item.getIndex() + 1) / size));\n+                            + kx * Math.cos(hpos + Math.PI * (item.getIndex() + 1) / size));\n                         int y = (int) Math.round((Optional.ofNullable(parent).map(TopologyNode::getY).orElse(origY))\n-                                + ky * Math.sin(hpos + Math.PI * (item.getIndex() + 1) / size));\n+                            + ky * Math.sin(hpos + Math.PI * (item.getIndex() + 1) / size));\n \n                         topologynode.setX(x);\n                         topologynode.setY(y);\n@@ -486,7 +487,7 @@ protected void onTimer(final AjaxRequestTarget target) {\n         newlyCreatedContainer.setOutputMarkupId(true);\n         body.add(newlyCreatedContainer);\n \n-        newlyCreated = new ListView<TopologyNode>(\"newlyCreated\", new ArrayList<TopologyNode>()) {\n+        newlyCreated = new ListView<>(\"newlyCreated\", new ArrayList<>()) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n "},{"sha":"983190caabb126016431c49506ea1c087e5109ff","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":58,"deletions":58,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -94,7 +94,7 @@ public TopologyTogglePanel(final String id, final PageReference pageRef) {\n         propTaskModal.size(Modal.Size.Large);\n         addOuterObject(propTaskModal);\n \n-        schedTaskModal = new BaseModal<Serializable>(Constants.OUTER) {\n+        schedTaskModal = new BaseModal<>(Constants.OUTER) {\n \n             private static final long serialVersionUID = 389935548143327858L;\n \n@@ -174,7 +174,7 @@ private Fragment getEmptyFragment() {\n     private Fragment getSyncopeFragment(final PageReference pageRef) {\n         Fragment fragment = new Fragment(\"actions\", \"syncopeActions\", this);\n \n-        AjaxLink<String> reload = new IndicatingOnConfirmAjaxLink<String>(\"reload\", \"connectors.confirm.reload\", true) {\n+        AjaxLink<String> reload = new IndicatingOnConfirmAjaxLink<>(\"reload\", \"connectors.confirm.reload\", true) {\n \n             private static final long serialVersionUID = -2075933173666007020L;\n \n@@ -193,7 +193,7 @@ public void onClick(final AjaxRequestTarget target) {\n         fragment.add(reload);\n         MetaDataRoleAuthorizationStrategy.authorize(reload, RENDER, IdMEntitlement.CONNECTOR_RELOAD);\n \n-        AjaxLink<String> tasks = new IndicatingAjaxLink<String>(\"tasks\") {\n+        AjaxLink<String> tasks = new IndicatingAjaxLink<>(\"tasks\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -218,7 +218,7 @@ public String getAjaxIndicatorMarkupId() {\n     private Fragment getLocationFragment(final TopologyNode node, final PageReference pageRef) {\n         Fragment fragment = new Fragment(\"actions\", \"locationActions\", this);\n \n-        AjaxLink<String> create = new IndicatingAjaxLink<String>(\"create\") {\n+        AjaxLink<String> create = new IndicatingAjaxLink<>(\"create\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -231,7 +231,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 modal.setFormModel(model);\n \n                 target.add(modal.setContent(new ConnectorWizardBuilder(modelObject, pageRef).\n-                        build(BaseModal.CONTENT_ID, AjaxWizard.Mode.CREATE)));\n+                    build(BaseModal.CONTENT_ID, AjaxWizard.Mode.CREATE)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"connector.new\"), node.getKey())));\n                 modal.show(true);\n@@ -251,7 +251,7 @@ public String getAjaxIndicatorMarkupId() {\n     private Fragment getConnectorFragment(final TopologyNode node, final PageReference pageRef) {\n         Fragment fragment = new Fragment(\"actions\", \"connectorActions\", this);\n \n-        AjaxLink<String> delete = new IndicatingOnConfirmAjaxLink<String>(\"delete\", true) {\n+        AjaxLink<String> delete = new IndicatingOnConfirmAjaxLink<>(\"delete\", true) {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -272,7 +272,7 @@ public void onClick(final AjaxRequestTarget target) {\n         MetaDataRoleAuthorizationStrategy.authorize(delete, RENDER, IdMEntitlement.CONNECTOR_DELETE);\n         fragment.add(delete);\n \n-        AjaxLink<String> create = new IndicatingAjaxLink<String>(\"create\") {\n+        AjaxLink<String> create = new IndicatingAjaxLink<>(\"create\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -286,7 +286,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 modal.setFormModel(model);\n \n                 target.add(modal.setContent(new ResourceWizardBuilder(modelObject, pageRef).\n-                        build(BaseModal.CONTENT_ID, AjaxWizard.Mode.CREATE)));\n+                    build(BaseModal.CONTENT_ID, AjaxWizard.Mode.CREATE)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"resource.new\"), node.getKey())));\n                 modal.show(true);\n@@ -301,7 +301,7 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(create, RENDER, IdMEntitlement.RESOURCE_CREATE);\n         fragment.add(create);\n \n-        AjaxLink<String> edit = new IndicatingAjaxLink<String>(\"edit\") {\n+        AjaxLink<String> edit = new IndicatingAjaxLink<>(\"edit\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -313,14 +313,14 @@ public void onClick(final AjaxRequestTarget target) {\n                 modal.setFormModel(model);\n \n                 target.add(modal.setContent(new ConnectorWizardBuilder(connInstance, pageRef).\n-                        build(BaseModal.CONTENT_ID,\n-                                SyncopeConsoleSession.get().\n-                                        owns(IdMEntitlement.CONNECTOR_UPDATE, connInstance.getAdminRealm())\n-                                ? AjaxWizard.Mode.EDIT\n-                                : AjaxWizard.Mode.READONLY)));\n+                    build(BaseModal.CONTENT_ID,\n+                        SyncopeConsoleSession.get().\n+                            owns(IdMEntitlement.CONNECTOR_UPDATE, connInstance.getAdminRealm())\n+                            ? AjaxWizard.Mode.EDIT\n+                            : AjaxWizard.Mode.READONLY)));\n \n                 modal.header(\n-                        new Model<>(MessageFormat.format(getString(\"connector.edit\"), connInstance.getDisplayName())));\n+                    new Model<>(MessageFormat.format(getString(\"connector.edit\"), connInstance.getDisplayName())));\n                 modal.show(true);\n             }\n \n@@ -332,21 +332,21 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, IdMEntitlement.CONNECTOR_READ);\n         fragment.add(edit);\n \n-        AjaxLink<String> history = new IndicatingAjaxLink<String>(\"history\") {\n+        AjaxLink<String> history = new IndicatingAjaxLink<>(\"history\") {\n \n             private static final long serialVersionUID = -1876519166660008562L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 ConnInstanceTO modelObject = ConnectorRestClient.read(node.getKey());\n \n-                target.add(historyModal.setContent(new AuditHistoryModal<ConnInstanceTO>(\n-                        historyModal,\n-                        AuditElements.EventCategoryType.LOGIC,\n-                        \"ConnectorLogic\",\n-                        modelObject,\n-                        IdMEntitlement.CONNECTOR_UPDATE,\n-                        pageRef) {\n+                target.add(historyModal.setContent(new AuditHistoryModal<>(\n+                    historyModal,\n+                    AuditElements.EventCategoryType.LOGIC,\n+                    \"ConnectorLogic\",\n+                    modelObject,\n+                    IdMEntitlement.CONNECTOR_UPDATE,\n+                    pageRef) {\n \n                     private static final long serialVersionUID = -3225348282675513648L;\n \n@@ -367,7 +367,7 @@ protected void restore(final String json, final AjaxRequestTarget target) {\n                 }));\n \n                 historyModal.header(\n-                        new Model<>(MessageFormat.format(getString(\"connector.menu.history\"), node.getDisplayName())));\n+                    new Model<>(MessageFormat.format(getString(\"connector.menu.history\"), node.getDisplayName())));\n \n                 historyModal.show(true);\n             }\n@@ -387,7 +387,7 @@ public String getAjaxIndicatorMarkupId() {\n     private Fragment getResourceFragment(final TopologyNode node, final PageReference pageRef) {\n         Fragment fragment = new Fragment(\"actions\", \"resourceActions\", this);\n \n-        AjaxLink<String> delete = new IndicatingOnConfirmAjaxLink<String>(\"delete\", true) {\n+        AjaxLink<String> delete = new IndicatingOnConfirmAjaxLink<>(\"delete\", true) {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -408,7 +408,7 @@ public void onClick(final AjaxRequestTarget target) {\n         MetaDataRoleAuthorizationStrategy.authorize(delete, RENDER, IdMEntitlement.RESOURCE_DELETE);\n         fragment.add(delete);\n \n-        AjaxLink<String> edit = new IndicatingAjaxLink<String>(\"edit\") {\n+        AjaxLink<String> edit = new IndicatingAjaxLink<>(\"edit\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -421,11 +421,11 @@ public void onClick(final AjaxRequestTarget target) {\n                 modal.setFormModel(model);\n \n                 target.add(modal.setContent(new ResourceWizardBuilder(resource, pageRef).\n-                        build(BaseModal.CONTENT_ID,\n-                                SyncopeConsoleSession.get().\n-                                        owns(IdMEntitlement.RESOURCE_UPDATE, connInstance.getAdminRealm())\n-                                ? AjaxWizard.Mode.EDIT\n-                                : AjaxWizard.Mode.READONLY)));\n+                    build(BaseModal.CONTENT_ID,\n+                        SyncopeConsoleSession.get().\n+                            owns(IdMEntitlement.RESOURCE_UPDATE, connInstance.getAdminRealm())\n+                            ? AjaxWizard.Mode.EDIT\n+                            : AjaxWizard.Mode.READONLY)));\n \n                 modal.header(new Model<>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));\n                 modal.show(true);\n@@ -439,17 +439,17 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, IdMEntitlement.RESOURCE_READ);\n         fragment.add(edit);\n \n-        AjaxLink<String> status = new IndicatingAjaxLink<String>(\"reconciliation\") {\n+        AjaxLink<String> status = new IndicatingAjaxLink<>(\"reconciliation\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 ResourceTO modelObject = ResourceRestClient.read(node.getKey());\n                 target.add(propTaskModal.setContent(\n-                        new ResourceStatusModal(propTaskModal, pageRef, modelObject)));\n+                    new ResourceStatusModal(propTaskModal, pageRef, modelObject)));\n                 propTaskModal.header(\n-                        new Model<>(MessageFormat.format(getString(\"resource.reconciliation\"), node.getKey())));\n+                    new Model<>(MessageFormat.format(getString(\"resource.reconciliation\"), node.getKey())));\n                 propTaskModal.show(true);\n             }\n \n@@ -461,7 +461,7 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(status, RENDER, IdRepoEntitlement.USER_UPDATE);\n         fragment.add(status);\n \n-        AjaxLink<String> provision = new IndicatingAjaxLink<String>(\"provision\") {\n+        AjaxLink<String> provision = new IndicatingAjaxLink<>(\"provision\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -471,7 +471,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 ConnInstanceTO connInstance = ConnectorRestClient.read(resource.getConnector());\n \n                 if (SyncopeConsoleSession.get().\n-                        owns(IdMEntitlement.RESOURCE_UPDATE, connInstance.getAdminRealm())) {\n+                    owns(IdMEntitlement.RESOURCE_UPDATE, connInstance.getAdminRealm())) {\n \n                     provisionModal.addSubmitButton();\n                 } else {\n@@ -482,7 +482,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 provisionModal.setFormModel(model);\n \n                 target.add(provisionModal.setContent(\n-                        new ResourceProvisionPanel(provisionModal, resource, connInstance.getAdminRealm(), pageRef)));\n+                    new ResourceProvisionPanel(provisionModal, resource, connInstance.getAdminRealm(), pageRef)));\n \n                 provisionModal.header(new Model<>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));\n                 provisionModal.show(true);\n@@ -496,7 +496,7 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, IdMEntitlement.RESOURCE_READ);\n         fragment.add(provision);\n \n-        AjaxLink<String> explore = new IndicatingAjaxLink<String>(\"explore\") {\n+        AjaxLink<String> explore = new IndicatingAjaxLink<>(\"explore\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -517,17 +517,17 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(explore, RENDER, IdMEntitlement.RESOURCE_LIST_CONNOBJECT);\n         fragment.add(explore);\n \n-        AjaxLink<String> propagation = new IndicatingAjaxLink<String>(\"propagation\") {\n+        AjaxLink<String> propagation = new IndicatingAjaxLink<>(\"propagation\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n             @SuppressWarnings(\"unchecked\")\n             public void onClick(final AjaxRequestTarget target) {\n                 target.add(propTaskModal.setContent(\n-                        new PropagationTasks(propTaskModal, node.getKey(), pageRef)));\n+                    new PropagationTasks(propTaskModal, node.getKey(), pageRef)));\n                 propTaskModal.header(\n-                        new Model<>(MessageFormat.format(getString(\"task.propagation.list\"), node.getKey())));\n+                    new Model<>(MessageFormat.format(getString(\"task.propagation.list\"), node.getKey())));\n                 propTaskModal.show(true);\n             }\n \n@@ -539,7 +539,7 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(propagation, RENDER, IdRepoEntitlement.TASK_LIST);\n         fragment.add(propagation);\n \n-        AjaxLink<String> pull = new IndicatingAjaxLink<String>(\"pull\") {\n+        AjaxLink<String> pull = new IndicatingAjaxLink<>(\"pull\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -558,7 +558,7 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(pull, RENDER, IdRepoEntitlement.TASK_LIST);\n         fragment.add(pull);\n \n-        AjaxLink<String> push = new IndicatingAjaxLink<String>(\"push\") {\n+        AjaxLink<String> push = new IndicatingAjaxLink<>(\"push\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -577,21 +577,21 @@ public String getAjaxIndicatorMarkupId() {\n         MetaDataRoleAuthorizationStrategy.authorize(push, RENDER, IdRepoEntitlement.TASK_LIST);\n         fragment.add(push);\n \n-        AjaxLink<String> history = new IndicatingAjaxLink<String>(\"history\") {\n+        AjaxLink<String> history = new IndicatingAjaxLink<>(\"history\") {\n \n             private static final long serialVersionUID = -1876519166660008562L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 ResourceTO modelObject = ResourceRestClient.read(node.getKey());\n \n-                target.add(historyModal.setContent(new AuditHistoryModal<ResourceTO>(\n-                        historyModal,\n-                        AuditElements.EventCategoryType.LOGIC,\n-                        \"ResourceLogic\",\n-                        modelObject,\n-                        IdMEntitlement.RESOURCE_UPDATE,\n-                        pageRef) {\n+                target.add(historyModal.setContent(new AuditHistoryModal<>(\n+                    historyModal,\n+                    AuditElements.EventCategoryType.LOGIC,\n+                    \"ResourceLogic\",\n+                    modelObject,\n+                    IdMEntitlement.RESOURCE_UPDATE,\n+                    pageRef) {\n \n                     private static final long serialVersionUID = -3712506022627033811L;\n \n@@ -612,7 +612,7 @@ protected void restore(final String json, final AjaxRequestTarget target) {\n                 }));\n \n                 historyModal.header(\n-                        new Model<>(MessageFormat.format(getString(\"resource.menu.history\"), node.getDisplayName())));\n+                    new Model<>(MessageFormat.format(getString(\"resource.menu.history\"), node.getDisplayName())));\n \n                 historyModal.show(true);\n             }\n@@ -627,7 +627,7 @@ public String getAjaxIndicatorMarkupId() {\n         fragment.add(history);\n \n         // [SYNCOPE-1161] - Option to clone a resource\n-        AjaxLink<String> clone = new IndicatingOnConfirmAjaxLink<String>(\"clone\", \"confirmClone\", true) {\n+        AjaxLink<String> clone = new IndicatingOnConfirmAjaxLink<>(\"clone\", \"confirmClone\", true) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -657,11 +657,11 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     // refresh Topology\n                     send(pageRef.getPage(), Broadcast.DEPTH, new AbstractResourceWizardBuilder.CreateEvent(\n-                            resource.getKey(),\n-                            resource.getKey(),\n-                            TopologyNode.Kind.RESOURCE,\n-                            resource.getConnector(),\n-                            target));\n+                        resource.getKey(),\n+                        resource.getKey(),\n+                        TopologyNode.Kind.RESOURCE,\n+                        resource.getConnector(),\n+                        target));\n \n                     SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                     toggle(target, false);"},{"sha":"0a105c53e23191db8c3fcf10f65ca664994b5681","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/ConnConfPropertyListView.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -151,7 +151,7 @@ private static FormComponent<?> addCheckboxToggle(final ConnConfProperty propert\n                 withOffStyle(BootstrapToggleConfig.Style.danger).\n                 withSize(BootstrapToggleConfig.Size.mini);\n \n-        return new BootstrapToggle(\"externalAction\", new PropertyModel<Boolean>(property, \"overridable\"), config) {\n+        return new BootstrapToggle(\"externalAction\", new PropertyModel<>(property, \"overridable\"), config) {\n \n             private static final long serialVersionUID = -875219845189261873L;\n "},{"sha":"085a4ef7bfbcec5e9ad42f87d8346609508cfa05","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/widgets/RemediationsWidget.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FRemediationsWidget.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -93,18 +93,18 @@ protected int getLatestAlertsSize() {\n \n     @Override\n     protected IModel<List<RemediationTO>> getLatestAlerts() {\n-        return new ListModel<RemediationTO>() {\n+        return new ListModel<>() {\n \n             private static final long serialVersionUID = 541491929575585613L;\n \n             @Override\n             public List<RemediationTO> getObject() {\n                 List<RemediationTO> updatedRemediations;\n                 if (SyncopeConsoleSession.get().owns(IdMEntitlement.REMEDIATION_LIST)\n-                        && SyncopeConsoleSession.get().owns(IdMEntitlement.REMEDIATION_READ)) {\n+                    && SyncopeConsoleSession.get().owns(IdMEntitlement.REMEDIATION_READ)) {\n \n                     updatedRemediations = RemediationRestClient.getRemediations(1,\n-                            MAX_SIZE, new SortParam<>(\"instant\", true));\n+                        MAX_SIZE, new SortParam<>(\"instant\", true));\n                 } else {\n                     updatedRemediations = List.of();\n                 }"},{"sha":"3182de3d60e49cb4430425a9cbdc29f0f0a0d031","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/CSVPullWizardBuilder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -181,7 +181,7 @@ public Columns(final CSVPullSpec spec) {\n             keyColumn.setRequired(true);\n             add(keyColumn);\n \n-            keyColumn.add(new ListView<String>(\"columns\", columnsModel) {\n+            keyColumn.add(new ListView<>(\"columns\", columnsModel) {\n \n                 private static final long serialVersionUID = -9112553137618363167L;\n \n@@ -231,25 +231,25 @@ public class PullTask extends WizardStep {\n \n         private static final long serialVersionUID = -8954789648303078732L;\n \n-        private final IModel<List<String>> pullActions = new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> pullActions = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 4659376149825914247L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdMImplementationType.PULL_ACTIONS).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n \n-        private final IModel<List<String>> pullCorrelationRules = new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> pullCorrelationRules = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 4659376149825914247L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdMImplementationType.PULL_CORRELATION_RULE).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n "},{"sha":"00d5d45ce746b619b1b2a1c741f85cbbe309b381","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/CSVPushWizardBuilder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPushWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -107,25 +107,25 @@ public static class PushTask extends WizardStep {\n \n         private static final long serialVersionUID = -2747583614435078452L;\n \n-        private final IModel<List<String>> propActions = new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> propActions = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 4659376149825914247L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdMImplementationType.PROPAGATION_ACTIONS).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n \n-        private final IModel<List<String>> pushActions = new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> pushActions = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 4659376149825914247L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdMImplementationType.PUSH_ACTIONS).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n "},{"sha":"64c13bf51036ad13ad7b05dbc14ed26beafbd7a8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -100,7 +100,7 @@ private FormComponent<?> checkboxToggle(\n                 withOffStyle(BootstrapToggleConfig.Style.danger).\n                 withSize(BootstrapToggleConfig.Size.mini);\n \n-        return new BootstrapToggle(\"externalAction\", new PropertyModel<Boolean>(property, \"overridable\"), config) {\n+        return new BootstrapToggle(\"externalAction\", new PropertyModel<>(property, \"overridable\"), config) {\n \n             private static final long serialVersionUID = -875219845189261873L;\n "},{"sha":"92b812e46cfd8139df4ecf7572efd9b8118d19b2","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountDetailsPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountDetailsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.rest.api.beans.ConnObjectTOQuery;\n import org.apache.wicket.Component;\n@@ -73,7 +74,7 @@ public LinkedAccountDetailsPanel(final LinkedAccountTO linkedAccountTO) {\n                 filter(resource -> resource.getProvision(AnyTypeKind.USER.name()).isPresent()\n                 && resource.getProvision(AnyTypeKind.USER.name()).get().getMapping() != null\n                 && !resource.getProvision(AnyTypeKind.USER.name()).get().getMapping().getItems().isEmpty()).\n-                map(resource -> resource.getKey()).\n+                map(ResourceTO::getKey).\n                 collect(Collectors.toList()));\n         dropdownResourceField.setOutputMarkupId(true);\n         dropdownResourceField.addRequiredLabel();"},{"sha":"3b160788d45fe560377955c194e3ef26d1bcd0a5","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountPlainAttrsPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -120,7 +120,7 @@ protected FormComponent<?> checkboxToggle(\n                 withOffStyle(BootstrapToggleConfig.Style.danger).\n                 withSize(BootstrapToggleConfig.Size.mini);\n \n-        return new BootstrapToggle(\"externalAction\", new PropertyModel<Boolean>(property, \"overridable\"), config) {\n+        return new BootstrapToggle(\"externalAction\", new PropertyModel<>(property, \"overridable\"), config) {\n \n             private static final long serialVersionUID = -875219845189261873L;\n \n@@ -240,7 +240,7 @@ private class PlainSchemasOwn extends PlainSchemas<List<Attr>> {\n \n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+            add(new ListView<>(\"schemas\", attrTOs) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -250,9 +250,9 @@ protected void populateItem(final ListItem<Attr> item) {\n                     final boolean isMultivalue = schemas.get(attrTO.getSchema()).isMultivalue();\n \n                     AbstractFieldPanel<?> panel = setPanel(\n-                            schemas,\n-                            item,\n-                            !linkedAccountTO.getPlainAttr(attrTO.getSchema()).isPresent());\n+                        schemas,\n+                        item,\n+                        !linkedAccountTO.getPlainAttr(attrTO.getSchema()).isPresent());\n \n                     panel.showExternAction(checkboxToggle(attrTO, panel, isMultivalue));\n                 }"},{"sha":"d9898b45460232a132dca33f40ca753fa59f33b2","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountPrivilegesPanel.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPrivilegesPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -23,6 +23,7 @@\n import org.apache.syncope.client.console.rest.ApplicationRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.to.LinkedAccountTO;\n+import org.apache.syncope.common.lib.to.PrivilegeTO;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n@@ -38,18 +39,18 @@ public LinkedAccountPrivilegesPanel(final LinkedAccountTO linkedAccountTO) {\n         super();\n         setOutputMarkupId(true);\n \n-        final LoadableDetachableModel<List<String>> availablePrivilges = new LoadableDetachableModel<List<String>>() {\n+        final LoadableDetachableModel<List<String>> availablePrivilges = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return applicationRestClient.list().stream().\n-                        flatMap(app -> app.getPrivileges().stream()).\n-                        map(privilege -> privilege.getKey()).\n-                        distinct().\n-                        sorted().\n-                        collect(Collectors.toList());\n+                    flatMap(app -> app.getPrivileges().stream()).\n+                    map(PrivilegeTO::getKey).\n+                    distinct().\n+                    sorted().\n+                    collect(Collectors.toList());\n             }\n         };\n         AjaxPalettePanel<String> privilegesPanel = new AjaxPalettePanel.Builder<String>()."},{"sha":"a5bc48ba5ecaef27232c488e4f1b84fe1a6e64ec","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/MergeLinkedAccountsResourcesPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FMergeLinkedAccountsResourcesPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -111,27 +111,27 @@ protected List<IColumn<ResourceTO, String>> getColumns() {\n         @Override\n         protected ActionsPanel<ResourceTO> getActions(final IModel<ResourceTO> model) {\n             final ActionsPanel<ResourceTO> panel = super.getActions(model);\n-            panel.add(new ActionLink<ResourceTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ResourceTO resource) {\n                     MergeLinkedAccountsWizardModel model = MergeLinkedAccountsResourcesPanel.this.wizardModel;\n                     String connObjectKeyValue = ResourceRestClient.getConnObjectKeyValue(\n-                            resource.getKey(),\n-                            model.getMergingUser().getType(),\n-                            model.getMergingUser().getKey());\n+                        resource.getKey(),\n+                        model.getMergingUser().getType(),\n+                        model.getMergingUser().getKey());\n                     if (connObjectKeyValue != null) {\n                         model.setResource(resource);\n                         String tableId = MergeLinkedAccountsResourcesPanel.this.\n-                                get(\"resources:container:content:searchContainer:resultTable\"\n-                                        + \":tablePanel:groupForm:checkgroup:dataTable\").\n-                                getMarkupId();\n+                            get(\"resources:container:content:searchContainer:resultTable\"\n+                                + \":tablePanel:groupForm:checkgroup:dataTable\").\n+                            getMarkupId();\n                         String js = \"$('#\" + tableId + \"').removeClass('active');\";\n                         js += \"$('#\" + tableId + \" tbody tr td div').filter(function() \"\n-                                + \"{return $(this).text() === \\\"\" + resource.getKey() + \"\\\";})\"\n-                                + \".parent().parent().addClass('active');\";\n+                            + \"{return $(this).text() === \\\"\" + resource.getKey() + \"\\\";})\"\n+                            + \".parent().parent().addClass('active');\";\n                         target.prependJavaScript(js);\n \n                     } else {"},{"sha":"318823011785526640ee458cda2d323150c48b32","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ConnectorConfPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorConfPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -35,7 +35,7 @@ public ConnectorConfPanel(final ConnInstanceTO connInstanceTO, final List<ConnBu\n         super(connInstanceTO);\n         this.bundles = bundles;\n \n-        model = new LoadableDetachableModel<List<ConnConfProperty>>() {\n+        model = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = -2965284931860212687L;\n "},{"sha":"f9b2a8530282f76d029d3a94f7625c3fe888ab6e","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ConnectorDetailsPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteSettings;\n import org.apache.wicket.extensions.wizard.WizardStep;\n@@ -66,7 +67,7 @@ protected Iterator<String> getChoices(final String input) {\n                         : RealmRestClient.list()).\n                         stream().filter(realm -> SyncopeConsoleSession.get().getAuthRealms().stream().anyMatch(\n                         authRealm -> realm.getFullPath().startsWith(authRealm))).\n-                        map(item -> item.getFullPath()).collect(Collectors.toList()).iterator();\n+                        map(RealmTO::getFullPath).collect(Collectors.toList()).iterator();\n             }\n         };\n "},{"sha":"e86481c9386dd5d7a3e4879571d9efc2d9bd5358","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceConnConfPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -38,7 +38,7 @@ public ResourceConnConfPanel(final ResourceTO resourceTO, final boolean createFl\n         super(resourceTO);\n         this.createFlag = createFlag;\n \n-        model = new LoadableDetachableModel<List<ConnConfProperty>>() {\n+        model = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = -2965284931860212687L;\n "},{"sha":"94ae8b08d6326e657fbe1d8fd6573e44cc99476d","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceDetailsPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceDetailsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -45,25 +45,25 @@ public class ResourceDetailsPanel extends WizardStep {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    private final IModel<List<String>> propagationActions = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> propagationActions = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n             return ImplementationRestClient.list(IdMImplementationType.PROPAGATION_ACTIONS).stream().\n-                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n-    private final IModel<List<String>> provisionSorters = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> provisionSorters = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 4659376149825914247L;\n \n         @Override\n         protected List<String> load() {\n             return ImplementationRestClient.list(IdMImplementationType.PROVISION_SORTER).stream().\n-                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n "},{"sha":"de84e722a60fce68e3e3d67740c228100202b558","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -35,7 +35,6 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n@@ -82,25 +81,25 @@ public ResourceMappingPanel(\n         super(id,\n                 itemTransformers,\n                 jexlTransformers,\n-                new ListModel<ItemTO>(provision.getItems()),\n+            new ListModel<>(provision.getItems()),\n                 resourceTO.getConnector() != null,\n                 MappingPurpose.BOTH);\n \n         setOutputMarkupId(true);\n \n         this.provision = provision;\n \n-        extAttrNames = new LoadableDetachableModel<List<String>>() {\n+        extAttrNames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return ConnectorRestClient.getExtAttrNames(\n-                        adminRealm,\n-                        provision.getObjectClass(),\n-                        resourceTO.getConnector(),\n-                        resourceTO.getConfOverride());\n+                    adminRealm,\n+                    provision.getObjectClass(),\n+                    resourceTO.getConnector(),\n+                    resourceTO.getConfOverride());\n             }\n         };\n     }"},{"sha":"ec8ba1247c42f1d9bf4031e8ad09966ad83b1206","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":23,"deletions":23,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -84,22 +84,22 @@ public ResourceProvisionPanel(\n \n         wizard = new ProvisionWizardBuilder(resourceTO, adminRealm, pageRef);\n \n-        ListViewPanel.Builder<ResourceProvision> builder = new ListViewPanel.Builder<ResourceProvision>(\n-                ResourceProvision.class, pageRef) {\n+        ListViewPanel.Builder<ResourceProvision> builder = new ListViewPanel.Builder<>(\n+            ResourceProvision.class, pageRef) {\n \n             private static final long serialVersionUID = 4907732721283972943L;\n \n             @Override\n             protected ResourceProvision getActualItem(\n-                    final ResourceProvision item, final List<ResourceProvision> list) {\n+                final ResourceProvision item, final List<ResourceProvision> list) {\n \n                 return Optional.ofNullable(item)\n-                        .map(resourceProvision -> list.stream()\n+                    .map(resourceProvision -> list.stream()\n                         .filter(in -> ((resourceProvision.getKey() == null && in.getKey() == null)\n-                        || (in.getKey() != null && in.getKey().equals(resourceProvision.getKey())))\n-                        && ((resourceProvision.getAnyType() == null && in.getAnyType() == null)\n-                        || (in.getAnyType() != null && in.getAnyType().equals(resourceProvision.getAnyType())))).\n-                        findAny().orElse(null)).orElse(null);\n+                            || (in.getKey() != null && in.getKey().equals(resourceProvision.getKey())))\n+                            && ((resourceProvision.getAnyType() == null && in.getAnyType() == null)\n+                            || (in.getAnyType() != null && in.getAnyType().equals(resourceProvision.getAnyType())))).\n+                            findAny().orElse(null)).orElse(null);\n             }\n \n             @Override\n@@ -143,26 +143,26 @@ protected ActionLinksTogglePanel<ResourceProvision> getTogglePanel() {\n         builder.includes(\"anyType\", \"objectClass\", \"auxClasses\");\n         builder.setReuseItem(false);\n \n-        builder.addAction(new ActionLink<ResourceProvision>() {\n+        builder.addAction(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435504L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ResourceProvision provision) {\n                 try {\n                     send(ResourceProvisionPanel.this, Broadcast.DEPTH,\n-                            new AjaxWizard.NewItemActionEvent<>(provision, 1, target).setResourceModel(\n-                                    new StringResourceModel(\"inner.provision.mapping\",\n-                                            ResourceProvisionPanel.this,\n-                                            Model.of(provision))));\n+                        new AjaxWizard.NewItemActionEvent<>(provision, 1, target).setResourceModel(\n+                            new StringResourceModel(\"inner.provision.mapping\",\n+                                ResourceProvisionPanel.this,\n+                                Model.of(provision))));\n                 } catch (SyncopeClientException e) {\n                     LOG.error(\"While contacting resource\", e);\n                     SyncopeConsoleSession.get().onException(e);\n                     ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                 }\n             }\n         }, ActionLink.ActionType.MAPPING, IdMEntitlement.RESOURCE_READ).\n-                addAction(new ActionLink<ResourceProvision>() {\n+                addAction(new ActionLink<>() {\n \n                     private static final long serialVersionUID = -7780999687733432439L;\n \n@@ -173,13 +173,13 @@ public void onClick(final AjaxRequestTarget target, final ResourceProvision prov\n                             SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (Exception e) {\n                             LOG.error(\"While setting latest sync token for {}/{}\",\n-                                    resourceTO.getKey(), provision.getAnyType(), e);\n+                                resourceTO.getKey(), provision.getAnyType(), e);\n                             SyncopeConsoleSession.get().onException(e);\n                         }\n                         ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.SET_LATEST_SYNC_TOKEN, IdMEntitlement.RESOURCE_UPDATE).\n-                addAction(new ActionLink<ResourceProvision>() {\n+                addAction(new ActionLink<>() {\n \n                     private static final long serialVersionUID = -7780999687733432439L;\n \n@@ -190,13 +190,13 @@ public void onClick(final AjaxRequestTarget target, final ResourceProvision prov\n                             SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (Exception e) {\n                             LOG.error(\"While removing sync token for {}/{}\",\n-                                    resourceTO.getKey(), provision.getAnyType(), e);\n+                                resourceTO.getKey(), provision.getAnyType(), e);\n                             SyncopeConsoleSession.get().onException(e);\n                         }\n                         ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.REMOVE_SYNC_TOKEN, IdMEntitlement.RESOURCE_UPDATE).\n-                addAction(new ActionLink<ResourceProvision>() {\n+                addAction(new ActionLink<>() {\n \n                     private static final long serialVersionUID = -3722207913631435544L;\n \n@@ -218,14 +218,14 @@ public void onClick(final AjaxRequestTarget target, final ResourceProvision prov\n         list = builder.build(\"provision\");\n         list.setReadOnly(!SyncopeConsoleSession.get().owns(IdMEntitlement.RESOURCE_UPDATE, adminRealm));\n \n-        addAjaxLink = new AjaxLink<ResourceProvision>(\"add\") {\n+        addAjaxLink = new AjaxLink<>(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 send(ResourceProvisionPanel.this, Broadcast.BREADTH,\n-                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                    new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n                 objectTypeTogglePanel.setHeaderLabel(target);\n                 objectTypeTogglePanel.toggle(target, true);\n             }\n@@ -299,15 +299,15 @@ private void sortProvisions() {\n     }\n \n     private LoadableDetachableModel<List<String>> getAnyTypes() {\n-        return new LoadableDetachableModel<List<String>>() {\n+        return new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 List<String> anyTypes = AnyTypeRestClient.list().stream().\n-                        filter(anyType -> resourceTO.getProvision(anyType).isEmpty()).\n-                        collect(Collectors.toList());\n+                    filter(anyType -> resourceTO.getProvision(anyType).isEmpty()).\n+                    collect(Collectors.toList());\n                 if (resourceTO.getOrgUnit() == null) {\n                     anyTypes.add(SyncopeConstants.REALM_ANYTYPE);\n                 }"},{"sha":"e339bba69a2b0f13603251e8adabad817644de94","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceSecurityPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -39,47 +39,47 @@ public class ResourceSecurityPanel extends WizardStep {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n-    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.PASSWORD).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n-    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ACCOUNT).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n-    private final IModel<Map<String, String>> pullPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> pullPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.PULL).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n-    private final IModel<Map<String, String>> pushPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> pushPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 9089911876466472133L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.PUSH).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n "},{"sha":"f67bdd94695a7c8595aa4c953625c68e0388f2ed","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/BaseLogin.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FBaseLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FBaseLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FBaseLogin.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -82,7 +82,7 @@ Locale.ENGLISH, Locale.CANADA_FRENCH, Locale.ITALIAN, Locale.JAPANESE, new Local\n \n     protected String notificationLevel;\n \n-    private final LoadableDetachableModel<List<String>> domains = new LoadableDetachableModel<List<String>>() {\n+    private final LoadableDetachableModel<List<String>> domains = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 4659376149825914247L;\n \n@@ -183,7 +183,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n         form.setDefaultButton(submitButton);\n \n         List<Panel> ssoLoginFormPanels = getSSOLoginFormPanels();\n-        ListView<Panel> ssoLogins = new ListView<Panel>(\"ssoLogins\", ssoLoginFormPanels) {\n+        ListView<Panel> ssoLogins = new ListView<>(\"ssoLogins\", ssoLoginFormPanels) {\n \n             private static final long serialVersionUID = -9180479401817023838L;\n \n@@ -250,7 +250,7 @@ public String getDisplayValue(final Locale locale) {\n             super(id, SUPPORTED_LOCALES);\n \n             setChoiceRenderer(new LocaleRenderer());\n-            setModel(new IModel<Locale>() {\n+            setModel(new IModel<>() {\n \n                 private static final long serialVersionUID = -6985170095629312963L;\n "},{"sha":"f195194557ebdd17ed66bdfcb917c19ac87d24d7","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/DomainDropDown.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FDomainDropDown.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FDomainDropDown.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2FDomainDropDown.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -33,7 +33,7 @@ public class DomainDropDown extends DropDownChoice<String> {\n \n     public DomainDropDown(final String id, final IModel<List<String>> domains) {\n         super(id, domains);\n-        setModel(new IModel<String>() {\n+        setModel(new IModel<>() {\n \n             private static final long serialVersionUID = -1124206668056084806L;\n "},{"sha":"a398e9b01ae1bbcf03951d6b5029fe85ad3f5dfc","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -62,7 +62,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n     @Override\n     public FieldPanel<Boolean> setNewModel(final List<Serializable> list) {\n-        setNewModel(new Model<Boolean>() {\n+        setNewModel(new Model<>() {\n \n             private static final long serialVersionUID = 527651414610325237L;\n \n@@ -92,7 +92,7 @@ public void setObject(final Boolean object) {\n     @SuppressWarnings(\"rawtypes\")\n     @Override\n     public FieldPanel<Boolean> setNewModel(final ListItem item) {\n-        IModel<Boolean> model = new Model<Boolean>() {\n+        IModel<Boolean> model = new Model<>() {\n \n             private static final long serialVersionUID = 6799404673615637845L;\n \n@@ -118,7 +118,7 @@ public Boolean getObject() {\n             @SuppressWarnings(\"unchecked\")\n             public void setObject(final Boolean object) {\n                 item.setModelObject(Optional.ofNullable(object)\n-                        .map(Object::toString).orElseGet(Boolean.FALSE::toString));\n+                    .map(Object::toString).orElseGet(Boolean.FALSE::toString));\n             }\n         };\n "},{"sha":"2190f809e47c92c9b6a489feabf9e26d3d6fef38","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGrid.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGrid.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -75,7 +75,7 @@ public AjaxGrid(\n         newCols.addAll(columns);\n         newCols.add(new AjaxGridActionsColumn<>(new Model<>(\"Actions\")));\n \n-        dataTable = new EditableDataTable<Pair<K, V>, S>(\"dataTable\", newCols, dataProvider, rowsPerPage, null) {\n+        dataTable = new EditableDataTable<>(\"dataTable\", newCols, dataProvider, rowsPerPage, null) {\n \n             protected static final long serialVersionUID = 1L;\n \n@@ -126,7 +126,7 @@ protected AjaxGridBottomToolbar<Pair<K, V>, S> newAddBottomToolbar(\n             final EditableDataTable<Pair<K, V>, S> dataTable,\n             final IEditableDataProvider<Pair<K, V>, S> dataProvider) {\n \n-        return new AjaxGridBottomToolbar<Pair<K, V>, S>(dataTable) {\n+        return new AjaxGridBottomToolbar<>(dataTable) {\n \n             protected static final long serialVersionUID = 1L;\n "},{"sha":"fbf9ecf12a55195b1670202554dab67af4a3c9e4","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxGridFieldPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxGridFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -44,12 +44,12 @@ public AjaxGridFieldPanel(final String id, final String name, final IModel<Map<K\n \n         add(new Label(AbstractFieldPanel.LABEL, new ResourceModel(name, name)));\n \n-        add(new AjaxGrid<K, V, S>(\n-                \"grid\",\n-                getColumns(),\n-                new EditableListDataProvider<Pair<K, V>, S>(model.getObject().entrySet().stream().\n-                        map(entry -> MutablePair.of(entry.getKey(), entry.getValue())).\n-                        collect(Collectors.toList())), 10) {\n+        add(new AjaxGrid<>(\n+            \"grid\",\n+            getColumns(),\n+            new EditableListDataProvider<>(model.getObject().entrySet().stream().\n+                map(entry -> MutablePair.of(entry.getKey(), entry.getValue())).\n+                collect(Collectors.toList())), 10) {\n \n             private static final long serialVersionUID = 1L;\n "},{"sha":"8806ce2c6128b43848737cf3c42f2dcc5045808f","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -129,8 +129,8 @@ protected void onSubmit(final AjaxRequestTarget target) {\n     }\n \n     protected Palette<T> buildPalette(final IModel<List<T>> model, final Builder<T> builder) {\n-        return new NonI18nPalette<T>(\n-                \"paletteField\", model, choicesModel, builder.renderer, 8, builder.allowOrder, builder.allowMoveAll) {\n+        return new NonI18nPalette<>(\n+            \"paletteField\", model, choicesModel, builder.renderer, 8, builder.allowOrder, builder.allowMoveAll) {\n \n             private static final long serialVersionUID = -3074655279011678437L;\n \n@@ -146,7 +146,7 @@ protected Component newSelectedHeader(final String componentId) {\n \n             @Override\n             protected Recorder<T> newRecorderComponent() {\n-                Recorder<T> recorder = new Recorder<T>(\"recorder\", this) {\n+                Recorder<T> recorder = new Recorder<>(\"recorder\", this) {\n \n                     private static final long serialVersionUID = -9169109967480083523L;\n \n@@ -173,7 +173,7 @@ public List<T> getSelectedList() {\n \n                         // reduce number of method calls by building a lookup table\n                         Map<T, String> idForChoice = choices.stream().collect(Collectors.toMap(\n-                                Function.identity(), choice -> renderer.getIdValue(choice, 0), (c1, c2) -> c1));\n+                            Function.identity(), choice -> renderer.getIdValue(choice, 0), (c1, c2) -> c1));\n \n                         List<T> selected = new ArrayList<>(choices.size());\n                         builder.idExtractor.apply(getValue()).forEach(id -> {\n@@ -205,8 +205,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             @Override\n             protected Map<String, String> getAdditionalAttributes(final Object choice) {\n                 return builder.additionalAttributes == null\n-                        ? super.getAdditionalAttributes(choice)\n-                        : builder.additionalAttributes.apply(choice);\n+                    ? super.getAdditionalAttributes(choice)\n+                    : builder.additionalAttributes.apply(choice);\n             }\n         };\n     }"},{"sha":"838ad5b8ec5d08021332a7703229f91796d3c796","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxSpinnerFieldPanel.java","status":"modified","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxSpinnerFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -59,7 +59,7 @@ private AjaxSpinnerFieldPanel(\n \n         super(id, name, model);\n \n-        field = new AjaxSpinner<T>(\"spinner\", model, options, reference) {\n+        field = new AjaxSpinner<>(\"spinner\", model, options, reference) {\n \n             private static final long serialVersionUID = -3624755213720060594L;\n \n@@ -93,7 +93,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n     @Override\n     public AjaxSpinnerFieldPanel<T> setNewModel(final List<Serializable> list) {\n-        setNewModel(new Model<T>() {\n+        setNewModel(new Model<>() {\n \n             private static final long serialVersionUID = 527651414610325237L;\n \n@@ -102,19 +102,19 @@ public T getObject() {\n                 T value = null;\n \n                 if (list != null && !list.isEmpty()\n-                        && list.get(0) != null && StringUtils.isNotBlank(list.get(0).toString())) {\n+                    && list.get(0) != null && StringUtils.isNotBlank(list.get(0).toString())) {\n \n                     value = reference.equals(Integer.class)\n-                            ? reference.cast(NumberUtils.toInt(list.get(0).toString()))\n-                            : reference.equals(Long.class)\n-                            ? reference.cast(NumberUtils.toLong(list.get(0).toString()))\n-                            : reference.equals(Short.class)\n-                            ? reference.cast(NumberUtils.toShort(list.get(0).toString()))\n-                            : reference.equals(Float.class)\n-                            ? reference.cast(NumberUtils.toFloat(list.get(0).toString()))\n-                            : reference.equals(byte.class)\n-                            ? reference.cast(NumberUtils.toByte(list.get(0).toString()))\n-                            : reference.cast(NumberUtils.toDouble(list.get(0).toString()));\n+                        ? reference.cast(NumberUtils.toInt(list.get(0).toString()))\n+                        : reference.equals(Long.class)\n+                        ? reference.cast(NumberUtils.toLong(list.get(0).toString()))\n+                        : reference.equals(Short.class)\n+                        ? reference.cast(NumberUtils.toShort(list.get(0).toString()))\n+                        : reference.equals(Float.class)\n+                        ? reference.cast(NumberUtils.toFloat(list.get(0).toString()))\n+                        : reference.equals(byte.class)\n+                        ? reference.cast(NumberUtils.toByte(list.get(0).toString()))\n+                        : reference.cast(NumberUtils.toDouble(list.get(0).toString()));\n                 }\n \n                 return value;\n@@ -135,7 +135,7 @@ public void setObject(final T object) {\n     @SuppressWarnings(\"rawtypes\")\n     @Override\n     public AjaxSpinnerFieldPanel<T> setNewModel(final ListItem item) {\n-        field.setModel(new Model<T>() {\n+        field.setModel(new Model<>() {\n \n             private static final long serialVersionUID = 6799404673615637845L;\n \n@@ -149,16 +149,16 @@ public T getObject() {\n                     if (obj instanceof String) {\n                         try {\n                             number = reference.equals(Integer.class)\n-                                    ? reference.cast(Integer.valueOf((String) obj))\n-                                    : reference.equals(Long.class)\n-                                    ? reference.cast(Long.valueOf((String) obj))\n-                                    : reference.equals(Short.class)\n-                                    ? reference.cast(Short.valueOf((String) obj))\n-                                    : reference.equals(Float.class)\n-                                    ? reference.cast(Float.valueOf((String) obj))\n-                                    : reference.equals(byte.class)\n-                                    ? reference.cast(Byte.valueOf((String) obj))\n-                                    : reference.cast(Double.valueOf((String) obj));\n+                                ? reference.cast(Integer.valueOf((String) obj))\n+                                : reference.equals(Long.class)\n+                                ? reference.cast(Long.valueOf((String) obj))\n+                                : reference.equals(Short.class)\n+                                ? reference.cast(Short.valueOf((String) obj))\n+                                : reference.equals(Float.class)\n+                                ? reference.cast(Float.valueOf((String) obj))\n+                                : reference.equals(byte.class)\n+                                ? reference.cast(Byte.valueOf((String) obj))\n+                                : reference.cast(Double.valueOf((String) obj));\n                         } catch (NumberFormatException e) {\n                             LOG.error(\"While attempting to parse {}\", obj, e);\n                         }"},{"sha":"19edf02a922abf4f63b89b271a488811fc16cc87","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -60,7 +60,7 @@ public AjaxTextFieldPanel(\n         settings.setShowListOnEmptyInput(true);\n         settings.setCssClassName(\"custom-autocomplete-box\");\n \n-        field = new AutoCompleteTextField<String>(\"textField\", model, settings) {\n+        field = new AutoCompleteTextField<>(\"textField\", model, settings) {\n \n             private static final long serialVersionUID = -6648767303091874219L;\n \n@@ -71,8 +71,8 @@ protected Iterator<String> getChoices(final String input) {\n \n             @Override\n             protected AutoCompleteBehavior<String> newAutoCompleteBehavior(\n-                    final IAutoCompleteRenderer<String> renderer, final AutoCompleteSettings settings) {\n-                return new IndicatorAutoCompleteBehavior<String>(renderer, settings) {\n+                final IAutoCompleteRenderer<String> renderer, final AutoCompleteSettings settings) {\n+                return new IndicatorAutoCompleteBehavior<>(renderer, settings) {\n \n                     private static final long serialVersionUID = 1070808433195962931L;\n "},{"sha":"0fc4207aad122c97f08814f7f603624d032d0347","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/DateFieldPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -46,7 +46,7 @@ protected DateFieldPanel(final String id, final String name, final IModel<Date>\n \n     @Override\n     public FieldPanel<Date> setNewModel(final List<Serializable> list) {\n-        setNewModel(new Model<Date>() {\n+        setNewModel(new Model<>() {\n \n             private static final long serialVersionUID = 527651414610325237L;\n \n@@ -80,7 +80,7 @@ public void setObject(final Date object) {\n     @SuppressWarnings(\"rawtypes\")\n     @Override\n     public FieldPanel<Date> setNewModel(final ListItem item) {\n-        IModel<Date> model = new Model<Date>() {\n+        IModel<Date> model = new Model<>() {\n \n             private static final long serialVersionUID = 6799404673615637845L;\n \n@@ -123,7 +123,7 @@ public void setObject(final Date object) {\n \n     @Override\n     public FieldPanel<Date> setNewModel(final Attributable attributable, final String schema) {\n-        field.setModel(new Model<Date>() {\n+        field.setModel(new Model<>() {\n \n             private static final long serialVersionUID = -4214654722524358000L;\n "},{"sha":"a26302e3307b3c3e55ec52adf9dac4a7b3f5f704","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/EncryptedFieldPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FEncryptedFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -37,13 +37,13 @@ public EncryptedFieldPanel(\n             final String id, final String name, final IModel<String> model, final boolean enableOnChange) {\n         super(id, name, model);\n \n-        field = new TextField<String>(\"encryptedField\", model) {\n+        field = new TextField<>(\"encryptedField\", model) {\n \n             private static final long serialVersionUID = 7545877620091912863L;\n \n             @Override\n             protected String[] getInputTypes() {\n-                return new String[] { \"password\" };\n+                return new String[]{\"password\"};\n             }\n         };\n "},{"sha":"3119be0d2629a82db609029b37e34ff9dfe9fc0f","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizard.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizard.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -107,7 +107,7 @@ public AjaxWizard(\n             model.setCancelVisible(false);\n         }\n \n-        add(new ListView<Component>(\"outerObjectsRepeater\", outerObjects) {\n+        add(new ListView<>(\"outerObjectsRepeater\", outerObjects) {\n \n             private static final long serialVersionUID = -9180479401817023838L;\n "},{"sha":"b5ec60840868cfc989585e4f0fcf67bf6e2a2cec","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/AjaxWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2FAjaxWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -90,7 +90,7 @@ public AjaxWizard<T> build(final String id, final AjaxWizard.Mode mode) {\n         // get the specified item if available\n         T modelObj = newModelObject();\n \n-        return new AjaxWizard<T>(id, modelObj, buildModelSteps(modelObj, new WizardModel()), mode, pageRef) {\n+        return new AjaxWizard<>(id, modelObj, buildModelSteps(modelObj, new WizardModel()), mode, pageRef) {\n \n             private static final long serialVersionUID = 7770507663760640735L;\n \n@@ -136,7 +136,7 @@ protected void sendWarning(final String message) {\n \n             @Override\n             protected Future<Pair<Serializable, Serializable>> execute(\n-                    final Callable<Pair<Serializable, Serializable>> future) {\n+                final Callable<Pair<Serializable, Serializable>> future) {\n                 return AjaxWizardBuilder.this.execute(future);\n             }\n         }.setEventSink(eventSink).addOuterObject(outerObjects);"},{"sha":"47c265f335dbec7c670ad64a51940c239bde7ed7","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/wizards/any/AbstractResources.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fwizards%2Fany%2FAbstractResources.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -53,20 +53,20 @@ public <T extends AnyTO> AbstractResources(final AnyWrapper<T> modelObject) {\n         this.available = new ListModel<>(List.of());\n \n         add(new AjaxPalettePanel.Builder<String>().build(\"resources\",\n-                new PropertyModel<List<String>>(entityTO, \"resources\") {\n+            new PropertyModel<>(entityTO, \"resources\") {\n \n-            private static final long serialVersionUID = 3799387950428254072L;\n+                private static final long serialVersionUID = 3799387950428254072L;\n \n-            @Override\n-            public List<String> getObject() {\n-                return new ArrayList<>(entityTO.getResources());\n-            }\n+                @Override\n+                public List<String> getObject() {\n+                    return new ArrayList<>(entityTO.getResources());\n+                }\n \n-            @Override\n-            public void setObject(final List<String> object) {\n-                entityTO.getResources().clear();\n-                entityTO.getResources().addAll(object);\n-            }\n-        }, available).hideLabel().setOutputMarkupId(true));\n+                @Override\n+                public void setObject(final List<String> object) {\n+                    entityTO.getResources().clear();\n+                    entityTO.getResources().addAll(object);\n+                }\n+            }, available).hideLabel().setOutputMarkupId(true));\n     }\n }"},{"sha":"680f4cafd2ba052da713de0c63a8e5753a9bb328","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/PreferenceManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FPreferenceManager.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -47,7 +47,7 @@ public final class PreferenceManager implements Serializable {\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n-    private static final TypeReference<Map<String, String>> MAP_TYPE_REF = new TypeReference<Map<String, String>>() {\n+    private static final TypeReference<Map<String, String>> MAP_TYPE_REF = new TypeReference<>() {\n     };\n \n     private static final List<Integer> PAGINATOR_CHOICES = List.of(10, 25, 50);"},{"sha":"5911ecc96ece5e90948f549817fe38b448f34fd6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDetails.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDetails.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -84,16 +84,16 @@ public void onSubmit(final AjaxRequestTarget target) {\n             }\n         });\n \n-        AjaxLink<Void> restore = new AjaxLink<Void>(\"restore\") {\n+        AjaxLink<Void> restore = new AjaxLink<>(\"restore\") {\n \n             private static final long serialVersionUID = -817438685948164787L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n                     String json = selected.getBefore() == null\n-                            ? MAPPER.readTree(selected.getOutput()).get(\"entity\").toPrettyString()\n-                            : selected.getBefore();\n+                        ? MAPPER.readTree(selected.getOutput()).get(\"entity\").toPrettyString()\n+                        : selected.getBefore();\n                     restore(json, target);\n \n                     mlp.prev(target);"},{"sha":"a12138b5b543701c0c5fd6d174ba9a3682e29c5d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/audit/AuditHistoryDirectoryPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Faudit%2FAuditHistoryDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -123,7 +123,7 @@ protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<AuditEn\n     protected ActionsPanel<AuditEntry> getActions(final IModel<AuditEntry> model) {\n         final ActionsPanel<AuditEntry> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<AuditEntry>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -6745431735457245600L;\n \n@@ -132,16 +132,16 @@ public void onClick(final AjaxRequestTarget target, final AuditEntry modelObject\n                 AuditHistoryDirectoryPanel.this.getTogglePanel().close(target);\n \n                 mlp.next(\n-                        new StringResourceModel(\"audit.diff.view\", AuditHistoryDirectoryPanel.this).getObject(),\n-                        new AuditHistoryDetails<T>(mlp, modelObject, entity, auditRestoreEntitlement) {\n+                    new StringResourceModel(\"audit.diff.view\", AuditHistoryDirectoryPanel.this).getObject(),\n+                    new AuditHistoryDetails<T>(mlp, modelObject, entity, auditRestoreEntitlement) {\n \n-                    private static final long serialVersionUID = -5311898419151367494L;\n+                        private static final long serialVersionUID = -5311898419151367494L;\n \n-                    @Override\n-                    protected void restore(final String json, final AjaxRequestTarget target) {\n-                        AuditHistoryDirectoryPanel.this.restore(json, target);\n-                    }\n-                }, target);\n+                        @Override\n+                        protected void restore(final String json, final AjaxRequestTarget target) {\n+                            AuditHistoryDirectoryPanel.this.restore(json, target);\n+                        }\n+                    }, target);\n \n                 target.add(modal);\n             }"},{"sha":"9f20b2aeb7f68b348bd020757094fefacd8a5567","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/batch/BatchContent.java","status":"modified","additions":49,"deletions":49,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -110,7 +110,7 @@ public BatchContent(\n         setup(items, columns);\n \n         for (ActionLink.ActionType action : actions) {\n-            actionPanel.add(new ActionLink<Serializable>() {\n+            actionPanel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -137,7 +137,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n                                 try {\n                                     batchExecutor.getClass().getMethod(\"deleteExecution\", String.class).\n-                                            invoke(batchExecutor, exec.getKey());\n+                                        invoke(batchExecutor, exec.getKey());\n                                     results.put(exec.getKey(), ExecStatus.SUCCESS.name());\n                                 } catch (Exception e) {\n                                     LOG.error(\"Error deleting execution {}\", exec.getKey(), e);\n@@ -150,16 +150,16 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             // Group bean information by anyKey\n                             Map<String, List<StatusBean>> beans = new HashMap<>();\n                             items.stream().map(StatusBean.class::cast).\n-                                    forEachOrdered(sb -> {\n-                                        final List<StatusBean> sblist;\n-                                        if (beans.containsKey(sb.getKey())) {\n-                                            sblist = beans.get(sb.getKey());\n-                                        } else {\n-                                            sblist = new ArrayList<>();\n-                                            beans.put(sb.getKey(), sblist);\n-                                        }\n-                                        sblist.add(sb);\n-                                    });\n+                                forEachOrdered(sb -> {\n+                                    final List<StatusBean> sblist;\n+                                    if (beans.containsKey(sb.getKey())) {\n+                                        sblist = beans.get(sb.getKey());\n+                                    } else {\n+                                        sblist = new ArrayList<>();\n+                                        beans.put(sb.getKey(), sblist);\n+                                    }\n+                                    sblist.add(sb);\n+                                });\n \n                             results = new HashMap<>();\n                             beans.forEach((key, value) -> {\n@@ -168,32 +168,32 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 switch (action) {\n                                     case DEPROVISION:\n                                         results.putAll(anyRestClient.deassociate(\n-                                                ResourceDeassociationAction.DEPROVISION, etag, key, value));\n+                                            ResourceDeassociationAction.DEPROVISION, etag, key, value));\n                                         break;\n \n                                     case UNASSIGN:\n                                         results.putAll(anyRestClient.deassociate(\n-                                                ResourceDeassociationAction.UNASSIGN, etag, key, value));\n+                                            ResourceDeassociationAction.UNASSIGN, etag, key, value));\n                                         break;\n \n                                     case UNLINK:\n                                         results.putAll(anyRestClient.deassociate(\n-                                                ResourceDeassociationAction.UNLINK, etag, key, value));\n+                                            ResourceDeassociationAction.UNLINK, etag, key, value));\n                                         break;\n \n                                     case ASSIGN:\n                                         results.putAll(anyRestClient.associate(\n-                                                ResourceAssociationAction.ASSIGN, etag, key, value));\n+                                            ResourceAssociationAction.ASSIGN, etag, key, value));\n                                         break;\n \n                                     case LINK:\n                                         results.putAll(anyRestClient.associate(\n-                                                ResourceAssociationAction.LINK, etag, key, value));\n+                                            ResourceAssociationAction.LINK, etag, key, value));\n                                         break;\n \n                                     case PROVISION:\n                                         results.putAll(anyRestClient.associate(\n-                                                ResourceAssociationAction.PROVISION, etag, key, value));\n+                                            ResourceAssociationAction.PROVISION, etag, key, value));\n                                         break;\n \n                                     case SUSPEND:\n@@ -214,10 +214,10 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             GroupService batchGroupService = batch.getService(GroupService.class);\n                             AnyObjectService batchAnyObjectService = batch.getService(AnyObjectService.class);\n                             AnyService<?> batchAnyService = singleItem instanceof UserTO\n-                                    ? batchUserService\n-                                    : singleItem instanceof GroupTO\n-                                            ? batchGroupService\n-                                            : batchAnyObjectService;\n+                                ? batchUserService\n+                                : singleItem instanceof GroupTO\n+                                ? batchGroupService\n+                                : batchAnyObjectService;\n                             TaskService batchTaskService = batch.getService(TaskService.class);\n                             ReportService batchReportService = batch.getService(ReportService.class);\n \n@@ -231,7 +231,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                         UserUR req = new UserUR();\n                                         req.setKey(user.getKey());\n                                         req.setMustChangePassword(new BooleanReplacePatchItem.Builder().\n-                                                value(!user.isMustChangePassword()).build());\n+                                            value(!user.isMustChangePassword()).build());\n \n                                         batchUserService.update(req);\n                                     });\n@@ -242,11 +242,11 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                         UserTO user = (UserTO) item;\n \n                                         StatusR req = new StatusR.Builder().\n-                                                key(user.getKey()).\n-                                                type(StatusRType.SUSPEND).\n-                                                onSyncope(true).\n-                                                resources(user.getResources()).\n-                                                build();\n+                                            key(user.getKey()).\n+                                            type(StatusRType.SUSPEND).\n+                                            onSyncope(true).\n+                                            resources(user.getResources()).\n+                                            build();\n \n                                         batchUserService.status(req);\n                                     });\n@@ -257,11 +257,11 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                         UserTO user = (UserTO) item;\n \n                                         StatusR req = new StatusR.Builder().\n-                                                key(user.getKey()).\n-                                                type(StatusRType.REACTIVATE).\n-                                                onSyncope(true).\n-                                                resources(user.getResources()).\n-                                                build();\n+                                            key(user.getKey()).\n+                                            type(StatusRType.REACTIVATE).\n+                                            onSyncope(true).\n+                                            resources(user.getResources()).\n+                                            build();\n \n                                         batchUserService.status(req);\n                                     });\n@@ -278,8 +278,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                             TaskTO task = (TaskTO) item;\n \n                                             batchTaskService.delete(\n-                                                    TaskType.fromTOClass(task.getClass()),\n-                                                    task.getKey());\n+                                                TaskType.fromTOClass(task.getClass()),\n+                                                task.getKey());\n                                         } else if (singleItem instanceof ReportTO) {\n                                             ReportTO report = (ReportTO) item;\n \n@@ -296,7 +296,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                         TaskTO task = (TaskTO) item;\n \n                                         batchTaskService.execute(\n-                                                new ExecuteQuery.Builder().dryRun(true).key(task.getKey()).build());\n+                                            new ExecuteQuery.Builder().dryRun(true).key(task.getKey()).build());\n                                     });\n                                     break;\n \n@@ -306,12 +306,12 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                             TaskTO task = (TaskTO) item;\n \n                                             batchTaskService.execute(new ExecuteQuery.Builder().\n-                                                    dryRun(false).key(task.getKey()).build());\n+                                                dryRun(false).key(task.getKey()).build());\n                                         } else if (singleItem instanceof ReportTO) {\n                                             ReportTO report = (ReportTO) item;\n \n                                             batchReportService.execute(new ExecuteQuery.Builder().\n-                                                    key(report.getKey()).build());\n+                                                key(report.getKey()).build());\n                                         }\n                                     });\n                                     break;\n@@ -320,15 +320,15 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             }\n \n                             results = CastUtils.cast(Map.class.cast(\n-                                    batchExecutor.getClass().getMethod(\"batch\",\n-                                            BatchRequest.class).invoke(batchExecutor, batch)));\n+                                batchExecutor.getClass().getMethod(\"batch\",\n+                                    BatchRequest.class).invoke(batchExecutor, batch)));\n \n                             if (singleItem instanceof AnyTO) {\n                                 AbstractAnyRestClient<? extends AnyTO> anyRestClient = singleItem instanceof UserTO\n-                                        ? UserRestClient.class.cast(batchExecutor)\n-                                        : singleItem instanceof GroupTO\n-                                                ? GroupRestClient.class.cast(batchExecutor)\n-                                                : AnyObjectRestClient.class.cast(batchExecutor);\n+                                    ? UserRestClient.class.cast(batchExecutor)\n+                                    : singleItem instanceof GroupTO\n+                                    ? GroupRestClient.class.cast(batchExecutor)\n+                                    : AnyObjectRestClient.class.cast(batchExecutor);\n                                 for (int i = 0; i < items.size(); i++) {\n                                     String key = ((AnyTO) items.get(i)).getKey();\n                                     if (!deletedAnys.contains(key)) {\n@@ -342,10 +342,10 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         newColumnList.add(newColumnList.size(), new BatchResponseColumn<>(results, keyFieldName));\n \n                         container.addOrReplace(new AjaxFallbackDefaultDataTable<>(\n-                                \"selectedObjects\",\n-                                newColumnList,\n-                                dataProvider,\n-                                Integer.MAX_VALUE).setVisible(!items.isEmpty()));\n+                            \"selectedObjects\",\n+                            newColumnList,\n+                            dataProvider,\n+                            Integer.MAX_VALUE).setVisible(!items.isEmpty()));\n \n                         actionPanel.setEnabled(false);\n                         actionPanel.setVisible(false);\n@@ -395,7 +395,7 @@ private void setup(\n         container.setOutputMarkupId(true);\n         add(container);\n \n-        dataProvider = new SortableDataProvider<T, S>() {\n+        dataProvider = new SortableDataProvider<>() {\n \n             private static final long serialVersionUID = 5291903859908641954L;\n "},{"sha":"a95f03d0ccc9726c49e041431e5b0a6da12e65bd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoImplementationInfoProvider.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoImplementationInfoProvider.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -157,21 +157,21 @@ public Class<?> getClass(final String implementationType, final String name) {\n \n     @Override\n     public IModel<List<String>> getTaskJobDelegates() {\n-        return new LoadableDetachableModel<List<String>>() {\n+        return new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdRepoImplementationType.TASKJOB_DELEGATE).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n     }\n \n     @Override\n     public IModel<List<String>> getReconFilterBuilders() {\n-        return new LoadableDetachableModel<List<String>>() {\n+        return new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -184,7 +184,7 @@ protected List<String> load() {\n \n     @Override\n     public IModel<List<String>> getPullActions() {\n-        return new LoadableDetachableModel<List<String>>() {\n+        return new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -197,7 +197,7 @@ protected List<String> load() {\n \n     @Override\n     public IModel<List<String>> getPushActions() {\n-        return new LoadableDetachableModel<List<String>>() {\n+        return new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n "},{"sha":"1e6737043b98cde72257a1d1f51802ed74a73d66","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoRealmPolicyProvider.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -38,25 +38,25 @@ public class IdRepoRealmPolicyProvider implements RealmPolicyProvider {\n \n     private static final long serialVersionUID = 1L;\n \n-    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ACCOUNT).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n \n-    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<Map<String, String>>() {\n+    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.PASSWORD).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n         }\n     };\n "},{"sha":"cbad77a3150d1bfc7e7eb372a9818ce9ace79952","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/events/EventCategoryPanel.java","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -107,7 +107,7 @@ public EventCategoryPanel(\n                 new PropertyModel<>(eventCategoryTO, \"type\"),\n                 false);\n         type.setChoices(List.of(EventCategoryType.values()));\n-        type.setChoiceRenderer(new IChoiceRenderer<EventCategoryType>() {\n+        type.setChoiceRenderer(new IChoiceRenderer<>() {\n \n             private static final long serialVersionUID = 2317134950949778735L;\n \n@@ -123,7 +123,7 @@ public String getIdValue(final EventCategoryType eventCategoryType, final int i)\n \n             @Override\n             public EventCategoryType getObject(\n-                    final String id, final IModel<? extends List<? extends EventCategoryType>> choices) {\n+                final String id, final IModel<? extends List<? extends EventCategoryType>> choices) {\n                 return choices.getObject().stream().filter(object -> object.name().equals(id)).findAny().orElse(null);\n             }\n         });\n@@ -184,56 +184,56 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         categoryContainer.add(custom.hideLabel());\n \n         actionsPanel = new ActionsPanel<>(\"customActions\", null);\n-        actionsPanel.add(new ActionLink<EventCategory>() {\n+        actionsPanel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final EventCategory ignore) {\n                 if (StringUtils.isNotBlank(custom.getModelObject())) {\n                     Pair<EventCategory, AuditElements.Result> parsed = AuditLoggerName.parseEventCategory(custom.\n-                            getModelObject());\n+                        getModelObject());\n \n                     String eventString = AuditLoggerName.buildEvent(\n-                            parsed.getKey().getType(),\n-                            null,\n-                            null,\n-                            parsed.getKey().getEvents().isEmpty()\n+                        parsed.getKey().getType(),\n+                        null,\n+                        null,\n+                        parsed.getKey().getEvents().isEmpty()\n                             ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n-                            parsed.getValue());\n+                        parsed.getValue());\n \n                     custom.setModelObject(StringUtils.EMPTY);\n                     send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n-                            target,\n-                            Set.of(eventString),\n-                            Set.of()));\n+                        target,\n+                        Set.of(eventString),\n+                        Set.of()));\n                     target.add(categoryContainer);\n                 }\n             }\n         }, ActionLink.ActionType.CREATE, StringUtils.EMPTY).hideLabel();\n-        actionsPanel.add(new ActionLink<EventCategory>() {\n+        actionsPanel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435521L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final EventCategory ignore) {\n                 if (StringUtils.isNotBlank(custom.getModelObject())) {\n                     Pair<EventCategory, AuditElements.Result> parsed = AuditLoggerName.parseEventCategory(custom.\n-                            getModelObject());\n+                        getModelObject());\n \n                     String eventString = AuditLoggerName.buildEvent(\n-                            parsed.getKey().getType(),\n-                            null,\n-                            null,\n-                            parsed.getKey().getEvents().isEmpty()\n+                        parsed.getKey().getType(),\n+                        null,\n+                        null,\n+                        parsed.getKey().getEvents().isEmpty()\n                             ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n-                            parsed.getValue());\n+                        parsed.getValue());\n \n                     custom.setModelObject(StringUtils.EMPTY);\n                     send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n-                            target,\n-                            Set.of(),\n-                            Set.of(eventString)));\n+                        target,\n+                        Set.of(),\n+                        Set.of(eventString)));\n                     target.add(categoryContainer);\n                 }\n             }"},{"sha":"ab43d8b3060b0b5d881471181a6f54da42d4fb1f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/events/EventSelectionPanel.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventSelectionPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -95,7 +95,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         successSelector.setVisible(!events.isEmpty());\n         add(successSelector);\n \n-        ListView<String> categoryView = new ListView<String>(\"categoryView\", events) {\n+        ListView<String> categoryView = new ListView<>(\"categoryView\", events) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n@@ -106,20 +106,20 @@ protected void populateItem(final ListItem<String> item) {\n         };\n         add(categoryView);\n \n-        ListView<String> successView = new ListView<String>(\"successView\", events) {\n+        ListView<String> successView = new ListView<>(\"successView\", events) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n                 item.add(new Check<>(\"successCheck\",\n-                        new Model<>(AuditLoggerName.buildEvent(\n-                                eventCategoryTO.getType(),\n-                                eventCategoryTO.getCategory(),\n-                                eventCategoryTO.getSubcategory(),\n-                                item.getModelObject(),\n-                                AuditElements.Result.SUCCESS)),\n-                        successGroup));\n+                    new Model<>(AuditLoggerName.buildEvent(\n+                        eventCategoryTO.getType(),\n+                        eventCategoryTO.getCategory(),\n+                        eventCategoryTO.getSubcategory(),\n+                        item.getModelObject(),\n+                        AuditElements.Result.SUCCESS)),\n+                    successGroup));\n             }\n         };\n         successGroup.add(successView);\n@@ -162,20 +162,20 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         failureSelector.setVisible(!events.isEmpty());\n         add(failureSelector);\n \n-        ListView<String> failureView = new ListView<String>(\"failureView\", events) {\n+        ListView<String> failureView = new ListView<>(\"failureView\", events) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n                 item.add(new Check<>(\"failureCheck\",\n-                        new Model<>(AuditLoggerName.buildEvent(\n-                                eventCategoryTO.getType(),\n-                                eventCategoryTO.getCategory(),\n-                                eventCategoryTO.getSubcategory(),\n-                                item.getModelObject(),\n-                                AuditElements.Result.FAILURE)),\n-                        failureGroup));\n+                    new Model<>(AuditLoggerName.buildEvent(\n+                        eventCategoryTO.getType(),\n+                        eventCategoryTO.getCategory(),\n+                        eventCategoryTO.getSubcategory(),\n+                        item.getModelObject(),\n+                        AuditElements.Result.FAILURE)),\n+                    failureGroup));\n             }\n         };\n         failureGroup.add(failureView);"},{"sha":"b3c40091bcb403ccff3e782d8e419cf7b7a2cc4c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/events/SelectedEventsPanel.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FSelectedEventsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -51,20 +51,20 @@ public SelectedEventsPanel(final String id, final IModel<List<String>> model) {\n         add(selectionContainer);\n \n         ListMultipleChoice<String> selectedEvents =\n-                new ListMultipleChoice<String>(\"selectedEvents\", new ListModel<String>(), model) {\n-\n-            private static final long serialVersionUID = 1226677544225737338L;\n-\n-            @Override\n-            protected void onComponentTag(final ComponentTag tag) {\n-                super.onComponentTag(tag);\n-                tag.remove(\"size\");\n-                tag.remove(\"multiple\");\n-                tag.put(\"size\", 5);\n-            }\n-        };\n+            new ListMultipleChoice<>(\"selectedEvents\", new ListModel<>(), model) {\n+\n+                private static final long serialVersionUID = 1226677544225737338L;\n+\n+                @Override\n+                protected void onComponentTag(final ComponentTag tag) {\n+                    super.onComponentTag(tag);\n+                    tag.remove(\"size\");\n+                    tag.remove(\"multiple\");\n+                    tag.put(\"size\", 5);\n+                }\n+            };\n         selectedEvents.setMaxRows(5);\n-        selectedEvents.setChoiceRenderer(new IChoiceRenderer<String>() {\n+        selectedEvents.setChoiceRenderer(new IChoiceRenderer<>() {\n \n             private static final long serialVersionUID = -4288397951948436434L;\n "},{"sha":"4088e902abf6cf6953c8081d95b40bdad16d4c57","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -112,16 +112,16 @@ protected List<IColumn<MailTemplateTO, String>> getColumns() {\n     public ActionsPanel<MailTemplateTO> getActions(final IModel<MailTemplateTO> model) {\n         final ActionsPanel<MailTemplateTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<MailTemplateTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n                 TemplateContent<MailTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n-                        MailTemplateFormat.HTML);\n+                    MailTemplateFormat.HTML);\n                 content.setContent(\n-                        restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.HTML));\n+                    restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.HTML));\n \n                 utilityModal.header(new ResourceModel(\"mail.template.html\", \"HTML Content\"));\n                 utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n@@ -130,16 +130,16 @@ public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore)\n             }\n         }, ActionLink.ActionType.HTML, IdRepoEntitlement.MAIL_TEMPLATE_UPDATE);\n \n-        panel.add(new ActionLink<MailTemplateTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n                 TemplateContent<MailTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n-                        MailTemplateFormat.TEXT);\n+                    MailTemplateFormat.TEXT);\n                 content.setContent(\n-                        restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.TEXT));\n+                    restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.TEXT));\n \n                 utilityModal.header(new ResourceModel(\"mail.template.text\", \"TEXT Content\"));\n                 utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n@@ -148,7 +148,7 @@ public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore)\n             }\n         }, ActionLink.ActionType.TEXT, IdRepoEntitlement.MAIL_TEMPLATE_UPDATE);\n \n-        panel.add(new ActionLink<MailTemplateTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -210,7 +210,7 @@ public long size() {\n \n         @Override\n         public IModel<MailTemplateTO> model(final MailTemplateTO mailTemplateTO) {\n-            return new IModel<MailTemplateTO>() {\n+            return new IModel<>() {\n \n                 private static final long serialVersionUID = 774694801558497248L;\n \n@@ -232,7 +232,7 @@ private class TemplateContentEditorPanel extends XMLEditorPanel {\n                 final TemplateContent<MailTemplateFormat> content,\n                 final PageReference pageRef) {\n \n-            super(utilityModal, new PropertyModel<String>(content, \"content\"), false, pageRef);\n+            super(utilityModal, new PropertyModel<>(content, \"content\"), false, pageRef);\n             this.content = content;\n         }\n "},{"sha":"2e10c15ab9137a72199857d6e615add38e229cd4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -101,34 +101,34 @@ protected List<IColumn<NotificationTO, String>> getColumns() {\n     public ActionsPanel<NotificationTO> getActions(final IModel<NotificationTO> model) {\n         final ActionsPanel<NotificationTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<NotificationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n                 send(NotificationDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                new NotificationWrapper(\n-                                        NotificationRestClient.read(model.getObject().getKey())), target));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        new NotificationWrapper(\n+                            NotificationRestClient.read(model.getObject().getKey())), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.NOTIFICATION_UPDATE);\n \n-        panel.add(new ActionLink<NotificationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n                 target.add(utilityModal.setContent(\n-                        new NotificationTasks(model.getObject().getKey(), pageRef)));\n+                    new NotificationTasks(model.getObject().getKey(), pageRef)));\n                 utilityModal.header(new StringResourceModel(\"notification.tasks\", model));\n                 utilityModal.show(true);\n                 target.add(utilityModal);\n             }\n         }, ActionLink.ActionType.NOTIFICATION_TASKS, IdRepoEntitlement.TASK_LIST);\n \n-        panel.add(new ActionLink<NotificationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -191,7 +191,7 @@ public long size() {\n \n         @Override\n         public IModel<NotificationTO> model(final NotificationTO notification) {\n-            return new IModel<NotificationTO>() {\n+            return new IModel<>() {\n \n                 private static final long serialVersionUID = 774694801558497248L;\n "},{"sha":"98a276204a83c1519793ace386007f89c58dc72e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -166,7 +166,7 @@ public Events(final NotificationWrapper modelObject) {\n             add(new EventCategoryPanel(\n                     \"eventSelection\",\n                     AuditRestClient.listEvents(),\n-                    new PropertyModel<List<String>>(modelObject.getInnerObject(), \"events\")) {\n+                new PropertyModel<>(modelObject.getInnerObject(), \"events\")) {\n \n                 private static final long serialVersionUID = 6429053774964787735L;\n \n@@ -192,7 +192,7 @@ public About(final String id, final IModel<Pair<String, List<SearchClause>>> mod\n             setOutputMarkupId(true);\n \n             AjaxDropDownChoicePanel<String> type =\n-                    new AjaxDropDownChoicePanel<>(\"about\", \"anyType\", new Model<String>() {\n+                    new AjaxDropDownChoicePanel<>(\"about\", \"anyType\", new Model<>() {\n \n                         private static final long serialVersionUID = -2350296434572623272L;\n \n@@ -211,7 +211,7 @@ public void setObject(final String object) {\n             type.addRequiredLabel();\n             add(type);\n \n-            ListModel<SearchClause> clauseModel = new ListModel<SearchClause>() {\n+            ListModel<SearchClause> clauseModel = new ListModel<>() {\n \n                 private static final long serialVersionUID = 3769540249683319782L;\n \n@@ -280,7 +280,7 @@ public Abouts(final NotificationWrapper modelObject) {\n \n             IModel<List<Pair<String, List<SearchClause>>>> model = new PropertyModel<>(modelObject, \"aboutClauses\");\n \n-            aboutContainer.add(new MultiPanel<Pair<String, List<SearchClause>>>(\"abouts\", \"abouts\", model) {\n+            aboutContainer.add(new MultiPanel<>(\"abouts\", \"abouts\", model) {\n \n                 private static final long serialVersionUID = -2481579077338205547L;\n \n@@ -292,7 +292,7 @@ protected Pair<String, List<SearchClause>> newModelObject() {\n                 @Override\n                 protected About getItemPanel(final ListItem<Pair<String, List<SearchClause>>> item) {\n \n-                    return new About(\"panel\", new Model<Pair<String, List<SearchClause>>>() {\n+                    return new About(\"panel\", new Model<>() {\n \n                         private static final long serialVersionUID = 6799404673615637845L;\n \n@@ -325,14 +325,14 @@ public static class Recipients extends WizardStep {\n \n         private static final long serialVersionUID = -7709805590497687958L;\n \n-        private final IModel<List<String>> recipientProviders = new LoadableDetachableModel<List<String>>() {\n+        private final IModel<List<String>> recipientProviders = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157447L;\n \n             @Override\n             protected List<String> load() {\n                 return ImplementationRestClient.list(IdRepoImplementationType.RECIPIENTS_PROVIDER).stream().\n-                        map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n             }\n         };\n "},{"sha":"49150750506842bd5ae5b451ecdaf80fa85b4283","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":43,"deletions":43,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -114,20 +114,20 @@ public BasePage(final PageParameters parameters) {\n         body.add(new Label(\"os\", systemInfo.getOs()));\n         body.add(new Label(\"jvm\", systemInfo.getJvm()));\n \n-        Link<Void> dbExportLink = new Link<Void>(\"dbExportLink\") {\n+        Link<Void> dbExportLink = new Link<>(\"dbExportLink\") {\n \n             private static final long serialVersionUID = -4331619903296515985L;\n \n             @Override\n             public void onClick() {\n                 try {\n                     HttpResourceStream stream = new HttpResourceStream(\n-                            new ResponseHolder(SyncopeRestClient.exportInternalStorageContent()));\n+                        new ResponseHolder(SyncopeRestClient.exportInternalStorageContent()));\n \n                     ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);\n                     rsrh.setFileName(stream.getFilename() == null\n-                            ? SyncopeConsoleSession.get().getDomain() + \"Content.xml\"\n-                            : stream.getFilename());\n+                        ? SyncopeConsoleSession.get().getDomain() + \"Content.xml\"\n+                        : stream.getFilename());\n                     rsrh.setContentDisposition(ContentDisposition.ATTACHMENT);\n                     rsrh.setCacheDuration(Duration.ZERO);\n \n@@ -160,8 +160,8 @@ public void onClick() {\n         liContainer.add(link);\n \n         List<Class<? extends BasePage>> idmPageClasses = SyncopeWebApplication.get().getLookup().getIdMPageClasses();\n-        ListView<Class<? extends BasePage>> idmPages = new ListView<Class<? extends BasePage>>(\n-                \"idmPages\", idmPageClasses) {\n+        ListView<Class<? extends BasePage>> idmPages = new ListView<>(\n+            \"idmPages\", idmPageClasses) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n@@ -200,8 +200,8 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         body.add(idmPages);\n \n         List<Class<? extends BasePage>> amPageClasses = SyncopeWebApplication.get().getLookup().getAMPageClasses();\n-        ListView<Class<? extends BasePage>> amPages = new ListView<Class<? extends BasePage>>(\n-                \"amPages\", amPageClasses) {\n+        ListView<Class<? extends BasePage>> amPages = new ListView<>(\n+            \"amPages\", amPageClasses) {\n \n             private static final long serialVersionUID = -9112553137618363167L;\n \n@@ -335,7 +335,7 @@ public void onClick(final AjaxRequestTarget target) {\n         body.add(delegationsContainer.setOutputMarkupPlaceholderTag(true).\n                 setVisible(!SyncopeConsoleSession.get().getDelegations().isEmpty()));\n         delegationsContainer.add(new Label(\"delegationsHeader\", new ResourceModel(\"delegations\")));\n-        delegationsContainer.add(new ListView<String>(\"delegations\", SyncopeConsoleSession.get().getDelegations()) {\n+        delegationsContainer.add(new ListView<>(\"delegations\", SyncopeConsoleSession.get().getDelegations()) {\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n@@ -466,16 +466,16 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         // Extensions\n         List<Class<? extends ExtAlertWidget<?>>> extAlertWidgetClasses =\n                 SyncopeWebApplication.get().getLookup().getExtAlertWidgetClasses();\n-        ListView<Class<? extends ExtAlertWidget<?>>> extAlertWidgets = new ListView<Class<? extends ExtAlertWidget<?>>>(\n-                \"extAlertWidgets\", extAlertWidgetClasses) {\n+        ListView<Class<? extends ExtAlertWidget<?>>> extAlertWidgets = new ListView<>(\n+            \"extAlertWidgets\", extAlertWidgetClasses) {\n \n             private static final long serialVersionUID = -9112553137618363167L;\n \n             @Override\n             protected void populateItem(final ListItem<Class<? extends ExtAlertWidget<?>>> item) {\n                 try {\n                     Constructor<? extends ExtAlertWidget<?>> constructor =\n-                            item.getModelObject().getDeclaredConstructor(String.class, PageReference.class);\n+                        item.getModelObject().getDeclaredConstructor(String.class, PageReference.class);\n                     ExtAlertWidget<?> widget = constructor.newInstance(\"extAlertWidget\", getPageReference());\n \n                     SyncopeConsoleSession.get().setAttribute(widget.getClass().getName(), widget);\n@@ -497,46 +497,46 @@ protected void populateItem(final ListItem<Class<? extends ExtAlertWidget<?>>> i\n         body.add(extensionsLI);\n \n         ListView<Class<? extends BaseExtPage>> extPages =\n-                new ListView<Class<? extends BaseExtPage>>(\"extPages\", extPageClasses) {\n+            new ListView<>(\"extPages\", extPageClasses) {\n \n-            private static final long serialVersionUID = 4949588177564901031L;\n+                private static final long serialVersionUID = 4949588177564901031L;\n \n-            @Override\n-            protected void populateItem(final ListItem<Class<? extends BaseExtPage>> item) {\n-                WebMarkupContainer containingLI = new WebMarkupContainer(\"extPageLI\");\n-                item.add(containingLI);\n+                @Override\n+                protected void populateItem(final ListItem<Class<? extends BaseExtPage>> item) {\n+                    WebMarkupContainer containingLI = new WebMarkupContainer(\"extPageLI\");\n+                    item.add(containingLI);\n \n-                ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n+                    ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n \n-                BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n-                link.add(new Label(\"extPageLabel\", ann.label()));\n-                if (StringUtils.isNotBlank(ann.listEntitlement())) {\n-                    MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, ann.listEntitlement());\n-                }\n-                if (item.getModelObject().equals(BasePage.this.getClass())) {\n-                    link.add(new Behavior() {\n+                    BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n+                    link.add(new Label(\"extPageLabel\", ann.label()));\n+                    if (StringUtils.isNotBlank(ann.listEntitlement())) {\n+                        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.RENDER, ann.listEntitlement());\n+                    }\n+                    if (item.getModelObject().equals(BasePage.this.getClass())) {\n+                        link.add(new Behavior() {\n \n-                        private static final long serialVersionUID = 1469628524240283489L;\n+                            private static final long serialVersionUID = 1469628524240283489L;\n \n-                        @Override\n-                        public void renderHead(final Component component, final IHeaderResponse response) {\n-                            response.render(OnDomReadyHeaderItem.forScript(\n+                            @Override\n+                            public void renderHead(final Component component, final IHeaderResponse response) {\n+                                response.render(OnDomReadyHeaderItem.forScript(\n                                     \"$('#extensionsLink').addClass('active')\"));\n-                        }\n+                            }\n \n-                        @Override\n-                        public void onComponentTag(final Component component, final ComponentTag tag) {\n-                            tag.append(\"class\", \"active\", \" \");\n-                        }\n-                    });\n-                }\n-                containingLI.add(link);\n+                            @Override\n+                            public void onComponentTag(final Component component, final ComponentTag tag) {\n+                                tag.append(\"class\", \"active\", \" \");\n+                            }\n+                        });\n+                    }\n+                    containingLI.add(link);\n \n-                Label extPageIcon = new Label(\"extPageIcon\");\n-                extPageIcon.add(new AttributeModifier(\"class\", \"nav-icon \" + ann.icon()));\n-                link.add(extPageIcon);\n-            }\n-        };\n+                    Label extPageIcon = new Label(\"extPageIcon\");\n+                    extPageIcon.add(new AttributeModifier(\"class\", \"nav-icon \" + ann.icon()));\n+                    link.add(extPageIcon);\n+                }\n+            };\n         extPages.setRenderBodyOnly(true);\n         extPages.setOutputMarkupId(true);\n         extensionsLI.add(extPages);"},{"sha":"1f2b18b653bd1f8e16ca34f84aa156d104522df7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -96,7 +96,7 @@ protected Serializable onApplyInternal(\n \n         content.add(templates);\n \n-        templateModal = new BaseModal<Serializable>(\"templateModal\") {\n+        templateModal = new BaseModal<>(\"templateModal\") {\n \n             private static final long serialVersionUID = 5787433530654262016L;\n "},{"sha":"e235ccc438f9fc25d9b0a32f18d5117b3959fa3a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AccessTokenDirectoryPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -89,20 +89,20 @@ protected List<IColumn<AccessTokenTO, String>> getColumns() {\n \n         columns.add(new PropertyColumn<>(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n \n-        columns.add(new AbstractColumn<AccessTokenTO, String>(new ResourceModel(\"issuedAt\", \"\")) {\n+        columns.add(new AbstractColumn<>(new ResourceModel(\"issuedAt\", \"\")) {\n \n             private static final long serialVersionUID = -1822504503325964706L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<AccessTokenTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<AccessTokenTO> model) {\n+                final Item<ICellPopulator<AccessTokenTO>> cellItem,\n+                final String componentId,\n+                final IModel<AccessTokenTO> model) {\n \n                 try {\n                     SignedJWT jwt = SignedJWT.parse(model.getObject().getBody());\n                     cellItem.add(new Label(componentId,\n-                            SyncopeConsoleSession.get().getDateFormat().format(jwt.getJWTClaimsSet().getIssueTime())));\n+                        SyncopeConsoleSession.get().getDateFormat().format(jwt.getJWTClaimsSet().getIssueTime())));\n                 } catch (ParseException e) {\n                     LOG.error(\"Could not parse JWT {}\", model.getObject().getBody(), e);\n                     cellItem.add(new Label(componentId, StringUtils.EMPTY));\n@@ -119,7 +119,7 @@ public void populateItem(\n     public ActionsPanel<AccessTokenTO> getActions(final IModel<AccessTokenTO> model) {\n         final ActionsPanel<AccessTokenTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<AccessTokenTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"65de0f22f1329ebc7bd8a2c2f30057d9bde528a4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -60,7 +60,7 @@ public ActionDataTablePanel(\n         batchForm = new Form<>(\"groupForm\");\n         add(batchForm);\n \n-        group = new ActionTableCheckGroup<T>(\"checkgroup\", model) {\n+        group = new ActionTableCheckGroup<>(\"checkgroup\", model) {\n \n             private static final long serialVersionUID = -8667764190925075389L;\n "},{"sha":"96faad2b2a3b762f80f039dbd3868ca2354f2f06","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -212,8 +212,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             builder.columns.add(0, new CheckGroupColumn<>(group));\n         }\n \n-        dataTable = new AjaxFallbackDataTable<T, S>(\n-                \"dataTable\", builder.columns, builder.dataProvider, builder.rowsPerPage, builder.container) {\n+        dataTable = new AjaxFallbackDataTable<>(\n+            \"dataTable\", builder.columns, builder.dataProvider, builder.rowsPerPage, builder.container) {\n \n             private static final long serialVersionUID = -7370603907251344224L;\n "},{"sha":"48d70ba642220166318cab0dad9b317dd36b5aed","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -142,11 +142,11 @@ protected List<IColumn<A, String>> getColumns() {\n                 prefcolumns));\n \n         PreferenceManager.getList(DisplayAttributesModalPanel.getPrefPlainAttributeView(type)).stream().\n-                filter(name -> pSchemaNames.contains(name)).\n+                filter(pSchemaNames::contains).\n                 forEach(name -> prefcolumns.add(new AttrColumn<>(name, SchemaType.PLAIN)));\n \n         PreferenceManager.getList(DisplayAttributesModalPanel.getPrefDerivedAttributeView(type)).stream().\n-                filter(name -> (dSchemaNames.contains(name))).\n+                filter(dSchemaNames::contains).\n                 forEach(name -> prefcolumns.add(new AttrColumn<>(name, SchemaType.DERIVED)));\n \n         // Add defaults in case of no selection"},{"sha":"e022061c2c854e980234ec4c5c6f2eca2ab19090","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":62,"deletions":62,"changes":124,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -77,14 +77,14 @@ protected String[] getDefaultAttributeSelection() {\n     public ActionsPanel<Serializable> getHeader(final String componentId) {\n         final ActionsPanel<Serializable> panel = super.getHeader(componentId);\n \n-        panel.add(new ActionLink<Serializable>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.add(displayAttributeModal.setContent(new AnyObjectDisplayAttributesModalPanel<>(\n-                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n+                    displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n                 displayAttributeModal.addSubmitButton();\n                 displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                 displayAttributeModal.show(true);\n@@ -102,18 +102,18 @@ protected boolean statusCondition(final Serializable modelObject) {\n     public ActionsPanel<AnyObjectTO> getActions(final IModel<AnyObjectTO> model) {\n         final ActionsPanel<AnyObjectTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<AnyObjectTO>() {\n+        panel.add(new ActionLink<>() {\n \n-            private static final long serialVersionUID = -7978723352517770644L;\n+                      private static final long serialVersionUID = -7978723352517770644L;\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                new AnyWrapper<>(new AnyObjectRestClient().read(model.getObject().getKey())),\n-                                target));\n-            }\n-        }, ActionType.EDIT,\n+                      @Override\n+                      public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                          send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n+                              new AjaxWizard.EditItemActionEvent<>(\n+                                  new AnyWrapper<>(new AnyObjectRestClient().read(model.getObject().getKey())),\n+                                  target));\n+                      }\n+                  }, ActionType.EDIT,\n                 String.format(\"%s,%s\", AnyEntitlement.READ.getFor(type), AnyEntitlement.UPDATE.getFor(type))).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n@@ -127,81 +127,81 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                     this,\n                     pageRef).forEach(panel::add);\n \n-            panel.add(new ActionLink<AnyObjectTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                     target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                            utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n+                        utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n \n                     utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n                     utilityModal.show(true);\n                 }\n             }, ActionType.PROPAGATION_TASKS, IdRepoEntitlement.TASK_LIST);\n \n-            panel.add(new ActionLink<AnyObjectTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                     target.add(utilityModal.setContent(\n-                            new NotificationTasks(AnyTypeKind.ANY_OBJECT, model.getObject().getKey(),\n-                                    pageRef)));\n+                        new NotificationTasks(AnyTypeKind.ANY_OBJECT, model.getObject().getKey(),\n+                            pageRef)));\n                     utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n                     utilityModal.show(true);\n                     target.add(utilityModal);\n                 }\n             }, ActionType.NOTIFICATION_TASKS, IdRepoEntitlement.TASK_LIST);\n         }\n-        panel.add(new ActionLink<AnyObjectTO>() {\n-\n-            private static final long serialVersionUID = -2878723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                model.setObject(restClient.read(model.getObject().getKey()));\n-                target.add(altDefaultModal.setContent(new AuditHistoryModal<AnyObjectTO>(\n-                        altDefaultModal,\n-                        AuditElements.EventCategoryType.LOGIC,\n-                        \"AnyObjectLogic\",\n-                        model.getObject(),\n-                        AnyEntitlement.UPDATE.getFor(type),\n-                        pageRef) {\n-\n-                    private static final long serialVersionUID = -7440902560249531201L;\n-\n-                    @Override\n-                    protected void restore(final String json, final AjaxRequestTarget target) {\n-                        AnyObjectTO original = model.getObject();\n-                        try {\n-                            AnyObjectTO updated = MAPPER.readValue(json, AnyObjectTO.class);\n-                            AnyObjectUR updateReq = AnyOperations.diff(updated, original, false);\n-                            ProvisioningResult<AnyObjectTO> result =\n-                                    restClient.update(original.getETagValue(), updateReq);\n-                            model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n-\n-                            SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While restoring any object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().onException(e);\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }));\n-\n-                altDefaultModal.header(new StringResourceModel(\"auditHistory.title\", model));\n-\n-                altDefaultModal.show(true);\n-            }\n-        }, ActionType.VIEW_AUDIT_HISTORY,\n+        panel.add(new ActionLink<>() {\n+\n+                      private static final long serialVersionUID = -2878723352517770644L;\n+\n+                      @Override\n+                      public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                          model.setObject(restClient.read(model.getObject().getKey()));\n+                          target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n+                              altDefaultModal,\n+                              AuditElements.EventCategoryType.LOGIC,\n+                              \"AnyObjectLogic\",\n+                              model.getObject(),\n+                              AnyEntitlement.UPDATE.getFor(type),\n+                              pageRef) {\n+\n+                              private static final long serialVersionUID = -7440902560249531201L;\n+\n+                              @Override\n+                              protected void restore(final String json, final AjaxRequestTarget target) {\n+                                  AnyObjectTO original = model.getObject();\n+                                  try {\n+                                      AnyObjectTO updated = MAPPER.readValue(json, AnyObjectTO.class);\n+                                      AnyObjectUR updateReq = AnyOperations.diff(updated, original, false);\n+                                      ProvisioningResult<AnyObjectTO> result =\n+                                          restClient.update(original.getETagValue(), updateReq);\n+                                      model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n+\n+                                      SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                                      target.add(container);\n+                                  } catch (Exception e) {\n+                                      LOG.error(\"While restoring any object {}\", model.getObject().getKey(), e);\n+                                      SyncopeConsoleSession.get().onException(e);\n+                                  }\n+                                  ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                              }\n+                          }));\n+\n+                          altDefaultModal.header(new StringResourceModel(\"auditHistory.title\", model));\n+\n+                          altDefaultModal.show(true);\n+                      }\n+                  }, ActionType.VIEW_AUDIT_HISTORY,\n                 String.format(\"%s,%s\", AnyEntitlement.READ.getFor(type), IdRepoEntitlement.AUDIT_LIST)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n-        panel.add(new ActionLink<AnyObjectTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n@@ -210,7 +210,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                 final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n+                    new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n             }\n \n             @Override\n@@ -219,7 +219,7 @@ protected boolean statusCondition(final AnyObjectTO modelObject) {\n             }\n         }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).setRealm(realm);\n \n-        panel.add(new ActionLink<AnyObjectTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770646L;\n "},{"sha":"fcc1700b784281ab3ff49e677a852a2555586512","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -131,8 +131,8 @@ protected List<IColumn<AnyTypeClassTO, String>> getColumns() {\n                     columns.add(new BooleanPropertyColumn<>(\n                             new ResourceModel(field.getName()), field.getName(), field.getName()));\n                 } else {\n-                    columns.add(new PropertyColumn<AnyTypeClassTO, String>(\n-                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n+                    columns.add(new PropertyColumn<>(\n+                        new ResourceModel(field.getName()), field.getName(), field.getName()) {\n \n                         private static final long serialVersionUID = -6902459669035442212L;\n \n@@ -141,8 +141,8 @@ public String getCssClass() {\n                             String css = super.getCssClass();\n                             if (Constants.KEY_FIELD_NAME.equals(fieldName)) {\n                                 css = StringUtils.isBlank(css)\n-                                        ? \"col-xs-1\"\n-                                        : css + \" col-xs-1\";\n+                                    ? \"col-xs-1\"\n+                                    : css + \" col-xs-1\";\n                             }\n                             return css;\n                         }\n@@ -158,18 +158,18 @@ public String getCssClass() {\n     public ActionsPanel<AnyTypeClassTO> getActions(final IModel<AnyTypeClassTO> model) {\n         final ActionsPanel<AnyTypeClassTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<AnyTypeClassTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n                 send(AnyTypeClassesPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.ANYTYPECLASS_UPDATE);\n \n-        panel.add(new ActionLink<AnyTypeClassTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"4f5db2f7a33f3a1f7fdb03ed3c399de40ceba76a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -130,8 +130,8 @@ protected List<IColumn<AnyTypeTO, String>> getColumns() {\n                     columns.add(new BooleanPropertyColumn<>(\n                             new ResourceModel(field.getName()), field.getName(), field.getName()));\n                 } else {\n-                    columns.add(new PropertyColumn<AnyTypeTO, String>(\n-                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n+                    columns.add(new PropertyColumn<>(\n+                        new ResourceModel(field.getName()), field.getName(), field.getName()) {\n \n                         private static final long serialVersionUID = -6902459669035442212L;\n \n@@ -140,8 +140,8 @@ public String getCssClass() {\n                             String css = super.getCssClass();\n                             if (Constants.KEY_FIELD_NAME.equals(fieldName)) {\n                                 css = StringUtils.isBlank(css)\n-                                        ? \"col-xs-1\"\n-                                        : css + \" col-xs-1\";\n+                                    ? \"col-xs-1\"\n+                                    : css + \" col-xs-1\";\n                             }\n                             return css;\n                         }\n@@ -157,17 +157,17 @@ public String getCssClass() {\n     public ActionsPanel<AnyTypeTO> getActions(final IModel<AnyTypeTO> model) {\n         final ActionsPanel<AnyTypeTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<AnyTypeTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n                 send(AnyTypesPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.ANYTYPE_UPDATE);\n-        panel.add(new ActionLink<AnyTypeTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"10be40fe98a34e603bf07d03c15656145dfcc5f1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ApplicationDirectoryPanel.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FApplicationDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -63,7 +63,7 @@ public class ApplicationDirectoryPanel extends\n \n     private static final long serialVersionUID = -5491515010207202168L;\n \n-    protected final BaseModal<PrivilegeTO> privilegeModal = new BaseModal<PrivilegeTO>(Constants.OUTER) {\n+    protected final BaseModal<PrivilegeTO> privilegeModal = new BaseModal<>(Constants.OUTER) {\n \n         private static final long serialVersionUID = 389935548143327858L;\n \n@@ -97,7 +97,7 @@ protected ApplicationDirectoryPanel(final String id, final Builder builder) {\n         });\n         addOuterObject(privilegeModal);\n \n-        AjaxLink<Void> newApplLink = new AjaxLink<Void>(\"add\") {\n+        AjaxLink<Void> newApplLink = new AjaxLink<>(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -133,18 +133,18 @@ protected List<IColumn<ApplicationTO, String>> getColumns() {\n                 new ResourceModel(Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));\n         columns.add(new PropertyColumn<>(new ResourceModel(Constants.DESCRIPTION_FIELD_NAME),\n                 Constants.DESCRIPTION_FIELD_NAME, Constants.DESCRIPTION_FIELD_NAME));\n-        columns.add(new AbstractColumn<ApplicationTO, String>(new ResourceModel(\"privileges\")) {\n+        columns.add(new AbstractColumn<>(new ResourceModel(\"privileges\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<ApplicationTO>> item,\n-                    final String componentId,\n-                    final IModel<ApplicationTO> rowModel) {\n+                final Item<ICellPopulator<ApplicationTO>> item,\n+                final String componentId,\n+                final IModel<ApplicationTO> rowModel) {\n \n                 item.add(new Label(componentId, '[' + rowModel.getObject().getPrivileges().stream().\n-                        map(EntityTO::getKey).collect(Collectors.joining(\", \")) + ']'));\n+                    map(EntityTO::getKey).collect(Collectors.joining(\", \")) + ']'));\n             }\n         });\n \n@@ -155,7 +155,7 @@ public void populateItem(\n     public ActionsPanel<ApplicationTO> getActions(final IModel<ApplicationTO> model) {\n         final ActionsPanel<ApplicationTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<ApplicationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -168,26 +168,26 @@ public void onClick(final AjaxRequestTarget target, final ApplicationTO ignore)\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.APPLICATION_UPDATE);\n \n-        panel.add(new ActionLink<ApplicationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ApplicationTO ignore) {\n                 target.add(privilegeModal.setContent(new PrivilegeDirectoryPanel(\n-                        privilegeModal, model.getObject(), pageRef)));\n+                    privilegeModal, model.getObject(), pageRef)));\n \n                 privilegeModal.header(new StringResourceModel(\n-                        \"application.privileges\", ApplicationDirectoryPanel.this, Model.of(model.getObject())));\n+                    \"application.privileges\", ApplicationDirectoryPanel.this, Model.of(model.getObject())));\n \n                 MetaDataRoleAuthorizationStrategy.authorize(\n-                        privilegeModal.getForm(), ENABLE, IdRepoEntitlement.APPLICATION_UPDATE);\n+                    privilegeModal.getForm(), ENABLE, IdRepoEntitlement.APPLICATION_UPDATE);\n \n                 privilegeModal.show(true);\n             }\n         }, ActionLink.ActionType.COMPOSE, IdRepoEntitlement.APPLICATION_UPDATE);\n \n-        panel.add(new ActionLink<ApplicationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 3766262567901552032L;\n "},{"sha":"2092af61572fb66804bf664d072049abaa9584fa","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AttrListDirectoryPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAttrListDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -64,19 +64,19 @@ protected Collection<ActionLink.ActionType> getBatches() {\n     protected List<IColumn<Attr, String>> getColumns() {\n         final List<IColumn<Attr, String>> columns = new ArrayList<>();\n         columns.add(new PropertyColumn<>(new ResourceModel(\"schema\"), \"schema\"));\n-        columns.add(new PropertyColumn<Attr, String>(new ResourceModel(\"values\"), \"values\") {\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"values\"), \"values\") {\n \n             private static final long serialVersionUID = -1822504503325964706L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<Attr>> item,\n-                    final String componentId,\n-                    final IModel<Attr> rowModel) {\n+                final Item<ICellPopulator<Attr>> item,\n+                final String componentId,\n+                final IModel<Attr> rowModel) {\n \n                 if (rowModel.getObject().getValues().toString().length() > 96) {\n                     item.add(new Label(componentId, getString(\"tooLong\")).\n-                            add(new AttributeModifier(\"style\", \"font-style:italic\")));\n+                        add(new AttributeModifier(\"style\", \"font-style:italic\")));\n                 } else {\n                     super.populateItem(item, componentId, rowModel);\n                 }"},{"sha":"9a8f70cf7b063af49eedaea2c24313925d203a5e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":25,"deletions":25,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -96,7 +96,7 @@ public BeanPanel(\n         this.excluded.add(\"serialVersionUID\");\n         this.excluded.add(\"class\");\n \n-        LoadableDetachableModel<List<String>> model = new LoadableDetachableModel<List<String>>() {\n+        LoadableDetachableModel<List<String>> model = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -106,19 +106,19 @@ protected List<String> load() {\n \n                 if (BeanPanel.this.getDefaultModelObject() != null) {\n                     ReflectionUtils.doWithFields(BeanPanel.this.getDefaultModelObject().getClass(),\n-                            field -> result.add(field.getName()),\n-                            field -> !field.isSynthetic() && !BeanPanel.this.excluded.contains(field.getName()));\n+                        field -> result.add(field.getName()),\n+                        field -> !field.isSynthetic() && !BeanPanel.this.excluded.contains(field.getName()));\n                 }\n \n                 return result;\n             }\n         };\n \n-        add(new ListView<String>(\"propView\", model) {\n+        add(new ListView<>(\"propView\", model) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n-            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+            @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n             @Override\n             protected void populateItem(final ListItem<String> item) {\n                 String fieldName = item.getModelObject();\n@@ -146,20 +146,20 @@ protected void populateItem(final ListItem<String> item) {\n                     switch (scondAnnot.type()) {\n                         case \"USER\":\n                             panel = new UserSearchPanel.Builder(\n-                                    new ListModel<>(clauses)).required(false).build(\"value\");\n+                                new ListModel<>(clauses)).required(false).build(\"value\");\n                             builder = SyncopeClient.getUserSearchConditionBuilder();\n                             break;\n \n                         case \"GROUP\":\n                             panel = new GroupSearchPanel.Builder(\n-                                    new ListModel<>(clauses)).required(false).build(\"value\");\n+                                new ListModel<>(clauses)).required(false).build(\"value\");\n                             builder = SyncopeClient.getGroupSearchConditionBuilder();\n                             break;\n \n                         default:\n                             panel = new AnyObjectSearchPanel.Builder(\n-                                    scondAnnot.type(),\n-                                    new ListModel<>(clauses)).required(false).build(\"value\");\n+                                scondAnnot.type(),\n+                                new ListModel<>(clauses)).required(false).build(\"value\");\n                             builder = SyncopeClient.getAnyObjectSearchConditionBuilder(null);\n                     }\n \n@@ -170,7 +170,7 @@ protected void populateItem(final ListItem<String> item) {\n                     Class<?> listItemType = String.class;\n                     if (field.getGenericType() instanceof ParameterizedType) {\n                         listItemType = (Class<?>) ((ParameterizedType) field.getGenericType()).\n-                                getActualTypeArguments()[0];\n+                            getActualTypeArguments()[0];\n                     }\n \n                     if (listItemType.equals(String.class) && schemaAnnot != null) {\n@@ -180,43 +180,43 @@ protected void populateItem(final ListItem<String> item) {\n                             switch (type) {\n                                 case PLAIN:\n                                     choices.addAll(\n-                                            SchemaRestClient.getSchemas(SchemaType.PLAIN, schemaAnnot.anyTypeKind()));\n+                                        SchemaRestClient.getSchemas(SchemaType.PLAIN, schemaAnnot.anyTypeKind()));\n                                     break;\n \n                                 case DERIVED:\n                                     choices.addAll(\n-                                            SchemaRestClient.getSchemas(SchemaType.DERIVED, schemaAnnot.anyTypeKind()));\n+                                        SchemaRestClient.getSchemas(SchemaType.DERIVED, schemaAnnot.anyTypeKind()));\n                                     break;\n \n                                 case VIRTUAL:\n                                     choices.addAll(\n-                                            SchemaRestClient.getSchemas(SchemaType.VIRTUAL, schemaAnnot.anyTypeKind()));\n+                                        SchemaRestClient.getSchemas(SchemaType.VIRTUAL, schemaAnnot.anyTypeKind()));\n                                     break;\n \n                                 default:\n                             }\n                         }\n \n                         panel = new AjaxPalettePanel.Builder<>().setName(fieldName).build(\n-                                \"value\",\n-                                new PropertyModel<>(bean.getObject(), fieldName),\n-                                new ListModel<>(choices.stream().map(EntityTO::getKey).collect(Collectors.toList()))).\n-                                hideLabel();\n+                            \"value\",\n+                            new PropertyModel<>(bean.getObject(), fieldName),\n+                            new ListModel<>(choices.stream().map(EntityTO::getKey).collect(Collectors.toList()))).\n+                            hideLabel();\n                     } else if (listItemType.isEnum()) {\n                         panel = new AjaxPalettePanel.Builder<>().setName(fieldName).build(\n-                                \"value\",\n-                                new PropertyModel<>(bean.getObject(), fieldName),\n-                                new ListModel(List.of(listItemType.getEnumConstants()))).hideLabel();\n+                            \"value\",\n+                            new PropertyModel<>(bean.getObject(), fieldName),\n+                            new ListModel(List.of(listItemType.getEnumConstants()))).hideLabel();\n                     } else {\n                         panel = new MultiFieldPanel.Builder<>(\n-                                new PropertyModel<>(bean.getObject(), fieldName)).build(\n-                                \"value\",\n-                                fieldName,\n-                                buildSinglePanel(bean.getObject(), listItemType, fieldName, \"panel\")).hideLabel();\n+                            new PropertyModel<>(bean.getObject(), fieldName)).build(\n+                            \"value\",\n+                            fieldName,\n+                            buildSinglePanel(bean.getObject(), listItemType, fieldName, \"panel\")).hideLabel();\n                     }\n                 } else if (Map.class.equals(field.getType())) {\n                     panel = new AjaxGridFieldPanel(\n-                            \"value\", fieldName, new PropertyModel<>(bean, fieldName)).hideLabel();\n+                        \"value\", fieldName, new PropertyModel<>(bean, fieldName)).hideLabel();\n                 } else {\n                     panel = buildSinglePanel(bean.getObject(), field.getType(), fieldName, \"value\").hideLabel();\n                 }"},{"sha":"c3843777a10a0704e58dabc0c5a8bdd86b108721","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DashboardExtensionsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardExtensionsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -60,7 +60,7 @@ public DashboardExtensionsPanel(\n             }\n         });\n \n-        ListView<BaseExtWidget> widgets = new ListView<BaseExtWidget>(\"widgets\", instances) {\n+        ListView<BaseExtWidget> widgets = new ListView<>(\"widgets\", instances) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n "},{"sha":"109803c6c8b1e455141fc807e8e4d5efc80e4d05","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DataTablePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDataTablePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -44,7 +44,7 @@\n     public DataTablePanel(final String id) {\n         super(id);\n \n-        model = new IModel<Collection<T>>() {\n+        model = new IModel<>() {\n \n             private static final long serialVersionUID = 4886729136344643465L;\n "},{"sha":"7297e441ce869227a01948959c90256a772d42a7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DelegationDirectoryPanel.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -95,13 +95,13 @@ protected List<IColumn<DelegationTO, String>> getColumns() {\n         columns.add(new KeyPropertyColumn<>(\n                 new ResourceModel(Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));\n \n-        columns.add(new AbstractColumn<DelegationTO, String>(new ResourceModel(\"delegating\"), \"delegating\") {\n+        columns.add(new AbstractColumn<>(new ResourceModel(\"delegating\"), \"delegating\") {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<DelegationTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<DelegationTO> rowModel) {\n+                final Item<ICellPopulator<DelegationTO>> cellItem,\n+                final String componentId,\n+                final IModel<DelegationTO> rowModel) {\n \n                 String delegating = rowModel.getObject().getDelegating();\n                 if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_READ)) {\n@@ -114,13 +114,13 @@ public void populateItem(\n             }\n         });\n \n-        columns.add(new AbstractColumn<DelegationTO, String>(new ResourceModel(\"delegated\"), \"delegated\") {\n+        columns.add(new AbstractColumn<>(new ResourceModel(\"delegated\"), \"delegated\") {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<DelegationTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<DelegationTO> rowModel) {\n+                final Item<ICellPopulator<DelegationTO>> cellItem,\n+                final String componentId,\n+                final IModel<DelegationTO> rowModel) {\n \n                 String delegated = rowModel.getObject().getDelegated();\n                 if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.USER_READ)) {\n@@ -146,17 +146,17 @@ public void populateItem(\n     public ActionsPanel<DelegationTO> getActions(final IModel<DelegationTO> model) {\n         ActionsPanel<DelegationTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<DelegationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final DelegationTO ignore) {\n                 send(DelegationDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n             }\n         }, ActionLink.ActionType.EDIT, StringUtils.EMPTY);\n-        panel.add(new ActionLink<DelegationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"4d89c84003ebce7294ab56b90d26dc7a3cf5ad3a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DelegationSelectionPanel.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDelegationSelectionPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -34,22 +34,22 @@ public DelegationSelectionPanel(final String id, final String delegating) {\n         super(id);\n \n         IndicatingOnConfirmAjaxLink<String> link =\n-                new IndicatingOnConfirmAjaxLink<String>(\"link\", \"confirmDelegation\", true) {\n+            new IndicatingOnConfirmAjaxLink<>(\"link\", \"confirmDelegation\", true) {\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                SyncopeConsoleSession.get().setDelegatedBy(delegating);\n-                setResponsePage(Dashboard.class);\n-            }\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    SyncopeConsoleSession.get().setDelegatedBy(delegating);\n+                    setResponsePage(Dashboard.class);\n+                }\n \n-            @Override\n-            protected void onComponentTag(final ComponentTag tag) {\n-                super.onComponentTag(tag);\n-                if (delegating.equals(SyncopeConsoleSession.get().getDelegatedBy())) {\n-                    tag.append(\"class\", \"disabled\", \" \");\n+                @Override\n+                protected void onComponentTag(final ComponentTag tag) {\n+                    super.onComponentTag(tag);\n+                    if (delegating.equals(SyncopeConsoleSession.get().getDelegatedBy())) {\n+                        tag.append(\"class\", \"disabled\", \" \");\n+                    }\n                 }\n-            }\n-        };\n+            };\n         add(link);\n         link.setOutputMarkupId(true);\n         link.add(new Label(\"label\", delegating));"},{"sha":"85f0a5113f5215d1b45b32cda19e8927ead22960","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -241,7 +241,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     protected ActionsPanel<Serializable> getHeader(final String componentId) {\n         final ActionsPanel<Serializable> panel = new ActionsPanel<>(componentId, null);\n \n-        panel.add(new ActionLink<Serializable>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -277,8 +277,8 @@ protected void updateResultTable(final boolean create, final int rows) {\n                 .map(table -> (create ? (int) table.getPageCount() - 1 : (int) table.getCurrentPage())).orElse(0);\n \n         // take care of restClient handle: maybe not useful to keep into\n-        AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<T, String>(\n-                dataProvider, page.getPageReference()) {\n+        AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<>(\n+            dataProvider, page.getPageReference()) {\n \n             private static final long serialVersionUID = 2205322679547329123L;\n "},{"sha":"d68206155ebefb56fbddca8c196573fa26b6ee57","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DisplayAttributesModalPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDisplayAttributesModalPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -82,7 +82,7 @@ public DisplayAttributesModalPanel(\n         Collections.sort(pSchemaNames);\n         Collections.sort(dSchemaNames);\n \n-        final IModel<List<String>> fnames = new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> fnames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -92,7 +92,7 @@ protected List<String> load() {\n             }\n         };\n \n-        final IModel<List<String>> psnames = new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> psnames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -102,7 +102,7 @@ protected List<String> load() {\n             }\n         };\n \n-        final IModel<List<String>> dsnames = new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> dsnames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n "},{"sha":"69ccf4b5abe796a5840ceca15ee8587aa28282c1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DomainDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDomainDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDomainDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDomainDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -101,7 +101,7 @@ protected List<IColumn<Domain, String>> getColumns() {\n     protected ActionsPanel<Domain> getActions(final IModel<Domain> model) {\n         ActionsPanel<Domain> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<Domain>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 7610801302168867641L;\n \n@@ -114,7 +114,7 @@ public void onClick(final AjaxRequestTarget target, final Domain ignore) {\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.KEYMASTER);\n \n-        panel.add(new ActionLink<Domain>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 7610801302168867641L;\n \n@@ -127,7 +127,7 @@ public void onClick(final AjaxRequestTarget target, final Domain ignore) {\n             }\n         }, ActionLink.ActionType.PASSWORD_MANAGEMENT, IdRepoEntitlement.KEYMASTER);\n \n-        panel.add(new ActionLink<Domain>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -191,7 +191,7 @@ public long size() {\n \n         @Override\n         public IModel<Domain> model(final Domain object) {\n-            return new IModel<Domain>() {\n+            return new IModel<>() {\n \n                 private static final long serialVersionUID = 8093553921710742624L;\n "},{"sha":"676347d9b589eacf14a0cf6a28df4a37630eb6af","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DynRealmDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -71,7 +71,7 @@ protected DynRealmDirectoryPanel(final String id, final Builder builder) {\n         });\n         setFooterVisibility(true);\n \n-        AjaxLink<Void> newDynRealmlLink = new AjaxLink<Void>(\"add\") {\n+        AjaxLink<Void> newDynRealmlLink = new AjaxLink<>(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -113,7 +113,7 @@ protected List<IColumn<DynRealmTO, String>> getColumns() {\n     public ActionsPanel<DynRealmTO> getActions(final IModel<DynRealmTO> model) {\n         final ActionsPanel<DynRealmTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<DynRealmTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -126,7 +126,7 @@ public void onClick(final AjaxRequestTarget target, final DynRealmTO ignore) {\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.DYNREALM_UPDATE);\n \n-        panel.add(new ActionLink<DynRealmTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 3766262567901552032L;\n "},{"sha":"e3d5f41818fc6a9fee8747167e79f49cd51a355e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DynRealmModalPanel.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDynRealmModalPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -71,7 +71,7 @@ public DynRealmModalPanel(\n         key.setRequired(true);\n         add(key);\n \n-        final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<List<AnyTypeTO>>() {\n+        final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -81,41 +81,41 @@ protected List<AnyTypeTO> load() {\n             }\n         };\n \n-        add(new ListView<AnyTypeTO>(\"dynMembershipCond\", types) {\n+        add(new ListView<>(\"dynMembershipCond\", types) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<AnyTypeTO> item) {\n                 final String key = item.getModelObject().getKey();\n                 item.add(new Accordion(\"dynMembershipCond\", List.of(\n-                        new AbstractTab(Model.of(key + \" Dynamic Condition\")) {\n+                    new AbstractTab(Model.of(key + \" Dynamic Condition\")) {\n \n-                    private static final long serialVersionUID = 1037272333056449378L;\n+                        private static final long serialVersionUID = 1037272333056449378L;\n \n-                    @Override\n-                    public Panel getPanel(final String panelId) {\n-                        switch (item.getModelObject().getKind()) {\n-                            case USER:\n-                                return new UserSearchPanel.Builder(\n+                        @Override\n+                        public Panel getPanel(final String panelId) {\n+                            switch (item.getModelObject().getKind()) {\n+                                case USER:\n+                                    return new UserSearchPanel.Builder(\n                                         new MapOfListModel<>(dynRealmWrapper, \"dynClauses\", key)).\n                                         required(false).build(panelId);\n \n-                            case GROUP:\n-                                return new GroupSearchPanel.Builder(\n+                                case GROUP:\n+                                    return new GroupSearchPanel.Builder(\n                                         new MapOfListModel<>(dynRealmWrapper, \"dynClauses\", key)).\n                                         required(false).build(panelId);\n \n-                            case ANY_OBJECT:\n-                            default:\n-                                return new AnyObjectSearchPanel.Builder(\n+                                case ANY_OBJECT:\n+                                default:\n+                                    return new AnyObjectSearchPanel.Builder(\n                                         key,\n                                         new MapOfListModel<>(dynRealmWrapper, \"dynClauses\", key)).\n                                         required(false).build(panelId);\n+                            }\n                         }\n-                    }\n-                }), Model.of(StringUtils.isBlank(dynRealmWrapper.getDynMembershipConds().get(key)) ? -1 : 0)).\n-                        setOutputMarkupId(true));\n+                    }), Model.of(StringUtils.isBlank(dynRealmWrapper.getDynMembershipConds().get(key)) ? -1 : 0)).\n+                    setOutputMarkupId(true));\n             }\n         });\n     }"},{"sha":"fce668154333c5dd0d1a3d279de12272ba7d1b48","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":111,"deletions":110,"changes":221,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -188,14 +188,14 @@ protected String[] getDefaultAttributeSelection() {\n     public ActionsPanel<Serializable> getHeader(final String componentId) {\n         final ActionsPanel<Serializable> panel = super.getHeader(componentId);\n \n-        panel.add(new ActionLink<Serializable>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.add(displayAttributeModal.setContent(new GroupDisplayAttributesModalPanel<>(\n-                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n+                    displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n                 displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                 displayAttributeModal.show(true);\n             }\n@@ -207,88 +207,88 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n     public ActionsPanel<GroupTO> getActions(final IModel<GroupTO> model) {\n         final ActionsPanel<GroupTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<GroupTO>() {\n+        panel.add(new ActionLink<>() {\n \n-            private static final long serialVersionUID = -7978723352517770644L;\n+                      private static final long serialVersionUID = -7978723352517770644L;\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(new GroupWrapper(\n-                                restClient.read(model.getObject().getKey())), target));\n-            }\n-        }, ActionType.EDIT,\n+                      @Override\n+                      public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                          send(GroupDirectoryPanel.this, Broadcast.EXACT,\n+                              new AjaxWizard.EditItemActionEvent<>(new GroupWrapper(\n+                                  restClient.read(model.getObject().getKey())), target));\n+                      }\n+                  }, ActionType.EDIT,\n                 String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.GROUP_UPDATE)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n-        panel.add(new ActionLink<GroupTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 6242834621660352855L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 target.add(typeExtensionsModal.setContent(new TypeExtensionDirectoryPanel(\n-                        typeExtensionsModal, model.getObject(), pageRef)));\n+                    typeExtensionsModal, model.getObject(), pageRef)));\n                 typeExtensionsModal.header(new StringResourceModel(\"typeExtensions\", model));\n                 typeExtensionsModal.show(true);\n             }\n         }, ActionType.TYPE_EXTENSIONS, IdRepoEntitlement.GROUP_UPDATE).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n-        panel.add(new ActionLink<GroupTO>() {\n+        panel.add(new ActionLink<>() {\n \n-            private static final long serialVersionUID = -7978723352517770645L;\n+                      private static final long serialVersionUID = -7978723352517770645L;\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                templates.setTargetObject(model.getObject());\n-                templates.toggle(target, true);\n-            }\n+                      @Override\n+                      public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                          templates.setTargetObject(model.getObject());\n+                          templates.toggle(target, true);\n+                      }\n \n-            @Override\n-            public boolean isIndicatorEnabled() {\n-                return false;\n-            }\n-        }, ActionType.MEMBERS,\n+                      @Override\n+                      public boolean isIndicatorEnabled() {\n+                          return false;\n+                      }\n+                  }, ActionType.MEMBERS,\n                 String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.GROUP_UPDATE)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n-        panel.add(new ActionLink<GroupTO>() {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                try {\n-                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                    target.add(container);\n-                } catch (SyncopeClientException e) {\n-                    LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n-                    SyncopeConsoleSession.get().onException(e);\n-                }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }, ActionType.PROVISION_MEMBERS,\n+        panel.add(new ActionLink<>() {\n+\n+                      private static final long serialVersionUID = -7978723352517770644L;\n+\n+                      @Override\n+                      public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                          try {\n+                              SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                              target.add(container);\n+                          } catch (SyncopeClientException e) {\n+                              LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n+                              SyncopeConsoleSession.get().onException(e);\n+                          }\n+                          ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                      }\n+                  }, ActionType.PROVISION_MEMBERS,\n                 String.format(\"%s,%s\", IdRepoEntitlement.TASK_CREATE, IdRepoEntitlement.TASK_EXECUTE)).\n                 setRealm(realm);\n \n-        panel.add(new ActionLink<GroupTO>() {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                try {\n-                    GroupRestClient.provisionMembers(model.getObject().getKey(), ProvisionAction.DEPROVISION);\n-                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                    target.add(container);\n-                } catch (SyncopeClientException e) {\n-                    LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n-                    SyncopeConsoleSession.get().onException(e);\n-                }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }, ActionType.DEPROVISION_MEMBERS,\n+        panel.add(new ActionLink<>() {\n+\n+                      private static final long serialVersionUID = -7978723352517770644L;\n+\n+                      @Override\n+                      public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                          try {\n+                              GroupRestClient.provisionMembers(model.getObject().getKey(), ProvisionAction.DEPROVISION);\n+                              SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                              target.add(container);\n+                          } catch (SyncopeClientException e) {\n+                              LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n+                              SyncopeConsoleSession.get().onException(e);\n+                          }\n+                          ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                      }\n+                  }, ActionType.DEPROVISION_MEMBERS,\n                 String.format(\"%s,%s\", IdRepoEntitlement.TASK_CREATE, IdRepoEntitlement.TASK_EXECUTE)).\n                 setRealm(realm);\n \n@@ -300,78 +300,79 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 this,\n                 pageRef).forEach(panel::add);\n \n-        panel.add(new ActionLink<GroupTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                        utilityModal, AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n+                    utilityModal, AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n                 utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n                 utilityModal.show(true);\n             }\n         }, ActionType.PROPAGATION_TASKS, IdRepoEntitlement.TASK_LIST);\n \n-        panel.add(new ActionLink<GroupTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 target.add(utilityModal.setContent(\n-                        new NotificationTasks(AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n+                    new NotificationTasks(AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n                 utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n                 utilityModal.show(true);\n             }\n         }, ActionType.NOTIFICATION_TASKS, IdRepoEntitlement.TASK_LIST);\n \n-        panel.add(new ActionLink<GroupTO>() {\n-\n-            private static final long serialVersionUID = -2878723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                model.setObject(restClient.read(model.getObject().getKey()));\n-                target.add(altDefaultModal.setContent(new AuditHistoryModal<GroupTO>(\n-                        altDefaultModal,\n-                        AuditElements.EventCategoryType.LOGIC,\n-                        \"GroupLogic\",\n-                        model.getObject(),\n-                        IdRepoEntitlement.GROUP_UPDATE,\n-                        pageRef) {\n-\n-                    private static final long serialVersionUID = -5819724478921691835L;\n-\n-                    @Override\n-                    protected void restore(final String json, final AjaxRequestTarget target) {\n-                        GroupTO original = model.getObject();\n-                        try {\n-                            GroupTO updated = MAPPER.readValue(json, GroupTO.class);\n-                            GroupUR updateReq = AnyOperations.diff(updated, original, false);\n-                            ProvisioningResult<GroupTO> result = restClient.update(original.getETagValue(), updateReq);\n-                            model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n-\n-                            SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While restoring group {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().onException(e);\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }));\n-\n-                altDefaultModal.header(new Model<>(\n-                        getString(\"auditHistory.title\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                altDefaultModal.show(true);\n-            }\n-        }, ActionType.VIEW_AUDIT_HISTORY,\n-                String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.AUDIT_LIST)).\n-                setRealms(realm, model.getObject().getDynRealms());\n-\n-        panel.add(new ActionLink<GroupTO>() {\n+        panel.add(new ActionLink<>() {\n+\n+                  private static final long serialVersionUID = -2878723352517770644L;\n+\n+                  @Override\n+                  public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                      model.setObject(restClient.read(model.getObject().getKey()));\n+                      target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n+                          altDefaultModal,\n+                          AuditElements.EventCategoryType.LOGIC,\n+                          \"GroupLogic\",\n+                          model.getObject(),\n+                          IdRepoEntitlement.GROUP_UPDATE,\n+                          pageRef) {\n+\n+                          private static final long serialVersionUID = -5819724478921691835L;\n+\n+                          @Override\n+                          protected void restore(final String json, final AjaxRequestTarget target) {\n+                              GroupTO original = model.getObject();\n+                              try {\n+                                  GroupTO updated = MAPPER.readValue(json, GroupTO.class);\n+                                  GroupUR updateReq = AnyOperations.diff(updated, original, false);\n+                                  ProvisioningResult<GroupTO> result =\n+                                      restClient.update(original.getETagValue(), updateReq);\n+                                  model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n+\n+                                  SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                                  target.add(container);\n+                              } catch (Exception e) {\n+                                  LOG.error(\"While restoring group {}\", model.getObject().getKey(), e);\n+                                  SyncopeConsoleSession.get().onException(e);\n+                              }\n+                              ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                          }\n+                      }));\n+\n+                      altDefaultModal.header(new Model<>(\n+                          getString(\"auditHistory.title\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                      altDefaultModal.show(true);\n+                  }\n+              }, ActionType.VIEW_AUDIT_HISTORY,\n+            String.format(\"%s,%s\", IdRepoEntitlement.GROUP_READ, IdRepoEntitlement.AUDIT_LIST)).\n+            setRealms(realm, model.getObject().getDynRealms());\n+\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 6242834621660352855L;\n \n@@ -380,7 +381,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 GroupTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n+                    new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n             }\n \n             @Override\n@@ -389,7 +390,7 @@ protected boolean statusCondition(final GroupTO modelObject) {\n             }\n         }, ActionType.CLONE, IdRepoEntitlement.GROUP_CREATE).setRealm(realm);\n \n-        panel.add(new ActionLink<GroupTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"4eea733aa7d43e3da323a862a2d6196aad65984b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationDirectoryPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -99,14 +99,14 @@ protected void onSubmit(final ImplementationEngine engine, final AjaxRequestTarg\n         };\n         addInnerObject(engineTogglePanel);\n \n-        AjaxLink<Void> replaceAddLink = new AjaxLink<Void>(\"add\") {\n+        AjaxLink<Void> replaceAddLink = new AjaxLink<>(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 send(ImplementationDirectoryPanel.this, Broadcast.BREADTH,\n-                        new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n+                    new ActionLinksTogglePanel.ActionLinkToggleCloseEventPayload(target));\n                 engineTogglePanel.setHeaderLabel(target);\n                 engineTogglePanel.toggle(target, true);\n             }\n@@ -132,20 +132,20 @@ protected List<IColumn<ImplementationTO, String>> getColumns() {\n     protected ActionsPanel<ImplementationTO> getActions(final IModel<ImplementationTO> model) {\n         final ActionsPanel<ImplementationTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<ImplementationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ImplementationTO ignore) {\n                 target.add(modal.setContent(\n-                        new ImplementationModalPanel(modal, model.getObject(), pageRef)));\n+                    new ImplementationModalPanel(modal, model.getObject(), pageRef)));\n                 modal.header(new StringResourceModel(\"any.edit\", Model.of(model.getObject())));\n                 modal.show(true);\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.IMPLEMENTATION_UPDATE);\n \n-        panel.add(new ActionLink<ImplementationTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -208,7 +208,7 @@ public long size() {\n \n         @Override\n         public IModel<ImplementationTO> model(final ImplementationTO implementation) {\n-            return new IModel<ImplementationTO>() {\n+            return new IModel<>() {\n \n                 private static final long serialVersionUID = 999513782683391483L;\n "},{"sha":"f3aeace74cb16b27af656d827b7239c0ea797570","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -165,21 +165,21 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         addInnerObject(header(toBeIncluded));\n \n-        beans = new ListView<T>(\"beans\", listOfItems) {\n+        beans = new ListView<>(\"beans\", listOfItems) {\n \n             private static final long serialVersionUID = -9112553137618363167L;\n \n             @Override\n             protected void populateItem(final ListItem<T> beanItem) {\n                 beanItem.add(new Check<>(\"check\", beanItem.getModel(), checkGroup).setOutputMarkupId(true).\n-                        setOutputMarkupPlaceholderTag(true).\n-                        setVisible(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE\n-                                || ListViewPanel.this.check.getObject() == CheckAvailability.DISABLED).\n-                        setEnabled(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE));\n+                    setOutputMarkupPlaceholderTag(true).\n+                    setVisible(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE\n+                        || ListViewPanel.this.check.getObject() == CheckAvailability.DISABLED).\n+                    setEnabled(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE));\n \n                 final T bean = beanItem.getModelObject();\n \n-                final ListView<String> fields = new ListView<String>(\"fields\", toBeIncluded) {\n+                final ListView<String> fields = new ListView<>(\"fields\", toBeIncluded) {\n \n                     private static final long serialVersionUID = -9112553137618363167L;\n \n@@ -200,9 +200,9 @@ protected String findIndicatorId() {\n                                 @Override\n                                 protected void onEvent(final AjaxRequestTarget target) {\n                                     togglePanel.toggleWithContent(\n-                                            target,\n-                                            actions.cloneWithLabels(\"actions\", new Model<>(bean)),\n-                                            bean);\n+                                        target,\n+                                        actions.cloneWithLabels(\"actions\", new Model<>(bean)),\n+                                        bean);\n                                 }\n                             });\n                         }\n@@ -225,14 +225,14 @@ protected void onEvent(final AjaxRequestTarget target) {\n     }\n \n     private static ListView<String> header(final List<String> labels) {\n-        return new ListView<String>(\"names\", labels) {\n+        return new ListView<>(\"names\", labels) {\n \n             private static final long serialVersionUID = -9112553137618363167L;\n \n             @Override\n             protected void populateItem(final ListItem<String> item) {\n                 item.add(new Label(Constants.NAME_FIELD_NAME,\n-                        new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                    new ResourceModel(item.getModelObject(), item.getModelObject())));\n             }\n         };\n     }\n@@ -423,8 +423,8 @@ protected T getActualItem(final T item, final List<T> list) {\n \n         @Override\n         protected WizardMgtPanel<T> newInstance(final String id, final boolean wizardInModal) {\n-            return new ListViewPanel<T>(\n-                    id, items, reference, includes, actions, check, reuseItem, wizardInModal, captionVisible, model) {\n+            return new ListViewPanel<>(\n+                id, items, reference, includes, actions, check, reuseItem, wizardInModal, captionVisible, model) {\n \n                 private static final long serialVersionUID = -1715389337530657988L;\n "},{"sha":"866b8537e319c1fd833896e68219b6a7647e0ebf","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/LogsPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -55,7 +55,7 @@ public class LogsPanel extends Panel {\n \n     private static final Logger LOG = LoggerFactory.getLogger(LogsPanel.class);\n \n-    private final IModel<List<LoggerConf>> loggerConfs = new LoadableDetachableModel<List<LoggerConf>>() {\n+    private final IModel<List<LoggerConf>> loggerConfs = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -99,15 +99,15 @@ protected void onSubmit(final AjaxRequestTarget target) {\n         WebMarkupContainer loggerContainer = new WebMarkupContainer(\"loggerContainer\");\n         add(loggerContainer.setOutputMarkupId(true));\n \n-        ListViewPanel.Builder<LoggerConf> builder = new ListViewPanel.Builder<LoggerConf>(LoggerConf.class, pageRef) {\n+        ListViewPanel.Builder<LoggerConf> builder = new ListViewPanel.Builder<>(LoggerConf.class, pageRef) {\n \n             private static final long serialVersionUID = 6957788356709885298L;\n \n             @Override\n             protected Component getValueComponent(final String key, final LoggerConf loggerConf) {\n                 if (\"level\".equalsIgnoreCase(key)) {\n                     AjaxDropDownChoicePanel<LogLevel> loggerLevel = new AjaxDropDownChoicePanel<>(\n-                            \"field\", getString(\"level\"), Model.of(loggerConf.getLevel()), false);\n+                        \"field\", getString(\"level\"), Model.of(loggerConf.getLevel()), false);\n                     MetaDataRoleAuthorizationStrategy.authorize(loggerLevel, ENABLE, IdRepoEntitlement.LOGGER_UPDATE);\n \n                     loggerLevel.hideLabel();"},{"sha":"f16698b39a34f79177da0e73a46272fd37a5b008","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/MembersTogglePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMembersTogglePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -47,14 +47,14 @@ public abstract class MembersTogglePanel extends TogglePanel<Serializable> {\n \n     protected final Model<String> typeModel = new Model<>();\n \n-    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<List<String>>() {\n+    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n             return AnyTypeRestClient.list().stream().\n-                    filter(anyType -> !AnyTypeKind.GROUP.name().equals(anyType)).collect(Collectors.toList());\n+                filter(anyType -> !AnyTypeKind.GROUP.name().equals(anyType)).collect(Collectors.toList());\n         }\n     };\n "},{"sha":"cd21fad8576670f9db0d42749eabed356d01dc26","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/NetworkServiceDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNetworkServiceDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNetworkServiceDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNetworkServiceDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -121,7 +121,7 @@ public long size() {\n \n         @Override\n         public IModel<NetworkService> model(final NetworkService service) {\n-            return new IModel<NetworkService>() {\n+            return new IModel<>() {\n \n                 private static final long serialVersionUID = 999513782683391483L;\n "},{"sha":"40704f708f42f3f69f693de3a994ab9859797cba","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -63,7 +63,7 @@\n     private ConfParamOps confParamOps;\n \n     public ParametersDirectoryPanel(final String id, final PageReference pageRef) {\n-        super(id, new Builder<ConfParam, ConfParam, SyncopeRestClient>(new SyncopeRestClient(), pageRef) {\n+        super(id, new Builder<>(new SyncopeRestClient(), pageRef) {\n \n             private static final long serialVersionUID = 8769126634538601689L;\n \n@@ -112,19 +112,19 @@ protected Collection<ActionLink.ActionType> getBatches() {\n     protected List<IColumn<ConfParam, String>> getColumns() {\n         final List<IColumn<ConfParam, String>> columns = new ArrayList<>();\n         columns.add(new PropertyColumn<>(new ResourceModel(\"schema\"), \"schema\"));\n-        columns.add(new PropertyColumn<ConfParam, String>(new ResourceModel(\"values\"), \"values\") {\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"values\"), \"values\") {\n \n             private static final long serialVersionUID = -1822504503325964706L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<ConfParam>> item,\n-                    final String componentId,\n-                    final IModel<ConfParam> rowModel) {\n+                final Item<ICellPopulator<ConfParam>> item,\n+                final String componentId,\n+                final IModel<ConfParam> rowModel) {\n \n                 if (rowModel.getObject().getValues().toString().length() > 96) {\n                     item.add(new Label(componentId, getString(\"tooLong\")).\n-                            add(new AttributeModifier(\"style\", \"font-style:italic\")));\n+                        add(new AttributeModifier(\"style\", \"font-style:italic\")));\n                 } else {\n                     super.populateItem(item, componentId, rowModel);\n                 }\n@@ -137,7 +137,7 @@ public void populateItem(\n     public ActionsPanel<ConfParam> getActions(final IModel<ConfParam> model) {\n         final ActionsPanel<ConfParam> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<ConfParam>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -146,12 +146,12 @@ public void onClick(final AjaxRequestTarget target, final ConfParam ignore) {\n                 target.add(modal);\n                 modal.header(new StringResourceModel(\"any.edit\"));\n                 modal.setContent(new ParametersModalPanel(\n-                        modal, model.getObject(), confParamOps, AjaxWizard.Mode.EDIT, pageRef));\n+                    modal, model.getObject(), confParamOps, AjaxWizard.Mode.EDIT, pageRef));\n                 modal.show(true);\n             }\n         }, ActionLink.ActionType.EDIT, null);\n \n-        panel.add(new ActionLink<ConfParam>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"de61f0f5f2dd6ec2f24e4a9fafad6ae0c2059a13","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersWizardAttrStep.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersWizardAttrStep.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -65,7 +65,7 @@ public ParametersWizardAttrStep(\n         schema.setReadOnly(mode != AjaxWizard.Mode.CREATE);\n         content.add(schema);\n \n-        LoadableDetachableModel<List<PlainSchemaTO>> schemas = new LoadableDetachableModel<List<PlainSchemaTO>>() {\n+        LoadableDetachableModel<List<PlainSchemaTO>> schemas = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 7172461137064525667L;\n \n@@ -75,7 +75,7 @@ protected List<PlainSchemaTO> load() {\n             }\n         };\n \n-        ListView<PlainSchemaTO> attrs = new ListView<PlainSchemaTO>(\"attrs\", schemas) {\n+        ListView<PlainSchemaTO> attrs = new ListView<>(\"attrs\", schemas) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n "},{"sha":"cfcf5f7157c14db49ba1383aa3eb1d19d81ecfd1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -95,14 +95,14 @@ public PlainSchemaDetails(final String id, final PlainSchemaTO schemaTO) {\n         AjaxTextFieldPanel enumerationValuesPanel = new AjaxTextFieldPanel(\"panel\",\n                 \"enumerationValues\", new Model<>(null));\n \n-        enumerationValues = new MultiFieldPanel.Builder<String>(\n+        enumerationValues = new MultiFieldPanel.Builder<>(\n                 new PropertyModel<List<String>>(schemaTO, \"enumerationValues\") {\n \n             private static final long serialVersionUID = -4953564762272833993L;\n \n             @Override\n             public PropertyList<PlainSchemaTO> getObject() {\n-                return new PropertyList<PlainSchemaTO>() {\n+                return new PropertyList<>() {\n \n                     @Override\n                     public String getValues() {"},{"sha":"9cdaa592d93847061f1654e6d34e8b79cdd34487","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/PrivilegeDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPrivilegeDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -95,19 +95,19 @@ protected List<IColumn<PrivilegeTO, String>> getColumns() {\n     protected ActionsPanel<PrivilegeTO> getActions(final IModel<PrivilegeTO> model) {\n         ActionsPanel<PrivilegeTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<PrivilegeTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final PrivilegeTO ignore) {\n                 PrivilegeDirectoryPanel.this.getTogglePanel().close(target);\n                 send(PrivilegeDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.APPLICATION_UPDATE);\n \n-        panel.add(new ActionLink<PrivilegeTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"625d2bc42378d472613fe0710e261578c630cf00","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -109,7 +109,7 @@ public Panel getPanel(final String panelId) {\n                 final ActionsPanel<RealmTO> actionPanel = new ActionsPanel<>(\"actions\", null);\n \n                 if (StringUtils.startsWith(realmTO.getFullPath(), SyncopeConstants.ROOT_REALM)) {\n-                    actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+                    actionPanel.add(new ActionLink<>(realmTO) {\n \n                         private static final long serialVersionUID = 2802988981431379827L;\n \n@@ -119,7 +119,7 @@ public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n                         }\n                     }, ActionLink.ActionType.CREATE, IdRepoEntitlement.REALM_CREATE).hideLabel();\n \n-                    actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+                    actionPanel.add(new ActionLink<>(realmTO) {\n \n                         private static final long serialVersionUID = 2802988981431379828L;\n \n@@ -129,7 +129,7 @@ public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n                         }\n                     }, ActionLink.ActionType.EDIT, IdRepoEntitlement.REALM_UPDATE).hideLabel();\n \n-                    actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+                    actionPanel.add(new ActionLink<>(realmTO) {\n \n                         private static final long serialVersionUID = 2802988981431379827L;\n \n@@ -139,7 +139,7 @@ public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n                         }\n                     }, ActionLink.ActionType.TEMPLATE, IdRepoEntitlement.REALM_UPDATE).hideLabel();\n \n-                    actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+                    actionPanel.add(new ActionLink<>(realmTO) {\n \n                         private static final long serialVersionUID = 2802988981431379829L;\n \n@@ -205,8 +205,8 @@ protected Panel customResultBody(final String panelId, final RealmTO item, final\n         propagations.add(syncope);\n         propagations.addAll(((ProvisioningResult) result).getPropagationStatuses());\n \n-        ListViewPanel.Builder<PropagationStatus> builder = new ListViewPanel.Builder<PropagationStatus>(\n-                PropagationStatus.class, pageRef) {\n+        ListViewPanel.Builder<PropagationStatus> builder = new ListViewPanel.Builder<>(\n+            PropagationStatus.class, pageRef) {\n \n             private static final long serialVersionUID = -6809736686861678498L;\n \n@@ -215,12 +215,12 @@ protected Component getValueComponent(final String key, final PropagationStatus\n                 if (\"afterObj\".equalsIgnoreCase(key)) {\n                     ConnObjectTO afterObj = bean.getAfterObj();\n                     String remoteId = afterObj == null\n-                            || afterObj.getAttrs().isEmpty()\n-                            || afterObj.getAttr(ConnIdSpecialName.NAME).isEmpty()\n-                            || afterObj.getAttr(ConnIdSpecialName.NAME).get().getValues() == null\n-                            || afterObj.getAttr(ConnIdSpecialName.NAME).get().getValues().isEmpty()\n-                            ? StringUtils.EMPTY\n-                            : afterObj.getAttr(ConnIdSpecialName.NAME).get().getValues().get(0);\n+                        || afterObj.getAttrs().isEmpty()\n+                        || afterObj.getAttr(ConnIdSpecialName.NAME).isEmpty()\n+                        || afterObj.getAttr(ConnIdSpecialName.NAME).get().getValues() == null\n+                        || afterObj.getAttr(ConnIdSpecialName.NAME).get().getValues().isEmpty()\n+                        ? StringUtils.EMPTY\n+                        : afterObj.getAttr(ConnIdSpecialName.NAME).get().getValues().get(0);\n \n                     return new Label(\"field\", remoteId);\n                 } else if (\"status\".equalsIgnoreCase(key)) {\n@@ -237,15 +237,15 @@ protected Component getValueComponent(final String key, final PropagationStatus\n         builder.withChecks(ListViewPanel.CheckAvailability.NONE);\n         builder.setReuseItem(false);\n \n-        ActionLink<PropagationStatus> connObjectLink = new ActionLink<PropagationStatus>() {\n+        ActionLink<PropagationStatus> connObjectLink = new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             protected boolean statusCondition(final PropagationStatus bean) {\n                 return !Constants.SYNCOPE.equals(bean.getResource())\n-                        && (ExecStatus.CREATED == bean.getStatus()\n-                        || ExecStatus.SUCCESS == bean.getStatus());\n+                    && (ExecStatus.CREATED == bean.getStatus()\n+                    || ExecStatus.SUCCESS == bean.getStatus());\n             }\n \n             @Override\n@@ -255,7 +255,7 @@ public void onClick(final AjaxRequestTarget target, final PropagationStatus stat\n         };\n         SyncopeWebApplication.get().getStatusProvider().addConnObjectLink(builder, connObjectLink);\n \n-        builder.addAction(new ActionLink<PropagationStatus>() {\n+        builder.addAction(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"d4c149d6021087c7b5f3137f16dfa5792431a285","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RealmChoicePanel.java","status":"modified","additions":58,"deletions":58,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -99,7 +99,7 @@ public RealmChoicePanel(final String id, final PageReference pageRef) {\n         tree = new HashMap<>();\n         isSearchEnabled = RealmsUtils.isSearchEnabled(SyncopeConsoleSession.get().getSearchableRealms());\n \n-        realmTree = new LoadableDetachableModel<List<Pair<String, RealmTO>>>() {\n+        realmTree = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = -7688359318035249200L;\n \n@@ -109,24 +109,24 @@ protected List<Pair<String, RealmTO>> load() {\n                 List<Pair<String, RealmTO>> full;\n                 if (isSearchEnabled) {\n                     full = map.entrySet().stream().map(el -> Pair.of(\n-                            el.getKey(),\n-                            el.getValue().getLeft())).\n-                            collect(Collectors.toList());\n+                        el.getKey(),\n+                        el.getValue().getLeft())).\n+                        collect(Collectors.toList());\n                 } else {\n                     full = map.entrySet().stream().\n-                            map(el -> Pair.of(\n+                        map(el -> Pair.of(\n                             el.getValue().getLeft().getFullPath(),\n                             el.getValue().getKey())).\n-                            sorted(Comparator.comparing(Pair::getLeft)).\n-                            collect(Collectors.toList());\n+                        sorted(Comparator.comparing(Pair::getLeft)).\n+                        collect(Collectors.toList());\n                 }\n                 return full.stream().filter(realm -> availableRealms.stream().anyMatch(\n-                        availableRealm -> realm.getValue().getFullPath().startsWith(availableRealm))).\n-                        collect(Collectors.toList());\n+                    availableRealm -> realm.getValue().getFullPath().startsWith(availableRealm))).\n+                    collect(Collectors.toList());\n             }\n         };\n \n-        dynRealmTree = new LoadableDetachableModel<List<DynRealmTO>>() {\n+        dynRealmTree = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -143,7 +143,7 @@ protected List<DynRealmTO> load() {\n                     }\n                 });\n                 return dynRealms.stream().filter(dynRealm -> availableRealms.stream().\n-                        anyMatch(availableRealm -> SyncopeConstants.ROOT_REALM.equals(availableRealm)\n+                    anyMatch(availableRealm -> SyncopeConstants.ROOT_REALM.equals(availableRealm)\n                         || dynRealm.getKey().equals(availableRealm))).collect(Collectors.toList());\n             }\n         };\n@@ -162,7 +162,7 @@ protected List<DynRealmTO> load() {\n                         placeholder.setFullPath(rootRealm);\n                         return placeholder;\n                     });\n-        }).orElseGet(() -> new RealmTO());\n+        }).orElseGet(RealmTO::new);\n \n         model = Model.of(realmTO);\n         searchQuery = realmTO.getName();\n@@ -195,43 +195,43 @@ public final void reloadRealmTree() {\n             settings.setShowListOnEmptyInput(false);\n \n             final AutoCompleteTextField<String> searchRealms =\n-                    new AutoCompleteTextField<String>(SEARCH_REALMS, new Model<String>(), settings) {\n+                new AutoCompleteTextField<>(SEARCH_REALMS, new Model<>(), settings) {\n \n-                private static final long serialVersionUID = -6635259975264955783L;\n+                    private static final long serialVersionUID = -6635259975264955783L;\n \n-                @Override\n-                protected Iterator<String> getChoices(final String input) {\n-                    searchQuery = input;\n-                    realmsChoices = RealmsUtils.checkInput(input)\n+                    @Override\n+                    protected Iterator<String> getChoices(final String input) {\n+                        searchQuery = input;\n+                        realmsChoices = RealmsUtils.checkInput(input)\n                             ? buildRealmChoices()\n                             : List.of();\n-                    return realmsChoices.stream().\n-                            map(item -> item.getFullPath()).sorted().collect(Collectors.toList()).iterator();\n-                }\n+                        return realmsChoices.stream().\n+                            map(RealmTO::getFullPath).sorted().collect(Collectors.toList()).iterator();\n+                    }\n \n-                @Override\n-                protected AutoCompleteBehavior<String> newAutoCompleteBehavior(\n+                    @Override\n+                    protected AutoCompleteBehavior<String> newAutoCompleteBehavior(\n                         final IAutoCompleteRenderer<String> renderer,\n                         final AutoCompleteSettings settings) {\n-                    return super.newAutoCompleteBehavior(new AbstractAutoCompleteRenderer<String>() {\n+                        return super.newAutoCompleteBehavior(new AbstractAutoCompleteRenderer<>() {\n \n-                        private static final long serialVersionUID = -4789925973199139157L;\n+                            private static final long serialVersionUID = -4789925973199139157L;\n \n-                        @Override\n-                        protected void renderChoice(\n+                            @Override\n+                            protected void renderChoice(\n                                 final String object,\n                                 final Response response,\n                                 final String criteria) {\n-                            response.write(object);\n-                        }\n-\n-                        @Override\n-                        protected String getTextValue(final String object) {\n-                            return object;\n-                        }\n-                    }, settings);\n-                }\n-            };\n+                                response.write(object);\n+                            }\n+\n+                            @Override\n+                            protected String getTextValue(final String object) {\n+                                return object;\n+                            }\n+                        }, settings);\n+                    }\n+                };\n \n             searchRealms.add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -279,11 +279,11 @@ protected List<AbstractLink> newSubMenuButtons(final String buttonMarkupId) {\n \n     private void buildRealmLinks(final Label label, final Label realmLabel) {\n         RealmChoicePanel.this.links.clear();\n-        RealmChoicePanel.this.links.add(new BootstrapAjaxLink<RealmTO>(\n-                ButtonList.getButtonMarkupId(),\n-                new Model<RealmTO>(),\n-                Buttons.Type.Link,\n-                new ResourceModel(\"realms\", \"Realms\")) {\n+        RealmChoicePanel.this.links.add(new BootstrapAjaxLink<>(\n+            ButtonList.getButtonMarkupId(),\n+            new Model<>(),\n+            Buttons.Type.Link,\n+            new ResourceModel(\"realms\", \"Realms\")) {\n \n             private static final long serialVersionUID = -7978723352517770744L;\n \n@@ -303,11 +303,11 @@ protected void onComponentTag(final ComponentTag tag) {\n         });\n \n         realmTree.getObject().forEach(link -> {\n-            RealmChoicePanel.this.links.add(new BootstrapAjaxLink<RealmTO>(\n-                    ButtonList.getButtonMarkupId(),\n-                    Model.of(link.getRight()),\n-                    Buttons.Type.Link,\n-                    new Model<>(link.getLeft())) {\n+            RealmChoicePanel.this.links.add(new BootstrapAjaxLink<>(\n+                ButtonList.getButtonMarkupId(),\n+                Model.of(link.getRight()),\n+                Buttons.Type.Link,\n+                new Model<>(link.getLeft())) {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -323,11 +323,11 @@ public void onClick(final AjaxRequestTarget target) {\n         });\n \n         if (!dynRealmTree.getObject().isEmpty()) {\n-            RealmChoicePanel.this.links.add(new BootstrapAjaxLink<RealmTO>(\n-                    ButtonList.getButtonMarkupId(),\n-                    new Model<RealmTO>(),\n-                    Buttons.Type.Link,\n-                    new ResourceModel(\"dynrealms\", \"Dynamic Realms\")) {\n+            RealmChoicePanel.this.links.add(new BootstrapAjaxLink<>(\n+                ButtonList.getButtonMarkupId(),\n+                new Model<>(),\n+                Buttons.Type.Link,\n+                new ResourceModel(\"dynrealms\", \"Dynamic Realms\")) {\n \n                 private static final long serialVersionUID = -7978723352517770744L;\n \n@@ -353,11 +353,11 @@ protected void onComponentTag(final ComponentTag tag) {\n                 realmTO.setName(dynRealmTO.getKey());\n                 realmTO.setFullPath(dynRealmTO.getKey());\n \n-                RealmChoicePanel.this.links.add(new BootstrapAjaxLink<RealmTO>(\n-                        ButtonList.getButtonMarkupId(),\n-                        new Model<RealmTO>(),\n-                        Buttons.Type.Link,\n-                        new Model<>(realmTO.getKey())) {\n+                RealmChoicePanel.this.links.add(new BootstrapAjaxLink<>(\n+                    ButtonList.getButtonMarkupId(),\n+                    new Model<>(),\n+                    Buttons.Type.Link,\n+                    new Model<>(realmTO.getKey())) {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -423,7 +423,7 @@ private Map<String, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final Lis\n \n     private List<RealmTO> buildRealmChoices() {\n         return Stream.of(\n-                realmTree.getObject().stream().map(item -> item.getValue()).collect(Collectors.toList()),\n+                realmTree.getObject().stream().map(Pair::getValue).collect(Collectors.toList()),\n                 dynRealmTree.getObject().stream().map(\n                         item -> {\n                             final RealmTO realmTO = new RealmTO();"},{"sha":"9c689f4c305b5d60ac0b33bba41e5ce376e5bf70","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -50,18 +50,18 @@ public class RealmDetails extends Panel {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(RealmDetails.class);\n \n-    private final IModel<List<String>> logicActions = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> logicActions = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n             return ImplementationRestClient.list(IdRepoImplementationType.LOGIC_ACTIONS).stream().\n-                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n-    private final LoadableDetachableModel<List<String>> resources = new LoadableDetachableModel<List<String>>() {\n+    private final LoadableDetachableModel<List<String>> resources = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n "},{"sha":"23c86dc3e4e7d77865971509881b135cdc96d55f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -134,8 +134,8 @@ protected List<IColumn<RelationshipTypeTO, String>> getColumns() {\n                     columns.add(new BooleanPropertyColumn<>(\n                             new ResourceModel(field.getName()), field.getName(), field.getName()));\n                 } else {\n-                    columns.add(new PropertyColumn<RelationshipTypeTO, String>(\n-                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n+                    columns.add(new PropertyColumn<>(\n+                        new ResourceModel(field.getName()), field.getName(), field.getName()) {\n \n                         private static final long serialVersionUID = -6902459669035442212L;\n \n@@ -144,8 +144,8 @@ public String getCssClass() {\n                             String css = super.getCssClass();\n                             if (Constants.KEY_FIELD_NAME.equals(fieldName)) {\n                                 css = StringUtils.isBlank(css)\n-                                        ? \"col-xs-1\"\n-                                        : css + \" col-xs-1\";\n+                                    ? \"col-xs-1\"\n+                                    : css + \" col-xs-1\";\n                             }\n                             return css;\n                         }\n@@ -161,17 +161,17 @@ public String getCssClass() {\n     public ActionsPanel<RelationshipTypeTO> getActions(final IModel<RelationshipTypeTO> model) {\n         final ActionsPanel<RelationshipTypeTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<RelationshipTypeTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n                 send(RelationshipTypesPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.RELATIONSHIPTYPE_UPDATE);\n-        panel.add(new ActionLink<RelationshipTypeTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"cacdc8fcd6d95bb17ce7200d4c790e576df1c681","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":43,"deletions":43,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -128,20 +128,20 @@ protected List<IColumn<RoleTO, String>> getColumns() {\n     public ActionsPanel<RoleTO> getActions(final IModel<RoleTO> model) {\n         final ActionsPanel<RoleTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<RoleTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                 send(RoleDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                new RoleWrapper(RoleRestClient.read(model.getObject().getKey())),\n-                                target));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        new RoleWrapper(RoleRestClient.read(model.getObject().getKey())),\n+                        target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.ROLE_READ);\n \n-        panel.add(new ActionLink<RoleTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -150,11 +150,11 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                 RoleTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(RoleDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.NewItemActionEvent<>(new RoleWrapper(clone), target));\n+                    new AjaxWizard.NewItemActionEvent<>(new RoleWrapper(clone), target));\n             }\n         }, ActionLink.ActionType.CLONE, IdRepoEntitlement.ROLE_CREATE);\n \n-        panel.add(new ActionLink<RoleTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -164,36 +164,36 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n \n                 AnyLayout layout = AnyLayoutUtils.fetch(AnyTypeRestClient.list());\n                 ModalPanel anyPanel = AnyLayoutUtils.newAnyPanel(\n-                        layout.getAnyPanelClass(),\n-                        BaseModal.CONTENT_ID, userType, null, layout, false,\n-                        (id, anyTypeTO, realmTO, anyLayout, pageRef) -> {\n-                            String query = SyncopeClient.getUserSearchConditionBuilder().and(\n-                                    SyncopeClient.getUserSearchConditionBuilder().inRoles(model.getObject().getKey()),\n-                                    SyncopeClient.getUserSearchConditionBuilder().\n-                                            is(Constants.KEY_FIELD_NAME).notNullValue()).\n-                                    query();\n-\n-                            Panel panel = new UserDirectoryPanel.Builder(\n-                                    AnyTypeClassRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n-                                    setRealm(SyncopeConstants.ROOT_REALM).\n-                                    setFiltered(true).\n-                                    setFiql(query).\n-                                    disableCheckBoxes().\n-                                    addNewItemPanelBuilder(AnyLayoutUtils.newLayoutInfo(\n-                                            new UserTO(),\n-                                            anyTypeTO.getClasses(),\n-                                            anyLayout.getUser(),\n-                                            pageRef), false).\n-                                    setWizardInModal(false).build(id);\n-\n-                            MetaDataRoleAuthorizationStrategy.authorize(\n-                                    panel,\n-                                    WebPage.RENDER,\n-                                    IdRepoEntitlement.USER_SEARCH);\n-\n-                            return panel;\n-                        },\n-                        pageRef);\n+                    layout.getAnyPanelClass(),\n+                    BaseModal.CONTENT_ID, userType, null, layout, false,\n+                    (id, anyTypeTO, realmTO, anyLayout, pageRef) -> {\n+                        String query = SyncopeClient.getUserSearchConditionBuilder().and(\n+                            SyncopeClient.getUserSearchConditionBuilder().inRoles(model.getObject().getKey()),\n+                            SyncopeClient.getUserSearchConditionBuilder().\n+                                is(Constants.KEY_FIELD_NAME).notNullValue()).\n+                            query();\n+\n+                        Panel panel = new UserDirectoryPanel.Builder(\n+                            AnyTypeClassRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                            setRealm(SyncopeConstants.ROOT_REALM).\n+                            setFiltered(true).\n+                            setFiql(query).\n+                            disableCheckBoxes().\n+                            addNewItemPanelBuilder(AnyLayoutUtils.newLayoutInfo(\n+                                new UserTO(),\n+                                anyTypeTO.getClasses(),\n+                                anyLayout.getUser(),\n+                                pageRef), false).\n+                            setWizardInModal(false).build(id);\n+\n+                        MetaDataRoleAuthorizationStrategy.authorize(\n+                            panel,\n+                            WebPage.RENDER,\n+                            IdRepoEntitlement.USER_SEARCH);\n+\n+                        return panel;\n+                    },\n+                    pageRef);\n \n                 membersModal.header(new StringResourceModel(\"role.members\", RoleDirectoryPanel.this, model));\n                 membersModal.setContent(anyPanel);\n@@ -202,20 +202,20 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n             }\n         }, ActionLink.ActionType.MEMBERS, IdRepoEntitlement.USER_SEARCH);\n \n-        panel.add(new ActionLink<RoleTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n                 AnyLayoutWrapper wrapper = new AnyLayoutWrapper(\n-                        model.getObject().getKey(),\n-                        AnyLayoutUtils.defaultIfEmpty(\n-                                RoleRestClient.readAnyLayout(model.getObject().getKey()), AnyTypeRestClient.list()));\n+                    model.getObject().getKey(),\n+                    AnyLayoutUtils.defaultIfEmpty(\n+                        RoleRestClient.readAnyLayout(model.getObject().getKey()), AnyTypeRestClient.list()));\n \n                 utilityModal.header(new ResourceModel(\"console.layout.info\", \"JSON Content\"));\n                 utilityModal.setContent(new JsonEditorPanel(\n-                        utilityModal, new PropertyModel<String>(wrapper, \"content\"), false, pageRef) {\n+                    utilityModal, new PropertyModel<>(wrapper, \"content\"), false, pageRef) {\n \n                     private static final long serialVersionUID = -8927036362466990179L;\n \n@@ -237,7 +237,7 @@ public void onSubmit(final AjaxRequestTarget target) {\n                 target.add(utilityModal);\n             }\n         }, ActionLink.ActionType.LAYOUT_EDIT, IdRepoEntitlement.ROLE_UPDATE);\n-        panel.add(new ActionLink<RoleTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"45aefb9e5087c2ac57d52b37540594a01b535d55","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -125,8 +125,8 @@ protected List<IColumn<SchemaTO, String>> getColumns() {\n                 if (clazzField.getType().equals(Boolean.class) || clazzField.getType().equals(boolean.class)) {\n                     columns.add(new BooleanPropertyColumn<>(new ResourceModel(field), field, field));\n                 } else {\n-                    IColumn<SchemaTO, String> column = new PropertyColumn<SchemaTO, String>(\n-                            new ResourceModel(field), field, field) {\n+                    IColumn<SchemaTO, String> column = new PropertyColumn<>(\n+                        new ResourceModel(field), field, field) {\n \n                         private static final long serialVersionUID = 3282547854226892169L;\n \n@@ -135,8 +135,8 @@ public String getCssClass() {\n                             String css = super.getCssClass();\n                             if (Constants.KEY_FIELD_NAME.equals(field)) {\n                                 css = StringUtils.isBlank(css)\n-                                        ? \"col-xs-1\"\n-                                        : css + \" col-xs-1\";\n+                                    ? \"col-xs-1\"\n+                                    : css + \" col-xs-1\";\n                             }\n                             return css;\n                         }\n@@ -152,17 +152,17 @@ public String getCssClass() {\n     @Override\n     public ActionsPanel<SchemaTO> getActions(final IModel<SchemaTO> model) {\n         ActionsPanel<SchemaTO> panel = super.getActions(model);\n-        panel.add(new ActionLink<SchemaTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final SchemaTO ignore) {\n                 send(SchemaTypePanel.this, Broadcast.EXACT, new AjaxWizard.EditItemActionEvent<>(\n-                        SchemaRestClient.read(schemaType, model.getObject().getKey()), target));\n+                    SchemaRestClient.read(schemaType, model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.SCHEMA_UPDATE);\n-        panel.add(new ActionLink<SchemaTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"121ea044e4a95b2221fc4a40410a75d552ebcd2a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder.java","status":"modified","additions":69,"deletions":69,"changes":138,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -140,79 +140,79 @@ public Labels(final SchemaTO modelObject) {\n                     (locale, display) -> translations.getObject().add(MutablePair.of(locale, display)));\n \n             ListView<MutablePair<Locale, String>> labels =\n-                    new ListView<MutablePair<Locale, String>>(\"labels\", translations) {\n+                new ListView<>(\"labels\", translations) {\n \n-                private static final long serialVersionUID = -8746795666847966508L;\n+                    private static final long serialVersionUID = -8746795666847966508L;\n \n-                @Override\n-                protected void populateItem(final ListItem<MutablePair<Locale, String>> item) {\n-                    MutablePair<Locale, String> entry = item.getModelObject();\n-\n-                    AjaxTextFieldPanel locale = new AjaxTextFieldPanel(\"locale\", \"locale\", new Model<>(), true);\n-                    locale.getField().setModel(new IModel<String>() {\n-\n-                        private static final long serialVersionUID = 1500045101360533133L;\n-\n-                        @Override\n-                        public String getObject() {\n-                            return entry.getLeft() == null ? null : entry.getLeft().toString();\n-                        }\n-\n-                        @Override\n-                        public void setObject(final String object) {\n-                            entry.setLeft(LocaleUtils.toLocale(object));\n-                        }\n-                    });\n-                    locale.setRequired(true).hideLabel();\n-                    locale.setChoices(BaseLogin.SUPPORTED_LOCALES.stream().\n+                    @Override\n+                    protected void populateItem(final ListItem<MutablePair<Locale, String>> item) {\n+                        MutablePair<Locale, String> entry = item.getModelObject();\n+\n+                        AjaxTextFieldPanel locale = new AjaxTextFieldPanel(\"locale\", \"locale\", new Model<>(), true);\n+                        locale.getField().setModel(new IModel<>() {\n+\n+                            private static final long serialVersionUID = 1500045101360533133L;\n+\n+                            @Override\n+                            public String getObject() {\n+                                return entry.getLeft() == null ? null : entry.getLeft().toString();\n+                            }\n+\n+                            @Override\n+                            public void setObject(final String object) {\n+                                entry.setLeft(LocaleUtils.toLocale(object));\n+                            }\n+                        });\n+                        locale.setRequired(true).hideLabel();\n+                        locale.setChoices(BaseLogin.SUPPORTED_LOCALES.stream().\n                             map(Objects::toString).collect(Collectors.toList()));\n-                    locale.addValidator(validatable -> {\n-                        try {\n-                            LocaleUtils.toLocale(validatable.getValue());\n-                        } catch (Exception e) {\n-                            LOG.error(\"Invalid Locale: {}\", validatable.getValue(), e);\n-                            validatable.error(new ValidationError(\"Invalid Locale: \" + validatable.getValue()));\n-\n-                            RequestCycle.get().find(AjaxRequestTarget.class).\n+                        locale.addValidator(validatable -> {\n+                            try {\n+                                LocaleUtils.toLocale(validatable.getValue());\n+                            } catch (Exception e) {\n+                                LOG.error(\"Invalid Locale: {}\", validatable.getValue(), e);\n+                                validatable.error(new ValidationError(\"Invalid Locale: \" + validatable.getValue()));\n+\n+                                RequestCycle.get().find(AjaxRequestTarget.class).\n                                     ifPresent(target -> target.add(Labels.this));\n-                        }\n-                    });\n-                    item.add(locale);\n-\n-                    AjaxTextFieldPanel display = new AjaxTextFieldPanel(\"display\", \"display\", new Model<>());\n-                    display.getField().setModel(new IModel<String>() {\n-\n-                        private static final long serialVersionUID = 1500045101360533133L;\n-\n-                        @Override\n-                        public String getObject() {\n-                            return entry.getRight();\n-                        }\n-\n-                        @Override\n-                        public void setObject(final String object) {\n-                            entry.setRight(object);\n-                        }\n-                    });\n-                    display.setRequired(true).hideLabel();\n-                    item.add(display);\n-\n-                    ActionsPanel<Serializable> actions = new ActionsPanel<>(\"toRemove\", null);\n-                    actions.add(new ActionLink<Serializable>() {\n-\n-                        private static final long serialVersionUID = -3722207913631435501L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                            translations.getObject().remove(item.getIndex());\n-\n-                            item.getParent().removeAll();\n-                            target.add(Labels.this);\n-                        }\n-                    }, ActionLink.ActionType.DELETE, IdRepoEntitlement.SCHEMA_UPDATE, true).hideLabel();\n-                    item.add(actions);\n-                }\n-            };\n+                            }\n+                        });\n+                        item.add(locale);\n+\n+                        AjaxTextFieldPanel display = new AjaxTextFieldPanel(\"display\", \"display\", new Model<>());\n+                        display.getField().setModel(new IModel<>() {\n+\n+                            private static final long serialVersionUID = 1500045101360533133L;\n+\n+                            @Override\n+                            public String getObject() {\n+                                return entry.getRight();\n+                            }\n+\n+                            @Override\n+                            public void setObject(final String object) {\n+                                entry.setRight(object);\n+                            }\n+                        });\n+                        display.setRequired(true).hideLabel();\n+                        item.add(display);\n+\n+                        ActionsPanel<Serializable> actions = new ActionsPanel<>(\"toRemove\", null);\n+                        actions.add(new ActionLink<>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                                translations.getObject().remove(item.getIndex());\n+\n+                                item.getParent().removeAll();\n+                                target.add(Labels.this);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, IdRepoEntitlement.SCHEMA_UPDATE, true).hideLabel();\n+                        item.add(actions);\n+                    }\n+                };\n             labels.setReuseItems(true);\n             add(labels);\n "},{"sha":"024c9c2077c476437a31ae7915b98e6166ae67da","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -124,17 +124,17 @@ protected List<IColumn<SecurityQuestionTO, String>> getColumns() {\n     public ActionsPanel<SecurityQuestionTO> getActions(final IModel<SecurityQuestionTO> model) {\n         ActionsPanel<SecurityQuestionTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<SecurityQuestionTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n                 send(SecurityQuestionsPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.SECURITY_QUESTION_UPDATE);\n-        panel.add(new ActionLink<SecurityQuestionTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"51d8e2c1028d70936da566ac478512eb08d2223f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/TypeExtensionDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -137,17 +137,17 @@ public ActionsPanel<TypeExtensionTO> getActions(final IModel<TypeExtensionTO> mo\n         final ActionsPanel<TypeExtensionTO> panel = super.getActions(model);\n         final TypeExtensionTO typeExtension = model.getObject();\n \n-        panel.add(new ActionLink<TypeExtensionTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final TypeExtensionTO ignore) {\n                 send(TypeExtensionDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(typeExtension, target));\n+                    new AjaxWizard.EditItemActionEvent<>(typeExtension, target));\n             }\n         }, ActionLink.ActionType.EDIT, StringUtils.EMPTY);\n-        panel.add(new ActionLink<TypeExtensionTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"2a6dc1d3be5cf8fca1d8ed9af0ebda16e0582b89","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":84,"deletions":84,"changes":168,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -101,14 +101,14 @@ protected Collection<ActionType> getBatches() {\n     public ActionsPanel<Serializable> getHeader(final String componentId) {\n         final ActionsPanel<Serializable> panel = super.getHeader(componentId);\n \n-        panel.add(new ActionLink<Serializable>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.add(displayAttributeModal.setContent(new UserDisplayAttributesModalPanel<>(\n-                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n+                    displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n \n                 displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                 displayAttributeModal.addSubmitButton();\n@@ -127,22 +127,22 @@ protected boolean statusCondition(final Serializable modelObject) {\n     public ActionsPanel<UserTO> getActions(final IModel<UserTO> model) {\n         final ActionsPanel<UserTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<UserTO>() {\n+        panel.add(new ActionLink<>() {\n \n-            private static final long serialVersionUID = -7978723352517770644L;\n+                      private static final long serialVersionUID = -7978723352517770644L;\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                send(UserDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                new UserWrapper(new UserRestClient().read(model.getObject().getKey())),\n-                                target));\n-            }\n-        }, ActionType.EDIT,\n+                      @Override\n+                      public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                          send(UserDirectoryPanel.this, Broadcast.EXACT,\n+                              new AjaxWizard.EditItemActionEvent<>(\n+                                  new UserWrapper(new UserRestClient().read(model.getObject().getKey())),\n+                                  target));\n+                      }\n+                  }, ActionType.EDIT,\n                 String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.USER_UPDATE)).\n                 setRealms(realm, model.getObject().getDynRealms());\n \n-        panel.add(new ActionLink<UserTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -151,9 +151,9 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 try {\n                     model.setObject(restClient.read(model.getObject().getKey()));\n                     restClient.mustChangePassword(\n-                            model.getObject().getETagValue(),\n-                            !model.getObject().isMustChangePassword(),\n-                            model.getObject().getKey());\n+                        model.getObject().getETagValue(),\n+                        !model.getObject().isMustChangePassword(),\n+                        model.getObject().getKey());\n \n                     SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                     target.add(container);\n@@ -167,24 +167,24 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 setRealms(realm, model.getObject().getDynRealms());\n \n         if (wizardInModal) {\n-            panel.add(new ActionLink<UserTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -4875218360625971340L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                     model.setObject(restClient.read(model.getObject().getKey()));\n                     IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                            new AnyWrapper<>(model.getObject()));\n+                        new AnyWrapper<>(model.getObject()));\n                     displayAttributeModal.setFormModel(formModel);\n \n                     target.add(displayAttributeModal.setContent(new ChangePasswordModal(\n-                            displayAttributeModal,\n-                            pageRef,\n-                            new UserWrapper(model.getObject()))));\n+                        displayAttributeModal,\n+                        pageRef,\n+                        new UserWrapper(model.getObject()))));\n \n                     displayAttributeModal.header(new Model<>(\n-                            getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+                        getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n \n                     displayAttributeModal.show(true);\n                 }\n@@ -193,15 +193,15 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n             PlatformInfo platformInfo = SyncopeConsoleSession.get().getAnonymousClient().platform();\n             if (platformInfo.isPwdResetAllowed() && !platformInfo.isPwdResetRequiringSecurityQuestions()) {\n-                panel.add(new ActionLink<UserTO>() {\n+                panel.add(new ActionLink<>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         try {\n                             SyncopeConsoleSession.get().getAnonymousClient().getService(UserSelfService.class).\n-                                    requestPasswordReset(model.getObject().getUsername(), null);\n+                                requestPasswordReset(model.getObject().getUsername(), null);\n \n                             SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                             target.add(container);\n@@ -223,28 +223,28 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                     this,\n                     pageRef).forEach(panel::add);\n \n-            panel.add(new ActionLink<UserTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                     target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                            utilityModal, AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n+                        utilityModal, AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n \n                     utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n                     utilityModal.show(true);\n                 }\n             }, ActionType.PROPAGATION_TASKS, IdRepoEntitlement.TASK_LIST);\n \n-            panel.add(new ActionLink<UserTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                     target.add(utilityModal.setContent(\n-                            new NotificationTasks(AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n+                        new NotificationTasks(AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n                     utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n                     utilityModal.show(true);\n                     target.add(utilityModal);\n@@ -253,64 +253,64 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n         }\n \n         if (wizardInModal) {\n-            panel.add(new ActionLink<UserTO>() {\n-\n-                private static final long serialVersionUID = -1978723352517770644L;\n-\n-                @Override\n-                public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                    model.setObject(restClient.read(model.getObject().getKey()));\n-                    target.add(altDefaultModal.setContent(new AuditHistoryModal<UserTO>(\n-                            altDefaultModal,\n-                            AuditElements.EventCategoryType.LOGIC,\n-                            \"UserLogic\",\n-                            model.getObject(),\n-                            IdRepoEntitlement.USER_UPDATE,\n-                            pageRef) {\n-\n-                        private static final long serialVersionUID = 959378158400669867L;\n-\n-                        @Override\n-                        protected void restore(final String json, final AjaxRequestTarget target) {\n-                            // The original audit record masks the password and the security\n-                            // answer; so we cannot use the audit record to resurrect the entry\n-                            // based on mask data.\n-                            //\n-                            // The method behavior below will reset the audit record such\n-                            // that the current security answer and the password for the object\n-                            // are always maintained, and such properties for the\n-                            // user cannot be restored using audit records.\n-                            UserTO original = model.getObject();\n-                            try {\n-                                UserTO updated = MAPPER.readValue(json, UserTO.class);\n-                                UserUR updateReq = AnyOperations.diff(updated, original, false);\n-                                updateReq.setPassword(null);\n-                                updateReq.setSecurityAnswer(null);\n-                                ProvisioningResult<UserTO> result =\n-                                        restClient.update(original.getETagValue(), updateReq);\n-                                model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n-\n-                                SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n-                                target.add(container);\n-                            } catch (Exception e) {\n-                                LOG.error(\"While restoring user {}\", model.getObject().getKey(), e);\n-                                SyncopeConsoleSession.get().onException(e);\n-                            }\n-                            ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                        }\n-                    }));\n-\n-                    altDefaultModal.header(new Model<>(\n-                            getString(\"auditHistory.title\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                    altDefaultModal.show(true);\n-                }\n-            }, ActionType.VIEW_AUDIT_HISTORY,\n+            panel.add(new ActionLink<>() {\n+\n+                          private static final long serialVersionUID = -1978723352517770644L;\n+\n+                          @Override\n+                          public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                              model.setObject(restClient.read(model.getObject().getKey()));\n+                              target.add(altDefaultModal.setContent(new AuditHistoryModal<>(\n+                                  altDefaultModal,\n+                                  AuditElements.EventCategoryType.LOGIC,\n+                                  \"UserLogic\",\n+                                  model.getObject(),\n+                                  IdRepoEntitlement.USER_UPDATE,\n+                                  pageRef) {\n+\n+                                  private static final long serialVersionUID = 959378158400669867L;\n+\n+                                  @Override\n+                                  protected void restore(final String json, final AjaxRequestTarget target) {\n+                                      // The original audit record masks the password and the security\n+                                      // answer; so we cannot use the audit record to resurrect the entry\n+                                      // based on mask data.\n+                                      //\n+                                      // The method behavior below will reset the audit record such\n+                                      // that the current security answer and the password for the object\n+                                      // are always maintained, and such properties for the\n+                                      // user cannot be restored using audit records.\n+                                      UserTO original = model.getObject();\n+                                      try {\n+                                          UserTO updated = MAPPER.readValue(json, UserTO.class);\n+                                          UserUR updateReq = AnyOperations.diff(updated, original, false);\n+                                          updateReq.setPassword(null);\n+                                          updateReq.setSecurityAnswer(null);\n+                                          ProvisioningResult<UserTO> result =\n+                                              restClient.update(original.getETagValue(), updateReq);\n+                                          model.getObject().setLastChangeDate(result.getEntity().getLastChangeDate());\n+\n+                                          SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                                          target.add(container);\n+                                      } catch (Exception e) {\n+                                          LOG.error(\"While restoring user {}\", model.getObject().getKey(), e);\n+                                          SyncopeConsoleSession.get().onException(e);\n+                                      }\n+                                      ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                                  }\n+                              }));\n+\n+                              altDefaultModal.header(new Model<>(\n+                                  getString(\"auditHistory.title\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                              altDefaultModal.show(true);\n+                          }\n+                      }, ActionType.VIEW_AUDIT_HISTORY,\n                     String.format(\"%s,%s\", IdRepoEntitlement.USER_READ, IdRepoEntitlement.AUDIT_LIST)).\n                     setRealms(realm, model.getObject().getDynRealms());\n         }\n \n-        panel.add(new ActionLink<UserTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -320,7 +320,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 clone.setKey(null);\n                 clone.setUsername(model.getObject().getUsername() + \"_clone\");\n                 send(UserDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.NewItemActionEvent<>(new UserWrapper(clone), target));\n+                    new AjaxWizard.NewItemActionEvent<>(new UserWrapper(clone), target));\n             }\n \n             @Override\n@@ -329,7 +329,7 @@ protected boolean statusCondition(final UserTO modelObject) {\n             }\n         }, ActionType.CLONE, IdRepoEntitlement.USER_CREATE).setRealm(realm);\n \n-        panel.add(new ActionLink<UserTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"5cf2392356e4b653605b0d4efe4f3ea54adc77c1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -144,7 +144,7 @@ protected AbstractSearchPanel(\n \n         Pair<IModel<List<String>>, IModel<Integer>> groupInfo =\n                 typeKind != AnyTypeKind.GROUP && SyncopeConsoleSession.get().owns(IdRepoEntitlement.GROUP_SEARCH)\n-                ? Pair.of(groupNames, new LoadableDetachableModel<Integer>() {\n+                ? Pair.of(groupNames, new LoadableDetachableModel<>() {\n \n                     private static final long serialVersionUID = 7362833782319137329L;\n \n@@ -165,7 +165,7 @@ protected Integer load() {\n             searchClausePanel.enableSearch(builder.resultContainer);\n         }\n \n-        MultiFieldPanel.Builder<SearchClause> searchView = new MultiFieldPanel.Builder<SearchClause>(model) {\n+        MultiFieldPanel.Builder<SearchClause> searchView = new MultiFieldPanel.Builder<>(model) {\n \n             private static final long serialVersionUID = 1343431509987473047L;\n \n@@ -179,23 +179,23 @@ protected SearchClause newModelObject() {\n     }\n \n     protected void populate() {\n-        dnames = new LoadableDetachableModel<Map<String, PlainSchemaTO>>() {\n+        dnames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected Map<String, PlainSchemaTO> load() {\n                 Map<String, PlainSchemaTO> dSchemaNames = new HashMap<>();\n                 SearchableFields.get(typeKind.getTOClass()).forEach((key, type) -> {\n-                            PlainSchemaTO plain = new PlainSchemaTO();\n-                            plain.setType(type);\n-                            dSchemaNames.put(key, plain);\n-                        });\n+                    PlainSchemaTO plain = new PlainSchemaTO();\n+                    plain.setType(type);\n+                    dSchemaNames.put(key, plain);\n+                });\n                 return dSchemaNames;\n             }\n         };\n \n-        resourceNames = new LoadableDetachableModel<List<String>>() {\n+        resourceNames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n "},{"sha":"d1c22c6de0f65263c16142d50ba8337c110bd0f7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSearchPanel.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.SchemaTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -68,7 +69,7 @@ protected AnyObjectSearchPanel(final String id, final AnyTypeKind kind, final St\n     protected void populate() {\n         super.populate();\n \n-        this.types = new LoadableDetachableModel<List<SearchClause.Type>>() {\n+        this.types = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -78,31 +79,31 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.groupNames = new LoadableDetachableModel<List<String>>() {\n+        this.groupNames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return groupRestClient.search(\n-                        SyncopeConstants.ROOT_REALM,\n-                        null,\n-                        1,\n-                        Constants.MAX_GROUP_LIST_SIZE,\n-                        new SortParam<>(Constants.NAME_FIELD_NAME, true),\n-                        null).stream().map(GroupTO::getName).collect(Collectors.toList());\n+                    SyncopeConstants.ROOT_REALM,\n+                    null,\n+                    1,\n+                    Constants.MAX_GROUP_LIST_SIZE,\n+                    new SortParam<>(Constants.NAME_FIELD_NAME, true),\n+                    null).stream().map(GroupTO::getName).collect(Collectors.toList());\n             }\n         };\n \n-        this.anames = new LoadableDetachableModel<Map<String, PlainSchemaTO>>() {\n+        this.anames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected Map<String, PlainSchemaTO> load() {\n                 return SchemaRestClient.<PlainSchemaTO>getSchemas(\n-                        SchemaType.PLAIN, null, AnyTypeRestClient.read(type).getClasses().toArray(new String[] {})).\n-                        stream().collect(Collectors.toMap(schema -> schema.getKey(), Function.identity()));\n+                    SchemaType.PLAIN, null, AnyTypeRestClient.read(type).getClasses().toArray(new String[]{})).\n+                    stream().collect(Collectors.toMap(SchemaTO::getKey, Function.identity()));\n             }\n         };\n     }"},{"sha":"672287ed3d34804e766f9918b50da16edaeeb658","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -54,14 +54,14 @@ protected AnySelectionDirectoryPanel(\n     public ActionsPanel<A> getActions(final IModel<A> model) {\n         final ActionsPanel<A> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<A>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final A ignore) {\n                 send(AnySelectionDirectoryPanel.this,\n-                        Broadcast.BUBBLE, new ItemSelection<>(target, model.getObject()));\n+                    Broadcast.BUBBLE, new ItemSelection<>(target, model.getObject()));\n             }\n         }, ActionType.SELECT, AnyEntitlement.READ.getFor(type));\n "},{"sha":"80ae8e439e071842f4bbeb1c45cf386f6688ab9a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSearchPanel.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.SchemaTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.model.IModel;\n@@ -57,7 +58,7 @@ protected GroupSearchPanel(final String id, final GroupSearchPanel.Builder build\n     protected void populate() {\n         super.populate();\n \n-        this.types = new LoadableDetachableModel<List<SearchClause.Type>>() {\n+        this.types = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -71,7 +72,7 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.groupNames = new LoadableDetachableModel<List<String>>() {\n+        this.groupNames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -81,15 +82,15 @@ protected List<String> load() {\n             }\n         };\n \n-        this.anames = new LoadableDetachableModel<Map<String, PlainSchemaTO>>() {\n+        this.anames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected Map<String, PlainSchemaTO> load() {\n                 return SchemaRestClient.<PlainSchemaTO>getSchemas(\n-                        SchemaType.PLAIN, null, AnyTypeRestClient.read(type).getClasses().toArray(new String[] {})).\n-                        stream().collect(Collectors.toMap(schema -> schema.getKey(), Function.identity()));\n+                    SchemaType.PLAIN, null, AnyTypeRestClient.read(type).getClasses().toArray(new String[]{})).\n+                    stream().collect(Collectors.toMap(SchemaTO::getKey, Function.identity()));\n             }\n         };\n     }"},{"sha":"ad11b02bd5c6862f973c346f809dc25f178509df","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -198,7 +198,7 @@ public SearchClausePanel(\n         this.privilegeNames = privilegeNames;\n         this.resourceNames = resourceNames;\n \n-        searchButton = new AjaxLink<Void>(\"search\") {\n+        searchButton = new AjaxLink<>(\"search\") {\n \n             private static final long serialVersionUID = 5538299138211283825L;\n \n@@ -217,14 +217,14 @@ public void onClick(final AjaxRequestTarget target) {\n \n         operatorFragment = new Fragment(\"operator\", \"operatorFragment\", this);\n \n-        field = new FormComponent<SearchClause>(\"container\", this.clause) {\n+        field = new FormComponent<>(\"container\", this.clause) {\n \n             private static final long serialVersionUID = -8204140666393922700L;\n \n         };\n         add(field);\n \n-        comparators = new LoadableDetachableModel<List<Comparator>>() {\n+        comparators = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -244,15 +244,15 @@ protected List<Comparator> load() {\n                     case GROUP_MEMBER:\n                     case RESOURCE:\n                         return List.of(\n-                                SearchClause.Comparator.EQUALS,\n-                                SearchClause.Comparator.NOT_EQUALS);\n+                            SearchClause.Comparator.EQUALS,\n+                            SearchClause.Comparator.NOT_EQUALS);\n \n                     case RELATIONSHIP:\n                         return List.of(\n-                                SearchClause.Comparator.IS_NOT_NULL,\n-                                SearchClause.Comparator.IS_NULL,\n-                                SearchClause.Comparator.EQUALS,\n-                                SearchClause.Comparator.NOT_EQUALS);\n+                            SearchClause.Comparator.IS_NOT_NULL,\n+                            SearchClause.Comparator.IS_NULL,\n+                            SearchClause.Comparator.EQUALS,\n+                            SearchClause.Comparator.NOT_EQUALS);\n \n                     case CUSTOM:\n                         return customizer.comparators();\n@@ -263,7 +263,7 @@ protected List<Comparator> load() {\n             }\n         };\n \n-        properties = new LoadableDetachableModel<List<String>>() {\n+        properties = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -286,19 +286,19 @@ protected List<String> load() {\n \n                     case ROLE_MEMBERSHIP:\n                         return roleNames.getObject().stream().\n-                                sorted().collect(Collectors.toList());\n+                            sorted().collect(Collectors.toList());\n \n                     case PRIVILEGE:\n                         return privilegeNames.getObject().stream().\n-                                sorted().collect(Collectors.toList());\n+                            sorted().collect(Collectors.toList());\n \n                     case RESOURCE:\n                         return resourceNames.getObject().stream().\n-                                sorted().collect(Collectors.toList());\n+                            sorted().collect(Collectors.toList());\n \n                     case RELATIONSHIP:\n                         return RelationshipTypeRestClient.list().stream().\n-                                map(RelationshipTypeTO::getKey).collect(Collectors.toList());\n+                            map(RelationshipTypeTO::getKey).collect(Collectors.toList());\n \n                     case CUSTOM:\n                         return customizer.properties();\n@@ -380,7 +380,7 @@ public FieldPanel<SearchClause> settingsDependingComponents() {\n                 withOffStyle(BootstrapToggleConfig.Style.warning).\n                 withSize(BootstrapToggleConfig.Size.mini);\n \n-        operatorFragment.add(new BootstrapToggle(\"operator\", new Model<Boolean>() {\n+        operatorFragment.add(new BootstrapToggle(\"operator\", new Model<>() {\n \n             private static final long serialVersionUID = -7157802546272668001L;\n \n@@ -676,7 +676,7 @@ private void setFieldAccess(\n     }\n \n     private IChoiceRenderer<SearchClause.Comparator> getComparatorRender(final IModel<SearchClause> clause) {\n-        return new IChoiceRenderer<SearchClause.Comparator>() {\n+        return new IChoiceRenderer<>() {\n \n             private static final long serialVersionUID = -9086043750227867686L;\n \n@@ -815,7 +815,7 @@ public String getIdValue(final SearchClause.Comparator object, final int index)\n \n             @Override\n             public SearchClause.Comparator getObject(\n-                    final String id, final IModel<? extends List<? extends SearchClause.Comparator>> choices) {\n+                final String id, final IModel<? extends List<? extends SearchClause.Comparator>> choices) {\n \n                 if (id == null) {\n                     return SearchClause.Comparator.EQUALS;"},{"sha":"57e8a60389f727c9dd14fd5b3621b261d1054c4c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -54,7 +54,7 @@ public final class SearchUtils implements Serializable {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SearchUtils.class);\n \n-    private static final BidiMap<String, String> ENCODINGS = new DualHashBidiMap<String, String>() {\n+    private static final BidiMap<String, String> ENCODINGS = new DualHashBidiMap<>() {\n \n         private static final long serialVersionUID = 5636572627689425575L;\n "},{"sha":"9b38f4d0fab6a1713c1257b7ad1d4f393df60ffb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSearchPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -54,7 +54,7 @@ protected UserSearchPanel(final String id, final Builder builder) {\n     protected void populate() {\n         super.populate();\n \n-        this.roleNames = new LoadableDetachableModel<List<String>>() {\n+        this.roleNames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -64,15 +64,15 @@ protected List<String> load() {\n             }\n         };\n \n-        this.privilegeNames = new LoadableDetachableModel<List<String>>() {\n+        this.privilegeNames = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 return ApplicationRestClient.list().stream().\n-                        flatMap(application -> application.getPrivileges().stream()).\n-                        map(EntityTO::getKey).collect(Collectors.toList());\n+                    flatMap(application -> application.getPrivileges().stream()).\n+                    map(EntityTO::getKey).collect(Collectors.toList());\n             }\n         };\n     }"},{"sha":"dd5747c4ab09a7ee17801f41764dbd7955da907c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/AccountPolicyDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -65,20 +65,20 @@ protected void addCustomColumnFields(final List<IColumn<AccountPolicyTO, String>\n \n     @Override\n     protected void addCustomActions(final ActionsPanel<AccountPolicyTO> panel, final IModel<AccountPolicyTO> model) {\n-        panel.add(new ActionLink<AccountPolicyTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final AccountPolicyTO ignore) {\n                 target.add(ruleCompositionModal.setContent(new PolicyRuleDirectoryPanel<>(\n-                        ruleCompositionModal, model.getObject().getKey(), PolicyType.ACCOUNT, pageRef)));\n+                    ruleCompositionModal, model.getObject().getKey(), PolicyType.ACCOUNT, pageRef)));\n \n                 ruleCompositionModal.header(new StringResourceModel(\n-                        \"policy.rules\", AccountPolicyDirectoryPanel.this, model));\n+                    \"policy.rules\", AccountPolicyDirectoryPanel.this, model));\n \n                 MetaDataRoleAuthorizationStrategy.authorize(\n-                        ruleCompositionModal.getForm(), ENABLE, IdRepoEntitlement.POLICY_UPDATE);\n+                    ruleCompositionModal.getForm(), ENABLE, IdRepoEntitlement.POLICY_UPDATE);\n \n                 ruleCompositionModal.show(true);\n             }"},{"sha":"409e0bcf55fa20b708737268435ed695ae969173","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PasswordPolicyDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -62,20 +62,20 @@ protected void addCustomColumnFields(final List<IColumn<PasswordPolicyTO, String\n \n     @Override\n     protected void addCustomActions(final ActionsPanel<PasswordPolicyTO> panel, final IModel<PasswordPolicyTO> model) {\n-        panel.add(new ActionLink<PasswordPolicyTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final PasswordPolicyTO ignore) {\n                 target.add(ruleCompositionModal.setContent(new PolicyRuleDirectoryPanel<>(\n-                        ruleCompositionModal, model.getObject().getKey(), PolicyType.PASSWORD, pageRef)));\n+                    ruleCompositionModal, model.getObject().getKey(), PolicyType.PASSWORD, pageRef)));\n \n                 ruleCompositionModal.header(new StringResourceModel(\n-                        \"policy.rules\", PasswordPolicyDirectoryPanel.this, Model.of(model.getObject())));\n+                    \"policy.rules\", PasswordPolicyDirectoryPanel.this, Model.of(model.getObject())));\n \n                 MetaDataRoleAuthorizationStrategy.authorize(\n-                        ruleCompositionModal.getForm(), ENABLE, IdRepoEntitlement.POLICY_UPDATE);\n+                    ruleCompositionModal.getForm(), ENABLE, IdRepoEntitlement.POLICY_UPDATE);\n \n                 ruleCompositionModal.show(true);\n             }"},{"sha":"db1a5f4af5e5560226a25b2ed968e1d99cb9c466","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -63,7 +63,7 @@\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    protected final BaseModal<T> ruleCompositionModal = new BaseModal<T>(Constants.OUTER) {\n+    protected final BaseModal<T> ruleCompositionModal = new BaseModal<>(Constants.OUTER) {\n \n         private static final long serialVersionUID = 389935548143327858L;\n \n@@ -130,19 +130,19 @@ protected List<IColumn<T, String>> getColumns() {\n     public ActionsPanel<T> getActions(final IModel<T> model) {\n         ActionsPanel<T> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final PolicyTO ignore) {\n                 send(PolicyDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                PolicyRestClient.read(type, model.getObject().getKey()), target));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        PolicyRestClient.read(type, model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.POLICY_UPDATE);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -151,13 +151,13 @@ public void onClick(final AjaxRequestTarget target, final PolicyTO ignore) {\n                 final PolicyTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(PolicyDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(clone, target));\n+                    new AjaxWizard.EditItemActionEvent<>(clone, target));\n             }\n         }, ActionLink.ActionType.CLONE, IdRepoEntitlement.POLICY_CREATE);\n \n         addCustomActions(panel, model);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"812506cf34084a98bba2e90946f042a17d59694b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyModalPanelBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -75,7 +75,7 @@ private class Profile extends AbstractModalPanel<T> {\n \n         private final T policyTO;\n \n-        private final LoadableDetachableModel<List<String>> resources = new LoadableDetachableModel<List<String>>() {\n+        private final LoadableDetachableModel<List<String>> resources = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -157,7 +157,7 @@ protected List<String> load() {\n                 default:\n             }\n \n-            add(new ListView<Component>(\"fields\", fields) {\n+            add(new ListView<>(\"fields\", fields) {\n \n                 private static final long serialVersionUID = -9180479401817023838L;\n "},{"sha":"ea32aae6e579da88cba616867473eac916da3625","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -113,16 +113,16 @@ protected List<IColumn<PolicyRuleWrapper, String>> getColumns() {\n         columns.add(new PropertyColumn<>(\n                 new StringResourceModel(\"rule\", this), \"implementationKey\", \"implementationKey\"));\n \n-        columns.add(new AbstractColumn<PolicyRuleWrapper, String>(\n-                new StringResourceModel(\"configuration\", this)) {\n+        columns.add(new AbstractColumn<>(\n+            new StringResourceModel(\"configuration\", this)) {\n \n             private static final long serialVersionUID = -4008579357070833846L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<PolicyRuleWrapper>> cellItem,\n-                    final String componentId,\n-                    final IModel<PolicyRuleWrapper> rowModel) {\n+                final Item<ICellPopulator<PolicyRuleWrapper>> cellItem,\n+                final String componentId,\n+                final IModel<PolicyRuleWrapper> rowModel) {\n \n                 if (rowModel.getObject().getConf() == null) {\n                     cellItem.add(new Label(componentId, \"\"));\n@@ -138,7 +138,7 @@ public void populateItem(\n     public ActionsPanel<PolicyRuleWrapper> getActions(final IModel<PolicyRuleWrapper> model) {\n         final ActionsPanel<PolicyRuleWrapper> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<PolicyRuleWrapper>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -150,11 +150,11 @@ public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper igno\n                     ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                 } else {\n                     send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n-                            new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n                 }\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.POLICY_UPDATE);\n-        panel.add(new ActionLink<PolicyRuleWrapper>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -185,7 +185,7 @@ public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper igno\n     public ActionsPanel<Serializable> getHeader(final String componentId) {\n         final ActionsPanel<Serializable> panel = new ActionsPanel<>(componentId, null);\n \n-        panel.add(new ActionLink<Serializable>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"7bad87dcf8c6c413943bf2620389b3fe739c7b30","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -176,7 +176,7 @@ public static class Configuration extends WizardStep {\n         private static final long serialVersionUID = -785981096328637758L;\n \n         public Configuration(final PolicyRuleWrapper rule) {\n-            LoadableDetachableModel<Serializable> bean = new LoadableDetachableModel<Serializable>() {\n+            LoadableDetachableModel<Serializable> bean = new LoadableDetachableModel<>() {\n \n                 private static final long serialVersionUID = 2092144708018739371L;\n "},{"sha":"d90efdff71311241551c16db897dd43643bc9794","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportDirectoryPanel.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -129,24 +129,24 @@ protected List<IColumn<ReportTO, String>> getColumns() {\n         columns.add(new BooleanPropertyColumn<>(\n                 new StringResourceModel(\"active\", this), \"active\", \"active\"));\n \n-        columns.add(new AbstractColumn<ReportTO, String>(new Model<>(\"\"), \"running\") {\n+        columns.add(new AbstractColumn<>(new Model<>(\"\"), \"running\") {\n \n             private static final long serialVersionUID = 4209532514416998046L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<ReportTO>> cellItem,\n-                    final String componentId,\n-                    final IModel<ReportTO> rowModel) {\n+                final Item<ICellPopulator<ReportTO>> cellItem,\n+                final String componentId,\n+                final IModel<ReportTO> rowModel) {\n \n                 Component panel;\n                 try {\n                     JobTO jobTO = ReportRestClient.getJob(rowModel.getObject().getKey());\n                     panel = new JobActionPanel(componentId, jobTO, false, ReportDirectoryPanel.this);\n                     MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.ENABLE,\n-                            String.format(\"%s,%s\",\n-                                    IdRepoEntitlement.REPORT_EXECUTE,\n-                                    IdRepoEntitlement.REPORT_UPDATE));\n+                        String.format(\"%s,%s\",\n+                            IdRepoEntitlement.REPORT_EXECUTE,\n+                            IdRepoEntitlement.REPORT_UPDATE));\n                 } catch (Exception e) {\n                     LOG.error(\"Could not get job for report {}\", rowModel.getObject().getKey(), e);\n                     panel = new Label(componentId, Model.of());\n@@ -177,19 +177,19 @@ public void onEvent(final IEvent<?> event) {\n     public ActionsPanel<ReportTO> getActions(final IModel<ReportTO> model) {\n         final ActionsPanel<ReportTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<ReportTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n                 send(ReportDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                ReportRestClient.read(model.getObject().getKey()), target));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        ReportRestClient.read(model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.REPORT_UPDATE);\n \n-        panel.add(new ActionLink<ReportTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -198,26 +198,26 @@ public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n                 final ReportTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(ReportDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(clone, target));\n+                    new AjaxWizard.EditItemActionEvent<>(clone, target));\n             }\n         }, ActionLink.ActionType.CLONE, IdRepoEntitlement.REPORT_CREATE);\n \n-        panel.add(new ActionLink<ReportTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n                 target.add(modal.setContent(new ReportletDirectoryPanel(\n-                        modal, model.getObject().getKey(), pageRef)));\n+                    modal, model.getObject().getKey(), pageRef)));\n \n                 modal.header(new StringResourceModel(\n-                        \"reportlet.conf\", ReportDirectoryPanel.this, Model.of(model.getObject())));\n+                    \"reportlet.conf\", ReportDirectoryPanel.this, Model.of(model.getObject())));\n                 modal.show(true);\n             }\n         }, ActionLink.ActionType.COMPOSE, IdRepoEntitlement.REPORT_UPDATE);\n \n-        panel.add(new ActionLink<ReportTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -227,19 +227,19 @@ public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n             }\n         }, ActionLink.ActionType.VIEW_EXECUTIONS, IdRepoEntitlement.REPORT_READ);\n \n-        panel.add(new ActionLink<ReportTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n                 startAt.setExecutionDetail(\n-                        model.getObject().getKey(), model.getObject().getName(), target);\n+                    model.getObject().getKey(), model.getObject().getName(), target);\n                 startAt.toggle(target, true);\n             }\n         }, ActionLink.ActionType.EXECUTE, IdRepoEntitlement.REPORT_EXECUTE);\n \n-        panel.add(new ActionLink<ReportTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"fb7246743e3501d897c5197bcfafbfc57a59985a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportExecutionDetails.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -80,62 +80,62 @@ protected void next(\n \n         @Override\n         protected void addFurtherActions(final ActionsPanel<ExecTO> panel, final IModel<ExecTO> model) {\n-            panel.add(new ActionLink<ExecTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                     downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.CSV)));\n+                        model.getObject().getKey(), ReportExecExportFormat.CSV)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_CSV, IdRepoEntitlement.REPORT_READ);\n \n-            panel.add(new ActionLink<ExecTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                     downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.HTML)));\n+                        model.getObject().getKey(), ReportExecExportFormat.HTML)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_HTML, IdRepoEntitlement.REPORT_READ);\n \n-            panel.add(new ActionLink<ExecTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                     downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.PDF)));\n+                        model.getObject().getKey(), ReportExecExportFormat.PDF)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_PDF, IdRepoEntitlement.REPORT_READ);\n \n-            panel.add(new ActionLink<ExecTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                     downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.RTF)));\n+                        model.getObject().getKey(), ReportExecExportFormat.RTF)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_RTF, IdRepoEntitlement.REPORT_READ);\n \n-            panel.add(new ActionLink<ExecTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                     downloadBehavior.setResponse(new ResponseHolder(ReportRestClient.exportExecutionResult(\n-                            model.getObject().getKey(), ReportExecExportFormat.XML)));\n+                        model.getObject().getKey(), ReportExecExportFormat.XML)));\n                     downloadBehavior.initiate(target);\n                 }\n             }, ActionLink.ActionType.EXPORT_XML, IdRepoEntitlement.REPORT_READ);"},{"sha":"bd4f3eda6b7eb183feee7127ff13bb55b3eb7f9b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportTemplateDirectoryPanel.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -113,16 +113,16 @@ protected List<IColumn<ReportTemplateTO, String>> getColumns() {\n     public ActionsPanel<ReportTemplateTO> getActions(final IModel<ReportTemplateTO> model) {\n         final ActionsPanel<ReportTemplateTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<ReportTemplateTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n                 TemplateContent<ReportTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n-                        ReportTemplateFormat.FO);\n+                    ReportTemplateFormat.FO);\n                 content.setContent(\n-                        restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.FO));\n+                    restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.FO));\n \n                 utilityModal.header(new ResourceModel(\"report.template.fo\", \"XSLT for XSL-FO\"));\n                 utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n@@ -131,16 +131,16 @@ public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignor\n             }\n         }, ActionLink.ActionType.FO_EDIT, IdRepoEntitlement.REPORT_TEMPLATE_UPDATE);\n \n-        panel.add(new ActionLink<ReportTemplateTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n                 TemplateContent<ReportTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n-                        ReportTemplateFormat.HTML);\n+                    ReportTemplateFormat.HTML);\n                 content.setContent(\n-                        restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.HTML));\n+                    restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.HTML));\n \n                 utilityModal.header(new ResourceModel(\"report.template.html\", \"XSLT for HTML\"));\n                 utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n@@ -149,16 +149,16 @@ public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignor\n             }\n         }, ActionLink.ActionType.HTML, IdRepoEntitlement.REPORT_TEMPLATE_UPDATE);\n \n-        panel.add(new ActionLink<ReportTemplateTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n                 TemplateContent<ReportTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n-                        ReportTemplateFormat.CSV);\n+                    ReportTemplateFormat.CSV);\n                 content.setContent(\n-                        restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.CSV));\n+                    restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.CSV));\n \n                 utilityModal.header(new ResourceModel(\"report.template.csv\", \"XSLT for CSV\"));\n                 utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n@@ -167,7 +167,7 @@ public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignor\n             }\n         }, ActionLink.ActionType.TEXT, IdRepoEntitlement.REPORT_TEMPLATE_UPDATE);\n \n-        panel.add(new ActionLink<ReportTemplateTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -243,7 +243,7 @@ private class TemplateContentEditorPanel extends XMLEditorPanel {\n                 final TemplateContent<ReportTemplateFormat> content,\n                 final PageReference pageRef) {\n \n-            super(utilityModal, new PropertyModel<String>(content, \"content\"), false, pageRef);\n+            super(utilityModal, new PropertyModel<>(content, \"content\"), false, pageRef);\n             this.content = content;\n         }\n "},{"sha":"cf9ac9a97acd57b1223ce859fedf6f5bc1fb4b16","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -102,16 +102,16 @@ protected List<IColumn<ReportletWrapper, String>> getColumns() {\n         columns.add(new PropertyColumn<>(\n                 new StringResourceModel(\"reportlet\", this), \"implementationKey\", \"implementationKey\"));\n \n-        columns.add(new AbstractColumn<ReportletWrapper, String>(\n-                new StringResourceModel(\"configuration\", this)) {\n+        columns.add(new AbstractColumn<>(\n+            new StringResourceModel(\"configuration\", this)) {\n \n             private static final long serialVersionUID = -4008579357070833846L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<ReportletWrapper>> cellItem,\n-                    final String componentId,\n-                    final IModel<ReportletWrapper> rowModel) {\n+                final Item<ICellPopulator<ReportletWrapper>> cellItem,\n+                final String componentId,\n+                final IModel<ReportletWrapper> rowModel) {\n \n                 if (rowModel.getObject().getConf() == null) {\n                     cellItem.add(new Label(componentId, \"\"));\n@@ -128,7 +128,7 @@ public void populateItem(\n     public ActionsPanel<ReportletWrapper> getActions(final IModel<ReportletWrapper> model) {\n         final ActionsPanel<ReportletWrapper> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<ReportletWrapper>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -139,11 +139,11 @@ public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignor\n                     SyncopeConsoleSession.get().info(getString(\"noConf\"));\n                 } else {\n                     send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n-                            new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n                 }\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.REPORT_UPDATE);\n-        panel.add(new ActionLink<ReportletWrapper>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -172,7 +172,7 @@ public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignor\n     public ActionsPanel<Serializable> getHeader(final String componentId) {\n         final ActionsPanel<Serializable> panel = new ActionsPanel<>(componentId, null);\n \n-        panel.add(new ActionLink<Serializable>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"0f96fe05a7329df7b6de674df2fc6e817ef7c907","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportletWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -135,7 +135,7 @@ public static class Configuration extends WizardStep {\n         private static final long serialVersionUID = -785981096328637758L;\n \n         public Configuration(final ReportletWrapper reportlet) {\n-            LoadableDetachableModel<Serializable> bean = new LoadableDetachableModel<Serializable>() {\n+            LoadableDetachableModel<Serializable> bean = new LoadableDetachableModel<>() {\n \n                 private static final long serialVersionUID = 2092144708018739371L;\n "},{"sha":"ce298166ace3b914af81323756515dce435c28b7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -65,7 +65,7 @@ public ProvisioningResult<TO> delete(final String etag, final String key) {\n         ProvisioningResult<TO> result;\n         synchronized (this) {\n             result = getService(etag, getAnyServiceClass()).delete(key).\n-                    readEntity(new GenericType<ProvisioningResult<TO>>() {\n+                    readEntity(new GenericType<>() {\n                     });\n             resetClient(getAnyServiceClass());\n         }"},{"sha":"f4ae48d9dfc1f27610daac4217c0d0630c276e6b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -44,15 +44,15 @@ protected Class<? extends AnyService<AnyObjectTO>> getAnyServiceClass() {\n \n     public static ProvisioningResult<AnyObjectTO> create(final AnyObjectCR createReq) {\n         Response response = getService(AnyObjectService.class).create(createReq);\n-        return response.readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     public ProvisioningResult<AnyObjectTO> update(final String etag, final AnyObjectUR updateReq) {\n         ProvisioningResult<AnyObjectTO> result;\n         synchronized (this) {\n             result = getService(etag, AnyObjectService.class).update(updateReq).\n-                    readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+                    readEntity(new GenericType<>() {\n                     });\n             resetClient(getAnyServiceClass());\n         }"},{"sha":"4cc41a04e3f4f742a59ec4d60c69ef3ccc97f965","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -45,15 +45,15 @@ protected Class<? extends AnyService<GroupTO>> getAnyServiceClass() {\n \n     public static ProvisioningResult<GroupTO> create(final GroupCR groupCR) {\n         Response response = getService(GroupService.class).create(groupCR);\n-        return response.readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     public ProvisioningResult<GroupTO> update(final String etag, final GroupUR updateReq) {\n         ProvisioningResult<GroupTO> result;\n         synchronized (this) {\n             result = getService(etag, GroupService.class).update(updateReq).\n-                    readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+                    readEntity(new GenericType<>() {\n                     });\n             resetClient(getAnyServiceClass());\n         }"},{"sha":"1581dd3d84350c56b1ae4999c55cd430f3351665","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/RealmRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -55,13 +55,13 @@ public static DynRealmTO readDynReams(final String key) {\n \n     public static ProvisioningResult<RealmTO> create(final String parentPath, final RealmTO realmTO) {\n         final Response response = getService(RealmService.class).create(parentPath, realmTO);\n-        return response.readEntity(new GenericType<ProvisioningResult<RealmTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     public static ProvisioningResult<RealmTO> update(final RealmTO realmTO) {\n         final Response response = getService(RealmService.class).update(realmTO);\n-        return response.readEntity(new GenericType<ProvisioningResult<RealmTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n "},{"sha":"a25ad37f6a21c47e4e8f13e8f1e8cf44d52f7b3f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -54,15 +54,15 @@ protected Class<? extends AnyService<UserTO>> getAnyServiceClass() {\n \n     public static ProvisioningResult<UserTO> create(final UserCR createReq) {\n         Response response = getService(UserService.class).create(createReq);\n-        return response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     public ProvisioningResult<UserTO> update(final String etag, final UserUR updateReq) {\n         ProvisioningResult<UserTO> result;\n         synchronized (this) {\n             result = getService(etag, UserService.class).update(updateReq).\n-                    readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                    readEntity(new GenericType<>() {\n                     });\n             resetClient(getAnyServiceClass());\n         }\n@@ -101,7 +101,7 @@ private Map<String, String> status(\n         Map<String, String> results;\n         synchronized (this) {\n             ProvisioningResult<UserTO> provisioningResult = getService(etag, UserService.class).status(statusR).\n-                    readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                    readEntity(new GenericType<>() {\n                     });\n \n             statuses.forEach(statusBean -> statusBean.setStatus(Status.UNDEFINED));"},{"sha":"9f77d68ed4610ccde2d9f88a28340a0017599c09","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/CrontabPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -69,7 +69,7 @@ public CrontabPanel(final String id, final PropertyModel<String> cronExpressionM\n         cronTemplateChooser.setNullValid(false);\n         cronTemplateChooser.setPlaceholder(\"chooseForTemplate\");\n \n-        cronTemplateChooser.getField().setModel(new IModel<SelectOption>() {\n+        cronTemplateChooser.getField().setModel(new IModel<>() {\n \n             private static final long serialVersionUID = 6762568283146531315L;\n \n@@ -88,8 +88,8 @@ public SelectOption getObject() {\n             @Override\n             public void setObject(final SelectOption object) {\n                 cronExpressionModel.setObject(object == null || object.equals(cronTemplates[0])\n-                        ? null\n-                        : object.toString());\n+                    ? null\n+                    : object.toString());\n             }\n \n             @Override"},{"sha":"0ae871c85ba7a5e6abe0770f4e0ffd2975296f24","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/ExecutionsDirectoryPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -115,18 +115,18 @@ public ActionsPanel<ExecTO> getActions(final IModel<ExecTO> model) {\n         final ActionsPanel<ExecTO> panel = super.getActions(model);\n         final ExecTO taskExecutionTO = model.getObject();\n \n-        panel.add(new ActionLink<ExecTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                 ExecutionsDirectoryPanel.this.getTogglePanel().close(target);\n                 next(new StringResourceModel(\"execution.view\", ExecutionsDirectoryPanel.this, model).\n-                        getObject(), new ExecMessage(model.getObject().getMessage()), target);\n+                    getObject(), new ExecMessage(model.getObject().getMessage()), target);\n             }\n         }, ActionLink.ActionType.VIEW, IdRepoEntitlement.TASK_READ);\n-        panel.add(new ActionLink<ExecTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -198,7 +198,7 @@ public long size() {\n         @Override\n         public IModel<ExecTO> model(final ExecTO taskExecution) {\n \n-            return new IModel<ExecTO>() {\n+            return new IModel<>() {\n \n                 private static final long serialVersionUID = 7485475149862342421L;\n "},{"sha":"64dcb5752fe879942e6e9059b2171cb43e17c8b3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/NotificationTaskDirectoryPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -108,7 +108,7 @@ public ActionsPanel<NotificationTaskTO> getActions(final IModel<NotificationTask\n         final ActionsPanel<NotificationTaskTO> panel = super.getActions(model);\n         final NotificationTaskTO taskTO = model.getObject();\n \n-        panel.add(new ActionLink<NotificationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -117,7 +117,7 @@ public void onClick(final AjaxRequestTarget target, final NotificationTaskTO mod\n                 viewTask(taskTO, target);\n             }\n         }, ActionLink.ActionType.VIEW, IdRepoEntitlement.TASK_READ);\n-        panel.add(new ActionLink<NotificationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -126,7 +126,7 @@ public void onClick(final AjaxRequestTarget target, final NotificationTaskTO mod\n                 viewMailBody(MailTemplateFormat.TEXT, taskTO.getTextBody(), target);\n             }\n         }, ActionLink.ActionType.TEXT, IdRepoEntitlement.TASK_READ);\n-        panel.add(new ActionLink<NotificationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -135,7 +135,7 @@ public void onClick(final AjaxRequestTarget target, final NotificationTaskTO mod\n                 viewMailBody(MailTemplateFormat.HTML, taskTO.getHtmlBody(), target);\n             }\n         }, ActionLink.ActionType.HTML, IdRepoEntitlement.TASK_READ);\n-        panel.add(new ActionLink<NotificationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -152,7 +152,7 @@ public void onClick(final AjaxRequestTarget target, final NotificationTaskTO mod\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n         }, ActionLink.ActionType.EXECUTE, IdRepoEntitlement.TASK_EXECUTE);\n-        panel.add(new ActionLink<NotificationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"e5fd14617850e94aa7935219528d235d827c74e4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -80,8 +80,8 @@ protected List<IColumn<PropagationTaskTO, String>> getColumns() {\n             columns.add(new PropertyColumn<>(\n                     new StringResourceModel(\"resource\", this), \"resource\", \"resource\"));\n         } else {\n-            columns.add(new PropertyColumn<PropagationTaskTO, String>(\n-                    new StringResourceModel(\"anyTypeKind\", this), \"anyTypeKind\", \"anyTypeKind\") {\n+            columns.add(new PropertyColumn<>(\n+                new StringResourceModel(\"anyTypeKind\", this), \"anyTypeKind\", \"anyTypeKind\") {\n \n                 private static final long serialVersionUID = 3344577098912281394L;\n \n@@ -118,7 +118,7 @@ public ActionsPanel<PropagationTaskTO> getActions(final IModel<PropagationTaskTO\n         final ActionsPanel<PropagationTaskTO> panel = super.getActions(model);\n         final PropagationTaskTO taskTO = model.getObject();\n \n-        panel.add(new ActionLink<PropagationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -130,7 +130,7 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO mode\n         }, ActionLink.ActionType.VIEW_EXECUTIONS, IdRepoEntitlement.TASK_READ);\n \n         // [SYNCOPE-1115] - Display attributes for propagation tasks\n-        panel.add(new ActionLink<PropagationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 9206257220553949594L;\n \n@@ -141,7 +141,7 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO mode\n             }\n         }, ActionLink.ActionType.VIEW_DETAILS, IdRepoEntitlement.TASK_READ);\n \n-        panel.add(new ActionLink<PropagationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -159,7 +159,7 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO mode\n             }\n         }, ActionLink.ActionType.EXECUTE, IdRepoEntitlement.TASK_EXECUTE);\n \n-        panel.add(new ActionLink<PropagationTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"c83b50bd73c1962fd757ba785ae2ef16fc81d3b0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskDirectoryPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -133,23 +133,23 @@ protected List<IColumn<T, String>> getFieldColumns() {\n         columns.add(new BooleanPropertyColumn<>(\n                 new StringResourceModel(\"active\", this), \"active\", \"active\"));\n \n-        columns.add(new AbstractColumn<T, String>(new Model<>(\"\"), \"running\") {\n+        columns.add(new AbstractColumn<>(new Model<>(\"\"), \"running\") {\n \n             private static final long serialVersionUID = -4008579357070833846L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<T>> cellItem,\n-                    final String componentId,\n-                    final IModel<T> rowModel) {\n+                final Item<ICellPopulator<T>> cellItem,\n+                final String componentId,\n+                final IModel<T> rowModel) {\n \n                 Component panel;\n                 try {\n                     JobTO jobTO = TaskRestClient.getJob(rowModel.getObject().getKey());\n                     panel = new JobActionPanel(componentId, jobTO, false, ProvisioningTaskDirectoryPanel.this);\n                     MetaDataRoleAuthorizationStrategy.authorize(\n-                            panel, WebPage.ENABLE,\n-                            String.format(\"%s,%s\", IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE));\n+                        panel, WebPage.ENABLE,\n+                        String.format(\"%s,%s\", IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE));\n                 } catch (Exception e) {\n                     LOG.error(\"Could not get job for task {}\", rowModel.getObject().getKey(), e);\n                     panel = new Label(componentId, Model.of());"},{"sha":"b4969306400dd4e8efb053d140fa757ee80bf6f7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/PullTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -55,7 +55,7 @@ protected ProvisioningTasksProvider<PullTaskTO> dataProvider() {\n \n     @Override\n     protected void addFurtherActions(final ActionsPanel<PullTaskTO> panel, final IModel<PullTaskTO> model) {\n-        panel.add(new ActionLink<PullTaskTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"002747dc2d930a74dea1634e4089c63c945acf55","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/PushTaskFilters.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskFilters.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -41,7 +41,7 @@ public class PushTaskFilters extends WizardStep {\n     public PushTaskFilters(final PushTaskWrapper pushTaskWrapper) {\n         super();\n \n-        final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<List<AnyTypeTO>>() {\n+        final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n@@ -51,27 +51,27 @@ protected List<AnyTypeTO> load() {\n             }\n         };\n \n-        add(new ListView<AnyTypeTO>(\"filters\", types) {\n+        add(new ListView<>(\"filters\", types) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<AnyTypeTO> item) {\n                 final String key = item.getModelObject().getKey();\n                 item.add(new Accordion(\"filters\", List.of(\n-                        new AbstractTab(new StringResourceModel(\n-                                \"filters\", this, new Model<>(item.getModelObject()))) {\n+                    new AbstractTab(new StringResourceModel(\n+                        \"filters\", this, new Model<>(item.getModelObject()))) {\n \n-                    private static final long serialVersionUID = 1037272333056449378L;\n+                        private static final long serialVersionUID = 1037272333056449378L;\n \n-                    @Override\n-                    public Panel getPanel(final String panelId) {\n-                        return new AnyObjectSearchPanel.Builder(\n+                        @Override\n+                        public Panel getPanel(final String panelId) {\n+                            return new AnyObjectSearchPanel.Builder(\n                                 key, new MapOfListModel<>(pushTaskWrapper, \"filterClauses\", key)).\n                                 required(false).build(panelId);\n-                    }\n-                }), Model.of(StringUtils.isBlank(pushTaskWrapper.getFilters().get(key)) ? -1 : 0))\n-                        .setOutputMarkupId(true));\n+                        }\n+                    }), Model.of(StringUtils.isBlank(pushTaskWrapper.getFilters().get(key)) ? -1 : 0))\n+                    .setOutputMarkupId(true));\n             }\n         });\n     }"},{"sha":"27e2eaf01af56dec19ac49a029a3607804879bde","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -155,16 +155,16 @@ protected List<IColumn<T, String>> getFieldColumns() {\n                 new StringResourceModel(Constants.NAME_FIELD_NAME, this),\n                 Constants.NAME_FIELD_NAME, Constants.NAME_FIELD_NAME));\n \n-        columns.add(new PropertyColumn<T, String>(\n-                new StringResourceModel(\"jobDelegate\", this), \"jobDelegate\", \"jobDelegate\") {\n+        columns.add(new PropertyColumn<>(\n+            new StringResourceModel(\"jobDelegate\", this), \"jobDelegate\", \"jobDelegate\") {\n \n             private static final long serialVersionUID = -3223917055078733093L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<T>> item,\n-                    final String componentId,\n-                    final IModel<T> rowModel) {\n+                final Item<ICellPopulator<T>> item,\n+                final String componentId,\n+                final IModel<T> rowModel) {\n \n                 IModel<?> model = getDataModel(rowModel);\n                 if (model != null && model.getObject() instanceof String) {\n@@ -192,23 +192,23 @@ public void populateItem(\n         columns.add(new BooleanPropertyColumn<>(\n                 new StringResourceModel(\"active\", this), \"active\", \"active\"));\n \n-        columns.add(new AbstractColumn<T, String>(new Model<>(\"\"), \"running\") {\n+        columns.add(new AbstractColumn<>(new Model<>(\"\"), \"running\") {\n \n             private static final long serialVersionUID = -4008579357070833846L;\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<T>> cellItem,\n-                    final String componentId,\n-                    final IModel<T> rowModel) {\n+                final Item<ICellPopulator<T>> cellItem,\n+                final String componentId,\n+                final IModel<T> rowModel) {\n \n                 Component panel;\n                 try {\n                     JobTO jobTO = restClient.getJob(rowModel.getObject().getKey());\n                     panel = new JobActionPanel(componentId, jobTO, false, SchedTaskDirectoryPanel.this);\n                     MetaDataRoleAuthorizationStrategy.authorize(\n-                            panel, WebPage.ENABLE,\n-                            String.format(\"%s,%s\", IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE));\n+                        panel, WebPage.ENABLE,\n+                        String.format(\"%s,%s\", IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE));\n                 } catch (Exception e) {\n                     LOG.error(\"Could not get job for task {}\", rowModel.getObject().getKey(), e);\n                     panel = new Label(componentId, Model.of());\n@@ -238,7 +238,7 @@ public ActionsPanel<T> getActions(final IModel<T> model) {\n         final ActionsPanel<T> panel = super.getActions(model);\n         final T taskTO = model.getObject();\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -249,24 +249,24 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n             }\n         }, ActionLink.ActionType.VIEW_EXECUTIONS, IdRepoEntitlement.TASK_READ);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final T ignore) {\n                 SchedTaskDirectoryPanel.this.getTogglePanel().close(target);\n                 send(SchedTaskDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(\n-                                TaskRestClient.readTask(taskType, model.getObject().getKey()),\n-                                target).setResourceModel(\n-                                new StringResourceModel(\"inner.task.edit\",\n-                                        SchedTaskDirectoryPanel.this,\n-                                        Model.of(Pair.of(ActionLink.ActionType.EDIT, model.getObject())))));\n+                    new AjaxWizard.EditItemActionEvent<>(\n+                        TaskRestClient.readTask(taskType, model.getObject().getKey()),\n+                        target).setResourceModel(\n+                        new StringResourceModel(\"inner.task.edit\",\n+                            SchedTaskDirectoryPanel.this,\n+                            Model.of(Pair.of(ActionLink.ActionType.EDIT, model.getObject())))));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.TASK_UPDATE);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -276,14 +276,14 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                 final T clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(SchedTaskDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(clone, target).setResourceModel(\n-                                new StringResourceModel(\"inner.task.clone\",\n-                                        SchedTaskDirectoryPanel.this,\n-                                        Model.of(Pair.of(ActionLink.ActionType.CLONE, model.getObject())))));\n+                    new AjaxWizard.EditItemActionEvent<>(clone, target).setResourceModel(\n+                        new StringResourceModel(\"inner.task.clone\",\n+                            SchedTaskDirectoryPanel.this,\n+                            Model.of(Pair.of(ActionLink.ActionType.CLONE, model.getObject())))));\n             }\n         }, ActionLink.ActionType.CLONE, IdRepoEntitlement.TASK_CREATE);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -297,7 +297,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n \n         addFurtherActions(panel, model);\n \n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"f534a9fbbceb73a50877552963fa692a4f1ee950","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -197,7 +197,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             final AjaxSearchFieldPanel destinationRealm =\n                     new AjaxSearchFieldPanel(\"destinationRealm\", \"destinationRealm\",\n-                            new PropertyModel<String>(taskTO, \"destinationRealm\"), settings) {\n+                        new PropertyModel<>(taskTO, \"destinationRealm\"), settings) {\n \n                 private static final long serialVersionUID = -6390474600233486704L;\n \n@@ -233,7 +233,7 @@ protected Iterator<String> getChoices(final String input) {\n             }\n \n             final AjaxSearchFieldPanel sourceRealm = new AjaxSearchFieldPanel(\"sourceRealm\", \"sourceRealm\",\n-                    new PropertyModel<String>(taskTO, \"sourceRealm\"), settings) {\n+                new PropertyModel<>(taskTO, \"sourceRealm\"), settings) {\n \n                 private static final long serialVersionUID = -6390474600233486704L;\n \n@@ -265,7 +265,7 @@ protected Iterator<String> getChoices(final String input) {\n             AjaxPalettePanel<String> actions = new AjaxPalettePanel.Builder<String>().\n                     setAllowMoveAll(true).setAllowOrder(true).\n                     build(\"actions\",\n-                            new PropertyModel<List<String>>(taskTO, \"actions\"),\n+                        new PropertyModel<>(taskTO, \"actions\"),\n                             new ListModel<>(taskTO instanceof PushTaskTO\n                                     ? pushActions.getObject() : pullActions.getObject()));\n             actions.setOutputMarkupId(true);"},{"sha":"10eed40e74945c4d6fd3109f5fa3b015e7958f49","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTasks.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -39,16 +39,16 @@ public <T extends AnyTO> SchedTasks(final BaseModal<?> baseModal, final PageRefe\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new SchedTaskDirectoryPanel<SchedTaskTO>(\n-                baseModal, mlp, TaskType.SCHEDULED, SchedTaskTO.class, pageReference) {\n+        mlp.setFirstLevel(new SchedTaskDirectoryPanel<>(\n+            baseModal, mlp, TaskType.SCHEDULED, SchedTaskTO.class, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n             protected void viewTask(final SchedTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n-                        new StringResourceModel(\"task.view\", this, new Model<>(Pair.of(null, taskTO))).getObject(),\n-                        new TaskExecutionDetails<>(baseModal, taskTO, pageReference), target);\n+                    new StringResourceModel(\"task.view\", this, new Model<>(Pair.of(null, taskTO))).getObject(),\n+                    new TaskExecutionDetails<>(baseModal, taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"bacb6a6e09e35ef564042ebb2a0bbfe76e3fabc0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/TaskAttributesDetailsView.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskAttributesDetailsView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskAttributesDetailsView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskAttributesDetailsView.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -46,7 +46,7 @@ public TaskAttributesDetailsView(final PropagationTaskTO taskTO) {\n \n         Pair<String, String> info = Pair.of(taskTO.getEntityKey(), getJSONInfo(taskTO));\n         JsonEditorPanel jsonPanel =\n-                new JsonEditorPanel(null, new PropertyModel<String>(info, \"value\"), true, null) {\n+                new JsonEditorPanel(null, new PropertyModel<>(info, \"value\"), true, null) {\n \n             private static final long serialVersionUID = -8927036362466990179L;\n "},{"sha":"0b371662a6def1c358f181c27a64106150729f69","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/TemplatesTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTemplatesTogglePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -63,7 +63,7 @@ public abstract class TemplatesTogglePanel extends TogglePanel<Serializable> {\n \n     protected final Model<String> typeModel = new Model<>();\n \n-    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<List<String>>() {\n+    private final LoadableDetachableModel<List<String>> anyTypes = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n "},{"sha":"6a0628d11ce99d83d8d5bd86c3d8d3f327cb1867","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AjaxFallbackDataTable.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -64,14 +64,14 @@ public AjaxFallbackDataTable(\n \n         togglePanel = getTogglePanel();\n \n-        addTopToolbar(new AjaxFallbackHeadersToolbar<S>(this, dataProvider) {\n+        addTopToolbar(new AjaxFallbackHeadersToolbar<>(this, dataProvider) {\n \n             private static final long serialVersionUID = 7406306172424359609L;\n \n             @Override\n             protected WebMarkupContainer newSortableHeader(\n-                    final String borderId, final S property, final ISortStateLocator<S> locator) {\n-                return new AjaxFallbackOrderByBorder<S>(borderId, property, locator) {\n+                final String borderId, final S property, final ISortStateLocator<S> locator) {\n+                return new AjaxFallbackOrderByBorder<>(borderId, property, locator) {\n \n                     private static final long serialVersionUID = 8261993963983329775L;\n \n@@ -85,14 +85,14 @@ protected void onAjaxClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        addBottomToolbar(new AjaxFallbackHeadersToolbar<S>(this, dataProvider) {\n+        addBottomToolbar(new AjaxFallbackHeadersToolbar<>(this, dataProvider) {\n \n             private static final long serialVersionUID = 7406306172424359609L;\n \n             @Override\n             protected WebMarkupContainer newSortableHeader(\n-                    final String borderId, final S property, final ISortStateLocator<S> locator) {\n-                return new AjaxFallbackOrderByBorder<S>(borderId, property, locator) {\n+                final String borderId, final S property, final ISortStateLocator<S> locator) {\n+                return new AjaxFallbackOrderByBorder<>(borderId, property, locator) {\n \n                     private static final long serialVersionUID = 985887006636879421L;\n "},{"sha":"4cc4c96bbb94a14adf770b718ebac2614d5528d8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/BatchResponseColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBatchResponseColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBatchResponseColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBatchResponseColumn.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -48,7 +48,7 @@\n     private final String keyFieldName;\n \n     public BatchResponseColumn(final Map<String, String> results, final String keyFieldName) {\n-        super(new Model<String>());\n+        super(new Model<>());\n         this.results = results;\n         this.keyFieldName = keyFieldName;\n     }"},{"sha":"6551357f4fcfb294171a1260d3a1917b2d678f29","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CheckGroupColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCheckGroupColumn.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -33,7 +33,7 @@\n     private final CheckGroup<T> group;\n \n     public CheckGroupColumn(final CheckGroup<T> checkGroup) {\n-        super(new Model<String>());\n+        super(new Model<>());\n         this.group = checkGroup;\n     }\n "},{"sha":"a99fe33a48e424970d4b8dcdc126f312e60cde1b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -88,7 +88,7 @@ public BaseModal(final String id) {\n         form.setOutputMarkupId(true);\n         add(form);\n \n-        content = new AbstractModalPanel<T>(this, null) {\n+        content = new AbstractModalPanel<>(this, null) {\n \n             private static final long serialVersionUID = -6142277554912316095L;\n \n@@ -243,7 +243,7 @@ protected void onInitialize() {\n         dialog.setMarkupId(this.getId());\n \n         footer = (WebMarkupContainer) this.get(\"dialog:footer\");\n-        footer.addOrReplace(new ListView<Component>(\"inputs\", components) {\n+        footer.addOrReplace(new ListView<>(\"inputs\", components) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n "},{"sha":"f34ea520f03429e4eb620a2f74b8f7628936f1c7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -44,7 +44,7 @@ public ActionsPanel(final String componentId, final IModel<T> model) {\n         setOutputMarkupId(true);\n         this.model = model;\n \n-        add(new ListView<Action<T>>(\"actionRepeater\", actions) {\n+        add(new ListView<>(\"actionRepeater\", actions) {\n \n             private static final long serialVersionUID = -9180479401817023838L;\n "},{"sha":"2d5f1f94e519feb3fc6b7fe02c79d8946bcbe75a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxCharacterFieldPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCharacterFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCharacterFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCharacterFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -59,7 +59,7 @@ public AjaxCharacterFieldPanel(\n         settings.setShowListOnEmptyInput(true);\n         settings.setCssClassName(\"custom-autocomplete-box\");\n \n-        field = new AutoCompleteTextField<Character>(\"textField\", model, settings) {\n+        field = new AutoCompleteTextField<>(\"textField\", model, settings) {\n \n             private static final long serialVersionUID = -6648767303091874219L;\n \n@@ -70,8 +70,8 @@ protected Iterator<Character> getChoices(final String input) {\n \n             @Override\n             protected AutoCompleteBehavior<Character> newAutoCompleteBehavior(\n-                    final IAutoCompleteRenderer<Character> renderer, final AutoCompleteSettings settings) {\n-                return new IndicatorAutoCompleteBehavior<Character>(renderer, settings) {\n+                final IAutoCompleteRenderer<Character> renderer, final AutoCompleteSettings settings) {\n+                return new IndicatorAutoCompleteBehavior<>(renderer, settings) {\n \n                     private static final long serialVersionUID = 1070808433195962931L;\n "},{"sha":"96f0d33d45ef1f40479d4c3bc0a8058960a8801c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxSearchFieldPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSearchFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSearchFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxSearchFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -64,7 +64,7 @@ public AjaxSearchFieldPanel(\n         this.settings = settings;\n         this.renderer = renderer;\n \n-        field = new AutoCompleteTextField<String>(\"textField\", model, settings) {\n+        field = new AutoCompleteTextField<>(\"textField\", model, settings) {\n \n             private static final long serialVersionUID = -6648767303091874219L;\n \n@@ -75,11 +75,11 @@ protected Iterator<String> getChoices(final String input) {\n \n             @Override\n             protected AutoCompleteBehavior<String> newAutoCompleteBehavior(\n-                    final IAutoCompleteRenderer<String> renderer, final AutoCompleteSettings settings) {\n+                final IAutoCompleteRenderer<String> renderer, final AutoCompleteSettings settings) {\n \n-                return new IndicatorAutoCompleteBehavior<String>(\n-                        AjaxSearchFieldPanel.this.renderer != null ? AjaxSearchFieldPanel.this.renderer : renderer,\n-                        AjaxSearchFieldPanel.this.settings != null ? AjaxSearchFieldPanel.this.settings : settings) {\n+                return new IndicatorAutoCompleteBehavior<>(\n+                    AjaxSearchFieldPanel.this.renderer != null ? AjaxSearchFieldPanel.this.renderer : renderer,\n+                    AjaxSearchFieldPanel.this.settings != null ? AjaxSearchFieldPanel.this.settings : settings) {\n \n                     private static final long serialVersionUID = 1070808433195962931L;\n "},{"sha":"25edaba19c336ac86fbc62cc7129a7cf93bb691e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -166,7 +166,7 @@ protected HttpResourceStream getResourceStream() {\n \n         add(fileDownload);\n \n-        downloadLink = new AjaxLink<Void>(\"downloadLink\") {\n+        downloadLink = new AjaxLink<>(\"downloadLink\") {\n \n             private static final long serialVersionUID = -4331619903296515985L;\n \n@@ -229,7 +229,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n         });\n         uploadForm.add(fileUpload);\n \n-        resetLink = new IndicatingAjaxLink<Void>(\"resetLink\") {\n+        resetLink = new IndicatingAjaxLink<>(\"resetLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"cf2ce18226d939208bb39a39a9990ec027a81359","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -75,7 +75,7 @@ protected E newModelObject() {\n         }\n \n         public MultiFieldPanel<E> build(final String id, final String name, final FieldPanel<E> panelTemplate) {\n-            return new MultiFieldPanel<E>(id, name, model) {\n+            return new MultiFieldPanel<>(id, name, model) {\n \n                 private static final long serialVersionUID = 6600411297376841521L;\n "},{"sha":"ad339698ea865d9d1f616e71047aca9716c742ba","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/AlertWidget.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAlertWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAlertWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAlertWidget.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -53,7 +53,7 @@ public AlertWidget(final String id) {\n \n         setOutputMarkupId(true);\n \n-        final LoadableDetachableModel<Integer> size = new LoadableDetachableModel<Integer>() {\n+        final LoadableDetachableModel<Integer> size = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 7474274077691068779L;\n "},{"sha":"65d34ae704cc05e19373f3ea16f0b2e2b73d50f5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/ItemTransformerWidget.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FItemTransformerWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FItemTransformerWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FItemTransformerWidget.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -50,7 +50,7 @@ public ItemTransformerWidget(\n \n     @Override\n     protected IModel<List<String>> getLatestAlerts() {\n-        return new ListModel<String>() {\n+        return new ListModel<>() {\n \n             private static final long serialVersionUID = 1232998477036705088L;\n "},{"sha":"bb1303de866408ff962bf0d9b3c8c0551b183d6a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/JEXLTransformerWidget.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -55,7 +55,7 @@ public JEXLTransformerWidget(\n \n     @Override\n     protected IModel<List<String>> getLatestAlerts() {\n-        return new ListModel<String>() {\n+        return new ListModel<>() {\n \n             private static final long serialVersionUID = -2583290457773357445L;\n "},{"sha":"12dde2d18fcdf440d722f1fa336cf0d7fb7454bd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":30,"deletions":30,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -92,7 +92,7 @@ public class JobWidget extends BaseWidget {\n \n     private final ActionLinksTogglePanel<JobTO> actionTogglePanel;\n \n-    private final BaseModal<Serializable> modal = new BaseModal<Serializable>(\"modal\") {\n+    private final BaseModal<Serializable> modal = new BaseModal<>(\"modal\") {\n \n         private static final long serialVersionUID = 389935548143327858L;\n \n@@ -103,7 +103,7 @@ protected void onConfigure() {\n         }\n     };\n \n-    private final BaseModal<Serializable> detailModal = new BaseModal<Serializable>(\"detailModal\") {\n+    private final BaseModal<Serializable> detailModal = new BaseModal<>(\"detailModal\") {\n \n         private static final long serialVersionUID = 389935548143327858L;\n \n@@ -114,7 +114,7 @@ protected void onConfigure() {\n         }\n     };\n \n-    private final BaseModal<ReportTO> reportModal = new BaseModal<ReportTO>(\"reportModal\") {\n+    private final BaseModal<ReportTO> reportModal = new BaseModal<>(\"reportModal\") {\n \n         private static final long serialVersionUID = 389935548143327858L;\n \n@@ -318,15 +318,15 @@ protected List<IColumn<JobTO, String>> getColumns() {\n \n             columns.add(new DatePropertyColumn<>(new ResourceModel(\"start\"), \"start\", \"start\"));\n \n-            columns.add(new AbstractColumn<JobTO, String>(new Model<>(\"\"), \"running\") {\n+            columns.add(new AbstractColumn<>(new Model<>(\"\"), \"running\") {\n \n                 private static final long serialVersionUID = -4008579357070833846L;\n \n                 @Override\n                 public void populateItem(\n-                        final Item<ICellPopulator<JobTO>> cellItem,\n-                        final String componentId,\n-                        final IModel<JobTO> rowModel) {\n+                    final Item<ICellPopulator<JobTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<JobTO> rowModel) {\n \n                     JobTO jobTO = rowModel.getObject();\n                     JobActionPanel panel = new JobActionPanel(componentId, jobTO, true, JobWidget.this);\n@@ -335,17 +335,17 @@ public void populateItem(\n                     switch (jobTO.getType()) {\n                         case TASK:\n                             roles = String.format(\"%s,%s\",\n-                                    IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE);\n+                                IdRepoEntitlement.TASK_EXECUTE, IdRepoEntitlement.TASK_UPDATE);\n                             break;\n \n                         case REPORT:\n                             roles = String.format(\"%s,%s\",\n-                                    IdRepoEntitlement.REPORT_EXECUTE, IdRepoEntitlement.REPORT_UPDATE);\n+                                IdRepoEntitlement.REPORT_EXECUTE, IdRepoEntitlement.REPORT_UPDATE);\n                             break;\n \n                         case NOTIFICATION:\n                             roles = String.format(\"%s,%s\",\n-                                    IdRepoEntitlement.NOTIFICATION_EXECUTE, IdRepoEntitlement.NOTIFICATION_UPDATE);\n+                                IdRepoEntitlement.NOTIFICATION_EXECUTE, IdRepoEntitlement.NOTIFICATION_UPDATE);\n                             break;\n \n                         default:\n@@ -371,7 +371,7 @@ protected ActionsPanel<JobTO> getActions(final IModel<JobTO> model) {\n \n             final JobTO jobTO = model.getObject();\n \n-            panel.add(new ActionLink<JobTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -390,9 +390,9 @@ public void onClick(final AjaxRequestTarget target, final JobTO ignore) {\n                             target.add(jobModal.setContent(rwb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n \n                             jobModal.header(new StringResourceModel(\n-                                    \"any.edit\",\n-                                    AvailableJobsPanel.this,\n-                                    new Model<>(reportTO)));\n+                                \"any.edit\",\n+                                AvailableJobsPanel.this,\n+                                new Model<>(reportTO)));\n \n                             jobModal.show(true);\n                             break;\n@@ -403,21 +403,21 @@ public void onClick(final AjaxRequestTarget target, final JobTO ignore) {\n                                 schedTaskTO = TaskRestClient.readTask(TaskType.PULL, jobTO.getRefKey());\n                             } catch (Exception e) {\n                                 LOG.debug(\"Failed to read {} as {}, attempting {}\",\n-                                        jobTO.getRefKey(), TaskType.PULL, TaskType.PUSH, e);\n+                                    jobTO.getRefKey(), TaskType.PULL, TaskType.PUSH, e);\n                                 schedTaskTO = TaskRestClient.readTask(TaskType.PUSH, jobTO.getRefKey());\n                             }\n \n                             SchedTaskWizardBuilder<ProvisioningTaskTO> swb =\n-                                    new SchedTaskWizardBuilder<>(schedTaskTO instanceof PullTaskTO\n-                                            ? TaskType.PULL : TaskType.PUSH, schedTaskTO, pageRef);\n+                                new SchedTaskWizardBuilder<>(schedTaskTO instanceof PullTaskTO\n+                                    ? TaskType.PULL : TaskType.PUSH, schedTaskTO, pageRef);\n                             swb.setEventSink(AvailableJobsPanel.this);\n \n                             target.add(jobModal.setContent(swb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n \n                             jobModal.header(new StringResourceModel(\n-                                    \"any.edit\",\n-                                    AvailableJobsPanel.this,\n-                                    new Model<>(schedTaskTO)));\n+                                \"any.edit\",\n+                                AvailableJobsPanel.this,\n+                                new Model<>(schedTaskTO)));\n \n                             jobModal.show(true);\n                             break;\n@@ -433,7 +433,7 @@ protected boolean statusCondition(final JobTO modelObject) {\n                 }\n             }, ActionType.EDIT, IdRepoEntitlement.TASK_UPDATE);\n \n-            panel.add(new ActionLink<JobTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -451,14 +451,14 @@ public void onClick(final AjaxRequestTarget target, final JobTO ignore) {\n                                 final ReportTO reportTO = ReportRestClient.read(jobTO.getRefKey());\n \n                                 target.add(AvailableJobsPanel.this.reportModal.setContent(\n-                                        new ReportletDirectoryPanel(reportModal, jobTO.getRefKey(), pageRef)));\n+                                    new ReportletDirectoryPanel(reportModal, jobTO.getRefKey(), pageRef)));\n \n                                 MetaDataRoleAuthorizationStrategy.authorize(\n-                                        reportModal.getForm(),\n-                                        ENABLE, IdRepoEntitlement.REPORT_UPDATE);\n+                                    reportModal.getForm(),\n+                                    ENABLE, IdRepoEntitlement.REPORT_UPDATE);\n \n                                 reportModal.header(new StringResourceModel(\n-                                        \"reportlet.conf\", AvailableJobsPanel.this, new Model<>(reportTO)));\n+                                    \"reportlet.conf\", AvailableJobsPanel.this, new Model<>(reportTO)));\n \n                                 reportModal.show(true);\n \n@@ -476,12 +476,12 @@ public void onClick(final AjaxRequestTarget target, final JobTO ignore) {\n                 @Override\n                 protected boolean statusCondition(final JobTO modelObject) {\n                     return !(null != jobTO.getType() && (JobType.TASK.equals(jobTO.getType())\n-                            || JobType.NOTIFICATION.equals(jobTO.getType())));\n+                        || JobType.NOTIFICATION.equals(jobTO.getType())));\n                 }\n \n             }, ActionType.COMPOSE, IdRepoEntitlement.TASK_UPDATE);\n \n-            panel.add(new ActionLink<JobTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -518,8 +518,8 @@ public void onClick(final AjaxRequestTarget target, final JobTO ignore) {\n                 @Override\n                 protected boolean statusCondition(final JobTO modelObject) {\n                     return (null != jobTO.getType()\n-                            && !JobType.NOTIFICATION.equals(jobTO.getType())\n-                            && (jobTO.isScheduled() && !jobTO.isRunning()));\n+                        && !JobType.NOTIFICATION.equals(jobTO.getType())\n+                        && (jobTO.isScheduled() && !jobTO.isRunning()));\n                 }\n             }, ActionLink.ActionType.DELETE, IdRepoEntitlement.TASK_DELETE, true);\n \n@@ -627,7 +627,7 @@ protected List<IColumn<ExecTO, String>> getColumns() {\n         public ActionsPanel<ExecTO> getActions(final IModel<ExecTO> model) {\n             final ActionsPanel<ExecTO> panel = super.getActions(model);\n \n-            panel.add(new ActionLink<ExecTO>() {\n+            panel.add(new ActionLink<>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"4398be485a0f711bcc8c4f5cf6467f64f69e6674","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/ProgressesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FProgressesPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -35,7 +35,7 @@ public ProgressesPanel(final String id, final Date lastUpdate, final List<Progre\n \n         add(new Label(\"lastUpdate\", SyncopeConsoleSession.get().getDateFormat().format(lastUpdate)));\n \n-        ListView<ProgressBean> progresses = new ListView<ProgressBean>(\"progresses\", progressBeans) {\n+        ListView<ProgressBean> progresses = new ListView<>(\"progresses\", progressBeans) {\n \n             private static final long serialVersionUID = -9180479401817023838L;\n "},{"sha":"6333b1976051483c07ddcf9684cce8da798a2c05","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/ReconDetailsModalPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconDetailsModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconDetailsModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconDetailsModalPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -113,30 +113,30 @@ protected List<IColumn<Misaligned, String>> getColumns() {\n             columns.add(new PropertyColumn<>(new ResourceModel(Constants.KEY_FIELD_NAME),\n                     Constants.NAME_FIELD_NAME, Constants.NAME_FIELD_NAME));\n \n-            columns.add(new AbstractColumn<Misaligned, String>(Model.of(Constants.SYNCOPE)) {\n+            columns.add(new AbstractColumn<>(Model.of(Constants.SYNCOPE)) {\n \n                 private static final long serialVersionUID = 2054811145491901166L;\n \n                 @Override\n                 public void populateItem(\n-                        final Item<ICellPopulator<Misaligned>> cellItem,\n-                        final String componentId,\n-                        final IModel<Misaligned> rowModel) {\n+                    final Item<ICellPopulator<Misaligned>> cellItem,\n+                    final String componentId,\n+                    final IModel<Misaligned> rowModel) {\n \n                     cellItem.add(new Label(componentId, rowModel.getObject().getOnSyncope().toString()));\n                     cellItem.add(new AttributeModifier(\"class\", \"code-deletion\"));\n                 }\n             });\n \n-            columns.add(new AbstractColumn<Misaligned, String>(Model.of(resource)) {\n+            columns.add(new AbstractColumn<>(Model.of(resource)) {\n \n                 private static final long serialVersionUID = 2054811145491901166L;\n \n                 @Override\n                 public void populateItem(\n-                        final Item<ICellPopulator<Misaligned>> cellItem,\n-                        final String componentId,\n-                        final IModel<Misaligned> rowModel) {\n+                    final Item<ICellPopulator<Misaligned>> cellItem,\n+                    final String componentId,\n+                    final IModel<Misaligned> rowModel) {\n \n                     cellItem.add(new Label(componentId, rowModel.getObject().getOnResource().toString()));\n                     cellItem.add(new AttributeModifier(\"class\", \"code-addition\"));"},{"sha":"4726792ebc6b3f9d0c5978ae6a7b3a0af1466525","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationWidget.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -167,7 +167,7 @@ protected void onTimer(final AjaxRequestTarget target) {\n         reportResult.setOutputMarkupId(true);\n         container.add(reportResult);\n \n-        IndicatorAjaxLink<Void> refresh = new IndicatorAjaxLink<Void>(\"refresh\") {\n+        IndicatorAjaxLink<Void> refresh = new IndicatorAjaxLink<>(\"refresh\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -355,18 +355,18 @@ protected Collection<ActionLink.ActionType> getBatches() {\n         protected List<IColumn<Any, String>> getColumns() {\n             List<IColumn<Any, String>> columns = new ArrayList<>();\n \n-            columns.add(new AbstractColumn<Any, String>(new ResourceModel(\"reference\"), Constants.KEY_FIELD_NAME) {\n+            columns.add(new AbstractColumn<>(new ResourceModel(\"reference\"), Constants.KEY_FIELD_NAME) {\n \n                 private static final long serialVersionUID = -1822504503325964706L;\n \n                 @Override\n                 public void populateItem(\n-                        final Item<ICellPopulator<Any>> cellItem,\n-                        final String componentId,\n-                        final IModel<Any> rowModel) {\n+                    final Item<ICellPopulator<Any>> cellItem,\n+                    final String componentId,\n+                    final IModel<Any> rowModel) {\n \n                     cellItem.add(new Label(componentId,\n-                            rowModel.getObject().getKey()\n+                        rowModel.getObject().getKey()\n                             + (StringUtils.isBlank(rowModel.getObject().getName())\n                             ? StringUtils.EMPTY\n                             : ' ' + rowModel.getObject().getName())));\n@@ -381,43 +381,43 @@ public void populateItem(\n                         map(Misaligned::getResource).collect(Collectors.toList()));\n             });\n             for (final String resource : resources) {\n-                columns.add(new AbstractColumn<Any, String>(Model.of(resource)) {\n+                columns.add(new AbstractColumn<>(Model.of(resource)) {\n \n                     private static final long serialVersionUID = -1822504503325964706L;\n \n                     @Override\n                     public void populateItem(\n-                            final Item<ICellPopulator<Any>> cellItem,\n-                            final String componentId,\n-                            final IModel<Any> rowModel) {\n+                        final Item<ICellPopulator<Any>> cellItem,\n+                        final String componentId,\n+                        final IModel<Any> rowModel) {\n \n                         Any any = rowModel.getObject();\n \n                         Optional<Missing> missing = any.getMissing().stream().\n-                                filter(object -> resource.equals(object.getResource())).findFirst();\n+                            filter(object -> resource.equals(object.getResource())).findFirst();\n                         List<Misaligned> misaligned = any.getMisaligned().stream().\n-                                filter(object -> resource.equals(object.getResource())).collect(Collectors.toList());\n+                            filter(object -> resource.equals(object.getResource())).collect(Collectors.toList());\n \n                         Component content;\n                         if (missing.isEmpty()) {\n                             if (misaligned.isEmpty()) {\n                                 content = new Label(componentId, StringUtils.EMPTY);\n                             } else {\n-                                Action<Any> action = new Action<>(new ActionLink<Any>() {\n+                                Action<Any> action = new Action<>(new ActionLink<>() {\n \n                                     private static final long serialVersionUID = -3722207913631435501L;\n \n                                     @Override\n                                     public void onClick(final AjaxRequestTarget target, final Any ignore) {\n                                         modal.header(Model.of(\n-                                                rowModel.getObject().getType()\n+                                            rowModel.getObject().getType()\n                                                 + ' ' + rowModel.getObject().getKey()\n                                                 + ' ' + rowModel.getObject().getName()));\n                                         modal.setContent(new ReconDetailsModalPanel(\n-                                                modal,\n-                                                resource,\n-                                                misaligned,\n-                                                ReconciliationWidget.this.pageRef));\n+                                            modal,\n+                                            resource,\n+                                            misaligned,\n+                                            ReconciliationWidget.this.pageRef));\n                                         modal.show(true);\n                                         target.add(modal);\n                                     }"},{"sha":"2e010517b8caf413b22091d0492a8960fea6d966","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/DelegationWizardBuilder.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FDelegationWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -172,23 +172,23 @@ private class Roles extends WizardStep implements WizardModel.ICondition {\n                     setAllowOrder(true).\n                     build(\"roles\",\n                             new PropertyModel<>(modelObject, \"roles\"),\n-                            new AjaxPalettePanel.Builder.Query<String>() {\n+                        new AjaxPalettePanel.Builder.Query<>() {\n \n-                        private static final long serialVersionUID = 3900199363626636719L;\n+                            private static final long serialVersionUID = 3900199363626636719L;\n \n-                        @Override\n-                        public List<String> execute(final String filter) {\n-                            if (StringUtils.isEmpty(filter) || \"*\".equals(filter)) {\n-                                return allRoles.size() > Constants.MAX_ROLE_LIST_SIZE\n+                            @Override\n+                            public List<String> execute(final String filter) {\n+                                if (StringUtils.isEmpty(filter) || \"*\".equals(filter)) {\n+                                    return allRoles.size() > Constants.MAX_ROLE_LIST_SIZE\n                                         ? allRoles.subList(0, Constants.MAX_ROLE_LIST_SIZE)\n                                         : allRoles;\n \n-                            }\n-                            return allRoles.stream().\n+                                }\n+                                return allRoles.stream().\n                                     filter(role -> StringUtils.containsIgnoreCase(role, filter)).\n                                     collect(Collectors.toList());\n-                        }\n-                    }).\n+                            }\n+                        }).\n                     hideLabel().\n                     setOutputMarkupId(true));\n         }"},{"sha":"63baab489de6c06054a4d8452d211c259faa095f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -86,7 +86,7 @@\n \n     private final List<Component> outerObjects = new ArrayList<>();\n \n-    protected final BaseModal<T> modal = new BaseModal<T>(Constants.OUTER) {\n+    protected final BaseModal<T> modal = new BaseModal<>(Constants.OUTER) {\n \n         private static final long serialVersionUID = 389935548143327858L;\n \n@@ -151,7 +151,7 @@ public void onClick(final AjaxRequestTarget target) {\n         utilityIcon = new Label(\"utilityIcon\");\n         utilityAjaxLink.add(utilityIcon);\n \n-        add(new ListView<Component>(\"outerObjectsRepeater\", outerObjects) {\n+        add(new ListView<>(\"outerObjectsRepeater\", outerObjects) {\n \n             private static final long serialVersionUID = -9180479401817023838L;\n \n@@ -238,9 +238,9 @@ public void onEvent(final IEvent<?> event) {\n                 }\n \n                 if (wizardInModal && showResultPage) {\n-                    modal.setContent(new ResultPage<T>(\n-                            item,\n-                            AjaxWizard.NewItemFinishEvent.class.cast(newItemEvent).getResult()) {\n+                    modal.setContent(new ResultPage<>(\n+                        item,\n+                        AjaxWizard.NewItemFinishEvent.class.cast(newItemEvent).getResult()) {\n \n                         private static final long serialVersionUID = -2630573849050255233L;\n "},{"sha":"64ef8e52cda905c5ec0f5772e67304222d3ec019","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -58,21 +58,21 @@ public ConnObjectPanel(\n \n         super(id);\n \n-        final IModel<List<String>> formProps = new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> formProps = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 List<Attr> right = new ArrayList<>(connObjectTOs == null || connObjectTOs.getRight() == null\n-                        ? List.of()\n-                        : connObjectTOs.getRight().getAttrs());\n+                    ? List.of()\n+                    : connObjectTOs.getRight().getAttrs());\n                 List<Attr> left = new ArrayList<>(connObjectTOs == null || connObjectTOs.getLeft() == null\n-                        ? List.of()\n-                        : connObjectTOs.getLeft().getAttrs());\n+                    ? List.of()\n+                    : connObjectTOs.getLeft().getAttrs());\n \n                 List<String> schemas = ListUtils.sum(right.stream().map(Attr::getSchema).collect(Collectors.toList()),\n-                        left.stream().map(Attr::getSchema).collect(Collectors.toList()));\n+                    left.stream().map(Attr::getSchema).collect(Collectors.toList()));\n                 Collections.sort(schemas);\n                 return schemas;\n             }\n@@ -87,7 +87,7 @@ protected List<String> load() {\n         final Map<String, Attr> rightProfile = connObjectTOs == null || connObjectTOs.getRight() == null\n                 ? null\n                 : EntityTOUtils.buildAttrMap(connObjectTOs.getRight().getAttrs());\n-        ListView<String> propView = new ListView<String>(\"propView\", formProps) {\n+        ListView<String> propView = new ListView<>(\"propView\", formProps) {\n \n             private static final long serialVersionUID = 3109256773218160485L;\n \n@@ -103,20 +103,20 @@ protected void populateItem(final ListItem<String> item) {\n \n                 valueFragment = new Fragment(\"value\", \"doubleValue\", ConnObjectPanel.this);\n                 valueFragment.add(getValuePanel(\"leftAttribute\", prop, left).\n-                        setOutputMarkupPlaceholderTag(true).setVisible(!hideLeft));\n+                    setOutputMarkupPlaceholderTag(true).setVisible(!hideLeft));\n                 valueFragment.add(getValuePanel(\"rightAttribute\", prop, right));\n \n                 if (left == null || right == null\n-                        || (CollectionUtils.isNotEmpty(right.getValues())\n-                        && CollectionUtils.isEmpty(left.getValues()))\n-                        || (CollectionUtils.isEmpty(right.getValues())\n-                        && CollectionUtils.isNotEmpty(left.getValues()))\n-                        || (CollectionUtils.isNotEmpty(right.getValues())\n-                        && CollectionUtils.isNotEmpty(left.getValues())\n-                        && right.getValues().size() != left.getValues().size())\n-                        || (CollectionUtils.isNotEmpty(right.getValues())\n-                        && CollectionUtils.isNotEmpty(left.getValues())\n-                        && !right.getValues().equals(left.getValues()))) {\n+                    || (CollectionUtils.isNotEmpty(right.getValues())\n+                    && CollectionUtils.isEmpty(left.getValues()))\n+                    || (CollectionUtils.isEmpty(right.getValues())\n+                    && CollectionUtils.isNotEmpty(left.getValues()))\n+                    || (CollectionUtils.isNotEmpty(right.getValues())\n+                    && CollectionUtils.isNotEmpty(left.getValues())\n+                    && right.getValues().size() != left.getValues().size())\n+                    || (CollectionUtils.isNotEmpty(right.getValues())\n+                    && CollectionUtils.isNotEmpty(left.getValues())\n+                    && !right.getValues().equals(left.getValues()))) {\n \n                     valueFragment.add(new Behavior() {\n "},{"sha":"bb3082c1ed874dcf62dd2549c3751d508033a5f0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -71,27 +71,27 @@ public WebMarkupContainer getPanel(final String panelId) {\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n-        add(new ListView<MembershipTO>(\"membershipsDerSchemas\", memberships) {\n+        add(new ListView<>(\"membershipsDerSchemas\", memberships) {\n \n             private static final long serialVersionUID = 6741044372185745296L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 final MembershipTO membershipTO = item.getModelObject();\n                 item.add(new Accordion(\"membershipDerSchemas\", List.of(new AbstractTab(\n-                        new StringResourceModel(\n-                                \"attributes.membership.accordion\",\n-                                DerAttrs.this,\n-                                Model.of(membershipTO))) {\n+                    new StringResourceModel(\n+                        \"attributes.membership.accordion\",\n+                        DerAttrs.this,\n+                        Model.of(membershipTO))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n                         return new DerAttrs.DerSchemas(\n-                                panelId,\n-                                membershipSchemas.get(membershipTO.getGroupKey()),\n-                                new ListModel<>(getAttrsFromTO(membershipTO)));\n+                            panelId,\n+                            membershipSchemas.get(membershipTO.getGroupKey()),\n+                            new ListModel<>(getAttrsFromTO(membershipTO)));\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -170,7 +170,7 @@ public DerSchemas(\n \n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+            add(new ListView<>(\"schemas\", attrTOs) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -193,10 +193,10 @@ protected void populateItem(final ListItem<Attr> item) {\n                     }\n \n                     AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n-                            \"panel\",\n-                            schemas.get(attrTO.getSchema()).getLabel(SyncopeConsoleSession.get().getLocale()),\n-                            model,\n-                            false);\n+                        \"panel\",\n+                        schemas.get(attrTO.getSchema()).getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        model,\n+                        false);\n                     panel.setEnabled(false);\n                     panel.setRequired(true);\n                     panel.setOutputMarkupId(true);"},{"sha":"993be5abad4b5d72e9b0aec37d6e9690667d9dfc","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Details.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -88,7 +88,7 @@ protected Iterator<String> getChoices(final String input) {\n                             : RealmRestClient.list()).\n                             stream().filter(realm -> authRealms.stream().anyMatch(\n                             authRealm -> realm.getFullPath().startsWith(authRealm))).\n-                            map(item -> item.getFullPath()).collect(Collectors.toList()).iterator();\n+                            map(RealmTO::getFullPath).collect(Collectors.toList()).iterator();\n                 }\n             };\n "},{"sha":"d60116b400f9a90d3e7f50da3bb9f5052e0e8514","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/DynamicMemberships.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -46,15 +46,15 @@ public class DynamicMemberships extends WizardStep {\n     public DynamicMemberships(final GroupWrapper groupWrapper) {\n         super();\n \n-        final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<List<AnyTypeTO>>() {\n+        final LoadableDetachableModel<List<AnyTypeTO>> types = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<AnyTypeTO> load() {\n                 return AnyTypeRestClient.listAnyTypes().stream().\n-                        filter(type -> AnyTypeKind.USER != type.getKind() && AnyTypeKind.GROUP != type.getKind()).\n-                        collect(Collectors.toList());\n+                    filter(type -> AnyTypeKind.USER != type.getKind() && AnyTypeKind.GROUP != type.getKind()).\n+                    collect(Collectors.toList());\n             }\n         };\n \n@@ -77,27 +77,27 @@ public Panel getPanel(final String panelId) {\n         // ------------------------\n         // aDynMembershipConds\n         // ------------------------\n-        add(new ListView<AnyTypeTO>(\"aDynMembershipCond\", types) {\n+        add(new ListView<>(\"aDynMembershipCond\", types) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<AnyTypeTO> item) {\n                 final String key = item.getModelObject().getKey();\n                 item.add(new Accordion(\"aDynMembershipCond\", List.of(\n-                        new AbstractTab(new StringResourceModel(\n-                                \"aDynMembershipCond\", this, new Model<AnyTypeTO>(item.getModelObject()))) {\n+                    new AbstractTab(new StringResourceModel(\n+                        \"aDynMembershipCond\", this, new Model<>(item.getModelObject()))) {\n \n-                    private static final long serialVersionUID = 1037272333056449378L;\n+                        private static final long serialVersionUID = 1037272333056449378L;\n \n-                    @Override\n-                    public Panel getPanel(final String panelId) {\n-                        return new AnyObjectSearchPanel.Builder(\n+                        @Override\n+                        public Panel getPanel(final String panelId) {\n+                            return new AnyObjectSearchPanel.Builder(\n                                 key, new MapOfListModel<>(groupWrapper, \"aDynClauses\", key)).\n                                 required(false).build(panelId);\n-                    }\n-                }), Model.of(StringUtils.isBlank(groupWrapper.getADynMembershipConds().get(key)) ? -1 : 0)).\n-                        setOutputMarkupId(true));\n+                        }\n+                    }), Model.of(StringUtils.isBlank(groupWrapper.getADynMembershipConds().get(key)) ? -1 : 0)).\n+                    setOutputMarkupId(true));\n             }\n         });\n         // ------------------------"},{"sha":"e1a0c2988a8ba3ab77a04b08bcb3a9b0b51a43e8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":30,"deletions":29,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -107,7 +107,7 @@ protected void addGroupsPanel() {\n             dyngroupsContainer.setVisible(false);\n         } else {\n             AjaxPalettePanel.Builder<MembershipTO> builder = new AjaxPalettePanel.Builder<MembershipTO>().\n-                    setRenderer(new IChoiceRenderer<MembershipTO>() {\n+                    setRenderer(new IChoiceRenderer<>() {\n \n                         private static final long serialVersionUID = -3086661086073628855L;\n \n@@ -123,52 +123,53 @@ public String getIdValue(final MembershipTO object, final int index) {\n \n                         @Override\n                         public MembershipTO getObject(\n-                                final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n+                            final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n \n                             return choices.getObject().stream().\n-                                    filter(object -> id.equalsIgnoreCase(object.getGroupName())).findAny().orElse(null);\n+                                filter(object -> id.equalsIgnoreCase(object.getGroupName())).findAny().orElse(null);\n                         }\n                     });\n \n             groupsContainer.add(builder.setAllowOrder(true).withFilter(\"*\").build(\"groups\",\n-                    new ListModel<MembershipTO>() {\n+                new ListModel<>() {\n \n-                private static final long serialVersionUID = -2583290457773357445L;\n+                    private static final long serialVersionUID = -2583290457773357445L;\n \n-                @Override\n-                public List<MembershipTO> getObject() {\n-                    return Groups.this.groupsModel.getMemberships();\n-                }\n+                    @Override\n+                    public List<MembershipTO> getObject() {\n+                        return Groups.this.groupsModel.getMemberships();\n+                    }\n \n-            }, new AjaxPalettePanel.Builder.Query<MembershipTO>() {\n+                }, new AjaxPalettePanel.Builder.Query<>() {\n \n-                private static final long serialVersionUID = -7223078772249308813L;\n+                    private static final long serialVersionUID = -7223078772249308813L;\n \n-                @Override\n-                public List<MembershipTO> execute(final String filter) {\n-                    return StringUtils.isEmpty(filter)\n+                    @Override\n+                    public List<MembershipTO> execute(final String filter) {\n+                        return StringUtils.isEmpty(filter)\n                             ? List.of()\n                             : (\"*\".equals(filter)\n-                                    ? groupsModel.getObject()\n-                                    : SyncopeRestClient.searchAssignableGroups(\n-                                            anyTO.getRealm(), filter, 1, Constants.MAX_GROUP_LIST_SIZE)).stream().\n-                                    map(group -> new MembershipTO.Builder(group.getKey()).\n-                                    groupName(group.getName()).build()).\n-                                    collect(Collectors.toList());\n-                }\n-            }).hideLabel().setOutputMarkupId(true));\n+                            ? groupsModel.getObject()\n+                            : SyncopeRestClient.searchAssignableGroups(\n+                            anyTO.getRealm(), filter, 1, Constants.MAX_GROUP_LIST_SIZE)).stream().\n+                            map(group -> new MembershipTO.Builder(group.getKey()).\n+                                groupName(group.getName()).build()).\n+                            collect(Collectors.toList());\n+                    }\n+                }).hideLabel().setOutputMarkupId(true));\n \n             dyngroupsContainer.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\"dyngroups\",\n-                    new ListModel<String>() {\n+                new ListModel<>() {\n \n-                private static final long serialVersionUID = -2583290457773357445L;\n+                    private static final long serialVersionUID = -2583290457773357445L;\n \n-                @Override\n-                public List<String> getObject() {\n-                    return Groups.this.groupsModel.getDynMemberships();\n-                }\n+                    @Override\n+                    public List<String> getObject() {\n+                        return Groups.this.groupsModel.getDynMemberships();\n+                    }\n \n-            }, new ListModel<>(groupsModel.getObject().stream().map(GroupTO::getName).collect(Collectors.toList()))).\n+                }, new ListModel<>(groupsModel.getObject().stream().\n+                        map(GroupTO::getName).collect(Collectors.toList()))).\n                     hideLabel().setEnabled(false).setOutputMarkupId(true));\n         }\n     }"},{"sha":"b7fc8ce444d2014ca84ced3c9dabb9be8ed8520d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -114,7 +114,7 @@ public Ownership(final GroupWrapper groupWrapper, final PageReference pageRef) {\n                 withOffStyle(BootstrapToggleConfig.Style.warning).\n                 withSize(BootstrapToggleConfig.Size.mini);\n \n-        add(new BootstrapToggle(\"ownership\", new Model<Boolean>() {\n+        add(new BootstrapToggle(\"ownership\", new Model<>() {\n \n             private static final long serialVersionUID = 6062041315055645807L;\n \n@@ -201,7 +201,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         }\n \n         final AjaxTextFieldPanel userOwner = new AjaxTextFieldPanel(\n-                \"userOwner\", \"userOwner\", new PropertyModel<String>(groupWrapper.getInnerObject(), \"userOwner\") {\n+                \"userOwner\", \"userOwner\", new PropertyModel<>(groupWrapper.getInnerObject(), \"userOwner\") {\n \n             private static final long serialVersionUID = -3743432456095828573L;\n \n@@ -236,7 +236,7 @@ public void setObject(final String object) {\n         userOwner.setReadOnly(true).setOutputMarkupId(true);\n         userSearchFragment.add(userOwner);\n \n-        final IndicatingAjaxLink<Void> userOwnerReset = new IndicatingAjaxLink<Void>(\"userOwnerReset\") {\n+        final IndicatingAjaxLink<Void> userOwnerReset = new IndicatingAjaxLink<>(\"userOwnerReset\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -254,7 +254,7 @@ public String getAjaxIndicatorMarkupId() {\n         userSearchFragment.add(userOwnerReset);\n \n         final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\n-                \"groupOwner\", \"groupOwner\", new PropertyModel<String>(groupWrapper.getInnerObject(), \"groupOwner\") {\n+                \"groupOwner\", \"groupOwner\", new PropertyModel<>(groupWrapper.getInnerObject(), \"groupOwner\") {\n \n             private static final long serialVersionUID = -3743432456095828573L;\n \n@@ -289,7 +289,7 @@ public void setObject(final String object) {\n         groupOwner.setReadOnly(true).setOutputMarkupId(true);\n         groupSearchFragment.add(groupOwner);\n \n-        final IndicatingAjaxLink<Void> groupOwnerReset = new IndicatingAjaxLink<Void>(\"groupOwnerReset\") {\n+        final IndicatingAjaxLink<Void> groupOwnerReset = new IndicatingAjaxLink<>(\"groupOwnerReset\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"8c3624bfde265712da346b7bf0d5e489722dd765","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -88,35 +88,35 @@ public WebMarkupContainer getPanel(final String panelId) {\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n-        add(new ListView<MembershipTO>(\"membershipsPlainSchemas\", memberships) {\n+        add(new ListView<>(\"membershipsPlainSchemas\", memberships) {\n \n             private static final long serialVersionUID = 6741044372185745296L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 final MembershipTO membershipTO = item.getModelObject();\n                 item.add(new Accordion(\"membershipPlainSchemas\", List.of(new AbstractTab(\n-                        new StringResourceModel(\n-                                \"attributes.membership.accordion\",\n-                                PlainAttrs.this,\n-                                Model.of(membershipTO))) {\n+                    new StringResourceModel(\n+                        \"attributes.membership.accordion\",\n+                        PlainAttrs.this,\n+                        Model.of(membershipTO))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n                         return new PlainSchemasMemberships(\n-                                panelId,\n-                                membershipSchemas.get(membershipTO.getGroupKey()),\n-                                new LoadableDetachableModel<Attributable>() { // SYNCOPE-1439\n+                            panelId,\n+                            membershipSchemas.get(membershipTO.getGroupKey()),\n+                            new LoadableDetachableModel<>() { // SYNCOPE-1439\n \n-                            private static final long serialVersionUID = 526768546610546553L;\n+                                private static final long serialVersionUID = 526768546610546553L;\n \n-                            @Override\n-                            protected Attributable load() {\n-                                return membershipTO;\n-                            }\n-                        });\n+                                @Override\n+                                protected Attributable load() {\n+                                    return membershipTO;\n+                                }\n+                            });\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -196,7 +196,7 @@ public PlainSchemasOwn(\n \n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+            add(new ListView<>(\"schemas\", attrTOs) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -220,8 +220,8 @@ public PlainSchemasMemberships(\n \n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\", new ListModel<Attr>(attributableTO.getObject().\n-                    getPlainAttrs().stream().sorted(attrComparator).collect(Collectors.toList()))) {\n+            add(new ListView<>(\"schemas\", new ListModel<>(attributableTO.getObject().\n+                getPlainAttrs().stream().sorted(attrComparator).collect(Collectors.toList()))) {\n \n                 private static final long serialVersionUID = 5306618783986001008L;\n "},{"sha":"1813cc73f7e89c81325457308318c103888711c3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -132,7 +132,7 @@ public Panel getPanel(final String panelId) {\n                 return new ListViewPanel.Builder<>(RelationshipTO.class, pageRef).\n                         setItems(relationships.get(relationship)).\n                         includes(\"otherEndType\", \"otherEndKey\", \"otherEndName\").\n-                        addAction(new ActionLink<RelationshipTO>() {\n+                        addAction(new ActionLink<>() {\n \n                             private static final long serialVersionUID = -6847033126124401556L;\n \n@@ -161,7 +161,7 @@ public void renderHead(final IHeaderResponse response) {\n         final ActionsPanel<RelationshipTO> panel = new ActionsPanel<>(\"actions\", null);\n         viewFragment.add(panel);\n \n-        panel.add(new ActionLink<RelationshipTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 3257738274365467945L;\n \n@@ -251,7 +251,7 @@ public Specification() {\n                     && anyType.getKind() != AnyTypeKind.USER).collect(Collectors.toList());\n \n             final AjaxDropDownChoicePanel<AnyTypeTO> otherType = new AjaxDropDownChoicePanel<>(\n-                    \"otherType\", \"otherType\", new PropertyModel<AnyTypeTO>(rel, \"otherType\") {\n+                    \"otherType\", \"otherType\", new PropertyModel<>(rel, \"otherType\") {\n \n                 private static final long serialVersionUID = -5861057041758169508L;\n \n@@ -271,7 +271,7 @@ public void setObject(final AnyTypeTO object) {\n                 }\n             }, false);\n             otherType.setChoices(availableTypes);\n-            otherType.setChoiceRenderer(new IChoiceRenderer<AnyTypeTO>() {\n+            otherType.setChoiceRenderer(new IChoiceRenderer<>() {\n \n                 private static final long serialVersionUID = -734743540442190178L;\n \n@@ -288,7 +288,7 @@ public String getIdValue(final AnyTypeTO object, final int index) {\n                 @Override\n                 public AnyTypeTO getObject(final String id, final IModel<? extends List<? extends AnyTypeTO>> choices) {\n                     return choices.getObject().stream().\n-                            filter(anyTypeTO -> id.equals(anyTypeTO.getKey())).findAny().orElse(null);\n+                        filter(anyTypeTO -> id.equals(anyTypeTO.getKey())).findAny().orElse(null);\n                 }\n             });\n             // enable \"otherType\" dropdown only if \"type\" option is selected - SYNCOPE-1140"},{"sha":"bee55736cb61623e47f4f147340bc6701598be98","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/ResultPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -45,7 +45,7 @@ public ResultPage(final T item, final Serializable result) {\n         add(customResultBody(\"customResultBody\", item, result));\n \n         ActionsPanel<T> panel = new ActionsPanel<>(Constants.ACTION, null);\n-        panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 3257738274365467945L;\n "},{"sha":"2ea694608bd8fd8eb3033982221988dc6bff1f54","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -101,23 +101,23 @@ protected Component buildRolesSelector(final UserWrapper modelObject) {\n                 setAllowOrder(true).\n                 build(\"roles\",\n                         new PropertyModel<>(modelObject.getInnerObject(), \"roles\"),\n-                        new AjaxPalettePanel.Builder.Query<String>() {\n+                    new AjaxPalettePanel.Builder.Query<>() {\n \n-                    private static final long serialVersionUID = 3900199363626636719L;\n+                        private static final long serialVersionUID = 3900199363626636719L;\n \n-                    @Override\n-                    public List<String> execute(final String filter) {\n-                        if (StringUtils.isEmpty(filter) || \"*\".equals(filter)) {\n-                            return allRoles.size() > Constants.MAX_ROLE_LIST_SIZE\n+                        @Override\n+                        public List<String> execute(final String filter) {\n+                            if (StringUtils.isEmpty(filter) || \"*\".equals(filter)) {\n+                                return allRoles.size() > Constants.MAX_ROLE_LIST_SIZE\n                                     ? allRoles.subList(0, Constants.MAX_ROLE_LIST_SIZE)\n                                     : allRoles;\n \n-                        }\n-                        return allRoles.stream().\n+                            }\n+                            return allRoles.stream().\n                                 filter(role -> StringUtils.containsIgnoreCase(role, filter)).\n                                 collect(Collectors.toList());\n-                    }\n-                }).\n+                        }\n+                    }).\n                 hideLabel().\n                 setOutputMarkupId(true);\n     }"},{"sha":"641309df1b4476d20c5dde2fe03eafd51aa359d6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -133,7 +133,7 @@ private void init(\n         final MultilevelPanel mlp = new MultilevelPanel(\"resources\");\n         add(mlp);\n \n-        ListViewPanel.Builder<StatusBean> builder = new ListViewPanel.Builder<StatusBean>(StatusBean.class, pageRef) {\n+        ListViewPanel.Builder<StatusBean> builder = new ListViewPanel.Builder<>(StatusBean.class, pageRef) {\n \n             private static final long serialVersionUID = -6809736686861678498L;\n \n@@ -152,14 +152,14 @@ protected Component getValueComponent(final String key, final StatusBean bean) {\n         builder.withChecks(ListViewPanel.CheckAvailability.NONE);\n         builder.setReuseItem(false);\n \n-        ActionLink<StatusBean> connObjectLink = new ActionLink<StatusBean>() {\n+        ActionLink<StatusBean> connObjectLink = new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             protected boolean statusCondition(final StatusBean bean) {\n                 Pair<ConnObjectTO, ConnObjectTO> pair =\n-                        getConnObjectTOs(bean.getKey(), bean.getResource(), connObjects);\n+                    getConnObjectTOs(bean.getKey(), bean.getResource(), connObjects);\n                 return pair != null && pair.getRight() != null;\n             }\n \n@@ -173,7 +173,7 @@ public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n         }\n         SyncopeWebApplication.get().getStatusProvider().addConnObjectLink(builder, connObjectLink);\n \n-        builder.addAction(new ActionLink<StatusBean>() {\n+        builder.addAction(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"055703ec0c9ec436adb894cab7ccf411d9d149fb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -79,24 +79,24 @@ public WebMarkupContainer getPanel(final String panelId) {\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n-        add(new ListView<MembershipTO>(\"membershipsVirSchemas\", memberships) {\n+        add(new ListView<>(\"membershipsVirSchemas\", memberships) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 MembershipTO membTO = item.getModelObject();\n                 item.add(new Accordion(\"membershipVirSchemas\", List.of(new AbstractTab(\n-                        new StringResourceModel(\"attributes.membership.accordion\", VirAttrs.this, Model.of(membTO))) {\n+                    new StringResourceModel(\"attributes.membership.accordion\", VirAttrs.this, Model.of(membTO))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n                         return new VirAttrs.VirSchemas(\n-                                panelId,\n-                                membershipSchemas.get(membTO.getGroupKey()),\n-                                new ListModel<>(getAttrsFromTO(membTO)));\n+                            panelId,\n+                            membershipSchemas.get(membTO.getGroupKey()),\n+                            new ListModel<>(getAttrsFromTO(membTO)));\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -176,7 +176,7 @@ public VirSchemas(\n                 final IModel<List<Attr>> attrTOs) {\n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+            add(new ListView<>(\"schemas\", attrTOs) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -187,27 +187,27 @@ protected void populateItem(final ListItem<Attr> item) {\n                     VirSchemaTO virSchemaTO = schemas.get(attrTO.getSchema());\n \n                     AbstractFieldPanel<?> panel = new AjaxTextFieldPanel(\n-                            \"panel\",\n-                            virSchemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n-                            new Model<>(),\n-                            false);\n+                        \"panel\",\n+                        virSchemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        new Model<>(),\n+                        false);\n \n                     if (mode == AjaxWizard.Mode.TEMPLATE) {\n                         AjaxTextFieldPanel.class.cast(panel).enableJexlHelp().setEnabled(!virSchemaTO.isReadonly());\n                     } else {\n                         panel = new MultiFieldPanel.Builder<>(\n-                                new PropertyModel<List<String>>(attrTO, \"values\")).build(\n-                                \"panel\",\n-                                virSchemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n-                                AjaxTextFieldPanel.class.cast(panel));\n+                            new PropertyModel<List<String>>(attrTO, \"values\")).build(\n+                            \"panel\",\n+                            virSchemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                            AjaxTextFieldPanel.class.cast(panel));\n                         panel.setEnabled(!virSchemaTO.isReadonly());\n                     }\n \n                     item.add(panel);\n \n                     if (!attrTO.getValues().isEmpty()\n-                            && VirAttrs.this.modelObject instanceof UserWrapper\n-                            && UserWrapper.class.cast(VirAttrs.this.modelObject).getPreviousUserTO() != null) {\n+                        && VirAttrs.this.modelObject instanceof UserWrapper\n+                        && UserWrapper.class.cast(VirAttrs.this.modelObject).getPreviousUserTO() != null) {\n \n                         panel.showExternAction(new LabelInfo(\"externalAction\", StringUtils.EMPTY));\n                     }"},{"sha":"35439841a2bd572f555abb6de8b1cc4f91a31b68","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/mapping/AbstractMappingPanel.java","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAbstractMappingPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -176,7 +176,7 @@ protected String createRelAttribute() {\n             return compared;\n         });\n \n-        mappings = new ListView<ItemTO>(\"mappings\", model) {\n+        mappings = new ListView<>(\"mappings\", model) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n@@ -191,10 +191,10 @@ protected void populateItem(final ListItem<ItemTO> item) {\n                 // Internal attribute\n                 // -------------------------------\n                 AjaxTextFieldPanel intAttrName = new AjaxTextFieldPanel(\n-                        \"intAttrName\",\n-                        \"intAttrName\",\n-                        new PropertyModel<>(itemTO, \"intAttrName\"),\n-                        false);\n+                    \"intAttrName\",\n+                    \"intAttrName\",\n+                    new PropertyModel<>(itemTO, \"intAttrName\"),\n+                    false);\n                 intAttrName.setChoices(List.of());\n                 intAttrName.setRequired(true).hideLabel();\n                 item.add(intAttrName);\n@@ -204,9 +204,9 @@ protected void populateItem(final ListItem<ItemTO> item) {\n                 // External attribute\n                 // -------------------------------\n                 AjaxTextFieldPanel extAttrName = new AjaxTextFieldPanel(\n-                        \"extAttrName\",\n-                        \"extAttrName\",\n-                        new PropertyModel<>(itemTO, \"extAttrName\"));\n+                    \"extAttrName\",\n+                    \"extAttrName\",\n+                    new PropertyModel<>(itemTO, \"extAttrName\"));\n                 extAttrName.setChoices(getExtAttrNames().getObject());\n \n                 boolean required = !itemTO.isPassword();\n@@ -222,7 +222,7 @@ protected void populateItem(final ListItem<ItemTO> item) {\n                     item.add(new Label(\"jexlTransformers\").setVisible(false));\n                 } else {\n                     item.add(new JEXLTransformerWidget(\n-                            \"jexlTransformers\", itemTO, jexlTransformers).setRenderBodyOnly(true));\n+                        \"jexlTransformers\", itemTO, jexlTransformers).setRenderBodyOnly(true));\n                 }\n                 // -------------------------------\n \n@@ -234,17 +234,17 @@ protected void populateItem(final ListItem<ItemTO> item) {\n \n                 } else {\n                     item.add(new ItemTransformerWidget(\n-                            \"itemTransformers\", itemTO, itemTransformers).setRenderBodyOnly(true));\n+                        \"itemTransformers\", itemTO, itemTransformers).setRenderBodyOnly(true));\n                 }\n                 // -------------------------------\n \n                 //--------------------------------\n                 // Mandatory\n                 // -------------------------------\n                 AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\n-                        \"mandatoryCondition\",\n-                        \"mandatoryCondition\",\n-                        new PropertyModel<>(itemTO, \"mandatoryCondition\"));\n+                    \"mandatoryCondition\",\n+                    \"mandatoryCondition\",\n+                    new PropertyModel<>(itemTO, \"mandatoryCondition\"));\n                 mandatory.hideLabel();\n                 mandatory.setChoices(List.of(\"true\", \"false\"));\n                 mandatory.setEnabled(!itemTO.isConnObjectKey());\n@@ -255,9 +255,9 @@ protected void populateItem(final ListItem<ItemTO> item) {\n                 // Connector object key\n                 // -------------------------------\n                 AjaxCheckBoxPanel connObjectKey = new AjaxCheckBoxPanel(\n-                        \"connObjectKey\",\n-                        \"connObjectKey\",\n-                        new PropertyModel<>(itemTO, \"connObjectKey\"), false);\n+                    \"connObjectKey\",\n+                    \"connObjectKey\",\n+                    new PropertyModel<>(itemTO, \"connObjectKey\"), false);\n                 connObjectKey.hideLabel();\n                 item.add(connObjectKey);\n                 // -------------------------------\n@@ -266,9 +266,9 @@ protected void populateItem(final ListItem<ItemTO> item) {\n                 // Password\n                 // -------------------------------\n                 AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\n-                        \"password\",\n-                        \"password\",\n-                        new PropertyModel<>(itemTO, \"password\"), false);\n+                    \"password\",\n+                    \"password\",\n+                    new PropertyModel<>(itemTO, \"password\"), false);\n                 item.add(password.hideLabel());\n                 // -------------------------------\n \n@@ -279,7 +279,7 @@ protected void populateItem(final ListItem<ItemTO> item) {\n                 purpose.setOutputMarkupId(true);\n \n                 MappingPurposePanel purposeActions = new MappingPurposePanel(\n-                        \"purposeActions\", new PropertyModel<>(itemTO, \"purpose\"), purpose);\n+                    \"purposeActions\", new PropertyModel<>(itemTO, \"purpose\"), purpose);\n                 purpose.add(purposeActions.setRenderBodyOnly(true));\n                 item.add(purpose);\n                 // -------------------------------\n@@ -288,7 +288,7 @@ protected void populateItem(final ListItem<ItemTO> item) {\n                 // Remove\n                 // -------------------------------\n                 ActionsPanel<Serializable> actions = new ActionsPanel<>(\"toRemove\", null);\n-                actions.add(new ActionLink<Serializable>() {\n+                actions.add(new ActionLink<>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -339,7 +339,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     protected void onUpdate(final AjaxRequestTarget target) {\n                         extAttrName.setEnabled(!password.getModelObject());\n                         extAttrName.setModelObject(password.getModelObject()\n-                                ? ConnIdSpecialName.PASSWORD : extAttrName.getModelObject());\n+                            ? ConnIdSpecialName.PASSWORD : extAttrName.getModelObject());\n                         extAttrName.setRequired(!password.getModelObject());\n                         target.add(extAttrName);\n "},{"sha":"7e3ca1e9393075dd4637c6f9e96cc7b84194ee0c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/mapping/ItemTransformersTogglePanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FItemTransformersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FItemTransformersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FItemTransformersTogglePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -48,16 +48,16 @@ public class ItemTransformersTogglePanel extends TogglePanel<Serializable> {\n     public ItemTransformersTogglePanel(final WebMarkupContainer container, final PageReference pageRef) {\n         super(Constants.OUTER, \"itemTransformersTogglePanel\", pageRef);\n \n-        final LoadableDetachableModel<List<String>> model = new LoadableDetachableModel<List<String>>() {\n+        final LoadableDetachableModel<List<String>> model = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n                 // [!] this is required to disable changed with close button\n                 return item == null\n-                        ? List.of()\n-                        : item.getTransformers();\n+                    ? List.of()\n+                    : item.getTransformers();\n             }\n         };\n \n@@ -67,7 +67,7 @@ protected List<String> load() {\n         List<String> choices = ImplementationRestClient.list(IdRepoImplementationType.ITEM_TRANSFORMER).stream().\n                 map(EntityTO::getKey).sorted().collect(Collectors.toList());\n \n-        form.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).setRenderer(new IChoiceRenderer<String>() {\n+        form.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).setRenderer(new IChoiceRenderer<>() {\n \n             private static final long serialVersionUID = 3464376099975468136L;\n "},{"sha":"f4dda55aa0cdcca1c0d670d809935e59ed284dd7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/mapping/MappingPurposePanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FMappingPurposePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FMappingPurposePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FMappingPurposePanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -44,7 +44,7 @@ public MappingPurposePanel(final String componentId, final IModel<MappingPurpose\n \n         super(componentId, model);\n \n-        propagation = new AjaxLink<Void>(\"propagationPurposeLink\") {\n+        propagation = new AjaxLink<>(\"propagationPurposeLink\") {\n \n             private static final long serialVersionUID = -6957616042924610305L;\n \n@@ -56,7 +56,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n \n-        pull = new AjaxLink<Void>(\"pullPurposeLink\") {\n+        pull = new AjaxLink<>(\"pullPurposeLink\") {\n \n             private static final long serialVersionUID = -6957616042924610305L;\n \n@@ -68,7 +68,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n \n-        both = new AjaxLink<Void>(\"bothPurposeLink\") {\n+        both = new AjaxLink<>(\"bothPurposeLink\") {\n \n             private static final long serialVersionUID = -6957616042924610305L;\n \n@@ -80,7 +80,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n \n-        none = new AjaxLink<Void>(\"nonePurposeLink\") {\n+        none = new AjaxLink<>(\"nonePurposeLink\") {\n \n             private static final long serialVersionUID = -6957616042924610305L;\n "},{"sha":"3df7a768006f512b4187386d41aa696cd8cffe71","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -134,21 +134,21 @@ public static class Entitlements extends WizardStep {\n         public Entitlements(final RoleTO modelObject) {\n             setTitleModel(new ResourceModel(\"entitlements\"));\n             add(new AjaxPalettePanel.Builder<String>().build(\"entitlements\",\n-                    new PropertyModel<List<String>>(modelObject, \"entitlements\") {\n+                new PropertyModel<>(modelObject, \"entitlements\") {\n \n-                private static final long serialVersionUID = -7809699384012595307L;\n+                    private static final long serialVersionUID = -7809699384012595307L;\n \n-                @Override\n-                public List<String> getObject() {\n-                    return new ArrayList<>(modelObject.getEntitlements());\n-                }\n+                    @Override\n+                    public List<String> getObject() {\n+                        return new ArrayList<>(modelObject.getEntitlements());\n+                    }\n \n-                @Override\n-                public void setObject(final List<String> object) {\n-                    modelObject.getEntitlements().clear();\n-                    modelObject.getEntitlements().addAll(object);\n-                }\n-            }, new ListModel<>(RoleRestClient.getAllAvailableEntitlements())).\n+                    @Override\n+                    public void setObject(final List<String> object) {\n+                        modelObject.getEntitlements().clear();\n+                        modelObject.getEntitlements().addAll(object);\n+                    }\n+                }, new ListModel<>(RoleRestClient.getAllAvailableEntitlements())).\n                     hideLabel().setOutputMarkupId(true));\n         }\n     }"},{"sha":"6a08abfb8d2aba6dd2778bbb7aa77981ca3baff8","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/PreferenceManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FPreferenceManager.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -48,7 +48,7 @@ public class PreferenceManager implements Serializable {\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n-    private static final TypeReference<Map<String, String>> MAP_TYPE_REF = new TypeReference<Map<String, String>>() {\n+    private static final TypeReference<Map<String, String>> MAP_TYPE_REF = new TypeReference<>() {\n     };\n \n     private static final List<Integer> PAGINATOR_CHOICES = Arrays.asList(new Integer[] { 10, 25, 50 });"},{"sha":"a849506a5e3141aa94e8e922a91fb67a16166ab0","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -185,7 +185,7 @@ protected void init() {\n \n         // read customFormLayout.json\n         try (InputStream is = SyncopeWebApplication.class.getResourceAsStream('/' + CUSTOM_FORM_LAYOUT_FILE)) {\n-            customFormLayout = MAPPER.readValue(is, new TypeReference<UserFormLayoutInfo>() {\n+            customFormLayout = MAPPER.readValue(is, new TypeReference<>() {\n             });\n             File enduserDir = new File(props.getProperty(\"enduser.directory\"));\n             boolean existsEnduserDir = enduserDir.exists() && enduserDir.canRead() && enduserDir.isDirectory();\n@@ -195,8 +195,8 @@ protected void init() {\n                         && customFormLayoutFile.canRead()\n                         && customFormLayoutFile.isFile()) {\n                     customFormLayout = MAPPER.readValue(FileUtils.openInputStream(customFormLayoutFile),\n-                            new TypeReference<UserFormLayoutInfo>() {\n-                    });\n+                        new TypeReference<>() {\n+                        });\n                 }\n             }\n             FileAlterationObserver observer = existsEnduserDir\n@@ -217,8 +217,8 @@ public void onFileChange(final File file) {\n                         LOG.trace(\"{} has changed. Reloading form attributes customization configuration.\",\n                                 CUSTOM_FORM_LAYOUT_FILE);\n                         customFormLayout = MAPPER.readValue(FileUtils.openInputStream(file),\n-                                new TypeReference<UserFormLayoutInfo>() {\n-                        });\n+                            new TypeReference<>() {\n+                            });\n                     } catch (IOException e) {\n                         LOG.error(\"{} While reading app customization configuration.\",\n                                 CUSTOM_FORM_LAYOUT_FILE, e);\n@@ -231,8 +231,8 @@ public void onFileCreate(final File file) {\n                         LOG.trace(\"{} has been created. Loading form attributes customization configuration.\",\n                                 CUSTOM_FORM_LAYOUT_FILE);\n                         customFormLayout = MAPPER.readValue(FileUtils.openInputStream(file),\n-                                new TypeReference<UserFormLayoutInfo>() {\n-                        });\n+                            new TypeReference<>() {\n+                            });\n                     } catch (IOException e) {\n                         LOG.error(\"{} While reading app customization configuration.\",\n                                 CUSTOM_FORM_LAYOUT_FILE, e);"},{"sha":"dbd60c29f01a4db1eb515aa15f3cedfb88021635","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -165,7 +165,7 @@ protected HttpResourceStream getResourceStream() {\n \n         add(fileDownload);\n \n-        downloadLink = new AjaxLink<Void>(\"downloadLink\") {\n+        downloadLink = new AjaxLink<>(\"downloadLink\") {\n \n             private static final long serialVersionUID = -4331619903296515985L;\n \n@@ -228,7 +228,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n         });\n         uploadForm.add(fileUpload);\n \n-        resetLink = new IndicatingAjaxLink<Void>(\"resetLink\") {\n+        resetLink = new IndicatingAjaxLink<>(\"resetLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"b4dda389f56110d58fdc63ea1a71994463fafc70","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/MultiFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -75,7 +75,7 @@ protected E newModelObject() {\n         }\n \n         public MultiFieldPanel<E> build(final String id, final String name, final FieldPanel<E> panelTemplate) {\n-            return new MultiFieldPanel<E>(id, name, model) {\n+            return new MultiFieldPanel<>(id, name, model) {\n \n                 private static final long serialVersionUID = 6600411297376841521L;\n "},{"sha":"98f65cfe7c5ce89d683bc872fdebe8f2f65841a4","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/BasePage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FBasePage.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -101,14 +101,14 @@ public BasePage(final PageParameters parameters, final String name) {\n         addPageTitle(name);\n \n         // collapse\n-        collapse = new AjaxLink<Void>(\"collapse\") {\n+        collapse = new AjaxLink<>(\"collapse\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 Session.get().setAttribute(Constants.MENU_COLLAPSE,\n-                        Session.get().getAttribute(Constants.MENU_COLLAPSE) == null\n+                    Session.get().getAttribute(Constants.MENU_COLLAPSE) == null\n                         ? true\n                         : !(Boolean) Session.get().getAttribute(Constants.MENU_COLLAPSE));\n             }"},{"sha":"e2398f05dfe515d07fd00895b2807ab0ffe1b6ac","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/EditSecurityQuestion.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditSecurityQuestion.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditSecurityQuestion.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FEditSecurityQuestion.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -82,14 +82,14 @@ public EditSecurityQuestion(final PageParameters parameters) {\n         List<SecurityQuestionTO> securityQuestions = SecurityQuestionRestClient.list();\n         securityQuestion.setChoices(securityQuestions.stream().\n                 map(SecurityQuestionTO::getKey).collect(Collectors.toList()));\n-        securityQuestion.setChoiceRenderer(new IChoiceRenderer<String>() {\n+        securityQuestion.setChoiceRenderer(new IChoiceRenderer<>() {\n \n             private static final long serialVersionUID = -4421146737845000747L;\n \n             @Override\n             public Object getDisplayValue(final String value) {\n                 return securityQuestions.stream().filter(sq -> value.equals(sq.getKey())).\n-                        map(SecurityQuestionTO::getContent).findFirst().orElse(null);\n+                    map(SecurityQuestionTO::getContent).findFirst().orElse(null);\n             }\n \n             @Override"},{"sha":"6c99b55f1246b180f82bd7d2ece8dff8a2123ec7","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/pages/SelfPasswordReset.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfPasswordReset.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -181,7 +181,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             notLoading.setVisible(isSecurityQuestionEnabled);\n             add(notLoading);\n \n-            AjaxLink<Void> reloadLink = new AjaxLink<Void>(\"reloadLink\") {\n+            AjaxLink<Void> reloadLink = new AjaxLink<>(\"reloadLink\") {\n \n                 private static final long serialVersionUID = -817438685948164787L;\n "},{"sha":"240f7f737354b074f4eef9ef9d880b0a2ea0b4e5","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/ChangePasswordPanel.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FChangePasswordPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FChangePasswordPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FChangePasswordPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -63,7 +63,7 @@ public abstract class ChangePasswordPanel extends Panel {\n \n     public ChangePasswordPanel(final String id, final NotificationPanel notificationPanel) {\n         super(id);\n-        form = new StatelessForm<Void>(\"changePassword\") {\n+        form = new StatelessForm<>(\"changePassword\") {\n \n             private static final long serialVersionUID = 418292023846536149L;\n \n@@ -75,24 +75,24 @@ protected void appendDefaultButtonField() {\n \n                 // div that is not visible (but not display:none either)\n                 buffer.append(String.format(\n-                        \"<div style=\\\"width:0px;height:0px;position:absolute;\"\n+                    \"<div style=\\\"width:0px;height:0px;position:absolute;\"\n                         + \"left:-100px;top:-100px;overflow:hidden\\\" class=\\\"%s\\\">\",\n-                        cssClass));\n+                    cssClass));\n \n                 // add an empty textfield (otherwise IE doesn't work)\n                 buffer.append(\"<input title=\\\"text_hidden\\\" \"\n-                        + \"aria-label=\\\"text_hidden\\\" type=\\\"text\\\" \"\n-                        + \"tabindex=\\\"-1\\\" autocomplete=\\\"off\\\"/>\");\n+                    + \"aria-label=\\\"text_hidden\\\" type=\\\"text\\\" \"\n+                    + \"tabindex=\\\"-1\\\" autocomplete=\\\"off\\\"/>\");\n \n                 // add the submitting component\n                 final Component submittingComponent = (Component) getDefaultButton();\n                 buffer.append(\"<input title=\\\"submit_hidden\\\" aria-label=\\\"submit_hidden\\\" \"\n-                        + \"type=\\\"submit\\\" tabindex=\\\"-1\\\" name=\\\"\");\n+                    + \"type=\\\"submit\\\" tabindex=\\\"-1\\\" name=\\\"\");\n                 buffer.append(getDefaultButton().getInputName());\n                 buffer.append(\"\\\" onclick=\\\" var b=document.getElementById('\");\n                 buffer.append(submittingComponent.getMarkupId());\n                 buffer.append(\n-                        \"'); if (b!=null&amp;&amp;b.onclick!=null&amp;&amp;typeof(b.onclick) != 'undefined') \"\n+                    \"'); if (b!=null&amp;&amp;b.onclick!=null&amp;&amp;typeof(b.onclick) != 'undefined') \"\n                         + \"{  var r = Wicket.bind(b.onclick, b)(); if (r != false) b.click(); } \"\n                         + \"else { b.click(); };  return false;\\\" \");\n                 buffer.append(\" />\");"},{"sha":"e393a1461d99cfc226b5a5c1dc029c43495267df","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/Sidebar.java","status":"modified","additions":28,"deletions":28,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSidebar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSidebar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2FSidebar.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -121,45 +121,45 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         }\n \n         ListView<Class<? extends BasePage>> extPages =\n-                new ListView<Class<? extends BasePage>>(\"extPages\", extPageClasses) {\n+            new ListView<>(\"extPages\", extPageClasses) {\n \n-            private static final long serialVersionUID = 4949588177564901031L;\n+                private static final long serialVersionUID = 4949588177564901031L;\n \n-            @Override\n-            protected void populateItem(final ListItem<Class<? extends BasePage>> item) {\n-                WebMarkupContainer containingLI = new WebMarkupContainer(\"extPageLI\");\n-                item.add(containingLI);\n+                @Override\n+                protected void populateItem(final ListItem<Class<? extends BasePage>> item) {\n+                    WebMarkupContainer containingLI = new WebMarkupContainer(\"extPageLI\");\n+                    item.add(containingLI);\n \n-                ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n+                    ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n \n-                BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n+                    BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n \n-                link.add(new Label(\"extPageLabel\", ann.label()));\n+                    link.add(new Label(\"extPageLabel\", ann.label()));\n \n-                if (item.getModelObject().equals(pageRef.getPage().getClass())) {\n-                    link.add(new Behavior() {\n+                    if (item.getModelObject().equals(pageRef.getPage().getClass())) {\n+                        link.add(new Behavior() {\n \n-                        private static final long serialVersionUID = 1469628524240283489L;\n+                            private static final long serialVersionUID = 1469628524240283489L;\n \n-                        @Override\n-                        public void renderHead(final Component component, final IHeaderResponse response) {\n-                            response.render(OnDomReadyHeaderItem.forScript(\n+                            @Override\n+                            public void renderHead(final Component component, final IHeaderResponse response) {\n+                                response.render(OnDomReadyHeaderItem.forScript(\n                                     \"$('#extensionsLink').addClass('active')\"));\n-                        }\n+                            }\n \n-                        @Override\n-                        public void onComponentTag(final Component component, final ComponentTag tag) {\n-                            tag.append(\"class\", \"active\", \" \");\n-                        }\n-                    });\n-                }\n-                containingLI.add(link);\n+                            @Override\n+                            public void onComponentTag(final Component component, final ComponentTag tag) {\n+                                tag.append(\"class\", \"active\", \" \");\n+                            }\n+                        });\n+                    }\n+                    containingLI.add(link);\n \n-                Label extPageIcon = new Label(\"extPageIcon\");\n-                extPageIcon.add(new AttributeModifier(\"class\", \"nav-icon \" + ann.icon()));\n-                link.add(extPageIcon);\n-            }\n-        };\n+                    Label extPageIcon = new Label(\"extPageIcon\");\n+                    extPageIcon.add(new AttributeModifier(\"class\", \"nav-icon \" + ann.icon()));\n+                    link.add(extPageIcon);\n+                }\n+            };\n \n         add(extPages.setRenderBodyOnly(true).setOutputMarkupId(true));\n     }"},{"sha":"68898f19444114283669481cd5c20e20b6d2fe3d","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/any/DerAttrs.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FDerAttrs.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -61,27 +61,27 @@ public <T extends AnyTO> DerAttrs(\n         super(id, modelObject, anyTypeClasses, whichDerAttrs);\n \n         add(new DerAttrs.DerSchemas(\"derSchemas\", schemas, attrs).setOutputMarkupId(true));\n-        add(new ListView<MembershipTO>(\"membershipsDerSchemas\", membershipTOs) {\n+        add(new ListView<>(\"membershipsDerSchemas\", membershipTOs) {\n \n             private static final long serialVersionUID = 6741044372185745296L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 MembershipTO membershipTO = item.getModelObject();\n                 item.add(new Accordion(\"membershipDerSchemas\", List.of(new AbstractTab(\n-                        new StringResourceModel(\n-                                \"attributes.membership.accordion\",\n-                                DerAttrs.this,\n-                                Model.of(membershipTO))) {\n+                    new StringResourceModel(\n+                        \"attributes.membership.accordion\",\n+                        DerAttrs.this,\n+                        Model.of(membershipTO))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n                         return new DerAttrs.DerSchemas(\n-                                panelId,\n-                                membershipSchemas.get(membershipTO.getGroupKey()),\n-                                new ListModel<>(getAttrsFromTO(membershipTO)));\n+                            panelId,\n+                            membershipSchemas.get(membershipTO.getGroupKey()),\n+                            new ListModel<>(getAttrsFromTO(membershipTO)));\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -159,7 +159,7 @@ public DerSchemas(\n                 final IModel<List<Attr>> attrTOs) {\n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+            add(new ListView<>(\"schemas\", attrTOs) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -182,10 +182,10 @@ protected void populateItem(final ListItem<Attr> item) {\n                     }\n \n                     AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n-                            \"panel\",\n-                            schemas.get(attrTO.getSchema()).getLabel(SyncopeEnduserSession.get().getLocale()),\n-                            model,\n-                            false);\n+                        \"panel\",\n+                        schemas.get(attrTO.getSchema()).getLabel(SyncopeEnduserSession.get().getLocale()),\n+                        model,\n+                        false);\n                     panel.setEnabled(false);\n                     panel.setRequired(true);\n                     panel.setOutputMarkupId(true);"},{"sha":"ad9fe229d440d1a96dc82691ab75404e7943435a","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/any/Groups.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FGroups.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -108,7 +108,7 @@ protected void addGroupsPanel() {\n             groupsContainer.setVisible(false);\n         } else {\n             AjaxPalettePanel.Builder<MembershipTO> builder = new AjaxPalettePanel.Builder<MembershipTO>().\n-                    setRenderer(new IChoiceRenderer<MembershipTO>() {\n+                    setRenderer(new IChoiceRenderer<>() {\n \n                         private static final long serialVersionUID = -3086661086073628855L;\n \n@@ -124,39 +124,39 @@ public String getIdValue(final MembershipTO object, final int index) {\n \n                         @Override\n                         public MembershipTO getObject(\n-                                final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n+                            final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n \n                             return choices.getObject().stream().\n-                                    filter(object -> id.equalsIgnoreCase(object.getGroupName())).findAny().orElse(null);\n+                                filter(object -> id.equalsIgnoreCase(object.getGroupName())).findAny().orElse(null);\n                         }\n                     }).event(getEventFunction());\n \n             groupsContainer.add(builder.setAllowOrder(true).withFilter().build(\"groups\",\n-                    new ListModel<MembershipTO>() {\n+                new ListModel<>() {\n \n-                private static final long serialVersionUID = -2583290457773357445L;\n+                    private static final long serialVersionUID = -2583290457773357445L;\n \n-                @Override\n-                public List<MembershipTO> getObject() {\n-                    return Groups.this.groupsModel.getMemberships();\n-                }\n+                    @Override\n+                    public List<MembershipTO> getObject() {\n+                        return Groups.this.groupsModel.getMemberships();\n+                    }\n \n-            }, new AjaxPalettePanel.Builder.Query<MembershipTO>() {\n+                }, new AjaxPalettePanel.Builder.Query<>() {\n \n-                private static final long serialVersionUID = -7223078772249308813L;\n+                    private static final long serialVersionUID = -7223078772249308813L;\n \n-                @Override\n-                public List<MembershipTO> execute(final String filter) {\n-                    return (StringUtils.isEmpty(filter) || \"*\".equals(filter)\n+                    @Override\n+                    public List<MembershipTO> execute(final String filter) {\n+                        return (StringUtils.isEmpty(filter) || \"*\".equals(filter)\n                             ? groupsModel.getObject()\n                             : GroupRestClient.searchAssignableGroups(\n-                                    anyTO.getRealm(),\n-                                    filter,\n-                                    1, MAX_GROUP_LIST_CARDINALITY)).stream()\n+                            anyTO.getRealm(),\n+                            filter,\n+                            1, MAX_GROUP_LIST_CARDINALITY)).stream()\n                             .map(input -> new MembershipTO.Builder(input.getKey())\n-                            .groupName(input.getName()).build()).collect(Collectors.toList());\n-                }\n-            }).hideLabel().setOutputMarkupId(true));\n+                                .groupName(input.getName()).build()).collect(Collectors.toList());\n+                    }\n+                }).hideLabel().setOutputMarkupId(true));\n             // ---------------------------------\n         }\n     }"},{"sha":"5f8fa3879e587d9a88684f576439ab8825f6a77e","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/any/PlainAttrs.java","status":"modified","additions":31,"deletions":31,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FPlainAttrs.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -86,37 +86,37 @@ public PlainAttrs(\n         previousObject = modelObject.getPreviousUserTO();\n \n         add(new PlainSchemasOwn(\"plainSchemas\", schemas, attrs).setOutputMarkupId(true));\n-        add(new ListView<MembershipTO>(\"membershipsPlainSchemas\", membershipTOs) {\n+        add(new ListView<>(\"membershipsPlainSchemas\", membershipTOs) {\n \n             private static final long serialVersionUID = 6741044372185745296L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 MembershipTO membershipTO = item.getModelObject();\n                 item.add(new Accordion(\"membershipPlainSchemas\", List.of(new AbstractTab(\n-                        new StringResourceModel(\n-                                \"attributes.membership.accordion\",\n-                                PlainAttrs.this,\n-                                Model.of(membershipTO))) {\n+                    new StringResourceModel(\n+                        \"attributes.membership.accordion\",\n+                        PlainAttrs.this,\n+                        Model.of(membershipTO))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n                         return new PlainSchemasMemberships(\n-                                panelId,\n-                                membershipTO.getGroupName(),\n-                                membershipSchemas.get(membershipTO.getGroupKey()),\n-                                new LoadableDetachableModel<Attributable>() { // SYNCOPE-1439\n+                            panelId,\n+                            membershipTO.getGroupName(),\n+                            membershipSchemas.get(membershipTO.getGroupKey()),\n+                            new LoadableDetachableModel<>() { // SYNCOPE-1439\n \n-                            private static final long serialVersionUID = 526768546610546553L;\n+                                private static final long serialVersionUID = 526768546610546553L;\n \n-                            @Override\n-                            protected Attributable load() {\n-                                return membershipTO;\n-                            }\n+                                @Override\n+                                protected Attributable load() {\n+                                    return membershipTO;\n+                                }\n \n-                        });\n+                            });\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -349,15 +349,15 @@ public PlainSchemasMemberships(\n \n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\",\n-                    new ListModel<Attr>(new ArrayList<Attr>(\n-                            attributableTO.getObject().getPlainAttrs().stream().sorted(attrComparator).\n-                                    collect(Collectors.toList())))) {\n+            add(new ListView<>(\"schemas\",\n+                new ListModel<>(new ArrayList<>(\n+                    attributableTO.getObject().getPlainAttrs().stream().sorted(attrComparator).\n+                        collect(Collectors.toList())))) {\n \n                 private static final long serialVersionUID = 5306618783986001008L;\n \n                 @Override\n-                @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+                @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n                 protected void populateItem(final ListItem<Attr> item) {\n                     Attr attrTO = item.getModelObject();\n                     PlainSchemaTO schema = schemas.get(attrTO.getSchema());\n@@ -371,14 +371,14 @@ protected void populateItem(final ListItem<Attr> item) {\n                     AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n                     if (schemas.get(attrTO.getSchema()).isMultivalue()) {\n                         panel = new MultiFieldPanel.Builder<>(\n-                                new PropertyModel<>(\n-                                        attributableTO.getObject().getPlainAttr(attrTO.getSchema()), \"values\"))\n-                                .build(\"panel\", attrTO.getSchema(), FieldPanel.class.cast(panel));\n+                            new PropertyModel<>(\n+                                attributableTO.getObject().getPlainAttr(attrTO.getSchema()), \"values\"))\n+                            .build(\"panel\", attrTO.getSchema(), FieldPanel.class.cast(panel));\n                         // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n                         ((MultiFieldPanel) panel).setReadOnly(schema == null ? false : schema.isReadonly());\n                     } else {\n                         FieldPanel.class.cast(panel).setNewModel(attrTO.getValues()).\n-                                setReadOnly(schema == null ? false : schema.isReadonly());\n+                            setReadOnly(schema == null ? false : schema.isReadonly());\n                     }\n \n                     item.add(panel);\n@@ -398,12 +398,12 @@ public PlainSchemasOwn(\n \n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+            add(new ListView<>(\"schemas\", attrTOs) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n                 @Override\n-                @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+                @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n                 protected void populateItem(final ListItem<Attr> item) {\n                     Attr attrTO = item.getModelObject();\n                     PlainSchemaTO schema = schemas.get(attrTO.getSchema());\n@@ -417,15 +417,15 @@ protected void populateItem(final ListItem<Attr> item) {\n                     AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n                     if (schemas.get(attrTO.getSchema()).isMultivalue()) {\n                         panel = new MultiFieldPanel.Builder<>(\n-                                new PropertyModel<>(attrTO, \"values\")).build(\n-                                \"panel\",\n-                                attrTO.getSchema(),\n-                                FieldPanel.class.cast(panel));\n+                            new PropertyModel<>(attrTO, \"values\")).build(\n+                            \"panel\",\n+                            attrTO.getSchema(),\n+                            FieldPanel.class.cast(panel));\n                         // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n                         ((MultiFieldPanel) panel).setReadOnly(schema == null ? false : schema.isReadonly());\n                     } else {\n                         FieldPanel.class.cast(panel).setNewModel(attrTO.getValues()).\n-                                setReadOnly(schema == null ? false : schema.isReadonly());\n+                            setReadOnly(schema == null ? false : schema.isReadonly());\n                     }\n                     item.add(panel);\n                 }"},{"sha":"1897edb42c1ed1891b082ea69d78097963ff6d9d","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/any/Resources.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FResources.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -56,21 +56,21 @@ public <T extends AnyTO> Resources(final String id, final AnyWrapper<T> modelObj\n         this.available = new ListModel<>(List.of());\n \n         add(new AjaxPalettePanel.Builder<String>().build(\"resources\",\n-                new PropertyModel<List<String>>(entityTO, \"resources\") {\n+            new PropertyModel<>(entityTO, \"resources\") {\n \n-            private static final long serialVersionUID = 3799387950428254072L;\n+                private static final long serialVersionUID = 3799387950428254072L;\n \n-            @Override\n-            public List<String> getObject() {\n-                return new ArrayList<>(entityTO.getResources());\n-            }\n+                @Override\n+                public List<String> getObject() {\n+                    return new ArrayList<>(entityTO.getResources());\n+                }\n \n-            @Override\n-            public void setObject(final List<String> object) {\n-                entityTO.getResources().clear();\n-                entityTO.getResources().addAll(object);\n-            }\n-        }, available).hideLabel().setOutputMarkupId(true));\n+                @Override\n+                public void setObject(final List<String> object) {\n+                    entityTO.getResources().clear();\n+                    entityTO.getResources().addAll(object);\n+                }\n+            }, available).hideLabel().setOutputMarkupId(true));\n     }\n \n     @Override"},{"sha":"3f08b36b4360f1c7231d5b8a87d92506028d01ea","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/panels/any/VirAttrs.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpanels%2Fany%2FVirAttrs.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -61,28 +61,28 @@ public <T extends AnyTO> VirAttrs(\n         super(id, modelObject, anyTypeClasses, whichVirAttrs);\n \n         add(new VirAttrs.VirSchemas(\"virSchemas\", schemas, attrs).setOutputMarkupId(true));\n-        add(new ListView<MembershipTO>(\"membershipsVirSchemas\", membershipTOs) {\n+        add(new ListView<>(\"membershipsVirSchemas\", membershipTOs) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n                 MembershipTO membershipTO = item.getModelObject();\n                 item.add(new Accordion(\"membershipVirSchemas\", List.of(\n-                        new AbstractTab(new StringResourceModel(\n-                                \"attributes.membership.accordion\", VirAttrs.this, Model.of(membershipTO))) {\n+                    new AbstractTab(new StringResourceModel(\n+                        \"attributes.membership.accordion\", VirAttrs.this, Model.of(membershipTO))) {\n \n-                    private static final long serialVersionUID = 1037272333056449378L;\n+                        private static final long serialVersionUID = 1037272333056449378L;\n \n-                    @Override\n-                    public WebMarkupContainer getPanel(final String panelId) {\n-                        return new VirAttrs.VirSchemas(\n+                        @Override\n+                        public WebMarkupContainer getPanel(final String panelId) {\n+                            return new VirAttrs.VirSchemas(\n                                 panelId,\n                                 membershipTO.getGroupName(),\n                                 membershipSchemas.get(membershipTO.getGroupKey()),\n                                 new ListModel<>(getAttrsFromTO(membershipTO)));\n-                    }\n-                }), Model.of(-1)).setOutputMarkupId(true));\n+                        }\n+                    }), Model.of(-1)).setOutputMarkupId(true));\n             }\n         }).setOutputMarkupId(true);\n     }\n@@ -168,7 +168,7 @@ public VirSchemas(\n                 final IModel<List<Attr>> attrTOs) {\n             super(id);\n \n-            add(new ListView<Attr>(\"schemas\", attrTOs) {\n+            add(new ListView<>(\"schemas\", attrTOs) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -179,24 +179,24 @@ protected void populateItem(final ListItem<Attr> item) {\n \n                     // set default values, if any\n                     if (attrTO.getValues().stream().filter(StringUtils::isNotBlank)\n-                            .collect(Collectors.toList()).isEmpty()) {\n+                        .collect(Collectors.toList()).isEmpty()) {\n                         attrTO.getValues().clear();\n                         attrTO.getValues().addAll(getDefaultValues(attrTO.getSchema(), groupName));\n                     }\n \n                     VirSchemaTO virSchemaTO = schemas.get(attrTO.getSchema());\n \n                     AbstractFieldPanel<?> panel = new AjaxTextFieldPanel(\n-                            \"panel\",\n-                            virSchemaTO.getLabel(SyncopeEnduserSession.get().getLocale()),\n-                            new Model<>(),\n-                            false);\n+                        \"panel\",\n+                        virSchemaTO.getLabel(SyncopeEnduserSession.get().getLocale()),\n+                        new Model<>(),\n+                        false);\n \n                     panel = new MultiFieldPanel.Builder<>(\n-                            new PropertyModel<List<String>>(attrTO, \"values\")).build(\n-                            \"panel\",\n-                            virSchemaTO.getLabel(SyncopeEnduserSession.get().getLocale()),\n-                            AjaxTextFieldPanel.class.cast(panel));\n+                        new PropertyModel<List<String>>(attrTO, \"values\")).build(\n+                        \"panel\",\n+                        virSchemaTO.getLabel(SyncopeEnduserSession.get().getLocale()),\n+                        AjaxTextFieldPanel.class.cast(panel));\n                     panel.setEnabled(!virSchemaTO.isReadonly() && !renderAsReadonly(attrTO.getSchema(), groupName));\n \n                     item.add(panel);"},{"sha":"79947391435083a3107cc82c2a73adf20a849b6a","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/GroupRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FGroupRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -46,15 +46,15 @@ protected Class<? extends AnyService<GroupTO>> getAnyServiceClass() {\n \n     public static ProvisioningResult<GroupTO> create(final GroupCR groupTO) {\n         Response response = getService(GroupService.class).create(groupTO);\n-        return response.readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     public ProvisioningResult<GroupTO> update(final String etag, final GroupUR groupPatch) {\n         ProvisioningResult<GroupTO> result;\n         synchronized (this) {\n             result = getService(etag, GroupService.class).update(groupPatch).\n-                    readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+                    readEntity(new GenericType<>() {\n                     });\n             resetClient(getAnyServiceClass());\n         }"},{"sha":"e4ffa761d2bff57c4697d7061a0fab559c5fc079","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/rest/UserSelfRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserSelfRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -40,16 +40,16 @@ public static void requestPasswordReset(final String username, final String secu\n     public ProvisioningResult<UserTO> create(final UserCR createReq) {\n         ProvisioningResult<UserTO> result;\n         result = getService(UserSelfService.class).create(createReq).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n+            new GenericType<>() {\n+            });\n         return result;\n     }\n \n     public ProvisioningResult<UserTO> update(final String etag, final UserUR userPatch) {\n         ProvisioningResult<UserTO> result;\n         synchronized (this) {\n             result = getService(etag, UserSelfService.class).update(userPatch).\n-                    readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                    readEntity(new GenericType<>() {\n                     });\n             resetClient(UserSelfService.class);\n         }"},{"sha":"901c38d308be36068ed351b1ce10704f31b13b9f","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/RestClientExceptionMapper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -94,7 +94,7 @@ private static SyncopeClientCompositeException checkSyncopeClientCompositeExcept\n         }\n         if (errors == null) {\n             try {\n-                errors = response.readEntity(new GenericType<List<ErrorTO>>() {\n+                errors = response.readEntity(new GenericType<>() {\n                 });\n             } catch (Exception e) {\n                 LOG.debug(\"Could not read {} list, attempting to read headers...\", ErrorTO.class.getName(), e);"},{"sha":"e1d2a4c8b9fbcfa37d5ade6599655adde727908f","filename":"client/idrepo/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -369,12 +369,12 @@ public Triple<Map<String, Set<String>>, List<String>, UserTO> self() {\n             return Triple.of(\n                     OBJECT_MAPPER.readValue(\n                             response.getHeaderString(RESTHeaders.OWNED_ENTITLEMENTS),\n-                            new TypeReference<Map<String, Set<String>>>() {\n-                    }),\n+                        new TypeReference<>() {\n+                        }),\n                     OBJECT_MAPPER.readValue(\n                             response.getHeaderString(RESTHeaders.DELEGATIONS),\n-                            new TypeReference<List<String>>() {\n-                    }),\n+                        new TypeReference<>() {\n+                        }),\n                     response.readEntity(UserTO.class));\n         } catch (IOException e) {\n             throw new IllegalStateException(e);"},{"sha":"06520dffc3eb8f010a481fd7d0fd3e8f586cff0d","filename":"common/idm/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ReconQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FReconQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FReconQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidm%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FReconQuery.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -55,7 +55,7 @@ public Builder fiql(final String fiql) {\n \n         public Builder moreAttrsToGet(final String... moreAttrsToGet) {\n             if (moreAttrsToGet != null) {\n-                Set<String> matg = Optional.ofNullable(instance.getMoreAttrsToGet()).orElseGet(() -> new HashSet<>());\n+                Set<String> matg = Optional.ofNullable(instance.getMoreAttrsToGet()).orElseGet(HashSet::new);\n                 matg.addAll(Stream.of(moreAttrsToGet).collect(Collectors.toSet()));\n                 instance.setMoreAttrsToGet(matg);\n             }\n@@ -64,7 +64,7 @@ public Builder moreAttrsToGet(final String... moreAttrsToGet) {\n \n         public Builder moreAttrsToGet(final Collection<String> moreAttrsToGet) {\n             if (moreAttrsToGet != null) {\n-                Set<String> matg = Optional.ofNullable(instance.getMoreAttrsToGet()).orElseGet(() -> new HashSet<>());\n+                Set<String> matg = Optional.ofNullable(instance.getMoreAttrsToGet()).orElseGet(HashSet::new);\n                 matg.addAll(moreAttrsToGet);\n                 instance.setMoreAttrsToGet(matg);\n             }"},{"sha":"affa39c01af161b3bc3ca53553bfa1b0181cad02","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/collections/CircularFifoQueue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fcollections%2FCircularFifoQueue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fcollections%2FCircularFifoQueue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fcollections%2FCircularFifoQueue.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -361,7 +361,7 @@ private int decrement(final int index) {\n      */\n     @Override\n     public Iterator<E> iterator() {\n-        return new Iterator<E>() {\n+        return new Iterator<>() {\n \n             private int index = start;\n "},{"sha":"7f36d562d7496534b4b8758c2d56dcc4b5c5f489","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/search/AbstractFiqlSearchConditionBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAbstractFiqlSearchConditionBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -35,7 +35,7 @@\n \n     private static final long serialVersionUID = 9043884238032703381L;\n \n-    public static final Map<String, String> CONTEXTUAL_PROPERTIES = new HashMap<String, String>() {\n+    public static final Map<String, String> CONTEXTUAL_PROPERTIES = new HashMap<>() {\n \n         private static final long serialVersionUID = 3109256773218160485L;\n "},{"sha":"16757262808822acda01e6eb58b1bd0e5a73613b","filename":"common/idrepo/lib/src/test/java/org/apache/syncope/common/lib/SerializationTest.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSerializationTest.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -55,8 +55,8 @@ public void emptyListAsRoot() throws IOException {\n         objectMapper().writeValue(writer, original);\n \n         List<ReportTO> actual = objectMapper().readValue(writer.toString(),\n-                new TypeReference<List<ReportTO>>() {\n-        });\n+            new TypeReference<>() {\n+            });\n         assertEquals(original, actual);\n     }\n \n@@ -126,8 +126,8 @@ public void pagedResult() throws IOException {\n         objectMapper().writeValue(writer, original);\n \n         PagedResult<GroupTO> actual = objectMapper().readValue(writer.toString(),\n-                new TypeReference<PagedResult<GroupTO>>() {\n-        });\n+            new TypeReference<>() {\n+            });\n         assertEquals(original, actual);\n     }\n \n@@ -151,8 +151,8 @@ public void provisioningResult() throws IOException {\n         objectMapper().writeValue(writer, original);\n \n         ProvisioningResult<GroupTO> actual = objectMapper().readValue(writer.toString(),\n-                new TypeReference<ProvisioningResult<GroupTO>>() {\n-        });\n+            new TypeReference<>() {\n+            });\n         assertEquals(original, actual);\n     }\n }"},{"sha":"3809be9b2492805f099909a5a3c5334d70e0a6f3","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ConnObjectTOQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FConnObjectTOQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FConnObjectTOQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FConnObjectTOQuery.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -63,7 +63,7 @@ public Builder fiql(final String fiql) {\n \n         public Builder moreAttrsToGet(final String... moreAttrsToGet) {\n             if (moreAttrsToGet != null) {\n-                Set<String> matg = Optional.ofNullable(instance.getMoreAttrsToGet()).orElseGet(() -> new HashSet<>());\n+                Set<String> matg = Optional.ofNullable(instance.getMoreAttrsToGet()).orElseGet(HashSet::new);\n                 matg.addAll(Stream.of(moreAttrsToGet).collect(Collectors.toSet()));\n                 instance.setMoreAttrsToGet(matg);\n             }\n@@ -72,7 +72,7 @@ public Builder moreAttrsToGet(final String... moreAttrsToGet) {\n \n         public Builder moreAttrsToGet(final Collection<String> moreAttrsToGet) {\n             if (moreAttrsToGet != null) {\n-                Set<String> matg = Optional.ofNullable(instance.getMoreAttrsToGet()).orElseGet(() -> new HashSet<>());\n+                Set<String> matg = Optional.ofNullable(instance.getMoreAttrsToGet()).orElseGet(HashSet::new);\n                 matg.addAll(moreAttrsToGet);\n                 instance.setMoreAttrsToGet(matg);\n             }"},{"sha":"e0a24792e4b70bd8c4eddd204e9a2a576effe860","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -74,7 +74,7 @@ public class RestServiceExceptionMapper implements ExceptionMapper<Exception> {\n \n     private static final String UNIQUE_MSG_KEY = \"UniqueConstraintViolation\";\n \n-    private static final Map<String, String> EXCEPTION_CODE_MAP = new HashMap<String, String>() {\n+    private static final Map<String, String> EXCEPTION_CODE_MAP = new HashMap<>() {\n \n         private static final long serialVersionUID = -7688359318035249200L;\n "},{"sha":"5118cd99181b7ee7bf36cbe634318d46dc74b302","filename":"core/idrepo/rest-cxf/src/test/java/org/apache/syncope/core/rest/cxf/service/AnyObjectServiceTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceTest.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -238,7 +238,7 @@ public void jsonList() throws IOException {\n         InputStream in = list(MediaType.APPLICATION_JSON_TYPE);\n \n         PagedResult<AnyObjectTO> list = new SyncopeObjectMapper().\n-                readValue(IOUtils.toString(in), new TypeReference<PagedResult<AnyObjectTO>>() {\n+                readValue(IOUtils.toString(in), new TypeReference<>() {\n                 });\n         checkList(list);\n     }\n@@ -248,7 +248,7 @@ public void xmlList() throws IOException {\n         InputStream in = list(MediaType.APPLICATION_XML_TYPE);\n \n         PagedResult<AnyObjectTO> list = new SyncopeXmlMapper().\n-                readValue(IOUtils.toString(in), new TypeReference<PagedResult<AnyObjectTO>>() {\n+                readValue(IOUtils.toString(in), new TypeReference<>() {\n                 });\n         checkList(list);\n     }\n@@ -258,7 +258,7 @@ public void yamlList() throws IOException {\n         InputStream in = list(RESTHeaders.APPLICATION_YAML_TYPE);\n \n         PagedResult<AnyObjectTO> list = new SyncopeYAMLMapper().\n-                readValue(IOUtils.toString(in), new TypeReference<PagedResult<AnyObjectTO>>() {\n+                readValue(IOUtils.toString(in), new TypeReference<>() {\n                 });\n         checkList(list);\n     }"},{"sha":"865f353fe370d51bfc1fe459d006209ded6e394a","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAJSONEntityListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityListener.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -48,7 +48,7 @@ protected void json2list(final JSONAttributable<A> entity, final boolean clearFi\n                     attr.getUniqueValue().setAttr(attr);\n                 }\n                 return attr;\n-            }).forEach(attr -> entity.add(attr));\n+            }).forEach(entity::add);\n         }\n     }\n "},{"sha":"a432a511ea8d0f1850ca8e2cb1f093bb3c00914a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -343,7 +343,7 @@ private void exportTable(\n \n             String outputTableName = entity.isPresent()\n                     ? entities.getKey(entity.get())\n-                    : relationTables.keySet().stream().filter(key -> tableName.equalsIgnoreCase(key)).findFirst().\n+                    : relationTables.keySet().stream().filter(tableName::equalsIgnoreCase).findFirst().\n                             orElse(tableName);\n             if (isTask(tableName)) {\n                 outputTableName = \"Task\";"},{"sha":"65a9bf4387dab96cb373a8ffe67c9449e8934574","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -338,7 +338,7 @@ public Pair<Boolean, Boolean> enforcePolicies(final User user) {\n \n                         user.getLinkedAccounts().stream().\n                                 filter(account -> account.getPassword() != null).\n-                                forEach(account -> rule.enforce(account));\n+                                forEach(rule::enforce);\n                     });\n                 }\n \n@@ -416,7 +416,7 @@ public Pair<Boolean, Boolean> enforcePolicies(final User user) {\n \n                         user.getLinkedAccounts().stream().\n                                 filter(account -> account.getUsername() != null).\n-                                forEach(account -> rule.enforce(account));\n+                                forEach(rule::enforce);\n                     });\n                 }\n "},{"sha":"fb7ac7b13f0b9ed9c77be83328500c81a7760fcd","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/auth/AbstractClientApp.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FAbstractClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FAbstractClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FAbstractClientApp.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -159,8 +159,8 @@ public void setTheme(final String theme) {\n     public List<Attr> getProperties() {\n         return properties == null\n                 ? new ArrayList<>(0)\n-                : POJOHelper.deserialize(properties, new TypeReference<List<Attr>>() {\n-                });\n+                : POJOHelper.deserialize(properties, new TypeReference<>() {\n+        });\n     }\n \n     @Override"},{"sha":"9f00afc8fe15db763319f5357b849adc29a19a66","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/auth/JPAAuthProfile.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAAuthProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAAuthProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAAuthProfile.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -76,8 +76,8 @@ public void setOwner(final String owner) {\n     public List<GoogleMfaAuthToken> getGoogleMfaAuthTokens() {\n         return googleMfaAuthTokens == null\n                 ? new ArrayList<>(0)\n-                : POJOHelper.deserialize(googleMfaAuthTokens, new TypeReference<List<GoogleMfaAuthToken>>() {\n-                });\n+                : POJOHelper.deserialize(googleMfaAuthTokens, new TypeReference<>() {\n+        });\n     }\n \n     @Override\n@@ -89,8 +89,8 @@ public void setGoogleMfaAuthTokens(final List<GoogleMfaAuthToken> tokens) {\n     public List<GoogleMfaAuthAccount> getGoogleMfaAuthAccounts() {\n         return googleMfaAuthAccounts == null\n                 ? new ArrayList<>(0)\n-                : POJOHelper.deserialize(googleMfaAuthAccounts, new TypeReference<List<GoogleMfaAuthAccount>>() {\n-                });\n+                : POJOHelper.deserialize(googleMfaAuthAccounts, new TypeReference<>() {\n+        });\n     }\n \n     @Override\n@@ -102,8 +102,8 @@ public void setGoogleMfaAuthAccounts(final List<GoogleMfaAuthAccount> accounts)\n     public List<U2FDevice> getU2FRegisteredDevices() {\n         return u2fRegisteredDevices == null\n                 ? new ArrayList<>(0)\n-                : POJOHelper.deserialize(u2fRegisteredDevices, new TypeReference<List<U2FDevice>>() {\n-                });\n+                : POJOHelper.deserialize(u2fRegisteredDevices, new TypeReference<>() {\n+        });\n     }\n \n     @Override\n@@ -115,8 +115,8 @@ public void setU2FRegisteredDevices(final List<U2FDevice> records) {\n     public List<ImpersonationAccount> getImpersonationAccounts() {\n         return impersonatedAccounts == null\n                 ? new ArrayList<>(0)\n-                : POJOHelper.deserialize(impersonatedAccounts, new TypeReference<List<ImpersonationAccount>>() {\n-                });\n+                : POJOHelper.deserialize(impersonatedAccounts, new TypeReference<>() {\n+        });\n     }\n \n     @Override\n@@ -129,8 +129,8 @@ public List<WebAuthnDeviceCredential> getWebAuthnDeviceCredentials() {\n         return webAuthnDeviceCredentials == null\n                 ? new ArrayList<>(0)\n                 : POJOHelper.deserialize(webAuthnDeviceCredentials,\n-                        new TypeReference<List<WebAuthnDeviceCredential>>() {\n-                });\n+            new TypeReference<>() {\n+            });\n     }\n \n     @Override"},{"sha":"30fc9cc93546959de8432e2f7ab821e4bab1b014","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/auth/JPAWAConfigEntry.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAWAConfigEntry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAWAConfigEntry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAWAConfigEntry.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -42,8 +42,8 @@ public class JPAWAConfigEntry extends AbstractProvidedKeyEntity implements WACon\n     public List<String> getValues() {\n         return waConfigValues == null\n                 ? List.of()\n-                : POJOHelper.deserialize(waConfigValues, new TypeReference<List<String>>() {\n-                });\n+                : POJOHelper.deserialize(waConfigValues, new TypeReference<>() {\n+        });\n     }\n \n     @Override"},{"sha":"5125963a9cc894eb0b2bb0d0eef0c9b0c9cccacc","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/jexl/JexlUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -65,7 +65,7 @@ public final class JexlUtils {\n     private static final String[] IGNORE_FIELDS = { \"password\", \"clearPassword\", \"serialVersionUID\", \"class\" };\n \n     private static final Map<Class<?>, Set<Pair<PropertyDescriptor, Field>>> FIELD_CACHE =\n-            Collections.synchronizedMap(new HashMap<Class<?>, Set<Pair<PropertyDescriptor, Field>>>());\n+            Collections.synchronizedMap(new HashMap<>());\n \n     private static JexlEngine JEXL_ENGINE;\n "},{"sha":"bec14a00541ed75110a06f75a6bb284f9e89915c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -50,6 +50,7 @@\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n import org.apache.syncope.core.persistence.api.dao.SecurityQuestionDAO;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.persistence.api.entity.user.SecurityQuestion;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n@@ -367,7 +368,7 @@ public void create(final User user, final UserCR userCR) {\n     private boolean isPasswordMapped(final ExternalResource resource) {\n         return resource.getProvision(anyTypeDAO.findUser()).\n                 filter(provision -> provision.getMapping() != null).\n-                map(provision -> provision.getMapping().getItems().stream().anyMatch(item -> item.isPassword())).\n+                map(provision -> provision.getMapping().getItems().stream().anyMatch(Item::isPassword)).\n                 orElse(false);\n     }\n "},{"sha":"355b9e0cdbaa0c1d984b163f0899a3a06aca6619","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/policy/DefaultAccountRule.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fpolicy%2FDefaultAccountRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fpolicy%2FDefaultAccountRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fpolicy%2FDefaultAccountRule.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -85,14 +85,14 @@ protected void enforce(final String username, final Set<String> wordsNotPermitte\n \n         // check prefix\n         conf.getPrefixesNotPermitted().stream().\n-                filter(prefix -> username.startsWith(prefix)).\n+                filter(username::startsWith).\n                 forEach(item -> {\n                     throw new AccountPolicyException(\"Prefix not permitted\");\n                 });\n \n         // check suffix\n         conf.getSuffixesNotPermitted().stream().\n-                filter(suffix -> username.endsWith(suffix)).\n+                filter(username::endsWith).\n                 forEach(item -> {\n                     throw new AccountPolicyException(\"Suffix not permitted\");\n                 });\n@@ -104,7 +104,7 @@ public void enforce(final User user) {\n         Set<String> wordsNotPermitted = new HashSet<>(conf.getWordsNotPermitted());\n         wordsNotPermitted.addAll(\n                 conf.getSchemasNotPermitted().stream().\n-                        map(schema -> user.getPlainAttr(schema)).\n+                        map(user::getPlainAttr).\n                         filter(Optional::isPresent).\n                         map(attr -> attr.get().getValuesAsStrings()).\n                         filter(values -> !CollectionUtils.isEmpty(values)).\n@@ -124,7 +124,7 @@ public void enforce(final LinkedAccount account) {\n         Set<String> wordsNotPermitted = new HashSet<>(conf.getWordsNotPermitted());\n         wordsNotPermitted.addAll(\n                 conf.getSchemasNotPermitted().stream().\n-                        map(schema -> account.getPlainAttr(schema)).\n+                        map(account::getPlainAttr).\n                         filter(Optional::isPresent).\n                         map(attr -> attr.get().getValuesAsStrings()).\n                         filter(values -> !CollectionUtils.isEmpty(values))."},{"sha":"70cc770576f3666c13c0a506cee4cff83cf097c7","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/policy/DefaultPasswordRule.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fpolicy%2FDefaultPasswordRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fpolicy%2FDefaultPasswordRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fpolicy%2FDefaultPasswordRule.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -98,14 +98,14 @@ protected void enforce(final String clear, final String username, final Set<Stri\n \n         // check prefix\n         conf.getPrefixesNotPermitted().stream().\n-                filter(prefix -> clear.startsWith(prefix)).\n+                filter(clear::startsWith).\n                 forEach(item -> {\n                     throw new PasswordPolicyException(\"Prefix not permitted\");\n                 });\n \n         // check suffix\n         conf.getSuffixesNotPermitted().stream().\n-                filter(suffix -> clear.endsWith(suffix)).\n+                filter(clear::endsWith).\n                 forEach(item -> {\n                     throw new PasswordPolicyException(\"Suffix not permitted\");\n                 });\n@@ -182,7 +182,7 @@ public void enforce(final User user) {\n             Set<String> wordsNotPermitted = new HashSet<>(conf.getWordsNotPermitted());\n             wordsNotPermitted.addAll(\n                     conf.getSchemasNotPermitted().stream().\n-                            map(schema -> user.getPlainAttr(schema)).\n+                            map(user::getPlainAttr).\n                             filter(Optional::isPresent).\n                             map(attr -> attr.get().getValuesAsStrings()).\n                             filter(values -> !CollectionUtils.isEmpty(values)).\n@@ -198,7 +198,7 @@ public void enforce(final User user) {\n     public void enforce(final LinkedAccount account) {\n         conf.getWordsNotPermitted().addAll(\n                 conf.getSchemasNotPermitted().stream().\n-                        map(schema -> account.getPlainAttr(schema)).\n+                        map(account::getPlainAttr).\n                         filter(Optional::isPresent).\n                         map(attr -> attr.get().getValuesAsStrings()).\n                         filter(values -> !CollectionUtils.isEmpty(values)).\n@@ -219,7 +219,7 @@ public void enforce(final LinkedAccount account) {\n                 Set<String> wordsNotPermitted = new HashSet<>(conf.getWordsNotPermitted());\n                 wordsNotPermitted.addAll(\n                         conf.getSchemasNotPermitted().stream().\n-                                map(schema -> account.getPlainAttr(schema)).\n+                                map(account::getPlainAttr).\n                                 filter(Optional::isPresent).\n                                 map(attr -> attr.get().getValuesAsStrings()).\n                                 filter(values -> !CollectionUtils.isEmpty(values))."},{"sha":"5e27fa165ddf9d48533449165d2a8d3b9554c807","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SyncopeJWTSSOProvider.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSyncopeJWTSSOProvider.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -96,8 +96,8 @@ public Pair<User, Set<SyncopeGrantedAuthority>> resolve(final JWTClaimsSet jwtCl\n                 try {\n                     authorities = POJOHelper.deserialize(\n                             ENCRYPTOR.decode(new String(accessToken.getAuthorities()), CipherAlgorithm.AES),\n-                            new TypeReference<Set<SyncopeGrantedAuthority>>() {\n-                    });\n+                        new TypeReference<>() {\n+                        });\n                 } catch (Throwable t) {\n                     LOG.error(\"Could not read stored authorities\", t);\n                 }"},{"sha":"5479da1550673ab9202db71c40653b168e39f2f1","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -108,7 +108,7 @@ protected List<IColumn<CamelRouteTO, String>> getColumns() {\n     public ActionsPanel<CamelRouteTO> getActions(final IModel<CamelRouteTO> model) {\n         final ActionsPanel<CamelRouteTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<CamelRouteTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -118,7 +118,7 @@ public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n \n                 utilityModal.header(Model.of(route.getKey()));\n                 utilityModal.setContent(new XMLEditorPanel(\n-                        utilityModal, new PropertyModel<String>(route, \"content\"), filtered, pageRef) {\n+                    utilityModal, new PropertyModel<>(route, \"content\"), filtered, pageRef) {\n \n                     private static final long serialVersionUID = 5488080606102212554L;\n "},{"sha":"c6ac60c96587a0322ce22e773172d33ae20263fa","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchUtils.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n@@ -226,7 +227,7 @@ public XContentBuilder builder(final Any<?> any, final String domain) throws IOE\n \n         for (PlainAttr<?> plainAttr : any.getPlainAttrs()) {\n             List<Object> values = plainAttr.getValues().stream().\n-                    map(value -> value.getValue()).collect(Collectors.toList());\n+                    map(PlainAttrValue::getValue).collect(Collectors.toList());\n \n             if (plainAttr.getUniqueValue() != null) {\n                 values.add(plainAttr.getUniqueValue().getValue());"},{"sha":"cb5e8ec00fd1cf07adba7ad96c54fcc46ca33994","filename":"ext/flowable/client-common-ui/src/main/java/org/apache/syncope/ext/client/common/ui/panels/UserRequestFormPanel.java","status":"modified","additions":37,"deletions":37,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -61,7 +61,7 @@ public UserRequestFormPanel(final String id, final UserRequestForm form) {\n     public UserRequestFormPanel(final String id, final UserRequestForm form, final boolean showDetails) {\n         super(id);\n \n-        IModel<List<UserRequestFormProperty>> formProps = new LoadableDetachableModel<List<UserRequestFormProperty>>() {\n+        IModel<List<UserRequestFormProperty>> formProps = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 3169142472626817508L;\n \n@@ -71,12 +71,12 @@ protected List<UserRequestFormProperty> load() {\n             }\n         };\n \n-        ListView<UserRequestFormProperty> propView = new ListView<UserRequestFormProperty>(\"propView\", formProps) {\n+        ListView<UserRequestFormProperty> propView = new ListView<>(\"propView\", formProps) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n-            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+            @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n             protected void populateItem(final ListItem<UserRequestFormProperty> item) {\n                 final UserRequestFormProperty prop = item.getModelObject();\n \n@@ -92,8 +92,8 @@ protected void populateItem(final ListItem<UserRequestFormProperty> item) {\n                             @Override\n                             public String getObject() {\n                                 return StringUtils.isBlank(prop.getValue())\n-                                        ? null\n-                                        : prop.getValue().equals(\"true\") ? \"Yes\" : \"No\";\n+                                    ? null\n+                                    : prop.getValue().equals(\"true\") ? \"Yes\" : \"No\";\n                             }\n \n                             @Override\n@@ -106,16 +106,16 @@ public void setObject(final String object) {\n \n                     case Date:\n                         FastDateFormat formatter = FastDateFormat.getInstance(prop.getDatePattern());\n-                        field = new AjaxDateTimeFieldPanel(\"value\", label, new PropertyModel<Date>(prop, \"value\") {\n+                        field = new AjaxDateTimeFieldPanel(\"value\", label, new PropertyModel<>(prop, \"value\") {\n \n                             private static final long serialVersionUID = -3743432456095828573L;\n \n                             @Override\n                             public Date getObject() {\n                                 try {\n                                     return StringUtils.isBlank(prop.getValue())\n-                                            ? null\n-                                            : formatter.parse(prop.getValue());\n+                                        ? null\n+                                        : formatter.parse(prop.getValue());\n                                 } catch (ParseException e) {\n                                     LOG.error(\"Unparsable date: {}\", prop.getValue(), e);\n                                     return null;\n@@ -132,47 +132,47 @@ public void setObject(final Date object) {\n \n                     case Enum:\n                         field = new AjaxDropDownChoicePanel(\n-                                \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n-                                setChoiceRenderer(new MapChoiceRenderer(prop.getEnumValues().stream().\n-                                        collect(Collectors.toMap(\n-                                                UserRequestFormPropertyValue::getKey,\n-                                                UserRequestFormPropertyValue::getValue)))).\n-                                setChoices(prop.getEnumValues().stream().\n-                                        map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n+                            \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n+                            setChoiceRenderer(new MapChoiceRenderer(prop.getEnumValues().stream().\n+                                collect(Collectors.toMap(\n+                                    UserRequestFormPropertyValue::getKey,\n+                                    UserRequestFormPropertyValue::getValue)))).\n+                            setChoices(prop.getEnumValues().stream().\n+                                map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n                         break;\n \n                     case Dropdown:\n                         field = new AjaxDropDownChoicePanel(\n-                                \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n-                                setChoiceRenderer(new MapChoiceRenderer(prop.getDropdownValues().stream().\n-                                        collect(Collectors.toMap(\n-                                                UserRequestFormPropertyValue::getKey,\n-                                                UserRequestFormPropertyValue::getValue)))).\n-                                setChoices(prop.getDropdownValues().stream().\n-                                        map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n+                            \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n+                            setChoiceRenderer(new MapChoiceRenderer(prop.getDropdownValues().stream().\n+                                collect(Collectors.toMap(\n+                                    UserRequestFormPropertyValue::getKey,\n+                                    UserRequestFormPropertyValue::getValue)))).\n+                            setChoices(prop.getDropdownValues().stream().\n+                                map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n                         break;\n \n                     case Long:\n                         field = new AjaxSpinnerFieldPanel.Builder<Long>().build(\n-                                \"value\",\n-                                label,\n-                                Long.class,\n-                                new PropertyModel<Long>(prop, \"value\") {\n+                            \"value\",\n+                            label,\n+                            Long.class,\n+                            new PropertyModel<>(prop, \"value\") {\n \n-                            private static final long serialVersionUID = -7688359318035249200L;\n+                                private static final long serialVersionUID = -7688359318035249200L;\n \n-                            @Override\n-                            public Long getObject() {\n-                                return StringUtils.isBlank(prop.getValue())\n+                                @Override\n+                                public Long getObject() {\n+                                    return StringUtils.isBlank(prop.getValue())\n                                         ? null\n                                         : NumberUtils.toLong(prop.getValue());\n-                            }\n+                                }\n \n-                            @Override\n-                            public void setObject(final Long object) {\n-                                prop.setValue(String.valueOf(object));\n-                            }\n-                        });\n+                                @Override\n+                                public void setObject(final Long object) {\n+                                    prop.setValue(String.valueOf(object));\n+                                }\n+                            });\n                         break;\n \n                     case Password:\n@@ -194,7 +194,7 @@ public void setObject(final Long object) {\n             }\n         };\n \n-        AjaxLink<String> userDetails = new AjaxLink<String>(\"userDetails\") {\n+        AjaxLink<String> userDetails = new AjaxLink<>(\"userDetails\") {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n "},{"sha":"e1a2d61dd21fa84865f00ac7fa68cc7000963fd0","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/BpmnProcessDirectoryPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBpmnProcessDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBpmnProcessDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBpmnProcessDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -114,7 +114,7 @@ protected Future<Pair<Serializable, Serializable>> execute(\n         }, false);\n         NewBpmnProcess newBpmnProcess = new NewBpmnProcess(\"newBpmnProcess\", container, pageRef);\n         addInnerObject(newBpmnProcess);\n-        AjaxLink<Void> newBpmnProcessLink = new AjaxLink<Void>(\"add\") {\n+        AjaxLink<Void> newBpmnProcessLink = new AjaxLink<>(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -165,7 +165,7 @@ protected List<IColumn<BpmnProcess, String>> getColumns() {\n     public ActionsPanel<BpmnProcess> getActions(final IModel<BpmnProcess> model) {\n         final ActionsPanel<BpmnProcess> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<BpmnProcess>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -184018732772021627L;\n \n@@ -174,7 +174,7 @@ public void onClick(final AjaxRequestTarget target, final BpmnProcess ignore) {\n                 final IModel<String> wfDefinition = new Model<>();\n                 try {\n                     wfDefinition.setObject(IOUtils.toString(BpmnProcessRestClient.getDefinition(\n-                            MediaType.APPLICATION_XML_TYPE, model.getObject().getKey())));\n+                        MediaType.APPLICATION_XML_TYPE, model.getObject().getKey())));\n                 } catch (IOException e) {\n                     LOG.error(\"Could not get workflow definition\", e);\n                 }\n@@ -189,7 +189,7 @@ public void onSubmit(final AjaxRequestTarget target) {\n                         if (StringUtils.isNotBlank(wfDefinition.getObject())) {\n                             try {\n                                 BpmnProcessRestClient.setDefinition(MediaType.APPLICATION_XML_TYPE,\n-                                        model.getObject().getKey(), wfDefinition.getObject());\n+                                    model.getObject().getKey(), wfDefinition.getObject());\n                                 SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n \n                                 target.add(container);\n@@ -207,21 +207,21 @@ public void onSubmit(final AjaxRequestTarget target) {\n             }\n         }, ActionLink.ActionType.EDIT, FlowableEntitlement.BPMN_PROCESS_SET);\n \n-        panel.add(new ActionLink<BpmnProcess>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 3109256773218160485L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final BpmnProcess ignore) {\n                 modal.header(Model.of(model.getObject().getKey()));\n                 modal.setContent(new ImageModalPanel<>(\n-                        modal, BpmnProcessRestClient.getDiagram(model.getObject().getKey()), pageRef));\n+                    modal, BpmnProcessRestClient.getDiagram(model.getObject().getKey()), pageRef));\n                 modal.show(target);\n                 target.add(modal);\n             }\n         }, ActionLink.ActionType.VIEW, FlowableEntitlement.BPMN_PROCESS_GET);\n \n-        panel.add(new ActionLink<BpmnProcess>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -184018732772021627L;\n \n@@ -245,7 +245,7 @@ public void onClick(final AjaxRequestTarget target, final BpmnProcess ignore) {\n             }\n         }, ActionLink.ActionType.EXTERNAL_EDITOR, FlowableEntitlement.BPMN_PROCESS_SET);\n \n-        panel.add(new ActionLink<BpmnProcess>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"bf2fe7c3bebd0a146ccf809dad1b6714fd3daa51","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/UserRequestDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -126,7 +126,7 @@ protected List<IColumn<UserRequest, String>> getColumns() {\n     public ActionsPanel<UserRequest> getActions(final IModel<UserRequest> model) {\n         ActionsPanel<UserRequest> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<UserRequest>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n "},{"sha":"cf67b6ffd7e8e5bac75c64e1da376b57bf866a09","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/UserRequestFormDirectoryPanel.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -67,7 +67,7 @@\n \n     private static final String PREF_USER_REQUEST_FORM_PAGINATOR_ROWS = \"userrequestform.paginator.rows\";\n \n-    private final BaseModal<UserRequestForm> manageFormModal = new BaseModal<UserRequestForm>(\"outer\") {\n+    private final BaseModal<UserRequestForm> manageFormModal = new BaseModal<>(\"outer\") {\n \n         private static final long serialVersionUID = 389935548143327858L;\n \n@@ -129,15 +129,15 @@ protected List<IColumn<UserRequestForm, String>> getColumns() {\n \n     @Override\n     protected ActionLinksTogglePanel<UserRequestForm> actionTogglePanel() {\n-        return new ActionLinksTogglePanel<UserRequestForm>(Constants.OUTER, pageRef) {\n+        return new ActionLinksTogglePanel<>(Constants.OUTER, pageRef) {\n \n             private static final long serialVersionUID = -7688359318035249200L;\n \n             @Override\n             public void updateHeader(final AjaxRequestTarget target, final Serializable object) {\n                 if (object instanceof UserRequestForm) {\n                     setHeader(target, StringUtils.abbreviate(\n-                            ((UserRequestForm) object).getUsername(), HEADER_FIRST_ABBREVIATION));\n+                        ((UserRequestForm) object).getUsername(), HEADER_FIRST_ABBREVIATION));\n                 } else {\n                     super.updateHeader(target, object);\n                 }\n@@ -149,7 +149,7 @@ public void updateHeader(final AjaxRequestTarget target, final Serializable obje\n     public ActionsPanel<UserRequestForm> getActions(final IModel<UserRequestForm> model) {\n         final ActionsPanel<UserRequestForm> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<UserRequestForm>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -167,7 +167,7 @@ public void onClick(final AjaxRequestTarget target, final UserRequestForm ignore\n \n         }, ActionLink.ActionType.CLAIM, FlowableEntitlement.USER_REQUEST_FORM_CLAIM);\n \n-        panel.add(new ActionLink<UserRequestForm>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -4496313424398213416L;\n \n@@ -187,12 +187,12 @@ public void onClick(final AjaxRequestTarget target, final UserRequestForm ignore\n             @Override\n             protected boolean statusCondition(final UserRequestForm modelObject) {\n                 return SyncopeConsoleSession.get().getSelfTO().getUsername().\n-                        equals(model.getObject().getAssignee());\n+                    equals(model.getObject().getAssignee());\n             }\n \n         }, ActionLink.ActionType.UNCLAIM, FlowableEntitlement.USER_REQUEST_FORM_UNCLAIM);\n \n-        panel.add(new ActionLink<UserRequestForm>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -201,7 +201,7 @@ public void onClick(final AjaxRequestTarget target, final UserRequestForm ignore\n                 manageFormModal.setFormModel(new CompoundPropertyModel<>(model.getObject()));\n \n                 target.add(manageFormModal.setContent(new UserRequestFormModal(manageFormModal, pageRef, model.\n-                        getObject()) {\n+                    getObject()) {\n \n                     private static final long serialVersionUID = 5546519445061007248L;\n \n@@ -225,13 +225,13 @@ public void onSubmit(final AjaxRequestTarget target) {\n             @Override\n             protected boolean statusCondition(final UserRequestForm modelObject) {\n                 return SyncopeConsoleSession.get().getSelfTO().getUsername().\n-                        equals(model.getObject().getAssignee());\n+                    equals(model.getObject().getAssignee());\n             }\n \n         }, ActionLink.ActionType.MANAGE_APPROVAL, FlowableEntitlement.USER_REQUEST_FORM_SUBMIT);\n \n         // SYNCOPE-1200 edit user while in approval state\n-        panel.add(new ActionLink<UserRequestForm>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -259,21 +259,21 @@ public void onClick(final AjaxRequestTarget target, final UserRequestForm ignore\n                 }\n \n                 AjaxWizard.EditItemActionEvent<UserTO> editItemActionEvent =\n-                        new AjaxWizard.EditItemActionEvent<>(newUserTO, target);\n+                    new AjaxWizard.EditItemActionEvent<>(newUserTO, target);\n                 editItemActionEvent.forceModalPanel(AnyLayoutUtils.newLayoutInfo(\n-                        newUserTO,\n-                        AnyTypeRestClient.read(AnyTypeKind.USER.name()).getClasses(),\n-                        AnyLayoutUtils.fetch(List.of(AnyTypeKind.USER.name())).getUser(),\n-                        pageRef).\n-                        build(BaseModal.CONTENT_ID, 0, AjaxWizard.Mode.EDIT_APPROVAL));\n+                    newUserTO,\n+                    AnyTypeRestClient.read(AnyTypeKind.USER.name()).getClasses(),\n+                    AnyLayoutUtils.fetch(List.of(AnyTypeKind.USER.name())).getUser(),\n+                    pageRef).\n+                    build(BaseModal.CONTENT_ID, 0, AjaxWizard.Mode.EDIT_APPROVAL));\n \n                 send(UserRequestFormDirectoryPanel.this, Broadcast.EXACT, editItemActionEvent);\n             }\n \n             @Override\n             protected boolean statusCondition(final UserRequestForm modelObject) {\n                 return SyncopeConsoleSession.get().getSelfTO().getUsername().\n-                        equals(model.getObject().getAssignee());\n+                    equals(model.getObject().getAssignee());\n             }\n \n         }, ActionLink.ActionType.EDIT_APPROVAL, FlowableEntitlement.USER_REQUEST_FORM_SUBMIT);"},{"sha":"429af2573b074ec4dacefa9ddc0d566348b0b3c1","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/widgets/UserRequestFormsWidget.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUserRequestFormsWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUserRequestFormsWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUserRequestFormsWidget.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -93,7 +93,7 @@ protected int getLatestAlertsSize() {\n \n     @Override\n     protected IModel<List<UserRequestForm>> getLatestAlerts() {\n-        return new ListModel<UserRequestForm>() {\n+        return new ListModel<>() {\n \n             private static final long serialVersionUID = -2583290457773357445L;\n \n@@ -102,7 +102,7 @@ public List<UserRequestForm> getObject() {\n                 List<UserRequestForm> updatedForms;\n                 if (SyncopeConsoleSession.get().owns(FlowableEntitlement.USER_REQUEST_FORM_LIST)) {\n                     updatedForms = UserRequestRestClient.listForms(\n-                            null, 1, MAX_SIZE, new SortParam<>(\"createTime\", true));\n+                        null, 1, MAX_SIZE, new SortParam<>(\"createTime\", true));\n                 } else {\n                     updatedForms = Collections.emptyList();\n                 }"},{"sha":"ae6f9d2c3cc61854b820c8810fe91a08963ebddf","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/Flowable.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FFlowable.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -70,23 +70,23 @@ public Flowable(final PageParameters parameters) {\n         container.setOutputMarkupId(true);\n \n         // list of accordions containing request form (if any) and delete button\n-        urDataView = new DataView<UserRequest>(\"userRequests\", new URDataProvider(rowsPerPage, \"bpmnProcess\")) {\n+        urDataView = new DataView<>(\"userRequests\", new URDataProvider(rowsPerPage, \"bpmnProcess\")) {\n \n             private static final long serialVersionUID = -5002600396458362774L;\n \n             @Override\n             protected void populateItem(final Item<UserRequest> item) {\n                 final UserRequest userRequest = item.getModelObject();\n                 item.add(new Accordion(\"userRequestDetails\", Collections.<ITab>singletonList(new AbstractTab(\n-                        new StringResourceModel(\"user.requests.accordion\", container, Model.of(userRequest))) {\n+                    new StringResourceModel(\"user.requests.accordion\", container, Model.of(userRequest))) {\n \n                     private static final long serialVersionUID = 1037272333056449378L;\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n                         // find the form associated to the current request, if any\n                         return new UserRequestDetails(\n-                                panelId, userRequest, container, notificationPanel, getPageReference());\n+                            panelId, userRequest, container, notificationPanel, getPageReference());\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -97,7 +97,7 @@ public WebMarkupContainer getPanel(final String panelId) {\n         container.add(urDataView);\n         container.add(new AjaxPagingNavigator(\"navigator\", urDataView));\n \n-        AjaxLink<Void> startButton = new AjaxLink<Void>(\"start\") {\n+        AjaxLink<Void> startButton = new AjaxLink<>(\"start\") {\n \n             private static final long serialVersionUID = 3669569969172391336L;\n \n@@ -109,7 +109,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     } catch (Exception e) {\n                         LOG.error(\"Unable to start bpmnProcess [{}]\", bpmnProcessModel.getObject(), e);\n                         SyncopeEnduserSession.get()\n-                                .error(String.format(\"Unable to start bpmnProcess [%s]\", e.getMessage()));\n+                            .error(String.format(\"Unable to start bpmnProcess [%s]\", e.getMessage()));\n                         notificationPanel.refresh(target);\n                     }\n                     target.add(container);"},{"sha":"316a72ffc74eda13a25189a222d69ec03f578b63","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/client/enduser/rest/UserRequestRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Frest%2FUserRequestRestClient.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -82,8 +82,8 @@ public static Optional<UserRequestForm> getForm(final String username, final Str\n \n     public static ProvisioningResult<UserTO> submitForm(final UserRequestForm form) {\n         return getService(UserRequestService.class).submitForm(form).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n+            new GenericType<>() {\n+            });\n     }\n \n     public static void startRequest(final String bpmnProcess, final String user) {"},{"sha":"c93fefd4d0da12c52dd4f9e45b8e3a9fcad1112f","filename":"ext/flowable/client-enduser/src/main/java/org/apache/syncope/ext/client/common/ui/panels/UserRequestFormPanel.java","status":"modified","additions":38,"deletions":38,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fclient%2Fcommon%2Fui%2Fpanels%2FUserRequestFormPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -65,7 +65,7 @@ public UserRequestFormPanel(final String id, final PageReference pageRef, final\n             final boolean showDetails) {\n         super(id);\n \n-        IModel<List<UserRequestFormProperty>> formProps = new LoadableDetachableModel<List<UserRequestFormProperty>>() {\n+        IModel<List<UserRequestFormProperty>> formProps = new LoadableDetachableModel<>() {\n \n             private static final long serialVersionUID = 3169142472626817508L;\n \n@@ -75,12 +75,12 @@ protected List<UserRequestFormProperty> load() {\n             }\n         };\n \n-        ListView<UserRequestFormProperty> propView = new ListView<UserRequestFormProperty>(\"propView\", formProps) {\n+        ListView<UserRequestFormProperty> propView = new ListView<>(\"propView\", formProps) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n-            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+            @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n             protected void populateItem(final ListItem<UserRequestFormProperty> item) {\n                 final UserRequestFormProperty prop = item.getModelObject();\n \n@@ -96,30 +96,30 @@ protected void populateItem(final ListItem<UserRequestFormProperty> item) {\n                             @Override\n                             public String getObject() {\n                                 return StringUtils.isBlank(prop.getValue())\n-                                        ? null\n-                                        : prop.getValue().equals(\"true\") ? \"Yes\" : \"No\";\n+                                    ? null\n+                                    : prop.getValue().equals(\"true\") ? \"Yes\" : \"No\";\n                             }\n \n                             @Override\n                             public void setObject(final String object) {\n                                 prop.setValue(String.valueOf(object.equalsIgnoreCase(\"yes\")));\n                             }\n \n-                        }, false).setChoices(Arrays.asList(new String[] { \"Yes\", \"No\" }));\n+                        }, false).setChoices(Arrays.asList(new String[]{\"Yes\", \"No\"}));\n                         break;\n \n                     case Date:\n                         FastDateFormat formatter = FastDateFormat.getInstance(prop.getDatePattern());\n-                        field = new AjaxDateTimeFieldPanel(\"value\", label, new PropertyModel<Date>(prop, \"value\") {\n+                        field = new AjaxDateTimeFieldPanel(\"value\", label, new PropertyModel<>(prop, \"value\") {\n \n                             private static final long serialVersionUID = -3743432456095828573L;\n \n                             @Override\n                             public Date getObject() {\n                                 try {\n                                     return StringUtils.isBlank(prop.getValue())\n-                                            ? null\n-                                            : formatter.parse(prop.getValue());\n+                                        ? null\n+                                        : formatter.parse(prop.getValue());\n                                 } catch (ParseException e) {\n                                     LOG.error(\"Unparsable date: {}\", prop.getValue(), e);\n                                     return null;\n@@ -136,47 +136,47 @@ public void setObject(final Date object) {\n \n                     case Enum:\n                         field = new AjaxDropDownChoicePanel(\n-                                \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n-                                setChoiceRenderer(new MapChoiceRenderer(prop.getEnumValues().stream().\n-                                        collect(Collectors.toMap(\n-                                                UserRequestFormPropertyValue::getKey,\n-                                                UserRequestFormPropertyValue::getValue)))).\n-                                setChoices(new ArrayList<>(prop.getEnumValues().stream().\n-                                        map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList())));\n+                            \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n+                            setChoiceRenderer(new MapChoiceRenderer(prop.getEnumValues().stream().\n+                                collect(Collectors.toMap(\n+                                    UserRequestFormPropertyValue::getKey,\n+                                    UserRequestFormPropertyValue::getValue)))).\n+                            setChoices(new ArrayList<>(prop.getEnumValues().stream().\n+                                map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList())));\n                         break;\n \n                     case Dropdown:\n                         field = new AjaxDropDownChoicePanel(\n-                                \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n-                                setChoiceRenderer(new MapChoiceRenderer(prop.getDropdownValues().stream().\n-                                        collect(Collectors.toMap(\n-                                                UserRequestFormPropertyValue::getKey,\n-                                                UserRequestFormPropertyValue::getValue)))).\n-                                setChoices(prop.getDropdownValues().stream().\n-                                        map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n+                            \"value\", label, new PropertyModel<String>(prop, \"value\"), false).\n+                            setChoiceRenderer(new MapChoiceRenderer(prop.getDropdownValues().stream().\n+                                collect(Collectors.toMap(\n+                                    UserRequestFormPropertyValue::getKey,\n+                                    UserRequestFormPropertyValue::getValue)))).\n+                            setChoices(prop.getDropdownValues().stream().\n+                                map(UserRequestFormPropertyValue::getKey).collect(Collectors.toList()));\n                         break;\n \n                     case Long:\n                         field = new AjaxSpinnerFieldPanel.Builder<Long>().build(\n-                                \"value\",\n-                                label,\n-                                Long.class,\n-                                new PropertyModel<Long>(prop, \"value\") {\n+                            \"value\",\n+                            label,\n+                            Long.class,\n+                            new PropertyModel<>(prop, \"value\") {\n \n-                            private static final long serialVersionUID = -7688359318035249200L;\n+                                private static final long serialVersionUID = -7688359318035249200L;\n \n-                            @Override\n-                            public Long getObject() {\n-                                return StringUtils.isBlank(prop.getValue())\n+                                @Override\n+                                public Long getObject() {\n+                                    return StringUtils.isBlank(prop.getValue())\n                                         ? null\n                                         : NumberUtils.toLong(prop.getValue());\n-                            }\n+                                }\n \n-                            @Override\n-                            public void setObject(final Long object) {\n-                                prop.setValue(String.valueOf(object));\n-                            }\n-                        });\n+                                @Override\n+                                public void setObject(final Long object) {\n+                                    prop.setValue(String.valueOf(object));\n+                                }\n+                            });\n                         break;\n \n                     case Password:\n@@ -198,7 +198,7 @@ public void setObject(final Long object) {\n             }\n         };\n \n-        AjaxLink<String> userDetails = new AjaxLink<String>(\"userDetails\") {\n+        AjaxLink<String> userDetails = new AjaxLink<>(\"userDetails\") {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n "},{"sha":"eb7e2f06f2e034b3c151ccfc640f02a1aafb1785","filename":"ext/flowable/common-lib/src/test/java/org/apache/syncope/common/lib/to/SerializationTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSerializationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSerializationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSerializationTest.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -73,8 +73,8 @@ public void userRequestForm() throws IOException {\n         objectMapper().writeValue(writer, original);\n \n         PagedResult<UserRequestForm> actual = objectMapper().readValue(writer.toString(),\n-                new TypeReference<PagedResult<UserRequestForm>>() {\n-        });\n+            new TypeReference<>() {\n+            });\n         assertEquals(original, actual);\n     }\n }"},{"sha":"2b9cd33e11f8585b0060e80ca10dc30dc43cf7af","filename":"ext/oidcc4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/AbstractOIDCSSOLoginFormPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractOIDCSSOLoginFormPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -52,7 +52,7 @@ public AbstractOIDCSSOLoginFormPanel(final String id, final BaseSession session)\n         AjaxDropDownChoicePanel<OIDCC4UIProviderTO> ops =\n                 new AjaxDropDownChoicePanel<>(\"ops\", \"OpenID Connect\", model, false);\n         ops.setChoices(available);\n-        ops.setChoiceRenderer(new IChoiceRenderer<OIDCC4UIProviderTO>() {\n+        ops.setChoiceRenderer(new IChoiceRenderer<>() {\n \n             private static final long serialVersionUID = 1814750973898916102L;\n \n@@ -68,10 +68,10 @@ public String getIdValue(final OIDCC4UIProviderTO object, final int index) {\n \n             @Override\n             public OIDCC4UIProviderTO getObject(final String id,\n-                    final IModel<? extends List<? extends OIDCC4UIProviderTO>> choices) {\n+                                                final IModel<? extends List<? extends OIDCC4UIProviderTO>> choices) {\n \n                 return choices.getObject().stream().\n-                        filter(object -> object.getName().equals(id)).findFirst().orElse(null);\n+                    filter(object -> object.getName().equals(id)).findFirst().orElse(null);\n             }\n         });\n "},{"sha":"7f71a99cec361059031c55e4eba23d694aa7f593","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -91,7 +91,7 @@ protected WizardMgtPanel<OIDCC4UIProviderTO> newInstance(final String id,\n \n         modal.size(Modal.Size.Large);\n \n-        templateModal = new BaseModal<Serializable>(\"outer\") {\n+        templateModal = new BaseModal<>(\"outer\") {\n \n             private static final long serialVersionUID = 5787433530654262016L;\n \n@@ -115,15 +115,15 @@ protected OIDCProvidersProvider dataProvider() {\n \n     @Override\n     protected ActionLinksTogglePanel<OIDCC4UIProviderTO> actionTogglePanel() {\n-        return new ActionLinksTogglePanel<OIDCC4UIProviderTO>(Constants.OUTER, pageRef) {\n+        return new ActionLinksTogglePanel<>(Constants.OUTER, pageRef) {\n \n             private static final long serialVersionUID = -7688359318035249200L;\n \n             @Override\n             public void updateHeader(final AjaxRequestTarget target, final Serializable object) {\n                 if (object instanceof OIDCC4UIProviderTO) {\n                     setHeader(target,\n-                            StringUtils.abbreviate(((OIDCC4UIProviderTO) object).getName(), HEADER_FIRST_ABBREVIATION));\n+                        StringUtils.abbreviate(((OIDCC4UIProviderTO) object).getName(), HEADER_FIRST_ABBREVIATION));\n                 } else {\n                     super.updateHeader(target, object);\n                 }\n@@ -157,20 +157,20 @@ protected Collection<ActionLink.ActionType> getBatches() {\n     public ActionsPanel<OIDCC4UIProviderTO> getActions(final IModel<OIDCC4UIProviderTO> model) {\n         final ActionsPanel<OIDCC4UIProviderTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<OIDCC4UIProviderTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final OIDCC4UIProviderTO ignore) {\n                 OIDCC4UIProviderTO object = OIDCProviderRestClient.read(model.getObject().getKey());\n                 send(OIDCProvidersDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(object, target));\n+                    new AjaxWizard.EditItemActionEvent<>(object, target));\n                 modal.header(Model.of(StringUtils.capitalize((\"Edit \" + object.getName()))));\n             }\n         }, ActionLink.ActionType.EDIT, OIDC4UIEntitlement.OP_UPDATE);\n \n-        panel.add(new ActionLink<OIDCC4UIProviderTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = 8557679125857348178L;\n \n@@ -179,10 +179,10 @@ public void onClick(final AjaxRequestTarget target, final OIDCC4UIProviderTO ign\n                 final OIDCC4UIProviderTO object = OIDCProviderRestClient.read(model.getObject().getKey());\n \n                 UserTemplateWizardBuilder builder = new UserTemplateWizardBuilder(\n-                        object.getUserTemplate(),\n-                        AnyTypeRestClient.read(AnyTypeKind.USER.name()).getClasses(),\n-                        new UserFormLayoutInfo(),\n-                        pageRef) {\n+                    object.getUserTemplate(),\n+                    AnyTypeRestClient.read(AnyTypeKind.USER.name()).getClasses(),\n+                    new UserFormLayoutInfo(),\n+                    pageRef) {\n \n                     private static final long serialVersionUID = -7978723352517770634L;\n \n@@ -195,15 +195,15 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n                     }\n                 };\n                 templateModal.header(Model.of(StringUtils.capitalize(\n-                        new StringResourceModel(\"template.title\", OIDCProvidersDirectoryPanel.this).getString())));\n+                    new StringResourceModel(\"template.title\", OIDCProvidersDirectoryPanel.this).getString())));\n                 templateModal.setContent(builder.build(BaseModal.CONTENT_ID));\n                 templateModal.show(true);\n                 target.add(templateModal);\n \n             }\n         }, ActionLink.ActionType.TEMPLATE, OIDC4UIEntitlement.OP_UPDATE);\n \n-        panel.add(new ActionLink<OIDCC4UIProviderTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -5467832321897812767L;\n \n@@ -238,9 +238,9 @@ public void onEvent(final IEvent<?> event) {\n                 newItemEvent.getTarget().ifPresent(target -> target.add(templateModal.setContent(modalPanel)));\n                 templateModal.show(true);\n             } else if (newItemEvent instanceof AjaxWizard.NewItemCancelEvent) {\n-                newItemEvent.getTarget().ifPresent(target -> templateModal.close(target));\n+                newItemEvent.getTarget().ifPresent(templateModal::close);\n             } else if (newItemEvent instanceof AjaxWizard.NewItemFinishEvent) {\n-                newItemEvent.getTarget().ifPresent(target -> templateModal.close(target));\n+                newItemEvent.getTarget().ifPresent(templateModal::close);\n             }\n         }\n     }"},{"sha":"42b82ef535d010ffa6e2caeccff123715258ee6e","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -61,14 +61,14 @@ public class OIDCProviderWizardBuilder extends AjaxWizardBuilder<OIDCC4UIProvide\n \n     private final OIDCProvidersDirectoryPanel directoryPanel;\n \n-    private final IModel<List<String>> opActions = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> opActions = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n             return ImplementationRestClient.list(OIDCClientImplementationType.OP_ACTIONS).stream().\n-                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n "},{"sha":"97c5aa39134e5d0306ccc9c33de0c27eda82a72e","filename":"ext/saml2sp4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/AbstractSAMLSSOLoginFormPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -53,7 +53,7 @@ public AbstractSAMLSSOLoginFormPanel(final String id, final BaseSession session)\n         AjaxDropDownChoicePanel<SAML2SP4UIIdPTO> idps =\n                 new AjaxDropDownChoicePanel<>(\"idps\", \"SAML 2.0\", model, false);\n         idps.setChoices(available);\n-        idps.setChoiceRenderer(new IChoiceRenderer<SAML2SP4UIIdPTO>() {\n+        idps.setChoiceRenderer(new IChoiceRenderer<>() {\n \n             private static final long serialVersionUID = 1814750973898916102L;\n \n@@ -69,10 +69,10 @@ public String getIdValue(final SAML2SP4UIIdPTO object, final int index) {\n \n             @Override\n             public SAML2SP4UIIdPTO getObject(\n-                    final String id, final IModel<? extends List<? extends SAML2SP4UIIdPTO>> choices) {\n+                final String id, final IModel<? extends List<? extends SAML2SP4UIIdPTO>> choices) {\n \n                 return choices.getObject().stream().\n-                        filter(idp -> idp.getEntityID().equals(id)).findFirst().orElse(null);\n+                    filter(idp -> idp.getEntityID().equals(id)).findFirst().orElse(null);\n             }\n         });\n         idps.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {"},{"sha":"fc0735bd35d94e9369f5c99e1817b793d2353985","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -103,7 +103,7 @@ protected WizardMgtPanel<SAML2SP4UIIdPTO> newInstance(final String id, final boo\n         setWindowClosedReloadCallback(metadataModal);\n         metadataModal.size(Modal.Size.Large);\n \n-        templateModal = new BaseModal<Serializable>(\"outer\") {\n+        templateModal = new BaseModal<>(\"outer\") {\n \n             private static final long serialVersionUID = 5787433530654262016L;\n \n@@ -121,7 +121,7 @@ protected void onConfigure() {\n \n         final ImportMetadata importMetadata = new ImportMetadata(\"importMetadata\", container, pageRef);\n         addInnerObject(importMetadata);\n-        AjaxLink<Void> importMetadataLink = new AjaxLink<Void>(\"add\") {\n+        AjaxLink<Void> importMetadataLink = new AjaxLink<>(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -140,15 +140,15 @@ protected SAML2IdPsProvider dataProvider() {\n \n     @Override\n     protected ActionLinksTogglePanel<SAML2SP4UIIdPTO> actionTogglePanel() {\n-        return new ActionLinksTogglePanel<SAML2SP4UIIdPTO>(Constants.OUTER, pageRef) {\n+        return new ActionLinksTogglePanel<>(Constants.OUTER, pageRef) {\n \n             private static final long serialVersionUID = -7688359318035249200L;\n \n             @Override\n             public void updateHeader(final AjaxRequestTarget target, final Serializable modelObject) {\n                 if (modelObject instanceof SAML2SP4UIIdPTO) {\n                     setHeader(target, StringUtils.abbreviate(\n-                            ((SAML2SP4UIIdPTO) modelObject).getName(), HEADER_FIRST_ABBREVIATION));\n+                        ((SAML2SP4UIIdPTO) modelObject).getName(), HEADER_FIRST_ABBREVIATION));\n                 } else {\n                     super.updateHeader(target, modelObject);\n                 }\n@@ -185,7 +185,7 @@ protected List<IColumn<SAML2SP4UIIdPTO, String>> getColumns() {\n     public ActionsPanel<SAML2SP4UIIdPTO> getActions(final IModel<SAML2SP4UIIdPTO> model) {\n         final ActionsPanel<SAML2SP4UIIdPTO> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<SAML2SP4UIIdPTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -7978723352517770645L;\n \n@@ -194,26 +194,26 @@ public void onClick(final AjaxRequestTarget target, final SAML2SP4UIIdPTO ignore\n                 SAML2SP4UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n                 metadataModal.header(Model.of(object.getName() + \" - Metadata\"));\n                 metadataModal.setContent(new XMLEditorPanel(\n-                        metadataModal,\n-                        Model.of(new String(Base64.getMimeDecoder().decode(object.getMetadata()))),\n-                        true,\n-                        pageRef));\n+                    metadataModal,\n+                    Model.of(new String(Base64.getMimeDecoder().decode(object.getMetadata()))),\n+                    true,\n+                    pageRef));\n                 metadataModal.show(true);\n                 target.add(metadataModal);\n             }\n         }, ActionLink.ActionType.HTML, SAML2SP4UIEntitlement.IDP_READ);\n-        panel.add(new ActionLink<SAML2SP4UIIdPTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final SAML2SP4UIIdPTO ignore) {\n                 SAML2SP4UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n                 send(SAML2IdPsDirectoryPanel.this, Broadcast.EXACT,\n-                        new AjaxWizard.EditItemActionEvent<>(object, target));\n+                    new AjaxWizard.EditItemActionEvent<>(object, target));\n             }\n         }, ActionLink.ActionType.EDIT, SAML2SP4UIEntitlement.IDP_UPDATE);\n-        panel.add(new ActionLink<SAML2SP4UIIdPTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -222,10 +222,10 @@ public void onClick(final AjaxRequestTarget target, final SAML2SP4UIIdPTO ignore\n                 final SAML2SP4UIIdPTO object = SAML2IdPsRestClient.read(model.getObject().getKey());\n \n                 UserTemplateWizardBuilder builder = new UserTemplateWizardBuilder(\n-                        object.getUserTemplate(),\n-                        AnyTypeRestClient.read(AnyTypeKind.USER.name()).getClasses(),\n-                        new UserFormLayoutInfo(),\n-                        pageRef) {\n+                    object.getUserTemplate(),\n+                    AnyTypeRestClient.read(AnyTypeKind.USER.name()).getClasses(),\n+                    new UserFormLayoutInfo(),\n+                    pageRef) {\n \n                     private static final long serialVersionUID = -7978723352517770634L;\n \n@@ -238,14 +238,14 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n                     }\n                 };\n                 templateModal.header(Model.of(StringUtils.capitalize(\n-                        new StringResourceModel(\"template.title\", SAML2IdPsDirectoryPanel.this).getString())));\n+                    new StringResourceModel(\"template.title\", SAML2IdPsDirectoryPanel.this).getString())));\n                 templateModal.setContent(builder.build(BaseModal.CONTENT_ID));\n                 templateModal.show(true);\n                 target.add(templateModal);\n \n             }\n         }, ActionLink.ActionType.TEMPLATE, SAML2SP4UIEntitlement.IDP_UPDATE);\n-        panel.add(new ActionLink<SAML2SP4UIIdPTO>() {\n+        panel.add(new ActionLink<>() {\n \n             private static final long serialVersionUID = -5467832321897812767L;\n \n@@ -281,9 +281,9 @@ public void onEvent(final IEvent<?> event) {\n                 newItemEvent.getTarget().ifPresent(target -> target.add(templateModal.setContent(modalPanel)));\n                 templateModal.show(true);\n             } else if (newItemEvent instanceof AjaxWizard.NewItemCancelEvent) {\n-                newItemEvent.getTarget().ifPresent(target -> templateModal.close(target));\n+                newItemEvent.getTarget().ifPresent(templateModal::close);\n             } else if (newItemEvent instanceof AjaxWizard.NewItemFinishEvent) {\n-                newItemEvent.getTarget().ifPresent(target -> templateModal.close(target));\n+                newItemEvent.getTarget().ifPresent(templateModal::close);\n             }\n         }\n     }"},{"sha":"6c86b8059ce6cdbd7449aa99b1b5b051f900437a","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -64,25 +64,25 @@ public class SAML2IdPWizardBuilder extends AjaxWizardBuilder<SAML2SP4UIIdPTO> {\n \n     private final SAML2IdPsDirectoryPanel directoryPanel;\n \n-    private final IModel<List<String>> idpActions = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> idpActions = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n             return ImplementationRestClient.list(SAML2SP4UIImplementationType.IDP_ACTIONS).stream().\n-                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n-    private final IModel<List<String>> requestedAuthnContextProviders = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> requestedAuthnContextProviders = new LoadableDetachableModel<>() {\n \n         private static final long serialVersionUID = 4659376149825914247L;\n \n         @Override\n         protected List<String> load() {\n             return ImplementationRestClient.list(SAML2SP4UIImplementationType.REQUESTED_AUTHN_CONTEXT_PROVIDER).\n-                    stream().map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+                stream().map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n@@ -181,7 +181,7 @@ private final class IdP extends WizardStep {\n             actions.setOutputMarkupId(true);\n             fields.add(actions);\n \n-            add(new ListView<Component>(\"fields\", fields) {\n+            add(new ListView<>(\"fields\", fields) {\n \n                 private static final long serialVersionUID = -9180479401817023838L;\n "},{"sha":"de727ec38b54d9940be3dc087e76cf219fb8b800","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/panels/SCIMConfAccordionContainer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfAccordionContainer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfAccordionContainer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfAccordionContainer.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -31,7 +31,7 @@ public class SCIMConfAccordionContainer extends Panel {\n     SCIMConfAccordionContainer(final String id, final List<AjaxTextFieldPanel> fieldPanels) {\n         super(id);\n \n-        add(new ListView<AjaxTextFieldPanel>(\"accordionContainer\", fieldPanels) {\n+        add(new ListView<>(\"accordionContainer\", fieldPanels) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n "},{"sha":"0df39fabf89defb98021be96904455812f1fd379","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/panels/SCIMConfEnterpriseUserPanel.java","status":"modified","additions":77,"deletions":77,"changes":154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfEnterpriseUserPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfEnterpriseUserPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfEnterpriseUserPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -57,97 +57,97 @@ public SCIMConfEnterpriseUserPanel(final String id, final SCIMConf scimConf) {\n \n         AjaxTextFieldPanel costCenterPanel =\n                 new AjaxTextFieldPanel(\"costCenter\", \"costCenter\",\n-                        new PropertyModel<String>(\"costCenter\", \"costCenter\") {\n+                    new PropertyModel<>(\"costCenter\", \"costCenter\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimEnterpriseUserConf.getCostCenter();\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return scimEnterpriseUserConf.getCostCenter();\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimEnterpriseUserConf.setCostCenter(object);\n-                    }\n+                        @Override\n+                        public void setObject(final String object) {\n+                            scimEnterpriseUserConf.setCostCenter(object);\n+                        }\n \n-                });\n+                    });\n         costCenterPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel departmentPanel =\n                 new AjaxTextFieldPanel(\"department\", \"department\",\n-                        new PropertyModel<String>(\"department\", \"department\") {\n+                    new PropertyModel<>(\"department\", \"department\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimEnterpriseUserConf.getDepartment();\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return scimEnterpriseUserConf.getDepartment();\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimEnterpriseUserConf.setDepartment(object);\n-                    }\n+                        @Override\n+                        public void setObject(final String object) {\n+                            scimEnterpriseUserConf.setDepartment(object);\n+                        }\n \n-                });\n+                    });\n         departmentPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel divisionPanel =\n                 new AjaxTextFieldPanel(\"division\", \"division\",\n-                        new PropertyModel<String>(\"division\", \"division\") {\n+                    new PropertyModel<>(\"division\", \"division\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimEnterpriseUserConf.getDivision();\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return scimEnterpriseUserConf.getDivision();\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimEnterpriseUserConf.setDivision(object);\n-                    }\n+                        @Override\n+                        public void setObject(final String object) {\n+                            scimEnterpriseUserConf.setDivision(object);\n+                        }\n \n-                });\n+                    });\n         divisionPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel employeeNumberPanel =\n                 new AjaxTextFieldPanel(\"employeeNumber\", \"employeeNumber\",\n-                        new PropertyModel<String>(\"employeeNumber\", \"employeeNumber\") {\n+                    new PropertyModel<>(\"employeeNumber\", \"employeeNumber\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimEnterpriseUserConf.getEmployeeNumber();\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return scimEnterpriseUserConf.getEmployeeNumber();\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimEnterpriseUserConf.setEmployeeNumber(object);\n-                    }\n+                        @Override\n+                        public void setObject(final String object) {\n+                            scimEnterpriseUserConf.setEmployeeNumber(object);\n+                        }\n \n-                });\n+                    });\n         employeeNumberPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel organizationPanel =\n                 new AjaxTextFieldPanel(\"organization\", \"organization\",\n-                        new PropertyModel<String>(\"organization\", \"organization\") {\n+                    new PropertyModel<>(\"organization\", \"organization\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimEnterpriseUserConf.getOrganization();\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return scimEnterpriseUserConf.getOrganization();\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimEnterpriseUserConf.setOrganization(object);\n-                    }\n+                        @Override\n+                        public void setObject(final String object) {\n+                            scimEnterpriseUserConf.setOrganization(object);\n+                        }\n \n-                });\n+                    });\n         organizationPanel.setChoices(plainSchemaNames);\n \n         // manager\n@@ -186,40 +186,40 @@ private SCIMConfAccordionContainer buildNameAccordionContent(final String panelI\n \n         AjaxTextFieldPanel managerKeyPanel =\n                 new AjaxTextFieldPanel(\"accordionContent\", \"manager.key\",\n-                        new PropertyModel<String>(scimEnterpriseUserConf.getManager(), \"accordionContent\") {\n+                    new PropertyModel<>(scimEnterpriseUserConf.getManager(), \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimEnterpriseUserConf.getManager().getKey();\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return scimEnterpriseUserConf.getManager().getKey();\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimEnterpriseUserConf.getManager().setKey(object);\n-                    }\n+                        @Override\n+                        public void setObject(final String object) {\n+                            scimEnterpriseUserConf.getManager().setKey(object);\n+                        }\n \n-                });\n+                    });\n         managerKeyPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel managerDisplaNamePanel =\n                 new AjaxTextFieldPanel(\"accordionContent\", \"manager.displayName\",\n-                        new PropertyModel<String>(scimEnterpriseUserConf.getManager(), \"accordionContent\") {\n+                    new PropertyModel<>(scimEnterpriseUserConf.getManager(), \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimEnterpriseUserConf.getManager().getDisplayName();\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return scimEnterpriseUserConf.getManager().getDisplayName();\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimEnterpriseUserConf.getManager().setDisplayName(object);\n-                    }\n+                        @Override\n+                        public void setObject(final String object) {\n+                            scimEnterpriseUserConf.getManager().setDisplayName(object);\n+                        }\n \n-                });\n+                    });\n         managerDisplaNamePanel.setChoices(plainSchemaNames);\n \n         panelList.add(managerKeyPanel);"},{"sha":"bea8c1e754d2d6053dfacbe05afba0e087f741f6","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/panels/SCIMConfGeneralPanel.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfGeneralPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfGeneralPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfGeneralPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -42,7 +42,7 @@ public SCIMConfGeneralPanel(final String id, final SCIMConf scimConf) {\n         SCIMGeneralConf scimGeneralConf = scimConf.getGeneralConf();\n \n         AjaxDateTimeFieldPanel creationDatePanel =\n-                new AjaxDateTimeFieldPanel(\"creationDate\", \"creationDate\", new Model<Date>() {\n+                new AjaxDateTimeFieldPanel(\"creationDate\", \"creationDate\", new Model<>() {\n \n                     private static final long serialVersionUID = 7075312408615929880L;\n \n@@ -59,7 +59,7 @@ public void setObject(final Date object) {\n         creationDatePanel.setEnabled(false);\n \n         AjaxDateTimeFieldPanel lastChangeDatePanel =\n-                new AjaxDateTimeFieldPanel(\"lastChangeDate\", \"lastChangeDate\", new Model<Date>() {\n+                new AjaxDateTimeFieldPanel(\"lastChangeDate\", \"lastChangeDate\", new Model<>() {\n \n                     private static final long serialVersionUID = 7075312408615929880L;\n \n@@ -77,85 +77,85 @@ public void setObject(final Date object) {\n \n         AjaxTextFieldPanel bulkMaxOperationsPanel =\n                 new AjaxTextFieldPanel(\"bulkMaxOperations\", \"bulkMaxOperations\",\n-                        new PropertyModel<String>(\"bulkMaxOperations\", \"bulkMaxOperations\") {\n+                    new PropertyModel<>(\"bulkMaxOperations\", \"bulkMaxOperations\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return String.valueOf(scimGeneralConf.getBulkMaxOperations());\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return String.valueOf(scimGeneralConf.getBulkMaxOperations());\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        try {\n-                            scimGeneralConf.setBulkMaxOperations(Integer.parseInt(object));\n-                        } catch (NumberFormatException e) {\n-                            LOG.error(\"Invalid value provided for 'bulkMaxOperations': {}\", object, e);\n+                        @Override\n+                        public void setObject(final String object) {\n+                            try {\n+                                scimGeneralConf.setBulkMaxOperations(Integer.parseInt(object));\n+                            } catch (NumberFormatException e) {\n+                                LOG.error(\"Invalid value provided for 'bulkMaxOperations': {}\", object, e);\n+                            }\n                         }\n-                    }\n-                });\n+                    });\n         bulkMaxOperationsPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel bulkMaxMaxPayloadSizePanel =\n                 new AjaxTextFieldPanel(\"bulkMaxMaxPayloadSize\", \"bulkMaxMaxPayloadSize\",\n-                        new PropertyModel<String>(\"bulkMaxMaxPayloadSize\", \"bulkMaxMaxPayloadSize\") {\n+                    new PropertyModel<>(\"bulkMaxMaxPayloadSize\", \"bulkMaxMaxPayloadSize\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return String.valueOf(scimGeneralConf.getBulkMaxPayloadSize());\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return String.valueOf(scimGeneralConf.getBulkMaxPayloadSize());\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        try {\n-                            scimGeneralConf.setBulkMaxPayloadSize(Integer.parseInt(object));\n-                        } catch (NumberFormatException e) {\n-                            LOG.error(\"Invalid value provided for 'bulkMaxPayloadSize': {}\", object, e);\n+                        @Override\n+                        public void setObject(final String object) {\n+                            try {\n+                                scimGeneralConf.setBulkMaxPayloadSize(Integer.parseInt(object));\n+                            } catch (NumberFormatException e) {\n+                                LOG.error(\"Invalid value provided for 'bulkMaxPayloadSize': {}\", object, e);\n+                            }\n                         }\n-                    }\n-                });\n+                    });\n         bulkMaxMaxPayloadSizePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel filterMaxResultsPanel =\n                 new AjaxTextFieldPanel(\"filterMaxResults\", \"filterMaxResults\",\n-                        new PropertyModel<String>(\"filterMaxResults\", \"filterMaxResults\") {\n+                    new PropertyModel<>(\"filterMaxResults\", \"filterMaxResults\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return String.valueOf(scimGeneralConf.getFilterMaxResults());\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return String.valueOf(scimGeneralConf.getFilterMaxResults());\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        try {\n-                            scimGeneralConf.setFilterMaxResults(Integer.parseInt(object));\n-                        } catch (NumberFormatException e) {\n-                            LOG.error(\"Invalid value provided for 'filterMaxResults': {}\", object, e);\n+                        @Override\n+                        public void setObject(final String object) {\n+                            try {\n+                                scimGeneralConf.setFilterMaxResults(Integer.parseInt(object));\n+                            } catch (NumberFormatException e) {\n+                                LOG.error(\"Invalid value provided for 'filterMaxResults': {}\", object, e);\n+                            }\n                         }\n-                    }\n-                });\n+                    });\n         filterMaxResultsPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel eTagValuePanel = new AjaxTextFieldPanel(\"eTagValue\", \"eTagValue\",\n-                new PropertyModel<String>(\"eTagValue\", \"eTagValue\") {\n+            new PropertyModel<>(\"eTagValue\", \"eTagValue\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimGeneralConf.getETagValue();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimGeneralConf.getETagValue();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                // nothing to do\n-            }\n-        });\n+                @Override\n+                public void setObject(final String object) {\n+                    // nothing to do\n+                }\n+            });\n         eTagValuePanel.setEnabled(false);\n \n         add(creationDatePanel);"},{"sha":"c1b76cbcbefe1bd14e2460a88f58b2dc12c44d62","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/panels/SCIMConfPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -61,7 +61,7 @@ public SCIMConfPanel(\n         tabbedPanel.setSelectedTab(0);\n         addInnerObject(tabbedPanel);\n \n-        AjaxLink<String> saveButton = new AjaxLink<String>(\"saveButton\") {\n+        AjaxLink<String> saveButton = new AjaxLink<>(\"saveButton\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"44060b8699cffb219a3f319c952c8e2de28fc067","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/panels/SCIMConfUserPanel.java","status":"modified","additions":253,"deletions":253,"changes":506,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfUserPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfUserPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfUserPanel.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -71,147 +71,147 @@ public SCIMConfUserPanel(final String id, final SCIMConf scimConf) {\n         settings.setCssClassName(\"custom-autocomplete-box\");\n \n         AjaxTextFieldPanel displayNamePanel = new AjaxTextFieldPanel(\"displayName\", \"displayName\",\n-                new PropertyModel<String>(\"displayName\", \"displayName\") {\n+            new PropertyModel<>(\"displayName\", \"displayName\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getDisplayName();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getDisplayName();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.setDisplayName(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.setDisplayName(object);\n+                }\n \n-        });\n+            });\n         displayNamePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel localePanel = new AjaxTextFieldPanel(\"locale\", \"locale\",\n-                new PropertyModel<String>(\"locale\", \"locale\") {\n+            new PropertyModel<>(\"locale\", \"locale\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getLocale();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getLocale();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.setLocale(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.setLocale(object);\n+                }\n \n-        });\n+            });\n         localePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel nickNamePanel = new AjaxTextFieldPanel(\"nickName\", \"nickName\",\n-                new PropertyModel<String>(\"nickName\", \"nickName\") {\n+            new PropertyModel<>(\"nickName\", \"nickName\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getNickName();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getNickName();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.setNickName(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.setNickName(object);\n+                }\n \n-        });\n+            });\n         nickNamePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel preferredLanguagePanel = new AjaxTextFieldPanel(\"preferredLanguage\", \"preferredLanguage\",\n-                new PropertyModel<String>(\"preferredLanguage\", \"preferredLanguage\") {\n+            new PropertyModel<>(\"preferredLanguage\", \"preferredLanguage\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getPreferredLanguage();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getPreferredLanguage();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.setPreferredLanguage(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.setPreferredLanguage(object);\n+                }\n \n-        });\n+            });\n         preferredLanguagePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel profileUrlPanel = new AjaxTextFieldPanel(\"profileUrl\", \"profileUrl\",\n-                new PropertyModel<String>(\"profileUrl\", \"profileUrl\") {\n+            new PropertyModel<>(\"profileUrl\", \"profileUrl\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getProfileUrl();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getProfileUrl();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.setProfileUrl(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.setProfileUrl(object);\n+                }\n \n-        });\n+            });\n         profileUrlPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel timezonePanel = new AjaxTextFieldPanel(\"timezone\", \"timezone\",\n-                new PropertyModel<String>(\"timezone\", \"timezone\") {\n+            new PropertyModel<>(\"timezone\", \"timezone\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getTimezone();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getTimezone();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.setTimezone(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.setTimezone(object);\n+                }\n \n-        });\n+            });\n         timezonePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel titlePanel = new AjaxTextFieldPanel(\"title\", \"title\",\n-                new PropertyModel<String>(\"title\", \"title\") {\n+            new PropertyModel<>(\"title\", \"title\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getTitle();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getTitle();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.setTitle(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.setTitle(object);\n+                }\n \n-        });\n+            });\n         titlePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel userTypePanel = new AjaxTextFieldPanel(\"userType\", \"userType\",\n-                new PropertyModel<String>(\"userType\", \"userType\") {\n+            new PropertyModel<>(\"userType\", \"userType\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getUserType();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getUserType();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.setUserType(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.setUserType(object);\n+                }\n \n-        });\n+            });\n         userTypePanel.setChoices(plainSchemaNames);\n \n         // name\n@@ -346,111 +346,111 @@ private SCIMConfAccordionContainer buildNameAccordionContent(final String panelI\n         final List<AjaxTextFieldPanel> panelList = new ArrayList<>();\n \n         AjaxTextFieldPanel nameFamilyNamePanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.familyName\",\n-                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+            new PropertyModel<>(scimUserConf.getName(), \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getName().getFamilyName();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getName().getFamilyName();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.getName().setFamilyName(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.getName().setFamilyName(object);\n+                }\n \n-        });\n+            });\n         nameFamilyNamePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel nameFormattedPanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.formatted\",\n-                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+            new PropertyModel<>(scimUserConf.getName(), \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getName().getFormatted();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getName().getFormatted();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.getName().setFormatted(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.getName().setFormatted(object);\n+                }\n \n-        });\n+            });\n         nameFormattedPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel nameGivenNamePanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.givenName\",\n-                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+            new PropertyModel<>(scimUserConf.getName(), \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getName().getGivenName();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getName().getGivenName();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.getName().setGivenName(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.getName().setGivenName(object);\n+                }\n \n-        });\n+            });\n         nameGivenNamePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel nameHonorificPrefixPanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.honorificPrefix\",\n-                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+            new PropertyModel<>(scimUserConf.getName(), \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getName().getHonorificPrefix();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getName().getHonorificPrefix();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.getName().setHonorificPrefix(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.getName().setHonorificPrefix(object);\n+                }\n \n-        });\n+            });\n         nameHonorificPrefixPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel nameHonorificSuffixPanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.honorificSuffix\",\n-                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+            new PropertyModel<>(scimUserConf.getName(), \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getName().getHonorificSuffix();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getName().getHonorificSuffix();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.getName().setHonorificSuffix(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.getName().setHonorificSuffix(object);\n+                }\n \n-        });\n+            });\n         nameHonorificSuffixPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel nameMiddleNamePanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.middleName\",\n-                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+            new PropertyModel<>(scimUserConf.getName(), \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return scimUserConf.getName().getMiddleName();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return scimUserConf.getName().getMiddleName();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                scimUserConf.getName().setMiddleName(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    scimUserConf.getName().setMiddleName(object);\n+                }\n \n-        });\n+            });\n         nameMiddleNamePanel.setChoices(plainSchemaNames);\n \n         panelList.add(nameFamilyNamePanel);\n@@ -472,57 +472,57 @@ private <T extends Enum<?>> SCIMConfAccordionContainer buildComplexAccordionCont\n         final String fieldName = panelId + '.' + canonicalType.name();\n \n         AjaxTextFieldPanel displayPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".display\",\n-                new PropertyModel<String>(complex, \"accordionContent\") {\n+            new PropertyModel<>(complex, \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return complex.getDisplay();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return complex.getDisplay();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                complex.setDisplay(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    complex.setDisplay(object);\n+                }\n \n-        });\n+            });\n         displayPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel valuePanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".value\",\n-                new PropertyModel<String>(complex, \"accordionContent\") {\n+            new PropertyModel<>(complex, \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return complex.getValue();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return complex.getValue();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                complex.setValue(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    complex.setValue(object);\n+                }\n \n-        });\n+            });\n         valuePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel primaryPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".primary\",\n-                new PropertyModel<String>(complex, \"accordionContent\") {\n+            new PropertyModel<>(complex, \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return String.valueOf(complex.isPrimary());\n-            }\n+                @Override\n+                public String getObject() {\n+                    return String.valueOf(complex.isPrimary());\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                complex.setPrimary(Boolean.valueOf(object));\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    complex.setPrimary(Boolean.valueOf(object));\n+                }\n \n-        });\n+            });\n         primaryPanel.setChoices(List.of(\"true\", \"false\"));\n \n         panelList.add(displayPanel);\n@@ -541,112 +541,112 @@ private SCIMConfAccordionContainer buildAddressAccordionContent(\n         final String fieldName = \"addresses.\" + canonicalType.name();\n \n         AjaxTextFieldPanel addressCountryPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".country\",\n-                new PropertyModel<String>(address, \"accordionContent\") {\n+            new PropertyModel<>(address, \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return address.getCountry();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return address.getCountry();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                address.setCountry(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    address.setCountry(object);\n+                }\n \n-        });\n+            });\n         addressCountryPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel addressFormattedPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".formatted\",\n-                new PropertyModel<String>(address, \"accordionContent\") {\n+            new PropertyModel<>(address, \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return address.getFormatted();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return address.getFormatted();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                address.setFormatted(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    address.setFormatted(object);\n+                }\n \n-        });\n+            });\n         addressFormattedPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel addressLocalityPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".locality\",\n-                new PropertyModel<String>(address, \"accordionContent\") {\n+            new PropertyModel<>(address, \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return address.getLocality();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return address.getLocality();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                address.setLocality(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    address.setLocality(object);\n+                }\n \n-        });\n+            });\n         addressLocalityPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel addressRegionPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".region\",\n-                new PropertyModel<String>(address, \"accordionContent\") {\n+            new PropertyModel<>(address, \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return address.getRegion();\n-            }\n+                @Override\n+                public String getObject() {\n+                    return address.getRegion();\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                address.setRegion(object);\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    address.setRegion(object);\n+                }\n \n-        });\n+            });\n         addressRegionPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel addressPostalCodePanel =\n                 new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".postalCode\",\n-                        new PropertyModel<String>(address, \"accordionContent\") {\n+                    new PropertyModel<>(address, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+                        private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return address.getPostalCode();\n-                    }\n+                        @Override\n+                        public String getObject() {\n+                            return address.getPostalCode();\n+                        }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        address.setPostalCode(object);\n-                    }\n+                        @Override\n+                        public void setObject(final String object) {\n+                            address.setPostalCode(object);\n+                        }\n \n-                });\n+                    });\n         addressPostalCodePanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel addressPrimaryPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".primary\",\n-                new PropertyModel<String>(address, \"accordionContent\") {\n+            new PropertyModel<>(address, \"accordionContent\") {\n \n-            private static final long serialVersionUID = -6427731218492117883L;\n+                private static final long serialVersionUID = -6427731218492117883L;\n \n-            @Override\n-            public String getObject() {\n-                return String.valueOf(address.isPrimary());\n-            }\n+                @Override\n+                public String getObject() {\n+                    return String.valueOf(address.isPrimary());\n+                }\n \n-            @Override\n-            public void setObject(final String object) {\n-                address.setPrimary(Boolean.valueOf(object));\n-            }\n+                @Override\n+                public void setObject(final String object) {\n+                    address.setPrimary(Boolean.valueOf(object));\n+                }\n \n-        });\n+            });\n         addressPrimaryPanel.setChoices(List.of(\"true\", \"false\"));\n \n         panelList.add(addressCountryPanel);"},{"sha":"d6d3e5a12ee839833fb9c86df9afb485edcc2f9e","filename":"fit/build-tools/src/main/java/org/apache/directory/server/core/normalization/NormalizationInterceptor.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fdirectory%2Fserver%2Fcore%2Fnormalization%2FNormalizationInterceptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fdirectory%2Fserver%2Fcore%2Fnormalization%2FNormalizationInterceptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fdirectory%2Fserver%2Fcore%2Fnormalization%2FNormalizationInterceptor.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -396,7 +396,7 @@ public EntryFilteringCursor search( SearchOperationContext searchContext ) throw\n         if ( filter == null )\n         {\n             LOG.warn( \"undefined filter based on undefined attributeType not evaluted at all.  Returning empty enumeration.\" );\n-            return new EntryFilteringCursorImpl( new EmptyCursor<Entry>(), searchContext, schemaManager );\n+            return new EntryFilteringCursorImpl(new EmptyCursor<>(), searchContext, schemaManager );\n         }\n \n         // Normalize the filter\n@@ -405,7 +405,7 @@ public EntryFilteringCursor search( SearchOperationContext searchContext ) throw\n         if ( filter == null )\n         {\n             LOG.warn( \"undefined filter based on undefined attributeType not evaluted at all.  Returning empty enumeration.\" );\n-            return new EntryFilteringCursorImpl( new EmptyCursor<Entry>(), searchContext, schemaManager );\n+            return new EntryFilteringCursorImpl(new EmptyCursor<>(), searchContext, schemaManager );\n         }\n \n         // We now have to remove the (ObjectClass=*) filter if it's present, and to add the scope filter"},{"sha":"48cea40111dec82185c6aa586b318c3addf211a7","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":46,"deletions":46,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -89,80 +89,80 @@ public class ITImplementationLookup implements ImplementationLookup {\n             List.of(SyncopeJWTSSOProvider.class, CustomJWTSSOProvider.class));\n \n     private static final Map<Class<? extends ReportletConf>, Class<? extends Reportlet>> REPORTLET_CLASSES =\n-            new HashMap<Class<? extends ReportletConf>, Class<? extends Reportlet>>() {\n+        new HashMap<>() {\n \n-        private static final long serialVersionUID = 3109256773218160485L;\n+            private static final long serialVersionUID = 3109256773218160485L;\n \n-        {\n-            put(AuditReportletConf.class, AuditReportlet.class);\n-            put(ReconciliationReportletConf.class, ReconciliationReportlet.class);\n-            put(GroupReportletConf.class, GroupReportlet.class);\n-            put(UserReportletConf.class, UserReportlet.class);\n-            put(StaticReportletConf.class, StaticReportlet.class);\n-        }\n-    };\n+            {\n+                put(AuditReportletConf.class, AuditReportlet.class);\n+                put(ReconciliationReportletConf.class, ReconciliationReportlet.class);\n+                put(GroupReportletConf.class, GroupReportlet.class);\n+                put(UserReportletConf.class, UserReportlet.class);\n+                put(StaticReportletConf.class, StaticReportlet.class);\n+            }\n+        };\n \n     private static final Map<Class<? extends AccountRuleConf>, Class<? extends AccountRule>> ACCOUNT_RULE_CLASSES =\n-            new HashMap<Class<? extends AccountRuleConf>, Class<? extends AccountRule>>() {\n+        new HashMap<>() {\n \n-        private static final long serialVersionUID = 3109256773218160485L;\n+            private static final long serialVersionUID = 3109256773218160485L;\n \n-        {\n-            put(TestAccountRuleConf.class, TestAccountRule.class);\n-            put(DefaultAccountRuleConf.class, DefaultAccountRule.class);\n-        }\n-    };\n+            {\n+                put(TestAccountRuleConf.class, TestAccountRule.class);\n+                put(DefaultAccountRuleConf.class, DefaultAccountRule.class);\n+            }\n+        };\n \n     private static final Map<Class<? extends PasswordRuleConf>, Class<? extends PasswordRule>> PASSWORD_RULE_CLASSES =\n-            new HashMap<Class<? extends PasswordRuleConf>, Class<? extends PasswordRule>>() {\n+        new HashMap<>() {\n \n-        private static final long serialVersionUID = -6624291041977583649L;\n+            private static final long serialVersionUID = -6624291041977583649L;\n \n-        {\n-            put(TestPasswordRuleConf.class, TestPasswordRule.class);\n-            put(DefaultPasswordRuleConf.class, DefaultPasswordRule.class);\n-            put(HaveIBeenPwnedPasswordRuleConf.class, HaveIBeenPwnedPasswordRule.class);\n-        }\n-    };\n+            {\n+                put(TestPasswordRuleConf.class, TestPasswordRule.class);\n+                put(DefaultPasswordRuleConf.class, DefaultPasswordRule.class);\n+                put(HaveIBeenPwnedPasswordRuleConf.class, HaveIBeenPwnedPasswordRule.class);\n+            }\n+        };\n \n     private static final Map<\n             Class<? extends PullCorrelationRuleConf>, Class<? extends PullCorrelationRule>> PULL_CR_CLASSES =\n-            new HashMap<Class<? extends PullCorrelationRuleConf>, Class<? extends PullCorrelationRule>>() {\n+        new HashMap<>() {\n \n-        private static final long serialVersionUID = 3109256773218160485L;\n+            private static final long serialVersionUID = 3109256773218160485L;\n \n-        {\n-            put(DummyPullCorrelationRuleConf.class, DummyPullCorrelationRule.class);\n-            put(DefaultPullCorrelationRuleConf.class, DefaultPullCorrelationRule.class);\n-            put(LinkedAccountSamplePullCorrelationRuleConf.class, LinkedAccountSamplePullCorrelationRule.class);\n-        }\n-    };\n+            {\n+                put(DummyPullCorrelationRuleConf.class, DummyPullCorrelationRule.class);\n+                put(DefaultPullCorrelationRuleConf.class, DefaultPullCorrelationRule.class);\n+                put(LinkedAccountSamplePullCorrelationRuleConf.class, LinkedAccountSamplePullCorrelationRule.class);\n+            }\n+        };\n \n     private static final Map<\n             Class<? extends PushCorrelationRuleConf>, Class<? extends PushCorrelationRule>> PUSH_CR_CLASSES =\n-            new HashMap<Class<? extends PushCorrelationRuleConf>, Class<? extends PushCorrelationRule>>() {\n+        new HashMap<>() {\n \n-        private static final long serialVersionUID = 3109256773218160485L;\n+            private static final long serialVersionUID = 3109256773218160485L;\n \n-        {\n-            put(DummyPushCorrelationRuleConf.class, DummyPushCorrelationRule.class);\n-            put(DefaultPushCorrelationRuleConf.class, DefaultPushCorrelationRule.class);\n-        }\n-    };\n+            {\n+                put(DummyPushCorrelationRuleConf.class, DummyPushCorrelationRule.class);\n+                put(DefaultPushCorrelationRuleConf.class, DefaultPushCorrelationRule.class);\n+            }\n+        };\n \n     private static final Set<Class<?>> AUDITAPPENDER_CLASSES = new HashSet<>(\n             List.of(TestFileAuditAppender.class, TestFileRewriteAuditAppender.class));\n \n     private static final Set<Class<?>> PROVISION_SORTER_CLASSES = new HashSet<>(\n             List.of(DefaultProvisionSorter.class));\n \n-    private static final Map<String, Set<String>> CLASS_NAMES = new HashMap<String, Set<String>>() {\n+    private static final Map<String, Set<String>> CLASS_NAMES = new HashMap<>() {\n \n         private static final long serialVersionUID = 3109256773218160485L;\n \n         {\n             Set<String> classNames = ITImplementationLookup.JWTSSOPROVIDER_CLASSES.stream().\n-                    map(Class::getName).collect(Collectors.toSet());\n+                map(Class::getName).collect(Collectors.toSet());\n             put(IdRepoImplementationType.JWT_SSO_PROVIDER, classNames);\n \n             classNames = new HashSet<>();\n@@ -174,11 +174,11 @@ public class ITImplementationLookup implements ImplementationLookup {\n             put(IdRepoImplementationType.REPORTLET, classNames);\n \n             classNames = ITImplementationLookup.ACCOUNT_RULE_CLASSES.values().stream().\n-                    map(Class::getName).collect(Collectors.toSet());\n+                map(Class::getName).collect(Collectors.toSet());\n             put(IdRepoImplementationType.ACCOUNT_RULE, classNames);\n \n             classNames = ITImplementationLookup.PASSWORD_RULE_CLASSES.values().stream().\n-                    map(Class::getName).collect(Collectors.toSet());\n+                map(Class::getName).collect(Collectors.toSet());\n             put(IdRepoImplementationType.PASSWORD_RULE, classNames);\n \n             classNames = new HashSet<>();\n@@ -234,11 +234,11 @@ public class ITImplementationLookup implements ImplementationLookup {\n             put(IdRepoImplementationType.RECIPIENTS_PROVIDER, classNames);\n \n             classNames = ITImplementationLookup.AUDITAPPENDER_CLASSES.stream().\n-                    map(Class::getName).collect(Collectors.toSet());\n+                map(Class::getName).collect(Collectors.toSet());\n             put(IdRepoImplementationType.AUDIT_APPENDER, classNames);\n \n             classNames = ITImplementationLookup.PROVISION_SORTER_CLASSES.stream().\n-                    map(Class::getName).collect(Collectors.toSet());\n+                map(Class::getName).collect(Collectors.toSet());\n             put(IdMImplementationType.PROVISION_SORTER, classNames);\n         }\n     };"},{"sha":"f7e71d1e335638c5881c8de479cc777f5cb0e123","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -557,26 +557,26 @@ protected ProvisioningResult<UserTO> createUser(final UserCR req) {\n                 throw (RuntimeException) ex;\n             }\n         }\n-        return response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     protected ProvisioningResult<UserTO> updateUser(final UserUR req) {\n         return userService.update(req).\n-                readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                readEntity(new GenericType<>() {\n                 });\n     }\n \n     protected ProvisioningResult<UserTO> updateUser(final UserTO userTO) {\n         UserTO before = userService.read(userTO.getKey());\n         return userService.update(AnyOperations.diff(userTO, before, false)).\n-                readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                readEntity(new GenericType<>() {\n                 });\n     }\n \n     protected ProvisioningResult<UserTO> deleteUser(final String key) {\n         return userService.delete(key).\n-                readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                readEntity(new GenericType<>() {\n                 });\n     }\n \n@@ -588,19 +588,19 @@ protected ProvisioningResult<AnyObjectTO> createAnyObject(final AnyObjectCR req)\n                 throw (RuntimeException) ex;\n             }\n         }\n-        return response.readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     protected ProvisioningResult<AnyObjectTO> updateAnyObject(final AnyObjectUR req) {\n         return anyObjectService.update(req).\n-                readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+                readEntity(new GenericType<>() {\n                 });\n     }\n \n     protected ProvisioningResult<AnyObjectTO> deleteAnyObject(final String key) {\n         return anyObjectService.delete(key).\n-                readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+                readEntity(new GenericType<>() {\n                 });\n     }\n \n@@ -612,19 +612,19 @@ protected ProvisioningResult<GroupTO> createGroup(final GroupCR req) {\n                 throw (RuntimeException) ex;\n             }\n         }\n-        return response.readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+        return response.readEntity(new GenericType<>() {\n         });\n     }\n \n     protected ProvisioningResult<GroupTO> updateGroup(final GroupUR req) {\n         return groupService.update(req).\n-                readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+                readEntity(new GenericType<>() {\n                 });\n     }\n \n     protected ProvisioningResult<GroupTO> deleteGroup(final String key) {\n         return groupService.delete(key).\n-                readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+                readEntity(new GenericType<>() {\n                 });\n     }\n "},{"sha":"71bff3760f740d1489ddfa9c8ff787d16fa6eadd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/BatchITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FBatchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FBatchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FBatchITCase.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -150,8 +150,8 @@ private static void check(final List<BatchResponseItem> resItems) throws IOExcep\n         assertNotNull(resItems.get(0).getHeaders().get(RESTHeaders.RESOURCE_KEY));\n         assertEquals(RESTHeaders.APPLICATION_YAML, resItems.get(0).getHeaders().get(HttpHeaders.CONTENT_TYPE).get(0));\n         ProvisioningResult<UserTO> user = YAML_MAPPER.readValue(\n-                resItems.get(0).getContent(), new TypeReference<ProvisioningResult<UserTO>>() {\n-        });\n+                resItems.get(0).getContent(), new TypeReference<>() {\n+            });\n         assertNotNull(user.getEntity().getKey());\n \n         assertEquals(Response.Status.CREATED.getStatusCode(), resItems.get(1).getStatus());\n@@ -162,8 +162,8 @@ private static void check(final List<BatchResponseItem> resItems) throws IOExcep\n         assertEquals(MediaType.APPLICATION_XML, resItems.get(1).getHeaders().get(HttpHeaders.CONTENT_TYPE).get(0));\n \n         ProvisioningResult<GroupTO> group = XML_MAPPER.readValue(\n-                resItems.get(1).getContent(), new TypeReference<ProvisioningResult<GroupTO>>() {\n-        });\n+                resItems.get(1).getContent(), new TypeReference<>() {\n+            });\n         assertNotNull(group.getEntity().getKey());\n \n         assertEquals(Response.Status.NO_CONTENT.getStatusCode(), resItems.get(2).getStatus());\n@@ -184,8 +184,8 @@ private static void check(final List<BatchResponseItem> resItems) throws IOExcep\n         assertNotNull(resItems.get(5).getHeaders().get(RESTHeaders.DOMAIN));\n         assertEquals(MediaType.APPLICATION_JSON, resItems.get(5).getHeaders().get(HttpHeaders.CONTENT_TYPE).get(0));\n         group = OBJECT_MAPPER.readValue(\n-                resItems.get(5).getContent(), new TypeReference<ProvisioningResult<GroupTO>>() {\n-        });\n+                resItems.get(5).getContent(), new TypeReference<>() {\n+            });\n         assertNotNull(group);\n     }\n "},{"sha":"42140ae4177c417f72051e8e1dacb900b56980b9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RealmITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -381,24 +381,24 @@ public void propagate() {\n \n         // 2. check propagation\n         ProvisioningResult<RealmTO> result = realmService.create(\"/\", realm).readEntity(\n-                new GenericType<ProvisioningResult<RealmTO>>() {\n-        });\n+            new GenericType<>() {\n+            });\n         assertNotNull(result);\n         assertEquals(1, result.getPropagationStatuses().size());\n         assertEquals(RESOURCE_NAME_LDAP_ORGUNIT, result.getPropagationStatuses().get(0).getResource());\n         assertEquals(ExecStatus.SUCCESS, result.getPropagationStatuses().get(0).getStatus());\n \n         ProvisioningResult<RealmTO> resultChild = realmService.create(\"/test\", childRealm).readEntity(\n-                new GenericType<ProvisioningResult<RealmTO>>() {\n-        });\n+            new GenericType<>() {\n+            });\n         assertNotNull(resultChild);\n         assertEquals(1, resultChild.getPropagationStatuses().size());\n         assertEquals(RESOURCE_NAME_LDAP_ORGUNIT, resultChild.getPropagationStatuses().get(0).getResource());\n         assertEquals(ExecStatus.SUCCESS, resultChild.getPropagationStatuses().get(0).getStatus());\n \n         ProvisioningResult<RealmTO> resultDescendant = realmService.create(\"/test/child\", descendantRealm).readEntity(\n-                new GenericType<ProvisioningResult<RealmTO>>() {\n-        });\n+            new GenericType<>() {\n+            });\n         assertNotNull(resultDescendant);\n         assertEquals(1, resultDescendant.getPropagationStatuses().size());\n         assertEquals(RESOURCE_NAME_LDAP_ORGUNIT, resultDescendant.getPropagationStatuses().get(0).getResource());"},{"sha":"08874dc2df94de95917d39b77163ba9ee196d545","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportTemplateITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n import org.apache.syncope.fit.AbstractITCase;\n+import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.Test;\n \n public class ReportTemplateITCase extends AbstractITCase {\n@@ -52,7 +53,7 @@ public void list() {\n         List<ReportTemplateTO> reportTemplateTOs = reportTemplateService.list();\n         assertNotNull(reportTemplateTOs);\n         assertFalse(reportTemplateTOs.isEmpty());\n-        reportTemplateTOs.forEach(instance -> assertNotNull(instance));\n+        reportTemplateTOs.forEach(Assertions::assertNotNull);\n     }\n \n     @Test"},{"sha":"77150dd85325b91a6e3cd957465c10461326f0ab","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RoleITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.rest.api.service.RoleService;\n import org.apache.syncope.fit.AbstractITCase;\n+import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.Test;\n \n public class RoleITCase extends AbstractITCase {\n@@ -55,7 +56,7 @@ public void list() {\n         List<RoleTO> roleTOs = roleService.list();\n         assertNotNull(roleTOs);\n         assertFalse(roleTOs.isEmpty());\n-        roleTOs.forEach(instance -> assertNotNull(instance));\n+        roleTOs.forEach(Assertions::assertNotNull);\n     }\n \n     @Test"},{"sha":"1f334fc8afaecc33896313c4c5a5c2f8c9a72a02","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -153,7 +153,7 @@ public void resourceTypes() {\n                 SCIMConstants.APPLICATION_SCIM_JSON,\n                 StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n \n-        List<ResourceType> resourceTypes = response.readEntity(new GenericType<List<ResourceType>>() {\n+        List<ResourceType> resourceTypes = response.readEntity(new GenericType<>() {\n         });\n         assertNotNull(resourceTypes);\n         assertEquals(2, resourceTypes.size());\n@@ -260,7 +260,7 @@ public void list() throws IOException {\n                 SCIMConstants.APPLICATION_SCIM_JSON,\n                 StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n \n-        ListResponse<SCIMGroup> result = response.readEntity(new GenericType<ListResponse<SCIMGroup>>() {\n+        ListResponse<SCIMGroup> result = response.readEntity(new GenericType<>() {\n         });\n         assertNotNull(result);\n         assertTrue(result.getTotalResults() > 0);\n@@ -290,7 +290,7 @@ public void search() {\n                 SCIMConstants.APPLICATION_SCIM_JSON,\n                 StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n \n-        ListResponse<SCIMGroup> groups = response.readEntity(new GenericType<ListResponse<SCIMGroup>>() {\n+        ListResponse<SCIMGroup> groups = response.readEntity(new GenericType<>() {\n         });\n         assertNotNull(groups);\n         assertEquals(1, groups.getTotalResults());\n@@ -306,7 +306,7 @@ public void search() {\n                 SCIMConstants.APPLICATION_SCIM_JSON,\n                 StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n \n-        groups = response.readEntity(new GenericType<ListResponse<SCIMGroup>>() {\n+        groups = response.readEntity(new GenericType<>() {\n         });\n         assertNotNull(groups);\n         assertEquals(1, groups.getTotalResults());\n@@ -327,7 +327,7 @@ public void search() {\n                 SCIMConstants.APPLICATION_SCIM_JSON,\n                 StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n \n-        ListResponse<SCIMUser> users = response.readEntity(new GenericType<ListResponse<SCIMUser>>() {\n+        ListResponse<SCIMUser> users = response.readEntity(new GenericType<>() {\n         });\n         assertNotNull(users);\n         assertEquals(1, users.getTotalResults());"},{"sha":"fc36189018dac04c6cc69b2926045da8094f8792","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -879,8 +879,8 @@ public void async() {\n         userCR.getResources().add(RESOURCE_NAME_LDAP);\n \n         ProvisioningResult<UserTO> result = asyncService.create(userCR).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n+            new GenericType<>() {\n+            });\n         assertNotNull(result);\n         verifyAsyncResult(result.getPropagationStatuses());\n \n@@ -891,14 +891,14 @@ public void async() {\n                 value(\"password321\").build());\n \n         result = asyncService.update(userUR).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n+            new GenericType<>() {\n+            });\n         assertNotNull(result);\n         verifyAsyncResult(result.getPropagationStatuses());\n \n         result = asyncService.delete(result.getEntity().getKey()).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        });\n+            new GenericType<>() {\n+            });\n         assertNotNull(result);\n         verifyAsyncResult(result.getPropagationStatuses());\n     }"},{"sha":"300a61e35d20c87e067760bb2eb4797c82538002","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/pac4j/saml/SyncopeWASAML2ClientKeystoreGeneratorTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a9cf472927f609d717104f20bd82c518f0d9240/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FSyncopeWASAML2ClientKeystoreGeneratorTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a9cf472927f609d717104f20bd82c518f0d9240/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FSyncopeWASAML2ClientKeystoreGeneratorTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FSyncopeWASAML2ClientKeystoreGeneratorTest.java?ref=1a9cf472927f609d717104f20bd82c518f0d9240","patch":"@@ -61,6 +61,6 @@ private static WARestClient getWaRestClient() throws Exception {\n     public void generate() throws Exception {\n         SAML2Client client = getSAML2Client();\n         SAML2KeystoreGenerator generator = new SyncopeWASAML2ClientKeystoreGenerator(getWaRestClient(), client);\n-        assertDoesNotThrow(() -> generator.generate());\n+        assertDoesNotThrow(generator::generate);\n     }\n }"}]}