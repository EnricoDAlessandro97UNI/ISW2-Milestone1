{"sha":"a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEzZWEwMmRlNWM0MzkwYWU2YjZiOTk0MmQzYzM0OGZiNmI1ZGNkZmM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-11-04T14:58:53Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-11-04T14:58:53Z"},"message":"Merge branch '1_2_X'","tree":{"sha":"a4fe7f2749ae48f68be6e37de936b28697a09b0f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a4fe7f2749ae48f68be6e37de936b28697a09b0f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e04f70abb3946ff174ba21c881f3f3ce2d91c427","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e04f70abb3946ff174ba21c881f3f3ce2d91c427","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e04f70abb3946ff174ba21c881f3f3ce2d91c427"},{"sha":"bcc3e5be56a9f1595e55e6be3af77e39c6d6916f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bcc3e5be56a9f1595e55e6be3af77e39c6d6916f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bcc3e5be56a9f1595e55e6be3af77e39c6d6916f"}],"stats":{"total":107,"additions":54,"deletions":53},"files":[{"sha":"1ab08e8436a8a4a5b19f796d4662022078df9854","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractSyncTaskModalPage.java","status":"modified","additions":52,"deletions":49,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java?ref=a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.AbstractSyncTaskTO;\n@@ -69,6 +70,8 @@ protected List<String> load() {\n             for (ResourceTO resourceTO : resourceRestClient.getAll()) {\n                 resourceNames.add(resourceTO.getName());\n             }\n+\n+            Collections.sort(resourceNames);\n             return resourceNames;\n         }\n     };\n@@ -120,59 +123,59 @@ public void onClick(final AjaxRequestTarget target) {\n         final ListView<String> actionsClasses = new ListView<String>(\n                 \"actionsClasses\", new PropertyModel<List<String>>(taskTO, \"actionsClassNames\")) {\n \n-            private static final long serialVersionUID = 9101744072914090143L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<String> item) {\n-                final String className = item.getModelObject();\n-\n-                final DropDownChoice<String> actionsClass = new DropDownChoice<String>(\n-                        \"actionsClass\", new Model<String>(className), syncActionsClasses.getObject());\n-                actionsClass.setNullValid(true);\n-                actionsClass.setRequired(true);\n-                actionsClass.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                    private static final long serialVersionUID = -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        taskTO.getActionsClassNames().set(item.getIndex(), actionsClass.getModelObject());\n-                        target.add(syncActionsClassNames);\n-                    }\n-                });\n-                actionsClass.setRequired(true);\n-                actionsClass.setOutputMarkupId(true);\n-                actionsClass.setRequired(true);\n-                item.add(actionsClass);\n-\n-                AjaxLink<Void> minus = new IndicatingAjaxLink<Void>(\"drop\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                    private static final long serialVersionUID = 9101744072914090143L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        taskTO.getActionsClassNames().remove(className);\n-                        first.setVisible(taskTO.getActionsClassNames().isEmpty());\n-                        target.add(syncActionsClassNames);\n+                    protected void populateItem(final ListItem<String> item) {\n+                        final String className = item.getModelObject();\n+\n+                        final DropDownChoice<String> actionsClass = new DropDownChoice<String>(\n+                                \"actionsClass\", new Model<String>(className), syncActionsClasses.getObject());\n+                        actionsClass.setNullValid(true);\n+                        actionsClass.setRequired(true);\n+                        actionsClass.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                            private static final long serialVersionUID = -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(final AjaxRequestTarget target) {\n+                                taskTO.getActionsClassNames().set(item.getIndex(), actionsClass.getModelObject());\n+                                target.add(syncActionsClassNames);\n+                            }\n+                        });\n+                        actionsClass.setRequired(true);\n+                        actionsClass.setOutputMarkupId(true);\n+                        actionsClass.setRequired(true);\n+                        item.add(actionsClass);\n+\n+                        AjaxLink<Void> minus = new IndicatingAjaxLink<Void>(\"drop\") {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target) {\n+                                taskTO.getActionsClassNames().remove(className);\n+                                first.setVisible(taskTO.getActionsClassNames().isEmpty());\n+                                target.add(syncActionsClassNames);\n+                            }\n+                        };\n+                        item.add(minus);\n+\n+                        final AjaxLink<Void> plus = new IndicatingAjaxLink<Void>(\"add\") {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target) {\n+                                taskTO.getActionsClassNames().add(StringUtils.EMPTY);\n+                                target.add(syncActionsClassNames);\n+                            }\n+                        };\n+                        plus.setOutputMarkupPlaceholderTag(true);\n+                        plus.setVisible(item.getIndex() == taskTO.getActionsClassNames().size() - 1);\n+                        item.add(plus);\n                     }\n                 };\n-                item.add(minus);\n-\n-                final AjaxLink<Void> plus = new IndicatingAjaxLink<Void>(\"add\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        taskTO.getActionsClassNames().add(StringUtils.EMPTY);\n-                        target.add(syncActionsClassNames);\n-                    }\n-                };\n-                plus.setOutputMarkupPlaceholderTag(true);\n-                plus.setVisible(item.getIndex() == taskTO.getActionsClassNames().size() - 1);\n-                item.add(plus);\n-            }\n-        };\n         syncActionsClassNames.add(actionsClasses);\n \n         syncActionsClassNames.setEnabled(!syncActionsClasses.getObject().isEmpty());"},{"sha":"a2b0d5e1d88f6bdc9f106699c0d2f65ae00fdead","filename":"console/src/main/java/org/apache/syncope/console/pages/Todo.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc","patch":"@@ -216,7 +216,6 @@ public ApprovalProvider() {\n \n         @Override\n         public Iterator<WorkflowFormTO> iterator(final long first, final long count) {\n-\n             final List<WorkflowFormTO> list = restClient.getForms();\n \n             Collections.sort(list, comparator);\n@@ -231,7 +230,6 @@ public long size() {\n \n         @Override\n         public IModel<WorkflowFormTO> model(final WorkflowFormTO configuration) {\n-\n             return new AbstractReadOnlyModel<WorkflowFormTO>() {\n \n                 private static final long serialVersionUID = -2566070996511906708L;"},{"sha":"9352c6d9fbf277ca5cecb5b83089473b89cf334b","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=a3ea02de5c4390ae6b6b9942d3c348fb6b5dcdfc","patch":"@@ -690,8 +690,8 @@ public List<WorkflowFormTO> getForms(final String workflowId, final String name)\n                 taskService.createTaskQuery().processInstanceId(workflowId).taskName(name).\n                 taskVariableValueEquals(TASK_IS_FORM, Boolean.TRUE));\n \n-        forms.addAll(getForms(historyService.createHistoricTaskInstanceQuery().taskName(name)\n-                .taskVariableValueEquals(TASK_IS_FORM, Boolean.TRUE)));\n+        forms.addAll(getForms(historyService.createHistoricTaskInstanceQuery().taskName(name).\n+                taskVariableValueEquals(TASK_IS_FORM, Boolean.TRUE)));\n \n         return forms;\n     }"}]}