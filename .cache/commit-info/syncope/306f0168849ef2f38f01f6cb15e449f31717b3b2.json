{"sha":"306f0168849ef2f38f01f6cb15e449f31717b3b2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMwNmYwMTY4ODQ5ZWYyZjM4ZjAxZjZjYjE1ZTQ0OWYzMTcxN2IzYjI=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-02T10:10:50Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-02T10:10:50Z"},"message":"sonar: controlled replacement of catching throwable with catching exception to prevent masking of Errors such as OutOfMemoryError\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1332975 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1191143067367f19b82ab2b4b72e0057fc3bd7c2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1191143067367f19b82ab2b4b72e0057fc3bd7c2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/306f0168849ef2f38f01f6cb15e449f31717b3b2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/306f0168849ef2f38f01f6cb15e449f31717b3b2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/306f0168849ef2f38f01f6cb15e449f31717b3b2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/306f0168849ef2f38f01f6cb15e449f31717b3b2/comments","author":null,"committer":null,"parents":[{"sha":"524a083bed226c4252e139a950db2b0c257dd962","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/524a083bed226c4252e139a950db2b0c257dd962","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/524a083bed226c4252e139a950db2b0c257dd962"}],"stats":{"total":161,"additions":83,"deletions":78},"files":[{"sha":"d45b40b73080652ea0a62748dce2e409d9c2f97a","filename":"core/src/main/java/org/apache/syncope/core/init/ContentLoader.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -119,8 +119,8 @@ public void load() {\n             }\n \n             LOG.debug(\"Views created, go for indexes\");\n-        } catch (Throwable t) {\n-            LOG.error(\"While creating views\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating views\", e);\n         }\n \n         // 3. Create indexes\n@@ -143,8 +143,8 @@ public void load() {\n             }\n \n             LOG.debug(\"Indexes created, go for default content\");\n-        } catch (Throwable t) {\n-            LOG.error(\"While creating indexes\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating indexes\", e);\n         }\n \n         try {\n@@ -169,8 +169,8 @@ public void load() {\n             SAXParser parser = factory.newSAXParser();\n             parser.parse(getClass().getResourceAsStream(\"/content.xml\"), importExport);\n             LOG.debug(\"Default content successfully loaded\");\n-        } catch (Throwable t) {\n-            LOG.error(\"While loading default content\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"While loading default content\", e);\n         }\n     }\n }"},{"sha":"1b6b276ff7fc875054b227da8a62f0a6c998ee6e","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -148,9 +148,9 @@ public void registerJob(final Task task, final String jobClassName, final String\n             if (StringUtils.isNotBlank(jobActionsClassName)) {\n                 try {\n                     syncJobActionsClass = Class.forName(jobActionsClassName);\n-                } catch (Throwable t) {\n+                } catch (Exception e) {\n                     LOG.error(\"Class {} not found, reverting to {}\", new Object[] { jobActionsClassName,\n-                            syncJobActionsClass.getName(), t });\n+                            syncJobActionsClass.getName(), e });\n                 }\n             }\n             SyncJobActions syncJobActions = (SyncJobActions) getBeanFactory().createBean(syncJobActionsClass,"},{"sha":"f1b82a90d5323fac5bb8ee725a25118a52f77c09","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -267,8 +267,8 @@ public void setPassword(final String password, final CipherAlgorithm cipherAlgor\n         try {\n             this.password = encodePassword(password, cipherAlgoritm);\n             this.cipherAlgorithm = cipherAlgoritm;\n-        } catch (Throwable t) {\n-            LOG.error(\"Could not encode password\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"Could not encode password\", e);\n             this.password = null;\n         }\n     }\n@@ -534,8 +534,8 @@ public boolean verifyPasswordHistory(final String password, final int size) {\n                         : passwordHistory.size() - size, passwordHistory.size()).contains(cipherAlgorithm != null\n                         ? encodePassword(password, cipherAlgorithm)\n                         : password);\n-            } catch (Throwable t) {\n-                LOG.error(\"Error evaluating password history\", t);\n+            } catch (Exception e) {\n+                LOG.error(\"Error evaluating password history\", e);\n             }\n         }\n "},{"sha":"83b24431cdcbc73096fed50fcf9ef362ca62fe01","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -133,8 +133,8 @@ public List<SyncopeUser> search(\n             } else {\n                 try {\n                     result = doSearch(adminRoles, searchCondition, page, itemsPerPage);\n-                } catch (Throwable t) {\n-                    LOG.error(\"While searching users\", t);\n+                } catch (Exception e) {\n+                    LOG.error(\"While searching users\", e);\n                 }\n             }\n         }"},{"sha":"13c81bf1b612627c4c01f764d62a016b5f3ae3e3","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchedTaskValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -41,8 +41,8 @@ public boolean isValid(final SchedTask object, final ConstraintValidatorContext\n         try {\n             jobClass = Class.forName(object.getJobClassName());\n             isValid = AbstractTaskJob.class.isAssignableFrom(jobClass);\n-        } catch (Throwable t) {\n-            LOG.error(\"Invalid Job class specified\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"Invalid Job class specified\", e);\n             isValid = false;\n         }\n         if (jobClass == null || !isValid) {"},{"sha":"32d9705b872da9a5835302f760a14535aa5d10c8","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncTaskValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -65,8 +65,8 @@ public boolean isValid(final SyncTask object, final ConstraintValidatorContext c\n                     try {\n                         syncJobActionsClass = Class.forName(object.getJobActionsClassName());\n                         isAssignable = SyncJobActions.class.isAssignableFrom(syncJobActionsClass);\n-                    } catch (Throwable t) {\n-                        LOG.error(\"Invalid SyncJobActions specified\", t);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Invalid SyncJobActions specified\", e);\n                         isValid = false;\n                     }\n "},{"sha":"a7e3bb90ec0cb913087143ed6f0730d25bb5e592","filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -458,9 +458,9 @@ public Set<String> getSchema(final boolean showall) {\n                     }\n                 }\n             }\n-        } catch (Throwable t) {\n-            // catch throwable in order to manage unpredictable behaviors\n-            LOG.debug(\"Unsupported operation {}\", t);\n+        } catch (Exception e) {\n+            // catch exception in order to manage unpredictable behaviors\n+            LOG.debug(\"Unsupported operation {}\", e);\n         }\n \n         return resourceSchemaNames;\n@@ -556,8 +556,8 @@ private Object getPropertyValue(final ConnConfProperty property) {\n                 } else {\n                     value = values.get(0).toString();\n                 }\n-            } catch (Throwable t) {\n-                LOG.error(\"Invalid ConnConfProperty specified: {}\", property, t);\n+            } catch (Exception e) {\n+                LOG.error(\"Invalid ConnConfProperty specified: {}\", property, e);\n             }\n         }\n "},{"sha":"3c64fb8a26736e0e7979c92ac0f0e10fe0bf1f4a","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationManager.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -456,8 +456,8 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(final SyncopeUser us\n                     }\n \n                 }\n-            } catch (Throwable t) {\n-                LOG.debug(\"Attribute '{}' processing failed\", SchemaMappingUtil.getIntAttrName(mapping), t);\n+            } catch (Exception e) {\n+                LOG.debug(\"Attribute '{}' processing failed\", SchemaMappingUtil.getIntAttrName(mapping), e);\n             }\n         }\n \n@@ -743,15 +743,15 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n                 throw e;\n             }\n \n-        } catch (Throwable t) {\n-            LOG.error(\"Exception during provision on resource \" + task.getResource().getName(), t);\n+        } catch (Exception e) {\n+            LOG.error(\"Exception during provision on resource \" + task.getResource().getName(), e);\n \n-            if (t instanceof ConnectorException && t.getCause() != null) {\n-                taskExecutionMessage = t.getCause().getMessage();\n+            if (e instanceof ConnectorException && e.getCause() != null) {\n+                taskExecutionMessage = e.getCause().getMessage();\n             } else {\n                 StringWriter exceptionWriter = new StringWriter();\n-                exceptionWriter.write(t.getMessage() + \"\\n\\n\");\n-                t.printStackTrace(new PrintWriter(exceptionWriter));\n+                exceptionWriter.write(e.getMessage() + \"\\n\\n\");\n+                e.printStackTrace(new PrintWriter(exceptionWriter));\n                 taskExecutionMessage = exceptionWriter.toString();\n             }\n "},{"sha":"c1044630c9a569fcd9a8e9ba9516644efaab202d","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConfigurationController.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -214,10 +214,10 @@ public void dbExport(final HttpServletResponse response) {\n             auditManager.audit(Category.configuration, ConfigurationSubCategory.dbExport, Result.success,\n                     \"Successfully exported database content\");\n             LOG.debug(\"Database content successfully exported\");\n-        } catch (Throwable t) {\n+        } catch (Exception e) {\n             auditManager.audit(Category.configuration, ConfigurationSubCategory.dbExport, Result.failure,\n-                    \"Could not export database content\", t);\n-            LOG.error(\"While exporting database content\", t);\n+                    \"Could not export database content\", e);\n+            LOG.error(\"While exporting database content\", e);\n         }\n     }\n }"},{"sha":"50c0d282c1a3757781cd85c450312f37b4b214f9","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -100,15 +100,15 @@ public ConnInstanceTO create(final HttpServletResponse response, @RequestBody fi\n             connInstance = connInstanceDAO.save(connInstance);\n             auditManager.audit(Category.connector, ConnectorSubCategory.create, Result.success,\n                     \"Successfully created connector instance: \" + connInstance.getDisplayName());\n-        } catch (Throwable t) {\n+        } catch (Exception e) {\n             auditManager.audit(Category.connector, ConnectorSubCategory.create, Result.failure,\n-                    \"Could not create connector instance: \" + connectorTO.getDisplayName(), t);\n+                    \"Could not create connector instance: \" + connectorTO.getDisplayName(), e);\n \n             SyncopeClientCompositeErrorException scce = new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n \n             SyncopeClientException invalidConnInstance = new SyncopeClientException(\n                     SyncopeClientExceptionType.InvalidConnInstance);\n-            invalidConnInstance.addElement(t.getMessage());\n+            invalidConnInstance.addElement(e.getMessage());\n \n             scce.addException(invalidConnInstance);\n             throw scce;\n@@ -131,15 +131,15 @@ public ConnInstanceTO update(@RequestBody final ConnInstanceTO connectorTO)\n             connInstance = connInstanceDAO.save(connInstance);\n             auditManager.audit(Category.connector, ConnectorSubCategory.update, Result.success,\n                     \"Successfully update connector instance: \" + connInstance.getDisplayName());\n-        } catch (Throwable t) {\n+        } catch (Exception e) {\n             auditManager.audit(Category.connector, ConnectorSubCategory.create, Result.failure,\n-                    \"Could not update connector instance: \" + connectorTO.getDisplayName(), t);\n+                    \"Could not update connector instance: \" + connectorTO.getDisplayName(), e);\n \n             SyncopeClientCompositeErrorException scce = new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n \n             SyncopeClientException invalidConnInstance = new SyncopeClientException(\n                     SyncopeClientExceptionType.InvalidConnInstance);\n-            invalidConnInstance.addElement(t.getMessage());\n+            invalidConnInstance.addElement(e.getMessage());\n \n             scce.addException(invalidConnInstance);\n             throw scce;"},{"sha":"60686f21da7fdf850206831ad84473a0bbdee4e3","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ReportController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -335,8 +335,8 @@ public void exportExecutionResult(final HttpServletResponse response,\n             pipeline.execute();\n \n             LOG.debug(\"Result of {} successfully exported as {}\", reportExec, format);\n-        } catch (Throwable t) {\n-            LOG.error(\"While exporting content\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"While exporting content\", e);\n         } finally {\n             try {\n                 zis.close();"},{"sha":"4f4343d7a438ec8541a2f220b50ae8eda7927319","filename":"core/src/main/java/org/apache/syncope/core/scheduling/NotificationJob.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -179,21 +179,21 @@ public TaskExec executeSingle(final NotificationTask task) {\n \n                     auditManager.audit(Category.notification, NotificationSubCategory.sent, Result.success,\n                             \"Successfully sent notification to \" + to);\n-                } catch (Throwable t) {\n-                    LOG.error(\"Could not send e-mail\", t);\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not send e-mail\", e);\n \n                     execution.setStatus(Status.NOT_SENT.name());\n                     StringWriter exceptionWriter = new StringWriter();\n-                    exceptionWriter.write(t.getMessage() + \"\\n\\n\");\n-                    t.printStackTrace(new PrintWriter(exceptionWriter));\n+                    exceptionWriter.write(e.getMessage() + \"\\n\\n\");\n+                    e.printStackTrace(new PrintWriter(exceptionWriter));\n \n                     if (task.getTraceLevel().ordinal() >= TraceLevel.FAILURES.ordinal()) {\n \n                         execution.setMessage(exceptionWriter.toString());\n                     }\n \n                     auditManager.audit(Category.notification, NotificationSubCategory.sent, Result.failure,\n-                            \"Could not send notification to \" + to, t);\n+                            \"Could not send notification to \" + to, e);\n                 }\n \n                 execution.setEndDate(new Date());"},{"sha":"bf23a1c359e0e04b9eeda8c3e34b5311db1fd817","filename":"core/src/main/java/org/apache/syncope/core/scheduling/SyncJob.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -337,10 +337,10 @@ private SyncResult createUser(SyncDelta delta, final boolean dryRun) throws JobE\n                 result.setStatus(Status.SUCCESS);\n             } catch (PropagationException e) {\n                 LOG.error(\"Could not propagate user \" + delta.getUid().getUidValue(), e);\n-            } catch (Throwable t) {\n+            } catch (Exception e) {\n                 result.setStatus(Status.FAILURE);\n-                result.setMessage(t.getMessage());\n-                LOG.error(\"Could not create user \" + delta.getUid().getUidValue(), t);\n+                result.setMessage(e.getMessage());\n+                LOG.error(\"Could not create user \" + delta.getUid().getUidValue(), e);\n             }\n         }\n \n@@ -391,10 +391,10 @@ private void updateUsers(SyncDelta delta, final List<Long> users, final boolean\n                     }\n                 } catch (PropagationException e) {\n                     LOG.error(\"Could not propagate user \" + delta.getUid().getUidValue(), e);\n-                } catch (Throwable t) {\n+                } catch (Exception e) {\n                     result.setStatus(Status.FAILURE);\n-                    result.setMessage(t.getMessage());\n-                    LOG.error(\"Could not update user \" + delta.getUid().getUidValue(), t);\n+                    result.setMessage(e.getMessage());\n+                    LOG.error(\"Could not update user \" + delta.getUid().getUidValue(), e);\n                 }\n \n                 delta = actions.after(delta, userTO, result);\n@@ -442,10 +442,10 @@ private void deleteUsers(SyncDelta delta, final List<Long> users, final boolean\n \n                     try {\n                         wfAdapter.delete(userId);\n-                    } catch (Throwable t) {\n+                    } catch (Exception e) {\n                         result.setStatus(Status.FAILURE);\n-                        result.setMessage(t.getMessage());\n-                        LOG.error(\"Could not delete user \" + userId, t);\n+                        result.setMessage(e.getMessage());\n+                        LOG.error(\"Could not delete user \" + userId, e);\n                     }\n                 }\n \n@@ -666,12 +666,12 @@ public boolean handle(final SyncDelta delta) {\n                     resource.setSyncToken(connector.getLatestSyncToken());\n                     resourceDAO.save(resource);\n \n-                } catch (Throwable t) {\n-                    throw new JobExecutionException(\"While updating SyncToken\", t);\n+                } catch (Exception e) {\n+                    throw new JobExecutionException(\"While updating SyncToken\", e);\n                 }\n             }\n-        } catch (Throwable t) {\n-            throw new JobExecutionException(\"While syncing on connector\", t);\n+        } catch (Exception e) {\n+            throw new JobExecutionException(\"While syncing on connector\", e);\n         }\n \n         actions.afterAll(syncTask, results);"},{"sha":"1e237c8faab00ec5aef5e64470370425ddf25b5c","filename":"core/src/main/java/org/apache/syncope/core/util/EntitlementUtil.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -26,10 +26,14 @@\n import org.springframework.security.core.context.SecurityContext;\n import org.springframework.security.core.context.SecurityContextHolder;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class EntitlementUtil {\n \n     private static final Pattern ROLE_ENTITLEMENT_NAME_PATTERN = Pattern.compile(\"^ROLE_([\\\\d])+\");\n+    private static final Logger LOG = LoggerFactory.getLogger(EntitlementUtil.class);\n+\n \n     public static Set<String> getOwnedEntitlementNames() {\n         final Set<String> result = new HashSet<String>();\n@@ -59,7 +63,8 @@ public static Long getRoleId(final String entitlementName) {\n         if (isRoleEntitlement(entitlementName)) {\n             try {\n                 result = Long.valueOf(entitlementName.substring(entitlementName.indexOf(\"_\") + 1));\n-            } catch (Throwable t) {\n+            } catch (Exception e) {\n+                LOG.error(\"unable to parse {} to Long\", entitlementName, e);\n             }\n         }\n "},{"sha":"953b11b3c86f583cea02df64fe643c75c354a52d","filename":"core/src/main/java/org/apache/syncope/core/util/ImportExport.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -86,9 +86,9 @@ private String readSchema() {\n             Properties dbProps = new Properties();\n             dbProps.load(dbPropsStream);\n             schema = dbProps.getProperty(\"database.schema\");\n-        } catch (Throwable t) {\n+        } catch (Exception e) {\n             if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Could not find persistence.properties\", t);\n+                LOG.debug(\"Could not find persistence.properties\", e);\n             } else {\n                 LOG.error(\"Could not find persistence.properties\");\n             }"},{"sha":"961935be9af755378312ae5a19f7f07d112ecd29","filename":"core/src/test/java/org/apache/syncope/core/AbstractTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -84,8 +84,8 @@ public void setUpIdentityConnectorsBundles() {\n             props.load(propStream);\n             connidSoapVersion = props.getProperty(\"connid.soap.version\");\n             bundlesDirectory = props.getProperty(\"bundles.directory\");\n-        } catch (Throwable t) {\n-            LOG.error(\"Could not load bundles.properties\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"Could not load bundles.properties\", e);\n         }\n         assertNotNull(connidSoapVersion);\n         assertNotNull(bundlesDirectory);"},{"sha":"939cb3f93cbdc28e9d094fe9cc8dbf8022f398b2","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/SchemaTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -104,11 +104,11 @@ public void checkForEnumType() {\n         schema.setType(SchemaType.Enum);\n         schema.setName(\"color\");\n \n-        Throwable ex = null;\n+        Exception ex = null;\n         try {\n             schemaDAO.save(schema);\n-        } catch (Throwable t) {\n-            ex = t;\n+        } catch (Exception e) {\n+            ex = e;\n         }\n         assertNotNull(ex);\n "},{"sha":"949e919cd12e7ccec4eea38f69ebe37d288e748b","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -62,8 +62,8 @@ public static void init() {\n             connidSoapVersion = props.getProperty(\"connid.soap.version\");\n             connidDbTableVersion = props.getProperty(\"connid.db.table.version\");\n             bundlesDirectory = props.getProperty(\"bundles.directory\");\n-        } catch (Throwable t) {\n-            LOG.error(\"Could not load bundles.properties\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"Could not load bundles.properties\", e);\n         } finally {\n             if (propStream != null) {\n                 try {"},{"sha":"9d77192fb91a57b3c965f2f9e1761603aebfd814","filename":"core/src/test/notifications/java/org/apache/syncope/core/notification/NotificationTest.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/306f0168849ef2f38f01f6cb15e449f31717b3b2/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=306f0168849ef2f38f01f6cb15e449f31717b3b2","patch":"@@ -235,8 +235,8 @@ private boolean verifyMail(final String sender, final String subject) {\n             }\n             inbox.close(true);\n             store.close();\n-        } catch (Throwable t) {\n-            LOG.error(\"Unexpected exception\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"Unexpected exception\", e);\n             fail(\"Unexpected exception while fetching e-mail\");\n         }\n \n@@ -278,8 +278,8 @@ public void notifyByMail() {\n             SyncopeConf smtpHostConf = confDAO.find(\"smtp.host\");\n             smtpHostConf.setValue(smtpHost);\n             confDAO.save(smtpHostConf);\n-        } catch (Throwable t) {\n-            LOG.error(\"Unexpected exception\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"Unexpected exception\", e);\n             fail(\"Unexpected exception while setting SMTP host\");\n         }\n \n@@ -293,8 +293,8 @@ public void notifyByMail() {\n \n         try {\n             userController.create(new MockHttpServletResponse(), userTO);\n-        } catch (Throwable t) {\n-            LOG.error(\"Unexpected exception\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"Unexpected exception\", e);\n             fail(\"Unexpected exception while creating\");\n         }\n \n@@ -320,8 +320,8 @@ public void notifyByMail() {\n         // 5. execute Notification task and verify e-mail\n         try {\n             taskController.execute(taskId, false);\n-        } catch (Throwable t) {\n-            LOG.error(\"Unexpected exception\", t);\n+        } catch (Exception e) {\n+            LOG.error(\"Unexpected exception\", e);\n             fail(\"Unexpected exception while executing notification task\");\n         }\n "}]}