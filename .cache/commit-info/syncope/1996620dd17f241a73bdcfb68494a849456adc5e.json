{"sha":"1996620dd17f241a73bdcfb68494a849456adc5e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE5OTY2MjBkZDE3ZjI0MWE3M2JkY2ZiNjg0OTRhODQ5NDU2YWRjNWU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-19T09:44:14Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-12-19T09:44:14Z"},"message":"Merge from 0_7_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247281 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fe3b1c6747a841859bd3a268678e88dc8975de4c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fe3b1c6747a841859bd3a268678e88dc8975de4c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1996620dd17f241a73bdcfb68494a849456adc5e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1996620dd17f241a73bdcfb68494a849456adc5e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1996620dd17f241a73bdcfb68494a849456adc5e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1996620dd17f241a73bdcfb68494a849456adc5e/comments","author":null,"committer":null,"parents":[{"sha":"e18fe9b89e83bb846983aa03d79e93657727f839","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e18fe9b89e83bb846983aa03d79e93657727f839","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e18fe9b89e83bb846983aa03d79e93657727f839"}],"stats":{"total":666,"additions":414,"deletions":252},"files":[{"sha":"c9a72ca7968f4a3d309e99b893ea431bffc14fd7","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":354,"deletions":246,"changes":600,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1996620dd17f241a73bdcfb68494a849456adc5e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1996620dd17f241a73bdcfb68494a849456adc5e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=1996620dd17f241a73bdcfb68494a849456adc5e","patch":"@@ -29,12 +29,15 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.CompoundPropertyModel;\n@@ -44,6 +47,7 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.util.ClassUtils;\n import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n@@ -59,6 +63,8 @@\n import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel.MultiValueSelectorEvent;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.IntMappingType;\n@@ -71,9 +77,25 @@ public class ResourceModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n \n+    // GuardedString is not in classpath\n     private static final String GUARDED_STRING =\n             \"org.identityconnectors.common.security.GuardedString\";\n \n+    // GuardedByteArray is not in classpath\n+    private static final String GUARDED_BYTE_ARRAY =\n+            \"org.identityconnectors.common.security.GuardedByteArray\";\n+\n+    private static final List<Class> NUMBER = Arrays.asList(new Class[]{\n+                Integer.class,\n+                Double.class,\n+                Long.class,\n+                Float.class,\n+                Number.class,\n+                Integer.TYPE,\n+                Long.TYPE,\n+                Double.TYPE,\n+                Float.TYPE});\n+\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n@@ -97,12 +119,20 @@ public class ResourceModalPage extends BaseModalPage {\n \n     private List<String> resourceSchemaNames;\n \n+    final ResourceTO resourceTO;\n+\n+    final ListView<SchemaMappingTO> mappings;\n+\n+    final AjaxButton addSchemaMappingBtn;\n+\n     public ResourceModalPage(final PageReference callPageRef,\n             final ModalWindow window, final ResourceTO resourceTO,\n             final boolean createFlag) {\n \n         super();\n \n+        this.resourceTO = resourceTO;\n+\n         uSchemaAttrNames =\n                 schemaRestClient.getSchemaNames(\"user\");\n         uDerSchemaAttrNames =\n@@ -298,248 +328,246 @@ public void detach() {\n         connector.setEnabled(createFlag);\n         form.add(connector);\n \n-        final ListView<SchemaMappingTO> mappings =\n-                new ListView<SchemaMappingTO>(\n+        mappings = new ListView<SchemaMappingTO>(\n                 \"mappings\", resourceTO.getMappings()) {\n \n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(\n+                    final ListItem<SchemaMappingTO> item) {\n+\n+                final SchemaMappingTO mappingTO = item.getModelObject();\n+\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n+                        new Model(Boolean.FALSE)) {\n+\n                     private static final long serialVersionUID =\n-                            4949588177564901031L;\n+                            7170946748485726506L;\n \n                     @Override\n-                    protected void populateItem(\n-                            final ListItem<SchemaMappingTO> item) {\n+                    protected void onUpdate(\n+                            final AjaxRequestTarget target) {\n+                        int index = -1;\n+                        for (int i = 0; i < resourceTO.getMappings().\n+                                size()\n+                                && index == -1; i++) {\n+\n+                            if (mappingTO.equals(\n+                                    resourceTO.getMappings().get(i))) {\n+\n+                                index = i;\n+                            }\n+                        }\n \n-                        final SchemaMappingTO mappingTO = item.getModelObject();\n+                        if (index != -1) {\n+                            resourceTO.getMappings().remove(index);\n+                            item.getParent().removeAll();\n+                            target.add(mappingContainer);\n+                        }\n+                    }\n \n-                        item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n-                                new Model(Boolean.FALSE)) {\n+                    @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(\n+                                super.getAjaxCallDecorator()) {\n \n                             private static final long serialVersionUID =\n-                                    7170946748485726506L;\n+                                    -7927968187160354605L;\n \n                             @Override\n-                            protected void onUpdate(\n-                                    final AjaxRequestTarget target) {\n-                                int index = -1;\n-                                for (int i = 0; i < resourceTO.getMappings().\n-                                        size()\n-                                        && index == -1; i++) {\n+                            public CharSequence preDecorateScript(\n+                                    final CharSequence script) {\n+\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\")\n+                                        + \"'))\"\n+                                        + \"{\" + script + \"} \"\n+                                        + \"else {this.checked = false;}\";\n+                            }\n+                        };\n+                    }\n+                });\n \n-                                    if (mappingTO.equals(\n-                                            resourceTO.getMappings().get(i))) {\n+                final AjaxDropDownChoicePanel intAttrNames =\n+                        new AjaxDropDownChoicePanel<String>(\n+                        \"intAttrNames\",\n+                        getString(\"intAttrNames\"),\n+                        new PropertyModel(mappingTO, \"intAttrName\"),\n+                        true);\n+                intAttrNames.setChoices(resourceSchemaNames);\n+                intAttrNames.setRequired(true);\n+                intAttrNames.setStyleShet(\n+                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+\n+                if (mappingTO.getIntMappingType() == null) {\n+                    intAttrNames.setChoices(Collections.EMPTY_LIST);\n+                } else {\n+                    switch (mappingTO.getIntMappingType()) {\n+                        case UserSchema:\n+                            intAttrNames.setChoices(uSchemaAttrNames);\n+                            break;\n \n-                                        index = i;\n-                                    }\n-                                }\n+                        case UserDerivedSchema:\n+                            intAttrNames.setChoices(\n+                                    uDerSchemaAttrNames);\n+                            break;\n \n-                                if (index != -1) {\n-                                    resourceTO.getMappings().remove(index);\n-                                    item.getParent().removeAll();\n-                                    target.add(mappingContainer);\n-                                }\n-                            }\n+                        case UserVirtualSchema:\n+                            intAttrNames.setChoices(\n+                                    uVirSchemaAttrNames);\n+                            break;\n \n-                            @Override\n-                            protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                                return new AjaxPreprocessingCallDecorator(\n-                                        super.getAjaxCallDecorator()) {\n-\n-                                    private static final long serialVersionUID =\n-                                            -7927968187160354605L;\n-\n-                                    @Override\n-                                    public CharSequence preDecorateScript(\n-                                            final CharSequence script) {\n-\n-                                        return \"if (confirm('\"\n-                                                + getString(\"confirmDelete\")\n-                                                + \"'))\"\n-                                                + \"{\" + script + \"} \"\n-                                                + \"else {this.checked = false;}\";\n-                                    }\n-                                };\n-                            }\n-                        });\n+                        case SyncopeUserId:\n+                            intAttrNames.setEnabled(false);\n+                            intAttrNames.setRequired(false);\n+                            intAttrNames.setChoices(\n+                                    Collections.EMPTY_LIST);\n+                            mappingTO.setIntAttrName(\"SyncopeUserId\");\n+                            break;\n \n-                        final AjaxDropDownChoicePanel intAttrNames =\n-                                new AjaxDropDownChoicePanel<String>(\n-                                \"intAttrNames\",\n-                                getString(\"intAttrNames\"),\n-                                new PropertyModel(mappingTO, \"intAttrName\"),\n-                                true);\n-                        intAttrNames.setChoices(resourceSchemaNames);\n-                        intAttrNames.setRequired(true);\n-                        intAttrNames.setStyleShet(\n-                                \"ui-widget-content ui-corner-all short_fixedsize\");\n+                        case Password:\n+                            intAttrNames.setEnabled(false);\n+                            intAttrNames.setRequired(false);\n+                            intAttrNames.setChoices(\n+                                    Collections.EMPTY_LIST);\n+                            mappingTO.setIntAttrName(\"Password\");\n+                            break;\n \n-                        if (mappingTO.getIntMappingType() == null) {\n-                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n-                        } else {\n-                            switch (mappingTO.getIntMappingType()) {\n-                                case UserSchema:\n-                                    intAttrNames.setChoices(uSchemaAttrNames);\n-                                    break;\n-\n-                                case UserDerivedSchema:\n-                                    intAttrNames.setChoices(\n-                                            uDerSchemaAttrNames);\n-                                    break;\n-\n-                                case UserVirtualSchema:\n-                                    intAttrNames.setChoices(\n-                                            uVirSchemaAttrNames);\n-                                    break;\n-\n-                                case SyncopeUserId:\n-                                    intAttrNames.setEnabled(false);\n-                                    intAttrNames.setRequired(false);\n-                                    intAttrNames.setChoices(\n-                                            Collections.EMPTY_LIST);\n-                                    mappingTO.setIntAttrName(\"SyncopeUserId\");\n-                                    break;\n-\n-                                case Password:\n-                                    intAttrNames.setEnabled(false);\n-                                    intAttrNames.setRequired(false);\n-                                    intAttrNames.setChoices(\n-                                            Collections.EMPTY_LIST);\n-                                    mappingTO.setIntAttrName(\"Password\");\n-                                    break;\n-\n-                                case Username:\n-                                    intAttrNames.setEnabled(false);\n-                                    intAttrNames.setRequired(false);\n-                                    intAttrNames.setChoices(\n-                                            Collections.EMPTY_LIST);\n-                                    mappingTO.setIntAttrName(\"Username\");\n-                                    break;\n-\n-                                default:\n-                                    intAttrNames.setChoices(\n-                                            Collections.EMPTY_LIST);\n-                            }\n-                        }\n-                        item.add(intAttrNames);\n-\n-                        final IntMappingTypesDropDownChoice mappingTypesPanel =\n-                                new IntMappingTypesDropDownChoice(\n-                                \"intMappingTypes\",\n-                                getString(\"intMappingTypes\"),\n-                                new PropertyModel<IntMappingType>(\n-                                mappingTO, \"intMappingType\"),\n-                                intAttrNames);\n-\n-                        mappingTypesPanel.setRequired(true);\n-                        mappingTypesPanel.setChoices(intMappingTypes.getObject());\n-                        mappingTypesPanel.setStyleShet(\n-                                \"ui-widget-content ui-corner-all short_fixedsize\");\n-                        item.add(mappingTypesPanel);\n-\n-                        final FieldPanel extAttrName;\n-\n-                        if (resourceSchemaNames.isEmpty()) {\n-                            extAttrName = new AjaxTextFieldPanel(\n-                                    \"extAttrName\", getString(\"extAttrNames\"),\n-                                    new PropertyModel<String>(mappingTO,\n-                                    \"extAttrName\"),\n-                                    true);\n+                        case Username:\n+                            intAttrNames.setEnabled(false);\n+                            intAttrNames.setRequired(false);\n+                            intAttrNames.setChoices(\n+                                    Collections.EMPTY_LIST);\n+                            mappingTO.setIntAttrName(\"Username\");\n+                            break;\n \n-                        } else {\n-                            extAttrName =\n-                                    new AjaxDropDownChoicePanel<String>(\n-                                    \"extAttrName\", getString(\"extAttrNames\"),\n-                                    new PropertyModel(mappingTO, \"extAttrName\"),\n-                                    true);\n-                            ((AjaxDropDownChoicePanel) extAttrName).setChoices(\n-                                    resourceSchemaNames);\n+                        default:\n+                            intAttrNames.setChoices(\n+                                    Collections.EMPTY_LIST);\n+                    }\n+                }\n+                item.add(intAttrNames);\n+\n+                final IntMappingTypesDropDownChoice mappingTypesPanel =\n+                        new IntMappingTypesDropDownChoice(\n+                        \"intMappingTypes\",\n+                        getString(\"intMappingTypes\"),\n+                        new PropertyModel<IntMappingType>(\n+                        mappingTO, \"intMappingType\"),\n+                        intAttrNames);\n+\n+                mappingTypesPanel.setRequired(true);\n+                mappingTypesPanel.setChoices(intMappingTypes.getObject());\n+                mappingTypesPanel.setStyleShet(\n+                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+                item.add(mappingTypesPanel);\n+\n+                final FieldPanel extAttrName;\n+\n+                if (resourceSchemaNames.isEmpty()) {\n+                    extAttrName = new AjaxTextFieldPanel(\n+                            \"extAttrName\", getString(\"extAttrNames\"),\n+                            new PropertyModel<String>(mappingTO,\n+                            \"extAttrName\"),\n+                            true);\n \n-                        }\n+                } else {\n+                    extAttrName =\n+                            new AjaxDropDownChoicePanel<String>(\n+                            \"extAttrName\", getString(\"extAttrNames\"),\n+                            new PropertyModel(mappingTO, \"extAttrName\"),\n+                            true);\n+                    ((AjaxDropDownChoicePanel) extAttrName).setChoices(\n+                            resourceSchemaNames);\n \n-                        boolean required = mappingTO != null\n-                                && !mappingTO.isAccountid()\n-                                && !mappingTO.isPassword();\n+                }\n \n-                        extAttrName.setRequired(required);\n-                        extAttrName.setEnabled(required);\n+                boolean required = mappingTO != null\n+                        && !mappingTO.isAccountid()\n+                        && !mappingTO.isPassword();\n \n-                        extAttrName.setStyleShet(\n-                                \"ui-widget-content ui-corner-all short_fixedsize\");\n-                        item.add(extAttrName);\n+                extAttrName.setRequired(required);\n+                extAttrName.setEnabled(required);\n \n-                        final AjaxTextFieldPanel mandatoryCondition =\n-                                new AjaxTextFieldPanel(\n-                                \"mandatoryCondition\",\n-                                getString(\"mandatoryCondition\"),\n-                                new PropertyModel(mappingTO,\n-                                \"mandatoryCondition\"),\n-                                true);\n+                extAttrName.setStyleShet(\n+                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+                item.add(extAttrName);\n \n-                        mandatoryCondition.setChoices(Arrays.asList(\n-                                new String[]{\"true\", \"false\"}));\n-\n-                        mandatoryCondition.setStyleShet(\n-                                \"ui-widget-content ui-corner-all short_fixedsize\");\n-\n-                        item.add(mandatoryCondition);\n-\n-                        final AjaxCheckBoxPanel accountId =\n-                                new AjaxCheckBoxPanel(\n-                                \"accountId\", getString(\"accountId\"),\n-                                new PropertyModel(mappingTO, \"accountid\"), false);\n-\n-                        accountId.getField().add(\n-                                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                                    private static final long serialVersionUID =\n-                                            -1107858522700306810L;\n-\n-                                    @Override\n-                                    protected void onUpdate(\n-                                            AjaxRequestTarget target) {\n-                                        extAttrName.setEnabled(\n-                                                !accountId.getModelObject()\n-                                                && !mappingTO.isPassword());\n-                                        extAttrName.setModelObject(null);\n-                                        extAttrName.setRequired(\n-                                                !accountId.getModelObject());\n-                                        target.add(extAttrName);\n-                                    }\n-                                });\n-\n-                        item.add(accountId);\n-\n-                        final AjaxCheckBoxPanel password =\n-                                new AjaxCheckBoxPanel(\n-                                \"password\", getString(\"password\"),\n-                                new PropertyModel(mappingTO, \"password\"), true);\n-\n-                        password.getField().add(\n-                                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                                    private static final long serialVersionUID =\n-                                            -1107858522700306810L;\n-\n-                                    @Override\n-                                    protected void onUpdate(\n-                                            AjaxRequestTarget target) {\n-                                        extAttrName.setEnabled(\n-                                                !mappingTO.isAccountid()\n-                                                && !password.getModelObject());\n-                                        extAttrName.setModelObject(null);\n-                                        extAttrName.setRequired(\n-                                                !password.getModelObject());\n-                                        target.add(extAttrName);\n-                                    }\n-                                });\n-\n-                        item.add(password);\n-                    }\n-                };\n+                final AjaxTextFieldPanel mandatoryCondition =\n+                        new AjaxTextFieldPanel(\n+                        \"mandatoryCondition\",\n+                        getString(\"mandatoryCondition\"),\n+                        new PropertyModel(mappingTO,\n+                        \"mandatoryCondition\"),\n+                        true);\n+\n+                mandatoryCondition.setChoices(Arrays.asList(\n+                        new String[]{\"true\", \"false\"}));\n+\n+                mandatoryCondition.setStyleShet(\n+                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+\n+                item.add(mandatoryCondition);\n+\n+                final AjaxCheckBoxPanel accountId =\n+                        new AjaxCheckBoxPanel(\n+                        \"accountId\", getString(\"accountId\"),\n+                        new PropertyModel(mappingTO, \"accountid\"), false);\n+\n+                accountId.getField().add(\n+                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                            private static final long serialVersionUID =\n+                                    -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(\n+                                    AjaxRequestTarget target) {\n+                                extAttrName.setEnabled(\n+                                        !accountId.getModelObject()\n+                                        && !mappingTO.isPassword());\n+                                extAttrName.setModelObject(null);\n+                                extAttrName.setRequired(\n+                                        !accountId.getModelObject());\n+                                target.add(extAttrName);\n+                            }\n+                        });\n+\n+                item.add(accountId);\n+\n+                final AjaxCheckBoxPanel password =\n+                        new AjaxCheckBoxPanel(\n+                        \"password\", getString(\"password\"),\n+                        new PropertyModel(mappingTO, \"password\"), true);\n+\n+                password.getField().add(\n+                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                            private static final long serialVersionUID =\n+                                    -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(\n+                                    AjaxRequestTarget target) {\n+                                extAttrName.setEnabled(\n+                                        !mappingTO.isAccountid()\n+                                        && !password.getModelObject());\n+                                extAttrName.setModelObject(null);\n+                                extAttrName.setRequired(\n+                                        !password.getModelObject());\n+                                target.add(extAttrName);\n+                            }\n+                        });\n+\n+                item.add(password);\n+            }\n+        };\n \n         mappings.setReuseItems(true);\n         mappingContainer.add(mappings);\n \n-        final AjaxButton addSchemaMappingBtn = new IndicatingAjaxButton(\n+        addSchemaMappingBtn = new IndicatingAjaxButton(\n                 \"addUserSchemaMappingBtn\", new ResourceModel(\"add\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n@@ -584,51 +612,112 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n \n                 final FieldPanel field;\n \n-                if (GUARDED_STRING.equals(\n+                boolean required = false;\n+\n+                boolean isArray = false;\n+\n+                if (GUARDED_STRING.equalsIgnoreCase(\n+                        property.getSchema().getType())\n+                        || GUARDED_BYTE_ARRAY.equalsIgnoreCase(\n                         property.getSchema().getType())) {\n \n                     field = new AjaxPasswordFieldPanel(\n-                            \"connPropAttrValue\",\n+                            \"panel\",\n                             label.getDefaultModelObjectAsString(),\n-                            new PropertyModel<String>(property,\n-                            \"value\"), true).setRequired(\n-                            property.getSchema().\n-                            isRequired()).setTitle(property.getSchema().\n-                            getHelpMessage());\n+                            new Model(),\n+                            true);\n+\n+                    ((PasswordTextField) field.getField()).setResetPassword(\n+                            false);\n+\n+                    required = property.getSchema().isRequired();\n+\n                 } else {\n+                    Class propertySchemaClass;\n \n-                    field = new AjaxTextFieldPanel(\n-                            \"connPropAttrValue\",\n-                            label.getDefaultModelObjectAsString(),\n-                            new PropertyModel<String>(property, \"value\"),\n-                            false).setRequired(property.getSchema().isRequired()).\n-                            setTitle(property.getSchema().getHelpMessage());\n+                    try {\n+                        propertySchemaClass = ClassUtils.forName(\n+                                property.getSchema().getType(),\n+                                ClassUtils.getDefaultClassLoader());\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error parsing attribute type\", e);\n+                        propertySchemaClass = String.class;\n+                    }\n \n-                    if (property.getSchema().isRequired()) {\n-                        field.addRequiredLabel();\n+                    if (NUMBER.contains(propertySchemaClass)) {\n+                        field = new AjaxNumberFieldPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                ClassUtils.resolvePrimitiveIfNecessary(\n+                                propertySchemaClass),\n+                                true);\n+\n+                        required = property.getSchema().isRequired();\n+                    } else if (Boolean.class.equals(propertySchemaClass)\n+                            || boolean.class.equals(propertySchemaClass)) {\n+                        field = new AjaxCheckBoxPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                true);\n+                    } else {\n+\n+                        field = new AjaxTextFieldPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                true);\n+\n+                        required = property.getSchema().isRequired();\n+                    }\n+\n+                    if (String[].class.equals(propertySchemaClass)) {\n+                        isArray = true;\n                     }\n                 }\n \n-                field.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+                field.setTitle(property.getSchema().getHelpMessage());\n \n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n+                if (isArray) {\n+                    field.removeRequiredLabel();\n \n-                            @Override\n-                            protected void onUpdate(AjaxRequestTarget target) {\n-                                mappings.removeAll();\n-                                addSchemaMappingBtn.setEnabled(\n-                                        resourceTO.getConnectorId() != null\n-                                        && resourceTO.getConnectorId() > 0);\n+                    if (property.getValues().isEmpty()) {\n+                        property.getValues().add(null);\n+                    }\n \n-                                updateResourceSchemaNames(resourceTO);\n+                    final MultiValueSelectorPanel multiFields =\n+                            new MultiValueSelectorPanel<String>(\n+                            \"panel\",\n+                            new PropertyModel<List<String>>(property, \"values\"),\n+                            String.class,\n+                            field,\n+                            true);\n \n-                                target.add(mappingContainer);\n-                            }\n-                        });\n+                    item.add(multiFields);\n+                } else {\n+                    if (required) {\n+                        field.addRequiredLabel();\n+                    }\n+\n+                    field.getField().add(\n+                            new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                                private static final long serialVersionUID =\n+                                        -1107858522700306810L;\n+\n+                                @Override\n+                                protected void onUpdate(\n+                                        final AjaxRequestTarget target) {\n+                                    send(getPage(), Broadcast.BREADTH,\n+                                            new MultiValueSelectorEvent(target));\n+                                }\n+                            });\n+\n+                    field.setNewModel(property.getValues());\n+                    item.add(field);\n+                }\n \n-                item.add(field);\n                 resourceTO.getConnectorConfigurationProperties().add(property);\n             }\n         });\n@@ -647,9 +736,10 @@ protected void onUpdate(AjaxRequestTarget target) {\n                                 && resourceTO.getConnectorId() > 0);\n \n                         updateResourceSchemaNames(resourceTO);\n-                        updateConnectorProperties(resourceTO.getConnectorId());\n-\n                         target.add(mappingContainer);\n+\n+                        updateConnectorProperties(\n+                                resourceTO.getConnectorId());\n                         target.add(connectorPropertiesContainer);\n                     }\n                 });\n@@ -806,4 +896,22 @@ public final void updateConnectorProperties(final Long connectorId) {\n             overridableConnectorProperties = Collections.emptySet();\n         }\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof MultiValueSelectorEvent) {\n+\n+            final AjaxRequestTarget target =\n+                    ((MultiValueSelectorEvent) event.getPayload()).getTarget();\n+\n+            mappings.removeAll();\n+\n+            addSchemaMappingBtn.setEnabled(\n+                    resourceTO.getConnectorId() != null\n+                    && resourceTO.getConnectorId() > 0);\n+\n+            updateResourceSchemaNames(resourceTO);\n+            target.add(mappingContainer);\n+        }\n+    }\n }"},{"sha":"97623d6c2a66d9d451f6cc141bcb5b43a4ac491a","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/MultiValueSelectorPanel.java","status":"modified","additions":59,"deletions":5,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1996620dd17f241a73bdcfb68494a849456adc5e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1996620dd17f241a73bdcfb68494a849456adc5e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java?ref=1996620dd17f241a73bdcfb68494a849456adc5e","patch":"@@ -17,7 +17,9 @@\n import java.io.Serializable;\n import java.util.List;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.list.ListItem;\n@@ -29,17 +31,36 @@\n \n     private static final long serialVersionUID = -6322397761456513324L;\n \n-    final ListView<E> view;\n+    ListView<E> view;\n \n-    final WebMarkupContainer container;\n+    WebMarkupContainer container;\n \n     public MultiValueSelectorPanel(\n             final String id,\n             final IModel<List<E>> model,\n             final Class reference,\n             final FieldPanel panelTemplate) {\n+        super(id, model);\n+        init(id, model, reference, panelTemplate, false);\n+\n+    }\n \n+    public MultiValueSelectorPanel(\n+            final String id,\n+            final IModel<List<E>> model,\n+            final Class reference,\n+            final FieldPanel panelTemplate,\n+            final boolean eventTemplate) {\n         super(id, model);\n+        init(id, model, reference, panelTemplate, eventTemplate);\n+    }\n+\n+    private void init(\n+            final String id,\n+            final IModel<List<E>> model,\n+            final Class reference,\n+            final FieldPanel panelTemplate,\n+            final boolean sendEvent) {\n \n         // -----------------------\n         // Object container definition\n@@ -58,6 +79,23 @@ protected void populateItem(final ListItem<E> item) {\n \n                 final FieldPanel fieldPanel = panelTemplate.clone();\n \n+                if (sendEvent) {\n+                    fieldPanel.getField().add(\n+                            new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                                private static final long serialVersionUID =\n+                                        -1107858522700306810L;\n+\n+                                @Override\n+                                protected void onUpdate(\n+                                        final AjaxRequestTarget target) {\n+\n+                                    send(getPage(), Broadcast.BREADTH,\n+                                            new MultiValueSelectorEvent(target));\n+                                }\n+                            });\n+                }\n+\n                 fieldPanel.setNewModel(item, reference);\n                 item.add(fieldPanel);\n \n@@ -70,8 +108,13 @@ protected void populateItem(final ListItem<E> item) {\n                     public void onClick(final AjaxRequestTarget target) {\n                         //Drop current component\n                         model.getObject().remove(item.getModelObject());\n-\n+                        fieldPanel.getField().clearInput();\n                         target.add(container);\n+\n+                        if (sendEvent) {\n+                            send(getPage(), Broadcast.BREADTH,\n+                                    new MultiValueSelectorEvent(target));\n+                        }\n                     }\n                 };\n \n@@ -93,10 +136,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         @Override\n                         public void onClick(final AjaxRequestTarget target) {\n-\n                             //Add current component\n                             model.getObject().add(null);\n-\n                             target.add(container);\n                         }\n                     };\n@@ -131,4 +172,17 @@ public MultiValueSelectorPanel<E> setModelObject(Serializable object) {\n         view.setModelObject((List<E>) object);\n         return this;\n     }\n+\n+    public static class MultiValueSelectorEvent {\n+\n+        final AjaxRequestTarget target;\n+\n+        public MultiValueSelectorEvent(final AjaxRequestTarget target) {\n+            this.target = target;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n }"},{"sha":"f530dcb2d102bffb03fd741dded6f2da2560e740","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1996620dd17f241a73bdcfb68494a849456adc5e/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1996620dd17f241a73bdcfb68494a849456adc5e/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=1996620dd17f241a73bdcfb68494a849456adc5e","patch":"@@ -236,7 +236,7 @@\n                                     <span wicket:id=\"connPropAttrSchema\">[connPropAttrSchema]</span>\n                                 </div>\n                                 <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                    <span wicket:id=\"connPropAttrValue\">[connPropAttrValue]</span>\n+                                    <span wicket:id=\"panel\">[connPropAttrValue]</span>\n                                 </div>\n                             </div>\n                         </div>"}]}