{"sha":"06fef3620a08a371fd590bf74a5410a9dd98f478","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA2ZmVmMzYyMGEwOGEzNzFmZDU5MGJmNzRhNTQxMGE5ZGQ5OGY0Nzg=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-12-13T13:16:18Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-12-13T13:16:18Z"},"message":"Some FindBugs improvements in the core","tree":{"sha":"d62cf16448f1835f867546cc4dc2fe8dae66a5e8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d62cf16448f1835f867546cc4dc2fe8dae66a5e8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/06fef3620a08a371fd590bf74a5410a9dd98f478","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/06fef3620a08a371fd590bf74a5410a9dd98f478","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/06fef3620a08a371fd590bf74a5410a9dd98f478","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/06fef3620a08a371fd590bf74a5410a9dd98f478/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"e9fa33703e97f738db468380eff8dd8f43d29c67","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9fa33703e97f738db468380eff8dd8f43d29c67","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e9fa33703e97f738db468380eff8dd8f43d29c67"}],"stats":{"total":73,"additions":49,"deletions":24},"files":[{"sha":"89ff590b716e50498dd741a66f4e4292aa94247b","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/attrvalue/validation/InvalidEntityException.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidEntityException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidEntityException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fattrvalue%2Fvalidation%2FInvalidEntityException.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -21,6 +21,7 @@\n import java.util.EnumSet;\n import java.util.HashMap;\n import java.util.Map;\n+import java.util.Map.Entry;\n import java.util.Set;\n import javax.validation.ConstraintViolation;\n import javax.validation.ValidationException;\n@@ -120,8 +121,8 @@ public final Map<Class<?>, Set<EntityViolationType>> getViolations() {\n     public String getMessage() {\n         StringBuilder sb = new StringBuilder();\n \n-        for (Class<?> entity : violations.keySet()) {\n-            sb.append(entity.getSimpleName()).append(' ').append(violations.get(entity).toString()).append(\", \");\n+        for (Entry<Class<?>, Set<EntityViolationType>> entry : violations.entrySet()) {\n+            sb.append(entry.getKey().getSimpleName()).append(' ').append(entry.getValue().toString()).append(\", \");\n         }\n         sb.delete(sb.lastIndexOf(\", \"), sb.length());\n "},{"sha":"2366016201a564d1bfc3947bd9e27eac88d33204","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConfDAO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -21,10 +21,12 @@\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.conf.JPAConf;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -68,9 +70,9 @@ public CPlainAttr find(final String key, final String defaultValue) {\n                 JPACPlainAttr newAttr = new JPACPlainAttr();\n                 newAttr.setSchema(schemaDAO.find(key));\n \n-                JPACPlainAttrValue attrValue;\n+                PlainAttrValue attrValue;\n                 if (newAttr.getSchema().isUniqueConstraint()) {\n-                    attrValue = new JPACPlainAttrValue();\n+                    attrValue = new JPACPlainAttrUniqueValue();\n                     ((PlainAttrUniqueValue) attrValue).setSchema(newAttr.getSchema());\n                 } else {\n                     attrValue = new JPACPlainAttrValue();"},{"sha":"cbc6414712494ba88a38f44f092f4474c8692f4a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAnnotatedEntity.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnnotatedEntity.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -93,7 +93,13 @@ public void setLastModifier(final String lastModifier) {\n \n     @Override\n     public Date getLastChangeDate() {\n-        return lastChangeDate == null ? creationDate : lastChangeDate;\n+        if (lastChangeDate != null) {\n+            return new Date(lastChangeDate.getTime());\n+        } else if (creationDate != null) {\n+            return new Date(creationDate.getTime());\n+        }\n+\n+        return null;\n     }\n \n     @Override"},{"sha":"c7da0aedec24ffb8cc499fa57a6bcbab99d24901","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAConnInstance.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAConnInstance.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -209,9 +209,9 @@ public Set<ConnectorCapability> getCapabilities() {\n     @Override\n     public Integer getConnRequestTimeout() {\n         // DEFAULT_TIMEOUT will be returned in case of null timeout:\n-        // * instances created by the content loader \n+        // * instances created by the content loader\n         // * or with a timeout nullified explicitely\n-        return connRequestTimeout == null ? DEFAULT_TIMEOUT : connRequestTimeout;\n+        return connRequestTimeout == null ? Integer.valueOf(DEFAULT_TIMEOUT) : connRequestTimeout;\n     }\n \n     @Override"},{"sha":"3a27e1b27e0aaabdaaf2cb916b2ec54e415bef7f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPASchedTask.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -57,12 +57,19 @@ public class JPASchedTask extends AbstractTask implements SchedTask {\n \n     @Override\n     public Date getStartAt() {\n-        return startAt;\n+        if (startAt != null) {\n+            return new Date(startAt.getTime());\n+        }\n+        return null;\n     }\n \n     @Override\n     public void setStartAt(final Date start) {\n-        this.startAt = start;\n+        if (start != null) {\n+            this.startAt = new Date(start.getTime());\n+        } else {\n+            this.startAt = null;\n+        }\n     }\n \n     @Override"},{"sha":"472afa32c196c8cce99263e6cb5a4b341d3d473e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUser.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -372,7 +372,7 @@ public void setChangePwdDate(final Date changePwdDate) {\n \n     @Override\n     public Integer getFailedLogins() {\n-        return failedLogins == null ? 0 : failedLogins;\n+        return failedLogins == null ? Integer.valueOf(0) : failedLogins;\n     }\n \n     @Override\n@@ -406,12 +406,19 @@ public void setLastRecertificator(final String lastRecertificator) {\n \n     @Override\n     public Date getLastRecertification() {\n-        return lastRecertification;\n+        if (lastRecertification != null) {\n+            return new Date(lastRecertification.getTime());\n+        }\n+        return null;\n     }\n \n     @Override\n     public void setLastRecertification(final Date lastRecertification) {\n-        this.lastRecertification = lastRecertification;\n+        if (lastRecertification != null) {\n+            this.lastRecertification = new Date(lastRecertification.getTime());\n+        } else {\n+            this.lastRecertification = null;\n+        }\n     }\n \n     @Override"},{"sha":"18227441994cb7d40b15e8e3f629950f5a483c30","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/cache/VirAttrCacheValue.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fcache%2FVirAttrCacheValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fcache%2FVirAttrCacheValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fcache%2FVirAttrCacheValue.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -60,7 +60,10 @@ public void setValues(final Collection<Object> values) {\n     }\n \n     public Date getCreationDate() {\n-        return creationDate;\n+        if (creationDate != null) {\n+            return new Date(creationDate.getTime());\n+        }\n+        return null;\n     }\n \n     public void forceExpiring() {\n@@ -72,10 +75,17 @@ public List<String> getValues() {\n     }\n \n     public Date getLastAccessDate() {\n-        return lastAccessDate;\n+        if (lastAccessDate != null) {\n+            return new Date(lastAccessDate.getTime());\n+        }\n+        return null;\n     }\n \n     public void setLastAccessDate(final Date lastAccessDate) {\n-        this.lastAccessDate = lastAccessDate;\n+        if (lastAccessDate != null) {\n+            this.lastAccessDate = new Date(lastAccessDate.getTime());\n+        } else {\n+            this.lastAccessDate = null;\n+        }\n     }\n }"},{"sha":"a62444ef60725560e3a3de1d028fd60dc1b13a98","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -318,9 +318,7 @@ public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, f\n         try {\n             return future == null ? null : future.get(connInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n-            if (future != null) {\n-                future.cancel(true);\n-            }\n+            future.cancel(true);\n             throw new TimeoutException(\"Request timeout\");\n         } catch (Exception e) {\n             LOG.error(\"Connector request execution failure\", e);"},{"sha":"a9dc2cc5d8965fcaf91d607753c4ed792207ef98","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/PolicyDataBinderImpl.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/06fef3620a08a371fd590bf74a5410a9dd98f478/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java?ref=06fef3620a08a371fd590bf74a5410a9dd98f478","patch":"@@ -71,8 +71,6 @@ private <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO po\n         if (policyTO instanceof PasswordPolicyTO) {\n             if (result == null) {\n                 result = (T) entityFactory.newEntity(PasswordPolicy.class);\n-            } else if (!(policyTO instanceof PasswordPolicyTO)) {\n-                throwInvalidPolicy(policy, policyTO);\n             }\n \n             PasswordPolicy passwordPolicy = PasswordPolicy.class.cast(result);\n@@ -88,8 +86,6 @@ private <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO po\n         } else if (policyTO instanceof AccountPolicyTO) {\n             if (result == null) {\n                 result = (T) entityFactory.newEntity(AccountPolicy.class);\n-            } else if (!(policyTO instanceof AccountPolicyTO)) {\n-                throwInvalidPolicy(policy, policyTO);\n             }\n \n             AccountPolicy accountPolicy = AccountPolicy.class.cast(result);\n@@ -115,8 +111,6 @@ private <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO po\n         } else if (policyTO instanceof PullPolicyTO) {\n             if (result == null) {\n                 result = (T) entityFactory.newEntity(PullPolicy.class);\n-            } else if (!(policyTO instanceof PullPolicyTO)) {\n-                throwInvalidPolicy(policy, policyTO);\n             }\n \n             ((PullPolicy) result).setSpecification(((PullPolicyTO) policyTO).getSpecification());"}]}