{"sha":"ad4546ee23db9f224aca15e765d0414174bf2d7c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFkNDU0NmVlMjNkYjlmMjI0YWNhMTVlNzY1ZDA0MTQxNzRiZjJkN2M=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-12-14T10:25:25Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-12-14T10:25:25Z"},"message":"Final FindBugs improvements","tree":{"sha":"bf431275d1d80b59e07e153f41732f8ea31777ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bf431275d1d80b59e07e153f41732f8ea31777ea"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ad4546ee23db9f224aca15e765d0414174bf2d7c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ad4546ee23db9f224aca15e765d0414174bf2d7c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ad4546ee23db9f224aca15e765d0414174bf2d7c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ad4546ee23db9f224aca15e765d0414174bf2d7c/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"40b417883ac863854fedd9cc4b45c93c4ec93f75","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/40b417883ac863854fedd9cc4b45c93c4ec93f75","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/40b417883ac863854fedd9cc4b45c93c4ec93f75"}],"stats":{"total":70,"additions":37,"deletions":33},"files":[{"sha":"5abf4ae7181b1412fb644fbf68af1ec2daf90f5b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/MailTemplateLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FMailTemplateLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FMailTemplateLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FMailTemplateLogic.java?ref=ad4546ee23db9f224aca15e765d0414174bf2d7c","patch":"@@ -169,14 +169,14 @@ protected MailTemplateTO resolveReference(final Method method, final Object... a\n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n                 if (args[i] instanceof Long) {\n-                    key = (String) args[i];\n+                    key = ((Long) args[i]).toString();\n                 } else if (args[i] instanceof MailTemplateTO) {\n                     key = ((MailTemplateTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if ((key != null) && !key.equals(\"0\")) {\n             try {\n                 return getMailTemplateTO(key);\n             } catch (Throwable ignore) {"},{"sha":"a1d8bfe6ed356a6f5ec5a272e55498b864495c16","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReportTemplateLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportTemplateLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportTemplateLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportTemplateLogic.java?ref=ad4546ee23db9f224aca15e765d0414174bf2d7c","patch":"@@ -182,14 +182,14 @@ protected ReportTemplateTO resolveReference(final Method method, final Object...\n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n                 if (args[i] instanceof Long) {\n-                    key = (String) args[i];\n+                    key = ((Long) args[i]).toString();\n                 } else if (args[i] instanceof ReportTemplateTO) {\n                     key = ((ReportTemplateTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if ((key != null) && !key.equals(\"0\")) {\n             try {\n                 return getReportTemplateTO(key);\n             } catch (Throwable ignore) {"},{"sha":"b5a41daaa2268e4ba2f50be548c57c1b1e2e86ae","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=ad4546ee23db9f224aca15e765d0414174bf2d7c","patch":"@@ -520,7 +520,7 @@ public ProvisioningResult<UserTO> provision(\n \n     @Override\n     protected UserTO resolveReference(final Method method, final Object... args) throws UnresolvedReferenceException {\n-        Object key = null;\n+        String key = null;\n \n         if (!\"confirmPasswordReset\".equals(method.getName()) && ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n@@ -534,7 +534,7 @@ protected UserTO resolveReference(final Method method, final Object... args) thr\n             }\n         }\n \n-        if (key instanceof String) {\n+        if (key != null) {\n             try {\n                 return binder.getUserTO((String) key);\n             } catch (Throwable ignore) {"},{"sha":"d8b08f19152468c3ce213b613fa417c503b5523a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/JobManagerImpl.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FJobManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FJobManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FJobManagerImpl.java?ref=ad4546ee23db9f224aca15e765d0414174bf2d7c","patch":"@@ -20,6 +20,7 @@\n \n import java.sql.Connection;\n import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.util.Date;\n import java.util.HashMap;\n@@ -115,17 +116,20 @@ private boolean isRunningElsewhere(final JobKey jobKey) throws SchedulerExceptio\n \n         Connection conn = DataSourceUtils.getConnection(domainsHolder.getDomains().get(SyncopeConstants.MASTER_DOMAIN));\n         PreparedStatement stmt = null;\n+        ResultSet resultSet = null;\n         try {\n             stmt = conn.prepareStatement(\n                     \"SELECT 1 FROM \" + Constants.DEFAULT_TABLE_PREFIX + \"FIRED_TRIGGERS \"\n                     + \"WHERE JOB_NAME = ? AND JOB_GROUP = ?\");\n             stmt.setString(1, jobKey.getName());\n             stmt.setString(2, jobKey.getGroup());\n \n-            return stmt.executeQuery().next();\n+            resultSet = stmt.executeQuery();\n+            return resultSet.next();\n         } catch (SQLException e) {\n             throw new SchedulerException(e);\n         } finally {\n+            IOUtil.quietClose(resultSet);\n             IOUtil.quietClose(stmt);\n             IOUtil.quietClose(conn);\n         }"},{"sha":"4bc4a376aeec29edce092b483f2543610655bdf0","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/GroupReportlet.java","status":"modified","additions":25,"deletions":23,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java?ref=ad4546ee23db9f224aca15e765d0414174bf2d7c","patch":"@@ -246,32 +246,34 @@ private void doExtractConf(final ContentHandler handler) throws SAXException {\n         handler.startElement(\"\", \"\", \"configurations\", null);\n         handler.startElement(\"\", \"\", \"groupAttributes\", atts);\n \n-        for (Feature feature : conf.getFeatures()) {\n-            atts.clear();\n-            handler.startElement(\"\", \"\", \"feature\", atts);\n-            handler.characters(feature.name().toCharArray(), 0, feature.name().length());\n-            handler.endElement(\"\", \"\", \"feature\");\n-        }\n+        if (conf != null) {\n+            for (Feature feature : conf.getFeatures()) {\n+                atts.clear();\n+                handler.startElement(\"\", \"\", \"feature\", atts);\n+                handler.characters(feature.name().toCharArray(), 0, feature.name().length());\n+                handler.endElement(\"\", \"\", \"feature\");\n+            }\n \n-        for (String attr : conf.getPlainAttrs()) {\n-            atts.clear();\n-            handler.startElement(\"\", \"\", \"attribute\", atts);\n-            handler.characters(attr.toCharArray(), 0, attr.length());\n-            handler.endElement(\"\", \"\", \"attribute\");\n-        }\n+            for (String attr : conf.getPlainAttrs()) {\n+                atts.clear();\n+                handler.startElement(\"\", \"\", \"attribute\", atts);\n+                handler.characters(attr.toCharArray(), 0, attr.length());\n+                handler.endElement(\"\", \"\", \"attribute\");\n+            }\n \n-        for (String derAttr : conf.getDerAttrs()) {\n-            atts.clear();\n-            handler.startElement(\"\", \"\", \"derAttribute\", atts);\n-            handler.characters(derAttr.toCharArray(), 0, derAttr.length());\n-            handler.endElement(\"\", \"\", \"derAttribute\");\n-        }\n+            for (String derAttr : conf.getDerAttrs()) {\n+                atts.clear();\n+                handler.startElement(\"\", \"\", \"derAttribute\", atts);\n+                handler.characters(derAttr.toCharArray(), 0, derAttr.length());\n+                handler.endElement(\"\", \"\", \"derAttribute\");\n+            }\n \n-        for (String virAttr : conf.getVirAttrs()) {\n-            atts.clear();\n-            handler.startElement(\"\", \"\", \"virAttribute\", atts);\n-            handler.characters(virAttr.toCharArray(), 0, virAttr.length());\n-            handler.endElement(\"\", \"\", \"virAttribute\");\n+            for (String virAttr : conf.getVirAttrs()) {\n+                atts.clear();\n+                handler.startElement(\"\", \"\", \"virAttribute\", atts);\n+                handler.characters(virAttr.toCharArray(), 0, virAttr.length());\n+                handler.endElement(\"\", \"\", \"virAttribute\");\n+            }\n         }\n \n         handler.endElement(\"\", \"\", \"groupAttributes\");"},{"sha":"f19aa871abde6b9163a12299f9f3d847d60e4099","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ad4546ee23db9f224aca15e765d0414174bf2d7c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=ad4546ee23db9f224aca15e765d0414174bf2d7c","patch":"@@ -25,9 +25,7 @@\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n-import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.TaskService;\n@@ -50,7 +48,7 @@ protected AbstractExecutableLogic<?> getExecutableLogic() {\n     @Override\n     public Response create(final SchedTaskTO taskTO) {\n         SchedTaskTO createdTask;\n-        if (taskTO instanceof PullTaskTO || taskTO instanceof PushTaskTO || taskTO instanceof SchedTaskTO) {\n+        if (taskTO != null) {\n             createdTask = logic.createSchedTask(taskTO);\n         } else {\n             throw new BadRequestException();"}]}