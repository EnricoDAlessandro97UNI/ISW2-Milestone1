{"sha":"df0818aa20e1ac821dd04db0d63348b439a9f5da","node_id":"C_kwDOJfYA1toAKGRmMDgxOGFhMjBlMWFjODIxZGQwNGRiMGQ2MzM0OGI0MzlhOWY1ZGE","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-02-24T10:23:35Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-02-24T10:30:11Z"},"message":"[SYNCOPE-1735] Avoid using LoadableDetachableModel inside Spring beans","tree":{"sha":"fba838aa44bc24993f4a074526425c4d7cd94226","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fba838aa44bc24993f4a074526425c4d7cd94226"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/df0818aa20e1ac821dd04db0d63348b439a9f5da","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df0818aa20e1ac821dd04db0d63348b439a9f5da","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df0818aa20e1ac821dd04db0d63348b439a9f5da","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df0818aa20e1ac821dd04db0d63348b439a9f5da/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b2c4d7a27c474d0ddb1fa4b8d1449338be872e04","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b2c4d7a27c474d0ddb1fa4b8d1449338be872e04","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b2c4d7a27c474d0ddb1fa4b8d1449338be872e04"}],"stats":{"total":122,"additions":38,"deletions":84},"files":[{"sha":"975a42d34e1edbcb6d11fdf5af0f0a687c06c36f","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppModalPanelBuilder.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java?ref=df0818aa20e1ac821dd04db0d63348b439a9f5da","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Comparator;\n import java.util.Iterator;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n@@ -84,7 +85,7 @@\n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ACCESS).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         }\n     };\n \n@@ -95,7 +96,7 @@ protected Map<String, String> load() {\n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ATTR_RELEASE).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         }\n     };\n \n@@ -106,7 +107,7 @@ protected Map<String, String> load() {\n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.AUTH).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         }\n     };\n \n@@ -182,21 +183,21 @@ protected Iterator<String> getChoices(final String input) {\n \n             AjaxDropDownChoicePanel<String> accessPolicy = new AjaxDropDownChoicePanel<>(\n                     \"field\", \"accessPolicy\", new PropertyModel<>(clientAppTO, \"accessPolicy\"), false);\n-            accessPolicy.setChoiceRenderer(new PolicyRenderer(accessPolicies));\n+            accessPolicy.setChoiceRenderer(new PolicyRenderer(accessPolicies.getObject()));\n             accessPolicy.setChoices(new ArrayList<>(accessPolicies.getObject().keySet()));\n             ((AbstractSingleSelectChoice<?>) accessPolicy.getField()).setNullValid(true);\n             fields.add(accessPolicy);\n \n             AjaxDropDownChoicePanel<String> attrReleasePolicy = new AjaxDropDownChoicePanel<>(\n                     \"field\", \"attrReleasePolicy\", new PropertyModel<>(clientAppTO, \"attrReleasePolicy\"), false);\n-            attrReleasePolicy.setChoiceRenderer(new PolicyRenderer(attrReleasePolicies));\n+            attrReleasePolicy.setChoiceRenderer(new PolicyRenderer(attrReleasePolicies.getObject()));\n             attrReleasePolicy.setChoices(new ArrayList<>(attrReleasePolicies.getObject().keySet()));\n             ((AbstractSingleSelectChoice<?>) attrReleasePolicy.getField()).setNullValid(true);\n             fields.add(attrReleasePolicy);\n \n             AjaxDropDownChoicePanel<String> authPolicy = new AjaxDropDownChoicePanel<>(\n                     \"field\", \"authPolicy\", new PropertyModel<>(clientAppTO, \"authPolicy\"), false);\n-            authPolicy.setChoiceRenderer(new PolicyRenderer(authPolicies));\n+            authPolicy.setChoiceRenderer(new PolicyRenderer(authPolicies.getObject()));\n             authPolicy.setChoices(new ArrayList<>(authPolicies.getObject().keySet()));\n             authPolicy.setRequired(true);\n             ((AbstractSingleSelectChoice<?>) authPolicy.getField()).setNullValid(true);"},{"sha":"bd358e2c47da627537e3f08d2b0d4d707ab44b59","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMRealmPolicyProvider.java","status":"modified","additions":10,"deletions":38,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMRealmPolicyProvider.java?ref=df0818aa20e1ac821dd04db0d63348b439a9f5da","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.commons;\n \n import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n@@ -29,79 +30,50 @@\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.markup.html.form.AbstractSingleSelectChoice;\n import org.apache.wicket.markup.repeater.RepeatingView;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n \n public class AMRealmPolicyProvider extends IdRepoRealmPolicyProvider {\n \n     private static final long serialVersionUID = 1671878489700L;\n \n-    private final IModel<Map<String, String>> accessPolicies = new LoadableDetachableModel<>() {\n-\n-        private static final long serialVersionUID = -2012833443695917883L;\n-\n-        @Override\n-        protected Map<String, String> load() {\n-            return PolicyRestClient.list(PolicyType.ACCESS).stream().\n-                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n-        }\n-    };\n-\n-    private final IModel<Map<String, String>> attrReleasePolicies = new LoadableDetachableModel<>() {\n-\n-        private static final long serialVersionUID = -2012833443695917883L;\n-\n-        @Override\n-        protected Map<String, String> load() {\n-            return PolicyRestClient.list(PolicyType.ATTR_RELEASE).stream().\n-                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n-        }\n-    };\n-\n-    private final IModel<Map<String, String>> authPolicies = new LoadableDetachableModel<>() {\n-\n-        private static final long serialVersionUID = -2012833443695917883L;\n-\n-        @Override\n-        protected Map<String, String> load() {\n-            return PolicyRestClient.list(PolicyType.AUTH).stream().\n-                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n-        }\n-    };\n-\n     @Override\n     public void add(final RealmTO realmTO, final RepeatingView view) {\n         super.add(realmTO, view);\n \n+        Map<String, String> accessPolicies = PolicyRestClient.list(PolicyType.ACCESS).stream().\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         AjaxDropDownChoicePanel<String> accessPolicy = new AjaxDropDownChoicePanel<>(\n                 view.newChildId(),\n                 new ResourceModel(\"accessPolicy\", \"accessPolicy\").getObject(),\n                 new PropertyModel<>(realmTO, \"accessPolicy\"),\n                 false);\n         accessPolicy.setChoiceRenderer(new PolicyRenderer(accessPolicies));\n-        accessPolicy.setChoices(new ArrayList<>(accessPolicies.getObject().keySet()));\n+        accessPolicy.setChoices(new ArrayList<>(accessPolicies.keySet()));\n         ((AbstractSingleSelectChoice<?>) accessPolicy.getField()).setNullValid(true);\n         view.add(accessPolicy);\n \n+        Map<String, String> attrReleasePolicies = PolicyRestClient.list(PolicyType.ATTR_RELEASE).stream().\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         AjaxDropDownChoicePanel<String> attrReleasePolicy = new AjaxDropDownChoicePanel<>(\n                 view.newChildId(),\n                 new ResourceModel(\"attrReleasePolicy\", \"attrReleasePolicy\").getObject(),\n                 new PropertyModel<>(realmTO, \"attrReleasePolicy\"),\n                 false);\n         attrReleasePolicy.setChoiceRenderer(new PolicyRenderer(attrReleasePolicies));\n-        attrReleasePolicy.setChoices(new ArrayList<>(attrReleasePolicies.getObject().keySet()));\n+        attrReleasePolicy.setChoices(new ArrayList<>(attrReleasePolicies.keySet()));\n         ((AbstractSingleSelectChoice<?>) attrReleasePolicy.getField()).setNullValid(true);\n         view.add(attrReleasePolicy);\n \n+        Map<String, String> authPolicies = PolicyRestClient.list(PolicyType.AUTH).stream().\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         AjaxDropDownChoicePanel<String> authPolicy = new AjaxDropDownChoicePanel<>(\n                 view.newChildId(),\n                 new ResourceModel(\"authPolicy\", \"authPolicy\").getObject(),\n                 new PropertyModel<>(realmTO, \"authPolicy\"),\n                 false);\n         authPolicy.setChoiceRenderer(new PolicyRenderer(authPolicies));\n-        authPolicy.setChoices(new ArrayList<>(authPolicies.getObject().keySet()));\n+        authPolicy.setChoices(authPolicies.keySet().stream().collect(Collectors.toList()));\n         ((AbstractSingleSelectChoice<?>) authPolicy.getField()).setNullValid(true);\n         view.add(authPolicy);\n     }"},{"sha":"ed1bf1753e3357bb02aa68cd749392e3e0aba11a","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceSecurityPanel.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java?ref=df0818aa20e1ac821dd04db0d63348b439a9f5da","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wizards.resources;\n \n import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n@@ -46,7 +47,7 @@ public class ResourceSecurityPanel extends WizardStep {\n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.PASSWORD).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         }\n     };\n \n@@ -57,7 +58,7 @@ protected Map<String, String> load() {\n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.ACCOUNT).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         }\n     };\n \n@@ -68,7 +69,7 @@ protected Map<String, String> load() {\n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.PROPAGATION).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         }\n     };\n \n@@ -79,7 +80,7 @@ protected Map<String, String> load() {\n         @Override\n         protected Map<String, String> load() {\n             return PolicyRestClient.list(PolicyType.PULL).stream().\n-                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n+                    collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         }\n     };\n \n@@ -111,7 +112,7 @@ public ResourceSecurityPanel(final ResourceTO resourceTO) {\n                 new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n                 new PropertyModel<>(resourceTO, \"passwordPolicy\"),\n                 false);\n-        passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies));\n+        passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies.getObject()));\n         passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) passwordPolicy.getField()).setNullValid(true);\n         container.add(passwordPolicy);\n@@ -125,7 +126,7 @@ public ResourceSecurityPanel(final ResourceTO resourceTO) {\n                 new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n                 new PropertyModel<>(resourceTO, \"accountPolicy\"),\n                 false);\n-        accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies));\n+        accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies.getObject()));\n         accountPolicy.setChoices(new ArrayList<>(accountPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) accountPolicy.getField()).setNullValid(true);\n         container.add(accountPolicy);\n@@ -139,7 +140,7 @@ public ResourceSecurityPanel(final ResourceTO resourceTO) {\n                 new ResourceModel(\"propagationPolicy\", \"propagationPolicy\").getObject(),\n                 new PropertyModel<>(resourceTO, \"propagationPolicy\"),\n                 false);\n-        propagationPolicy.setChoiceRenderer(new PolicyRenderer(propagationPolicies));\n+        propagationPolicy.setChoiceRenderer(new PolicyRenderer(propagationPolicies.getObject()));\n         propagationPolicy.setChoices(new ArrayList<>(propagationPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) propagationPolicy.getField()).setNullValid(true);\n         container.add(propagationPolicy);\n@@ -153,7 +154,7 @@ public ResourceSecurityPanel(final ResourceTO resourceTO) {\n                 new ResourceModel(\"pullPolicy\", \"pullPolicy\").getObject(),\n                 new PropertyModel<>(resourceTO, \"pullPolicy\"),\n                 false);\n-        pullPolicy.setChoiceRenderer(new PolicyRenderer(pullPolicies));\n+        pullPolicy.setChoiceRenderer(new PolicyRenderer(pullPolicies.getObject()));\n         pullPolicy.setChoices(new ArrayList<>(pullPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) pullPolicy.getField()).setNullValid(true);\n         container.add(pullPolicy);\n@@ -167,7 +168,7 @@ public ResourceSecurityPanel(final ResourceTO resourceTO) {\n                 new ResourceModel(\"pushPolicy\", \"pushPolicy\").getObject(),\n                 new PropertyModel<>(resourceTO, \"pushPolicy\"),\n                 false);\n-        pushPolicy.setChoiceRenderer(new PolicyRenderer(pushPolicies));\n+        pushPolicy.setChoiceRenderer(new PolicyRenderer(pushPolicies.getObject()));\n         pushPolicy.setChoices(new ArrayList<>(pushPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) pushPolicy.getField()).setNullValid(true);\n         container.add(pushPolicy);"},{"sha":"c983e030e483b4457f896c22b4b5b5b0748ac913","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/IdRepoRealmPolicyProvider.java","status":"modified","additions":8,"deletions":27,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdRepoRealmPolicyProvider.java?ref=df0818aa20e1ac821dd04db0d63348b439a9f5da","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.commons;\n \n import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n@@ -29,56 +30,36 @@\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.markup.html.form.AbstractSingleSelectChoice;\n import org.apache.wicket.markup.repeater.RepeatingView;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n \n public class IdRepoRealmPolicyProvider implements RealmPolicyProvider {\n \n-    private static final long serialVersionUID = 1L;\n-\n-    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<>() {\n-\n-        private static final long serialVersionUID = -2012833443695917883L;\n-\n-        @Override\n-        protected Map<String, String> load() {\n-            return PolicyRestClient.list(PolicyType.ACCOUNT).stream().\n-                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n-        }\n-    };\n-\n-    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<>() {\n-\n-        private static final long serialVersionUID = -2012833443695917883L;\n-\n-        @Override\n-        protected Map<String, String> load() {\n-            return PolicyRestClient.list(PolicyType.PASSWORD).stream().\n-                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName));\n-        }\n-    };\n+    private static final long serialVersionUID = 2933826125264961282L;\n \n     @Override\n     public void add(final RealmTO realmTO, final RepeatingView view) {\n+        Map<String, String> accountPolicies = PolicyRestClient.list(PolicyType.ACCOUNT).stream().\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         AjaxDropDownChoicePanel<String> accountPolicy = new AjaxDropDownChoicePanel<>(\n                 view.newChildId(),\n                 new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n                 new PropertyModel<>(realmTO, \"accountPolicy\"),\n                 false);\n         accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies));\n-        accountPolicy.setChoices(new ArrayList<>(accountPolicies.getObject().keySet()));\n+        accountPolicy.setChoices(new ArrayList<>(accountPolicies.keySet()));\n         ((AbstractSingleSelectChoice<?>) accountPolicy.getField()).setNullValid(true);\n         view.add(accountPolicy);\n \n+        Map<String, String> passwordPolicies = PolicyRestClient.list(PolicyType.PASSWORD).stream().\n+                collect(Collectors.toMap(PolicyTO::getKey, PolicyTO::getName, (v1, v2) -> v1, LinkedHashMap::new));\n         AjaxDropDownChoicePanel<String> passwordPolicy = new AjaxDropDownChoicePanel<>(\n                 view.newChildId(),\n                 new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n                 new PropertyModel<>(realmTO, \"passwordPolicy\"),\n                 false);\n         passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies));\n-        passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));\n+        passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.keySet()));\n         ((AbstractSingleSelectChoice<?>) passwordPolicy.getField()).setNullValid(true);\n         view.add(passwordPolicy);\n     }"},{"sha":"3d560b5967c696fcd13ec2ffb618662fa27b4e2b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/PolicyRenderer.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df0818aa20e1ac821dd04db0d63348b439a9f5da/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java?ref=df0818aa20e1ac821dd04db0d63348b439a9f5da","patch":"@@ -20,22 +20,21 @@\n \n import java.util.Map;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n-import org.apache.wicket.model.IModel;\n \n public class PolicyRenderer extends ChoiceRenderer<String> {\n \n     private static final long serialVersionUID = 8060500161321947000L;\n \n-    private final IModel<Map<String, String>> policies;\n+    private final Map<String, String> policies;\n \n-    public PolicyRenderer(final IModel<Map<String, String>> policies) {\n+    public PolicyRenderer(final Map<String, String> policies) {\n         super();\n         this.policies = policies;\n     }\n \n     @Override\n     public Object getDisplayValue(final String object) {\n-        return policies.getObject().get(object);\n+        return policies.get(object);\n     }\n \n     @Override"}]}