{"sha":"30a1e729513160d9af362b1486b9769529a3d894","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMwYTFlNzI5NTEzMTYwZDlhZjM2MmIxNDg2Yjk3Njk1MjlhM2Q4OTQ=","commit":{"author":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-31T10:58:31Z"},"committer":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-31T10:58:31Z"},"message":"[SYNCOPE-231] Added WorkflowServiceImpl and Test\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440904 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a74f1ce1d03982ab868ba0ace18bfd9b8d3551bf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a74f1ce1d03982ab868ba0ace18bfd9b8d3551bf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/30a1e729513160d9af362b1486b9769529a3d894","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/30a1e729513160d9af362b1486b9769529a3d894","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/30a1e729513160d9af362b1486b9769529a3d894","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/30a1e729513160d9af362b1486b9769529a3d894/comments","author":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"committer":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"parents":[{"sha":"2a2e51b8d85b80b46502d8fce0e692585ac32f95","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a2e51b8d85b80b46502d8fce0e692585ac32f95","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2a2e51b8d85b80b46502d8fce0e692585ac32f95"}],"stats":{"total":65,"additions":37,"deletions":28},"files":[{"sha":"ed27f9136c2ca8fdf4dfe455df9a2fe723b8fc2d","filename":"build-tools/src/main/resources/org/apache/syncope/checkstyle.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/30a1e729513160d9af362b1486b9769529a3d894/build-tools%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fcheckstyle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/30a1e729513160d9af362b1486b9769529a3d894/build-tools%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fcheckstyle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fcheckstyle.xml?ref=30a1e729513160d9af362b1486b9769529a3d894","patch":"@@ -177,7 +177,7 @@ under the License.\n         <!-- Checks for common coding problems               -->\n         <!-- See http://checkstyle.sf.net/config_coding.html -->\n <!--        <module name=\"AvoidInlineConditionals\"/>-->\n-    <module name=\"DoubleCheckedLocking\"/>    <!-- MY FAVOURITE -->\n+    <!--module name=\"DoubleCheckedLocking\"/-->    <!-- MY FAVOURITE -->\n     <module name=\"EmptyStatement\"/>\n     <module name=\"EqualsHashCode\"/>\n     <module name=\"HiddenField\">"},{"sha":"edd9b702282e283e4932ff5fd6cb54c5dc737ae4","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/WorkflowServiceProxy.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/30a1e729513160d9af362b1486b9769529a3d894/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FWorkflowServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/30a1e729513160d9af362b1486b9769529a3d894/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FWorkflowServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FWorkflowServiceProxy.java?ref=30a1e729513160d9af362b1486b9769529a3d894","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\r\n import org.apache.syncope.common.services.WorkflowService;\r\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\r\n+import org.apache.syncope.common.types.AttributableType;\r\n import org.springframework.web.client.RestTemplate;\r\n \r\n public class WorkflowServiceProxy extends SpringServiceProxy implements WorkflowService {\r\n@@ -31,17 +32,19 @@ public WorkflowServiceProxy(final String baseUrl, final RestTemplate restTemplat\n     }\r\n \r\n     @Override\r\n-    public WorkflowDefinitionTO getDefinition(final String type) {\r\n-        return getRestTemplate().getForObject(baseUrl + \"workflow/definition/\" + type, WorkflowDefinitionTO.class);\r\n+    public WorkflowDefinitionTO getDefinition(final AttributableType type) {\r\n+        return getRestTemplate().getForObject(baseUrl + \"workflow/definition/\" + type.name().toLowerCase(),\r\n+                WorkflowDefinitionTO.class);\r\n     }\r\n \r\n     @Override\r\n-    public void updateDefinition(final String type, final WorkflowDefinitionTO definition) {\r\n-        getRestTemplate().put(baseUrl + \"workflow/definition/\" + type, definition);\r\n+    public void updateDefinition(final AttributableType type, final WorkflowDefinitionTO definition) {\r\n+        getRestTemplate().put(baseUrl + \"workflow/definition/\" + type.name().toLowerCase(), definition);\r\n     }\r\n \r\n     @Override\r\n-    public List<String> getDefinedTasks(final String type) {\r\n-        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"workflow/tasks/{type}\", String[].class, type));\r\n+    public List<String> getDefinedTasks(final AttributableType type) {\r\n+        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"workflow/tasks/{type}\", String[].class,\r\n+                type.name().toLowerCase()));\r\n     }\r\n }\r"},{"sha":"c19bb4dbc2a995a37fdb32e2283fb9fd061c2b09","filename":"common/src/main/java/org/apache/syncope/common/services/WorkflowService.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/30a1e729513160d9af362b1486b9769529a3d894/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/30a1e729513160d9af362b1486b9769529a3d894/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java?ref=30a1e729513160d9af362b1486b9769529a3d894","patch":"@@ -25,19 +25,20 @@\n import javax.ws.rs.PathParam;\r\n \r\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\r\n+import org.apache.syncope.common.types.AttributableType;\r\n \r\n @Path(\"workflows\")\r\n public interface WorkflowService {\r\n \r\n     @GET\r\n     @Path(\"{kind}\")\r\n-    WorkflowDefinitionTO getDefinition(@PathParam(\"kind\") String kind);\r\n+    WorkflowDefinitionTO getDefinition(@PathParam(\"kind\") AttributableType kind);\r\n \r\n     @PUT\r\n     @Path(\"{kind}\")\r\n-    void updateDefinition(@PathParam(\"kind\") String kind, WorkflowDefinitionTO definition);\r\n+    void updateDefinition(@PathParam(\"kind\") AttributableType kind, WorkflowDefinitionTO definition);\r\n \r\n     @GET\r\n     @Path(\"{kind}/tasks\")\r\n-    List<String> getDefinedTasks(@PathParam(\"kind\") String kind);\r\n+    List<String> getDefinedTasks(@PathParam(\"kind\") AttributableType kind);\r\n }\r"},{"sha":"0dea759a7249ed117eb5a6c3822416c368409387","filename":"common/src/main/java/org/apache/syncope/common/util/CollectionWrapper.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/30a1e729513160d9af362b1486b9769529a3d894/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/30a1e729513160d9af362b1486b9769529a3d894/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FCollectionWrapper.java?ref=30a1e729513160d9af362b1486b9769529a3d894","patch":"@@ -185,4 +185,9 @@ public static List<String> unwrapPropagationActionClasses(Set<PropagationActionC\n         }\r\n         return respons;\r\n     }\r\n+\r\n+    @SuppressWarnings(\"unchecked\")\r\n+    public static List<String> wrapStrings(final ModelAndView modelAndView) {\r\n+        return (List<String>) modelAndView.getModel().values().iterator().next();\r\n+    }\r\n }\r"},{"sha":"2c91600206f22dc6b339a53bc5b0e88a4e49e702","filename":"console/src/main/java/org/apache/syncope/console/rest/NotificationRestClient.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/30a1e729513160d9af362b1486b9769529a3d894/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/30a1e729513160d9af362b1486b9769529a3d894/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java?ref=30a1e729513160d9af362b1486b9769529a3d894","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.MailTemplateTO;\n import org.apache.syncope.common.to.NotificationTO;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.springframework.stereotype.Component;\n \n@@ -60,6 +61,6 @@ public List<String> getMailTemplates() {\n     }\n \n     public List<String> getEvents() {\n-        return getService(WorkflowService.class).getDefinedTasks(\"user\");\n+        return getService(WorkflowService.class).getDefinedTasks(AttributableType.USER);\n     }\n }"},{"sha":"c9706fc39b93a3ca2e4cb154a52a693269eb4628","filename":"console/src/main/java/org/apache/syncope/console/rest/WorkflowRestClient.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/30a1e729513160d9af362b1486b9769529a3d894/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/30a1e729513160d9af362b1486b9769529a3d894/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=30a1e729513160d9af362b1486b9769529a3d894","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.springframework.stereotype.Component;\n \n@@ -29,10 +30,10 @@ public class WorkflowRestClient extends BaseRestClient {\n     private static final long serialVersionUID = 5049285686167071017L;\n \n     public WorkflowDefinitionTO getDefinition() throws SyncopeClientCompositeErrorException {\n-        return getService(WorkflowService.class).getDefinition(\"user\");\n+        return getService(WorkflowService.class).getDefinition(AttributableType.USER);\n     }\n \n     public void updateDefinition(final WorkflowDefinitionTO workflowDef) throws SyncopeClientCompositeErrorException {\n-        getService(WorkflowService.class).updateDefinition(\"user\", workflowDef);\n+        getService(WorkflowService.class).updateDefinition(AttributableType.USER, workflowDef);\n     }\n }"},{"sha":"bcb39bbb659913c4b983b6908501f83e0a4dd013","filename":"core/src/main/resources/restContext.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/30a1e729513160d9af362b1486b9769529a3d894/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/30a1e729513160d9af362b1486b9769529a3d894/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml?ref=30a1e729513160d9af362b1486b9769529a3d894","patch":"@@ -78,6 +78,7 @@ under the License.\n       <ref bean=\"schemaServiceImpl\"/>\n       <ref bean=\"userRequestServiceImpl\"/>\n       <ref bean=\"userServiceImpl\"/>\n+      <ref bean=\"workflowServiceImpl\"/>\n     </jaxrs:serviceBeans>\n     <jaxrs:resourceComparator>\n       <bean id=\"myServiceComparator\" class=\"org.apache.syncope.core.rest.utils.QueryResourceInfoComperator\"/>"},{"sha":"56ed0c0101cc205aaaaa066360af185efebfe340","filename":"core/src/test/java/org/apache/syncope/core/rest/WorkflowTestITCase.java","status":"modified","additions":12,"deletions":15,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/30a1e729513160d9af362b1486b9769529a3d894/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/30a1e729513160d9af362b1486b9769529a3d894/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java?ref=30a1e729513160d9af362b1486b9769529a3d894","patch":"@@ -24,63 +24,60 @@\n import java.util.List;\r\n \r\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\r\n+import org.apache.syncope.common.types.AttributableType;\r\n import org.apache.syncope.core.workflow.ActivitiDetector;\r\n import org.junit.Assume;\r\n import org.junit.Test;\r\n \r\n public class WorkflowTestITCase extends AbstractTest {\r\n \r\n-    public static final String ROLE_TYPE = \"role\";\r\n-\r\n-    public static final String USER_TYPE = \"user\";\r\n-\r\n     @Test //TODO TestCase needs to be extended\r\n     public void testGetUserDefinition() {\r\n-        WorkflowDefinitionTO definition = workflowService.getDefinition(USER_TYPE);\r\n+        WorkflowDefinitionTO definition = workflowService.getDefinition(AttributableType.USER);\r\n         assertNotNull(definition);\r\n     }\r\n \r\n     @Test //TODO TestCase needs to be extended\r\n     public void testGetRoleDefinition() {\r\n-        WorkflowDefinitionTO definition = workflowService.getDefinition(ROLE_TYPE);\r\n+        WorkflowDefinitionTO definition = workflowService.getDefinition(AttributableType.ROLE);\r\n         assertNotNull(definition);\r\n     }\r\n \r\n     @Test//TODO TestCase needs to be extended\r\n     public void testUpdateUserDefinition() {\r\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\r\n \r\n-        WorkflowDefinitionTO definition = workflowService.getDefinition(USER_TYPE);\r\n+        WorkflowDefinitionTO definition = workflowService.getDefinition(AttributableType.USER);\r\n         assertNotNull(definition);\r\n \r\n-        workflowService.updateDefinition(USER_TYPE, definition);\r\n-        WorkflowDefinitionTO newDefinition = workflowService.getDefinition(USER_TYPE);\r\n+        workflowService.updateDefinition(AttributableType.USER, definition);\r\n+        WorkflowDefinitionTO newDefinition = workflowService.getDefinition(AttributableType.USER);\r\n         assertNotNull(newDefinition);\r\n     }\r\n \r\n     @Test//TODO TestCase needs to be extended\r\n     public void testUpdateRoleDefinition() {\r\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForRoles());\r\n \r\n-        WorkflowDefinitionTO definition = workflowService.getDefinition(ROLE_TYPE);\r\n+        WorkflowDefinitionTO definition = workflowService.getDefinition(AttributableType.ROLE);\r\n         assertNotNull(definition);\r\n \r\n-        workflowService.updateDefinition(ROLE_TYPE, definition);\r\n-        WorkflowDefinitionTO newDefinition = workflowService.getDefinition(ROLE_TYPE);\r\n+        workflowService.updateDefinition(AttributableType.ROLE, definition);\r\n+        WorkflowDefinitionTO newDefinition = workflowService.getDefinition(AttributableType.ROLE);\r\n         assertNotNull(newDefinition);\r\n     }\r\n \r\n     @Test\r\n     public void testGetUserTasks() {\r\n-        List<String> tasks = workflowService.getDefinedTasks(USER_TYPE);\r\n+        List<String> tasks = workflowService.getDefinedTasks(AttributableType.USER);\r\n         assertNotNull(tasks);\r\n         assertFalse(tasks.isEmpty());\r\n     }\r\n \r\n     @Test\r\n     public void testGetRoleTasks() {\r\n-        List<String> tasks = workflowService.getDefinedTasks(ROLE_TYPE);\r\n+        List<String> tasks = workflowService.getDefinedTasks(AttributableType.ROLE);\r\n         assertNotNull(tasks);\r\n         assertFalse(tasks.isEmpty());\r\n     }\r\n-}\n\\ No newline at end of file\n+}\r"}]}