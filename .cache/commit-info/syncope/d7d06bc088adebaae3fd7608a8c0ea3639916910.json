{"sha":"d7d06bc088adebaae3fd7608a8c0ea3639916910","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ3ZDA2YmMwODhhZGViYWFlM2ZkNzYwOGE4YzBlYTM2Mzk5MTY5MTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-22T14:06:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-22T15:29:38Z"},"message":"[SYNCOPE-681] Core, Console and Enduser","tree":{"sha":"42706d1dfd7ec051c735890df2a202838f3a5e0d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/42706d1dfd7ec051c735890df2a202838f3a5e0d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d7d06bc088adebaae3fd7608a8c0ea3639916910","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d7d06bc088adebaae3fd7608a8c0ea3639916910","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d7d06bc088adebaae3fd7608a8c0ea3639916910","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d7d06bc088adebaae3fd7608a8c0ea3639916910/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6a9d557545eb9e35910af4cc32668f649b61cdbe","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a9d557545eb9e35910af4cc32668f649b61cdbe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6a9d557545eb9e35910af4cc32668f649b61cdbe"}],"stats":{"total":3027,"additions":1656,"deletions":1371},"files":[{"sha":"733aaabe629beef6fa8c97aae900caa059675923","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -287,8 +287,7 @@ public Abouts(final NotificationWrapper modelObject) {\n             aboutContainer.setOutputMarkupId(true);\n             add(aboutContainer);\n \n-            final IModel<List<Pair<String, List<SearchClause>>>> model =\n-                    new PropertyModel<>(modelObject, \"aboutClauses\");\n+            IModel<List<Pair<String, List<SearchClause>>>> model = new PropertyModel<>(modelObject, \"aboutClauses\");\n \n             aboutContainer.add(new MultiPanel<Pair<String, List<SearchClause>>>(\"abouts\", \"abouts\", model) {\n "},{"sha":"b113144b90bb9cb520e8c6575173b647f1aedffb","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":13,"deletions":20,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -39,7 +39,6 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -187,26 +186,20 @@ protected void onClickTemplate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n-                modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-                    private static final long serialVersionUID = 8804221891699487139L;\n-\n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        if (modal.getContent() instanceof ResultPage) {\n-                            Serializable result = ResultPage.class.cast(modal.getContent()).getResult();\n-\n-                            RealmTO newRealmTO = RealmTO.class.cast(ProvisioningResult.class.cast(result).getEntity());\n-                            // reload realmChoicePanel label too - SYNCOPE-1151\n-                            target.add(realmChoicePanel.reloadRealmTree(target, Model.of(newRealmTO)));\n-                            realmChoicePanel.setCurrentRealm(newRealmTO);\n-                            send(Realms.this, Broadcast.DEPTH, new ChosenRealm<>(newRealmTO, target));\n-                        } else {\n-                            target.add(realmChoicePanel.reloadRealmTree(target));\n-                        }\n-                        target.add(content);\n-                        modal.show(false);\n+                modal.setWindowClosedCallback(target -> {\n+                    if (modal.getContent() instanceof ResultPage) {\n+                        Serializable result = ResultPage.class.cast(modal.getContent()).getResult();\n+\n+                        RealmTO newRealmTO = RealmTO.class.cast(ProvisioningResult.class.cast(result).getEntity());\n+                        // reload realmChoicePanel label too - SYNCOPE-1151\n+                        target.add(realmChoicePanel.reloadRealmTree(target, Model.of(newRealmTO)));\n+                        realmChoicePanel.setCurrentRealm(newRealmTO);\n+                        send(Realms.this, Broadcast.DEPTH, new ChosenRealm<>(newRealmTO, target));\n+                    } else {\n+                        target.add(realmChoicePanel.reloadRealmTree(target));\n                     }\n+                    target.add(content);\n+                    modal.show(false);\n                 });\n             }\n "},{"sha":"c3a4bb78d9eefe38a97b2818d98a2e8e79ce9a99","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSchemaDetailsPanel.java","status":"modified","additions":5,"deletions":26,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -20,10 +20,7 @@\n \n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.SchemaTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -34,30 +31,12 @@ public abstract class AbstractSchemaDetailsPanel extends Panel {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSchemaDetailsPanel.class);\n \n-    protected static final String FORM = \"form\";\n-\n-    protected final Form<SchemaTO> schemaForm;\n-\n-    protected final SchemaTO schemaTO;\n-\n-    public AbstractSchemaDetailsPanel(\n-            final String id,\n-            final PageReference pageReference,\n-            final SchemaTO schemaTO) {\n+    public AbstractSchemaDetailsPanel(final String id, final SchemaTO schemaTO) {\n         super(id);\n \n-        this.schemaTO = schemaTO;\n-\n-        schemaForm = new Form<>(FORM);\n-        schemaForm.setModel(new CompoundPropertyModel<>(schemaTO));\n-        schemaForm.setOutputMarkupId(true);\n-\n-        final AjaxTextFieldPanel name =\n-                new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<>(schemaTO, \"key\"));\n-        name.addRequiredLabel();\n-        name.setEnabled(schemaTO == null || schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n-\n-        schemaForm.add(name);\n-        add(schemaForm);\n+        AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<>(schemaTO, \"key\"));\n+        key.addRequiredLabel();\n+        key.setEnabled(schemaTO == null || schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n+        add(key);\n     }\n }"},{"sha":"8754d01363fcf979c12b9ed91d548f5aa62be1ff","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -56,7 +56,7 @@ public class AnyTypeClassesPanel extends TypesDirectoryPanel<\n     private static final long serialVersionUID = -2356760296223908382L;\n \n     public AnyTypeClassesPanel(final String id, final PageReference pageRef) {\n-        super(id, pageRef);\n+        super(id, false, pageRef);\n         this.restClient = new AnyTypeClassRestClient();\n         disableCheckBoxes();\n "},{"sha":"132a05a8c2e7402b6d6d2dae78be5aa11da11bad","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -55,7 +55,7 @@ public class AnyTypesPanel extends TypesDirectoryPanel<AnyTypeTO, AnyTypesPanel.\n     private static final long serialVersionUID = 3905038169553185171L;\n \n     public AnyTypesPanel(final String id, final PageReference pageRef) {\n-        super(id, pageRef);\n+        super(id, false, pageRef);\n         this.restClient = new AnyTypeRestClient();\n         disableCheckBoxes();\n "},{"sha":"2f7d7eaa1eb0be21f31c738b89ead229dcfc2747","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DerSchemaDetails.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -21,24 +21,20 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.model.PropertyModel;\n \n public class DerSchemaDetails extends AbstractSchemaDetailsPanel {\n \n     private static final long serialVersionUID = 6668789770131753386L;\n \n-    public DerSchemaDetails(final String id,\n-            final PageReference pageReference,\n-            final DerSchemaTO schemaTO) {\n-\n-        super(id, pageReference, schemaTO);\n+    public DerSchemaDetails(final String id, final DerSchemaTO schemaTO) {\n+        super(id, schemaTO);\n \n         TextField<String> expression = new TextField<>(\"expression\", new PropertyModel<>(schemaTO, \"expression\"));\n         expression.setRequired(true);\n-        schemaForm.add(expression);\n+        add(expression);\n \n-        schemaForm.add(Constants.getJEXLPopover(this, TooltipConfig.Placement.right));\n+        add(Constants.getJEXLPopover(this, TooltipConfig.Placement.right));\n     }\n }"},{"sha":"c7e01fb77e62136daf05c5cfa04a216f8cd40b62","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDetailsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDetailsPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -155,12 +155,12 @@ public String getObject(\n \n             case Long:\n                 panel = new AjaxSpinnerFieldPanel.Builder<Long>()\n-                        .build(id, valueHeaderName, Long.class, new Model<Long>());\n+                        .build(id, valueHeaderName, Long.class, new Model<>());\n                 break;\n \n             case Double:\n                 panel = new AjaxSpinnerFieldPanel.Builder<Double>()\n-                        .build(id, valueHeaderName, Double.class, new Model<Double>());\n+                        .build(id, valueHeaderName, Double.class, new Model<>());\n                 break;\n \n             case Binary:"},{"sha":"310864d49302acc31b85a7a8e3e136c40b5c3c0c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"modified","additions":16,"deletions":22,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -42,7 +42,6 @@\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.lib.types.ImplementationType;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -67,33 +66,28 @@ public class PlainSchemaDetails extends AbstractSchemaDetailsPanel {\n     private final MultiFieldPanel<String> enumerationKeys;\n \n     private final AjaxDropDownChoicePanel<String> validator;\n-    \n+\n     private final AjaxDropDownChoicePanel<AttrSchemaType> type;\n \n-    public PlainSchemaDetails(\n-            final String id,\n-            final PageReference pageReference,\n-            final PlainSchemaTO schemaTO) {\n+    public PlainSchemaDetails(final String id, final PlainSchemaTO schemaTO) {\n+        super(id, schemaTO);\n \n-        super(id, pageReference, schemaTO);\n-        \n-        type = new AjaxDropDownChoicePanel<>(\n-                \"type\", getString(\"type\"), new PropertyModel<AttrSchemaType>(schemaTO, \"type\"));\n+        type = new AjaxDropDownChoicePanel<>(\"type\", getString(\"type\"), new PropertyModel<>(schemaTO, \"type\"));\n \n         type.setChoices(Arrays.asList(AttrSchemaType.values()));\n         type.setEnabled(schemaTO == null || schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n         type.addRequiredLabel();\n-        schemaForm.add(type);\n+        add(type);\n \n         // long, double, date\n         final AjaxTextFieldPanel conversionPattern = new AjaxTextFieldPanel(\"conversionPattern\",\n                 getString(\"conversionPattern\"), new PropertyModel<>(schemaTO, \"conversionPattern\"));\n-        schemaForm.add(conversionPattern);\n+        add(conversionPattern);\n \n         final WebMarkupContainer conversionParams = new WebMarkupContainer(\"conversionParams\");\n         conversionParams.setOutputMarkupPlaceholderTag(true);\n         conversionParams.add(conversionPattern);\n-        schemaForm.add(conversionParams);\n+        add(conversionParams);\n \n         final WebMarkupContainer typeParams = new WebMarkupContainer(\"typeParams\");\n         typeParams.setOutputMarkupPlaceholderTag(true);\n@@ -211,7 +205,7 @@ protected String newModelObject() {\n         binaryParams.setOutputMarkupPlaceholderTag(true);\n         binaryParams.add(mimeType);\n         typeParams.add(binaryParams);\n-        schemaForm.add(typeParams);\n+        add(typeParams);\n \n         // show or hide\n         showHide(schemaTO, type,\n@@ -252,9 +246,10 @@ protected List<String> load() {\n         validator.setOutputMarkupId(true);\n         ((DropDownChoice) validator.getField()).setNullValid(true);\n         validator.setChoices(validators.getObject());\n-        schemaForm.add(validator);\n+        add(validator);\n \n-        AutoCompleteTextField<String> mandatoryCondition = new AutoCompleteTextField<String>(\"mandatoryCondition\") {\n+        AutoCompleteTextField<String> mandatoryCondition = new AutoCompleteTextField<String>(\n+                \"mandatoryCondition\", new PropertyModel<>(schemaTO, \"mandatoryCondition\")) {\n \n             private static final long serialVersionUID = -2428903969518079100L;\n \n@@ -281,19 +276,18 @@ protected Iterator<String> getChoices(final String input) {\n             protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n-        schemaForm.add(mandatoryCondition);\n+        add(mandatoryCondition);\n \n-        schemaForm.add(Constants.getJEXLPopover(this, TooltipConfig.Placement.right));\n+        add(Constants.getJEXLPopover(this, TooltipConfig.Placement.right));\n \n-        schemaForm.add(new AjaxCheckBoxPanel(\n+        add(new AjaxCheckBoxPanel(\n                 \"multivalue\", getString(\"multivalue\"), new PropertyModel<>(schemaTO, \"multivalue\")));\n \n-        schemaForm.add(new AjaxCheckBoxPanel(\n+        add(new AjaxCheckBoxPanel(\n                 \"readonly\", getString(\"readonly\"), new PropertyModel<>(schemaTO, \"readonly\")));\n \n-        schemaForm.add(new AjaxCheckBoxPanel(\"uniqueConstraint\",\n+        add(new AjaxCheckBoxPanel(\"uniqueConstraint\",\n                 getString(\"uniqueConstraint\"), new PropertyModel<>(schemaTO, \"uniqueConstraint\")));\n-\n     }\n \n     private void showHide(final PlainSchemaTO schema, final AjaxDropDownChoicePanel<AttrSchemaType> type,"},{"sha":"939ac8c1307fc4b88370fd73dec109d8e8e0ee98","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -57,7 +57,7 @@ public class RelationshipTypesPanel extends TypesDirectoryPanel<\n     private static final long serialVersionUID = -3731778000138547357L;\n \n     public RelationshipTypesPanel(final String id, final PageReference pageRef) {\n-        super(id, pageRef);\n+        super(id, false, pageRef);\n         this.restClient = new RelationshipTypeRestClient();\n         disableCheckBoxes();\n "},{"sha":"8cb18178764c70b78d3eb1746e276312862b949a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaModalPanel.java","status":"removed","additions":0,"deletions":95,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java?ref=6a9d557545eb9e35910af4cc32668f649b61cdbe","patch":"@@ -1,95 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.util.Arrays;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.common.lib.to.SchemaTO;\n-import org.apache.syncope.common.lib.to.DerSchemaTO;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n-import org.apache.syncope.common.lib.to.VirSchemaTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.model.Model;\n-\n-public class SchemaModalPanel extends AbstractModalPanel<SchemaTO> {\n-\n-    private static final long serialVersionUID = -4681998932778822125L;\n-\n-    private final AbstractSchemaDetailsPanel schemaPanel;\n-\n-    private final SchemaTO schemaTO;\n-\n-    public SchemaModalPanel(\n-            final BaseModal<SchemaTO> modal,\n-            final SchemaTO schemaTO,\n-            final PageReference pageRef) {\n-        super(modal, pageRef);\n-\n-        this.schemaTO = schemaTO;\n-\n-        final Form<SchemaType> kindForm = new Form<>(\"kindForm\");\n-        add(kindForm);\n-\n-        final AjaxDropDownChoicePanel<SchemaType> kind = new AjaxDropDownChoicePanel<>(\n-                \"kind\", getString(\"kind\"), new Model<>());\n-        kind.setChoices(Arrays.asList(SchemaType.values()));\n-        kind.setOutputMarkupId(true);\n-\n-        kind.setModelObject(SchemaType.fromToClass(schemaTO.getClass()));\n-        kind.setEnabled(false);\n-        kindForm.add(kind);\n-\n-        schemaPanel = getSchemaPanel(\"details\", SchemaType.fromToClass(schemaTO.getClass()), modal);\n-        schemaPanel.setOutputMarkupId(true);\n-        addOrReplace(schemaPanel);\n-    }\n-\n-    private AbstractSchemaDetailsPanel getSchemaPanel(final String id,\n-            final SchemaType schemaType, final BaseModal<SchemaTO> modal) {\n-        final AbstractSchemaDetailsPanel panel;\n-\n-        if (schemaTO.getKey() != null) {\n-            try {\n-                final Class<? extends SchemaTO> schemaTOClass = schemaType.getToClass();\n-                modal.setFormModel((SchemaTO) schemaTOClass.newInstance());\n-            } catch (InstantiationException | IllegalAccessException ex) {\n-                LOG.error(\"SchemaType not found\", ex);\n-            }\n-        }\n-\n-        switch (schemaType) {\n-            case DERIVED:\n-                panel = new DerSchemaDetails(id, pageRef, (DerSchemaTO) schemaTO);\n-                break;\n-\n-            case VIRTUAL:\n-                panel = new VirSchemaDetails(id, pageRef, (VirSchemaTO) schemaTO);\n-                break;\n-\n-            case PLAIN:\n-            default:\n-                panel = new PlainSchemaDetails(id, pageRef, (PlainSchemaTO) schemaTO);\n-        }\n-        panel.setOutputMarkupId(true);\n-        return panel;\n-    }\n-}"},{"sha":"e3737ecbcf0c21971d840043122bd6d846f30587","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":21,"deletions":47,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -39,9 +39,9 @@\n import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n-import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.SchemaTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -83,55 +83,29 @@ public class SchemaTypePanel extends TypesDirectoryPanel<SchemaTO, SchemaProvide\n     private String keyword;\n \n     public SchemaTypePanel(final String id, final SchemaType schemaType, final PageReference pageRef) {\n-        super(id, pageRef);\n-        this.restClient = new SchemaRestClient();\n-        disableCheckBoxes();\n-\n+        super(id, true, pageRef);\n         this.schemaType = schemaType;\n \n-        try {\n-            this.addNewItemPanelBuilder(\n-                    new AbstractModalPanelBuilder<SchemaTO>(schemaType.getToClass().newInstance(), pageRef) {\n-\n-                private static final long serialVersionUID = -6388405037134399367L;\n-\n-                @Override\n-                public WizardModalPanel<SchemaTO> build(\n-                        final String id, final int index, final AjaxWizard.Mode mode) {\n+        disableCheckBoxes();\n \n-                    final SchemaTO modelObject = newModelObject();\n-                    return new SchemaModalPanel(modal, modelObject, pageRef) {\n+        try {\n+            addNewItemPanelBuilder(new SchemaTypeWizardBuilder(schemaType.getToClass().newInstance(), pageRef), true);\n+        } catch (IllegalAccessException | InstantiationException e) {\n+            LOG.error(\"Error creating instance of {}\", schemaType, e);\n+        }\n \n-                        private static final long serialVersionUID = -6227956682141146095L;\n+        this.restClient = new SchemaRestClient();\n \n-                        @Override\n-                        public void onSubmit(final AjaxRequestTarget target) {\n-                            try {\n-                                if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n-                                    restClient.create(schemaType, modelObject);\n-                                } else {\n-                                    restClient.update(schemaType, modelObject);\n-                                }\n-\n-                                SchemaTypePanel.this.updateResultTable(target);\n-                                SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                modal.close(target);\n-                            } catch (Exception e) {\n-                                LOG.error(\"While creating or updating {}\", modelObject, e);\n-                                SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                        getName() : e.getMessage());\n-                            }\n-                            ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                        }\n-                    };\n-                }\n-            }, true);\n+        initResultTable();\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.SCHEMA_CREATE);\n+    }\n \n-            initResultTable();\n-            MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.SCHEMA_CREATE);\n-        } catch (InstantiationException | IllegalAccessException e) {\n-            LOG.error(\"Error create new schema\", e);\n-        }\n+    @Override\n+    protected void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n+        modal.setWindowClosedCallback(target -> {\n+            target.add(SchemaTypePanel.this);\n+            modal.show(false);\n+        });\n     }\n \n     @Override\n@@ -153,14 +127,14 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n     protected List<IColumn<SchemaTO, String>> getColumns() {\n         final List<IColumn<SchemaTO, String>> columns = new ArrayList<>();\n \n-        for (final String field : COL_NAMES.get(schemaType)) {\n-            final Field clazzField = ReflectionUtils.findField(schemaType.getToClass(), field);\n+        for (String field : COL_NAMES.get(schemaType)) {\n+            Field clazzField = ReflectionUtils.findField(schemaType.getToClass(), field);\n \n             if (clazzField != null) {\n                 if (clazzField.getType().equals(Boolean.class) || clazzField.getType().equals(boolean.class)) {\n                     columns.add(new BooleanPropertyColumn<>(new ResourceModel(field), field, field));\n                 } else {\n-                    final IColumn<SchemaTO, String> column = new PropertyColumn<SchemaTO, String>(\n+                    IColumn<SchemaTO, String> column = new PropertyColumn<SchemaTO, String>(\n                             new ResourceModel(field), field, field) {\n \n                         private static final long serialVersionUID = 3282547854226892169L;"},{"sha":"099cb257a9f133b2b631252b6fef9015ebf30b07","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder.java","status":"added","additions":242,"deletions":0,"changes":242,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,242 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Locale;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.LocaleUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.MutablePair;\n+import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.SchemaTO;\n+import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.apache.wicket.validation.ValidationError;\n+\n+public class SchemaTypeWizardBuilder extends AjaxWizardBuilder<SchemaTO> {\n+\n+    private static final long serialVersionUID = -3893521796674873644L;\n+\n+    private final SchemaRestClient restClient = new SchemaRestClient();\n+\n+    private final SchemaType schemaType;\n+\n+    private final ListModel<MutablePair<Locale, String>> translations = new ListModel<>(new ArrayList<>());\n+\n+    public SchemaTypeWizardBuilder(final SchemaTO schemaTO, final PageReference pageRef) {\n+        super(schemaTO, pageRef);\n+        this.schemaType = SchemaType.fromToClass(schemaTO.getClass());\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final SchemaTO modelObject) {\n+        modelObject.getLabels().clear();\n+        modelObject.getLabels().putAll(translations.getObject().stream().\n+                filter(Objects::nonNull).\n+                filter(translation -> translation.getKey() != null).\n+                filter(translation -> translation.getValue() != null).\n+                collect(Collectors.toMap(MutablePair::getKey, MutablePair::getValue)));\n+\n+        if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n+            restClient.create(schemaType, modelObject);\n+        } else {\n+            restClient.update(schemaType, modelObject);\n+        }\n+\n+        return null;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final SchemaTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new Details(modelObject));\n+        wizardModel.add(new Labels(modelObject));\n+        return wizardModel;\n+    }\n+\n+    public class Details extends WizardStep {\n+\n+        private static final long serialVersionUID = 382498949020534783L;\n+\n+        public Details(final SchemaTO modelObject) {\n+            AjaxDropDownChoicePanel<SchemaType> kind =\n+                    new AjaxDropDownChoicePanel<>(\"kind\", getString(\"kind\"), new Model<>());\n+            kind.setChoices(Arrays.asList(SchemaType.values()));\n+            kind.setOutputMarkupId(true);\n+            kind.setModelObject(schemaType);\n+            kind.setEnabled(false);\n+            add(kind);\n+\n+            AbstractSchemaDetailsPanel detailsPanel;\n+            switch (schemaType) {\n+                case DERIVED:\n+                    detailsPanel = new DerSchemaDetails(\"details\", (DerSchemaTO) modelObject);\n+                    break;\n+\n+                case VIRTUAL:\n+                    detailsPanel = new VirSchemaDetails(\"details\", (VirSchemaTO) modelObject);\n+                    break;\n+\n+                case PLAIN:\n+                default:\n+                    detailsPanel = new PlainSchemaDetails(\"details\", (PlainSchemaTO) modelObject);\n+            }\n+            detailsPanel.setOutputMarkupId(true);\n+            add(detailsPanel);\n+        }\n+    }\n+\n+    public class Labels extends WizardStep {\n+\n+        private static final long serialVersionUID = -3130973642912822270L;\n+\n+        public Labels(final SchemaTO modelObject) {\n+            setTitleModel(new ResourceModel(\"translations\"));\n+            setOutputMarkupId(true);\n+\n+            translations.getObject().clear();\n+            modelObject.getLabels().forEach((locale, display) -> {\n+                translations.getObject().add(MutablePair.of(locale, display));\n+            });\n+\n+            ListView<MutablePair<Locale, String>> labels =\n+                    new ListView<MutablePair<Locale, String>>(\"labels\", translations) {\n+\n+                private static final long serialVersionUID = -8746795666847966508L;\n+\n+                @Override\n+                protected void populateItem(final ListItem<MutablePair<Locale, String>> item) {\n+                    MutablePair<Locale, String> entry = item.getModelObject();\n+\n+                    AjaxTextFieldPanel locale = new AjaxTextFieldPanel(\"locale\", \"locale\", new Model<>(), true);\n+                    locale.getField().setModel(new IModel<String>() {\n+\n+                        private static final long serialVersionUID = 1500045101360533133L;\n+\n+                        @Override\n+                        public String getObject() {\n+                            return entry.getLeft() == null ? null : entry.getLeft().toString();\n+                        }\n+\n+                        @Override\n+                        public void setObject(final String object) {\n+                            entry.setLeft(LocaleUtils.toLocale(object));\n+                        }\n+                    });\n+                    locale.setRequired(true).hideLabel();\n+                    locale.setChoices(SyncopeConsoleApplication.SUPPORTED_LOCALES.stream().\n+                            map(Objects::toString).collect(Collectors.toList()));\n+                    locale.addValidator(validatable -> {\n+                        try {\n+                            LocaleUtils.toLocale(validatable.getValue());\n+                        } catch (Exception e) {\n+                            LOG.error(\"Invalid Locale: {}\", validatable.getValue(), e);\n+                            validatable.error(new ValidationError(\"Invalid Locale: \" + validatable.getValue()));\n+\n+                            RequestCycle.get().find(AjaxRequestTarget.class).ifPresent(target -> {\n+                                target.add(Labels.this);\n+                            });\n+                        }\n+                    });\n+                    item.add(locale);\n+\n+                    AjaxTextFieldPanel display = new AjaxTextFieldPanel(\"display\", \"display\", new Model<>());\n+                    display.getField().setModel(new IModel<String>() {\n+\n+                        private static final long serialVersionUID = 1500045101360533133L;\n+\n+                        @Override\n+                        public String getObject() {\n+                            return entry.getRight();\n+                        }\n+\n+                        @Override\n+                        public void setObject(final String object) {\n+                            entry.setRight(object);\n+                        }\n+                    });\n+                    display.setRequired(true).hideLabel();\n+                    item.add(display);\n+\n+                    ActionsPanel<Serializable> actions = new ActionsPanel<>(\"toRemove\", null);\n+                    actions.add(new ActionLink<Serializable>() {\n+\n+                        private static final long serialVersionUID = -3722207913631435501L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                            int index = -1;\n+                            for (int i = 0; i < translations.getObject().size() && index == -1; i++) {\n+                                if (entry.equals(translations.getObject().get(i))) {\n+                                    index = i;\n+                                }\n+                            }\n+\n+                            if (index != -1) {\n+                                translations.getObject().remove(index);\n+                                item.getParent().removeAll();\n+                                target.add(Labels.this);\n+                            }\n+                        }\n+                    }, ActionLink.ActionType.DELETE, StandardEntitlement.SCHEMA_UPDATE, true).hideLabel();\n+                    item.add(actions);\n+                }\n+            };\n+            labels.setReuseItems(true);\n+            add(labels);\n+\n+            IndicatingAjaxButton addLabel = new IndicatingAjaxButton(\"addLabel\") {\n+\n+                private static final long serialVersionUID = -4804368561204623354L;\n+\n+                @Override\n+                protected void onSubmit(final AjaxRequestTarget target) {\n+                    translations.getObject().add(MutablePair.of(null, null));\n+                    target.add(Labels.this);\n+                }\n+            };\n+            addLabel.setDefaultFormProcessing(false);\n+            add(addLabel);\n+        }\n+    }\n+}"},{"sha":"8aa4b80224cba6fa243dd4a6e6598eb37978dc08","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TypesDirectoryPanel.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -30,10 +30,13 @@\n \n     private static final long serialVersionUID = 7890071604330629259L;\n \n-    public TypesDirectoryPanel(final String id, final PageReference pageRef) {\n+    public TypesDirectoryPanel(final String id, final boolean withWizard, final PageReference pageRef) {\n         super(id, pageRef);\n-        setFooterVisibility(true);\n-        modal.addSubmitButton();\n+\n+        if (!withWizard) {\n+            setFooterVisibility(true);\n+            modal.addSubmitButton();\n+        }\n         modal.size(Modal.Size.Large);\n     }\n }"},{"sha":"5b27c83aeebda5d627f87d7f5ddedd38f81d38a0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/VirSchemaDetails.java","status":"modified","additions":10,"deletions":14,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -39,14 +39,15 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.model.PropertyModel;\n \n public class VirSchemaDetails extends AbstractSchemaDetailsPanel {\n \n     private static final long serialVersionUID = 5979623248182851337L;\n \n+    private final ConnectorRestClient connectorRestClient = new ConnectorRestClient();\n+\n     private final ResourceRestClient resourceRestClient = new ResourceRestClient();\n \n     private final ConnectorRestClient connRestClient = new ConnectorRestClient();\n@@ -57,15 +58,12 @@ public class VirSchemaDetails extends AbstractSchemaDetailsPanel {\n \n     private ResourceTO selectedResource;\n \n-    public VirSchemaDetails(final String id,\n-            final PageReference pageReference,\n-            final VirSchemaTO schemaTO) {\n-\n-        super(id, pageReference, schemaTO);\n+    public VirSchemaDetails(final String id, final VirSchemaTO schemaTO) {\n+        super(id, schemaTO);\n \n         AjaxCheckBoxPanel readonly = new AjaxCheckBoxPanel(\"readonly\", getString(\"readonly\"),\n                 new PropertyModel<>(schemaTO, \"readonly\"));\n-        schemaForm.add(readonly);\n+        add(readonly);\n \n         final AjaxDropDownChoicePanel<String> resource = new AjaxDropDownChoicePanel<>(\n                 \"resource\", getString(\"resource\"), new PropertyModel<String>(schemaTO, \"resource\"), false).\n@@ -76,7 +74,7 @@ public VirSchemaDetails(final String id,\n         if (resource.getModelObject() != null) {\n             populateAnyTypes(resource.getModelObject());\n         }\n-        schemaForm.add(resource);\n+        add(resource);\n \n         anyType = new AjaxDropDownChoicePanel<>(\n                 \"anyType\", getString(\"anyType\"), new PropertyModel<String>(schemaTO, \"anyType\"), false).\n@@ -88,7 +86,7 @@ public VirSchemaDetails(final String id,\n         if (resource.getModelObject() == null) {\n             anyType.setEnabled(false);\n         }\n-        schemaForm.add(anyType);\n+        add(anyType);\n \n         final AjaxTextFieldPanel extAttrName = new AjaxTextFieldPanel(\n                 \"extAttrName\", getString(\"extAttrName\"), new PropertyModel<>(schemaTO, \"extAttrName\"));\n@@ -97,9 +95,7 @@ public VirSchemaDetails(final String id,\n         if (selectedResource != null) {\n             extAttrName.setChoices(getExtAttrNames());\n         }\n-        schemaForm.add(extAttrName);\n-\n-        add(schemaForm);\n+        add(extAttrName);\n \n         resource.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -125,7 +121,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 if (selectedResource != null) {\n-                    String adminRealm = getAdminRealm(selectedResource.getKey());\n+                    String adminRealm = getAdminRealm(selectedResource.getConnector());\n \n                     if (SyncopeConsoleSession.get().owns(StandardEntitlement.CONNECTOR_READ, adminRealm)) {\n                         extAttrName.setChoices(getExtAttrNames());\n@@ -139,7 +135,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     private String getAdminRealm(final String connectorKey) {\n         String adminRealm = null;\n         try {\n-            adminRealm = new ConnectorRestClient().read(connectorKey).getAdminRealm();\n+            adminRealm = connectorRestClient.read(connectorKey).getAdminRealm();\n         } catch (Exception e) {\n             LOG.error(\"Could not read Admin Realm for External Resource {}\", selectedResource.getKey());\n         }"},{"sha":"115349b968f8eb50bb8c348fb126d3917519532f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -34,7 +34,7 @@\n \n     private static final long serialVersionUID = 5958017546318855690L;\n \n-    private static final String LABEL = \"field-label\";\n+    public static final String LABEL = \"field-label\";\n \n     protected boolean isRequiredLabelAdded = false;\n "},{"sha":"8d0c66507e65b5ae5f675d27bc17c99d9578064c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":2,"deletions":12,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;\n-import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n@@ -115,17 +114,8 @@ public FieldPanel<String> enableJexlHelp() {\n     }\n \n     protected Iterator<String> getChoices(final String input) {\n-        final Pattern pattern = Pattern.compile(\".*\" + Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n-\n-        final List<String> result = new ArrayList<>();\n-\n-        for (String choice : choices) {\n-            if (pattern.matcher(choice).matches()) {\n-                result.add(choice);\n-            }\n-        }\n-\n-        return result.iterator();\n+        Pattern pattern = Pattern.compile(\".*\" + Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n+        return choices.stream().filter(choice -> pattern.matcher(choice).matches()).iterator();\n     }\n \n     @Override"},{"sha":"367591e02b1d931d68197a93df68a16690a272f3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -41,7 +41,7 @@ private MultiFieldPanel(\n \n     public static class Builder<E extends Serializable> implements Serializable {\n \n-        private static final long serialVersionUID = 1L;\n+        private static final long serialVersionUID = -5304396077613727937L;\n \n         private final IModel<List<E>> model;\n "},{"sha":"5e9630062ec8104edd4bf5309877961fa5c74516","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractMappingPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -365,7 +365,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         mappings.setReuseItems(true);\n         mappingContainer.add(mappings);\n \n-        addMappingBtn = new IndicatingAjaxButton(\"addMappingBtn\", new ResourceModel(\"add\")) {\n+        addMappingBtn = new IndicatingAjaxButton(\"addMappingBtn\") {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n "},{"sha":"9cca5ae0243e34d082a32b3949739f7567e22dfc","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -37,7 +37,6 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.event.IEventSource;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -360,14 +359,8 @@ public WizardMgtPanel<T> setFooterVisibility(final boolean footerVisibility) {\n      * @param modal target modal.\n      */\n     protected void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n-        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                modal.show(false);\n-            }\n+        modal.setWindowClosedCallback(target -> {\n+            modal.show(false);\n         });\n     }\n "},{"sha":"f064402cca2eded1ec591b3b4d380f6d46df42fc","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":18,"deletions":7,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -24,6 +24,7 @@\n import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.EntityTOUtils;\n@@ -64,13 +65,13 @@ public <T extends AnyTO> DerAttrs(\n \n             @Override\n             public WebMarkupContainer getPanel(final String panelId) {\n-                return new DerAttrs.DerSchemas(panelId, attrTOs);\n+                return new DerAttrs.DerSchemas(panelId, schemas, attrTOs);\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n         add(new ListView<MembershipTO>(\"membershipsDerSchemas\", membershipTOs) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 6741044372185745296L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n@@ -85,7 +86,10 @@ protected void populateItem(final ListItem<MembershipTO> item) {\n \n                     @Override\n                     public WebMarkupContainer getPanel(final String panelId) {\n-                        return new DerAttrs.DerSchemas(panelId, new ListModel<>(getAttrsFromTO(membershipTO)));\n+                        return new DerAttrs.DerSchemas(\n+                                panelId,\n+                                membershipSchemas.get(membershipTO.getGroupKey()),\n+                                new ListModel<>(getAttrsFromTO(membershipTO)));\n                     }\n                 }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -133,15 +137,15 @@ protected void setAttrs(final MembershipTO membershipTO) {\n \n         Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n \n-        for (DerSchemaTO schema : membershipSchemas.get(membershipTO.getGroupKey()).values()) {\n+        membershipSchemas.get(membershipTO.getGroupKey()).values().forEach(schema -> {\n             AttrTO attrTO = new AttrTO();\n             attrTO.setSchema(schema.getKey());\n             if (attrMap.containsKey(schema.getKey())) {\n                 attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n             }\n \n             attrs.add(attrTO);\n-        }\n+        });\n \n         membershipTO.getDerAttrs().clear();\n         membershipTO.getDerAttrs().addAll(attrs);\n@@ -151,7 +155,10 @@ public class DerSchemas extends Schemas {\n \n         private static final long serialVersionUID = -4730563859116024676L;\n \n-        public DerSchemas(final String id, final IModel<List<AttrTO>> attrTOs) {\n+        public DerSchemas(\n+                final String id,\n+                final Map<String, DerSchemaTO> schemas,\n+                final IModel<List<AttrTO>> attrTOs) {\n             super(id);\n \n             add(new ListView<AttrTO>(\"schemas\", attrTOs) {\n@@ -176,7 +183,11 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                         model = new Model<>(values.get(0));\n                     }\n \n-                    AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), model, false);\n+                    AjaxTextFieldPanel panel = new AjaxTextFieldPanel(\n+                            \"panel\",\n+                            schemas.get(attrTO.getSchema()).getLabel(SyncopeConsoleSession.get().getLocale()),\n+                            model,\n+                            false);\n                     panel.setEnabled(false);\n                     panel.setRequired(true);\n                     panel.setOutputMarkupId(true);"},{"sha":"3fcecf56f561559f7182fd1b6e3c3b23290c35b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":49,"deletions":27,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -25,6 +25,7 @@\n import java.util.stream.Collectors;\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.SchemaUtils;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n@@ -166,7 +167,7 @@ protected void setAttrs() {\n \n         Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getPlainAttrs());\n \n-        schemas.values().stream().map(schema -> {\n+        attrs.addAll(schemas.values().stream().map(schema -> {\n             AttrTO attrTO = new AttrTO();\n             attrTO.setSchema(schema.getKey());\n             if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n@@ -178,9 +179,7 @@ protected void setAttrs() {\n                 attrTO = attrMap.get(schema.getKey());\n             }\n             return attrTO;\n-        }).forEachOrdered(attrTO -> {\n-            attrs.add(attrTO);\n-        });\n+        }).collect(Collectors.toList()));\n \n         anyTO.getPlainAttrs().clear();\n         anyTO.getPlainAttrs().addAll(attrs);\n@@ -192,7 +191,7 @@ protected void setAttrs(final MembershipTO membershipTO) {\n \n         Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(membershipTO.getPlainAttrs());\n \n-        membershipSchemas.get(membershipTO.getGroupKey()).values().stream().\n+        attrs.addAll(membershipSchemas.get(membershipTO.getGroupKey()).values().stream().\n                 map(schema -> {\n                     AttrTO attrTO = new AttrTO();\n                     attrTO.setSchema(schema.getKey());\n@@ -205,9 +204,7 @@ protected void setAttrs(final MembershipTO membershipTO) {\n                         attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n                     }\n                     return attrTO;\n-                }).forEachOrdered(attrTO -> {\n-            attrs.add(attrTO);\n-        });\n+                }).collect(Collectors.toList()));\n \n         membershipTO.getPlainAttrs().clear();\n         membershipTO.getPlainAttrs().addAll(attrs);\n@@ -236,19 +233,31 @@ protected FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n         FieldPanel panel;\n         switch (type) {\n             case Boolean:\n-                panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getKey(), new Model<>(), true);\n+                panel = new AjaxCheckBoxPanel(\n+                        \"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        new Model<>(),\n+                        true);\n                 panel.setRequired(required);\n                 break;\n \n             case Date:\n-                String dataPattern = schemaTO.getConversionPattern() == null\n+                String datePattern = schemaTO.getConversionPattern() == null\n                         ? SyncopeConstants.DEFAULT_DATE_PATTERN\n                         : schemaTO.getConversionPattern();\n \n-                if (dataPattern.contains(\"H\")) {\n-                    panel = new AjaxDateTimeFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), dataPattern);\n+                if (datePattern.contains(\"H\")) {\n+                    panel = new AjaxDateTimeFieldPanel(\n+                            \"panel\",\n+                            schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                            new Model<>(),\n+                            datePattern);\n                 } else {\n-                    panel = new AjaxDateFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), dataPattern);\n+                    panel = new AjaxDateFieldPanel(\n+                            \"panel\",\n+                            schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                            new Model<>(),\n+                            datePattern);\n                 }\n \n                 if (required) {\n@@ -258,7 +267,8 @@ protected FieldPanel getFieldPanel(final PlainSchemaTO schemaTO) {\n                 break;\n \n             case Enum:\n-                panel = new AjaxDropDownChoicePanel<>(\"panel\", schemaTO.getKey(), new Model<>(), true);\n+                panel = new AjaxDropDownChoicePanel<>(\"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(SchemaUtils.getEnumeratedValues(schemaTO));\n \n                 if (StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {\n@@ -292,33 +302,43 @@ public String getObject(\n                 break;\n \n             case Long:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Long>().enableOnChange().\n-                        build(\"panel\", schemaTO.getKey(), Long.class, new Model<Long>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Long>().enableOnChange().build(\n+                        \"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        Long.class,\n+                        new Model<>());\n \n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n                 break;\n \n             case Double:\n-                panel = new AjaxSpinnerFieldPanel.Builder<Double>().enableOnChange().step(0.1).\n-                        build(\"panel\", schemaTO.getKey(), Double.class, new Model<Double>());\n+                panel = new AjaxSpinnerFieldPanel.Builder<Double>().enableOnChange().step(0.1).build(\n+                        \"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        Double.class,\n+                        new Model<>());\n \n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n                 break;\n \n             case Binary:\n-                final PageReference pageReference = getPageReference();\n-                panel = new BinaryFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), schemaTO.getMimeType(),\n+                final PageReference pageRef = getPageReference();\n+                panel = new BinaryFieldPanel(\n+                        \"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n+                        new Model<>(),\n+                        schemaTO.getMimeType(),\n                         fileKey) {\n \n                     private static final long serialVersionUID = -3268213909514986831L;\n \n                     @Override\n                     protected PageReference getPageReference() {\n-                        return pageReference;\n+                        return pageRef;\n                     }\n \n                 };\n@@ -328,15 +348,17 @@ protected PageReference getPageReference() {\n                 break;\n \n             case Encrypted:\n-                panel = new EncryptedFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), true);\n+                panel = new EncryptedFieldPanel(\"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n \n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n                 break;\n \n             default:\n-                panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), true);\n+                panel = new AjaxTextFieldPanel(\"panel\",\n+                        schemaTO.getLabel(SyncopeConsoleSession.get().getLocale()), new Model<>(), true);\n \n                 if (jexlHelp) {\n                     AjaxTextFieldPanel.class.cast(panel).enableJexlHelp();\n@@ -358,7 +380,7 @@ public class PlainSchemas extends Schemas {\n \n         public PlainSchemas(\n                 final String id,\n-                final Map<String, PlainSchemaTO> availableSchemas,\n+                final Map<String, PlainSchemaTO> schemas,\n                 final IModel<List<AttrTO>> attrTOs) {\n             super(id);\n \n@@ -371,9 +393,9 @@ public PlainSchemas(\n                 protected void populateItem(final ListItem<AttrTO> item) {\n                     AttrTO attrTO = item.getModelObject();\n \n-                    AbstractFieldPanel<?> panel = getFieldPanel(availableSchemas.get(attrTO.getSchema()));\n+                    AbstractFieldPanel<?> panel = getFieldPanel(schemas.get(attrTO.getSchema()));\n                     if (mode == AjaxWizard.Mode.TEMPLATE\n-                            || !availableSchemas.get(attrTO.getSchema()).isMultivalue()) {\n+                            || !schemas.get(attrTO.getSchema()).isMultivalue()) {\n                         FieldPanel.class.cast(panel).setNewModel(attrTO.getValues());\n                     } else {\n                         panel = new MultiFieldPanel.Builder<>(\n@@ -382,7 +404,7 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                                 attrTO.getSchema(),\n                                 FieldPanel.class.cast(panel));\n                         // SYNCOPE-1215 the entire multifield panel must be readonly, not only its field\n-                        ((MultiFieldPanel) panel).setReadOnly(availableSchemas.get(attrTO.getSchema()).isReadonly());\n+                        ((MultiFieldPanel) panel).setReadOnly(schemas.get(attrTO.getSchema()).isReadonly());\n                     }\n                     item.add(panel);\n "},{"sha":"7850fe9ebb86f833e5996b6f689dc06e772c6937","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":23,"deletions":18,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -23,8 +23,8 @@\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n-import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n@@ -76,7 +76,7 @@ public <T extends AnyTO> VirAttrs(\n \n             @Override\n             public WebMarkupContainer getPanel(final String panelId) {\n-                return new VirAttrs.VirSchemas(panelId, attrTOs);\n+                return new VirAttrs.VirSchemas(panelId, schemas, attrTOs);\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n@@ -95,7 +95,10 @@ protected void populateItem(final ListItem<MembershipTO> item) {\n \n                             @Override\n                             public WebMarkupContainer getPanel(final String panelId) {\n-                                return new VirAttrs.VirSchemas(panelId, new ListModel<>(getAttrsFromTO(membershipTO)));\n+                                return new VirAttrs.VirSchemas(\n+                                        panelId,\n+                                        membershipSchemas.get(membershipTO.getGroupKey()),\n+                                        new ListModel<>(getAttrsFromTO(membershipTO)));\n                             }\n                         }), Model.of(-1)).setOutputMarkupId(true));\n             }\n@@ -123,7 +126,7 @@ protected void setAttrs() {\n \n         Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getVirAttrs());\n \n-        schemas.values().stream().map(schema -> {\n+        attrs.addAll(schemas.values().stream().map(schema -> {\n             AttrTO attrTO = new AttrTO();\n             attrTO.setSchema(schema.getKey());\n             if (attrMap.containsKey(schema.getKey())) {\n@@ -132,9 +135,7 @@ protected void setAttrs() {\n                 attrTO.getValues().add(StringUtils.EMPTY);\n             }\n             return attrTO;\n-        }).forEachOrdered(attrTO -> {\n-            attrs.add(attrTO);\n-        });\n+        }).collect(Collectors.toList()));\n \n         anyTO.getVirAttrs().clear();\n         anyTO.getVirAttrs().addAll(attrs);\n@@ -146,7 +147,7 @@ protected void setAttrs(final MembershipTO membershipTO) {\n \n         Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getVirAttrs());\n \n-        membershipSchemas.get(membershipTO.getGroupKey()).values().stream().map(schema -> {\n+        attrs.addAll(membershipSchemas.get(membershipTO.getGroupKey()).values().stream().map(schema -> {\n             AttrTO attrTO = new AttrTO();\n             attrTO.setSchema(schema.getKey());\n             if (attrMap.containsKey(schema.getKey())) {\n@@ -155,9 +156,7 @@ protected void setAttrs(final MembershipTO membershipTO) {\n                 attrTO.getValues().add(StringUtils.EMPTY);\n             }\n             return attrTO;\n-        }).forEachOrdered(attrTO -> {\n-            attrs.add(attrTO);\n-        });\n+        }).collect(Collectors.toList()));\n \n         membershipTO.getVirAttrs().clear();\n         membershipTO.getVirAttrs().addAll(attrs);\n@@ -167,7 +166,10 @@ public class VirSchemas extends Schemas {\n \n         private static final long serialVersionUID = -4730563859116024676L;\n \n-        public VirSchemas(final String id, final IModel<List<AttrTO>> attrTOs) {\n+        public VirSchemas(\n+                final String id,\n+                final Map<String, VirSchemaTO> schemas,\n+                final IModel<List<AttrTO>> attrTOs) {\n             super(id);\n \n             add(new ListView<AttrTO>(\"schemas\", attrTOs) {\n@@ -179,8 +181,11 @@ public VirSchemas(final String id, final IModel<List<AttrTO>> attrTOs) {\n                 protected void populateItem(final ListItem<AttrTO> item) {\n                     AttrTO attrTO = item.getModelObject();\n \n-                    AbstractFieldPanel<?> panel =\n-                            new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), new Model<>(), false);\n+                    AbstractFieldPanel<?> panel = new AjaxTextFieldPanel(\n+                            \"panel\",\n+                            schemas.get(attrTO.getSchema()).getLabel(SyncopeConsoleSession.get().getLocale()),\n+                            new Model<>(),\n+                            false);\n \n                     boolean readonly = attrTO.getSchemaInfo() == null\n                             ? false\n@@ -192,21 +197,21 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                         panel = new MultiFieldPanel.Builder<>(\n                                 new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                                 \"panel\",\n-                                attrTO.getSchema(),\n+                                schemas.get(attrTO.getSchema()).getLabel(SyncopeConsoleSession.get().getLocale()),\n                                 AjaxTextFieldPanel.class.cast(panel));\n                         panel.setEnabled(!readonly);\n                     }\n \n                     item.add(panel);\n \n-                    if (CollectionUtils.isNotEmpty(attrTO.getValues())\n+                    if (!attrTO.getValues().isEmpty()\n                             && VirAttrs.this.modelObject instanceof UserWrapper\n                             && UserWrapper.class.cast(VirAttrs.this.modelObject).getPreviousUserTO() != null) {\n+\n                         panel.showExternAction(new LabelInfo(\"externalAction\", StringUtils.EMPTY));\n                     }\n                 }\n-            }\n-            );\n+            });\n         }\n     }\n }"},{"sha":"f78b16f68480b4efa863752a7b41b6bb895d051d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DerSchemaDetails.html","status":"modified","additions":7,"deletions":13,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,19 +18,13 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div style=\"margin: 5px;\">\n-      <form wicket:id=\"form\">\n-        <div id=\"formtable\">\n-          <div class=\"form-group\">\n-            <span wicket:id=\"key\">[name]</span>\n-          </div>\n-          <div class=\"form-group\">\n-            <label for=\"expression\"><wicket:message key=\"expression\"/> *</label>\n-            <input type=\"text\" id=\"expression\" class=\"form-control col-xs-4\" wicket:id=\"expression\"/>\n-            <span id=\"popover\" wicket:id=\"jexlInfo\" class=\"glyphicon glyphicon-info-sign\"></span>\n-          </div>\n-        </div>\n-      </form>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"key\">[name]</span>\n+    </div>\n+    <div class=\"form-group\">\n+      <label for=\"expression\"><wicket:message key=\"expression\"/> *</label>\n+      <input type=\"text\" id=\"expression\" class=\"form-control col-xs-4\" wicket:id=\"expression\"/>\n+      <span id=\"popover\" wicket:id=\"jexlInfo\" class=\"glyphicon glyphicon-info-sign\"></span>\n     </div>\n   </wicket:panel>\n </html>"},{"sha":"ac334deab4ff330d05e9475f1536be4adcf67aef","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails.html","status":"modified","additions":42,"deletions":44,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,62 +18,60 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <form wicket:id=\"form\">\n-      <div class=\"form-group\">\n-        <span wicket:id=\"key\">[name]</span>\n-      </div>\n-      <div class=\"form-group\">\n-        <span wicket:id=\"type\">[type]</span>\n-      </div>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"key\">[name]</span>\n+    </div>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"type\">[type]</span>\n+    </div>\n \n-      <div class=\"form-group\" wicket:id=\"conversionParams\">\n-        <span wicket:id=\"conversionPattern\">[conversionPattern]</span>\n-      </div>\n+    <div class=\"form-group\" wicket:id=\"conversionParams\">\n+      <span wicket:id=\"conversionPattern\">[conversionPattern]</span>\n+    </div>\n \n-      <div class=\"form-group\" wicket:id=\"typeParams\">\n-        <div wicket:id=\"enumParams\">\n-          <div class=\"form-group\">\n-            <span wicket:id=\"enumerationValues\">[enumerationValues]</span>\n-          </div>\n-          <div class=\"form-group\">\n-            <span wicket:id=\"enumerationKeys\">[enumerationKeys]</span>\n-          </div>\n+    <div class=\"form-group\" wicket:id=\"typeParams\">\n+      <div wicket:id=\"enumParams\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"enumerationValues\">[enumerationValues]</span>\n+        </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"enumerationKeys\">[enumerationKeys]</span>\n+        </div>\n+      </div>\n+      <div wicket:id=\"encryptedParams\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"secretKey\">[secretKey]</span>\n         </div>\n-        <div wicket:id=\"encryptedParams\">\n-          <div class=\"form-group\">\n-            <span wicket:id=\"secretKey\">[secretKey]</span>\n-          </div>\n-          <div class=\"form-group\">\n-            <span wicket:id=\"cipherAlgorithm\">[cipherAlgorithm]</span>\n-          </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"cipherAlgorithm\">[cipherAlgorithm]</span>\n         </div>\n-        <div wicket:id=\"binaryParams\">\n-          <div class=\"form-group\">\n-            <span wicket:id=\"mimeType\">[mimeType]</span>\n-          </div>\n+      </div>\n+      <div wicket:id=\"binaryParams\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"mimeType\">[mimeType]</span>\n         </div>\n       </div>\n+    </div>\n \n+    <div class=\"form-group\">\n+      <span wicket:id=\"validator\">[validator]</span>\n+    </div>\n+\n+    <div class=\"form-group\">\n+      <label for=\"mandatoryCondition\"><wicket:message key=\"mandatoryCondition\"/></label>\n+      <input type=\"text\" id=\"mandatoryCondition\" class=\"form-control col-xs-4\" wicket:id=\"mandatoryCondition\"/>\n+      <span id=\"popover\" wicket:id=\"jexlInfo\" class=\"glyphicon glyphicon-info-sign\"></span>\n+    </div>\n+    <div class=\"form-group\">\n       <div class=\"form-group\">\n-        <span wicket:id=\"validator\">[validator]</span>\n+        <span wicket:id=\"uniqueConstraint\">[uniqueConstraint]</span>\n       </div>\n-\n       <div class=\"form-group\">\n-        <label for=\"mandatoryCondition\"><wicket:message key=\"mandatoryCondition\"/></label>\n-        <input type=\"text\" id=\"mandatoryCondition\" class=\"form-control col-xs-4\" wicket:id=\"mandatoryCondition\"/>\n-        <span id=\"popover\" wicket:id=\"jexlInfo\" class=\"glyphicon glyphicon-info-sign\"></span>\n+        <span wicket:id=\"multivalue\">[multivalue]</span>\n       </div>\n       <div class=\"form-group\">\n-        <div class=\"form-group\">\n-          <span wicket:id=\"uniqueConstraint\">[uniqueConstraint]</span>\n-        </div>\n-        <div class=\"form-group\">\n-          <span wicket:id=\"multivalue\">[multivalue]</span>\n-        </div>\n-        <div class=\"form-group\">\n-          <span wicket:id=\"readonly\">[readonly]</span>\n-        </div>\n+        <span wicket:id=\"readonly\">[readonly]</span>\n       </div>\n-    </form>\n+    </div>\n   </wicket:panel>\n </html>"},{"sha":"0854ab2e47985e5e6e0e616e1382a14d0c6cc670","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Details.html","status":"renamed","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -17,12 +17,10 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n+  <wicket:panel>\n     <div class=\"form-group\">\n-      <form wicket:id=\"kindForm\">\n-        <span wicket:id=\"kind\">[kind]</span>\n-      </form>\n+      <span wicket:id=\"kind\">[kind]</span>\n     </div>\n     <div wicket:id=\"details\">[details]</div>\n-  </wicket:extend>\n+  </wicket:panel>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel.html"},{"sha":"881403b1b0e9449ef16898366a117254549fc783","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Details.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel.properties"},{"sha":"5c438b96a01d84278cda77eb01159560dd76756f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Details_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_it.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel_it.properties"},{"sha":"6771e09713d3d65f13d293338319fd781b65c208","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Details_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_ja.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel_ja.properties"},{"sha":"f31e84e964d83731f6bbcd567cb439911fbd1bc6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Details_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_pt_BR.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel_pt_BR.properties"},{"sha":"09867395878b9e6919bf79dcdd5a30df5311ff57","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Details_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Details_ru.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel_ru.properties"},{"sha":"b58d7717837c4562c6ecac46a2f0c94ea8a11425","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Labels.html","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,53 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <table class=\"table table-hover\">\n+      <tbody>\n+        <tr>\n+          <th>Locale</th>\n+          <th>Display</th>\n+        </tr>\n+        <tr wicket:id=\"labels\">\n+          <td>\n+            <span wicket:id=\"locale\"/>\n+          </td>\n+          <td>\n+            <span wicket:id=\"display\"/>\n+          </td>\n+          <td>\n+            <div id=\"inline-actions\">\n+              <span wicket:id=\"toRemove\"/>\n+            </div>\n+          </td>\n+        </tr>\n+      </tbody>\n+\n+      <tfoot>\n+        <tr>\n+          <td colspan=\"3\" style=\"padding: 5px; text-align: right\">\n+            <button type=\"submit\" class=\"btn btn-primary btn-circle btn-lg\" wicket:id=\"addLabel\">\n+              <i class=\"glyphicon glyphicon-plus\"></i>\n+            </button>\n+          </td>\n+        </tr>\n+      </tfoot>\n+    </table>\n+  </wicket:panel>\n+</html>"},{"sha":"280cb4e8df12e075934940cb65d6a35d6cd22e5b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Labels.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+translations=Translations"},{"sha":"50804c0cde1df066358e9f6f8c65611efda81e12","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Labels_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_it.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+translations=Traduzioni"},{"sha":"280cb4e8df12e075934940cb65d6a35d6cd22e5b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Labels_ja.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_ja.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+translations=Translations"},{"sha":"280cb4e8df12e075934940cb65d6a35d6cd22e5b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Labels_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_pt_BR.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+translations=Translations"},{"sha":"280cb4e8df12e075934940cb65d6a35d6cd22e5b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder$Labels_ru.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder%24Labels_ru.properties?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+translations=Translations"},{"sha":"b5d83e86fef7976c7ef13056eb808146b42a7847","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/VirSchemaDetails.html","status":"modified","additions":15,"deletions":19,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -19,25 +19,21 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div class=\"form-group\">\n-      <form wicket:id=\"form\">\n-        <div class=\"form-group\">\n-          <div class=\"form-group\">\n-            <span wicket:id=\"key\">[name]</span>\n-          </div>\n-          <div class=\"form-group\">\n-            <span wicket:id=\"readonly\">[readonly]</span>\n-          </div>\n-          <div class=\"form-group\">\n-            <span wicket:id=\"resource\">[resource]</span>\n-          </div>\n-          <div class=\"form-group\">\n-            <span wicket:id=\"anyType\">[anyType]</span>\n-          </div>\n-          <div class=\"form-group\">\n-            <span wicket:id=\"extAttrName\">[extAttrName]</span>\n-          </div>\n-        </div>\n-      </form>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"key\">[name]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"readonly\">[readonly]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"resource\">[resource]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"anyType\">[anyType]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"extAttrName\">[extAttrName]</span>\n+      </div>\n     </div>\n   </wicket:panel>\n </html>"},{"sha":"3b9dbc98035e55d4d6db81b15cacc381d04451ba","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AbstractMappingPanel.html","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -74,7 +74,7 @@\n             </td>\n             <td>\n               <div id=\"inline-actions\">\n-                <span  wicket:id=\"toRemove\"/>\n+                <span wicket:id=\"toRemove\"/>\n               </div>\n             </td>\n           </tr>\n@@ -83,7 +83,9 @@\n         <tfoot>\n           <tr>\n             <td colspan=\"10\" style=\"padding: 5px; text-align: right\">\n-              <input type=\"submit\" class=\"btn btn-primary\" wicket:id=\"addMappingBtn\" />\n+              <button type=\"submit\" class=\"btn btn-primary btn-circle btn-lg\" wicket:id=\"addMappingBtn\">\n+                <i class=\"glyphicon glyphicon-plus\"></i>\n+              </button>\n             </td>\n           </tr>\n         </tfoot>"},{"sha":"93a4feaaba2f18bc8613b637b5ab1efc0d77a72e","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -57,7 +57,6 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n      * i18n provider\n      */\n     $translatePartialLoaderProvider.addPart('static');\n-    $translatePartialLoaderProvider.addPart('dynamic');\n     $translateProvider.useLoader('$translatePartialLoader', {\n       urlTemplate: 'languages/{lang}/{part}.json'\n     }).preferredLanguage('en');\n@@ -86,7 +85,7 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n               }\n             })\n             /* </Extensions> */\n-            \n+\n             /* <Extensions> */\n             .state('self-oidcclient', {\n               url: '/self-oidcclient',"},{"sha":"e1ecabc2867d7b0e646798c7b9b02638575d3df2","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicDerivedAttributes.js","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicDerivedAttributes.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicDerivedAttributes.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicDerivedAttributes.js?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -29,7 +29,8 @@ angular.module('self')\n             templateUrl: getTemplateUrl(),\n             scope: {\n               dynamicForm: \"=form\",\n-              user: \"=\"\n+              user: \"=\",\n+              language: \"=\"\n             },\n             controller: function ($scope) {\n "},{"sha":"0dd1124a6b9ef635dabc126e572b67b29dd3f4a8","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicPlainAttributes.js","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -28,7 +28,8 @@ angular.module('self')\n             templateUrl: getTemplateUrl(),\n             scope: {\n               dynamicForm: \"=form\",\n-              user: \"=\"\n+              user: \"=\",\n+              language: \"=\"\n             },\n             controller: function ($scope) {\n "},{"sha":"300c73df4d873bfc970336b7fbb70b6ffd10f2e3","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicVirtualAttributes.js","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttributes.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttributes.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicVirtualAttributes.js?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -29,7 +29,8 @@ angular.module('self')\n             templateUrl: getTemplateUrl(),\n             scope: {\n               dynamicForm: \"=form\",\n-              user: \"=\"\n+              user: \"=\",\n+              language: \"=\"\n             },\n             controller: function ($scope) {\n "},{"sha":"e4f50d392ee286bfad98d338b95cf14f54c62ec8","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/de/dynamic.json","status":"removed","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fdynamic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fdynamic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fdynamic.json?ref=6a9d557545eb9e35910af4cc32668f649b61cdbe","patch":"@@ -1,26 +0,0 @@\n-{\n-  \"credentials\": \"Anmeldedaten\",\n-  \"groups\": \"Gruppen\",\n-  \"plainSchemas\": \"PlainSchemas\",\n-  \"derivedSchemas\": \"DerivedSchemas\",\n-  \"virtualSchemas\": \"VirtualSchemas\",\n-  \"resources\": \"Ressourcen\",\n-  \"finish\": \"Ende\",\n-  \"fullname\": \"vollständiger Name\",\n-  \"userId\": \"Benutzer-ID\",\n-  \"loginDate\": \"Login-Datum\",\n-  \"firstname\": \"Vorname\",\n-  \"surname\": \"Familien- oder Nachname\",\n-  \"ctype\": \"ctype\",\n-  \"email\": \"email\",\n-  \"activationDate\": \"Aktivierungsdatum \",\n-  \"uselessReadonly\": \"unnötig, nur zum lesen\",\n-  \"cool\": \"cool\",\n-  \"gender\": \"Geschlecht\",\n-  \"aLong\": \"aLong\",\n-  \"makeItDouble\": \"verdoppeln\",\n-  \"obscure\": \"undeutlich\",\n-  \"photo\": \"Foto\",\n-  \"GROUPS\": \"Gruppen\",\n-  \"AUXILIARY CLASSES\": \"Hilfsklassen\"\n-}\n\\ No newline at end of file"},{"sha":"9b0c4c2c7f7302535198498465fcd3b7909bf7a8","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/de/static.json","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fstatic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fstatic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fde%2Fstatic.json?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -36,15 +36,16 @@\n   \"ITALIAN\": \"Italienisch\",\n   \"GERMAN\": \"Deutsch\",\n   \"JAPANESE\": \"Japanisch\",\n-  \"GROUPS\": \"Gruppen\",\n+  \"groups\": \"Gruppen\",\n   \"GROUPS_PLACEHOLDER\": \"Klicken sie auf Gruppen um auszuwählen...\",\n   \"AUXILIARY CLASSES\": \"Hilfsklassen\",\n   \"AUXILIARY_CLASSES_PLACEHOLDER\": \"Klicken sie auf Hilfsklasse um auszuwählen\",\n-  \"CREDENZIALI\": \"Anmeldedaten\",\n-  \"PLAINSCHEMAS\": \"PlainSchemas\",\n-  \"DERIVEDSCHEMAS\": \"DerivedSchemas\",\n-  \"VIRTUALSCHEMAS\": \"VirtualSchemas\",\n-  \"RESOURCES\": \"Ressourcen\",\n+  \"credentials\": \"Anmeldedaten\",\n+  \"plainSchemas\": \"PlainSchemas\",\n+  \"derivedSchemas\": \"DerivedSchemas\",\n+  \"virtualSchemas\": \"VirtualSchemas\",\n+  \"resources\": \"Ressourcen\",\n+  \"finish\": \"Finish\",\n   \"RESOURCES_PLACEHOLDER\": \"Wählen Sie ressourcen...\",\n   \"REALM\": \"Realm\",\n   \"NEWUSER\": \"Neuer Benutzer\","},{"sha":"5583eb7b6ce38690c04362870234cc5967ea841b","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/en/dynamic.json","status":"removed","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fdynamic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fdynamic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fdynamic.json?ref=6a9d557545eb9e35910af4cc32668f649b61cdbe","patch":"@@ -1,24 +0,0 @@\n-{\n-  \"credentials\": \"Details\",\n-  \"groups\": \"Groups\",\n-  \"plainSchemas\": \"PlainSchemas\",\n-  \"derivedSchemas\": \"DerivedSchemas\",\n-  \"virtualSchemas\": \"VirtualSchemas\",\n-  \"resources\": \"Resources\",\n-  \"finish\": \"Finish\",\n-  \"fullname\": \"fullname\",\n-  \"userId\": \"userId\",\n-  \"loginDate\": \"loginDate\",\n-  \"firstname\": \"firstname\",\n-  \"surname\": \"surname\",\n-  \"ctype\": \"ctype\",\n-  \"email\": \"email\",\n-  \"activationDate\": \"activationDate\",\n-  \"uselessReadonly\": \"uselessReadonly\",\n-  \"cool\": \"cool\",\n-  \"gender\": \"gender\",\n-  \"aLong\": \"aLong\",\n-  \"makeItDouble\": \"makeItDouble\",\n-  \"obscure\": \"obscure\",\n-  \"photo\": \"photo\"\n-}"},{"sha":"e580e2667d7a20fb5024eefc6c116d9680965af9","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/en/static.json","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fstatic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fstatic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fen%2Fstatic.json?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -36,15 +36,16 @@\n   \"ITALIAN\": \"Italian\",\n   \"GERMAN\": \"German\",\n   \"JAPANESE\": \"Japanese\",\n-  \"GROUPS\": \"Groups\",\n+  \"groups\": \"Groups\",\n   \"GROUPS_PLACEHOLDER\": \"Click to select groups...\",\n   \"AUXILIARY CLASSES\": \"Auxiliary classes\",\n   \"AUXILIARY_CLASSES_PLACEHOLDER\": \"Click to select auxclasses...\",\n-  \"CREDENZIALI\": \"Details\",\n-  \"PLAINSCHEMAS\": \"PlainSchemas\",\n-  \"DERIVEDSCHEMAS\": \"DerivedSchemas\",\n-  \"VIRTUALSCHEMAS\": \"VirtualSchemas\",\n-  \"RESOURCES\": \"Resources\",\n+  \"credentials\": \"Details\",\n+  \"plainSchemas\": \"PlainSchemas\",\n+  \"derivedSchemas\": \"DerivedSchemas\",\n+  \"virtualSchemas\": \"VirtualSchemas\",\n+  \"resources\": \"Resources\",\n+  \"finish\": \"Finish\",\n   \"RESOURCES_PLACEHOLDER\": \"Click to select resources...\",\n   \"REALM\": \"Realm\",\n   \"NEWUSER\": \"New User\","},{"sha":"8ad757a926726fb8804edbca80ed771c7d744441","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/it/dynamic.json","status":"removed","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fdynamic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fdynamic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fdynamic.json?ref=6a9d557545eb9e35910af4cc32668f649b61cdbe","patch":"@@ -1,24 +0,0 @@\n-{\n-  \"credentials\": \"Dettagli\",\n-  \"groups\": \"Gruppi\",\n-  \"plainSchemas\": \"PlainSchemas\",\n-  \"derivedSchemas\": \"DerivedSchemas\",\n-  \"virtualSchemas\": \"VirtualSchemas\",\n-  \"resources\": \"Risorse\",\n-  \"finish\": \"Fine\",\n-  \"fullname\": \"nome completo\",\n-  \"userId\": \"Id utente\",\n-  \"loginDate\": \"data di login\",\n-  \"firstname\": \"nome\",\n-  \"surname\": \"cognome\",\n-  \"ctype\": \"ctype\",\n-  \"email\": \"email\",\n-  \"activationDate\": \"data di attivazione\",\n-  \"uselessReadonly\": \"uselessReadonly\",\n-  \"cool\": \"cool\",\n-  \"gender\": \"genere\",\n-  \"aLong\": \"aLong\",\n-  \"makeItDouble\": \"makeItDouble\",\n-  \"obscure\": \"obscure\",\n-  \"photo\": \"foto\"\n-}"},{"sha":"55b16f5274d6749d1823c775e29a3b5518bac59e","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/it/static.json","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fstatic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fstatic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fit%2Fstatic.json?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -36,15 +36,16 @@\n   \"ITALIAN\": \"Italiano\",\n   \"GERMAN\": \"Tedesco\",\n   \"JAPANESE\": \"Giapponese\",\n-  \"GROUPS\": \"Gruppi\",\n+  \"groups\": \"Gruppi\",\n   \"GROUPS_PLACEHOLDER\": \"Clicca per selezionare i gruppi...\",\n-  \"AUXILIARY CLASSES\": \"Classi Ausiliari\",\n+  \"AUXILIARY CLASSES\": \"Classi Ausiliarie\",\n   \"AUXILIARY_CLASSES_PLACEHOLDER\": \"Clicca per selezionare le classi ausiliarie...\",\n-  \"CREDENZIALI\": \"Dettagli\",\n-  \"PLAINSCHEMAS\": \"PlainSchemas\",\n-  \"DERIVEDSCHEMAS\": \"DerivedSchemas\",\n-  \"VIRTUALSCHEMAS\": \"VirtualSchemas\",\n-  \"RESOURCES\": \"Risorse\",\n+  \"credentials\": \"Dettagli\",\n+  \"plainSchemas\": \"PlainSchemas\",\n+  \"derivedSchemas\": \"DerivedSchemas\",\n+  \"virtualSchemas\": \"VirtualSchemas\",\n+  \"resources\": \"Risorse\",\n+  \"finish\": \"Fine\",\n   \"RESOURCES_PLACEHOLDER\": \"Clicca per selezionare risorse...\",\n   \"NEWUSER\": \"Nuovo utente\",\n   \"REALM\": \"Realm\",\n@@ -54,4 +55,4 @@\n   \"GOBACKHOME\": \"Clicca su questo link per tornare alla home page\",\n   \"CONFIRM_REMOVE\": \"Questa azione rimuoverà il valore corrente. Continuare?\",\n   \"own\": \"Propri\"\n-}\n\\ No newline at end of file\n+}"},{"sha":"1c7e984846aae5f7ed38d31c56a7e6e9269c9b34","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/ja/dynamic.json","status":"removed","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fja%2Fdynamic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a9d557545eb9e35910af4cc32668f649b61cdbe/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fja%2Fdynamic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fja%2Fdynamic.json?ref=6a9d557545eb9e35910af4cc32668f649b61cdbe","patch":"@@ -1,24 +0,0 @@\n-{\n-  \"credentials\": \"詳細\",\n-  \"groups\": \"グループ\",\n-  \"plainSchemas\": \"プレーンスキーマ\",\n-  \"derivedSchemas\": \"派生スキーマ\",\n-  \"virtualSchemas\": \"仮想スキーマ\",\n-  \"resources\": \"リソース\",\n-  \"finish\": \"完了\",\n-  \"fullname\": \"氏名\",\n-  \"userId\": \"ユーザーId\",\n-  \"loginDate\": \"ログイン日\",\n-  \"firstname\": \"名\",\n-  \"surname\": \"姓\",\n-  \"ctype\": \"ctype\",\n-  \"email\": \"メール\",\n-  \"activationDate\": \"アクティベーション日\",\n-  \"uselessReadonly\": \"不要読み取り専用\",\n-  \"cool\": \"クール\",\n-  \"gender\": \"性別\",\n-  \"aLong\": \"一緒\",\n-  \"makeItDouble\": \"倍にする\",\n-  \"obscure\": \"不明\",\n-  \"photo\": \"写真\"\n-}"},{"sha":"046b29d4dd5e965ee08192cf2da546882ae449b5","filename":"client/enduser/src/main/resources/META-INF/resources/app/languages/ja/static.json","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fja%2Fstatic.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fja%2Fstatic.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Flanguages%2Fja%2Fstatic.json?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -36,15 +36,16 @@\n   \"ITALIAN\": \"イタリア語\",\n   \"GERMAN\": \"ドイツ語\",\n   \"JAPANESE\": \"日本語\",\n-  \"GROUPS\": \"グループ\",\n+  \"groups\": \"グループ\",\n   \"GROUPS_PLACEHOLDER\": \"クリックしてグループを選択...\",\n   \"AUXILIARY CLASSES\": \"補助クラス\",\n   \"AUXILIARY_CLASSES_PLACEHOLDER\": \"クリックして補助クラスを選択...\",\n-  \"CREDENZIALI\": \"詳細\",\n-  \"PLAINSCHEMAS\": \"プレーンスキーマ\",\n-  \"DERIVEDSCHEMAS\": \"派生スキーマ\",\n-  \"VIRTUALSCHEMAS\": \"仮想スキーマ\",\n-  \"RESOURCES\": \"リソース\",\n+  \"credentials\": \"詳細\",\n+  \"plainSchemas\": \"プレーンスキーマ\",\n+  \"derivedSchemas\": \"派生スキーマ\",\n+  \"virtualSchemas\": \"仮想スキーマ\",\n+  \"resources\": \"リソース\",\n+  \"finish\": \"Finish\",\n   \"RESOURCES_PLACEHOLDER\": \"クリックしてリソースを選択...\",\n   \"REALM\": \"レルム\",\n   \"NEWUSER\": \"新しいユーザー\","},{"sha":"fed36789da696d8105c4d77e90aed132335868d6","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/dynamicDerivedAttributes.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicDerivedAttributes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicDerivedAttributes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicDerivedAttributes.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -22,10 +22,10 @@\n          ng-init=\"status = {isOpen: (groupSchema == 'own')}\" is-open=\"status.isOpen\"\n          class=\"breadcrumb-header\">\n       <div id=\"attribute\" class=\"form-group\" ng-repeat=\"derSchema in getByGroup(groupSchema) track by $index\">\n-        <label for=\"derSchema.key\">{{derSchema.simpleKey| translate}} <span ng-if=\"derSchema.mandatoryCondition === 'true'\">*</span></label>\n+        <label for=\"derSchema.key\">{{derSchema.labels[language] || derSchema.simpleKey}} <span ng-if=\"derSchema.mandatoryCondition === 'true'\">*</span></label>\n         <div ng-if=\"!derSchema.multivalue\">\n           <dynamic-derived-attribute schema=\"derSchema\" user=\"user\" index=\"0\"></dynamic-derived-attribute>\n-          <validation-message name=\"{{derSchema.key| translate}}\"/>\n+          <validation-message name=\"{{derSchema.simpleKey}}\"/>\n         </div>\n         <div ng-if=\"derSchema.multivalue\">\n           <div ng-repeat=\"field in dynamicForm.attributeTable[derSchema.key].fields track by $index\" "},{"sha":"4f220aa62222c87c945ca2fe7899c8972c37700b","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/dynamicPlainAttributes.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttributes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttributes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttributes.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -23,10 +23,10 @@\n          class=\"breadcrumb-header\">\n \n       <div id=\"attribute\" class=\"form-group\" ng-repeat=\"plainSchema in getByGroup(groupSchema) track by $index\">\n-        <label for=\"plainSchema.key\">{{plainSchema.simpleKey| translate}} <span ng-if=\"plainSchema.mandatoryCondition === 'true'\">*</span></label>\n+        <label for=\"plainSchema.key\">{{plainSchema.labels[language] || plainSchema.simpleKey}} <span ng-if=\"plainSchema.mandatoryCondition === 'true'\">*</span></label>\n         <div ng-if=\"!plainSchema.multivalue\">\n           <dynamic-plain-attribute schema=\"plainSchema\" user=\"user\" index=\"0\"></dynamic-plain-attribute>\n-          <validation-message name=\"{{plainSchema.key| translate}}\"/>\n+          <validation-message name=\"{{plainSchema.key}}\"/>\n         </div>\n         \n         <div ng-if=\"plainSchema.multivalue\">"},{"sha":"f4c9325d25e86fbb2edd7612f39407d12dae1bc9","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/dynamicVirtualAttributes.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicVirtualAttributes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicVirtualAttributes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicVirtualAttributes.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -22,10 +22,10 @@\n          ng-init=\"status = {isOpen: (groupSchema == 'own')}\" is-open=\"status.isOpen\"\n          class=\"breadcrumb-header\">\n       <div id=\"attribute\" class=\"form-group\" ng-repeat=\"virSchema in getByGroup(groupSchema) track by $index\">\n-        <label for=\"virSchema.key\">{{virSchema.simpleKey| translate}} <span ng-if=\"virSchema.mandatoryCondition === 'true'\">*</span></label>\n+        <label for=\"virSchema.key\">{{virSchema.labels[language] || virSchema.simpleKey}} <span ng-if=\"virSchema.mandatoryCondition === 'true'\">*</span></label>\n         <div ng-if=\"!virSchema.multivalue\">\n           <dynamic-virtual-attribute schema=\"virSchema\" user=\"user\" index=\"0\"></dynamic-virtual-attribute>\n-          <validation-message name=\"{{virSchema.key| translate}}\"/>\n+          <validation-message name=\"{{virSchema.simpleKey}}\"/>\n         </div>\n         <div ng-if=\"virSchema.multivalue\">\n           <div ng-repeat=\"field in dynamicForm.attributeTable[virSchema.key].fields track by $index\" "},{"sha":"a788a2b6f9b4f65030c02eee0cb23d82470a691a","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/user-derived-schemas.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-derived-schemas.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-derived-schemas.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-derived-schemas.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -17,7 +17,7 @@\n under the License.\n -->\n <div>\n-  <dynamic-derived-attributes user=\"user\" form=\"dynamicForm\"></dynamic-derived-attributes>\n+  <dynamic-derived-attributes user=\"user\" form=\"dynamicForm\" language=\"languages.selectedLanguage.code\"></dynamic-derived-attributes>\n </div>\n <div id=\"attribute\" class=\"form-group row\">\n   <div class=\"pull-right\">"},{"sha":"c95f4dfd7ee67ff91d20c92c3db0a55ad14b4072","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/user-groups.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -25,7 +25,7 @@\n   </select>\n </div>\n <div id=\"attribute\" class=\"form-group row upper-select\">\n-  <label>{{\"GROUPS\"|translate}}</label><br/>\n+  <label>{{\"groups\"|translate}}</label><br/>\n   <groups form=\"dynamicForm\" user=\"user\"></groups>\n </div>\n <div id=\"attribute\" class=\"form-group row upper-select\">"},{"sha":"c7cae6debd06eb7807544ae9e757e521721288a6","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/user-plain-schemas.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-plain-schemas.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-plain-schemas.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-plain-schemas.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -17,7 +17,7 @@\n under the License.\n -->\n <div>\n-  <dynamic-plain-attributes form=\"dynamicForm\" user=\"user\"></dynamic-plain-attributes>\n+  <dynamic-plain-attributes form=\"dynamicForm\" user=\"user\" language=\"languages.selectedLanguage.code\"></dynamic-plain-attributes>\n </div>\n <div id=\"attribute\" class=\"form-group row\">\n   <div class=\"pull-right\">"},{"sha":"257a9508c34d47a22695361f029aad7c778cc158","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/user-virtual-schemas.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-virtual-schemas.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-virtual-schemas.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-virtual-schemas.html?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -17,7 +17,7 @@\n under the License.\n -->\n <div>\n-  <dynamic-virtual-attributes form=\"dynamicForm\" user=\"user\"></dynamic-virtual-attributes>\n+  <dynamic-virtual-attributes form=\"dynamicForm\" user=\"user\" language=\"languages.selectedLanguage.code\"></dynamic-virtual-attributes>\n </div>\n <div id=\"attribute\" class=\"form-group row\">\n   <div class=\"pull-right\">"},{"sha":"f9b0a7f4823b3610fb1e66332bf75664efbf76a3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AnyPatch.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -59,7 +59,7 @@ public abstract class AnyPatch extends AbstractBaseBean implements AttributableP\n \n     private final Set<StringPatchItem> resources = new HashSet<>();\n \n-    @Schema(name = \"@class\", required = true, readOnly = false)\n+    @Schema(name = \"@class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {"},{"sha":"472d194313ebaf904035f7f0b6064eb9b402a3e5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/PolicyTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -58,7 +58,7 @@ public abstract class PolicyTO extends AbstractBaseBean implements EntityTO {\n \n     private final List<String> usedByRealms = new ArrayList<>();\n \n-    @Schema(name = \"@class\", required = true, readOnly = false)\n+    @Schema(name = \"@class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {"},{"sha":"727092f98fff5fb9c05e4543f2e6d63bde19f097","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -67,7 +67,7 @@ public abstract class AnyTO extends AbstractAnnotatedBean implements EntityTO, A\n \n     private final Set<String> resources = new HashSet<>();\n \n-    @Schema(name = \"@class\", required = true, readOnly = false)\n+    @Schema(name = \"@class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {"},{"sha":"4659a65812737e4c4f68ed97c6f4139ab6e27da0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SchemaTO.java","status":"modified","additions":19,"deletions":1,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,16 +18,22 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import io.swagger.v3.oas.annotations.media.Schema;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n @XmlRootElement(name = \"schema\")\n @XmlType\n@@ -47,7 +53,10 @@ public abstract class SchemaTO extends AbstractBaseBean implements EntityTO {\n \n     private String anyTypeClass;\n \n-    @Schema(name = \"@class\", required = true, readOnly = false)\n+    @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n+    private final Map<Locale, String> labels = new HashMap<>();\n+\n+    @Schema(name = \"@class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {\n@@ -73,4 +82,13 @@ public void setAnyTypeClass(final String anyTypeClass) {\n         this.anyTypeClass = anyTypeClass;\n     }\n \n+    @JsonIgnore\n+    public String getLabel(final Locale locale) {\n+        return labels.getOrDefault(locale, key);\n+    }\n+\n+    @JsonProperty\n+    public Map<Locale, String> getLabels() {\n+        return labels;\n+    }\n }"},{"sha":"5c73c5cf4de9bf5090f38ad409d047c6e2a17aa5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/TaskTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -54,7 +54,7 @@ public abstract class TaskTO extends AbstractStartEndBean implements EntityTO {\n \n     private final List<ExecTO> executions = new ArrayList<>();\n \n-    @Schema(name = \"@class\", required = true, readOnly = false)\n+    @Schema(name = \"@class\", required = true)\n     public abstract String getDiscriminator();\n \n     public void setDiscriminator(final String discriminator) {"},{"sha":"932d1360e52d12e8af38bca21bc4071725b37d7b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SchemaLogic.java","status":"modified","additions":12,"deletions":27,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -107,18 +107,18 @@ public <T extends SchemaTO> T create(final SchemaType schemaType, final T schema\n         switch (schemaType) {\n             case VIRTUAL:\n                 VirSchema virSchema = virSchemaDAO.save(binder.create((VirSchemaTO) schemaTO));\n-                created = (T) binder.getVirSchemaTO(virSchema);\n+                created = (T) binder.getVirSchemaTO(virSchema.getKey());\n                 break;\n \n             case DERIVED:\n                 DerSchema derSchema = derSchemaDAO.save(binder.create((DerSchemaTO) schemaTO));\n-                created = (T) binder.getDerSchemaTO(derSchema);\n+                created = (T) binder.getDerSchemaTO(derSchema.getKey());\n                 break;\n \n             case PLAIN:\n             default:\n                 PlainSchema plainSchema = plainSchemaDAO.save(binder.create((PlainSchemaTO) schemaTO));\n-                created = (T) binder.getPlainSchemaTO(plainSchema);\n+                created = (T) binder.getPlainSchemaTO(plainSchema.getKey());\n         }\n         return created;\n     }\n@@ -172,7 +172,7 @@ public <T extends SchemaTO> List<T> search(\n                                 ? virSchemaDAO.findAll()\n                                 : virSchemaDAO.findByKeyword(keyword)\n                         : virSchemaDAO.findByAnyTypeClasses(classes)).stream().\n-                        map(schema -> (T) binder.getVirSchemaTO(schema)).collect(Collectors.toList());\n+                        map(schema -> (T) binder.getVirSchemaTO(schema.getKey())).collect(Collectors.toList());\n                 break;\n \n             case DERIVED:\n@@ -181,7 +181,7 @@ public <T extends SchemaTO> List<T> search(\n                                 ? derSchemaDAO.findAll()\n                                 : derSchemaDAO.findByKeyword(keyword)\n                         : derSchemaDAO.findByAnyTypeClasses(classes)).stream().\n-                        map(schema -> (T) binder.getDerSchemaTO(schema)).collect(Collectors.toList());\n+                        map(schema -> (T) binder.getDerSchemaTO(schema.getKey())).collect(Collectors.toList());\n                 break;\n \n             case PLAIN:\n@@ -191,7 +191,7 @@ public <T extends SchemaTO> List<T> search(\n                                 ? plainSchemaDAO.findAll()\n                                 : plainSchemaDAO.findByKeyword(keyword)\n                         : plainSchemaDAO.findByAnyTypeClasses(classes)).stream().\n-                        map(schema -> (T) binder.getPlainSchemaTO(schema)).collect(Collectors.toList());\n+                        map(schema -> (T) binder.getPlainSchemaTO(schema.getKey())).collect(Collectors.toList());\n         }\n \n         return result;\n@@ -203,31 +203,16 @@ public <T extends SchemaTO> T read(final SchemaType schemaType, final String sch\n         T read;\n         switch (schemaType) {\n             case VIRTUAL:\n-                VirSchema virSchema = virSchemaDAO.find(schemaKey);\n-                if (virSchema == null) {\n-                    throw new NotFoundException(\"Virtual Schema '\" + schemaKey + \"'\");\n-                }\n-\n-                read = (T) binder.getVirSchemaTO(virSchema);\n+                read = (T) binder.getVirSchemaTO(schemaKey);\n                 break;\n \n             case DERIVED:\n-                DerSchema derSchema = derSchemaDAO.find(schemaKey);\n-                if (derSchema == null) {\n-                    throw new NotFoundException(\"Derived schema '\" + schemaKey + \"'\");\n-                }\n-\n-                read = (T) binder.getDerSchemaTO(derSchema);\n+                read = (T) binder.getDerSchemaTO(schemaKey);\n                 break;\n \n             case PLAIN:\n             default:\n-                PlainSchema schema = plainSchemaDAO.find(schemaKey);\n-                if (schema == null) {\n-                    throw new NotFoundException(\"Schema '\" + schemaKey + \"'\");\n-                }\n-\n-                read = (T) binder.getPlainSchemaTO(schema);\n+                read = (T) binder.getPlainSchemaTO(schemaKey);\n         }\n \n         return read;\n@@ -294,13 +279,13 @@ protected SchemaTO resolveReference(final Method method, final Object... args)\n                     if (derSchema == null) {\n                         VirSchema virSchema = virSchemaDAO.find(key);\n                         if (virSchema != null) {\n-                            result = binder.getVirSchemaTO(virSchema);\n+                            result = binder.getVirSchemaTO(key);\n                         }\n                     } else {\n-                        result = binder.getDerSchemaTO(derSchema);\n+                        result = binder.getDerSchemaTO(key);\n                     }\n                 } else {\n-                    result = binder.getPlainSchemaTO(plainSchema);\n+                    result = binder.getPlainSchemaTO(key);\n                 }\n \n                 return result;"},{"sha":"ec80bae1cf6f79ad62a397481715c14a96f15bd2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Schema.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchema.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Optional;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n \n public interface Schema extends ProvidedKeyEntity {\n@@ -36,4 +39,9 @@ public interface Schema extends ProvidedKeyEntity {\n \n     boolean isUniqueConstraint();\n \n+    boolean add(SchemaLabel label);\n+\n+    Optional<? extends SchemaLabel> getLabel(Locale locale);\n+\n+    List<? extends SchemaLabel> getLabels();\n }"},{"sha":"1ba2f7c5f47d39e32965eaf91c30dcb178521bac","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/SchemaLabel.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchemaLabel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchemaLabel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchemaLabel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.entity;\n+\n+import java.util.Locale;\n+\n+public interface SchemaLabel extends Entity {\n+\n+    Schema getSchema();\n+\n+    void setSchema(Schema schema);\n+\n+    Locale getLocale();\n+\n+    void setLocale(Locale locale);\n+\n+    String getDisplay();\n+\n+    void setDisplay(String display);\n+}"},{"sha":"180c3950eecdfa025968bafc72849a20acb299f4","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -58,7 +58,6 @@\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUser;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -228,9 +227,7 @@ public List<A> findByPlainAttrValue(\n         Query query = findByPlainAttrValueQuery(entityName, ignoreCaseMatch);\n         query.setParameter(\"schemaKey\", schemaKey);\n         query.setParameter(\"stringValue\", attrValue.getStringValue());\n-        query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n-                ? null\n-                : ((AbstractPlainAttrValue) attrValue).getBooleanAsInteger(attrValue.getBooleanValue()));\n+        query.setParameter(\"booleanValue\", attrValue.getBooleanValue());\n         if (attrValue.getDateValue() == null) {\n             query.setParameter(\"dateValue\", null);\n         } else {"},{"sha":"1d01d750578cf6518b7e5c5389a7e9b383bf286b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADerSchemaDAO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -45,9 +45,9 @@ public List<DerSchema> findByAnyTypeClasses(final Collection<AnyTypeClass> anyTy\n         StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").\n                 append(JPADerSchema.class.getSimpleName()).\n                 append(\" e WHERE \");\n-        for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n+        anyTypeClasses.forEach(anyTypeClass -> {\n             queryString.append(\"e.anyTypeClass.id='\").append(anyTypeClass.getKey()).append(\"' OR \");\n-        }\n+        });\n \n         TypedQuery<DerSchema> query = entityManager().createQuery(\n                 queryString.substring(0, queryString.length() - 4), DerSchema.class);\n@@ -83,6 +83,8 @@ public void delete(final String key) {\n             return;\n         }\n \n+        schema.getLabels().forEach(label -> label.setSchema(null));\n+\n         resourceDAO.deleteMapping(key);\n \n         if (schema.getAnyTypeClass() != null) {"},{"sha":"458cf41d464015fc1550882e228e3c5aabed7e63","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPlainSchemaDAO.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -64,9 +64,9 @@ public List<PlainSchema> findByAnyTypeClasses(final Collection<AnyTypeClass> any\n         StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").\n                 append(JPAPlainSchema.class.getSimpleName()).\n                 append(\" e WHERE \");\n-        for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n+        anyTypeClasses.forEach(anyTypeClass -> {\n             queryString.append(\"e.anyTypeClass.id='\").append(anyTypeClass.getKey()).append(\"' OR \");\n-        }\n+        });\n \n         TypedQuery<PlainSchema> query = entityManager().createQuery(\n                 queryString.substring(0, queryString.length() - 4), PlainSchema.class);\n@@ -122,13 +122,15 @@ public void delete(final String key) {\n             return;\n         }\n \n+        schema.getLabels().forEach(label -> label.setSchema(null));\n+\n         AnyUtilsFactory anyUtilsFactory = new JPAAnyUtilsFactory();\n         for (AnyTypeKind anyTypeKind : AnyTypeKind.values()) {\n             AnyUtils anyUtils = anyUtilsFactory.getInstance(anyTypeKind);\n \n-            for (PlainAttr<?> attr : findAttrs(schema, anyUtils.plainAttrClass())) {\n+            findAttrs(schema, anyUtils.plainAttrClass()).forEach(attr -> {\n                 plainAttrDAO.delete(attr.getKey(), anyUtils.plainAttrClass());\n-            }\n+            });\n \n             resourceDAO().deleteMapping(key);\n         }"},{"sha":"72a2e3029437d70a6cd87e5e8bb7af96b20cc2ec","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -191,7 +191,7 @@ public <T extends Task> List<T> findToExec(final TaskType type) {\n         StringBuilder queryString = buildFindAllQueryJPA(type).append(\"AND \");\n \n         if (type == TaskType.NOTIFICATION) {\n-            queryString.append(\"t.executed = 0 \");\n+            queryString.append(\"t.executed = false \");\n         } else {\n             queryString.append(\"t.executions IS EMPTY \");\n         }"},{"sha":"65702a45fb9f10e7a71c75b77fbd1b8a4286f942","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAVirSchemaDAO.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAVirSchemaDAO.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -65,9 +65,9 @@ public List<VirSchema> findByAnyTypeClasses(final Collection<AnyTypeClass> anyTy\n         StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").\n                 append(JPAVirSchema.class.getSimpleName()).\n                 append(\" e WHERE \");\n-        for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n+        anyTypeClasses.forEach(anyTypeClass -> {\n             queryString.append(\"e.anyTypeClass.id='\").append(anyTypeClass.getKey()).append(\"' OR \");\n-        }\n+        });\n \n         TypedQuery<VirSchema> query = entityManager().createQuery(\n                 queryString.substring(0, queryString.length() - 4), VirSchema.class);\n@@ -135,6 +135,8 @@ public void delete(final String key) {\n             return;\n         }\n \n+        schema.getLabels().forEach(label -> label.setSchema(null));\n+\n         resourceDAO().deleteMapping(key);\n \n         if (schema.getAnyTypeClass() != null) {"},{"sha":"7c9fdf7a87e4a39bd36db09fa05efd7660c94610","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractEntity.java","status":"modified","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractEntity.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -49,24 +49,6 @@ protected void checkImplementationType(final Implementation object, final Implem\n         }\n     }\n \n-    /**\n-     * @param property the integer representing a boolean value\n-     * @return the boolean value corresponding to the property param\n-     */\n-    public final boolean isBooleanAsInteger(final Integer property) {\n-        return property != null && property == 1;\n-    }\n-\n-    /**\n-     * @param value the boolean value to be represented as integer\n-     * @return the integer corresponding to the property param\n-     */\n-    public final Integer getBooleanAsInteger(final Boolean value) {\n-        return Boolean.TRUE.equals(value)\n-                ? 1\n-                : 0;\n-    }\n-\n     /**\n      * @return fields to be excluded when computing equals() or hashcode()\n      */"},{"sha":"b8566a7023998e7d1f6a8bddfd0ac1199977fc9c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttrValue.java","status":"modified","additions":3,"deletions":13,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -20,13 +20,10 @@\n \n import java.util.Base64;\n import java.util.Date;\n-import javax.persistence.Basic;\n import javax.persistence.Lob;\n import javax.persistence.MappedSuperclass;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n@@ -50,10 +47,7 @@ public abstract class AbstractPlainAttrValue extends AbstractGeneratedKeyEntity\n     @Temporal(TemporalType.TIMESTAMP)\n     private Date dateValue;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer booleanValue;\n+    private Boolean booleanValue;\n \n     private Long longValue;\n \n@@ -64,16 +58,12 @@ public abstract class AbstractPlainAttrValue extends AbstractGeneratedKeyEntity\n \n     @Override\n     public Boolean getBooleanValue() {\n-        return booleanValue == null\n-                ? null\n-                : isBooleanAsInteger(booleanValue);\n+        return booleanValue;\n     }\n \n     @Override\n     public void setBooleanValue(final Boolean booleanValue) {\n-        this.booleanValue = booleanValue == null\n-                ? null\n-                : getBooleanAsInteger(booleanValue);\n+        this.booleanValue = booleanValue;\n     }\n \n     @Override"},{"sha":"6b66e51fbd659390aa55393ad389c603a1e642c7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractSchema.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSchema.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,12 +18,20 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Optional;\n import javax.persistence.Cacheable;\n+import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n import javax.persistence.Inheritance;\n import javax.persistence.InheritanceType;\n+import javax.persistence.OneToMany;\n import javax.persistence.Table;\n import org.apache.syncope.core.persistence.api.entity.Schema;\n+import org.apache.syncope.core.persistence.api.entity.SchemaLabel;\n import org.apache.syncope.core.persistence.jpa.validation.entity.SchemaKeyCheck;\n \n @Entity\n@@ -37,4 +45,22 @@ public abstract class AbstractSchema extends AbstractProvidedKeyEntity implement\n \n     private static final long serialVersionUID = -9222344997225831269L;\n \n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY, mappedBy = \"schema\")\n+    private List<JPASchemaLabel> labels = new ArrayList<>();\n+\n+    @Override\n+    public boolean add(final SchemaLabel label) {\n+        checkType(label, JPASchemaLabel.class);\n+        return this.labels.add((JPASchemaLabel) label);\n+    }\n+\n+    @Override\n+    public Optional<? extends SchemaLabel> getLabel(final Locale locale) {\n+        return labels.stream().filter(label -> label.getLocale().equals(locale)).findFirst();\n+    }\n+\n+    @Override\n+    public List<? extends SchemaLabel> getLabels() {\n+        return labels;\n+    }\n }"},{"sha":"0f60dd7f5ba7dc9584e0799a6df06970478a582c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -131,6 +131,7 @@\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.Privilege;\n import org.apache.syncope.core.persistence.api.entity.Remediation;\n+import org.apache.syncope.core.persistence.api.entity.SchemaLabel;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResourceHistoryConf;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnitItem;\n import org.apache.syncope.core.persistence.jpa.entity.policy.JPAPullCorrelationRuleEntity;\n@@ -218,6 +219,8 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n             result = (E) new JPAConnInstance();\n         } else if (reference.equals(ConnInstanceHistoryConf.class)) {\n             result = (E) new JPAConnInstanceHistoryConf();\n+        } else if (reference.equals(SchemaLabel.class)) {\n+            result = (E) new JPASchemaLabel();\n         } else if (reference.equals(PlainSchema.class)) {\n             result = (E) new JPAPlainSchema();\n         } else if (reference.equals(APlainAttr.class)) {"},{"sha":"5543ef88ed4ab6e24eb3a9b40fdc87772f7500b3","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPANotification.java","status":"modified","additions":10,"deletions":28,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -21,7 +21,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n@@ -34,8 +33,6 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.common.lib.types.TraceLevel;\n@@ -58,10 +55,10 @@ public class JPANotification extends AbstractGeneratedKeyEntity implements Notif\n     @CollectionTable(name = \"Notification_events\",\n             joinColumns =\n             @JoinColumn(name = \"notification_id\", referencedColumnName = \"id\"))\n-    private List<String> events;\n+    private List<String> events = new ArrayList<>();\n \n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"notification\")\n-    private List<JPAAnyAbout> abouts;\n+    private List<JPAAnyAbout> abouts = new ArrayList<>();\n \n     private String recipientsFIQL;\n \n@@ -70,7 +67,7 @@ public class JPANotification extends AbstractGeneratedKeyEntity implements Notif\n             joinColumns =\n             @JoinColumn(name = \"notification_id\", referencedColumnName = \"id\"))\n     @Column(name = \"staticRecipients\")\n-    private List<String> staticRecipients;\n+    private List<String> staticRecipients = new ArrayList<>();\n \n     @NotNull\n     private String recipientAttrName;\n@@ -79,10 +76,7 @@ public class JPANotification extends AbstractGeneratedKeyEntity implements Notif\n     private JPAImplementation recipientsProvider;\n \n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer selfAsRecipient;\n+    private Boolean selfAsRecipient = false;\n \n     @NotNull\n     private String sender;\n@@ -96,22 +90,10 @@ public class JPANotification extends AbstractGeneratedKeyEntity implements Notif\n \n     @NotNull\n     @Enumerated(EnumType.STRING)\n-    private TraceLevel traceLevel;\n+    private TraceLevel traceLevel = TraceLevel.ALL;\n \n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer active;\n-\n-    public JPANotification() {\n-        events = new ArrayList<>();\n-        abouts = new ArrayList<>();\n-        staticRecipients = new ArrayList<>();\n-        selfAsRecipient = getBooleanAsInteger(false);\n-        active = getBooleanAsInteger(true);\n-        traceLevel = TraceLevel.ALL;\n-    }\n+    private Boolean active = true;\n \n     @Override\n     public String getRecipientsFIQL() {\n@@ -173,12 +155,12 @@ public List<String> getStaticRecipients() {\n \n     @Override\n     public boolean isSelfAsRecipient() {\n-        return isBooleanAsInteger(selfAsRecipient);\n+        return selfAsRecipient;\n     }\n \n     @Override\n     public void setSelfAsRecipient(final boolean selfAsRecipient) {\n-        this.selfAsRecipient = getBooleanAsInteger(selfAsRecipient);\n+        this.selfAsRecipient = selfAsRecipient;\n     }\n \n     @Override\n@@ -225,11 +207,11 @@ public void setTraceLevel(final TraceLevel traceLevel) {\n \n     @Override\n     public boolean isActive() {\n-        return isBooleanAsInteger(active);\n+        return active;\n     }\n \n     @Override\n     public void setActive(final boolean active) {\n-        this.active = getBooleanAsInteger(active);\n+        this.active = active;\n     }\n }"},{"sha":"e26f5e93eb9e5ba0f5ed778e10c1975d9322fd9f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAPlainSchema.java","status":"modified","additions":11,"deletions":33,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPlainSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPlainSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPlainSchema.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n-import javax.persistence.Basic;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n@@ -29,8 +28,6 @@\n import javax.persistence.PrimaryKeyJoinColumn;\n import javax.persistence.Table;\n import javax.persistence.Transient;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n@@ -58,25 +55,16 @@ public class JPAPlainSchema extends AbstractSchema implements PlainSchema {\n \n     @NotNull\n     @Enumerated(EnumType.STRING)\n-    private AttrSchemaType type;\n+    private AttrSchemaType type = AttrSchemaType.String;\n \n     @NotNull\n-    private String mandatoryCondition;\n+    private String mandatoryCondition = Boolean.FALSE.toString();\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer multivalue;\n+    private Boolean multivalue = false;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer uniqueConstraint;\n+    private Boolean uniqueConstraint = false;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer readonly;\n+    private Boolean readonly = false;\n \n     @Column(nullable = true)\n     private String conversionPattern;\n@@ -105,16 +93,6 @@ public class JPAPlainSchema extends AbstractSchema implements PlainSchema {\n     @Transient\n     private Validator validatorImpl;\n \n-    public JPAPlainSchema() {\n-        super();\n-\n-        type = AttrSchemaType.String;\n-        mandatoryCondition = Boolean.FALSE.toString();\n-        multivalue = getBooleanAsInteger(false);\n-        uniqueConstraint = getBooleanAsInteger(false);\n-        readonly = getBooleanAsInteger(false);\n-    }\n-\n     @Override\n     public AnyTypeClass getAnyTypeClass() {\n         return anyTypeClass;\n@@ -148,32 +126,32 @@ public void setMandatoryCondition(final String condition) {\n \n     @Override\n     public boolean isMultivalue() {\n-        return isBooleanAsInteger(multivalue);\n+        return multivalue;\n     }\n \n     @Override\n     public void setMultivalue(final boolean multivalue) {\n-        this.multivalue = getBooleanAsInteger(multivalue);\n+        this.multivalue = multivalue;\n     }\n \n     @Override\n     public boolean isUniqueConstraint() {\n-        return isBooleanAsInteger(uniqueConstraint);\n+        return uniqueConstraint;\n     }\n \n     @Override\n     public void setUniqueConstraint(final boolean uniquevalue) {\n-        this.uniqueConstraint = getBooleanAsInteger(uniquevalue);\n+        this.uniqueConstraint = uniquevalue;\n     }\n \n     @Override\n     public boolean isReadonly() {\n-        return isBooleanAsInteger(readonly);\n+        return readonly;\n     }\n \n     @Override\n     public void setReadonly(final boolean readonly) {\n-        this.readonly = getBooleanAsInteger(readonly);\n+        this.readonly = readonly;\n     }\n \n     public Validator validator() {"},{"sha":"bed6e366da9e750f28923c067a9668f0f4e2275a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAReport.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAReport.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -20,7 +20,6 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n@@ -31,8 +30,6 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n@@ -67,10 +64,7 @@ public class JPAReport extends AbstractGeneratedKeyEntity implements Report {\n     private List<JPAReportExec> executions = new ArrayList<>();\n \n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer active;\n+    private Boolean active = true;\n \n     @ManyToOne(fetch = FetchType.EAGER, optional = false)\n     @JoinColumn(name = \"template_id\")\n@@ -121,12 +115,12 @@ public void setCronExpression(final String cronExpression) {\n \n     @Override\n     public boolean isActive() {\n-        return isBooleanAsInteger(active);\n+        return active;\n     }\n \n     @Override\n     public void setActive(final boolean active) {\n-        this.active = getBooleanAsInteger(active);\n+        this.active = active;\n     }\n \n     @Override"},{"sha":"53330b150be2e6e023329e85189e21ddb6166028","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASchemaLabel.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASchemaLabel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASchemaLabel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASchemaLabel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import java.util.Locale;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import javax.persistence.UniqueConstraint;\n+import org.apache.syncope.core.persistence.api.entity.Schema;\n+import org.apache.syncope.core.persistence.api.entity.SchemaLabel;\n+\n+@Entity\n+@Table(name = JPASchemaLabel.TABLE, uniqueConstraints =\n+        @UniqueConstraint(columnNames = { \"schema_id\", \"locale\" }))\n+public class JPASchemaLabel extends AbstractGeneratedKeyEntity implements SchemaLabel {\n+\n+    public static final String TABLE = \"SchemaLabel\";\n+\n+    private static final long serialVersionUID = -546019894866607764L;\n+\n+    @ManyToOne\n+    private AbstractSchema schema;\n+\n+    @Column(nullable = false)\n+    private Locale locale;\n+\n+    @Column(nullable = false)\n+    private String display;\n+\n+    @Override\n+    public AbstractSchema getSchema() {\n+        return schema;\n+    }\n+\n+    @Override\n+    public void setSchema(final Schema schema) {\n+        checkType(schema, AbstractSchema.class);\n+        this.schema = (AbstractSchema) schema;\n+    }\n+\n+    @Override\n+    public Locale getLocale() {\n+        return locale;\n+    }\n+\n+    @Override\n+    public void setLocale(final Locale locale) {\n+        this.locale = locale;\n+    }\n+\n+    @Override\n+    public String getDisplay() {\n+        return display;\n+    }\n+\n+    @Override\n+    public void setDisplay(final String display) {\n+        this.display = display;\n+    }\n+}"},{"sha":"2d79ea3e7ab42e494f6d60e1e81b32c8ff2c78e5","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAVirSchema.java","status":"modified","additions":5,"deletions":17,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAVirSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAVirSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAVirSchema.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,15 +18,12 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n-import javax.persistence.Basic;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToOne;\n import javax.persistence.PrimaryKeyJoinColumn;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n@@ -48,10 +45,7 @@ public class JPAVirSchema extends AbstractSchema implements VirSchema {\n     @OneToOne(fetch = FetchType.EAGER)\n     private JPAAnyTypeClass anyTypeClass;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer readonly;\n+    private Boolean readonly = false;\n \n     @NotNull\n     @ManyToOne\n@@ -60,12 +54,6 @@ public class JPAVirSchema extends AbstractSchema implements VirSchema {\n     @NotNull\n     private String extAttrName;\n \n-    public JPAVirSchema() {\n-        super();\n-\n-        readonly = getBooleanAsInteger(false);\n-    }\n-\n     @Override\n     public AnyTypeClass getAnyTypeClass() {\n         return anyTypeClass;\n@@ -89,22 +77,22 @@ public String getMandatoryCondition() {\n \n     @Override\n     public boolean isMultivalue() {\n-        return Boolean.TRUE;\n+        return true;\n     }\n \n     @Override\n     public boolean isUniqueConstraint() {\n-        return Boolean.FALSE;\n+        return false;\n     }\n \n     @Override\n     public boolean isReadonly() {\n-        return isBooleanAsInteger(readonly);\n+        return readonly;\n     }\n \n     @Override\n     public void setReadonly(final boolean readonly) {\n-        this.readonly = getBooleanAsInteger(readonly);\n+        this.readonly = readonly;\n     }\n \n     @Override"},{"sha":"24b1a2e4792eb462e5559ae6234e85725f563ebe","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPAAccountPolicy.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccountPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccountPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAAccountPolicy.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -22,15 +22,13 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import javax.persistence.Basic;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n import javax.persistence.JoinTable;\n import javax.persistence.ManyToMany;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n@@ -46,10 +44,8 @@ public class JPAAccountPolicy extends AbstractPolicy implements AccountPolicy {\n \n     public static final String TABLE = \"AccountPolicy\";\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer propagateSuspension;\n+    @NotNull\n+    private Boolean propagateSuspension = false;\n \n     private int maxAuthenticationAttempts;\n \n@@ -73,12 +69,12 @@ public class JPAAccountPolicy extends AbstractPolicy implements AccountPolicy {\n \n     @Override\n     public boolean isPropagateSuspension() {\n-        return isBooleanAsInteger(propagateSuspension);\n+        return propagateSuspension;\n     }\n \n     @Override\n     public void setPropagateSuspension(final boolean propagateSuspension) {\n-        this.propagateSuspension = getBooleanAsInteger(propagateSuspension);\n+        this.propagateSuspension = propagateSuspension;\n     }\n \n     @Override"},{"sha":"c3de4e23b9c6d2af9273abd92b30e8d2f1e41627","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/policy/JPAPasswordPolicy.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPasswordPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPasswordPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fpolicy%2FJPAPasswordPolicy.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -20,15 +20,13 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import javax.persistence.Basic;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n import javax.persistence.JoinTable;\n import javax.persistence.ManyToMany;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n@@ -42,10 +40,8 @@ public class JPAPasswordPolicy extends AbstractPolicy implements PasswordPolicy\n \n     public static final String TABLE = \"PasswordPolicy\";\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer allowNullPassword;\n+    @NotNull\n+    private Boolean allowNullPassword = false;\n \n     private int historyLength;\n \n@@ -59,12 +55,12 @@ public class JPAPasswordPolicy extends AbstractPolicy implements PasswordPolicy\n \n     @Override\n     public boolean isAllowNullPassword() {\n-        return isBooleanAsInteger(allowNullPassword);\n+        return allowNullPassword;\n     }\n \n     @Override\n     public void setAllowNullPassword(final boolean allowNullPassword) {\n-        this.allowNullPassword = getBooleanAsInteger(allowNullPassword);\n+        this.allowNullPassword = allowNullPassword;\n     }\n \n     @Override"},{"sha":"f252dd3d7e433059d26311004f54c68dac951b8d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/AbstractItem.java","status":"modified","additions":7,"deletions":25,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FAbstractItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FAbstractItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FAbstractItem.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,13 +18,10 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.resource;\n \n-import javax.persistence.Basic;\n import javax.persistence.Column;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n import javax.persistence.MappedSuperclass;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n@@ -48,25 +45,19 @@ public abstract class AbstractItem extends AbstractGeneratedKeyEntity implements\n      * Specify if the mapped target resource's field is nullable.\n      */\n     @NotNull\n-    private String mandatoryCondition;\n+    private String mandatoryCondition = Boolean.FALSE.toString();\n \n     /**\n      * Specify if the mapped target resource's field is the id.\n      */\n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer connObjectKey;\n+    private Boolean connObjectKey = false;\n \n     /**\n      * Specify if the mapped target resource's field is the password.\n      */\n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer password;\n+    private Boolean password = false;\n \n     @NotNull\n     @Enumerated(EnumType.STRING)\n@@ -84,15 +75,6 @@ public abstract class AbstractItem extends AbstractGeneratedKeyEntity implements\n     @Column(name = \"pullJEXL\")\n     private String pullJEXLTransformer;\n \n-    public AbstractItem() {\n-        super();\n-\n-        mandatoryCondition = Boolean.FALSE.toString();\n-\n-        connObjectKey = getBooleanAsInteger(false);\n-        password = getBooleanAsInteger(false);\n-    }\n-\n     @Override\n     public String getExtAttrName() {\n         return extAttrName;\n@@ -125,22 +107,22 @@ public void setIntAttrName(final String intAttrName) {\n \n     @Override\n     public boolean isConnObjectKey() {\n-        return isBooleanAsInteger(connObjectKey);\n+        return connObjectKey;\n     }\n \n     @Override\n     public void setConnObjectKey(final boolean connObjectKey) {\n-        this.connObjectKey = getBooleanAsInteger(connObjectKey);\n+        this.connObjectKey = connObjectKey;\n     }\n \n     @Override\n     public boolean isPassword() {\n-        return isBooleanAsInteger(password);\n+        return password;\n     }\n \n     @Override\n     public void setPassword(final boolean password) {\n-        this.password = getBooleanAsInteger(password);\n+        this.password = password;\n     }\n \n     @Override"},{"sha":"10e406afb11731e6e96a70a25b171a5ff73c4511","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAExternalResource.java","status":"modified","additions":21,"deletions":39,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -25,7 +25,6 @@\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n@@ -42,8 +41,6 @@\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n@@ -87,10 +84,7 @@ public class JPAExternalResource extends AbstractProvidedKeyEntity implements Ex\n      * Should this resource enforce the mandatory constraints?\n      */\n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer enforceMandatoryCondition;\n+    private Boolean enforceMandatoryCondition = false;\n \n     /**\n      * The resource type is identified by the associated connector.\n@@ -113,26 +107,31 @@ public class JPAExternalResource extends AbstractProvidedKeyEntity implements Ex\n      * Generate random password, if not provided.\n      */\n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer randomPwdIfNotProvided;\n+    private Boolean randomPwdIfNotProvided = false;\n \n     @Enumerated(EnumType.STRING)\n     @NotNull\n-    private TraceLevel createTraceLevel;\n+    private TraceLevel createTraceLevel = TraceLevel.FAILURES;\n+\n+    ;\n \n     @Enumerated(EnumType.STRING)\n     @NotNull\n-    private TraceLevel updateTraceLevel;\n+    private TraceLevel updateTraceLevel = TraceLevel.FAILURES;\n+\n+    ;\n \n     @Enumerated(EnumType.STRING)\n     @NotNull\n-    private TraceLevel deleteTraceLevel;\n+    private TraceLevel deleteTraceLevel = TraceLevel.FAILURES;\n+\n+    ;\n \n     @Enumerated(EnumType.STRING)\n     @NotNull\n-    private TraceLevel provisioningTraceLevel;\n+    private TraceLevel provisioningTraceLevel = TraceLevel.FAILURES;\n+\n+    ;\n \n     @ManyToOne(fetch = FetchType.EAGER)\n     private JPAPasswordPolicy passwordPolicy;\n@@ -153,10 +152,7 @@ public class JPAExternalResource extends AbstractProvidedKeyEntity implements Ex\n     private String jsonConf;\n \n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer overrideCapabilities;\n+    private Boolean overrideCapabilities = false;\n \n     @ElementCollection(fetch = FetchType.EAGER)\n     @Enumerated(EnumType.STRING)\n@@ -174,27 +170,14 @@ public class JPAExternalResource extends AbstractProvidedKeyEntity implements Ex\n             @JoinColumn(name = \"implementation_id\"))\n     private List<JPAImplementation> propagationActions = new ArrayList<>();\n \n-    public JPAExternalResource() {\n-        super();\n-\n-        enforceMandatoryCondition = getBooleanAsInteger(false);\n-        randomPwdIfNotProvided = getBooleanAsInteger(false);\n-        overrideCapabilities = getBooleanAsInteger(false);\n-\n-        createTraceLevel = TraceLevel.FAILURES;\n-        updateTraceLevel = TraceLevel.FAILURES;\n-        deleteTraceLevel = TraceLevel.FAILURES;\n-        provisioningTraceLevel = TraceLevel.FAILURES;\n-    }\n-\n     @Override\n     public boolean isEnforceMandatoryCondition() {\n-        return isBooleanAsInteger(enforceMandatoryCondition);\n+        return enforceMandatoryCondition;\n     }\n \n     @Override\n     public void setEnforceMandatoryCondition(final boolean enforceMandatoryCondition) {\n-        this.enforceMandatoryCondition = getBooleanAsInteger(enforceMandatoryCondition);\n+        this.enforceMandatoryCondition = enforceMandatoryCondition;\n     }\n \n     @Override\n@@ -260,12 +243,12 @@ public void setPropagationPriority(final Integer propagationPriority) {\n \n     @Override\n     public boolean isRandomPwdIfNotProvided() {\n-        return isBooleanAsInteger(randomPwdIfNotProvided);\n+        return randomPwdIfNotProvided;\n     }\n \n     @Override\n     public void setRandomPwdIfNotProvided(final boolean randomPwdIfNotProvided) {\n-        this.randomPwdIfNotProvided = getBooleanAsInteger(randomPwdIfNotProvided);\n+        this.randomPwdIfNotProvided = randomPwdIfNotProvided;\n     }\n \n     @Override\n@@ -370,12 +353,12 @@ public void setConfOverride(final Set<ConnConfProperty> confOverride) {\n \n     @Override\n     public boolean isOverrideCapabilities() {\n-        return isBooleanAsInteger(overrideCapabilities);\n+        return overrideCapabilities;\n     }\n \n     @Override\n     public void setOverrideCapabilities(final boolean overrideCapabilities) {\n-        this.overrideCapabilities = getBooleanAsInteger(overrideCapabilities);\n+        this.overrideCapabilities = overrideCapabilities;\n     }\n \n     @Override\n@@ -395,5 +378,4 @@ public boolean add(final Implementation propagationAction) {\n     public List<? extends Implementation> getPropagationActions() {\n         return propagationActions;\n     }\n-\n }"},{"sha":"aace97d560331d888b142b83b722a002b2c97efc","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAOrgUnit.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -21,7 +21,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n@@ -30,8 +29,6 @@\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnitItem;\n@@ -59,10 +56,8 @@ public class JPAOrgUnit extends AbstractGeneratedKeyEntity implements OrgUnit {\n     @Lob\n     private String serializedSyncToken;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer ignoreCaseMatch;\n+    @NotNull\n+    private Boolean ignoreCaseMatch = false;\n \n     @NotNull\n     private String connObjectLink;\n@@ -112,12 +107,12 @@ public void setSyncToken(final SyncToken syncToken) {\n \n     @Override\n     public boolean isIgnoreCaseMatch() {\n-        return isBooleanAsInteger(ignoreCaseMatch);\n+        return ignoreCaseMatch;\n     }\n \n     @Override\n     public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n-        this.ignoreCaseMatch = getBooleanAsInteger(ignoreCaseMatch);\n+        this.ignoreCaseMatch = ignoreCaseMatch;\n     }\n \n     @Override"},{"sha":"49b8cdd3b841b31b1cbf23360e11bd6cec3b471e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAOrgUnitItem.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnitItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnitItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnitItem.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -65,6 +65,11 @@ public void setOrgUnit(final OrgUnit mapping) {\n         this.orgUnit = (JPAOrgUnit) mapping;\n     }\n \n+    @Override\n+    public boolean isPassword() {\n+        return false;\n+    }\n+\n     @Override\n     public boolean add(final Implementation transformer) {\n         checkType(transformer, JPAImplementation.class);"},{"sha":"df194b4048dade4f93e374b7c8b7d5393d2a5374","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAProvision.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -32,8 +32,6 @@\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n@@ -78,9 +76,7 @@ public class JPAProvision extends AbstractGeneratedKeyEntity implements Provisio\n     private String serializedSyncToken;\n \n     @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer ignoreCaseMatch;\n+    private Boolean ignoreCaseMatch = false;\n \n     @ManyToOne\n     private JPAPlainSchema uidOnCreate;\n@@ -152,12 +148,12 @@ public void setSyncToken(final SyncToken syncToken) {\n \n     @Override\n     public boolean isIgnoreCaseMatch() {\n-        return isBooleanAsInteger(ignoreCaseMatch);\n+        return ignoreCaseMatch;\n     }\n \n     @Override\n     public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n-        this.ignoreCaseMatch = getBooleanAsInteger(ignoreCaseMatch);\n+        this.ignoreCaseMatch = ignoreCaseMatch;\n     }\n \n     @Override"},{"sha":"3b30375b6770dc2a7e130dd663b0e50a32278e81","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/AbstractProvisioningTask.java","status":"modified","additions":16,"deletions":27,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,13 +18,10 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n-import javax.persistence.Basic;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n@@ -45,25 +42,17 @@ public abstract class AbstractProvisioningTask extends JPASchedTask implements P\n     @ManyToOne\n     private JPAExternalResource resource;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer performCreate;\n+    @NotNull\n+    private Boolean performCreate = false;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer performUpdate;\n+    @NotNull\n+    private Boolean performUpdate = false;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer performDelete;\n+    @NotNull\n+    private Boolean performDelete = false;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer syncStatus;\n+    @NotNull\n+    private Boolean syncStatus = false;\n \n     /**\n      * @see UnmatchingRule\n@@ -92,45 +81,45 @@ public void setResource(final ExternalResource resource) {\n \n     @Override\n     public boolean isPerformCreate() {\n-        return isBooleanAsInteger(performCreate);\n+        return performCreate;\n     }\n \n     @Override\n \n     public void setPerformCreate(final boolean performCreate) {\n-        this.performCreate = getBooleanAsInteger(performCreate);\n+        this.performCreate = performCreate;\n     }\n \n     @Override\n \n     public boolean isPerformUpdate() {\n-        return isBooleanAsInteger(performUpdate);\n+        return performUpdate;\n     }\n \n     @Override\n \n     public void setPerformUpdate(final boolean performUpdate) {\n-        this.performUpdate = getBooleanAsInteger(performUpdate);\n+        this.performUpdate = performUpdate;\n     }\n \n     @Override\n     public boolean isPerformDelete() {\n-        return isBooleanAsInteger(performDelete);\n+        return performDelete;\n     }\n \n     @Override\n     public void setPerformDelete(final boolean performDelete) {\n-        this.performDelete = getBooleanAsInteger(performDelete);\n+        this.performDelete = performDelete;\n     }\n \n     @Override\n     public boolean isSyncStatus() {\n-        return isBooleanAsInteger(syncStatus);\n+        return syncStatus;\n     }\n \n     @Override\n     public void setSyncStatus(final boolean syncStatus) {\n-        this.syncStatus = getBooleanAsInteger(syncStatus);\n+        this.syncStatus = syncStatus;\n     }\n \n     @Override"},{"sha":"c25c7bb90847688680443e724ce62c734a484ca7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPANotificationTask.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPANotificationTask.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -20,7 +20,6 @@\n \n import java.util.HashSet;\n import java.util.Set;\n-import javax.persistence.Basic;\n import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n import javax.persistence.DiscriminatorValue;\n@@ -32,8 +31,6 @@\n import javax.persistence.JoinColumn;\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TraceLevel;\n@@ -77,10 +74,8 @@ public class JPANotificationTask extends AbstractTask implements NotificationTas\n     @Lob\n     private String htmlBody;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer executed = getBooleanAsInteger(false);\n+    @NotNull\n+    private Boolean executed = false;\n \n     @Enumerated(EnumType.STRING)\n     @NotNull\n@@ -164,12 +159,12 @@ public void setHtmlBody(final String htmlBody) {\n \n     @Override\n     public boolean isExecuted() {\n-        return isBooleanAsInteger(executed);\n+        return executed;\n     }\n \n     @Override\n     public void setExecuted(final boolean executed) {\n-        this.executed = getBooleanAsInteger(executed);\n+        this.executed = executed;\n     }\n \n     @Override"},{"sha":"3dc7ee61ad068fc44ab86adab01a427f7cd58efe","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPullTask.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -21,7 +21,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n-import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n@@ -34,8 +33,6 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.common.lib.types.PullMode;\n@@ -74,10 +71,8 @@ public class JPAPullTask extends AbstractProvisioningTask implements PullTask {\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"pullTask\")\n     private List<JPAAnyTemplatePullTask> templates = new ArrayList<>();\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer remediation;\n+    @NotNull\n+    private Boolean remediation = false;\n \n     @Override\n     public PullMode getPullMode() {\n@@ -144,12 +139,11 @@ public List<? extends AnyTemplatePullTask> getTemplates() {\n \n     @Override\n     public void setRemediation(final boolean remediation) {\n-        this.remediation = getBooleanAsInteger(remediation);\n+        this.remediation = remediation;\n     }\n \n     @Override\n     public boolean isRemediation() {\n-        return isBooleanAsInteger(remediation);\n+        return remediation;\n     }\n-\n }"},{"sha":"16b2bb735d283cb6fbb513891e95960a1671f255","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPASchedTask.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASchedTask.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -19,14 +19,11 @@\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n import java.util.Date;\n-import javax.persistence.Basic;\n import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n import javax.persistence.OneToOne;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.ImplementationType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n@@ -55,10 +52,7 @@ public class JPASchedTask extends AbstractTask implements SchedTask {\n     private String description;\n \n     @NotNull\n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer active;\n+    private Boolean active = true;\n \n     @Override\n     public Date getStartAt() {\n@@ -121,11 +115,11 @@ public void setName(final String name) {\n \n     @Override\n     public boolean isActive() {\n-        return isBooleanAsInteger(active);\n+        return active;\n     }\n \n     @Override\n     public void setActive(final boolean active) {\n-        this.active = getBooleanAsInteger(active);\n+        this.active = active;\n     }\n }"},{"sha":"edcf0d76fe0aa4909d026e9db6659d524ba220b2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUPlainAttrUniqueValue.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttrUniqueValue.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -66,5 +66,4 @@ public void setSchema(final PlainSchema schema) {\n         checkType(schema, JPAPlainSchema.class);\n         this.schema = (JPAPlainSchema) schema;\n     }\n-\n }"},{"sha":"640d2501bd390d5f985e15fe1e9c394b0a40520d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUser.java","status":"modified","additions":9,"deletions":20,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -23,7 +23,6 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Optional;\n-import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n import javax.persistence.CollectionTable;\n@@ -44,8 +43,6 @@\n import javax.persistence.TemporalType;\n import javax.persistence.Transient;\n import javax.validation.Valid;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.entity.user.SecurityQuestion;\n@@ -154,15 +151,9 @@\n     @Temporal(TemporalType.TIMESTAMP)\n     private Date lastRecertification;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer suspended = getBooleanAsInteger(Boolean.FALSE);\n+    private Boolean suspended = false;\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer mustChangePassword = getBooleanAsInteger(Boolean.FALSE);\n+    private Boolean mustChangePassword = false;\n \n     /**\n      * Provisioning external resources.\n@@ -419,11 +410,9 @@ public Date getLastRecertification() {\n \n     @Override\n     public void setLastRecertification(final Date lastRecertification) {\n-        if (lastRecertification != null) {\n-            this.lastRecertification = new Date(lastRecertification.getTime());\n-        } else {\n-            this.lastRecertification = null;\n-        }\n+        this.lastRecertification = lastRecertification == null\n+                ? null\n+                : new Date(lastRecertification.getTime());\n     }\n \n     @Override\n@@ -438,22 +427,22 @@ public void setUsername(final String username) {\n \n     @Override\n     public void setSuspended(final Boolean suspended) {\n-        this.suspended = getBooleanAsInteger(suspended);\n+        this.suspended = suspended;\n     }\n \n     @Override\n     public Boolean isSuspended() {\n-        return suspended == null ? null : isBooleanAsInteger(suspended);\n+        return suspended;\n     }\n \n     @Override\n     public void setMustChangePassword(final boolean mustChangePassword) {\n-        this.mustChangePassword = getBooleanAsInteger(mustChangePassword);\n+        this.mustChangePassword = mustChangePassword;\n     }\n \n     @Override\n     public boolean isMustChangePassword() {\n-        return isBooleanAsInteger(mustChangePassword);\n+        return mustChangePassword;\n     }\n \n     @Override"},{"sha":"ab0f319283a0489cb259bd65817fd52a5c2d4948","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/openjpa/BooleanValueHandler.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FBooleanValueHandler.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.openjpa;\n+\n+import org.apache.commons.lang3.BooleanUtils;\n+import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n+import org.apache.openjpa.jdbc.kernel.JDBCStore;\n+import org.apache.openjpa.jdbc.meta.ValueMapping;\n+import org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler;\n+import org.apache.openjpa.jdbc.schema.Column;\n+import org.apache.openjpa.jdbc.schema.ColumnIO;\n+import org.apache.openjpa.jdbc.sql.DBDictionary;\n+import org.apache.openjpa.meta.JavaTypes;\n+\n+public class BooleanValueHandler extends AbstractValueHandler {\n+\n+    private static final long serialVersionUID = -6742506201236646294L;\n+\n+    private static final BooleanValueHandler INSTANCE = new BooleanValueHandler();\n+\n+    public static BooleanValueHandler getInstance() {\n+        return INSTANCE;\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     *\n+     * @deprecated\n+     */\n+    @Override\n+    public Column[] map(final ValueMapping vm, final String name, final ColumnIO io, final boolean adapt) {\n+        DBDictionary dict = vm.getMappingRepository().getDBDictionary();\n+        DBIdentifier colName = DBIdentifier.newColumn(name, dict != null ? dict.delimitAll() : false);\n+        return map(vm, colName, io, adapt);\n+    }\n+\n+    public Column[] map(final ValueMapping vm, final DBIdentifier name, final ColumnIO io, final boolean adapt) {\n+        Column col = new Column();\n+        col.setIdentifier(name);\n+        col.setJavaType(JavaTypes.INT);\n+        return new Column[] { col };\n+    }\n+\n+    @Override\n+    public Object toDataStoreValue(final ValueMapping vm, final Object val, final JDBCStore store) {\n+        return val == null ? null : BooleanUtils.isTrue((Boolean) val) ? 1 : 0;\n+    }\n+\n+    @Override\n+    public Object toObjectValue(final ValueMapping vm, final Object val) {\n+        return val == null ? null : BooleanUtils.toBoolean((int) val);\n+    }\n+}"},{"sha":"a96ca2a64ff463aa64372af9fd3e8d1c3ab44e76","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/openjpa/LocaleValueHandler.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fopenjpa%2FLocaleValueHandler.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.openjpa;\n+\n+import java.util.Locale;\n+import org.apache.commons.lang3.LocaleUtils;\n+import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n+import org.apache.openjpa.jdbc.kernel.JDBCStore;\n+import org.apache.openjpa.jdbc.meta.ValueMapping;\n+import org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler;\n+import org.apache.openjpa.jdbc.schema.Column;\n+import org.apache.openjpa.jdbc.schema.ColumnIO;\n+import org.apache.openjpa.jdbc.sql.DBDictionary;\n+import org.apache.openjpa.meta.JavaTypes;\n+\n+public class LocaleValueHandler extends AbstractValueHandler {\n+\n+    private static final long serialVersionUID = 487849441377630981L;\n+\n+    private static final LocaleValueHandler INSTANCE = new LocaleValueHandler();\n+\n+    public static LocaleValueHandler getInstance() {\n+        return INSTANCE;\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     *\n+     * @deprecated\n+     */\n+    @Override\n+    public Column[] map(final ValueMapping vm, final String name, final ColumnIO io, final boolean adapt) {\n+        DBDictionary dict = vm.getMappingRepository().getDBDictionary();\n+        DBIdentifier colName = DBIdentifier.newColumn(name, dict != null ? dict.delimitAll() : false);\n+        return map(vm, colName, io, adapt);\n+    }\n+\n+    public Column[] map(final ValueMapping vm, final DBIdentifier name, final ColumnIO io, final boolean adapt) {\n+        Column col = new Column();\n+        col.setIdentifier(name);\n+        col.setJavaType(JavaTypes.STRING);\n+        return new Column[] { col };\n+    }\n+\n+    @Override\n+    public Object toDataStoreValue(final ValueMapping vm, final Object val, final JDBCStore store) {\n+        return val == null ? null : ((Locale) val).toString();\n+    }\n+\n+    @Override\n+    public Object toObjectValue(final ValueMapping vm, final Object val) {\n+        return val == null ? null : LocaleUtils.toLocale((String) val);\n+    }\n+}"},{"sha":"75cba84a7ea5b4c2f13a17461eb32412023dad8a","filename":"core/persistence-jpa/src/main/resources/domains.xml","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -46,7 +46,10 @@ under the License.\n         <!-- Removed: see https://s.apache.org/openjpaSchemaFactory for more information\n         <entry key=\"openjpa.jdbc.SchemaFactory\" value=\"native(ForeignKeys=true)\"/>-->\n         <entry key=\"openjpa.jdbc.MappingDefaults\" \n-               value=\"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict\"/>\n+               value=\"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict,\n+                      FieldStrategies='\n+                        java.util.Locale=org.apache.syncope.core.persistence.jpa.openjpa.LocaleValueHandler,\n+                        java.lang.Boolean=org.apache.syncope.core.persistence.jpa.openjpa.BooleanValueHandler'\"/>\n                 \n         <entry key=\"openjpa.DataCache\" value=\"true\"/>\n         <entry key=\"openjpa.QueryCache\" value=\"true\"/>"},{"sha":"94fbf40b3810d1d3588c94f7f7983b230159d8db","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PlainSchemaTest.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -27,6 +27,7 @@\n import static org.junit.jupiter.api.Assertions.fail;\n \n import java.util.List;\n+import java.util.Locale;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n@@ -59,12 +60,17 @@ public void findAll() {\n     public void search() {\n         List<PlainSchema> schemas = plainSchemaDAO.findByKeyword(\"fullna%\");\n         assertEquals(1, schemas.size());\n+        assertEquals(0, schemas.get(0).getLabels().size());\n     }\n \n     @Test\n     public void findByName() {\n-        PlainSchema schema = plainSchemaDAO.find(\"fullname\");\n+        PlainSchema schema = plainSchemaDAO.find(\"firstname\");\n         assertNotNull(schema);\n+\n+        assertEquals(3, schema.getLabels().size());\n+        assertTrue(schema.getLabel(Locale.ITALIAN).isPresent());\n+        assertFalse(schema.getLabel(Locale.KOREAN).isPresent());\n     }\n \n     @Test"},{"sha":"faaede5b039297111050a0780dc405facc319974","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java","status":"modified","additions":15,"deletions":3,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -41,10 +41,12 @@\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n+import org.apache.syncope.core.persistence.api.entity.SchemaLabel;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n+import org.apache.syncope.core.persistence.jpa.entity.JPASchemaLabel;\n import org.apache.syncope.core.spring.security.SyncopeAuthenticationDetails;\n import org.apache.syncope.core.spring.security.SyncopeGrantedAuthority;\n import org.junit.jupiter.api.AfterAll;\n@@ -189,15 +191,21 @@ public void deleteSurname() {\n             if (resource.getProvision(anyTypeDAO.findUser()).isPresent()\n                     && resource.getProvision(anyTypeDAO.findUser()).get().getMapping() != null) {\n \n-                for (MappingItem mapItem : resource.getProvision(anyTypeDAO.findUser()).get().getMapping().getItems()) {\n-                    if (schema.getKey().equals(mapItem.getIntAttrName())) {\n-                        mappings.add(mapItem);\n+                for (MappingItem item : resource.getProvision(anyTypeDAO.findUser()).get().getMapping().getItems()) {\n+                    if (schema.getKey().equals(item.getIntAttrName())) {\n+                        mappings.add(item);\n                     }\n                 }\n             }\n         }\n         assertFalse(mappings.isEmpty());\n \n+        // check for labels\n+        List<SchemaLabel> labels = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPASchemaLabel.class.getSimpleName() + \" e\", SchemaLabel.class).getResultList();\n+        assertEquals(5, labels.size());\n+        assertEquals(2, schema.getLabels().size());\n+\n         // delete user schema fullname\n         plainSchemaDAO.delete(\"surname\");\n \n@@ -206,6 +214,10 @@ public void deleteSurname() {\n         // check for schema deletion\n         schema = plainSchemaDAO.find(\"surname\");\n         assertNull(schema);\n+\n+        labels = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPASchemaLabel.class.getSimpleName() + \" e\", SchemaLabel.class).getResultList();\n+        assertEquals(3, labels.size());\n     }\n \n     @Test"},{"sha":"d82ad86f8814debb652cb4674dfd816c3e30ff9c","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":49,"deletions":41,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -290,30 +290,30 @@ under the License.\n   <SyncopeRole_Realm role_id=\"Connector and Resource for realm evenTwo\"\n                      realm_id=\"0679e069-7355-4b20-bd11-a5a0a5453c7c\"/>\n \n-  <SyncopeUser id=\"1417acbe-cbf6-4277-9372-e75e04f97000\" workflowId=\"4\" status=\"active\"\n+  <SyncopeUser mustChangePassword=\"0\" id=\"1417acbe-cbf6-4277-9372-e75e04f97000\" workflowId=\"4\" status=\"active\"\n                password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n                realm_id=\"c5b75db1-fce7-470f-b780-3b9934d82a9d\"\n                username=\"rossini\" creator=\"admin\" lastModifier=\"admin\"\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n   <SyncopeUser_SyncopeRole user_id=\"1417acbe-cbf6-4277-9372-e75e04f97000\" role_id=\"Other\"/>\n-  <SyncopeUser id=\"74cd8ece-715a-44a4-a736-e17b46c4e7e6\" workflowId=\"6\" status=\"active\"\n+  <SyncopeUser mustChangePassword=\"0\" id=\"74cd8ece-715a-44a4-a736-e17b46c4e7e6\" workflowId=\"6\" status=\"active\"\n                password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n                realm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n                username=\"verdi\" creator=\"admin\" lastModifier=\"admin\"\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n-  <SyncopeUser id=\"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\" workflowId=\"8\" status=\"active\"\n+  <SyncopeUser mustChangePassword=\"0\" id=\"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\" workflowId=\"8\" status=\"active\"\n                password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n                realm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n                username=\"vivaldi\" creator=\"admin\" lastModifier=\"admin\"\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n-  <SyncopeUser id=\"c9b2dec2-00a7-4855-97c0-d854842b4b24\" workflowId=\"10\" status=\"active\"\n+  <SyncopeUser mustChangePassword=\"0\" id=\"c9b2dec2-00a7-4855-97c0-d854842b4b24\" workflowId=\"10\" status=\"active\"\n                password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n                realm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n                username=\"bellini\" creator=\"admin\" lastModifier=\"admin\"\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n   <SyncopeUser_SyncopeRole user_id=\"c9b2dec2-00a7-4855-97c0-d854842b4b24\" role_id=\"User reviewer\"/>\n   <SyncopeUser_SyncopeRole user_id=\"c9b2dec2-00a7-4855-97c0-d854842b4b24\" role_id=\"User manager\"/>\n-  <SyncopeUser id=\"823074dc-d280-436d-a7dd-07399fae48ec\" workflowId=\"12\" status=\"active\"\n+  <SyncopeUser mustChangePassword=\"0\" id=\"823074dc-d280-436d-a7dd-07399fae48ec\" workflowId=\"12\" status=\"active\"\n                password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n                realm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n                username=\"puccini\" creator=\"admin\" lastModifier=\"admin\" \n@@ -428,9 +428,14 @@ under the License.\n   <SyncopeSchema id=\"firstname\"/>\n   <PlainSchema id=\"firstname\" type=\"String\" anyTypeClass_id=\"minimal user\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <SchemaLabel id=\"d90f90d0-cf15-407e-bac7-d46a8eb57c05\" schema_id=\"firstname\" locale=\"en\" display=\"Firstname\"/>\n+  <SchemaLabel id=\"a9465ef0-b8b4-4af4-840d-77031a6b54a0\" schema_id=\"firstname\" locale=\"it\" display=\"Nome\"/>\n+  <SchemaLabel id=\"ac8b7383-62df-490d-9364-88dbd3d301aa\" schema_id=\"firstname\" locale=\"pt_BR\" display=\"Nome próprio\"/>\n   <SyncopeSchema id=\"surname\"/>\n   <PlainSchema id=\"surname\" type=\"String\" anyTypeClass_id=\"minimal user\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <SchemaLabel id=\"69712058-162a-4e2a-b07e-c78d82dc286d\" schema_id=\"surname\" locale=\"en\" display=\"Surname\"/>\n+  <SchemaLabel id=\"77e7bbbb-d30c-47e1-b6d2-e0a9e8c11fe2\" schema_id=\"surname\" locale=\"it\" display=\"Cognome\"/>\n   <SyncopeSchema id=\"ctype\"/>\n   <PlainSchema id=\"ctype\" type=\"String\" anyTypeClass_id=\"other\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n@@ -805,8 +810,9 @@ under the License.\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" overrideCapabilities=\"0\"\n                     pullPolicy_id=\"880f8553-069b-4aed-9930-2cd53873f544\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\"/>\n-  <ExternalResource id=\"ws-target-resource-update-resetsynctoken\" connector_id=\"88a7a819-dab5-46b4-9b90-0b9769eabdb8\" enforceMandatoryCondition=\"1\"\n-                    randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\"/>\n+  <ExternalResource id=\"ws-target-resource-update-resetsynctoken\" connector_id=\"88a7a819-dab5-46b4-9b90-0b9769eabdb8\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\"/>\n   <ExternalResource id=\"resource-ldap\" connector_id=\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\"\n                     randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n                     propagationPriority=\"1\"\n@@ -820,7 +826,7 @@ under the License.\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\"\n                     jsonConf='[{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute. Default is \\\"entryUUID\\\".\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"overridable\":true,\"values\":[\"l\"]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"overridable\":true,\"values\":[\"o=isp\"]}]'/>\n   <OrgUnit id=\"599a59cf-9a23-4447-9a59-cf9a2334473a\" connObjectLink=\"syncope:fullPath2Dn(fullPath, 'ou') + ',o=isp'\"\n-           objectClass=\"organizationalUnit\" resource_id=\"resource-ldap-orgunit\"/>\n+           objectClass=\"organizationalUnit\" resource_id=\"resource-ldap-orgunit\" ignoreCaseMatch=\"0\"/>\n   <OrgUnitItem id=\"5d0e7ad0-9026-42ad-be8a-32539389e7bd\" connObjectKey=\"1\" extAttrName=\"l\"\n                intAttrName=\"fullpath\" mandatoryCondition=\"true\" purpose=\"BOTH\"\n                orgUnit_id=\"599a59cf-9a23-4447-9a59-cf9a2334473a\"/>\n@@ -879,7 +885,7 @@ under the License.\n   <SyncopeGroup_ExternalResource group_id=\"0626100b-a4ba-4e00-9971-86fad52a6216\" resource_id=\"resource-csv\"/>\n   <SyncopeGroup_ExternalResource group_id=\"ba9ed509-b1f5-48ab-a334-c8530a6422dc\" resource_id=\"resource-csv\"/>\n      \n-  <Provision id=\"209ea85f-f964-49c7-a498-6c9c2baa3bd8\" resource_id=\"ws-target-resource-1\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"209ea85f-f964-49c7-a498-6c9c2baa3bd8\" resource_id=\"ws-target-resource-1\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"bc0cf27b-16b7-4e83-a4b0-09af7ea4aacc\" provision_id=\"209ea85f-f964-49c7-a498-6c9c2baa3bd8\"/>\n   <MappingItem id=\"96aad4e0-2678-4903-a52f-0a7d090a2863\" mapping_id=\"bc0cf27b-16b7-4e83-a4b0-09af7ea4aacc\" extAttrName=\"userId\"\n                intAttrName=\"username\" mandatoryCondition=\"true\"\n@@ -903,7 +909,7 @@ under the License.\n                extAttrName=\"name\" intAttrName=\"firstname\" mandatoryCondition=\"false\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"NONE\"/>\n   \n-  <Provision id=\"41a53a00-0b35-4047-831a-d5238f74c7ba\" resource_id=\"ws-target-resource-list-mappings-1\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"41a53a00-0b35-4047-831a-d5238f74c7ba\" resource_id=\"ws-target-resource-list-mappings-1\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"bf8afa4a-1522-44b9-91d0-c7b035e4fd99\" provision_id=\"41a53a00-0b35-4047-831a-d5238f74c7ba\"/>\n   <MappingItem id=\"6f8d7b42-44f4-4697-aff5-1736c4b01ee4\" mapping_id=\"bf8afa4a-1522-44b9-91d0-c7b035e4fd99\"\n                extAttrName=\"email\" intAttrName=\"email\" mandatoryCondition=\"true\"\n@@ -913,13 +919,13 @@ under the License.\n                intAttrName=\"surname\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n \n-  <Provision id=\"09a65250-d9de-44b1-9412-11ed996d356d\" resource_id=\"ws-target-resource-list-mappings-2\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"09a65250-d9de-44b1-9412-11ed996d356d\" resource_id=\"ws-target-resource-list-mappings-2\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"b12c4fad-f0f1-406d-b143-f2d68ed28e3a\" provision_id=\"09a65250-d9de-44b1-9412-11ed996d356d\"/>\n   <MappingItem id=\"55a4cf7f-ac96-4e8b-931c-2d0eab6a6bca\" mapping_id=\"b12c4fad-f0f1-406d-b143-f2d68ed28e3a\"\n                extAttrName=\"userId\" intAttrName=\"userId\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n \n-  <Provision id=\"3d75991b-caee-4993-8e46-afb13d1bfbd4\" resource_id=\"ws-target-resource-2\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"3d75991b-caee-4993-8e46-afb13d1bfbd4\" resource_id=\"ws-target-resource-2\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"240a0291-f89d-4557-a547-2a3b9aad625b\" provision_id=\"3d75991b-caee-4993-8e46-afb13d1bfbd4\"/>\n   <MappingItem id=\"d5c4d467-cd18-4148-8195-015808b4b3e6\" mapping_id=\"240a0291-f89d-4557-a547-2a3b9aad625b\"\n                extAttrName=\"fullname\" intAttrName=\"fullname\" mandatoryCondition=\"true\"\n@@ -940,7 +946,7 @@ under the License.\n                intAttrName=\"cn\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n     \n-  <Provision id=\"9ebc3237-49fa-4dce-9a4c-3070e931812f\" resource_id=\"ws-target-resource-update\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"9ebc3237-49fa-4dce-9a4c-3070e931812f\" resource_id=\"ws-target-resource-update\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"c17813c0-4e90-4118-bb28-cd36ad6d5a4d\" provision_id=\"9ebc3237-49fa-4dce-9a4c-3070e931812f\"/>\n   <MappingItem id=\"cc973ed6-d031-4790-adab-fc059ac0c818\" extAttrName=\"email\" mapping_id=\"c17813c0-4e90-4118-bb28-cd36ad6d5a4d\"\n                intAttrName=\"email\" mandatoryCondition=\"false\"\n@@ -952,31 +958,31 @@ under the License.\n                intAttrName=\"fullname\" mandatoryCondition=\"false\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n     \n-  <Provision id=\"8680bc79-dfa1-4719-9886-1d582bf1124f\" resource_id=\"ws-target-resource-nopropagation\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"8680bc79-dfa1-4719-9886-1d582bf1124f\" resource_id=\"ws-target-resource-nopropagation\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"63ddd4c8-efed-4a22-a4b4-1f4e6f47c8d0\" provision_id=\"8680bc79-dfa1-4719-9886-1d582bf1124f\"/>\n   <MappingItem id=\"ffcfbb5e-7bbd-489a-a69e-2dd84f00731a\" mapping_id=\"63ddd4c8-efed-4a22-a4b4-1f4e6f47c8d0\" extAttrName=\"fullname\" \n                intAttrName=\"fullname\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n                      \n-  <Provision id=\"0bfa7c3e-2bb3-43d7-ac0e-d57cff7a18c8\" resource_id=\"ws-target-resource-nopropagation2\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"0bfa7c3e-2bb3-43d7-ac0e-d57cff7a18c8\" resource_id=\"ws-target-resource-nopropagation2\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"3f636292-6edb-4d20-ab24-fe0c5fc3dec3\" provision_id=\"0bfa7c3e-2bb3-43d7-ac0e-d57cff7a18c8\"/>\n   <MappingItem id=\"e34928b8-ca57-4b6c-81c1-70bc87ff3fdc\" mapping_id=\"3f636292-6edb-4d20-ab24-fe0c5fc3dec3\" extAttrName=\"fullname\" \n                intAttrName=\"fullname\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n                      \n-  <Provision id=\"5bd76fec-f8d7-4ab9-acd7-89e099d534e8\" resource_id=\"ws-target-resource-nopropagation3\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"5bd76fec-f8d7-4ab9-acd7-89e099d534e8\" resource_id=\"ws-target-resource-nopropagation3\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"c2a0cec1-32c4-4493-8f01-d1176e557fc1\" provision_id=\"5bd76fec-f8d7-4ab9-acd7-89e099d534e8\"/>\n   <MappingItem id=\"f3ba0859-b0f0-44a5-abfd-4a1a5ca29fbf\" mapping_id=\"c2a0cec1-32c4-4493-8f01-d1176e557fc1\" extAttrName=\"fullname\"\n                intAttrName=\"fullname\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n                      \n-  <Provision id=\"18de6376-7051-4216-96f0-26629076abb9\" resource_id=\"ws-target-resource-nopropagation4\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"18de6376-7051-4216-96f0-26629076abb9\" resource_id=\"ws-target-resource-nopropagation4\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"906452d9-3eeb-4ef7-ac90-5ffc14513fbf\" provision_id=\"18de6376-7051-4216-96f0-26629076abb9\"/>\n   <MappingItem id=\"118\" mapping_id=\"906452d9-3eeb-4ef7-ac90-5ffc14513fbf\"\n                extAttrName=\"fullname\" intAttrName=\"fullname\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n                        \n-  <Provision id=\"779fefb5-dd25-4078-915d-3c199ee32158\" resource_id=\"resource-testdb\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"779fefb5-dd25-4078-915d-3c199ee32158\" resource_id=\"resource-testdb\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"cb624b93-874b-40a0-8021-3b8116b781ab\" provision_id=\"779fefb5-dd25-4078-915d-3c199ee32158\"/>\n   <MappingItem id=\"1e0d30cd-2569-4a80-b9dc-af1467bd1c0b\" mapping_id=\"cb624b93-874b-40a0-8021-3b8116b781ab\"\n                extAttrName=\"ID\" intAttrName=\"username\" mandatoryCondition=\"true\"\n@@ -985,7 +991,7 @@ under the License.\n                extAttrName=\"__PASSWORD__\" intAttrName=\"password\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"1\" purpose=\"BOTH\"/>\n                      \n-  <Provision id=\"0359084d-68fe-4bf8-b42b-2ebe4f578ae7\" resource_id=\"resource-testdb2\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"0359084d-68fe-4bf8-b42b-2ebe4f578ae7\" resource_id=\"resource-testdb2\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"935a0fc2-4a0b-4d82-9931-3c5ce44a33c1\" provision_id=\"0359084d-68fe-4bf8-b42b-2ebe4f578ae7\"/>\n   <MappingItem id=\"6d90658a-f470-4450-912d-6fe7d3bcda46\" mapping_id=\"935a0fc2-4a0b-4d82-9931-3c5ce44a33c1\" extAttrName=\"ID\" \n                intAttrName=\"username\" mandatoryCondition=\"true\"\n@@ -994,7 +1000,7 @@ under the License.\n                intAttrName=\"password\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"1\" purpose=\"PROPAGATION\"/>\n                          \n-  <Provision id=\"2adb6537-e207-4d9b-804f-90bf18cd6f48\" resource_id=\"resource-csv\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"2adb6537-e207-4d9b-804f-90bf18cd6f48\" resource_id=\"resource-csv\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Provision_AnyTypeClass provision_id=\"2adb6537-e207-4d9b-804f-90bf18cd6f48\" anyTypeClass_id=\"csv\"/>\n   <Provision_AnyTypeClass provision_id=\"2adb6537-e207-4d9b-804f-90bf18cd6f48\" anyTypeClass_id=\"generic membership\"/>\n   <Provision_AnyTypeClass provision_id=\"2adb6537-e207-4d9b-804f-90bf18cd6f48\" anyTypeClass_id=\"minimal group\"/>\n@@ -1027,7 +1033,7 @@ under the License.\n                intAttrName=\"groups[root].rderToBePropagated\" mandatoryCondition=\"false\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n                          \n-  <Provision id=\"1b53c74e-6a63-49ef-b2f1-96eeb7f1bbb8\" resource_id=\"ws-target-resource-update-resetsynctoken\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"\n+  <Provision ignoreCaseMatch=\"0\" id=\"1b53c74e-6a63-49ef-b2f1-96eeb7f1bbb8\" resource_id=\"ws-target-resource-update-resetsynctoken\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"\n              serializedSyncToken='{\"value\":null}'/>\n   <Mapping id=\"23e20ce6-1ff9-495e-aa59-a58e5127a008\" provision_id=\"1b53c74e-6a63-49ef-b2f1-96eeb7f1bbb8\"/>\n   <MappingItem id=\"608f01c5-eb7c-462a-b4d6-b7c3c9632a50\" mapping_id=\"23e20ce6-1ff9-495e-aa59-a58e5127a008\"\n@@ -1037,7 +1043,7 @@ under the License.\n                extAttrName=\"__PASSWORD__\" intAttrName=\"fullname\" mandatoryCondition=\"false\"\n                connObjectKey=\"0\" password=\"1\" purpose=\"BOTH\"/>\n \n-  <Provision id=\"8b938d63-aa92-448c-89a8-a685fc0a67c8\" resource_id=\"resource-ldap\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"8b938d63-aa92-448c-89a8-a685fc0a67c8\" resource_id=\"resource-ldap\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Provision_AnyTypeClass provision_id=\"8b938d63-aa92-448c-89a8-a685fc0a67c8\" anyTypeClass_id=\"generic membership\"/>\n   <Provision_AnyTypeClass provision_id=\"8b938d63-aa92-448c-89a8-a685fc0a67c8\" anyTypeClass_id=\"minimal group\"/>\n   <Mapping id=\"ae1c77c3-2f1d-4258-ad06-710bb09041a9\" provision_id=\"8b938d63-aa92-448c-89a8-a685fc0a67c8\"\n@@ -1077,7 +1083,7 @@ under the License.\n   <VirSchema id=\"virtualReadOnly\" READONLY=\"1\" anyTypeClass_id=\"minimal user\"\n              provision_id=\"8b938d63-aa92-448c-89a8-a685fc0a67c8\" extAttrName=\"givenname\"/>\n \n-  <Provision id=\"20a75199-3f2e-4b9a-9510-c68dd7fc7b3d\" resource_id=\"resource-ldap\" anyType_id=\"GROUP\" objectClass=\"__GROUP__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"20a75199-3f2e-4b9a-9510-c68dd7fc7b3d\" resource_id=\"resource-ldap\" anyType_id=\"GROUP\" objectClass=\"__GROUP__\"/>\n   <Mapping id=\"128412c8-be4f-4d7b-8bed-5ab89134f718\" provision_id=\"20a75199-3f2e-4b9a-9510-c68dd7fc7b3d\"\n            connObjectLink=\"&apos;cn=&apos; + name + &apos;,ou=groups,o=isp&apos;\"/>\n   <MappingItem id=\"a2bf43c8-74cb-4250-92cf-fb8889409ac1\"\n@@ -1094,9 +1100,10 @@ under the License.\n                mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n   \n   <SyncopeSchema id=\"rvirtualdata\"/>\n-  <VirSchema id=\"rvirtualdata\" anyTypeClass_id=\"minimal group\" provision_id=\"20a75199-3f2e-4b9a-9510-c68dd7fc7b3d\" extAttrName=\"businessCategory\"/>\n+  <VirSchema id=\"rvirtualdata\" READONLY=\"0\" anyTypeClass_id=\"minimal group\"\n+             provision_id=\"20a75199-3f2e-4b9a-9510-c68dd7fc7b3d\" extAttrName=\"businessCategory\"/>\n \n-  <Provision id=\"46b54e2a-e43e-4cd7-8c13-1af1bd65c3d3\" resource_id=\"resource-db-pull\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"46b54e2a-e43e-4cd7-8c13-1af1bd65c3d3\" resource_id=\"resource-db-pull\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"cda910bd-fc28-4f63-890e-66edc62d428b\" provision_id=\"46b54e2a-e43e-4cd7-8c13-1af1bd65c3d3\"/>\n   <MappingItem id=\"1a345706-a498-41bb-a948-820307a4365e\" connObjectKey=\"0\" mapping_id=\"cda910bd-fc28-4f63-890e-66edc62d428b\"\n                extAttrName=\"EMAIL\" intAttrName=\"email\" \n@@ -1120,28 +1127,29 @@ under the License.\n                extAttrName=\"MUSTCHANGEPASSWORD\" intAttrName=\"mustChangePassword\" \n                mandatoryCondition=\"false\" password=\"0\" purpose=\"PULL\"/>\n               \n-  <Provision id=\"6d7cb60a-c4ad-4a70-94ae-e5b88eb24930\" resource_id=\"resource-db-virattr\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"6d7cb60a-c4ad-4a70-94ae-e5b88eb24930\" resource_id=\"resource-db-virattr\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"45280585-308f-4571-9788-c7a4734b3614\" provision_id=\"6d7cb60a-c4ad-4a70-94ae-e5b88eb24930\"/>\n   <MappingItem id=\"6cb2f9f0-5fb4-4686-a375-31e2c34a6cd8\" mapping_id=\"45280585-308f-4571-9788-c7a4734b3614\" connObjectKey=\"1\" password=\"0\"\n                extAttrName=\"ID\" intAttrName=\"key\" \n                mandatoryCondition=\"true\" purpose=\"BOTH\"/>\n                 \n   <SyncopeSchema id=\"virtualdata\"/>\n-  <VirSchema id=\"virtualdata\" anyTypeClass_id=\"minimal user\" provision_id=\"6d7cb60a-c4ad-4a70-94ae-e5b88eb24930\" extAttrName=\"USERNAME\"/>\n+  <VirSchema id=\"virtualdata\" READONLY=\"0\" anyTypeClass_id=\"minimal user\"\n+             provision_id=\"6d7cb60a-c4ad-4a70-94ae-e5b88eb24930\" extAttrName=\"USERNAME\"/>\n   \n-  <Provision id=\"cfa86cbe-94b6-4712-a40a-a4861be1d425\" resource_id=\"ws-target-resource-timeout\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"cfa86cbe-94b6-4712-a40a-a4861be1d425\" resource_id=\"ws-target-resource-timeout\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"c71d690a-3dd9-48a5-b76f-32805186c4dc\" provision_id=\"cfa86cbe-94b6-4712-a40a-a4861be1d425\"/>\n   <MappingItem id=\"321bc904-e1fc-4a54-bf7c-74c8cbcc0815\" mapping_id=\"c71d690a-3dd9-48a5-b76f-32805186c4dc\" connObjectKey=\"1\" password=\"0\"\n                extAttrName=\"fullname\" intAttrName=\"fullname\"\n                mandatoryCondition=\"true\" purpose=\"PROPAGATION\"/>\n   \n-  <Provision id=\"ac1659dc-3ea3-45eb-8ae6-626e3d916492\" resource_id=\"ws-target-resource-delete\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"ac1659dc-3ea3-45eb-8ae6-626e3d916492\" resource_id=\"ws-target-resource-delete\" anyType_id=\"USER\" objectClass=\"__ACCOUNT__\"/>\n   <Mapping id=\"72f590ae-2754-456b-aabb-eda7d8459dd3\" provision_id=\"ac1659dc-3ea3-45eb-8ae6-626e3d916492\"/>\n   <MappingItem id=\"4c98536f-10df-4953-b2df-59d7cd057fd2\" mapping_id=\"72f590ae-2754-456b-aabb-eda7d8459dd3\" extAttrName=\"userId\" \n                intAttrName=\"username\" mandatoryCondition=\"true\"\n                connObjectKey=\"1\" password=\"0\" purpose=\"PROPAGATION\"/>\n \n-  <Provision id=\"f1b55b66-eb13-4a93-a49c-448e93756eb6\" resource_id=\"resource-db-scripted\" anyType_id=\"PRINTER\" objectClass=\"__PRINTER__\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"f1b55b66-eb13-4a93-a49c-448e93756eb6\" resource_id=\"resource-db-scripted\" anyType_id=\"PRINTER\" objectClass=\"__PRINTER__\"/>\n   <Mapping id=\"16439b5f-50c3-4604-97e9-f4004933abd8\" provision_id=\"f1b55b66-eb13-4a93-a49c-448e93756eb6\"/>\n   <MappingItem id=\"23aa0299-ddbb-4e59-8918-0ab2a32465fa\" mapping_id=\"16439b5f-50c3-4604-97e9-f4004933abd8\" extAttrName=\"ID\" \n                intAttrName=\"key\" mandatoryCondition=\"true\"\n@@ -1153,7 +1161,7 @@ under the License.\n                intAttrName=\"location\"\n                mandatoryCondition=\"false\" connObjectKey=\"0\" password=\"0\" purpose=\"BOTH\"/>\n     \n-  <Provision id=\"2e372858-f43c-4e1c-b728-58f43c5e1c23\" objectClass=\"__ACCOUNT__\" anyType_id=\"USER\" resource_id=\"rest-target-resource\"/>\n+  <Provision ignoreCaseMatch=\"0\" id=\"2e372858-f43c-4e1c-b728-58f43c5e1c23\" objectClass=\"__ACCOUNT__\" anyType_id=\"USER\" resource_id=\"rest-target-resource\"/>\n   <Mapping id=\"e6b64584-94a2-4890-b645-8494a2089011\" provision_id=\"2e372858-f43c-4e1c-b728-58f43c5e1c23\"/>\n   <MappingItem id=\"14726efb-09e1-441e-b26e-fb09e1841eb2\" connObjectKey=\"0\"\n                extAttrName=\"firstName\" intAttrName=\"firstname\" mandatoryCondition=\"true\" password=\"0\" purpose=\"BOTH\"\n@@ -1188,7 +1196,7 @@ under the License.\n   <Task DTYPE=\"PropagationTask\" id=\"316285cc-ae52-4ea2-a33b-7355e189ac3f\" operation=\"DELETE\"\n         objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-2\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n-  <Task DTYPE=\"PullTask\" id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" name=\"CSV (update matching; assign unmatching)\" resource_id=\"resource-csv\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"c41b9b71-9bfa-4f90-89f2-84787def4c5c\" name=\"CSV (update matching; assign unmatching)\" resource_id=\"resource-csv\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n         pullMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"\n         jobDelegate_id=\"PullJobDelegate\"/>\n@@ -1214,20 +1222,20 @@ under the License.\n         objectClassName=\"__ACCOUNT__\" resource_id=\"ws-target-resource-nopropagation\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <TaskExec id=\"d789462f-e395-424f-bd8e-0db44a93222f\" task_id=\"d6c2d6d3-6329-44c1-9187-f1469ead1cfa\" startDate=\"2015-12-17 09:40:00.506\" endDate=\"2015-12-17 09:42:00.506\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PullTask\" id=\"83f7e85d-9774-43fe-adba-ccd856312994\" name=\"TestDB Task\" resource_id=\"resource-testdb\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"83f7e85d-9774-43fe-adba-ccd856312994\" name=\"TestDB Task\" resource_id=\"resource-testdb\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"6c3f578d-327b-4a7c-8037-6f5ba24eb770\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;surname&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"45b61137-c7c3-49ee-86e0-9efffa75ae68\" pullTask_id=\"83f7e85d-9774-43fe-adba-ccd856312994\" anyType_id=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n-  <Task DTYPE=\"PullTask\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"81d88f73-d474-4450-9031-605daa4e313f\" name=\"TestDB2 Task\" resource_id=\"resource-testdb2\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" id=\"7c2242f4-14af-4ab5-af31-cdae23783655\" name=\"TestDB Pull Task\" resource_id=\"resource-db-pull\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"7c2242f4-14af-4ab5-af31-cdae23783655\" name=\"TestDB Pull Task\" resource_id=\"resource-db-pull\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" name=\"LDAP Pull Task\" resource_id=\"resource-ldap\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" name=\"LDAP Pull Task\" resource_id=\"resource-ldap\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" pullMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"df655a2a-40c0-43b1-a157-3f4988802f58\" pullTask_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" anyType_id=\"USER\"\n@@ -1237,7 +1245,7 @@ under the License.\n   <Implementation id=\"LDAPMembershipPullActions\" type=\"PULL_ACTIONS\"  engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\"/>\n   <PullTaskAction task_id=\"1e419ca4-ea81-4493-a14f-28b90113686d\" implementation_id=\"LDAPMembershipPullActions\"/>\n-  <Task DTYPE=\"PullTask\" id=\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\" name=\"VirAttrCache test\" resource_id=\"resource-csv\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"38abbf9e-a1a3-40a1-a15f-7d0ac02f47f1\" name=\"VirAttrCache test\" resource_id=\"resource-csv\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <Task DTYPE=\"PushTask\" id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n@@ -1306,23 +1314,23 @@ under the License.\n         unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n   <PushTaskAnyFilter id=\"30842acc-f2dd-4d47-b359-20db06c30803\" anyType_id=\"USER\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"username==_NO_ONE_\"/>\n   <PushTaskAnyFilter id=\"9e4c0233-440e-4b5b-9563-11ec0f55a334\" anyType_id=\"GROUP\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"name==citizen\"/>\n-  <Task DTYPE=\"PullTask\" id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" name=\"CSV Task (update matching; provision unmatching)\" resource_id=\"resource-csv\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" name=\"CSV Task (update matching; provision unmatching)\" resource_id=\"resource-csv\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <AnyTemplatePullTask id=\"8bc41ba1-cc1d-4ee0-bb43-61cd148b414f\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynMemberships\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"values\":[\"\"]},{\"schema\":\"userId\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"values\":[\"&apos;test&apos;\"]}]}'/>\n   <AnyTemplatePullTask id=\"9af0e343-8a37-42d2-9bc7-6e2e3b103219\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n-  <Task DTYPE=\"PullTask\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n-  <Task DTYPE=\"PullTask\" id=\"55d5e74b-497e-4bc0-9156-73abef4b9adc\" name=\"CSV (ignore matching; assign unmatching)\" resource_id=\"resource-csv\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"55d5e74b-497e-4bc0-9156-73abef4b9adc\" name=\"CSV (ignore matching; assign unmatching)\" resource_id=\"resource-csv\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"0f618183-17ce-48bc-80bc-cc535f38983a\" operation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_id=\"resource-testdb\" anyTypeKind=\"USER\" entityKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\"\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n-  <Task DTYPE=\"PullTask\" id=\"30cfd653-257b-495f-8665-281281dbcb3d\" name=\"Scripted SQL\" resource_id=\"resource-db-scripted\"\n+  <Task DTYPE=\"PullTask\" remediation=\"0\" id=\"30cfd653-257b-495f-8665-281281dbcb3d\" name=\"Scripted SQL\" resource_id=\"resource-db-scripted\"\n         destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" pullMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>\n "},{"sha":"1368fec685de1fc0c66bf842f86c092c84eb711c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/SchemaDataBinder.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FSchemaDataBinder.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -33,16 +33,15 @@ public interface SchemaDataBinder {\n \n     VirSchema create(VirSchemaTO schemaTO);\n \n-    DerSchemaTO getDerSchemaTO(DerSchema schema);\n-\n-    PlainSchemaTO getPlainSchemaTO(PlainSchema schema);\n-\n-    VirSchemaTO getVirSchemaTO(VirSchema schema);\n-\n     PlainSchema update(PlainSchemaTO schemaTO, PlainSchema schema);\n \n     DerSchema update(DerSchemaTO schemaTO, DerSchema derSchema);\n \n     VirSchema update(VirSchemaTO schemaTO, VirSchema virSchema);\n \n+    PlainSchemaTO getPlainSchemaTO(String key);\n+\n+    DerSchemaTO getDerSchemaTO(String key);\n+\n+    VirSchemaTO getVirSchemaTO(String key);\n }"},{"sha":"af4f57ae6469ce53662d3417deff3a7dd6312b23","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DerAttrHandlerImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDerAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDerAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDerAttrHandlerImpl.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -49,13 +49,13 @@ public class DerAttrHandlerImpl implements DerAttrHandler {\n     private Map<DerSchema, String> getValues(final Any<?> any, final Set<DerSchema> schemas) {\n         Map<DerSchema, String> result = new HashMap<>(schemas.size());\n \n-        for (DerSchema schema : schemas) {\n+        schemas.forEach(schema -> {\n             JexlContext jexlContext = new MapContext();\n             JexlUtils.addPlainAttrsToContext(any.getPlainAttrs(), jexlContext);\n             JexlUtils.addFieldsToContext(any, jexlContext);\n \n             result.put(schema, JexlUtils.evaluate(schema.getExpression(), jexlContext));\n-        }\n+        });\n \n         return result;\n     }\n@@ -96,13 +96,13 @@ private Map<DerSchema, String> getValues(\n \n         Map<DerSchema, String> result = new HashMap<>(schemas.size());\n \n-        for (DerSchema schema : schemas) {\n+        schemas.forEach(schema -> {\n             JexlContext jexlContext = new MapContext();\n             JexlUtils.addPlainAttrsToContext(any.getPlainAttrs(membership), jexlContext);\n             JexlUtils.addFieldsToContext(any, jexlContext);\n \n             result.put(schema, JexlUtils.evaluate(schema.getExpression(), jexlContext));\n-        }\n+        });\n \n         return result;\n     }"},{"sha":"4f51593fd6da2ab2e54b747da203fde1c6bda1bb","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":12,"deletions":22,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -556,41 +556,31 @@ protected void fillTO(\n \n         anyTO.setRealm(realmFullPath);\n \n-        anyTO.getAuxClasses().addAll(auxClasses.stream().map(cls -> cls.getKey()).collect(Collectors.toList()));\n+        anyTO.getAuxClasses().addAll(auxClasses.stream().map(Entity::getKey).collect(Collectors.toList()));\n \n-        plainAttrs.stream().map(plainAttr -> {\n+        plainAttrs.forEach(plainAttr -> {\n             AttrTO.Builder attrTOBuilder = new AttrTO.Builder().\n                     schema(plainAttr.getSchema().getKey()).\n                     values(plainAttr.getValuesAsStrings());\n             if (details) {\n-                attrTOBuilder.schemaInfo(schemaDataBinder.getPlainSchemaTO(plainAttr.getSchema()));\n+                attrTOBuilder.schemaInfo(schemaDataBinder.getPlainSchemaTO(plainAttr.getSchema().getKey()));\n             }\n-            return attrTOBuilder;\n-        }).forEachOrdered(attrTOBuilder -> {\n             anyTO.getPlainAttrs().add(attrTOBuilder.build());\n         });\n \n-        derAttrs.entrySet().stream().map(entry -> {\n-            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().\n-                    schema(entry.getKey().getKey()).\n-                    value(entry.getValue());\n+        derAttrs.forEach((schema, value) -> {\n+            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().schema(schema.getKey()).value(value);\n             if (details) {\n-                attrTOBuilder.schemaInfo(schemaDataBinder.getDerSchemaTO(entry.getKey()));\n+                attrTOBuilder.schemaInfo(schemaDataBinder.getDerSchemaTO(schema.getKey()));\n             }\n-            return attrTOBuilder;\n-        }).forEachOrdered(attrTOBuilder -> {\n             anyTO.getDerAttrs().add(attrTOBuilder.build());\n         });\n \n-        virAttrs.entrySet().stream().map(entry -> {\n-            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().\n-                    schema(entry.getKey().getKey()).\n-                    values(entry.getValue());\n+        virAttrs.forEach((schema, values) -> {\n+            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().schema(schema.getKey()).values(values);\n             if (details) {\n-                attrTOBuilder.schemaInfo(schemaDataBinder.getVirSchemaTO(entry.getKey()));\n+                attrTOBuilder.schemaInfo(schemaDataBinder.getVirSchemaTO(schema.getKey()));\n             }\n-            return attrTOBuilder;\n-        }).forEachOrdered(attrTOBuilder -> {\n             anyTO.getVirAttrs().add(attrTOBuilder.build());\n         });\n \n@@ -617,23 +607,23 @@ protected MembershipTO getMembershipTO(\n             membershipTO.getPlainAttrs().add(new AttrTO.Builder().\n                     schema(plainAttr.getSchema().getKey()).\n                     values(plainAttr.getValuesAsStrings()).\n-                    schemaInfo(schemaDataBinder.getPlainSchemaTO(plainAttr.getSchema())).\n+                    schemaInfo(schemaDataBinder.getPlainSchemaTO(plainAttr.getSchema().getKey())).\n                     build());\n         });\n \n         derAttrs.forEach((schema, value) -> {\n             membershipTO.getDerAttrs().add(new AttrTO.Builder().\n                     schema(schema.getKey()).\n                     value(value).\n-                    schemaInfo(schemaDataBinder.getDerSchemaTO(schema)).\n+                    schemaInfo(schemaDataBinder.getDerSchemaTO(schema.getKey())).\n                     build());\n         });\n \n         virAttrs.forEach((schema, values) -> {\n             membershipTO.getVirAttrs().add(new AttrTO.Builder().\n                     schema(schema.getKey()).\n                     values(values).\n-                    schemaInfo(schemaDataBinder.getVirSchemaTO(schema)).\n+                    schemaInfo(schemaDataBinder.getVirSchemaTO(schema.getKey())).\n                     build());\n         });\n "},{"sha":"e71c54f6cff3ebb4c8a04199fcb277d2a3c4cf5d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ConfigurationDataBinderImpl.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,10 +18,10 @@\n  */\n package org.apache.syncope.core.provisioning.java.data;\n \n-import java.util.ArrayList;\n import org.apache.syncope.core.provisioning.api.data.ConfigurationDataBinder;\n import java.util.Collections;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.jexl3.JexlContext;\n import org.apache.commons.jexl3.MapContext;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -48,17 +48,13 @@ public class ConfigurationDataBinderImpl extends AbstractAnyDataBinder implement\n \n     @Override\n     public List<AttrTO> getConfTO() {\n-        List<AttrTO> attrTOs = new ArrayList<>();\n-        for (CPlainAttr attr : confDAO.get().getPlainAttrs()) {\n-            attrTOs.add(getAttrTO(attr));\n-        }\n-        return attrTOs;\n+        return confDAO.get().getPlainAttrs().stream().map(attr -> getAttrTO(attr)).collect(Collectors.toList());\n     }\n \n     @Override\n     public AttrTO getAttrTO(final CPlainAttr attr) {\n         return new AttrTO.Builder().\n-                schemaInfo(schemaDataBinder.getPlainSchemaTO(attr.getSchema())).\n+                schemaInfo(schemaDataBinder.getPlainSchemaTO(attr.getSchema().getKey())).\n                 schema(attr.getSchema().getKey()).\n                 values(attr.getValuesAsStrings()).\n                 build();"},{"sha":"f91378f82f95370fdad8e8d9901f48758fc8f236","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SchemaDataBinderImpl.java","status":"modified","additions":55,"deletions":3,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -18,12 +18,14 @@\n  */\n package org.apache.syncope.core.provisioning.java.data;\n \n+import java.util.stream.Collectors;\n import org.apache.syncope.core.provisioning.api.data.SchemaDataBinder;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.SchemaTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -38,13 +40,16 @@\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n+import org.apache.syncope.core.persistence.api.entity.Schema;\n+import org.apache.syncope.core.persistence.api.entity.SchemaLabel;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.slf4j.Logger;\n@@ -86,6 +91,26 @@ public class SchemaDataBinderImpl implements SchemaDataBinder {\n     @Autowired\n     private AnyUtilsFactory anyUtilsFactory;\n \n+    private <S extends Schema, T extends SchemaTO> void labels(final T src, final S dst) {\n+        src.getLabels().forEach((locale, display) -> {\n+            SchemaLabel label = dst.getLabel(locale).orElse(null);\n+            if (label == null) {\n+                label = entityFactory.newEntity(SchemaLabel.class);\n+                label.setLocale(locale);\n+                label.setSchema(dst);\n+                dst.add(label);\n+            }\n+            label.setDisplay(display);\n+        });\n+\n+        dst.getLabels().removeIf(label -> !src.getLabels().containsKey(label.getLocale()));\n+    }\n+\n+    private <S extends Schema, T extends SchemaTO> void labels(final S src, final T dst) {\n+        dst.getLabels().putAll(src.getLabels().stream().\n+                collect(Collectors.toMap(SchemaLabel::getLocale, SchemaLabel::getDisplay)));\n+    }\n+\n     // --------------- PLAIN -----------------\n     private PlainSchema fill(final PlainSchema schema, final PlainSchemaTO schemaTO) {\n         if (!JexlUtils.isExpressionValid(schemaTO.getMandatoryCondition())) {\n@@ -95,6 +120,7 @@ private PlainSchema fill(final PlainSchema schema, final PlainSchemaTO schemaTO)\n         }\n \n         BeanUtils.copyProperties(schemaTO, schema, IGNORE_PROPERTIES);\n+        labels(schemaTO, schema);\n \n         if (schemaTO.getValidator() == null) {\n             schema.setValidator(null);\n@@ -168,9 +194,17 @@ public PlainSchema update(final PlainSchemaTO schemaTO, final PlainSchema schema\n     }\n \n     @Override\n-    public PlainSchemaTO getPlainSchemaTO(final PlainSchema schema) {\n+    public PlainSchemaTO getPlainSchemaTO(final String key) {\n+        PlainSchema schema = plainSchemaDAO.find(key);\n+        if (schema == null) {\n+            throw new NotFoundException(\"Schema '\" + key + \"'\");\n+        }\n+\n         PlainSchemaTO schemaTO = new PlainSchemaTO();\n+\n         BeanUtils.copyProperties(schema, schemaTO, IGNORE_PROPERTIES);\n+        labels(schema, schemaTO);\n+\n         schemaTO.setAnyTypeClass(schema.getAnyTypeClass() == null ? null : schema.getAnyTypeClass().getKey());\n         if (schema.getValidator() != null) {\n             schemaTO.setValidator(schema.getValidator().getKey());\n@@ -201,6 +235,7 @@ private DerSchema fill(final DerSchema schema, final DerSchemaTO schemaTO) {\n         }\n \n         BeanUtils.copyProperties(schemaTO, schema, IGNORE_PROPERTIES);\n+        labels(schemaTO, schema);\n \n         DerSchema merged = derSchemaDAO.save(schema);\n \n@@ -235,9 +270,17 @@ public DerSchema update(final DerSchemaTO schemaTO, final DerSchema schema) {\n     }\n \n     @Override\n-    public DerSchemaTO getDerSchemaTO(final DerSchema schema) {\n+    public DerSchemaTO getDerSchemaTO(final String key) {\n+        DerSchema schema = derSchemaDAO.find(key);\n+        if (schema == null) {\n+            throw new NotFoundException(\"Derived schema '\" + key + \"'\");\n+        }\n+\n         DerSchemaTO schemaTO = new DerSchemaTO();\n+\n         BeanUtils.copyProperties(schema, schemaTO, IGNORE_PROPERTIES);\n+        labels(schema, schemaTO);\n+\n         schemaTO.setAnyTypeClass(schema.getAnyTypeClass() == null ? null : schema.getAnyTypeClass().getKey());\n \n         return schemaTO;\n@@ -246,6 +289,7 @@ public DerSchemaTO getDerSchemaTO(final DerSchema schema) {\n     // --------------- VIRTUAL -----------------\n     private VirSchema fill(final VirSchema schema, final VirSchemaTO schemaTO) {\n         BeanUtils.copyProperties(schemaTO, schema, IGNORE_PROPERTIES);\n+        labels(schemaTO, schema);\n \n         if (schemaTO.getAnyTypeClass() != null\n                 && (schema.getAnyTypeClass() == null\n@@ -299,9 +343,17 @@ public VirSchema update(final VirSchemaTO schemaTO, final VirSchema schema) {\n     }\n \n     @Override\n-    public VirSchemaTO getVirSchemaTO(final VirSchema schema) {\n+    public VirSchemaTO getVirSchemaTO(final String key) {\n+        VirSchema schema = virSchemaDAO.find(key);\n+        if (schema == null) {\n+            throw new NotFoundException(\"Virtual Schema '\" + key + \"'\");\n+        }\n+\n         VirSchemaTO schemaTO = new VirSchemaTO();\n+\n         BeanUtils.copyProperties(schema, schemaTO, IGNORE_PROPERTIES);\n+        labels(schema, schemaTO);\n+\n         schemaTO.setAnyTypeClass(schema.getAnyTypeClass() == null ? null : schema.getAnyTypeClass().getKey());\n         schemaTO.setResource(schema.getProvision().getResource().getKey());\n         schemaTO.setAnyType(schema.getProvision().getAnyType().getKey());"},{"sha":"ab85cfd299c5cbbea8b2efc8e0d81597c4fa11a8","filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCProvider.java","status":"modified","additions":13,"deletions":20,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -34,8 +34,7 @@\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.persistence.api.entity.OIDCProvider;\n import org.apache.syncope.core.persistence.api.entity.OIDCProviderItem;\n import org.apache.syncope.core.persistence.api.entity.OIDCUserTemplate;\n@@ -87,20 +86,14 @@ public class JPAOIDCProvider extends AbstractGeneratedKeyEntity implements OIDCP\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"op\")\n     private List<JPAOIDCProviderItem> items = new ArrayList<>();\n \n-    @Min(0)\n-    @Max(1)\n-    @Column(nullable = false)\n-    private Integer createUnmatching;\n+    @NotNull\n+    private Boolean createUnmatching = false;\n \n-    @Min(0)\n-    @Max(1)\n-    @Column(nullable = false)\n-    private Integer selfRegUnmatching;\n+    @NotNull\n+    private Boolean selfRegUnmatching = false;\n \n-    @Min(0)\n-    @Max(1)\n-    @Column(nullable = false)\n-    private Integer updateMatching;\n+    @NotNull\n+    private Boolean updateMatching = false;\n \n     @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"actionClassName\")\n@@ -211,32 +204,32 @@ public void setHasDiscovery(final boolean hasDiscovery) {\n \n     @Override\n     public boolean isCreateUnmatching() {\n-        return isBooleanAsInteger(createUnmatching);\n+        return createUnmatching;\n     }\n \n     @Override\n     public void setCreateUnmatching(final boolean createUnmatching) {\n-        this.createUnmatching = getBooleanAsInteger(createUnmatching);\n+        this.createUnmatching = createUnmatching;\n     }\n \n     @Override\n     public boolean isSelfRegUnmatching() {\n-        return isBooleanAsInteger(selfRegUnmatching);\n+        return selfRegUnmatching;\n     }\n \n     @Override\n     public void setSelfRegUnmatching(final boolean selfRegUnmatching) {\n-        this.selfRegUnmatching = getBooleanAsInteger(selfRegUnmatching);\n+        this.selfRegUnmatching = selfRegUnmatching;\n     }\n \n     @Override\n     public boolean isUpdateMatching() {\n-        return isBooleanAsInteger(updateMatching);\n+        return updateMatching;\n     }\n \n     @Override\n     public void setUpdateMatching(final boolean updateMatching) {\n-        this.updateMatching = getBooleanAsInteger(updateMatching);\n+        this.updateMatching = updateMatching;\n     }\n \n     @Override"},{"sha":"54e76be018c9ae0a4b1cec6cc08f8488962a8abf","filename":"ext/saml2sp/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASAML2IdP.java","status":"modified","additions":21,"deletions":32,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -34,8 +34,7 @@\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotNull;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdP;\n@@ -66,30 +65,20 @@ public class JPASAML2IdP extends AbstractGeneratedKeyEntity implements SAML2IdP\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"idp\")\n     private List<JPASAML2IdPItem> items = new ArrayList<>();\n \n-    @Min(0)\n-    @Max(1)\n-    @Column(nullable = false)\n-    private Integer createUnmatching;\n+    @NotNull\n+    private Boolean createUnmatching = false;\n \n-    @Min(0)\n-    @Max(1)\n-    @Column(nullable = false)\n-    private Integer selfRegUnmatching;\n+    @NotNull\n+    private Boolean selfRegUnmatching = false;\n \n-    @Min(0)\n-    @Max(1)\n-    @Column(nullable = false)\n-    private Integer updateMatching;\n+    @NotNull\n+    private Boolean updateMatching = false;\n \n-    @Min(0)\n-    @Max(1)\n-    @Column(nullable = false)\n-    private Integer useDeflateEncoding;\n+    @NotNull\n+    private Boolean useDeflateEncoding = false;\n \n-    @Min(0)\n-    @Max(1)\n-    @Column(nullable = false)\n-    private Integer supportUnsolicited;\n+    @NotNull\n+    private Boolean supportUnsolicited = false;\n \n     @Column(nullable = false)\n     private SAML2BindingType bindingType;\n@@ -136,52 +125,52 @@ public void setMetadata(final byte[] metadata) {\n \n     @Override\n     public boolean isCreateUnmatching() {\n-        return isBooleanAsInteger(createUnmatching);\n+        return createUnmatching;\n     }\n \n     @Override\n     public void setCreateUnmatching(final boolean createUnmatching) {\n-        this.createUnmatching = getBooleanAsInteger(createUnmatching);\n+        this.createUnmatching = createUnmatching;\n     }\n \n     @Override\n     public boolean isSelfRegUnmatching() {\n-        return isBooleanAsInteger(selfRegUnmatching);\n+        return selfRegUnmatching;\n     }\n \n     @Override\n     public void setSelfRegUnmatching(final boolean selfRegUnmatching) {\n-        this.selfRegUnmatching = getBooleanAsInteger(selfRegUnmatching);\n+        this.selfRegUnmatching = selfRegUnmatching;\n     }\n \n     @Override\n     public boolean isUpdateMatching() {\n-        return isBooleanAsInteger(updateMatching);\n+        return updateMatching;\n     }\n \n     @Override\n     public void setUpdateMatching(final boolean updateMatching) {\n-        this.updateMatching = getBooleanAsInteger(updateMatching);\n+        this.updateMatching = updateMatching;\n     }\n \n     @Override\n     public boolean isUseDeflateEncoding() {\n-        return isBooleanAsInteger(useDeflateEncoding);\n+        return useDeflateEncoding;\n     }\n \n     @Override\n     public void setUseDeflateEncoding(final boolean useDeflateEncoding) {\n-        this.useDeflateEncoding = getBooleanAsInteger(useDeflateEncoding);\n+        this.useDeflateEncoding = useDeflateEncoding;\n     }\n \n     @Override\n     public boolean isSupportUnsolicited() {\n-        return isBooleanAsInteger(supportUnsolicited);\n+        return supportUnsolicited;\n     }\n \n     @Override\n     public void setSupportUnsolicited(final boolean supportUnsolicited) {\n-        this.supportUnsolicited = getBooleanAsInteger(supportUnsolicited);\n+        this.supportUnsolicited = supportUnsolicited;\n     }\n \n     @Override"},{"sha":"f243bb5491b2a468e1535190e7d005c37c081a4d","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/pages/SCIMConfPage.java","status":"modified","additions":14,"deletions":24,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConfPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConfPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSCIMConfPage.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -31,8 +31,6 @@\n import org.apache.syncope.client.console.wizards.any.ResultPage;\n import org.apache.syncope.common.lib.scim.SCIMConf;\n import org.apache.syncope.common.lib.scim.types.SCIMEntitlement;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -76,34 +74,26 @@ private WebMarkupContainer updateSCIMGeneralConfContent(final SCIMConf scimConf)\n \n             @Override\n             protected void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n-                modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-                    private static final long serialVersionUID = 8804221891699487139L;\n-\n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        if (modal.getContent() instanceof ResultPage) {\n-                            Serializable result = ResultPage.class.cast(modal.getContent()).getResult();\n-                            try {\n-                                restClient.set(MAPPER.readValue(result.toString(), SCIMConf.class));\n-\n-                                SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                modal.show(false);\n-                                target.add(content);\n-                            } catch (Exception e) {\n-                                LOG.error(\"While setting SCIM configuration\", e);\n-                                SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                        ? e.getClass().getName() : e.getMessage());\n-                            }\n-                            ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                modal.setWindowClosedCallback(target -> {\n+                    if (modal.getContent() instanceof ResultPage) {\n+                        Serializable result = ResultPage.class.cast(modal.getContent()).getResult();\n+                        try {\n+                            restClient.set(MAPPER.readValue(result.toString(), SCIMConf.class));\n+\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            modal.show(false);\n+                            target.add(content);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While setting SCIM configuration\", e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n                         }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n                 });\n             }\n-\n         });\n \n         return content;\n     }\n-\n }"},{"sha":"7740dcf273f2eff8d26ec889fff782b2ab450c6c","filename":"ext/scimv2/client-console/src/main/java/org/apache/syncope/client/console/panels/SCIMConfUserPanel.java","status":"modified","additions":296,"deletions":329,"changes":625,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfUserPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfUserPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSCIMConfUserPanel.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -22,8 +22,6 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import org.apache.commons.collections4.IterableUtils;\n-import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n@@ -57,9 +55,7 @@ public class SCIMConfUserPanel extends SCIMConfTabPanel {\n \n     private final SCIMUserConf scimUserConf;\n \n-    public SCIMConfUserPanel(\n-            final String id,\n-            final SCIMConf scimConf) {\n+    public SCIMConfUserPanel(final String id, final SCIMConf scimConf) {\n         super(id, scimConf);\n \n         if (scimConf.getUserConf() == null) {\n@@ -75,164 +71,156 @@ public SCIMConfUserPanel(\n         settings.setShowListOnEmptyInput(true);\n         settings.setCssClassName(\"custom-autocomplete-box\");\n \n-        AjaxTextFieldPanel displayNamePanel =\n-                new AjaxTextFieldPanel(\"displayName\", \"displayName\",\n-                        new PropertyModel<String>(\"displayName\", \"displayName\") {\n+        AjaxTextFieldPanel displayNamePanel = new AjaxTextFieldPanel(\"displayName\", \"displayName\",\n+                new PropertyModel<String>(\"displayName\", \"displayName\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getDisplayName();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getDisplayName();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.setDisplayName(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.setDisplayName(object);\n+            }\n \n-                });\n+        });\n         displayNamePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel localePanel =\n-                new AjaxTextFieldPanel(\"locale\", \"locale\",\n-                        new PropertyModel<String>(\"locale\", \"locale\") {\n+        AjaxTextFieldPanel localePanel = new AjaxTextFieldPanel(\"locale\", \"locale\",\n+                new PropertyModel<String>(\"locale\", \"locale\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getLocale();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getLocale();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.setLocale(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.setLocale(object);\n+            }\n \n-                });\n+        });\n         localePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel nickNamePanel =\n-                new AjaxTextFieldPanel(\"nickName\", \"nickName\",\n-                        new PropertyModel<String>(\"nickName\", \"nickName\") {\n+        AjaxTextFieldPanel nickNamePanel = new AjaxTextFieldPanel(\"nickName\", \"nickName\",\n+                new PropertyModel<String>(\"nickName\", \"nickName\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getNickName();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getNickName();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.setNickName(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.setNickName(object);\n+            }\n \n-                });\n+        });\n         nickNamePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel preferredLanguagePanel =\n-                new AjaxTextFieldPanel(\"preferredLanguage\", \"preferredLanguage\",\n-                        new PropertyModel<String>(\"preferredLanguage\", \"preferredLanguage\") {\n+        AjaxTextFieldPanel preferredLanguagePanel = new AjaxTextFieldPanel(\"preferredLanguage\", \"preferredLanguage\",\n+                new PropertyModel<String>(\"preferredLanguage\", \"preferredLanguage\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getPreferredLanguage();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getPreferredLanguage();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.setPreferredLanguage(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.setPreferredLanguage(object);\n+            }\n \n-                });\n+        });\n         preferredLanguagePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel profileUrlPanel =\n-                new AjaxTextFieldPanel(\"profileUrl\", \"profileUrl\",\n-                        new PropertyModel<String>(\"profileUrl\", \"profileUrl\") {\n+        AjaxTextFieldPanel profileUrlPanel = new AjaxTextFieldPanel(\"profileUrl\", \"profileUrl\",\n+                new PropertyModel<String>(\"profileUrl\", \"profileUrl\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getProfileUrl();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getProfileUrl();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.setProfileUrl(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.setProfileUrl(object);\n+            }\n \n-                });\n+        });\n         profileUrlPanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel timezonePanel =\n-                new AjaxTextFieldPanel(\"timezone\", \"timezone\",\n-                        new PropertyModel<String>(\"timezone\", \"timezone\") {\n+        AjaxTextFieldPanel timezonePanel = new AjaxTextFieldPanel(\"timezone\", \"timezone\",\n+                new PropertyModel<String>(\"timezone\", \"timezone\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getTimezone();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getTimezone();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.setTimezone(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.setTimezone(object);\n+            }\n \n-                });\n+        });\n         timezonePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel titlePanel =\n-                new AjaxTextFieldPanel(\"title\", \"title\",\n-                        new PropertyModel<String>(\"title\", \"title\") {\n+        AjaxTextFieldPanel titlePanel = new AjaxTextFieldPanel(\"title\", \"title\",\n+                new PropertyModel<String>(\"title\", \"title\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getTitle();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getTitle();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.setTitle(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.setTitle(object);\n+            }\n \n-                });\n+        });\n         titlePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel userTypePanel =\n-                new AjaxTextFieldPanel(\"userType\", \"userType\",\n-                        new PropertyModel<String>(\"userType\", \"userType\") {\n+        AjaxTextFieldPanel userTypePanel = new AjaxTextFieldPanel(\"userType\", \"userType\",\n+                new PropertyModel<String>(\"userType\", \"userType\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getUserType();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getUserType();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.setUserType(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.setUserType(object);\n+            }\n \n-                });\n+        });\n         userTypePanel.setChoices(plainSchemaNames);\n \n         // name\n         buildNameAccordion();\n \n         // x509certificates\n         final AjaxTextFieldPanel x509CertificatesPanel = new AjaxTextFieldPanel(\"panel\", \"x509CertificatesPanel\",\n-                new Model<String>(null));\n+                new Model<>(null));\n         x509CertificatesPanel.setChoices(plainSchemaNames);\n         MultiFieldPanel<String> x509CertificatesMultiPanel = new MultiFieldPanel.Builder<>(\n                 new ListModel<>(scimUserConf.getX509Certificates())).build(\n@@ -242,20 +230,14 @@ public void setObject(final String object) {\n \n         // addresses\n         List<SCIMUserAddressConf> addresses = new ArrayList<>();\n-        for (final AddressCanonicalType canonicalType : AddressCanonicalType.values()) {\n-            SCIMUserAddressConf address = IterableUtils.find(scimUserConf.getAddresses(),\n-                    new Predicate<SCIMUserAddressConf>() {\n-\n-                @Override\n-                public boolean evaluate(final SCIMUserAddressConf object) {\n-                    return object.getType().equals(canonicalType);\n-                }\n-            });\n-\n-            if (address == null) {\n-                address = new SCIMUserAddressConf();\n-                address.setType(canonicalType);\n-            }\n+        for (AddressCanonicalType canonicalType : AddressCanonicalType.values()) {\n+            SCIMUserAddressConf address = scimUserConf.getAddresses().stream().\n+                    filter(addressConf -> addressConf.getType().equals(canonicalType)).\n+                    findFirst().orElseGet(() -> {\n+                        SCIMUserAddressConf empty = new SCIMUserAddressConf();\n+                        empty.setType(canonicalType);\n+                        return empty;\n+                    });\n             buildAddressAccordion(address, canonicalType);\n             addresses.add(address);\n         }\n@@ -289,24 +271,21 @@ public boolean evaluate(final SCIMUserAddressConf object) {\n \n     }\n \n-    private <T extends Enum<?>> void buildComplexPanels(final List<SCIMComplexConf<T>> complexes,\n+    private <T extends Enum<?>> void buildComplexPanels(\n+            final List<SCIMComplexConf<T>> complexes,\n             final String basePanelId,\n             final String baseTabId,\n             final T[] canonicalTypes) {\n+\n         List<SCIMComplexConf<T>> newElems = new ArrayList<>();\n-        for (final T canonicalType : canonicalTypes) {\n-            SCIMComplexConf<T> complex = IterableUtils.find(complexes,\n-                    new Predicate<SCIMComplexConf<T>>() {\n-\n-                @Override\n-                public boolean evaluate(final SCIMComplexConf<T> object) {\n-                    return object.getType().equals(canonicalType);\n-                }\n-            });\n-            if (complex == null) {\n-                complex = new SCIMComplexConf<>();\n-                complex.setType(canonicalType);\n-            }\n+        for (T canonicalType : canonicalTypes) {\n+            SCIMComplexConf<T> complex = complexes.stream().\n+                    filter(complexConf -> complexConf.getType().equals(canonicalType)).\n+                    findFirst().orElseGet(() -> {\n+                        SCIMComplexConf<T> empty = new SCIMComplexConf<>();\n+                        empty.setType(canonicalType);\n+                        return empty;\n+                    });\n             buildComplexAccordion(complex, basePanelId, baseTabId, canonicalType);\n             newElems.add(complex);\n         }\n@@ -329,9 +308,8 @@ public WebMarkupContainer getPanel(final String panelId) {\n         add(accordion.setOutputMarkupId(true));\n     }\n \n-    private void buildAddressAccordion(final SCIMUserAddressConf address,\n-            final AddressCanonicalType canonicalType) {\n-        final Accordion accordion = new Accordion(\"addressesAccordion_\" + address.getType().name(),\n+    private void buildAddressAccordion(final SCIMUserAddressConf address, final AddressCanonicalType canonicalType) {\n+        Accordion accordion = new Accordion(\"addressesAccordion_\" + address.getType().name(),\n                 Collections.<ITab>singletonList(new AbstractTab(Model.of(\"address.\" + address.getType().name())) {\n \n                     private static final long serialVersionUID = -5861786415855103549L;\n@@ -345,13 +323,14 @@ public WebMarkupContainer getPanel(final String panelId) {\n         add(accordion.setOutputMarkupId(true));\n     }\n \n-    private <T extends Enum<?>> void buildComplexAccordion(final SCIMComplexConf<T> complex,\n+    private <T extends Enum<?>> void buildComplexAccordion(\n+            final SCIMComplexConf<T> complex,\n             final String basePanelId,\n             final String baseTabId,\n             final T canonicalType) {\n-        final Accordion accordion = new Accordion(basePanelId + \"_\" + complex.getType().name(),\n-                Collections.<ITab>singletonList(\n-                        new AbstractTab(Model.of(baseTabId + \".\" + complex.getType().name())) {\n+\n+        Accordion accordion = new Accordion(basePanelId + \"_\" + complex.getType().name(),\n+                Collections.<ITab>singletonList(new AbstractTab(Model.of(baseTabId + \".\" + complex.getType().name())) {\n \n                     private static final long serialVersionUID = -5861786415855103549L;\n \n@@ -367,118 +346,112 @@ public WebMarkupContainer getPanel(final String panelId) {\n     private SCIMConfAccordionContainer buildNameAccordionContent(final String panelId) {\n         final List<AjaxTextFieldPanel> panelList = new ArrayList<>();\n \n-        AjaxTextFieldPanel nameFamilyNamePanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", \"name.familyName\",\n-                        new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+        AjaxTextFieldPanel nameFamilyNamePanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.familyName\",\n+                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getName().getFamilyName();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getName().getFamilyName();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.getName().setFamilyName(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.getName().setFamilyName(object);\n+            }\n \n-                });\n+        });\n         nameFamilyNamePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel nameFormattedPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", \"name.formatted\",\n-                        new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+        AjaxTextFieldPanel nameFormattedPanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.formatted\",\n+                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getName().getFormatted();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getName().getFormatted();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.getName().setFormatted(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.getName().setFormatted(object);\n+            }\n \n-                });\n+        });\n         nameFormattedPanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel nameGivenNamePanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", \"name.givenName\",\n-                        new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+        AjaxTextFieldPanel nameGivenNamePanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.givenName\",\n+                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getName().getGivenName();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getName().getGivenName();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.getName().setGivenName(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.getName().setGivenName(object);\n+            }\n \n-                });\n+        });\n         nameGivenNamePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel nameHonorificPrefixPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", \"name.honorificPrefix\",\n-                        new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+        AjaxTextFieldPanel nameHonorificPrefixPanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.honorificPrefix\",\n+                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getName().getHonorificPrefix();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getName().getHonorificPrefix();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.getName().setHonorificPrefix(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.getName().setHonorificPrefix(object);\n+            }\n \n-                });\n+        });\n         nameHonorificPrefixPanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel nameHonorificSuffixPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", \"name.honorificSuffix\",\n-                        new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+        AjaxTextFieldPanel nameHonorificSuffixPanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.honorificSuffix\",\n+                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getName().getHonorificSuffix();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getName().getHonorificSuffix();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.getName().setHonorificSuffix(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.getName().setHonorificSuffix(object);\n+            }\n \n-                });\n+        });\n         nameHonorificSuffixPanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel nameMiddleNamePanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", \"name.middleName\",\n-                        new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n+        AjaxTextFieldPanel nameMiddleNamePanel = new AjaxTextFieldPanel(\"accordionContent\", \"name.middleName\",\n+                new PropertyModel<String>(scimUserConf.getName(), \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return scimUserConf.getName().getMiddleName();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return scimUserConf.getName().getMiddleName();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        scimUserConf.getName().setMiddleName(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                scimUserConf.getName().setMiddleName(object);\n+            }\n \n-                });\n+        });\n         nameMiddleNamePanel.setChoices(plainSchemaNames);\n \n         panelList.add(nameFamilyNamePanel);\n@@ -495,64 +468,62 @@ private <T extends Enum<?>> SCIMConfAccordionContainer buildComplexAccordionCont\n             final SCIMComplexConf<T> complex,\n             final T canonicalType,\n             final String panelId) {\n+\n         final List<AjaxTextFieldPanel> panelList = new ArrayList<>();\n         final String fieldName = panelId + \".\" + canonicalType.name();\n \n-        AjaxTextFieldPanel displayPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".display\",\n-                        new PropertyModel<String>(complex, \"accordionContent\") {\n+        AjaxTextFieldPanel displayPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".display\",\n+                new PropertyModel<String>(complex, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return complex.getDisplay();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return complex.getDisplay();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        complex.setDisplay(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                complex.setDisplay(object);\n+            }\n \n-                });\n+        });\n         displayPanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel valuePanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".value\",\n-                        new PropertyModel<String>(complex, \"accordionContent\") {\n+        AjaxTextFieldPanel valuePanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".value\",\n+                new PropertyModel<String>(complex, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return complex.getValue();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return complex.getValue();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        complex.setValue(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                complex.setValue(object);\n+            }\n \n-                });\n+        });\n         valuePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel primaryPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".primary\",\n-                        new PropertyModel<String>(complex, \"accordionContent\") {\n+        AjaxTextFieldPanel primaryPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".primary\",\n+                new PropertyModel<String>(complex, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return String.valueOf(complex.isPrimary());\n-                    }\n+            @Override\n+            public String getObject() {\n+                return String.valueOf(complex.isPrimary());\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        complex.setPrimary(Boolean.valueOf(object));\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                complex.setPrimary(Boolean.valueOf(object));\n+            }\n \n-                });\n+        });\n         primaryPanel.setChoices(Arrays.asList(\"true\", \"false\"));\n \n         panelList.add(displayPanel);\n@@ -562,86 +533,84 @@ public void setObject(final String object) {\n         return new SCIMConfAccordionContainer(panelId, panelList);\n     }\n \n-    private SCIMConfAccordionContainer buildAddressAccordionContent(final SCIMUserAddressConf address,\n+    private SCIMConfAccordionContainer buildAddressAccordionContent(\n+            final SCIMUserAddressConf address,\n             final AddressCanonicalType canonicalType,\n             final String panelId) {\n+\n         final List<AjaxTextFieldPanel> panelList = new ArrayList<>();\n         final String fieldName = \"addresses.\" + canonicalType.name();\n \n-        AjaxTextFieldPanel addressCountryPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".country\",\n-                        new PropertyModel<String>(address, \"accordionContent\") {\n+        AjaxTextFieldPanel addressCountryPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".country\",\n+                new PropertyModel<String>(address, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return address.getCountry();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return address.getCountry();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        address.setCountry(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                address.setCountry(object);\n+            }\n \n-                });\n+        });\n         addressCountryPanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel addressFormattedPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".formatted\",\n-                        new PropertyModel<String>(address, \"accordionContent\") {\n+        AjaxTextFieldPanel addressFormattedPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".formatted\",\n+                new PropertyModel<String>(address, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return address.getFormatted();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return address.getFormatted();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        address.setFormatted(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                address.setFormatted(object);\n+            }\n \n-                });\n+        });\n         addressFormattedPanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel addressLocalityPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".locality\",\n-                        new PropertyModel<String>(address, \"accordionContent\") {\n+        AjaxTextFieldPanel addressLocalityPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".locality\",\n+                new PropertyModel<String>(address, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return address.getLocality();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return address.getLocality();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        address.setLocality(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                address.setLocality(object);\n+            }\n \n-                });\n+        });\n         addressLocalityPanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel addressRegionPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".region\",\n-                        new PropertyModel<String>(address, \"accordionContent\") {\n+        AjaxTextFieldPanel addressRegionPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".region\",\n+                new PropertyModel<String>(address, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return address.getRegion();\n-                    }\n+            @Override\n+            public String getObject() {\n+                return address.getRegion();\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        address.setRegion(object);\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                address.setRegion(object);\n+            }\n \n-                });\n+        });\n         addressRegionPanel.setChoices(plainSchemaNames);\n \n         AjaxTextFieldPanel addressPostalCodePanel =\n@@ -663,23 +632,22 @@ public void setObject(final String object) {\n                 });\n         addressPostalCodePanel.setChoices(plainSchemaNames);\n \n-        AjaxTextFieldPanel addressPrimaryPanel =\n-                new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".primary\",\n-                        new PropertyModel<String>(address, \"accordionContent\") {\n+        AjaxTextFieldPanel addressPrimaryPanel = new AjaxTextFieldPanel(\"accordionContent\", fieldName + \".primary\",\n+                new PropertyModel<String>(address, \"accordionContent\") {\n \n-                    private static final long serialVersionUID = -6427731218492117883L;\n+            private static final long serialVersionUID = -6427731218492117883L;\n \n-                    @Override\n-                    public String getObject() {\n-                        return String.valueOf(address.isPrimary());\n-                    }\n+            @Override\n+            public String getObject() {\n+                return String.valueOf(address.isPrimary());\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        address.setPrimary(Boolean.valueOf(object));\n-                    }\n+            @Override\n+            public void setObject(final String object) {\n+                address.setPrimary(Boolean.valueOf(object));\n+            }\n \n-                });\n+        });\n         addressPrimaryPanel.setChoices(Arrays.asList(\"true\", \"false\"));\n \n         panelList.add(addressCountryPanel);\n@@ -696,5 +664,4 @@ public void setObject(final String object) {\n     public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n     }\n-\n }"},{"sha":"9559e407b7967cacaa84bf2526e30ecd878a0329","filename":"fit/core-reference/src/main/resources/jboss/domains.xml","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains.xml?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -46,7 +46,10 @@ under the License.\n         <!-- Removed: see https://s.apache.org/openjpaSchemaFactory for more information\n         <entry key=\"openjpa.jdbc.SchemaFactory\" value=\"native(ForeignKeys=true)\"/>-->\n         <entry key=\"openjpa.jdbc.MappingDefaults\" \n-               value=\"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict\"/>\n+               value=\"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict,\n+                      FieldStrategies='\n+                        java.util.Locale=org.apache.syncope.core.persistence.jpa.openjpa.LocaleValueHandler,\n+                        java.lang.Boolean=org.apache.syncope.core.persistence.jpa.openjpa.BooleanValueHandler'\"/>\n                 \n         <entry key=\"openjpa.DataCache\" value=\"true\"/>\n         <entry key=\"openjpa.QueryCache\" value=\"true\"/>"},{"sha":"a916663ababce14021097968b0772f4e08c0c0e7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/DerSchemaITCase.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDerSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDerSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDerSchemaITCase.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -25,6 +25,7 @@\n import static org.junit.jupiter.api.Assertions.fail;\n \n import java.util.List;\n+import java.util.Locale;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n@@ -63,9 +64,14 @@ public void create() {\n         DerSchemaTO schema = new DerSchemaTO();\n         schema.setKey(\"derived\");\n         schema.setExpression(\"derived_sx + '_' + derived_dx\");\n+        schema.getLabels().put(Locale.ENGLISH, \"Derived\");\n+        schema.getLabels().put(Locale.ITALIAN, \"Derivato\");\n \n         DerSchemaTO actual = createSchema(SchemaType.DERIVED, schema);\n         assertNotNull(actual);\n+        assertEquals(2, actual.getLabels().size());\n+        assertEquals(\"Derivato\", actual.getLabel(Locale.ITALIAN));\n+        assertEquals(schema.getKey(), actual.getLabel(Locale.JAPANESE));\n \n         actual = schemaService.read(SchemaType.DERIVED, actual.getKey());\n         assertNotNull(actual);"},{"sha":"fa04dd54428d93d2af224fd9bd67984bfa137274","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PlainSchemaITCase.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -28,6 +28,7 @@\n import java.io.IOException;\n import java.util.Base64;\n import java.util.List;\n+import java.util.Locale;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.SerializationUtils;\n@@ -63,6 +64,8 @@ private PlainSchemaTO buildPlainSchemaTO(final String name, final AttrSchemaType\n     public void create() {\n         PlainSchemaTO schemaTO = buildPlainSchemaTO(\"testAttribute\", AttrSchemaType.String);\n         schemaTO.setMandatoryCondition(\"false\");\n+        schemaTO.getLabels().put(Locale.ENGLISH, \"Test\");\n+        schemaTO.getLabels().put(Locale.ITALIAN, \"Prova\");\n \n         PlainSchemaTO newPlainSchemaTO = createSchema(SchemaType.PLAIN, schemaTO);\n         assertEquals(schemaTO, newPlainSchemaTO);"},{"sha":"28482498ac770218722bf1d831af43a29149ab33","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirSchemaITCase.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d7d06bc088adebaae3fd7608a8c0ea3639916910/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d7d06bc088adebaae3fd7608a8c0ea3639916910/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java?ref=d7d06bc088adebaae3fd7608a8c0ea3639916910","patch":"@@ -26,6 +26,7 @@\n \n import java.security.AccessControlException;\n import java.util.List;\n+import java.util.Locale;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -68,10 +69,14 @@ public void crud() {\n         schema.setExtAttrName(\"name\");\n         schema.setResource(RESOURCE_NAME_CSV);\n         schema.setAnyType(csv.getProvisions().get(0).getAnyType());\n+        schema.getLabels().put(Locale.ENGLISH, \"Virtual\");\n \n         schema = createSchema(SchemaType.VIRTUAL, schema);\n         assertNotNull(schema);\n         assertEquals(csv.getProvisions().get(0).getAnyType(), schema.getAnyType());\n+        assertEquals(1, schema.getLabels().size());\n+        assertEquals(\"Virtual\", schema.getLabel(Locale.ENGLISH));\n+        assertEquals(schema.getKey(), schema.getLabel(Locale.CHINESE));\n \n         csv = resourceService.read(RESOURCE_NAME_CSV);\n         assertNotNull(csv);"}]}