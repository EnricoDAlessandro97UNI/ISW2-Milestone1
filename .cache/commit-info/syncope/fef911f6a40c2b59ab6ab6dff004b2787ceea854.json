{"sha":"fef911f6a40c2b59ab6ab6dff004b2787ceea854","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZlZjkxMWY2YTQwYzJiNTlhYjZhYjZkZmYwMDRiMjc4N2NlZWE4NTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-27T14:23:50Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-27T14:23:50Z"},"message":"Huge clean up of console code (generics are your friends) + usage of SpinnerFieldPanel in AttributesPanel\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1553676 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3cfb28c16d9bc3d9a5fc833862ff5a4c649db1c5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3cfb28c16d9bc3d9a5fc833862ff5a4c649db1c5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fef911f6a40c2b59ab6ab6dff004b2787ceea854","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fef911f6a40c2b59ab6ab6dff004b2787ceea854","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fef911f6a40c2b59ab6ab6dff004b2787ceea854","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fef911f6a40c2b59ab6ab6dff004b2787ceea854/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ca218d6ce9c440f7f40af96badefaf64934b5174","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca218d6ce9c440f7f40af96badefaf64934b5174","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca218d6ce9c440f7f40af96badefaf64934b5174"}],"stats":{"total":1113,"additions":652,"deletions":461},"files":[{"sha":"c1e82194d8997500dfb0eb6a564e40629eff2a41","filename":"common/src/main/java/org/apache/syncope/common/types/ConnConfProperty.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -37,7 +37,7 @@ public class ConnConfProperty extends AbstractBaseBean implements Comparable<Con\n \r\n     private ConnConfPropSchema schema;\r\n \r\n-    private List<Object> values = new ArrayList<Object>();\r\n+    private final List<Object> values = new ArrayList<Object>();\r\n \r\n     private boolean overridable;\r\n \r"},{"sha":"68dda9c30974873febe801b4662255ee0b5904f6","filename":"console/src/main/java/org/apache/syncope/console/SyncopeApplication.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -148,7 +148,7 @@ public Page createPage() {\n             }\n         });\n \n-        final AjaxLink<Void> infoLink = new AjaxLink<Void>(\"infoLink\") {\n+        final AjaxLink<Page> infoLink = new AjaxLink<Page>(\"infoLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -159,55 +159,55 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n         page.add(infoLink);\n \n-        BookmarkablePageLink<Void> schemaLink = new BookmarkablePageLink<Void>(\"schema\", Schema.class);\n+        BookmarkablePageLink<Page> schemaLink = new BookmarkablePageLink<Page>(\"schema\", Schema.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 schemaLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Schema\", \"list\"));\n         page.add(schemaLink);\n         schemaLink.add(new Image(\"schemaIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"schema\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Void> usersLink = new BookmarkablePageLink<Void>(\"users\", Users.class);\n+        BookmarkablePageLink<Page> usersLink = new BookmarkablePageLink<Page>(\"users\", Users.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 usersLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Users\", \"list\"));\n         page.add(usersLink);\n         usersLink.add(new Image(\"usersIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"users\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Void> rolesLink = new BookmarkablePageLink<Void>(\"roles\", Roles.class);\n+        BookmarkablePageLink<Page> rolesLink = new BookmarkablePageLink<Page>(\"roles\", Roles.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 rolesLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Roles\", \"list\"));\n         page.add(rolesLink);\n         rolesLink.add(new Image(\"rolesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"roles\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Void> resourcesLink = new BookmarkablePageLink<Void>(\"resources\", Resources.class);\n+        BookmarkablePageLink<Page> resourcesLink = new BookmarkablePageLink<Page>(\"resources\", Resources.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 resourcesLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Resources\", \"list\"));\n         page.add(resourcesLink);\n         resourcesLink.add(new Image(\"resourcesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"resources\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Void> todoLink = new BookmarkablePageLink<Void>(\"todo\", Todo.class);\n+        BookmarkablePageLink<Page> todoLink = new BookmarkablePageLink<Page>(\"todo\", Todo.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 todoLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Approval\", \"list\"));\n         page.add(todoLink);\n         todoLink.add(new Image(\"todoIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"todo\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Void> reportLink = new BookmarkablePageLink<Void>(\"reports\", Reports.class);\n+        BookmarkablePageLink<Page> reportLink = new BookmarkablePageLink<Page>(\"reports\", Reports.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 reportLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\"));\n         page.add(reportLink);\n         reportLink.add(new Image(\"reportsIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"reports\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Void> configurationLink = new BookmarkablePageLink<Void>(\"configuration\",\n+        BookmarkablePageLink<Page> configurationLink = new BookmarkablePageLink<Page>(\"configuration\",\n                 Configuration.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 configurationLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"list\"));\n@@ -216,15 +216,15 @@ public void onClick(final AjaxRequestTarget target) {\n                 ? IMG_NOTSEL\n                 : \"\") + \"configuration\" + Constants.PNG_EXT)));\n \n-        BookmarkablePageLink<Void> taskLink = new BookmarkablePageLink<Void>(\"tasks\", Tasks.class);\n+        BookmarkablePageLink<Page> taskLink = new BookmarkablePageLink<Page>(\"tasks\", Tasks.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 taskLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"list\"));\n         page.add(taskLink);\n         taskLink.add(new Image(\"tasksIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n                 ? IMG_NOTSEL\n                 : \"\") + \"tasks\" + Constants.PNG_EXT)));\n \n-        page.add(new BookmarkablePageLink<Void>(\"logout\", Logout.class));\n+        page.add(new BookmarkablePageLink<Page>(\"logout\", Logout.class));\n     }\n \n     public void setupEditProfileModal(final WebPage page, final UserSelfRestClient userSelfRestClient) {\n@@ -236,7 +236,7 @@ public void setupEditProfileModal(final WebPage page, final UserSelfRestClient u\n         editProfileModalWin.setCookieName(\"edit-profile-modal\");\n         page.add(editProfileModalWin);\n \n-        final AjaxLink<Void> editProfileLink = new AjaxLink<Void>(\"editProfileLink\") {\n+        final AjaxLink<Page> editProfileLink = new AjaxLink<Page>(\"editProfileLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"b545e8fda95610e15e7832c3b4e541d12c33219d","filename":"console/src/main/java/org/apache/syncope/console/commons/SchemaModalPageFactory.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -21,9 +21,9 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.console.pages.AbstractSchemaModalPage;\n-import org.apache.syncope.console.pages.DerivedSchemaModalPage;\n+import org.apache.syncope.console.pages.DerSchemaModalPage;\n import org.apache.syncope.console.pages.SchemaModalPage;\n-import org.apache.syncope.console.pages.VirtualSchemaModalPage;\n+import org.apache.syncope.console.pages.VirSchemaModalPage;\n \n public final class SchemaModalPageFactory {\n \n@@ -41,11 +41,11 @@ public static <T extends AbstractSchemaModalPage> T getSchemaModalPage(\n \n         switch (schemaType) {\n             case DERIVED:\n-                page = (T) new DerivedSchemaModalPage(entity);\n+                page = (T) new DerSchemaModalPage(entity);\n                 break;\n \n             case VIRTUAL:\n-                page = (T) new VirtualSchemaModalPage(entity);\n+                page = (T) new VirSchemaModalPage(entity);\n                 break;\n \n             default:"},{"sha":"b5c50b09a6d92c14937cadfa622f0ce17989e9cc","filename":"console/src/main/java/org/apache/syncope/console/markup/html/CrontabContainer.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -48,6 +48,7 @@ public class CrontabContainer extends WebMarkupContainer {\n \n     private final TextField daysOfWeek;\n \n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public CrontabContainer(final String id, final PropertyModel<String> cronExpressionModel,\n             final String cronExpression) {\n \n@@ -66,16 +67,15 @@ public CrontabContainer(final String id, final PropertyModel<String> cronExpress\n         final DropDownChoice<SelectOption> cronTemplateChooser =\n                 new DropDownChoice<SelectOption>(\"cronTemplateChooser\") {\n \n-            private static final long serialVersionUID = -5843424545478691442L;\n+                    private static final long serialVersionUID = -5843424545478691442L;\n \n-            @Override\n-            protected CharSequence getDefaultChoice(final String selected) {\n-                return \"<option value=\\\"\\\">\" + getString(\"chooseForTemplate\") + \"</option>\";\n-            }\n-        };\n+                    @Override\n+                    protected CharSequence getDefaultChoice(final String selected) {\n+                        return \"<option value=\\\"\\\">\" + getString(\"chooseForTemplate\") + \"</option>\";\n+                    }\n+                };\n \n-        cronTemplateChooser.setModel(\n-                new IModel<SelectOption>() {\n+        cronTemplateChooser.setModel(new IModel<SelectOption>() {\n \n             private static final long serialVersionUID = 6762568283146531315L;\n \n@@ -101,6 +101,7 @@ public void setObject(final SelectOption object) {\n \n             @Override\n             public void detach() {\n+                // no detach\n             }\n         });\n         cronTemplateChooser.setChoices(Arrays.asList(CRON_TEMPLATES));"},{"sha":"e84e3f842a9ec62cdcf7029302e50ef99900faa7","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractSchemaModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,15 +18,15 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import org.apache.syncope.common.AbstractBaseBean;\n+import org.apache.syncope.common.to.AbstractSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n \n /**\n  * Modal window with Schema form.\n  */\n-public abstract class AbstractSchemaModalPage extends BaseModalPage {\n+public abstract class AbstractSchemaModalPage<T extends AbstractSchemaTO> extends BaseModalPage {\n \n     private static final long serialVersionUID = 7369215690388444748L;\n \n@@ -36,7 +36,7 @@ public AbstractSchemaModalPage(final AttributableType kind) {\n         this.kind = kind;\n     }\n \n-    public abstract void setSchemaModalPage(PageReference callerPageRef, ModalWindow window, AbstractBaseBean schema,\n+    public abstract void setSchemaModalPage(PageReference callerPageRef, ModalWindow window, T schema,\n             boolean createFlag);\n \n     public AttributableType getKind() {"},{"sha":"655ee022d031089fbca343c872ab66c7ba4cc5d0","filename":"console/src/main/java/org/apache/syncope/console/pages/BulkActionModalPage.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -127,7 +127,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         final BulkActionResult res = (BulkActionResult) bulkActionExecutor.getClass().\n                                 getMethod(\"bulkAction\", BulkAction.class).invoke(bulkActionExecutor, bulkAction);\n \n-                        setResponsePage(new BulkActionResultModalPage(window, items, columns, res, idFieldName));\n+                        setResponsePage(new BulkActionResultModalPage<T, S>(window, items, columns, res, idFieldName));\n                     } catch (Exception e) {\n                         LOG.error(\"Operation {} not supported\", bulkAction.getOperation(), e);\n                     }\n@@ -142,13 +142,13 @@ public void onClick(final AjaxRequestTarget target) {\n         final AjaxButton cancel =\n                 new ClearIndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL), getPageReference()) {\n \n-            private static final long serialVersionUID = -958724007591692537L;\n+                    private static final long serialVersionUID = -958724007591692537L;\n \n-            @Override\n-            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                window.close(target);\n-            }\n-        };\n+                    @Override\n+                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                        window.close(target);\n+                    }\n+                };\n \n         cancel.setDefaultFormProcessing(false);\n         form.add(cancel);"},{"sha":"b98b649ed76dec01be123c5f08ad9ed3fe0209d1","filename":"console/src/main/java/org/apache/syncope/console/pages/BulkActionResultModalPage.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionResultModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -60,7 +60,7 @@ public BulkActionResultModalPage(\n             private static final long serialVersionUID = 5291903859908641954L;\n \n             @Override\n-            public Iterator<? extends T> iterator(long first, long count) {\n+            public Iterator<? extends T> iterator(final long first, final long count) {\n                 return items.iterator();\n             }\n \n@@ -70,7 +70,7 @@ public long size() {\n             }\n \n             @Override\n-            public IModel<T> model(T object) {\n+            public IModel<T> model(final T object) {\n                 return new CompoundPropertyModel<T>(object);\n             }\n         };\n@@ -92,6 +92,5 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n \n         add(close);\n-\n     }\n }"},{"sha":"2e4f81e7cf2013f785c071bcb4eeea5e3da8a1a1","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -377,10 +377,12 @@ public void onClick() {\n                 \"Configuration\", \"read\"));\n         add(dbExportLink);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form confPaginatorForm = new Form(\"confPaginatorForm\");\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n-                \"confPaginatorRows\"), prefMan.getPaginatorChoices());\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n+                new PropertyModel(this, \"confPaginatorRows\"), prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -528,8 +530,10 @@ public Page createPage() {\n                 \"Notification\", \"create\"));\n         add(createNotificationLink);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form notificationPaginatorForm = new Form(\"notificationPaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n                 \"notificationPaginatorRows\"), prefMan.getPaginatorChoices());\n "},{"sha":"17d220a97440c795a1f8032e6a3fc7a9f26d89de","filename":"console/src/main/java/org/apache/syncope/console/pages/ConfigurationModalPage.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -45,7 +45,7 @@ public class ConfigurationModalPage extends BaseModalPage {\n     @SpringBean\n     private ConfigurationRestClient configurationsRestClient;\n \n-    private AjaxButton submit;\n+    private final AjaxButton submit;\n \n     /**\n      * ConfigurationModalPage constructor.\n@@ -58,15 +58,17 @@ public class ConfigurationModalPage extends BaseModalPage {\n     public ConfigurationModalPage(final PageReference pageRef, final ModalWindow window,\n             final ConfigurationTO configurationTO, final boolean createFlag) {\n \n-        Form form = new Form(FORM, new CompoundPropertyModel(configurationTO));\n+        Form<ConfigurationTO> form =\n+                new Form<ConfigurationTO>(FORM, new CompoundPropertyModel<ConfigurationTO>(configurationTO));\n \n-        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", \"key\", new PropertyModel(configurationTO, \"key\"));\n+        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", \"key\",\n+                new PropertyModel<String>(configurationTO, \"key\"));\n         form.add(key);\n         key.setEnabled(createFlag);\n         key.addRequiredLabel();\n \n-        final AjaxTextFieldPanel value = new AjaxTextFieldPanel(\"value\", \"value\", new PropertyModel(configurationTO,\n-                \"value\"));\n+        final AjaxTextFieldPanel value = new AjaxTextFieldPanel(\"value\", \"value\",\n+                new PropertyModel<String>(configurationTO, \"value\"));\n         form.add(value);\n \n         submit = new IndicatingAjaxButton(APPLY, new Model<String>(getString(SUBMIT))) {"},{"sha":"0c8ff88003896a062a8cdc1b01ff3bb4c0a5de76","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnObjectModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnObjectModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnObjectModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnObjectModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.console.markup.html.list.AltListView;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListItem;\n@@ -90,7 +90,7 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n                     field = new AjaxTextFieldPanel(\"value\",\n                             prop.getSchema(), new Model<String>(prop.getValues().get(0)));\n                 } else {\n-                    field = new MultiValueSelectorPanel<String>(\"value\", new ListModel<String>(prop.getValues()),\n+                    field = new MultiFieldPanel<String>(\"value\", new ListModel<String>(prop.getValues()),\n                             new AjaxTextFieldPanel(\"panel\", prop.getSchema(), new Model<String>()));\n                 }\n                 item.add(field);"},{"sha":"c441b7ec834e46257f1c597c3bb50b6d12d50444","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -41,7 +41,7 @@\n import org.apache.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -358,7 +358,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                                 property.getValues().add(null);\n                             }\n \n-                            item.add(new MultiValueSelectorPanel<String>(\n+                            item.add(new MultiFieldPanel<String>(\n                                             \"panel\", new PropertyModel<List<String>>(property, \"values\"), field));\n                         } else {\n                             field.setNewModel(property.getValues());"},{"sha":"0400b956886605a3e12ee6458368f940371a053a","filename":"console/src/main/java/org/apache/syncope/console/pages/DerSchemaModalPage.java","status":"renamed","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import org.apache.syncope.common.AbstractBaseBean;\n import org.apache.syncope.common.to.DerSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.SyncopeClientException;\n@@ -41,25 +40,25 @@\n /**\n  * Modal window with Schema form.\n  */\n-public class DerivedSchemaModalPage extends AbstractSchemaModalPage {\n+public class DerSchemaModalPage extends AbstractSchemaModalPage<DerSchemaTO> {\n \n     private static final long serialVersionUID = 6668789770131753386L;\n \n-    public DerivedSchemaModalPage(final AttributableType kind) {\n+    public DerSchemaModalPage(final AttributableType kind) {\n         super(kind);\n     }\n \n     @Override\n     public void setSchemaModalPage(final PageReference pageRef, final ModalWindow window,\n-            AbstractBaseBean schema, final boolean createFlag) {\n+            DerSchemaTO schema, final boolean createFlag) {\n \n         if (schema == null) {\n             schema = new DerSchemaTO();\n         }\n \n-        final Form schemaForm = new Form(FORM);\n+        final Form<DerSchemaTO> schemaForm = new Form<DerSchemaTO>(FORM);\n \n-        schemaForm.setModel(new CompoundPropertyModel(schema));\n+        schemaForm.setModel(new CompoundPropertyModel<DerSchemaTO>(schema));\n \n         final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(\n                 schema, \"name\"));\n@@ -72,11 +71,9 @@ public void setSchemaModalPage(final PageReference pageRef, final ModalWindow wi\n         final WebMarkupContainer jexlHelp = JexlHelpUtil.getJexlHelpWebContainer(\"jexlHelp\");\n         schemaForm.add(jexlHelp);\n \n-\n-        final AjaxLink questionMarkJexlHelp = JexlHelpUtil.getAjaxLink(jexlHelp, \"questionMarkJexlHelp\");\n+        final AjaxLink<Void> questionMarkJexlHelp = JexlHelpUtil.getAjaxLink(jexlHelp, \"questionMarkJexlHelp\");\n         schemaForm.add(questionMarkJexlHelp);\n \n-\n         name.setEnabled(createFlag);\n \n         final AjaxButton submit = new IndicatingAjaxButton(APPLY, new ResourceModel(SUBMIT)) {","previous_filename":"console/src/main/java/org/apache/syncope/console/pages/DerivedSchemaModalPage.java"},{"sha":"3daaad56a677a9b4966d42d16a5d4a895f8c9b00","filename":"console/src/main/java/org/apache/syncope/console/pages/ErrorPage.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import org.apache.wicket.Page;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n import org.apache.wicket.model.Model;\n@@ -30,12 +31,13 @@ public class ErrorPage extends BasePage {\n \n     private static final long serialVersionUID = -390761262038796657L;\n \n+    @SuppressWarnings(\"unchecked\")\n     public ErrorPage(final PageParameters parameters) {\n         super(parameters);\n \n         add(new Label(\"errorTitle\", new Model<String>(parameters.get(\"errorTitle\").toString())));\n         add(new Label(\"errorMessage\", new Model<String>(parameters.get(\"errorMessage\").toString())));\n \n-        add(new BookmarkablePageLink(\"home\", getApplication().getHomePage()));\n+        add(new BookmarkablePageLink<Page>(\"home\", getApplication().getHomePage()));\n     }\n }"},{"sha":"570f0c4775dcdf031dc9219d22e21aee5ac9a65c","filename":"console/src/main/java/org/apache/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -42,11 +42,11 @@ public class MembershipModalPage extends BaseModalPage {\n     public MembershipModalPage(final PageReference pageRef, final ModalWindow window, final MembershipTO membershipTO,\n             final boolean templateMode) {\n \n-        final Form form = new Form(\"MembershipForm\");\n+        final Form<MembershipTO> form = new Form<MembershipTO>(\"MembershipForm\");\n \n         final UserTO userTO = ((UserModalPage) pageRef.getPage()).getUserTO();\n \n-        form.setModel(new CompoundPropertyModel(membershipTO));\n+        form.setModel(new CompoundPropertyModel<MembershipTO>(membershipTO));\n \n         submit = new AjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {\n "},{"sha":"4ae5bbeb7a52ff75c811f0abdca8f36d0cd6c718","filename":"console/src/main/java/org/apache/syncope/console/pages/ReportModalPage.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -108,10 +108,11 @@ public class ReportModalPage extends BaseModalPage {\n     private ListChoice<AbstractReportletConf> reportlets;\n \n     public ReportModalPage(final ModalWindow window, final ReportTO reportTO, final PageReference callerPageRef) {\n+        super();\n         this.reportTO = reportTO;\n \n         form = new Form<ReportTO>(FORM);\n-        form.setModel(new CompoundPropertyModel(reportTO));\n+        form.setModel(new CompoundPropertyModel<ReportTO>(reportTO));\n         add(form);\n \n         setupProfile();\n@@ -128,16 +129,16 @@ public ReportModalPage(final ModalWindow window, final ReportTO reportTO, final\n \n                     @Override\n                     protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                        ReportTO reportTO = (ReportTO) form.getModelObject();\n-                        reportTO.setCronExpression(StringUtils.hasText(reportTO.getCronExpression())\n+                        ReportTO toSubmit = (ReportTO) form.getModelObject();\n+                        toSubmit.setCronExpression(StringUtils.hasText(toSubmit.getCronExpression())\n                                 ? crontab.getCronExpression()\n                                 : null);\n \n                         try {\n-                            if (reportTO.getId() > 0) {\n-                                reportRestClient.update(reportTO);\n+                            if (toSubmit.getId() > 0) {\n+                                reportRestClient.update(toSubmit);\n                             } else {\n-                                reportRestClient.create(reportTO);\n+                                reportRestClient.create(toSubmit);\n                             }\n \n                             ((BasePage) callerPageRef.getPage()).setModalResult(true);\n@@ -157,11 +158,11 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 };\n \n         if (reportTO.getId() > 0) {\n-            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getAllAllowedRoles(\"Reports\",\n-                    \"update\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Reports\", \"update\"));\n         } else {\n-            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getAllAllowedRoles(\"Reports\",\n-                    \"create\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n+                    xmlRolesReader.getAllAllowedRoles(\"Reports\", \"create\"));\n         }\n \n         form.add(submit);\n@@ -243,8 +244,8 @@ public void onClose(final AjaxRequestTarget target) {\n         nextExec.setEnabled(false);\n         profile.add(nextExec);\n \n-        reportlets = new ListChoice<AbstractReportletConf>(\"reportletConfs\", new Model(), reportTO.getReportletConfs(),\n-                new IChoiceRenderer<ReportletConf>() {\n+        reportlets = new ListChoice<AbstractReportletConf>(\"reportletConfs\", new Model<AbstractReportletConf>(),\n+                reportTO.getReportletConfs(), new IChoiceRenderer<ReportletConf>() {\n \n                     private static final long serialVersionUID = 1048000918946220007L;\n \n@@ -254,15 +255,15 @@ public Object getDisplayValue(final ReportletConf object) {\n                     }\n \n                     @Override\n-                    public String getIdValue(final ReportletConf object, int index) {\n+                    public String getIdValue(final ReportletConf object, final int index) {\n                         return object.getName();\n                     }\n                 }) {\n \n                     private static final long serialVersionUID = 4022366881854379834L;\n \n                     @Override\n-                    protected CharSequence getDefaultChoice(String selectedValue) {\n+                    protected CharSequence getDefaultChoice(final String selectedValue) {\n                         return null;\n                     }\n                 };\n@@ -274,12 +275,12 @@ protected CharSequence getDefaultChoice(String selectedValue) {\n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n-            protected void onUpdate(AjaxRequestTarget target) {\n+            protected void onUpdate(final AjaxRequestTarget target) {\n                 target.add(reportlets);\n             }\n         });\n \n-        profile.add(new AjaxLink(ADD_BUTTON_ID) {\n+        profile.add(new AjaxLink<Void>(ADD_BUTTON_ID) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -301,13 +302,12 @@ public Page createPage() {\n             }\n         });\n \n-        profile.add(new AjaxLink(EDIT_BUTTON_ID) {\n+        profile.add(new AjaxLink<Void>(EDIT_BUTTON_ID) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-\n                 if (reportlets.getModelObject() != null) {\n                     reportletConfWin.setPageCreator(new ModalWindow.PageCreator() {\n \n@@ -322,13 +322,11 @@ public Page createPage() {\n                         }\n                     });\n                     reportletConfWin.show(target);\n-                } else {\n-                    target.appendJavaScript(\"alert('\" + getString(\"selectItem\") + \"')\");\n                 }\n             }\n         });\n \n-        profile.add(new AjaxLink(REMOVE_BUTTON_ID) {\n+        profile.add(new AjaxLink<Void>(REMOVE_BUTTON_ID) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -341,7 +339,6 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n-\n                 if (reportlets.getModelObject() != null) {\n \n                     super.updateAjaxAttributes(attributes);\n@@ -360,7 +357,7 @@ public CharSequence getPrecondition(final Component component) {\n             }\n         });\n \n-        profile.add(new AjaxLink(UP_BUTTON_ID) {\n+        profile.add(new AjaxLink<Void>(UP_BUTTON_ID) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -373,7 +370,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        profile.add(new AjaxLink(DOWN_BUTTON_ID) {\n+        profile.add(new AjaxLink<Void>(DOWN_BUTTON_ID) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -405,6 +402,7 @@ private void moveDown(final AbstractReportletConf item) {\n         }\n     }\n \n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     private void setupExecutions() {\n         final WebMarkupContainer executions = new WebMarkupContainer(\"executionContainer\");\n         executions.setOutputMarkupId(true);\n@@ -562,11 +560,12 @@ private static class ReportExecutionsProvider extends SortableDataProvider<Repor\n \n         private static final long serialVersionUID = 2118096121691420539L;\n \n-        private SortableDataProviderComparator<ReportExecTO> comparator;\n+        private final SortableDataProviderComparator<ReportExecTO> comparator;\n \n-        private ReportTO reportTO;\n+        private final ReportTO reportTO;\n \n         public ReportExecutionsProvider(final ReportTO reportTO) {\n+            super();\n             this.reportTO = reportTO;\n             setSort(\"startDate\", SortOrder.DESCENDING);\n             comparator = new SortableDataProviderComparator<ReportExecTO>(this);\n@@ -613,6 +612,7 @@ private class AjaxExportDownloadBehavior extends AbstractAjaxDownloadBehavior {\n         private HttpResourceStream stream;\n \n         public AjaxExportDownloadBehavior(final ReportExecExportFormat exportFormat, final long exportExecId) {\n+            super();\n             this.exportFormat = exportFormat;\n             this.exportExecId = exportExecId;\n         }"},{"sha":"f11bdac3aa08e93f3ebef549f4974309b5d72b88","filename":"console/src/main/java/org/apache/syncope/console/pages/ReportletConfModalPage.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -42,7 +42,7 @@\n import org.apache.syncope.console.wicket.markup.html.form.CheckBoxMultipleChoiceFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n@@ -95,7 +95,7 @@ public ReportletConfModalPage(final AbstractReportletConf reportletConf, final M\n         form.add(propertiesContainer);\n \n         name = new AjaxTextFieldPanel(\"name\", \"name\", this.reportletConf == null\n-                ? new Model()\n+                ? new Model<String>()\n                 : new PropertyModel<String>(this.reportletConf, \"name\"));\n         name.setOutputMarkupId(true);\n         name.addRequiredLabel();\n@@ -196,6 +196,7 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n         form.add(cancel);\n     }\n \n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     private FieldPanel buildSinglePanel(final Class<?> type, final String fieldName, final String id) {\n         FieldPanel result = null;\n         PropertyModel model = new PropertyModel(ReportletConfModalPage.this.reportletConf, fieldName);\n@@ -242,6 +243,7 @@ protected List<String> load() {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n+            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n             @Override\n             protected void populateItem(final ListItem<String> item) {\n                 final String fieldName = item.getModelObject();\n@@ -339,7 +341,7 @@ protected void populateItem(final ListItem<String> item) {\n                             ((List) wrapper.getPropertyValue(fieldName)).add(null);\n                         }\n \n-                        panel = new MultiValueSelectorPanel(\"value\", new PropertyModel<List>(\n+                        panel = new MultiFieldPanel(\"value\", new PropertyModel<List>(\n                                 ReportletConfModalPage.this.reportletConf, fieldName),\n                                 buildSinglePanel(field.getType(), fieldName, \"panel\"));\n                     }"},{"sha":"b6ad887fdaaefd2f1b7154720edd5f9ac4cc7539","filename":"console/src/main/java/org/apache/syncope/console/pages/Reports.java","status":"modified","additions":18,"deletions":15,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -105,24 +105,24 @@ public Reports(final PageParameters parameters) {\n         setupAudit();\n     }\n \n-    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private void setupReport() {\n         reportContainer = new WebMarkupContainer(\"reportContainer\");\n         setWindowClosedCallback(window, reportContainer);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(reportContainer, RENDER, xmlRolesReader.getAllAllowedRoles(\n-                \"Reports\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(reportContainer, RENDER,\n+                xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\"));\n \n         paginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_REPORT_PAGINATOR_ROWS);\n \n-        List<IColumn> columns = new ArrayList<IColumn>();\n-        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"name\"), \"name\", \"name\"));\n-        columns.add(new DatePropertyColumn(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n-        columns.add(new DatePropertyColumn(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n-        columns.add(new DatePropertyColumn(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n-        columns.add(new DatePropertyColumn(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+        List<IColumn<ReportTO, String>> columns = new ArrayList<IColumn<ReportTO, String>>();\n+        columns.add(new PropertyColumn<ReportTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<ReportTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new DatePropertyColumn<ReportTO>(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n+        columns.add(new DatePropertyColumn<ReportTO>(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n+        columns.add(new DatePropertyColumn<ReportTO>(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n+        columns.add(new DatePropertyColumn<ReportTO>(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n+        columns.add(new PropertyColumn<ReportTO, String>(\n+                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n         columns.add(new ActionColumn<ReportTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n@@ -213,19 +213,22 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable reportTable =\n-                new AjaxFallbackDefaultDataTable(\"reportTable\", columns, new ReportProvider(), paginatorRows);\n+        final AjaxFallbackDefaultDataTable<ReportTO, String> reportTable =\n+                new AjaxFallbackDefaultDataTable<ReportTO, String>(\n+                        \"reportTable\", columns, new ReportProvider(), paginatorRows);\n \n         reportContainer.add(reportTable);\n         reportContainer.setOutputMarkupId(true);\n \n         add(reportContainer);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form paginatorForm = new Form(\"paginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(paginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\"Reports\",\n-                \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(paginatorForm, RENDER,\n+                xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\"));\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n "},{"sha":"c7067867155a7bba57decedb85852bd770c786d6","filename":"console/src/main/java/org/apache/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -47,6 +47,7 @@ public class ResourceModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n \n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public ResourceModalPage(final PageReference pageRef, final ModalWindow window, final ResourceTO resourceTO,\n             final boolean createFlag) {\n "},{"sha":"61dc314b158fb2e5c643f4ecb7b5af4694faba16","filename":"console/src/main/java/org/apache/syncope/console/pages/Resources.java","status":"modified","additions":24,"deletions":18,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -394,8 +394,10 @@ public Page createPage() {\n \n         add(createResourceLink);\n \n+        @SuppressWarnings(\"rawtypes\")\n         final Form paginatorForm = new Form(\"resourcePaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n                 \"resourcePaginatorRows\"), prefMan.getPaginatorChoices());\n \n@@ -525,33 +527,35 @@ public void onClick(final AjaxRequestTarget target) {\n         editConnectorWin.setInitialWidth(WIN_WIDTH);\n         editConnectorWin.setCookieName(\"edit-conn-modal\");\n \n-        AjaxLink createConnectorLink = new ClearIndicatingAjaxLink(\"createConnectorLink\", getPageReference()) {\n+        AjaxLink<Void> createConnectorLink =\n+                new ClearIndicatingAjaxLink<Void>(\"createConnectorLink\", getPageReference()) {\n \n-            private static final long serialVersionUID = -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-            @Override\n-            protected void onClickInternal(final AjaxRequestTarget target) {\n-                createConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        createConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    private static final long serialVersionUID = -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                    @Override\n-                    public Page createPage() {\n-                        ConnectorModalPage form = new ConnectorModalPage(Resources.this.getPageReference(),\n-                                editConnectorWin, new ConnInstanceTO());\n-                        return form;\n-                    }\n-                });\n+                            @Override\n+                            public Page createPage() {\n+                                ConnectorModalPage form = new ConnectorModalPage(Resources.this.getPageReference(),\n+                                        editConnectorWin, new ConnInstanceTO());\n+                                return form;\n+                            }\n+                        });\n \n-                createConnectorWin.show(target);\n-            }\n-        };\n+                        createConnectorWin.show(target);\n+                    }\n+                };\n \n         MetaDataRoleAuthorizationStrategy.authorize(createConnectorLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n                 \"Connectors\", \"create\"));\n \n         add(createConnectorLink);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form paginatorForm = new Form(\"connectorPaginatorForm\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(paginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\n@@ -585,9 +589,10 @@ class ResourcesProvider extends SortableDataProvider<ResourceTO, String> {\n \n         private static final long serialVersionUID = -9055916672926643975L;\n \n-        private SortableDataProviderComparator<ResourceTO> comparator;\n+        private final SortableDataProviderComparator<ResourceTO> comparator;\n \n         public ResourcesProvider() {\n+            super();\n             //Default sorting\n             setSort(\"name\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<ResourceTO>(this);\n@@ -629,9 +634,10 @@ private class ConnectorsProvider extends SortableDataProvider<ConnInstanceTO, St\n \n         private static final long serialVersionUID = 4445909568349448518L;\n \n-        private SortableDataProviderComparator<ConnInstanceTO> comparator;\n+        private final SortableDataProviderComparator<ConnInstanceTO> comparator;\n \n         public ConnectorsProvider() {\n+            super();\n             //Default sorting\n             setSort(\"id\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<ConnInstanceTO>(this);"},{"sha":"21c830a697c958c142fa52f5e867cda395dd264d","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":10,"deletions":16,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -260,7 +260,7 @@ public void onClick(final AjaxRequestTarget target) {\n      * @param propTO propagation TO.\n      * @return list view.\n      */\n-    private ListView getConnObjectView(final PropagationStatus propTO) {\n+    private ListView<String> getConnObjectView(final PropagationStatus propTO) {\n         final ConnObjectTO before = propTO.getBeforeObj();\n         final ConnObjectTO after = propTO.getAfterObj();\n \n@@ -273,19 +273,13 @@ private ListView getConnObjectView(final PropagationStatus propTO) {\n         head.add(ConnIdSpecialAttributeName.UID);\n         head.add(ConnIdSpecialAttributeName.NAME);\n \n-        final Map<String, AttributeTO> beforeAttrMap;\n-        if (before == null) {\n-            beforeAttrMap = Collections.<String, AttributeTO>emptyMap();\n-        } else {\n-            beforeAttrMap = before.getAttrMap();\n-        }\n+        final Map<String, AttributeTO> beforeAttrMap = before == null\n+                ? Collections.<String, AttributeTO>emptyMap()\n+                : before.getAttrMap();\n \n-        final Map<String, AttributeTO> afterAttrMap;\n-        if (after == null) {\n-            afterAttrMap = Collections.<String, AttributeTO>emptyMap();\n-        } else {\n-            afterAttrMap = after.getAttrMap();\n-        }\n+        final Map<String, AttributeTO> afterAttrMap = after == null\n+                ? Collections.<String, AttributeTO>emptyMap()\n+                : after.getAttrMap();\n \n         final Set<String> attributes = new HashSet<String>();\n         attributes.addAll(beforeAttrMap.keySet());\n@@ -307,13 +301,13 @@ private ListView getConnObjectView(final PropagationStatus propTO) {\n             }\n         }\n \n-        return new ListView(\"attrs\", profile) {\n+        return new ListView<String>(\"attrs\", profile) {\n \n             private static final long serialVersionUID = 4949588177564901031L;\n \n             @Override\n-            protected void populateItem(final ListItem item) {\n-                String name = item.getModelObject().toString();\n+            protected void populateItem(final ListItem<String> item) {\n+                String name = item.getModelObject();\n \n                 final Fragment beforeValue;\n                 final Fragment afterValue;"},{"sha":"ef4c9e602c3b3b591560f38f18a071e093610e3b","filename":"console/src/main/java/org/apache/syncope/console/pages/Schema.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -30,6 +30,7 @@\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.AbstractSchemaTO;\n+import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.console.commons.Constants;"},{"sha":"d7dc325dd7b178bbbcf1cfe4227aa89b4bd8bb6f","filename":"console/src/main/java/org/apache/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":44,"deletions":46,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,14 +18,12 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.AbstractBaseBean;\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -36,7 +34,7 @@\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -60,7 +58,7 @@\n /**\n  * Modal window with Schema form.\n  */\n-public class SchemaModalPage extends AbstractSchemaModalPage {\n+public class SchemaModalPage extends AbstractSchemaModalPage<SchemaTO> {\n \n     private static final long serialVersionUID = -5991561277287424057L;\n \n@@ -70,18 +68,15 @@ public SchemaModalPage(final AttributableType kind) {\n \n     @Override\n     public void setSchemaModalPage(final PageReference pageRef, final ModalWindow window,\n-            AbstractBaseBean schemaTO, final boolean createFlag) {\n+            final SchemaTO schemaTO, final boolean createFlag) {\n \n-        final SchemaTO schema;\n-        if (schemaTO != null && schemaTO instanceof SchemaTO) {\n-            schema = (SchemaTO) schemaTO;\n-        } else {\n-            schema = new SchemaTO();\n-        }\n+        final SchemaTO schema = schemaTO == null\n+                ? new SchemaTO()\n+                : schemaTO;\n \n-        final Form schemaForm = new Form(FORM);\n+        final Form<SchemaTO> schemaForm = new Form<SchemaTO>(FORM);\n \n-        schemaForm.setModel(new CompoundPropertyModel(schema));\n+        schemaForm.setModel(new CompoundPropertyModel<SchemaTO>(schema));\n         schemaForm.setOutputMarkupId(Boolean.TRUE);\n \n         final AjaxTextFieldPanel name =\n@@ -104,33 +99,35 @@ protected List<String> load() {\n         };\n \n         final AjaxDropDownChoicePanel<String> validatorClass = new AjaxDropDownChoicePanel<String>(\"validatorClass\",\n-                getString(\"validatorClass\"), new PropertyModel(schema, \"validatorClass\"));\n+                getString(\"validatorClass\"), new PropertyModel<String>(schema, \"validatorClass\"));\n \n         ((DropDownChoice) validatorClass.getField()).setNullValid(true);\n         validatorClass.setChoices(validatorsList.getObject());\n \n         final AjaxDropDownChoicePanel<AttributeSchemaType> type = new AjaxDropDownChoicePanel<AttributeSchemaType>(\n-                \"type\", getString(\"type\"), new PropertyModel(schema, \"type\"));\n+                \"type\", getString(\"type\"), new PropertyModel<AttributeSchemaType>(schema, \"type\"));\n         type.setChoices(Arrays.asList(AttributeSchemaType.values()));\n         type.addRequiredLabel();\n \n         final AjaxTextFieldPanel enumerationValuesPanel =\n                 new AjaxTextFieldPanel(\"panel\", \"enumerationValues\", new Model<String>(null));\n-        final MultiValueSelectorPanel<String> enumerationValues =\n-                new MultiValueSelectorPanel<String>(\"enumerationValues\",\n-                new Model(),\n-                enumerationValuesPanel);\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        final MultiFieldPanel<String> enumerationValues =\n+                new MultiFieldPanel<String>(\"enumerationValues\",\n+                        new Model(),\n+                        enumerationValuesPanel);\n         schemaForm.add(enumerationValues);\n \n-        enumerationValues.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationValues()));\n+        enumerationValues.setModelObject(getEnumValuesAsList(schema.getEnumerationValues()));\n \n-        final MultiValueSelectorPanel<String> enumerationKeys =\n-                new MultiValueSelectorPanel<String>(\"enumerationKeys\",\n-                new Model(),\n-                new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model<String>(null)));\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        final MultiFieldPanel<String> enumerationKeys =\n+                new MultiFieldPanel<String>(\"enumerationKeys\",\n+                        new Model(),\n+                        new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model<String>(null)));\n         schemaForm.add(enumerationKeys);\n \n-        enumerationKeys.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationKeys()));\n+        enumerationKeys.setModelObject(getEnumValuesAsList(schema.getEnumerationKeys()));\n \n         if (AttributeSchemaType.Enum == schema.getType()) {\n             enumerationValues.setEnabled(Boolean.TRUE);\n@@ -152,10 +149,10 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         enumerationValuesPanel.addRequiredLabel();\n                     }\n                     enumerationValues.setEnabled(Boolean.TRUE);\n-                    enumerationValues.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationValues()));\n+                    enumerationValues.setModelObject(getEnumValuesAsList(schema.getEnumerationValues()));\n \n                     enumerationKeys.setEnabled(Boolean.TRUE);\n-                    enumerationKeys.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationKeys()));\n+                    enumerationKeys.setModelObject(getEnumValuesAsList(schema.getEnumerationKeys()));\n                 } else {\n                     if (enumerationValuesPanel.isRequired()) {\n                         enumerationValuesPanel.removeRequiredLabel();\n@@ -164,41 +161,42 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     values.add(\"\");\n \n                     enumerationValues.setEnabled(Boolean.FALSE);\n-                    enumerationValues.setModelObject((Serializable) values);\n+                    enumerationValues.setModelObject(values);\n \n                     final List<String> keys = new ArrayList<String>();\n                     keys.add(\"\");\n \n                     enumerationKeys.setEnabled(Boolean.FALSE);\n-                    enumerationKeys.setModelObject((Serializable) keys);\n+                    enumerationKeys.setModelObject(keys);\n                 }\n \n                 target.add(schemaForm);\n             }\n         });\n \n-        final AutoCompleteTextField mandatoryCondition = new AutoCompleteTextField(\"mandatoryCondition\") {\n+        final AutoCompleteTextField<String> mandatoryCondition =\n+                new AutoCompleteTextField<String>(\"mandatoryCondition\") {\n \n-            private static final long serialVersionUID = -2428903969518079100L;\n+                    private static final long serialVersionUID = -2428903969518079100L;\n \n-            @Override\n-            protected Iterator<String> getChoices(String input) {\n-                List<String> choices = new ArrayList<String>();\n+                    @Override\n+                    protected Iterator<String> getChoices(final String input) {\n+                        List<String> choices = new ArrayList<String>();\n \n-                if (Strings.isEmpty(input)) {\n-                    choices = Collections.emptyList();\n-                    return choices.iterator();\n-                }\n+                        if (Strings.isEmpty(input)) {\n+                            choices = Collections.emptyList();\n+                            return choices.iterator();\n+                        }\n \n-                if (\"true\".startsWith(input.toLowerCase())) {\n-                    choices.add(\"true\");\n-                } else if (\"false\".startsWith(input.toLowerCase())) {\n-                    choices.add(\"false\");\n-                }\n+                        if (\"true\".startsWith(input.toLowerCase())) {\n+                            choices.add(\"true\");\n+                        } else if (\"false\".startsWith(input.toLowerCase())) {\n+                            choices.add(\"false\");\n+                        }\n \n-                return choices.iterator();\n-            }\n-        };\n+                        return choices.iterator();\n+                    }\n+                };\n \n         mandatoryCondition.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n "},{"sha":"f565828ac22b5a122cb5d95f816f1ad0557e2394","filename":"console/src/main/java/org/apache/syncope/console/pages/SyncTaskModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -59,7 +59,7 @@ protected List<String> load() {\n         };\n \n         final AjaxDropDownChoicePanel<String> resource = new AjaxDropDownChoicePanel<String>(\"resource\",\n-                getString(\"resourceName\"), new PropertyModel(taskTO, \"resource\"));\n+                getString(\"resourceName\"), new PropertyModel<String>(taskTO, \"resource\"));\n         resource.setChoices(allResources.getObject());\n         resource.setChoiceRenderer(new SelectChoiceRenderer());\n         resource.addRequiredLabel();\n@@ -69,7 +69,7 @@ protected List<String> load() {\n         profile.add(resource);\n \n         final AjaxDropDownChoicePanel<String> actionsClassName = new AjaxDropDownChoicePanel<String>(\n-                \"actionsClassName\", getString(\"actionsClass\"), new PropertyModel(taskTO, \"actionsClassName\"));\n+                \"actionsClassName\", getString(\"actionsClass\"), new PropertyModel<String>(taskTO, \"actionsClassName\"));\n         actionsClassName.setChoices(taskRestClient.getSyncActionsClasses());\n         actionsClassName.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n         profile.add(actionsClassName);"},{"sha":"c3612fa058c3cbf8e4f8e9f02d82cd7623b7a7cc","filename":"console/src/main/java/org/apache/syncope/console/pages/Todo.java","status":"modified","additions":29,"deletions":21,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -62,15 +62,15 @@ public class Todo extends BasePage {\n     @SpringBean\n     private ApprovalRestClient restClient;\n \n+    @SpringBean\n+    private PreferenceManager prefMan;\n+\n     private final ModalWindow window;\n \n     private static final int WIN_HEIGHT = 400;\n \n     private static final int WIN_WIDTH = 600;\n \n-    @SpringBean\n-    private PreferenceManager prefMan;\n-\n     private WebMarkupContainer container;\n \n     private int paginatorRows;\n@@ -87,13 +87,18 @@ public Todo(final PageParameters parameters) {\n \n         paginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_TODO_PAGINATOR_ROWS);\n \n-        List<IColumn> columns = new ArrayList<IColumn>();\n-        columns.add(new PropertyColumn(new ResourceModel(\"taskId\"), \"taskId\", \"taskId\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"key\"), \"key\", \"key\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"description\"), \"description\", \"description\"));\n-        columns.add(new DatePropertyColumn(new ResourceModel(\"createTime\"), \"createTime\", \"createTime\"));\n-        columns.add(new DatePropertyColumn(new ResourceModel(\"dueDate\"), \"dueDate\", \"dueDate\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n+        List<IColumn<WorkflowFormTO, String>> columns = new ArrayList<IColumn<WorkflowFormTO, String>>();\n+        columns.add(new PropertyColumn<WorkflowFormTO, String>(\n+                new ResourceModel(\"taskId\"), \"taskId\", \"taskId\"));\n+        columns.add(new PropertyColumn<WorkflowFormTO, String>(\n+                new ResourceModel(\"key\"), \"key\", \"key\"));\n+        columns.add(new PropertyColumn<WorkflowFormTO, String>(\n+                new ResourceModel(\"description\"), \"description\", \"description\"));\n+        columns.add(new DatePropertyColumn<WorkflowFormTO>(\n+                new ResourceModel(\"createTime\"), \"createTime\", \"createTime\"));\n+        columns.add(new DatePropertyColumn<WorkflowFormTO>(\n+                new ResourceModel(\"dueDate\"), \"dueDate\", \"dueDate\"));\n+        columns.add(new PropertyColumn<WorkflowFormTO, String>(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n         columns.add(new AbstractColumn<WorkflowFormTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n@@ -153,30 +158,32 @@ public Page createPage() {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable approvalTable = new AjaxFallbackDefaultDataTable(\"approvalTable\", columns,\n-                new ApprovalProvider(), paginatorRows);\n-\n+        final AjaxFallbackDefaultDataTable<WorkflowFormTO, String> approvalTable =\n+                new AjaxFallbackDefaultDataTable<WorkflowFormTO, String>(\n+                        \"approvalTable\", columns, new ApprovalProvider(), paginatorRows);\n         container.add(approvalTable);\n-        container.setOutputMarkupId(true);\n \n+        container.setOutputMarkupId(true);\n         add(container);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form approvalPaginatorForm = new Form(\"paginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(approvalPaginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\n-                \"Approval\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(approvalPaginatorForm, RENDER,\n+                xmlRolesReader.getAllAllowedRoles(\"Approval\", \"list\"));\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n-                \"paginatorRows\"), prefMan.getPaginatorChoices());\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n+                new PropertyModel(this, \"paginatorRows\"), prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_TODO_PAGINATOR_ROWS, String.valueOf(\n-                        paginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_TODO_PAGINATOR_ROWS,\n+                        String.valueOf(paginatorRows));\n                 approvalTable.setItemsPerPage(paginatorRows);\n \n                 target.add(container);\n@@ -198,9 +205,10 @@ private class ApprovalProvider extends SortableDataProvider<WorkflowFormTO, Stri\n \n         private static final long serialVersionUID = -2311716167583335852L;\n \n-        private SortableDataProviderComparator<WorkflowFormTO> comparator;\n+        private final SortableDataProviderComparator<WorkflowFormTO> comparator;\n \n         public ApprovalProvider() {\n+            super();\n             //Default sorting\n             setSort(\"key\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<WorkflowFormTO>(this);"},{"sha":"f9a71752a77ef94ed1b432ea197ca0ccba179ab9","filename":"console/src/main/java/org/apache/syncope/console/pages/UserModalPage.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -90,6 +90,7 @@ public void setUserTO(final UserTO userTO) {\n         this.userTO = userTO;\n     }\n \n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     protected Form setupEditPanel() {\n         fragment.add(new Label(\"id\", userTO.getId() == 0\n                 ? \"\"\n@@ -206,7 +207,9 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         };\n     }\n \n-    protected abstract void submitAction(final AjaxRequestTarget target, final Form form);\n+    @SuppressWarnings(\"rawtypes\")\n+    protected abstract void submitAction(AjaxRequestTarget target, Form form);\n \n-    protected abstract void closeAction(final AjaxRequestTarget target, final Form form);\n+    @SuppressWarnings(\"rawtypes\")\n+    protected abstract void closeAction(AjaxRequestTarget target, Form form);\n }"},{"sha":"1182d67d400cc88e9c7ff4b11c9dd195b0935212","filename":"console/src/main/java/org/apache/syncope/console/pages/VirSchemaModalPage.java","status":"renamed","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import org.apache.syncope.common.AbstractBaseBean;\n import org.apache.syncope.common.to.VirSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.SyncopeClientException;\n@@ -39,25 +38,25 @@\n /**\n  * Modal window with Schema form.\n  */\n-public class VirtualSchemaModalPage extends AbstractSchemaModalPage {\n+public class VirSchemaModalPage extends AbstractSchemaModalPage<VirSchemaTO> {\n \n     private static final long serialVersionUID = 5979623248182851337L;\n \n-    public VirtualSchemaModalPage(final AttributableType kind) {\n+    public VirSchemaModalPage(final AttributableType kind) {\n         super(kind);\n     }\n \n     @Override\n     public void setSchemaModalPage(final PageReference pageRef, final ModalWindow window,\n-            AbstractBaseBean schema, final boolean createFlag) {\n+            VirSchemaTO schema, final boolean createFlag) {\n \n         if (schema == null) {\n             schema = new VirSchemaTO();\n         }\n \n-        final Form<AbstractBaseBean> schemaForm = new Form<AbstractBaseBean>(FORM);\n+        final Form<VirSchemaTO> schemaForm = new Form<VirSchemaTO>(FORM);\n \n-        schemaForm.setModel(new CompoundPropertyModel<AbstractBaseBean>(schema));\n+        schemaForm.setModel(new CompoundPropertyModel<VirSchemaTO>(schema));\n \n         final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(\n                 schema, \"name\"));\n@@ -73,7 +72,7 @@ public void setSchemaModalPage(final PageReference pageRef, final ModalWindow wi\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 VirSchemaTO schemaTO = (VirSchemaTO) form.getDefaultModelObject();\n                 try {\n                     if (createFlag) {","previous_filename":"console/src/main/java/org/apache/syncope/console/pages/VirtualSchemaModalPage.java"},{"sha":"7b73bc32db001e8abcb62eb17d108f8650178270","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AccountInformationPanel.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.console.SyncopeSession;\n@@ -34,36 +35,39 @@ public <T extends AbstractAttributableTO> AccountInformationPanel(final String i\n         // ------------------------\n         // Change password date\n         // ------------------------\n-        add(new Label(\"changePwdDate\", new Model(userTO.getChangePwdDate() != null\n-                ? SyncopeSession.get().getDateFormat().format(userTO.getChangePwdDate()) : \"\")));\n+        add(new Label(\"changePwdDate\", new Model<String>(userTO.getChangePwdDate() == null\n+                ? StringUtils.EMPTY\n+                : SyncopeSession.get().getDateFormat().format(userTO.getChangePwdDate()))));\n         // ------------------------\n \n         // ------------------------\n         // Last login date\n         // ------------------------\n-        add(new Label(\"lastLoginDate\", new Model(userTO.getLastLoginDate() != null\n-                ? SyncopeSession.get().getDateFormat().format(userTO.getLastLoginDate()) : \"\")));\n+        add(new Label(\"lastLoginDate\", new Model<String>(userTO.getLastLoginDate() == null\n+                ? StringUtils.EMPTY\n+                : SyncopeSession.get().getDateFormat().format(userTO.getLastLoginDate()))));\n         // ------------------------\n \n         // ------------------------\n         // Failed logins\n         // ------------------------\n-        add(new Label(\"failedLogins\", new Model(userTO.getFailedLogins() != null\n-                ? userTO.getFailedLogins() : \"\")));\n+        add(new Label(\"failedLogins\", new Model<Integer>(userTO.getFailedLogins())));\n         // ------------------------\n \n         // ------------------------\n         // Token\n         // ------------------------\n-        add(new Label(\"token\", new Model(userTO.getToken() != null\n-                ? userTO.getToken() : \"\")));\n+        add(new Label(\"token\", new Model<String>(userTO.getToken() == null\n+                ? StringUtils.EMPTY\n+                : userTO.getToken())));\n         // ------------------------\n \n         // ------------------------\n         // Token expire time\n         // ------------------------\n-        add(new Label(\"tokenExpireTime\", new Model(userTO.getTokenExpireTime() != null\n-                ? userTO.getTokenExpireTime() : \"\")));\n+        add(new Label(\"tokenExpireTime\", new Model<String>(userTO.getTokenExpireTime() == null\n+                ? StringUtils.EMPTY\n+                : SyncopeSession.get().getDateFormat().format(userTO.getTokenExpireTime()))));\n         // ------------------------\n     }\n }"},{"sha":"87bdbf07257ae7be99a631c4c19f659c1812b695","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":21,"deletions":2,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -48,7 +48,8 @@\n import org.apache.syncope.console.wicket.markup.html.form.DateTextFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -104,6 +105,7 @@ public <T extends AbstractAttributableTO> AttributesPanel(final String id, final\n                     private static final long serialVersionUID = 9101744072914090143L;\n \n                     @Override\n+                    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n                     protected void populateItem(final ListItem<AttributeTO> item) {\n                         final AttributeTO attributeTO = (AttributeTO) item.getDefaultModelObject();\n \n@@ -125,7 +127,7 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n                         if (templateMode || !schemas.get(attributeTO.getSchema()).isMultivalue()) {\n                             item.add(panel);\n                         } else {\n-                            item.add(new MultiValueSelectorPanel<String>(\n+                            item.add(new MultiFieldPanel<String>(\n                                             \"panel\", new PropertyModel<List<String>>(attributeTO, \"values\"), panel));\n                         }\n                     }\n@@ -263,9 +265,26 @@ public String getIdValue(final String value, final int i) {\n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n+                break;\n+                \n+            case Long:\n+                panel = new SpinnerFieldPanel<Long>(\"panel\", schemaTO.getName(),\n+                        Long.class, new Model<Long>(), null, null, false);\n \n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n                 break;\n \n+            case Double:\n+                panel = new SpinnerFieldPanel<Double>(\"panel\", schemaTO.getName(),\n+                        Double.class, new Model<Double>(), null, null, false);\n+\n+                if (required) {\n+                    panel.addRequiredLabel();\n+                }\n+                break;\n+                \n             default:\n                 panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getName(), new Model<String>());\n                 if (required) {"},{"sha":"e73755877790fec4f42bfdbabe17211a059702cb","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/NotificationTasks.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -210,8 +210,10 @@ public void onClose(final AjaxRequestTarget target) {\n         window.setInitialWidth(WIN_WIDTH);\n         window.setCookieName(VIEW_TASK_WIN_COOKIE_NAME);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n@@ -227,7 +229,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 table = Tasks.updateTaskTable(\n                         columns,\n                         new TasksProvider<NotificationTaskTO>(restClient, paginatorRows, getId(),\n-                        NotificationTaskTO.class),\n+                                NotificationTaskTO.class),\n                         container,\n                         table == null ? 0 : (int) table.getCurrentPage(),\n                         pageRef,"},{"sha":"6565482d50dab08aa75c6fcea07b8ebae9bf4561","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PoliciesPanel.java","status":"modified","additions":15,"deletions":12,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -92,7 +92,7 @@ public class PoliciesPanel extends Panel {\n \n     protected boolean modalResult = false;\n \n-    private PolicyType policyType;\n+    private final PolicyType policyType;\n \n     public PoliciesPanel(final String id, final PageReference pageRef, final PolicyType policyType) {\n         super(id);\n@@ -146,7 +146,7 @@ public String getCssClass() {\n             public void populateItem(final Item<ICellPopulator<AbstractPolicyTO>> cellItem, final String componentId,\n                     final IModel<AbstractPolicyTO> model) {\n \n-                final AbstractPolicyTO accountPolicyTO = model.getObject();\n+                final AbstractPolicyTO policyTO = model.getObject();\n \n                 final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, pageRef);\n \n@@ -161,9 +161,10 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             private static final long serialVersionUID = -7834632442532690940L;\n \n+                            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n                             @Override\n                             public Page createPage() {\n-                                return new PolicyModalPage(mwindow, accountPolicyTO);\n+                                return new PolicyModalPage(mwindow, policyTO);\n                             }\n                         });\n \n@@ -178,13 +179,13 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            policyRestClient.delete(accountPolicyTO.getId(), accountPolicyTO.getClass());\n+                            policyRestClient.delete(policyTO.getId(), policyTO.getClass());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException e) {\n                             error(getString(Constants.OPERATION_ERROR));\n \n-                            LOG.error(\"While deleting resource {}({})\",\n-                                    accountPolicyTO.getId(), accountPolicyTO.getDescription(), e);\n+                            LOG.error(\"While deleting policy {}({})\",\n+                                    policyTO.getId(), policyTO.getDescription(), e);\n                         }\n \n                         target.add(container);\n@@ -196,12 +197,13 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"datatable\", columns,\n                 new PolicyDataProvider(), paginatorRows);\n \n         container.add(table);\n \n-        final AjaxLink createButton = new ClearIndicatingAjaxLink(\"createLink\", pageRef) {\n+        final AjaxLink<Void> createButton = new ClearIndicatingAjaxLink<Void>(\"createLink\", pageRef) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -211,6 +213,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     private static final long serialVersionUID = -7834632442532690940L;\n \n+                    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n                     @Override\n                     public Page createPage() {\n                         return new PolicyModalPage(mwindow, getPolicyTOInstance(policyType));\n@@ -223,11 +226,13 @@ public Page createPage() {\n \n         add(createButton);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createButton, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Policies\",\n-                \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createButton, ENABLE,\n+                xmlRolesReader.getAllAllowedRoles(\"Policies\", \"create\"));\n \n+        @SuppressWarnings(\"rawtypes\")\n         final Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n@@ -250,7 +255,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     }\n \n     private void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n-\n         window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n             private static final long serialVersionUID = 8804221891699487139L;\n@@ -266,7 +270,7 @@ private class PolicyDataProvider extends SortableDataProvider<AbstractPolicyTO,\n \n         private static final long serialVersionUID = -6976327453925166730L;\n \n-        private SortableDataProviderComparator<AbstractPolicyTO> comparator;\n+        private final SortableDataProviderComparator<AbstractPolicyTO> comparator;\n \n         public PolicyDataProvider() {\n             super();\n@@ -284,7 +288,6 @@ public long size() {\n \n         @Override\n         public Iterator<AbstractPolicyTO> iterator(final long first, final long count) {\n-\n             final List<AbstractPolicyTO> policies = policyRestClient.getPolicies(policyType, true);\n \n             Collections.sort(policies, comparator);"},{"sha":"9aa800bac4165cf99b39176b820b5564d5ded74e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PolicyBeanPanel.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -39,7 +39,7 @@\n import org.apache.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -132,14 +132,13 @@ public PolicyBeanPanel(final String id, final AbstractPolicySpec policy) {\n             @Override\n             @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n             protected void populateItem(final ListItem<FieldWrapper> item) {\n-\n                 final FieldWrapper field = item.getModelObject();\n \n                 final PropertyDescriptor propDesc = BeanUtils.getPropertyDescriptor(policy.getClass(), field.getName());\n \n                 item.add(new Label(\"label\", new ResourceModel(field.getName())));\n \n-                final AbstractFieldPanel component;\n+                AbstractFieldPanel component;\n                 try {\n                     if (field.getClassList() != null) {\n                         component = new AjaxDropDownChoicePanel(\"field\", field.getName(), new PropertyModel(policy,\n@@ -212,7 +211,7 @@ protected void populateItem(final ListItem<FieldWrapper> item) {\n                                     new Model<String>(null));\n                             panel.setRequired(true);\n \n-                            component = new MultiValueSelectorPanel<String>(\"field\",\n+                            component = new MultiFieldPanel<String>(\"field\",\n                                     new PropertyModel(policy, field.getName()), panel);\n \n                             item.add(component);\n@@ -254,10 +253,10 @@ protected void populateItem(final ListItem<FieldWrapper> item) {\n         add(policies);\n     }\n \n-    private <T extends Serializable> AjaxCheckBoxPanel getActivationControl(final AbstractFieldPanel panel,\n+    private <T extends Serializable> AjaxCheckBoxPanel getActivationControl(final AbstractFieldPanel<T> panel,\n             final Boolean checked, final T defaultModelObject, final T reinitializedValue) {\n \n-        final AjaxCheckBoxPanel check = new AjaxCheckBoxPanel(\"check\", \"check\", new Model(checked));\n+        final AjaxCheckBoxPanel check = new AjaxCheckBoxPanel(\"check\", \"check\", new Model<Boolean>(checked));\n \n         panel.setEnabled(checked);\n "},{"sha":"37d1b41d7fde99e150eefde739f775555a63f805","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -229,8 +229,10 @@ public void onClose(final AjaxRequestTarget target) {\n         window.setInitialWidth(WIN_WIDTH);\n         window.setCookieName(VIEW_TASK_WIN_COOKIE_NAME);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\n                 \"rowsChooser\", new PropertyModel(this, \"paginatorRows\"), prefMan.getPaginatorChoices());\n \n@@ -246,7 +248,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 table = Tasks.updateTaskTable(\n                         columns,\n                         new TasksProvider<PropagationTaskTO>(restClient, paginatorRows,\n-                        getId(), PropagationTaskTO.class),\n+                                getId(), PropagationTaskTO.class),\n                         container,\n                         table == null ? 0 : (int) table.getCurrentPage(),\n                         pageRef,"},{"sha":"2195d296dc0adad8fc049762ef9d9e6fd74b98e7","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceConnConfPanel.java","status":"modified","additions":30,"deletions":14,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -34,8 +35,8 @@\n import org.apache.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel.MultiValueSelectorEvent;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel.MultiValueSelectorEvent;\n import org.apache.syncope.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -77,7 +78,6 @@ public class ResourceConnConfPanel extends Panel {\n \n     private ResourceTO resourceTO;\n \n-    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public ResourceConnConfPanel(final String id, final ResourceTO resourceTO, final boolean createFlag) {\n         super(id);\n         setOutputMarkupId(true);\n@@ -114,11 +114,12 @@ public void onClick(final AjaxRequestTarget target) {\n          * the list of overridable connector properties\n          */\n         connConfPropContainer.add(new AltListView<ConnConfProperty>(\"connectorProperties\",\n-                new PropertyModel(this, \"connConfProperties\")) {\n+                new PropertyModel<List<ConnConfProperty>>(this, \"connConfProperties\")) {\n \n                     private static final long serialVersionUID = 9101744072914090143L;\n \n                     @Override\n+                    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n                     protected void populateItem(final ListItem<ConnConfProperty> item) {\n                         final ConnConfProperty property = item.getModelObject();\n \n@@ -129,7 +130,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n \n                         item.add(label);\n \n-                        final FieldPanel field;\n+                        FieldPanel<? extends Serializable> field;\n \n                         boolean required = false;\n \n@@ -139,32 +140,33 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                         || Constants.GUARDED_BYTE_ARRAY.equalsIgnoreCase(property.getSchema().getType())) {\n \n                             field = new AjaxPasswordFieldPanel(\"panel\", label.getDefaultModelObjectAsString(),\n-                                    new Model());\n+                                    new Model<String>());\n                             ((PasswordTextField) field.getField()).setResetPassword(false);\n \n                             required = property.getSchema().isRequired();\n                         } else {\n                             Class<?> propertySchemaClass;\n-\n                             try {\n-                                propertySchemaClass = ClassUtils.forName(property.getSchema().getType(), ClassUtils.\n-                                        getDefaultClassLoader());\n+                                propertySchemaClass = ClassUtils.forName(property.getSchema().getType(),\n+                                        ClassUtils.getDefaultClassLoader());\n                             } catch (Exception e) {\n                                 LOG.error(\"Error parsing attribute type\", e);\n                                 propertySchemaClass = String.class;\n                             }\n \n                             if (ClassUtils.isAssignable(Number.class, propertySchemaClass)) {\n+                                @SuppressWarnings(\"unchecked\")\n+                                Class<Number> numberClass = (Class<Number>) propertySchemaClass;\n                                 field = new SpinnerFieldPanel<Number>(\"panel\", label.getDefaultModelObjectAsString(),\n-                                        (Class<Number>) propertySchemaClass, new Model<Number>(), null, null, false);\n+                                        numberClass, new Model<Number>(), null, null, false);\n \n                                 required = property.getSchema().isRequired();\n                             } else if (ClassUtils.isAssignable(Boolean.class, propertySchemaClass)) {\n                                 field = new AjaxCheckBoxPanel(\"panel\", label.getDefaultModelObjectAsString(),\n-                                        new Model());\n+                                        new Model<Boolean>());\n                             } else {\n                                 field = new AjaxTextFieldPanel(\"panel\", label.getDefaultModelObjectAsString(),\n-                                        new Model());\n+                                        new Model<String>());\n \n                                 required = property.getSchema().isRequired();\n                             }\n@@ -183,7 +185,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                                 property.getValues().add(null);\n                             }\n \n-                            final MultiValueSelectorPanel multiFields = new MultiValueSelectorPanel<String>(\"panel\",\n+                            final MultiFieldPanel multiFields = new MultiFieldPanel(\"panel\",\n                                     new PropertyModel<List<String>>(property, \"values\"), field, true);\n \n                             item.add(multiFields);\n@@ -203,7 +205,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                                 }\n                             });\n \n-                            field.setNewModel(property.getValues());\n+                            field.setNewModel(toSerializableList(property.getValues()));\n                             item.add(field);\n                         }\n \n@@ -212,6 +214,20 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 });\n     }\n \n+    private List<Serializable> toSerializableList(final List<Object> values) {\n+        List<Serializable> result = new ArrayList<Serializable>();\n+\n+        for (Object value : values) {\n+            if (value instanceof Serializable) {\n+                result.add((Serializable) value);\n+            } else {\n+                LOG.warn(\"Not serializable: {}\", value);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n     /**\n      * Get overridable properties.\n      *"},{"sha":"aa561f91a6091610bd68e1aafed45ab24558a8e0","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -289,7 +289,7 @@ public CharSequence getPrecondition(final Component component) {\n \n                 final AjaxDropDownChoicePanel<String> intAttrNames =\n                         new AjaxDropDownChoicePanel<String>(\"intAttrNames\", getString(\"intAttrNames\"),\n-                        new PropertyModel<String>(mapItem, \"intAttrName\"), false);\n+                                new PropertyModel<String>(mapItem, \"intAttrName\"), false);\n                 intAttrNames.setChoices(schemaNames);\n                 intAttrNames.setRequired(true);\n                 intAttrNames.setStyleSheet(FIELD_STYLE);\n@@ -305,16 +305,17 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                 final AjaxDropDownChoicePanel<IntMappingType> intMappingTypes =\n                         new AjaxDropDownChoicePanel<IntMappingType>(\"intMappingTypes\",\n-                        new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n-                        new PropertyModel<IntMappingType>(mapItem, \"intMappingType\"));\n+                                new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n+                                new PropertyModel<IntMappingType>(mapItem, \"intMappingType\"));\n                 intMappingTypes.setRequired(true);\n                 intMappingTypes.setChoices(attrTypes);\n                 intMappingTypes.setStyleSheet(FIELD_STYLE);\n                 item.add(intMappingTypes);\n \n                 final AjaxDropDownChoicePanel<AttributableType> entitiesPanel =\n                         new AjaxDropDownChoicePanel<AttributableType>(\"entities\",\n-                        new ResourceModel(\"entities\", \"entities\").getObject(), new Model<AttributableType>(entity));\n+                                new ResourceModel(\"entities\", \"entities\").getObject(), new Model<AttributableType>(\n+                                        entity));\n                 entitiesPanel.setChoices(attrType == AttributableType.ROLE\n                         ? Collections.<AttributableType>singletonList(AttributableType.ROLE)\n                         : Arrays.asList(AttributableType.values()));\n@@ -337,7 +338,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 });\n                 item.add(entitiesPanel);\n \n-                final FieldPanel extAttrNames = new AjaxTextFieldPanel(\"extAttrName\",\n+                final FieldPanel<String> extAttrNames = new AjaxTextFieldPanel(\"extAttrName\",\n                         new ResourceModel(\"extAttrNames\", \"extAttrNames\").getObject(),\n                         new PropertyModel<String>(mapItem, \"extAttrName\"));\n                 ((AjaxTextFieldPanel) extAttrNames).setChoices(schemaNames);\n@@ -357,7 +358,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 final AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\"mandatoryCondition\",\n                         new ResourceModel(\"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n                         new PropertyModel<String>(mapItem, \"mandatoryCondition\"));\n-                mandatory.setChoices(Arrays.asList(new String[] {\"true\", \"false\"}));\n+                mandatory.setChoices(Arrays.asList(new String[] { \"true\", \"false\" }));\n                 mandatory.setStyleSheet(SHORT_FIELD_STYLE);\n                 item.add(mandatory);\n \n@@ -412,9 +413,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                 final AjaxDropDownChoicePanel<MappingPurpose> purpose =\n                         new AjaxDropDownChoicePanel<MappingPurpose>(\"purpose\",\n-                        new ResourceModel(\"purpose\", \"purpose\").getObject(),\n-                        new PropertyModel<MappingPurpose>(mapItem, \"purpose\"),\n-                        false);\n+                                new ResourceModel(\"purpose\", \"purpose\").getObject(),\n+                                new PropertyModel<MappingPurpose>(mapItem, \"purpose\"),\n+                                false);\n                 purpose.setChoices(Arrays.asList(MappingPurpose.values()));\n                 purpose.setStyleSheet(FIELD_STYLE);\n                 purpose.setRequired(true);"},{"sha":"17735302b175f6ea7978373a3240507875819910","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleDetailsPanel.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleDetailsPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -90,11 +90,12 @@ public RoleDetailsPanel(final String id, final RoleTO roleTO, final boolean temp\n             parentFragment = new Fragment(\"parent\", \"parentFragment\", this);\n \n             parentModel = new ParentModel(roleTO);\n+            @SuppressWarnings(\"unchecked\")\n             final AjaxTextFieldPanel parent = new AjaxTextFieldPanel(\"parent\", \"parent\", parentModel);\n             parent.setReadOnly(true);\n             parent.setOutputMarkupId(true);\n             parentFragment.add(parent);\n-            final IndicatingAjaxLink parentSelect = new IndicatingAjaxLink(\"parentSelect\") {\n+            final AjaxLink<Void> parentSelect = new IndicatingAjaxLink<Void>(\"parentSelect\") {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -147,11 +148,12 @@ public void onClick(final AjaxRequestTarget target) {\n         this.add(name);\n \n         userOwnerModel = new OwnerModel(roleTO, AttributableType.USER);\n+        @SuppressWarnings(\"unchecked\")\n         final AjaxTextFieldPanel userOwner = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\", userOwnerModel);\n         userOwner.setReadOnly(true);\n         userOwner.setOutputMarkupId(true);\n         ownerContainer.add(userOwner);\n-        final IndicatingAjaxLink<Void> userOwnerSelect = new IndicatingAjaxLink<Void>(\"userOwnerSelect\") {\n+        final AjaxLink<Void> userOwnerSelect = new IndicatingAjaxLink<Void>(\"userOwnerSelect\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -183,11 +185,12 @@ public void onClick(final AjaxRequestTarget target) {\n         ownerContainer.add(userOwnerReset);\n \n         roleOwnerModel = new OwnerModel(roleTO, AttributableType.ROLE);\n+        @SuppressWarnings(\"unchecked\")\n         final AjaxTextFieldPanel roleOwner = new AjaxTextFieldPanel(\"roleOwner\", \"roleOwner\", roleOwnerModel);\n         roleOwner.setReadOnly(true);\n         roleOwner.setOutputMarkupId(true);\n         ownerContainer.add(roleOwner);\n-        final IndicatingAjaxLink<Void> roleOwnerSelect = new IndicatingAjaxLink<Void>(\"roleOwnerSelect\") {\n+        final AjaxLink<Void> roleOwnerSelect = new IndicatingAjaxLink<Void>(\"roleOwnerSelect\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"8e14ea81311191f9478af15ad1e73c7ee42fba5b","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -189,7 +189,8 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n \n             @Override\n-            public Component getHeader(String componentId) {\n+            public Component getHeader(final String componentId) {\n+                @SuppressWarnings(\"rawtypes\")\n                 final ActionLinksPanel panel = new ActionLinksPanel(componentId, new Model(), pageRef);\n \n                 panel.add(new ActionLink() {\n@@ -218,8 +219,10 @@ public void onClick(final AjaxRequestTarget target) {\n \n         container.add(table);\n \n+        @SuppressWarnings(\"rawtypes\")\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n@@ -247,7 +250,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n \n-        AjaxLink createLink = new ClearIndicatingAjaxLink(\"createLink\", pageRef) {\n+        AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createLink\", pageRef) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n "},{"sha":"349441515d999014567923d8e2ff67a8fef76233","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -38,7 +38,7 @@\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.attributes.AjaxCallListener;\n@@ -210,15 +210,15 @@ public CharSequence getPrecondition(final Component component) {\n                 }\n \n                 final AjaxTextFieldPanel panel;\n-                final MultiValueSelectorPanel multiPanel;\n+                final MultiFieldPanel multiPanel;\n                 if (templateMode) {\n                     panel = new AjaxTextFieldPanel(\"values\", \"values\", new Model<String>());\n                     panel.setReadOnly(attributeTO.isReadonly());\n                     multiPanel = null;\n                 } else {\n                     panel = new AjaxTextFieldPanel(\"panel\", \"values\", new Model<String>(null));\n                     panel.setReadOnly(attributeTO.isReadonly());\n-                    multiPanel = new MultiValueSelectorPanel(\"values\",\n+                    multiPanel = new MultiFieldPanel(\"values\",\n                             new PropertyModel<List<String>>(attributeTO, \"values\"), panel);\n                 }\n "},{"sha":"17d6faa4c3089e8f4b5b8c3a8d61875b1fa7827a","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -51,13 +51,6 @@ public int count() {\n         return getService(UserService.class).list(1, 1).getTotalCount();\n     }\n \n-    /**\n-     * Get all stored users.\n-     *\n-     * @param page pagination element to fetch\n-     * @param size maximum number to fetch\n-     * @return list of TaskTO objects\n-     */\n     @Override\n     public List<UserTO> list(final int page, final int size, final SortParam<String> sort) {\n         return getService(UserService.class).list(page, size, toOrderBy(sort)).getResult();\n@@ -68,8 +61,8 @@ public UserTO create(final UserTO userTO) {\n         return response.readEntity(UserTO.class);\n     }\n \n-    public UserTO update(final UserMod userModTO) {\n-        return getService(UserService.class).update(userModTO.getId(), userModTO).readEntity(UserTO.class);\n+    public UserTO update(final UserMod userMod) {\n+        return getService(UserService.class).update(userMod.getId(), userMod).readEntity(UserTO.class);\n     }\n \n     @Override"},{"sha":"c2ff9f95ef8184516fb1a7bf8cb1ea09d7bb06fa","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/ActionResultColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionResultColumn.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -46,7 +46,7 @@\n     private final String idFieldName;\n \n     public ActionResultColumn(final BulkActionResult results, final String idFieldName) {\n-        super(new Model());\n+        super(new Model<String>());\n         this.results = results;\n         this.idFieldName = idFieldName;\n     }"},{"sha":"91dcc59b207aa9d2a4ff908de3c3b9a9029cb1d8","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,13 +18,12 @@\n  */\n package org.apache.syncope.console.wicket.markup.html.form;\n \n-import java.io.Serializable;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class AbstractFieldPanel<T extends Serializable> extends Panel {\n+public abstract class AbstractFieldPanel<T> extends Panel {\n \n     /**\n      * Logger."},{"sha":"e14c42669eb3bb752b286d8266e9336fd7129fc8","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":47,"deletions":10,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -20,11 +20,11 @@\n \n import java.io.Serializable;\n import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.CheckBox;\n+import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n@@ -37,7 +37,7 @@ public AjaxCheckBoxPanel(final String id, final String name, final IModel<Boolea\n         super(id, name, model);\n \n         field = new CheckBox(\"checkboxField\", model);\n-        add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n \n         if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -65,30 +65,67 @@ public FieldPanel<Boolean> addRequiredLabel() {\n \n     @Override\n     public FieldPanel<Boolean> setNewModel(final List<Serializable> list) {\n-        setNewModel(new Model() {\n+        setNewModel(new Model<Boolean>() {\n \n             private static final long serialVersionUID = 527651414610325237L;\n \n             @Override\n-            public Serializable getObject() {\n+            public Boolean getObject() {\n                 Boolean value = null;\n \n-                if (list != null && !list.isEmpty() && StringUtils.isNotBlank(list.get(0).toString())) {\n-                    value = \"true\".equalsIgnoreCase(list.get(0).toString());\n+                if (list != null && !list.isEmpty()) {\n+                    value = Boolean.TRUE.toString().equalsIgnoreCase(list.get(0).toString());\n                 }\n \n                 return value;\n             }\n \n             @Override\n-            public void setObject(final Serializable object) {\n-                if (object instanceof Boolean) {\n-                    list.clear();\n-                    list.add(((Boolean) object).toString());\n+            public void setObject(final Boolean object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(object.toString());\n                 }\n             }\n         });\n \n         return this;\n     }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public FieldPanel<Boolean> setNewModel(final ListItem item) {\n+        IModel<Boolean> model = new Model<Boolean>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public Boolean getObject() {\n+                Boolean bool = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        bool = Boolean.TRUE.toString().equalsIgnoreCase(obj.toString());\n+                    } else if (obj instanceof Boolean) {\n+                        // Don't parse anything\n+                        bool = (Boolean) obj;\n+                    }\n+                }\n+\n+                return bool;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final Boolean object) {\n+                item.setModelObject(object == null ? Boolean.FALSE.toString() : object.toString());\n+            }\n+        };\n+\n+        field.setModel(model);\n+        return this;\n+    }\n+\n }"},{"sha":"4988e611fa91c7591397aefb1a403a9857d3255f","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -44,7 +44,7 @@ public AjaxDropDownChoicePanel(final String id, final String name, final IModel<\n         field = new DropDownChoice<T>(\n                 \"dropDownChoiceField\", model, Collections.<T>emptyList(), new ChoiceRenderer<T>());\n \n-        add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n \n         if (enableOnBlur) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n@@ -59,22 +59,26 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         }\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     public AjaxDropDownChoicePanel<T> setChoiceRenderer(final IChoiceRenderer renderer) {\n         ((DropDownChoice) field).setChoiceRenderer(renderer);\n         return this;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     public AjaxDropDownChoicePanel<T> setChoices(final List<T> choices) {\n         ((DropDownChoice) field).setChoices(choices);\n         return this;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     public AjaxDropDownChoicePanel<T> setChoices(final IModel<? extends List<? extends T>> choices) {\n         ((DropDownChoice) field).setChoices(choices);\n         return this;\n     }\n \n     @Override\n+    @SuppressWarnings(\"unchecked\")\n     public FieldPanel clone() {\n         final AjaxDropDownChoicePanel<T> panel = (AjaxDropDownChoicePanel<T>) super.clone();\n         panel.setChoiceRenderer(((DropDownChoice) field).getChoiceRenderer());"},{"sha":"3386cc4267fdee6ce65bb4ef495880d7b82e67ac","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.wicket.markup.html.form;\n \n-import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.console.commons.SelectChoiceRenderer;\n@@ -27,7 +26,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class AjaxPalettePanel<T> extends AbstractFieldPanel {\n+public class AjaxPalettePanel<T> extends AbstractFieldPanel<List<T>> {\n \n     private static final long serialVersionUID = 7738499668258805567L;\n \n@@ -60,7 +59,7 @@ protected Palette<T> createPalette(final IModel<List<T>> model, final ListModel<\n     }\n \n     @Override\n-    public AjaxPalettePanel<T> setModelObject(final Serializable object) {\n+    public AjaxPalettePanel<T> setModelObject(final List<T> object) {\n         palette.setDefaultModelObject(object);\n         return this;\n     }"},{"sha":"4cf11439167ddb1ec9bd5cb27e30667f65f7f3bb","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -30,14 +30,13 @@ public class AjaxPasswordFieldPanel extends FieldPanel<String> {\n     private static final long serialVersionUID = -5490115280336667460L;\n \n     public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model) {\n-\n         super(id, name, model);\n \n         field = new PasswordTextField(\"passwordField\", model);\n \n         field.setRequired(false);\n \n-        add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n \n         if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -53,8 +52,7 @@ protected void onUpdate(final AjaxRequestTarget art) {\n     }\n \n     @Override\n-    public FieldPanel addRequiredLabel() {\n-\n+    public FieldPanel<String> addRequiredLabel() {\n         if (!isRequired()) {\n             setRequired(true);\n         }"},{"sha":"a665406be38227fe4a97106a59183439556a0c26","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -74,14 +74,14 @@ protected Iterator<String> getChoices(final String input) {\n                 private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n-                protected void onUpdate(AjaxRequestTarget art) {\n+                protected void onUpdate(final AjaxRequestTarget target) {\n                     // nothing to do\n                 }\n             });\n         }\n     }\n \n-    public void addValidator(final IValidator validator) {\n+    public void addValidator(final IValidator<? super String> validator) {\n         this.field.add(validator);\n     }\n "},{"sha":"26ecddd5cbde3d5a33ea93a38e94a249c076ad9c","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/CheckBoxMultipleChoiceFieldPanel.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,29 +18,28 @@\n  */\n package org.apache.syncope.console.wicket.markup.html.form;\n \n-import java.io.Serializable;\n-import java.util.Collection;\n import java.util.List;\n \n import org.apache.wicket.markup.html.form.CheckBoxMultipleChoice;\n import org.apache.wicket.model.IModel;\n \n-public class CheckBoxMultipleChoiceFieldPanel extends AbstractFieldPanel {\n+public class CheckBoxMultipleChoiceFieldPanel<E> extends AbstractFieldPanel<List<E>> {\n \n     private static final long serialVersionUID = 4124935025837737298L;\n \n-    private final CheckBoxMultipleChoice field;\n+    private final CheckBoxMultipleChoice<E> field;\n \n-    public CheckBoxMultipleChoiceFieldPanel(final String id, final IModel<Collection> model, final IModel<List> choices) {\n+    public CheckBoxMultipleChoiceFieldPanel(\n+            final String id, final IModel<List<E>> model, final IModel<List<E>> choices) {\n \n         super(id, model);\n \n-        field = new CheckBoxMultipleChoice(\"checkBoxMultipleChoice\", model, choices);\n+        field = new CheckBoxMultipleChoice<E>(\"checkBoxMultipleChoice\", model, choices);\n         add(field);\n     }\n \n     @Override\n-    public AbstractFieldPanel setModelObject(final Serializable object) {\n+    public AbstractFieldPanel<List<E>> setModelObject(final List<E> object) {\n         field.setModelObject(object);\n         return this;\n     }"},{"sha":"d0dd4c251c549bb7757fe24ac1653818462dba60","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/DateFieldPanel.java","status":"modified","additions":46,"deletions":56,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -31,7 +31,7 @@\n import org.apache.wicket.model.Model;\n import org.springframework.util.StringUtils;\n \n-public class DateFieldPanel extends FieldPanel<Date> implements Cloneable {\n+public class DateFieldPanel extends FieldPanel<Date> {\n \n     private static final long serialVersionUID = -428975732068281726L;\n \n@@ -43,98 +43,88 @@ protected DateFieldPanel(final String id, final String name, final IModel<Date>\n     }\n \n     @Override\n-    public FieldPanel setNewModel(final ListItem item) {\n-        final SimpleDateFormat formatter;\n+    public FieldPanel<Date> setNewModel(final List<Serializable> list) {\n+        final SimpleDateFormat formatter = datePattern == null\n+                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n+                : new SimpleDateFormat(datePattern, Locale.getDefault());\n \n-        if (datePattern != null) {\n-            formatter = new SimpleDateFormat(datePattern, Locale.getDefault());\n-        } else {\n-            formatter = new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault());\n-        }\n+        setNewModel(new Model<Date>() {\n \n-        IModel<Date> model = new Model() {\n-\n-            private static final long serialVersionUID = 6799404673615637845L;\n+            private static final long serialVersionUID = 527651414610325237L;\n \n             @Override\n-            public Serializable getObject() {\n+            public Date getObject() {\n                 Date date = null;\n \n-                final Object obj = item.getModelObject();\n-\n-                if (obj != null && !obj.toString().isEmpty()) {\n-                    if (obj instanceof String) {\n+                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n+                    try {\n                         // Parse string using datePattern\n-                        try {\n-                            date = formatter.parse(obj.toString());\n-                        } catch (ParseException e) {\n-                            LOG.error(\"While parsing date\", e);\n-                        }\n-                    } else if (obj instanceof Date) {\n-                        // Don't parse anything\n-                        date = (Date) obj;\n-                    } else {\n-                        // consider Long\n-                        date = new Date((Long) obj);\n+                        date = formatter.parse(list.get(0).toString());\n+                    } catch (ParseException e) {\n+                        LOG.error(\"invalid parse exception\", e);\n                     }\n                 }\n \n                 return date;\n             }\n \n             @Override\n-            public void setObject(final Serializable object) {\n-                if (object instanceof Date) {\n-                    item.setModelObject(formatter.format((Date) object));\n-                } else {\n-                    item.setModelObject(null);\n+            public void setObject(final Date object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(formatter.format(object));\n                 }\n             }\n-        };\n+        });\n \n-        field.setModel(model);\n         return this;\n     }\n \n+    @SuppressWarnings(\"rawtypes\")\n     @Override\n-    public FieldPanel setNewModel(final List<Serializable> list) {\n-        final SimpleDateFormat formatter;\n-\n-        if (datePattern != null) {\n-            formatter = new SimpleDateFormat(datePattern, Locale.getDefault());\n-        } else {\n-            formatter = new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault());\n-        }\n+    public FieldPanel<Date> setNewModel(final ListItem item) {\n+        final SimpleDateFormat formatter = datePattern == null\n+                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n+                : new SimpleDateFormat(datePattern, Locale.getDefault());\n \n-        setNewModel(new Model() {\n+        IModel<Date> model = new Model<Date>() {\n \n-            private static final long serialVersionUID = 527651414610325237L;\n+            private static final long serialVersionUID = 6799404673615637845L;\n \n             @Override\n-            public Serializable getObject() {\n+            public Date getObject() {\n                 Date date = null;\n \n-                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n-                    try {\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n                         // Parse string using datePattern\n-                        date = formatter.parse(list.get(0).toString());\n-                    } catch (ParseException e) {\n-                        LOG.error(\"invalid parse exception\", e);\n+                        try {\n+                            date = formatter.parse(obj.toString());\n+                        } catch (ParseException e) {\n+                            LOG.error(\"While parsing date\", e);\n+                        }\n+                    } else if (obj instanceof Date) {\n+                        // Don't parse anything\n+                        date = (Date) obj;\n+                    } else {\n+                        // consider Long\n+                        date = new Date((Long) obj);\n                     }\n                 }\n \n                 return date;\n             }\n \n             @Override\n-            public void setObject(final Serializable object) {\n-                if (object != null && object instanceof Date) {\n-                    list.clear();\n-                    list.add((String) formatter.format((Date) object));\n-                }\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final Date object) {\n+                item.setModelObject(formatter.format(object));\n             }\n-        });\n+        };\n \n+        field.setModel(model);\n         return this;\n     }\n }"},{"sha":"2b37d9672e9e5862041eb19de28c79d1d99e5694","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/DateTextFieldPanel.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.wicket.markup.html.form;\n \n-\n import java.util.Date;\n import org.apache.syncope.console.commons.Constants;\n \n@@ -45,15 +44,15 @@ public DateTextFieldPanel(final String id, final String name, final IModel<Date>\n                 private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n-                protected void onUpdate(AjaxRequestTarget art) {\n+                protected void onUpdate(final AjaxRequestTarget target) {\n                     // nothing to do\n                 }\n             });\n         }\n \n         field.add(getDatePicker());\n \n-        add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n     }\n \n     /**\n@@ -76,8 +75,8 @@ protected boolean enableMonthYearSelection() {\n     }\n \n     @Override\n-    public FieldPanel clone() {\n-        final FieldPanel panel = new DateTextFieldPanel(id, name, new Model(), datePattern);\n+    public FieldPanel<Date> clone() {\n+        final FieldPanel<Date> panel = new DateTextFieldPanel(id, name, new Model<Date>(), datePattern);\n         panel.setRequired(isRequired());\n         panel.setReadOnly(isReadOnly());\n         panel.setTitle(title);"},{"sha":"1b33f1c3726119962c8439c46dd8022ee1692b79","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -107,7 +107,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n     }\n \n     /**\n@@ -124,7 +124,7 @@ public DateTimeFormValidator(final DateTimeField dateTimeComponent) {\n                 throw new IllegalArgumentException(\"argument dateTimeComponent cannot be null\");\n             }\n \n-            dateTimeComponents = new FormComponent[]{dateTimeComponent};\n+            dateTimeComponents = new FormComponent[] { dateTimeComponent };\n         }\n \n         @Override\n@@ -152,7 +152,8 @@ public void validate(final Form form) {\n         }\n     }\n \n-    public FieldPanel setFormValidator(final Form form) {\n+    @SuppressWarnings(\"rawtypes\")\n+    public FieldPanel<Date> setFormValidator(final Form form) {\n         if (field == null) {\n             LOG.error(\"Error setting form validator\");\n         } else {\n@@ -164,7 +165,7 @@ public FieldPanel setFormValidator(final Form form) {\n     }\n \n     @Override\n-    public FieldPanel setStyleSheet(final String classes) {\n+    public FieldPanel<Date> setStyleSheet(final String classes) {\n         field.get(\"date\").add(AttributeModifier.replace(\"class\", (classes == null ? \"\" : classes) + \" date_size\"));\n \n         field.get(\"hours\").add(AttributeModifier.replace(\"class\", classes == null ? \"\" : classes));\n@@ -177,8 +178,8 @@ public FieldPanel setStyleSheet(final String classes) {\n     }\n \n     @Override\n-    public FieldPanel clone() {\n-        final FieldPanel panel = new DateTimeFieldPanel(id, name, new Model<Date>(null), datePattern);\n+    public FieldPanel<Date> clone() {\n+        final FieldPanel<Date> panel = new DateTimeFieldPanel(id, name, new Model<Date>(null), datePattern);\n \n         panel.setRequired(isRequired());\n         panel.setReadOnly(isReadOnly());"},{"sha":"af797a399c690ec1684b614a45288c53c817afa6","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":49,"deletions":58,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.FormComponent;\n@@ -28,7 +29,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n-public abstract class FieldPanel<T extends Serializable> extends AbstractFieldPanel<T> implements Cloneable {\n+public abstract class FieldPanel<T> extends AbstractFieldPanel<T> implements Cloneable {\n \n     private static final long serialVersionUID = -198988924922541273L;\n \n@@ -87,8 +88,41 @@ public FieldPanel<T> setReadOnly(boolean readOnly) {\n         return this;\n     }\n \n-    public FieldPanel<T> setNewModel(final IModel<T> model) {\n-        field.setModel(model);\n+    public boolean isRequired() {\n+        return field.isRequired();\n+    }\n+\n+    public boolean isReadOnly() {\n+        return !field.isEnabled();\n+    }\n+\n+    public FieldPanel<T> addRequiredLabel() {\n+        if (!isRequired()) {\n+            setRequired(true);\n+        }\n+\n+        final Fragment fragment = new Fragment(\"required\", \"requiredFragment\", this);\n+\n+        fragment.add(new Label(\"requiredLabel\", \"*\"));\n+\n+        replace(fragment);\n+\n+        this.isRequiredLabelAdded = true;\n+\n+        return this;\n+    }\n+\n+    public FieldPanel<T> removeRequiredLabel() {\n+        if (isRequired()) {\n+            setRequired(false);\n+        }\n+\n+        final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n+\n+        replace(fragment);\n+\n+        this.isRequiredLabelAdded = false;\n+\n         return this;\n     }\n \n@@ -102,12 +136,9 @@ public T getModelObject() {\n         return (T) field.getModelObject();\n     }\n \n-    public boolean isRequired() {\n-        return field.isRequired();\n-    }\n-\n-    public boolean isReadOnly() {\n-        return !field.isEnabled();\n+    public FieldPanel<T> setNewModel(final IModel<T> model) {\n+        field.setModel(model);\n+        return this;\n     }\n \n     /**\n@@ -117,7 +148,7 @@ public boolean isReadOnly() {\n      * @return updated FieldPanel object.\n      */\n     public FieldPanel<T> setNewModel(final ListItem<T> item) {\n-        setNewModel(new Model<T>() {\n+        setNewModel(new IModel<T>() {\n \n             private static final long serialVersionUID = 6799404673615637845L;\n \n@@ -132,11 +163,16 @@ public void setObject(final T object) {\n                     item.setModelObject(object);\n                 }\n             }\n+\n+            @Override\n+            public void detach() {\n+                // no detach\n+            }\n         });\n         return this;\n     }\n \n-    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public FieldPanel<T> setNewModel(final List<Serializable> list) {\n         setNewModel(new Model() {\n \n@@ -165,53 +201,8 @@ public void setObject(final Serializable object) {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public FieldPanel<T> clone() {\n-        final FieldPanel<T> panel;\n-        try {\n-            panel = this.getClass().getConstructor(new Class<?>[] {String.class, String.class, IModel.class})\n-                    .newInstance(id, name, new Model<T>(null));\n-        } catch (Exception e) {\n-            LOG.error(\"Error cloning field panel\", e);\n-            return null;\n-        }\n-\n-        panel.setRequired(isRequired());\n-        panel.setReadOnly(isReadOnly());\n-        panel.setTitle(title);\n-\n-        if (isRequiredLabelAdded) {\n-            panel.addRequiredLabel();\n-        }\n-\n+        final FieldPanel<T> panel = SerializationUtils.clone(this);\n+        panel.setModelObject(null);\n         return panel;\n     }\n-\n-    public FieldPanel<T> addRequiredLabel() {\n-        if (!isRequired()) {\n-            setRequired(true);\n-        }\n-\n-        final Fragment fragment = new Fragment(\"required\", \"requiredFragment\", this);\n-\n-        fragment.add(new Label(\"requiredLabel\", \"*\"));\n-\n-        replace(fragment);\n-\n-        this.isRequiredLabelAdded = true;\n-\n-        return this;\n-    }\n-\n-    public FieldPanel<T> removeRequiredLabel() {\n-        if (isRequired()) {\n-            setRequired(false);\n-        }\n-\n-        final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n-\n-        replace(fragment);\n-\n-        this.isRequiredLabelAdded = false;\n-\n-        return this;\n-    }\n }"},{"sha":"6c9eae0f2c28c17a096f3bda003cab5c2cec77ed","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/MultiFieldPanel.java","status":"renamed","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.console.wicket.markup.html.form;\n \n-import java.io.Serializable;\n import java.util.List;\n import org.apache.syncope.console.commons.Constants;\n \n@@ -33,19 +32,19 @@\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n \n-public class MultiValueSelectorPanel<E> extends AbstractFieldPanel {\n+public class MultiFieldPanel<E> extends AbstractFieldPanel<List<E>> {\n \n     private static final long serialVersionUID = -6322397761456513324L;\n \n     private ListView<E> view;\n \n     private WebMarkupContainer container;\n \n-    public MultiValueSelectorPanel(final String id, final IModel<List<E>> model, final FieldPanel panelTemplate) {\n+    public MultiFieldPanel(final String id, final IModel<List<E>> model, final FieldPanel<E> panelTemplate) {\n         this(id, model, panelTemplate, false);\n     }\n \n-    public MultiValueSelectorPanel(final String id, final IModel<List<E>> model, final FieldPanel panelTemplate,\n+    public MultiFieldPanel(final String id, final IModel<List<E>> model, final FieldPanel<E> panelTemplate,\n             final boolean eventTemplate) {\n \n         super(id, model);\n@@ -64,7 +63,7 @@ public MultiValueSelectorPanel(final String id, final IModel<List<E>> model, fin\n \n             @Override\n             protected void populateItem(final ListItem<E> item) {\n-                final FieldPanel fieldPanel = panelTemplate.clone();\n+                final FieldPanel<E> fieldPanel = panelTemplate.clone();\n \n                 if (eventTemplate) {\n                     fieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -145,11 +144,8 @@ public WebMarkupContainer getContainer() {\n     }\n \n     @Override\n-    public MultiValueSelectorPanel<E> setModelObject(Serializable object) {\n-        if (!(object instanceof List)) {\n-            throw new ClassCastException(\"object is expected to be List: \" + object.getClass().getName());\n-        }\n-        view.setModelObject((List<E>) object);\n+    public MultiFieldPanel<E> setModelObject(final List<E> object) {\n+        view.setModelObject(object);\n         return this;\n     }\n ","previous_filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/MultiValueSelectorPanel.java"},{"sha":"ef377bf3f324ffd975eb1bf9ff5f0c203a547c2f","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/SelectableRecorder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -47,7 +47,7 @@\n     private static final String[] EMPTY_IDS = new String[0];\n \n     /**\n-     * conveniently maintained array of selected ids\n+     * Conveniently maintained array of selected ids.\n      */\n     private String[] ids;\n \n@@ -122,7 +122,7 @@ public T getSelectedItem() {\n     public Iterator<T> getSelectedChoices() {\n         IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n         if (ids.length == 0) {\n-            return Collections.EMPTY_LIST.iterator();\n+            return Collections.<T>emptyList().iterator();\n         }\n \n         List<T> selected = new ArrayList<T>(ids.length);\n@@ -146,7 +146,7 @@ public Iterator<T> getUnselectedChoices() {\n         Collection<? extends T> choices = getPalette().getChoices();\n \n         if (choices.size() - ids.length == 0) {\n-            return Collections.<T> emptyList().iterator();\n+            return Collections.<T>emptyList().iterator();\n         }\n \n         List<T> unselected = new ArrayList<T>(Math.max(1, choices.size() - ids.length));"},{"sha":"d8affdb3f1f3e24ba2300635cf39f30b56bf6160","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/SpinnerFieldPanel.java","status":"modified","additions":116,"deletions":3,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -18,21 +18,27 @@\n  */\n package org.apache.syncope.console.wicket.markup.html.form;\n \n+import java.io.Serializable;\n+import java.util.List;\n import java.util.UUID;\n+import org.apache.commons.lang3.math.NumberUtils;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n public class SpinnerFieldPanel<T extends Number> extends FieldPanel<T> {\n \n     private static final long serialVersionUID = 6413819574530703577L;\n \n-    private final String uuid;\n+    private final Class<T> reference;\n+\n+    private final IModel<T> model;\n \n     private final T min;\n \n@@ -42,10 +48,12 @@ public SpinnerFieldPanel(final String id, final String name, final Class<T> refe\n             final T min, final T max, final boolean disableVisible) {\n \n         super(id, name, model);\n+        this.reference = reference;\n+        this.model = model;\n         this.min = min;\n         this.max = max;\n \n-        uuid = UUID.randomUUID().toString();\n+        String uuid = UUID.randomUUID().toString();\n         field = new TextField<T>(\"spinnerField\", model, reference);\n         field.setMarkupId(uuid);\n         add(field.setLabel(new Model<String>(name)));\n@@ -79,7 +87,9 @@ public void onClick(final AjaxRequestTarget target) {\n \n         final StringBuilder statements = new StringBuilder();\n         statements.append(\"jQuery(function() {\").\n-                append(\"var spinner = $('#\").append(uuid).append(\"').spinner();\");\n+                append(\"var spinner = $('#\").append(uuid).append(\"').spinner();\").\n+                append(\"$('#\").append(uuid).append(\"').spinner(\").\n+                append(\"'option', 'stop', function(event, ui) { $(this).change(); });\");\n         if (this.min != null) {\n             statements.\n                     append(\"$('#\").append(uuid).append(\"').spinner(\").\n@@ -105,4 +115,107 @@ public void onClick(final AjaxRequestTarget target) {\n         add(spinnerFieldJS);\n     }\n \n+    @Override\n+    public SpinnerFieldPanel<T> setNewModel(final List<Serializable> list) {\n+        setNewModel(new Model<T>() {\n+\n+            private static final long serialVersionUID = 527651414610325237L;\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public T getObject() {\n+                T value = null;\n+\n+                if (list != null && !list.isEmpty()) {\n+                    value = reference.equals(Integer.class)\n+                            ? (T) Integer.valueOf(NumberUtils.toInt(list.get(0).toString()))\n+                            : reference.equals(Long.class)\n+                            ? (T) Short.valueOf(NumberUtils.toShort(list.get(0).toString()))\n+                            : reference.equals(Short.class)\n+                            ? (T) Long.valueOf(NumberUtils.toLong(list.get(0).toString()))\n+                            : reference.equals(Float.class)\n+                            ? (T) Float.valueOf(NumberUtils.toFloat(list.get(0).toString()))\n+                            : reference.equals(Byte.class)\n+                            ? (T) Byte.valueOf(NumberUtils.toByte(list.get(0).toString()))\n+                            : (T) Double.valueOf(NumberUtils.toDouble(list.get(0).toString()));\n+                }\n+\n+                return value;\n+            }\n+\n+            @Override\n+            public void setObject(final T object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(object.toString());\n+                }\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public SpinnerFieldPanel<T> setNewModel(final ListItem item) {\n+        field.setModel(new Model<T>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public T getObject() {\n+                T number = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        number = reference.equals(Integer.class)\n+                                ? (T) Integer.valueOf((String) obj)\n+                                : reference.equals(Long.class)\n+                                ? (T) Short.valueOf((String) obj)\n+                                : reference.equals(Short.class)\n+                                ? (T) Long.valueOf((String) obj)\n+                                : reference.equals(Float.class)\n+                                ? (T) Float.valueOf((String) obj)\n+                                : reference.equals(Byte.class)\n+                                ? (T) Byte.valueOf((String) obj)\n+                                : (T) Double.valueOf((String) obj);\n+\n+                    } else if (obj instanceof Number) {\n+                        // Don't parse anything\n+                        number = (T) obj;\n+                    }\n+                }\n+\n+                return number;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final T object) {\n+                item.setModelObject(object == null ? null : object.toString());\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public SpinnerFieldPanel<T> clone() {\n+        SpinnerFieldPanel<T> panel = new SpinnerFieldPanel<T>(\n+                id, name, reference, model, min, max, isRequiredLabelAdded);\n+\n+        panel.setRequired(isRequired());\n+        panel.setReadOnly(isReadOnly());\n+        panel.setTitle(title);\n+\n+        if (isRequiredLabelAdded) {\n+            panel.addRequiredLabel();\n+        }\n+\n+        return panel;\n+    }\n+\n }"},{"sha":"2208220b4fc655eab1a0377ca836ec48c4f23a83","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MultiFieldPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.html?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","previous_filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MultiValueSelectorPanel.html"},{"sha":"958e9e0b3fc24c8ca197fb7b13c3112c0e350016","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MultiFieldPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.properties?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","previous_filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MultiValueSelectorPanel.properties"},{"sha":"398d6345af28348db33bdb4fcd2a94f87a6eee94","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MultiFieldPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel_it.properties?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","previous_filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MultiValueSelectorPanel_it.properties"},{"sha":"d4f56934c649a3a9716e10bf9b0b44ef2bb2c674","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MultiFieldPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel_pt_BR.properties?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","previous_filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MultiValueSelectorPanel_pt_BR.properties"},{"sha":"a046d5c67475749b938f45eecafacf844739ccd5","filename":"console/src/main/webapp/css/fieldstyle.css","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Ffieldstyle.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fef911f6a40c2b59ab6ab6dff004b2787ceea854/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Ffieldstyle.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Ffieldstyle.css?ref=fef911f6a40c2b59ab6ab6dff004b2787ceea854","patch":"@@ -74,13 +74,13 @@ div#formtable > span:first-of-type {\n div.tablerow {\n   display: inline-table;\n   padding: 5px;\n-  width: 100%;\n+  width: 99%;\n }\n \n div.tablerow2 {\n   display: inline-table;\n   padding: 5px 0px 5px 0px;\n-  width: 100%;\n+  width: 99%;\n }\n \n div.alt {"}]}