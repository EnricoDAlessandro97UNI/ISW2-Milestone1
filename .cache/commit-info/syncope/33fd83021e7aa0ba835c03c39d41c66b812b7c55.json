{"sha":"33fd83021e7aa0ba835c03c39d41c66b812b7c55","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMzZmQ4MzAyMWU3YWEwYmE4MzVjMDNjMzlkNDFjNjZiODEyYjdjNTU=","commit":{"author":{"name":"Andrea Patricelli","email":"andrea.patricelli@tirasa.net","date":"2015-12-24T16:29:36Z"},"committer":{"name":"Andrea Patricelli","email":"andrea.patricelli@tirasa.net","date":"2015-12-24T16:29:36Z"},"message":"[SYNCOPE-719] improved error and exception managament: sent correct error-messages to enduser","tree":{"sha":"03f79f07bd3dd2180828645a716932ea7d6098c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/03f79f07bd3dd2180828645a716932ea7d6098c9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/33fd83021e7aa0ba835c03c39d41c66b812b7c55","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/33fd83021e7aa0ba835c03c39d41c66b812b7c55","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/33fd83021e7aa0ba835c03c39d41c66b812b7c55","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/33fd83021e7aa0ba835c03c39d41c66b812b7c55/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"f65636e059f509a56ff4d04d789295d35cf39478","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f65636e059f509a56ff4d04d789295d35cf39478","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f65636e059f509a56ff4d04d789295d35cf39478"}],"stats":{"total":246,"additions":140,"deletions":106},"files":[{"sha":"530112bc0c010ad1124fe72e3cb77182ce44c5a8","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/InfoResource.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.adapters.SyncopeTOAdapter;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n@@ -42,7 +43,6 @@ public InfoResource() {\n     protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n \n         ResourceResponse response = new ResourceResponse();\n-        int responseStatus = 200;\n \n         try {\n             response.setWriteCallback(new WriteCallback() {\n@@ -53,12 +53,16 @@ public void writeData(final IResource.Attributes attributes) throws IOException\n                             SyncopeEnduserSession.get().getSyncopeTO())));\n                 }\n             });\n+        response.setStatusCode(Response.Status.OK.getStatusCode());\n         } catch (Exception e) {\n             LOG.error(\"Error retrieving syncope info\", e);\n-            responseStatus = 500;\n+            response.setError(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n         }\n \n-        response.setStatusCode(responseStatus);\n         return response;\n     }\n }"},{"sha":"e481d2c53915520bfaf89142d4ab43f31b8b7270","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/LoginResource.java","status":"modified","additions":23,"deletions":21,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -20,6 +20,7 @@\n \n import java.io.IOException;\n import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.enduser.model.Credentials;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n@@ -40,8 +41,6 @@ public LoginResource() {\n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n-        int responseStatus;\n-        final String responseMessage;\n         ResourceResponse response = new ResourceResponse();\n \n         try {\n@@ -54,30 +53,33 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             LOG.debug(\"Enduser login, user: {}\", username);\n \n             if (StringUtils.isBlank(username)) {\n-                responseMessage = \"Could not read credentials from request: username is blank!\";\n-                LOG.error(responseMessage);\n-                responseStatus = 400;\n-            } else {\n-                // authenticate user\n-                final boolean authenticated = SyncopeEnduserSession.get().authenticate(username, password);\n-                responseStatus = authenticated ? 200 : 401;\n-                responseMessage = username;\n-            }\n+                LOG.error(\"Could not read credentials from request: username is blank!\");\n+                response.setError(Response.Status.BAD_REQUEST.getStatusCode(),\n+                        \"ErrorMessage{{ Could not read credentials from request: username is blank! }}\");\n+            } else // authenticate user\n+             if (SyncopeEnduserSession.get().authenticate(username, password)) {\n+                    // user has been authenticated successfully\n+                    response.setWriteCallback(new WriteCallback() {\n \n-            response.setWriteCallback(new WriteCallback() {\n-\n-                @Override\n-                public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(responseMessage);\n+                        @Override\n+                        public void writeData(final Attributes attributes) throws IOException {\n+                            attributes.getResponse().write(username);\n+                        }\n+                    });\n+                    response.setStatusCode(Response.Status.OK.getStatusCode());\n+                } else {\n+                    // not authenticated\n+                    response.setError(Response.Status.UNAUTHORIZED.getStatusCode(),\n+                            \"ErrorMessage{{ Username or password are incorrect }}\");\n                 }\n-            });\n-\n         } catch (Exception e) {\n-            responseStatus = 400;\n             LOG.error(\"Could not read credentials from request\", e);\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n         }\n-\n-        response.setStatusCode(responseStatus);\n         return response;\n     }\n "},{"sha":"b909767b23b49b3b2cefe2b1b4d30bb982a9e456","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":7,"deletions":19,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -19,11 +19,10 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n-import java.util.ArrayList;\n import java.util.List;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.model.SchemaResponse;\n-import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n@@ -61,8 +60,6 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n \n-        int responseStatus = 200;\n-\n         try {\n             final AnyTypeTO anyTypeUserTO = anyTypeService.read(AnyTypeKind.USER.name());\n \n@@ -86,25 +83,16 @@ public void writeData(final IResource.Attributes attributes) throws IOException\n                             virSchemas(virSchemas)));\n                 }\n             });\n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n         } catch (Exception e) {\n             LOG.error(\"Error retrieving {} any type kind related schemas\", AnyTypeKind.USER.name(), e);\n-            responseStatus = 400;\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n         }\n-\n-        response.setStatusCode(responseStatus);\n         return response;\n     }\n \n-    private <T extends AbstractSchemaTO> List<T> getSchemaTOs(final List<String> schemaNames,\n-            final SchemaType schemaType, final Class<T> type) {\n-\n-        List<T> schemaTOs = new ArrayList<>();\n-\n-        for (String schemaName : schemaNames) {\n-            schemaTOs.add(type.cast(schemaService.read(schemaType, schemaName)));\n-        }\n-\n-        return schemaTOs;\n-    }\n-\n }"},{"sha":"4a036013db529714b3aaca1ab18750875b3563b2","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SecurityQuestionResource.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -20,6 +20,7 @@\n \n import java.io.IOException;\n import java.util.List;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n@@ -48,8 +49,6 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n \n-        int responseStatus = 200;\n-\n         try {\n \n             final List<SecurityQuestionTO> securityQuestionTOs = securityQuestionService.list();\n@@ -62,12 +61,16 @@ public void writeData(final IResource.Attributes attributes) throws IOException\n                 }\n             });\n \n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n         } catch (Exception e) {\n             LOG.error(\"Error retrieving security questions\", e);\n-            responseStatus = 400;\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n         }\n \n-        response.setStatusCode(responseStatus);\n         return response;\n     }\n "},{"sha":"b065a86094781efaa60bbcd22ec24b6f032871ad","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":24,"deletions":26,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -20,6 +20,7 @@\n \n import java.io.IOException;\n import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.adapters.UserTOAdapter;\n import org.apache.syncope.client.enduser.model.UserTORequest;\n@@ -47,7 +48,6 @@ public UserSelfCreateResource() {\n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n-        int responseStatus = 200;\n         final StringBuilder responseMessage = new StringBuilder();\n         ResourceResponse response = new ResourceResponse();\n \n@@ -61,35 +61,33 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n                 LOG.debug(\"Received user self registration request for user: [{}]\", userTORequest.getUsername());\n                 LOG.trace(\"Received user self registration request is: [{}]\", userTORequest);\n                 // adapt request and create user\n-                userSelfService.create(userTOAdapter.fromUserTORequest(userTORequest, null), true);\n-                responseMessage.append(\"User\").append(userTORequest.getUsername()).append(\"created successfully\");\n+                final Response res = userSelfService.create(userTOAdapter.fromUserTORequest(userTORequest, null), true);\n+\n+                response.setWriteCallback(new WriteCallback() {\n+\n+                    @Override\n+                    public void writeData(final Attributes attributes) throws IOException {\n+                        attributes.getResponse().write(res.getStatusInfo().getFamily().equals(\n+                                Response.Status.Family.SUCCESSFUL)\n+                                        ? responseMessage.append(\"User: \").append(userTORequest.getUsername()).append(\n+                                        \" successfully created\")\n+                                        : new StringBuilder().append(\"ErrorMessage{{ \").\n+                                        append(res.getStatusInfo().getReasonPhrase()).append(\" }}\"));\n+                    }\n+                });\n+                response.setStatusCode(res.getStatus());\n             } else {\n-                responseMessage.append(userTORequest == null\n+                response.setError(Response.Status.FORBIDDEN.getStatusCode(), new StringBuilder().\n+                        append(\"ErrorMessage{{\").append(userTORequest == null\n                         ? \"Request received is not valid\"\n-                        : \"Self registration not allowed\");\n-                responseStatus = 403;\n+                        : \"Self registration not allowed\").append(\"}}\").toString());\n             }\n-            response.setWriteCallback(new WriteCallback() {\n-\n-                @Override\n-                public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(responseMessage);\n-                }\n-            });\n-\n-        } catch (final Exception e) {\n-            LOG.error(\"Could not read userTO from request\", e);\n-            responseStatus = 400;\n-            response.setWriteCallback(new WriteCallback() {\n-\n-                @Override\n-                public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(e.getMessage());\n-                }\n-            });\n-        }\n \n-        response.setStatusCode(responseStatus);\n+        } catch (Exception e) {\n+            LOG.error(\"Could not create userTO\", e);\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder().append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage()).append(\" }}\").toString());\n+        }\n         return response;\n     }\n "},{"sha":"c1d465f54568b5919109fbe351858b24dd8740af","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":21,"deletions":10,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.adapters.UserTOAdapter;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n@@ -45,19 +46,29 @@ public UserSelfReadResource() {\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n         LOG.debug(\"Requested user self information\");\n-        \n-        ResourceResponse response = new ResourceResponse();\n-        final String selfTOJson = POJOHelper.serialize(userTOAdapter.toUserTORequest(SyncopeEnduserSession.get().\n-                getSelfTO()));\n \n-        response.setWriteCallback(new WriteCallback() {\n+        AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n+        try {\n \n-            @Override\n-            public void writeData(final Attributes attributes) throws IOException {\n-                attributes.getResponse().write(selfTOJson);\n-            }\n-        });\n+            final String selfTOJson = POJOHelper.serialize(userTOAdapter.toUserTORequest(SyncopeEnduserSession.get().\n+                    getSelfTO()));\n \n+            response.setWriteCallback(new WriteCallback() {\n+\n+                @Override\n+                public void writeData(final Attributes attributes) throws IOException {\n+                    attributes.getResponse().write(selfTOJson);\n+                }\n+            });\n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving selfTO user\", e);\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n+        }\n         return response;\n     }\n }"},{"sha":"2737bdba5941eba5f14c55f10d2b027c5458053c","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":12,"deletions":14,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -49,8 +49,6 @@ public UserSelfUpdateResource() {\n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n-        int responseStatus;\n-        final String responseMessage;\n         ResourceResponse response = new ResourceResponse();\n \n         try {\n@@ -68,9 +66,12 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n             // update user\n             Response res = userSelfService.update(userTO);\n-            responseStatus = res.getStatus();\n \n-            responseMessage = \"User updated successfully\";\n+            final String responseMessage = res.getStatusInfo().getFamily().equals(Response.Status.Family.SUCCESSFUL)\n+                            ? new StringBuilder().append(\"User\").append(userTO.getUsername()).append(\n+                            \" successfully updated\").toString()\n+                            : new StringBuilder().append(\"ErrorMessage{{ \").\n+                            append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").toString();\n \n             response.setWriteCallback(new WriteCallback() {\n \n@@ -80,19 +81,16 @@ public void writeData(final Attributes attributes) throws IOException {\n                 }\n             });\n \n+            response.setStatusCode(res.getStatus());\n+\n         } catch (final Exception e) {\n             LOG.error(\"Error while updating user\", e);\n-            responseStatus = 400;\n-            response.setWriteCallback(new WriteCallback() {\n-\n-                @Override\n-                public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(e.getMessage());\n-                }\n-            });\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n         }\n-\n-        response.setStatusCode(responseStatus);\n         return response;\n     }\n "},{"sha":"8c00fc8005b6a3b65206c8eb4fea74389315c115","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/LoginController.js","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FLoginController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FLoginController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FLoginController.js?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -44,7 +44,13 @@ angular.module(\"login\").controller(\"LoginController\", ['$scope', '$rootScope', '\n         $location.path(\"/self/update\");\n       }, function (response) {\n         console.log(\"LOGIN FAILED: \", response);\n-        $scope.credentials.errorMessage = \"Login failed: \" + response;\n+        var errorMessage;\n+        // parse error response \n+        if (response !== undefined) {\n+          errorMessage = response.split(\"ErrorMessage{{\")[1];\n+          errorMessage = errorMessage.split(\"}}\")[0];\n+        }\n+        $scope.credentials.errorMessage = \"Login failed: \" + errorMessage;\n         growl.error($scope.credentials.errorMessage, {referenceId: 1});\n       });\n     };"},{"sha":"5f8953bbe30b146cb4ea01bfe918aa330f859e46","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":32,"deletions":8,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/33fd83021e7aa0ba835c03c39d41c66b812b7c55/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=33fd83021e7aa0ba835c03c39d41c66b812b7c55","patch":"@@ -19,9 +19,9 @@\n \n 'use strict';\n \n-angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$location', 'AuthService',\n+angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$location', '$compile', 'AuthService',\n   'UserSelfService', 'SchemaService', 'RealmService', 'SecurityQuestionService', 'growl', function ($scope, $rootScope,\n-          $location, AuthService, UserSelfService, SchemaService, RealmService, SecurityQuestionService, growl) {\n+          $location, $compile, AuthService, UserSelfService, SchemaService, RealmService, SecurityQuestionService, growl) {\n \n     $scope.user = {};\n     $scope.confirmPassword = {\n@@ -108,8 +108,14 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n             }\n           }\n \n-        }, function () {\n-          console.log(\"Error retrieving user schemas\");\n+        }, function (response) {\n+          var errorMessage;\n+          // parse error response \n+          if (response !== undefined) {\n+            errorMessage = response.split(\"ErrorMessage{{\")[1];\n+            errorMessage = errorMessage.split(\"}}\")[0];\n+          }\n+          console.log(\"Error retrieving user schemas: \", errorMessage);\n         });\n         console.log(\"USER WITH ATTRTO: \", $scope.user);\n \n@@ -118,8 +124,14 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n       var initSecurityQuestions = function () {\n         SecurityQuestionService.getAvailableSecurityQuestions().then(function (response) {\n           $scope.availableSecurityQuestions = response;\n-        }, function () {\n-          console.log(\"Error\");\n+        }, function (response) {\n+          var errorMessage;\n+          // parse error response \n+          if (response !== undefined) {\n+            errorMessage = response.split(\"ErrorMessage{{\")[1];\n+            errorMessage = errorMessage.split(\"}}\")[0];\n+          }\n+          console.log(\"Error retrieving avaliable security questions: \", errorMessage);\n         });\n       };\n \n@@ -185,7 +197,13 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           $location.path('/self');\n         }, function (response) {\n           console.log(\"Error during user creation: \", response);\n-          growl.error(\"Error: \" + response, {referenceId: 2});\n+          var errorMessage;\n+          // parse error response \n+          if (response !== undefined) {\n+            errorMessage = response.split(\"ErrorMessage{{\")[1];\n+            errorMessage = errorMessage.split(\"}}\")[0];\n+          }\n+          growl.error(\"Error: \" + (errorMessage || response), {referenceId: 2});\n         });\n \n       } else {\n@@ -201,7 +219,13 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           });\n         }, function (response) {\n           console.log(\"Error during user update: \", response);\n-          growl.error(\"Error: \" + response, {referenceId: 2});\n+          var errorMessage;\n+          // parse error response \n+          if (response !== undefined) {\n+            errorMessage = response.split(\"ErrorMessage{{\")[1];\n+            errorMessage = errorMessage.split(\"}}\")[0];\n+          }\n+          growl.error(\"Error: \" + (errorMessage || response), {referenceId: 2});\n         });\n       }\n     };"}]}