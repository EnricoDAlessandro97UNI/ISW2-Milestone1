{"sha":"af21e80106538f12c0c0ed2e2b94bf3344823f9c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFmMjFlODAxMDY1MzhmMTJjMGMwZWQyZTJiOTRiZjMzNDQ4MjNmOWM=","commit":{"author":{"name":"Matteo Di Carlo","email":"matteo.dicarlo@tirasa.net","date":"2016-05-13T10:38:09Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2016-05-13T15:02:38Z"},"message":"[SYNCOPE-783] date and time fields management added in Syncope-enduser - this closes #17","tree":{"sha":"8474fabaae59bea932de1b5de0788eab700a77c0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8474fabaae59bea932de1b5de0788eab700a77c0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/af21e80106538f12c0c0ed2e2b94bf3344823f9c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/af21e80106538f12c0c0ed2e2b94bf3344823f9c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/af21e80106538f12c0c0ed2e2b94bf3344823f9c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/af21e80106538f12c0c0ed2e2b94bf3344823f9c/comments","author":null,"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fa7def88fee749962e7cf060c6e37e251a90b6dd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fa7def88fee749962e7cf060c6e37e251a90b6dd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fa7def88fee749962e7cf060c6e37e251a90b6dd"}],"stats":{"total":338,"additions":174,"deletions":164},"files":[{"sha":"e0ea1ebe8e84ee3bffe94f0b4021f872b421c2fb","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n-\n import java.util.List;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;"},{"sha":"2195248c1db69fbbc064a8f9ecab1e31bdb2b580","filename":"client/enduser/pom.xml","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fpom.xml?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -142,14 +142,6 @@ under the License.\n       <groupId>org.webjars.bower</groupId>\n       <artifactId>FileSaver.js</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.webjars.npm</groupId>\n-      <artifactId>moment</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.webjars.npm</groupId>\n-      <artifactId>moment-jdateformatparser</artifactId>\n-    </dependency>\n \n     <!--Jquery-->\n     <dependency>"},{"sha":"74cf6b317a07b30b4b85efe911d8b201f7839711","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":27,"deletions":25,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -19,18 +19,25 @@\n package org.apache.syncope.client.enduser;\n \n import java.text.DateFormat;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MediaType;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.info.PlatformInfo;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n+import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.wicket.Session;\n import org.apache.wicket.protocol.http.WebSession;\n@@ -58,6 +65,8 @@ public class SyncopeEnduserSession extends WebSession {\n \n     private final PlatformInfo platformInfo;\n \n+    private final List<PlainSchemaTO> datePlainSchemas;\n+\n     private UserTO selfTO;\n \n     private final CookieUtils cookieUtils;\n@@ -77,6 +86,16 @@ public SyncopeEnduserSession(final Request request) {\n                 SyncopeEnduserApplication.get().getAnonymousUser(),\n                 SyncopeEnduserApplication.get().getAnonymousKey());\n         platformInfo = anonymousClient.getService(SyncopeService.class).platform();\n+\n+        datePlainSchemas = anonymousClient.getService(SchemaService.class).\n+                list(new SchemaQuery.Builder().type(SchemaType.PLAIN).build());\n+        CollectionUtils.filter(datePlainSchemas, new Predicate<PlainSchemaTO>() {\n+\n+            @Override\n+            public boolean evaluate(final PlainSchemaTO object) {\n+                return object.getType() == AttrSchemaType.Date;\n+            }\n+        });\n     }\n \n     public boolean authenticate(final String username, final String password) {\n@@ -102,14 +121,10 @@ public boolean authenticate(final String username, final String password) {\n         return authenticated;\n     }\n \n-    public <T> void resetClient(final Class<T> service) {\n-        T serviceInstance = getService(service);\n-        WebClient.client(serviceInstance).reset();\n-    }\n-\n     public <T> T getService(final Class<T> serviceClass) {\n-        return (client == null || !isAuthenticated()) ? anonymousClient.getService(serviceClass) : client.\n-                getService(serviceClass);\n+        return (client == null || !isAuthenticated())\n+                ? anonymousClient.getService(serviceClass)\n+                : client.getService(serviceClass);\n     }\n \n     public <T> T getService(final String etag, final Class<T> serviceClass) {\n@@ -120,23 +135,6 @@ public <T> T getService(final String etag, final Class<T> serviceClass) {\n         return serviceInstance;\n     }\n \n-    public <T> T getService(final MediaType mediaType, final Class<T> serviceClass) {\n-        T service;\n-\n-        synchronized (SyncopeEnduserApplication.get().getClientFactory()) {\n-            SyncopeClientFactoryBean.ContentType preType = SyncopeEnduserApplication.get().getClientFactory().\n-                    getContentType();\n-\n-            SyncopeEnduserApplication.get().getClientFactory().\n-                    setContentType(SyncopeClientFactoryBean.ContentType.fromString(mediaType.toString()));\n-            service = SyncopeEnduserApplication.get().getClientFactory().\n-                    create(username, password).getService(serviceClass);\n-            SyncopeEnduserApplication.get().getClientFactory().setContentType(preType);\n-        }\n-\n-        return service;\n-    }\n-\n     public String getUsername() {\n         return username;\n     }\n@@ -149,6 +147,10 @@ public PlatformInfo getPlatformInfo() {\n         return platformInfo;\n     }\n \n+    public List<PlainSchemaTO> getDatePlainSchemas() {\n+        return datePlainSchemas;\n+    }\n+\n     public UserTO getSelfTO() {\n         return selfTO;\n     }"},{"sha":"a46e953fbed7e7fbca28bd5f0fe82e5389a010c2","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -36,13 +36,9 @@\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class SchemaResource extends AbstractBaseResource {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SchemaResource.class);\n-\n     private static final long serialVersionUID = 6453101466981543020L;\n \n     private final AnyTypeService anyTypeService;"},{"sha":"b60911802209ca648dc7f844a21a915b9b56872a","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":25,"deletions":12,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -19,27 +19,24 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class UserSelfReadResource extends AbstractBaseResource {\n \n     private static final long serialVersionUID = -9184809392631523912L;\n \n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(UserSelfReadResource.class);\n-\n-    public UserSelfReadResource() {\n-    \n-    }\n-\n     @Override\n     protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n \n@@ -55,8 +52,24 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 return response;\n             }\n \n-            final String selfTOJson = MAPPER.writeValueAsString(SyncopeEnduserSession.get().getSelfTO());\n+            UserTO userTO = SerializationUtils.clone(SyncopeEnduserSession.get().getSelfTO());\n+            Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n+\n+            for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n+                if (userPlainAttrMap.containsKey(plainSchema.getKey())) {\n+                    FastDateFormat fmt = FastDateFormat.getInstance(plainSchema.getConversionPattern());\n+\n+                    AttrTO dateAttr = userPlainAttrMap.get(plainSchema.getKey());\n+                    List<String> milliValues = new ArrayList<>(dateAttr.getValues().size());\n+                    for (String value : dateAttr.getValues()) {\n+                        milliValues.add(String.valueOf(fmt.parse(value).getTime()));\n+                    }\n+                    dateAttr.getValues().clear();\n+                    dateAttr.getValues().addAll(milliValues);\n+                }\n+            }\n \n+            final String selfTOJson = MAPPER.writeValueAsString(userTO);\n             response.setWriteCallback(new WriteCallback() {\n \n                 @Override"},{"sha":"119b6972dc2e6c2f19f11a82cee996d2be1aa8f1","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":29,"deletions":15,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -19,29 +19,25 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class UserSelfUpdateResource extends AbstractBaseResource {\n \n     private static final long serialVersionUID = -2721621682300247583L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(UserSelfUpdateResource.class);\n-\n-    private final UserSelfService userSelfService;\n-\n-    public UserSelfUpdateResource() {\n-        userSelfService = SyncopeEnduserSession.get().getService(UserSelfService.class);\n-    }\n-\n     @Override\n     protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n@@ -54,21 +50,39 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 return response;\n             }\n \n-            String jsonString = request.getReader().readLine();\n-\n-            final UserTO userTO = MAPPER.readValue(jsonString, UserTO.class);\n-\n             if (!captchaCheck(\n                     request.getHeader(\"captcha\"),\n                     request.getSession().getAttribute(SyncopeEnduserConstants.CAPTCHA_SESSION_KEY))) {\n \n                 throw new IllegalArgumentException(\"Entered captcha is not matching\");\n             }\n \n+            UserTO userTO = MAPPER.readValue(request.getReader().readLine(), UserTO.class);\n             LOG.debug(\"User {} id self-updating\", userTO.getUsername());\n \n+            Map<String, AttrTO> userPlainAttrMap = userTO.getPlainAttrMap();\n+\n+            for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {\n+                if (userPlainAttrMap.containsKey(plainSchema.getKey())) {\n+                    FastDateFormat fmt = FastDateFormat.getInstance(plainSchema.getConversionPattern());\n+\n+                    AttrTO dateAttr = userPlainAttrMap.get(plainSchema.getKey());\n+                    List<String> formattedValues = new ArrayList<>(dateAttr.getValues().size());\n+                    for (String value : dateAttr.getValues()) {\n+                        try {\n+                            formattedValues.add(fmt.format(Long.valueOf(value)));\n+                        } catch (NumberFormatException e) {\n+                            throw new IllegalArgumentException(\"Invalid format value for \" + value);\n+                        }\n+                    }\n+                    dateAttr.getValues().clear();\n+                    dateAttr.getValues().addAll(formattedValues);\n+                }\n+            }\n+\n             // update user\n-            Response res = userSelfService.update(userTO);\n+            Response res = SyncopeEnduserSession.get().\n+                    getService(userTO.getETagValue(), UserSelfService.class).update(userTO);\n \n             final String responseMessage = res.getStatusInfo().getFamily().equals(Response.Status.Family.SUCCESSFUL)\n                     ? new StringBuilder()."},{"sha":"16bb79cd168782e810de0d328d452cc037193ebc","filename":"client/enduser/src/main/resources/META-INF/resources/app/css/editUser.css","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2FeditUser.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2FeditUser.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2FeditUser.css?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -162,6 +162,27 @@ under the License.\n   animation:slideOutLeft 0.5s both ease;   \n }\n \n+\n+#datetime{\n+  line-height: 34px;\n+  float: left;\n+  margin-top:35px;\n+  padding: 0 3px 0px 0px;\n+  display: inline-block !important;\n+}\n+\n+#date{\n+  position: relative;\n+  display: table; \n+  border-collapse: separate;\n+}\n+\n+#timepicker{\n+  line-height: 34px; \n+  float: left; \n+  padding: 0 3px 0px 0px;\n+}\n+\n /** Button breadcrumb **/\n .btn-breadcrumb .btn:not(:last-child):after {\n   content: \" \";"},{"sha":"d191570ec2037511e164e47f206898324b28d4ea","filename":"client/enduser/src/main/resources/META-INF/resources/app/index.html","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -77,8 +77,6 @@\n     <script type=\"text/javascript\" src=\"../webjars/bootstrap-select/${bootstrap-select.version}/js/bootstrap-select.min.js\"></script>\n     <script src=\"../webjars/FileSaver.js/${fileSaver.version}/FileSaver.js\"></script>\n     <script src=\"../webjars/lodash/${lodash.version}/lodash.min.js\"></script>\n-    <script src=\"../webjars/moment/${momentjs.version}/moment.js\"></script>\n-    <script src=\"../webjars/moment-jdateformatparser/${moment-jdateformatparser.version}/moment-jdateformatparser.js\"></script>\n     <!--main angular application-->\n     <script src=\"js/app.js\"></script>\n     <!--services-->"},{"sha":"7d09286fdae8c481b4d1911067a5c1a882666451","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicPlainAttribute.js","status":"modified","additions":42,"deletions":27,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttribute.js?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n 'use strict';\n \n angular.module('self')\n@@ -34,8 +35,8 @@ angular.module('self')\n                 switch (schema.type) {\n                   case \"Long\":\n                   case \"Double\":\n-                    $scope.user.plainAttrs[schema.key].values[index] = Number($scope.user.plainAttrs[schema.key].values[index])\n-                            || undefined;\n+                    $scope.user.plainAttrs[schema.key].values[index] = Number($scope.user.plainAttrs[schema.key]\n+                            .values[index]) || undefined;\n                     break;\n                   case \"Enum\":\n                     $scope.enumerationValues = [];\n@@ -49,9 +50,6 @@ angular.module('self')\n                   case \"Binary\":\n \n                     $scope.userFile = $scope.userFile || '';\n-                    //for multivalue fields \n-//                    $scope.fileInputId = \"fileInputId_\" + index;\n-\n                     $element.bind(\"change\", function (changeEvent) {\n                       $scope.$apply(function () {\n                         var reader = new FileReader();\n@@ -84,25 +82,28 @@ angular.module('self')\n                       $(\"#fileInput\").replaceWith($(\"#fileInput\").clone(true));\n                     };\n                     break;\n+\n                   case \"Date\":\n-                    $scope.format = $scope.schema.conversionPattern;\n-                    var temporaryDate = moment($scope.user.plainAttrs[schema.key].values[index], moment().toMomentFormatString($scope.format));\n-                    if(temporaryDate.isValid()){\n-                      $scope.selectedDate = temporaryDate.toDate();  \n+                    var dateInMs = $scope.user.plainAttrs[schema.key].values[index];\n+                    console.debug(\"received date in milliseconds\", dateInMs);\n+                    if (dateInMs) {\n+                      var temporaryDate = new Date(dateInMs * 1);\n+                      console.debug(\"date-time\", temporaryDate);\n+                      $scope.selectedDate = temporaryDate;\n+                      $scope.selectedTime = temporaryDate;\n                     }\n-                    else{\n-                      $scope.selectedDate = $scope.user.plainAttrs[schema.key].values[index];\n-                    }                    \n-                    $scope.includeTimezone = false;\n-\n-                    $scope.bindDateToModel = function (selectedDate, format) {                                       \n-                      if (selectedDate) {\n-                        selectedDate = moment(selectedDate).format(moment().toMomentFormatString(format));\n-                        //removing from selectedDate existing quotes, since moment doesn't remove the from the pattern\n-                        var dateGood = selectedDate.toString().replace(/'/g, \"\");\n-                        $scope.user.plainAttrs[schema.key].values[index] = dateGood;\n-                      } else {\n-                        $scope.user.plainAttrs[schema.key].values[index] = selectedDate;                        \n+\n+                    $scope.bindDateToModel = function (selectedDate, selectedTime) {\n+                      if (selectedDate && selectedTime) {\n+                        var extractedDate = selectedDate.toString().substring(0, 15);\n+                        console.debug(\"selectedDate: \", extractedDate);\n+                        var extractedTime = selectedTime.toString().substring(16);\n+                        console.debug(\"selectedTime: \", extractedTime);\n+                        var resultDate = extractedDate + ' ' + extractedTime;\n+                        var tmpdate = new Date(resultDate);\n+                        var milliseconds = tmpdate.getTime();\n+                        console.debug(\"resultDate in milliseconds\", milliseconds);\n+                        $scope.user.plainAttrs[schema.key].values[index] = milliseconds;\n                       }\n                     };\n \n@@ -124,11 +125,11 @@ angular.module('self')\n                     $scope.maxDate = new Date(2050, 5, 22);\n \n                     $scope.open = function ($event) {\n-                      $scope.status.opened = true;                      \n+                      $scope.status.opened = true;\n                     };\n \n                     $scope.setDate = function (year, month, day) {\n-                      $scope.user.plainAttrs[schema.key].values[index] = new Date(year, month, day);                      \n+                      $scope.user.plainAttrs[schema.key].values[index] = new Date(year, month, day);\n                     };\n \n                     $scope.dateOptions = {\n@@ -168,12 +169,27 @@ angular.module('self')\n                         }\n                       }\n \n-                    };                    \n+                    };\n+\n+                    //TIME PICKER\n+                    $scope.selectedTime = $scope.selectedDate;\n+                    $scope.hstep = 1;\n+                    $scope.mstep = 1;\n+\n+                    $scope.options = {\n+                      hstep: [1, 2, 3],\n+                      mstep: [1, 5, 10, 15, 25, 30]\n+                    };\n+\n+                    $scope.ismeridian = true;\n+                    $scope.toggleMode = function () {\n+                      $scope.ismeridian = !$scope.ismeridian;\n+                    };\n                     break;\n \n                   case \"Boolean\":\n                     $scope.user.plainAttrs[schema.key].values[index] =\n-                           $scope.user.plainAttrs[schema.key].values[index] == \"true\" ? true : false;\n+                            $scope.user.plainAttrs[schema.key].values[index] == \"true\" ? true : false;\n                     break;\n \n                 }\n@@ -188,6 +204,5 @@ angular.module('self')\n                         });\n               });\n             },\n-            //replace: true\n           };\n         });"},{"sha":"d278730c41a62fb786c591a4ad623687d81801e4","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/dynamicPlainAttribute.html","status":"modified","additions":30,"deletions":13,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttribute.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttribute.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FdynamicPlainAttribute.html?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -16,6 +16,7 @@\n specific language governing permissions and limitations\n under the License.\n -->\n+\n <div ng-switch=\"schema.type\" >\n   <input ng-switch-when=\"String\" class=\"form-control\" type=\"text\"\n          ng-model=\"user.plainAttrs[schema.key].values[index]\"\n@@ -36,29 +37,45 @@\n   <input ng-switch-when=\"Double\" class=\"form-control\" type=\"number\" ng-model=\"user.plainAttrs[schema.key].values[index]\"\n          ng-required=\"{{schema.mandatoryCondition}}\" validate=\"true\"\n          ng-init=\"initAttribute(schema, index)\" name=\"{{schema.key}}\"/>\n-  <p ng-switch-when=\"Date\" class=\"input-group\" >\n-    <input type=\"text\" class=\"form-control\" \n-           uib-datepicker-popup\n-           ng-model=\"selectedDate\"\n-           ng-change=\"bindDateToModel(selectedDate, format)\"\n-           min-date=\"minDate\" max-date=\"maxDate\"\n-           is-open=\"status.opened\" datepicker-options=\"dateOptions\"\n-           ng-required=\"{{schema.mandatoryCondition}}\" close-text=\"Close\" ng-init=\"initAttribute(schema, index)\"/>\n-    <span class=\"input-group-btn\">\n-      <button type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button>\n+\n+  <div ng-switch-when=\"Date\" id=\"date\">\n+    <span id=\"datetime\">\n+      <input type=\"text\" class=\"form-control\" \n+             uib-datepicker-popup\n+             ng-model=\"selectedDate\"\n+             ng-change=\"bindDateToModel(selectedDate, selectedTime)\"\n+             min-date=\"minDate\" max-date=\"maxDate\"\n+             is-open=\"status.opened\" datepicker-options=\"dateOptions\"\n+             ng-required=\"{{schema.mandatoryCondition}}\" close-text=\"Close\"\n+             ng-init=\"initAttribute(schema, index)\"/>\n+    </span>\n+    <span>\n+      <button type=\"button\" class=\"btn btn-default\" style=\"margin-top:35px;\" ng-click=\"open($event)\" >\n+        <i class=\"glyphicon glyphicon-calendar\"></i>\n+      </button>\n+    </span>\n+    <span id=\"timepicker\" ng-if=\"(schema.conversionPattern.indexOf('H') > -1 ||\n+                schema.conversionPattern.indexOf('h') > -1)\">\n+      <uib-timepicker ng-model=\"selectedTime\" \n+                      ng-change=\"bindDateToModel(selectedDate, selectedTime)\"\n+                      hour-step=\"hstep\" minute-step=\"mstep\" show-meridian=\"ismeridian\">\n+      </uib-timepicker>\n     </span>\n-  </p>\n+  </div>\n \n   <div ng-switch-when=\"Enum\" ng-init=\"initAttribute(schema, index)\">\n     <select class=\"form-control\"\n             ng-model=\"user.plainAttrs[schema.key].values[index]\"\n             ng-required=\"{{schema.mandatoryCondition}}\">\n-      <option ng-repeat=\"value in enumerationValues\" value=\"{{value}}\">{{schema.enumerationKeys[$index]|| value}}</option>\n+      <option ng-repeat=\"value in enumerationValues\" value=\"{{value}}\">\n+        {{schema.enumerationKeys[$index]|| value}}\n+      </option>\n     </select>\n   </div>\n \n   <div ng-switch-when=\"Binary\" ng-init=\"initAttribute(schema, index)\">\n-    <div enctype=\"multipart/form-data\" accept-charset=\"UTF-8\">\n+    <!--<div enctype=\"multipart/form-data\" accept-charset=\"UTF-8\">-->\n+    <div >\n       <input id=\"fileInput\" type=\"file\" ng-required=\"{{schema.mandatoryCondition}}\"/>\n       <button type=\"button\" title=\"Download file\" class=\"fileButton btn btn-default btn-sm\" ng-click=\"download()\">\n         <i class=\"glyphicon glyphicon-download\" ></i>"},{"sha":"e30e92113eaf7512bc6056b42aab9d56cdc4160e","filename":"deb/enduser/LICENSE","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/deb%2Fenduser%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/deb%2Fenduser%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fenduser%2FLICENSE?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -763,15 +763,6 @@ This is licensed under the MIT license, see above.\n \n ==\n \n-For Moment.js (http://momentjs.com/):\n-This is licensed under the MIT license, see above.\n-\n-==\n-\n-For moment-jdateformatparser (https://github.com/MadMG/moment-jdateformatparser):\n-This is licensed under the MIT license, see above.\n-\n-==\n \n For Web Services Description Language for Java (http://wsdl4j.sourceforge.net/):\n This is licensed under the CPL:"},{"sha":"0b624258cfbff62e0dfb17126e49626582dbb632","filename":"deb/enduser/NOTICE","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/deb%2Fenduser%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/deb%2Fenduser%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fenduser%2FNOTICE?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -134,16 +134,6 @@ Copyright (c) 2012-2015 Kevin Brown, Igor Vaynberg, and Select2 contributors\n \n ==\n \n-This product includes software developed by the Moment.js project.\n-Copyright (c) 2011-2016 Tim Wood, Iskren Chernev, Moment.js contributors\n-\n-==\n-\n-This product includes software developed by the moment-jdateformatparser project.\n-Copyright (c) 2013 MadMG\n-\n-==\n-\n This product includes software developed by the Web Services Description Language for Java project.\n Copyright (c) Dice.\n All Rights Reserved."},{"sha":"41c27e67c278ca4a7ae7522aede169a30badcf63","filename":"pom.xml","status":"modified","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -409,8 +409,6 @@ under the License.\n     <kendo-ui-core.version>2014.2.716</kendo-ui-core.version>\n     <select2.version>3.4.8</select2.version>\n     <fileSaver.version>0.0.2</fileSaver.version>\n-    <momentjs.version>2.12.0</momentjs.version>\n-    <moment-jdateformatparser.version>1.0.0</moment-jdateformatparser.version>\n     \n     <izpack.version>5.0.8</izpack.version>\n     <httpclient.version>4.3.6</httpclient.version>\n@@ -983,10 +981,6 @@ under the License.\n             <groupId>org.webjars.bower</groupId>\n             <artifactId>summernote</artifactId>\n           </exclusion>\n-          <exclusion>\n-            <groupId>org.webjars</groupId>\n-            <artifactId>momentjs</artifactId>\n-          </exclusion>\n           <exclusion>\n             <groupId>org.webjars</groupId>\n             <artifactId>Eonasdan-bootstrap-datetimepicker</artifactId>\n@@ -1218,17 +1212,6 @@ under the License.\n         <artifactId>FileSaver.js</artifactId>\n         <version>${fileSaver.version}</version>\n       </dependency>\n-      <dependency>\n-        <groupId>org.webjars.npm</groupId>\n-        <artifactId>moment</artifactId>\n-        <version>${momentjs.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.webjars.npm</groupId>\n-        <artifactId>moment-jdateformatparser</artifactId>\n-        <version>${moment-jdateformatparser.version}</version>\n-      </dependency>\n-\n       <dependency>\n         <groupId>com.beust</groupId>\n         <artifactId>jcommander</artifactId>"},{"sha":"746fb50521d0f618264c1df275e5774561726c99","filename":"standalone/LICENSE","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/standalone%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/standalone%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/standalone%2FLICENSE?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -1117,16 +1117,6 @@ This is licensed under the MIT license, see above.\n \n ==\n \n-For Moment.js (http://momentjs.com/):\n-This is licensed under the MIT license, see above.\n-\n-==\n-\n-For moment-jdateformatparser (https://github.com/MadMG/moment-jdateformatparser):\n-This is licensed under the MIT license, see above.\n-\n-==\n-\n For SnakeYAML (http://www.snakeyaml.org/):\n This is licensed under the AL 2.0, see above.\n "},{"sha":"5d9afb633f055c2aa1031c811faaf2bbdf4696f4","filename":"standalone/NOTICE","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/af21e80106538f12c0c0ed2e2b94bf3344823f9c/standalone%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/af21e80106538f12c0c0ed2e2b94bf3344823f9c/standalone%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/standalone%2FNOTICE?ref=af21e80106538f12c0c0ed2e2b94bf3344823f9c","patch":"@@ -252,16 +252,6 @@ Copyright (c) 2012-2015 Kevin Brown, Igor Vaynberg, and Select2 contributors\n \n ==\n \n-This product includes software developed by the Moment.js project.\n-Copyright (c) 2011-2016 Tim Wood, Iskren Chernev, Moment.js contributors\n-\n-==\n-\n-This product includes software developed by the moment-jdateformatparser project.\n-Copyright (c) 2013 MadMG\n-\n-==\n-\n This product includes software developed by the SnakeYAML project.\n \n =="}]}