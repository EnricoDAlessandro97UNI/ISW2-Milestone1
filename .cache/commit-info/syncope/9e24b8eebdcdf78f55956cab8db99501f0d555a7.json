{"sha":"9e24b8eebdcdf78f55956cab8db99501f0d555a7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjllMjRiOGVlYmRjZGY3OGY1NTk1NmNhYjhkYjk5NTAxZjBkNTU1YTc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-22T05:29:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-22T05:32:04Z"},"message":"Reviewing the AssignableCond doc and implementation","tree":{"sha":"e51b94a0ff9463edc6264a8117ee00df2f5aa146","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e51b94a0ff9463edc6264a8117ee00df2f5aa146"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9e24b8eebdcdf78f55956cab8db99501f0d555a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e24b8eebdcdf78f55956cab8db99501f0d555a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9e24b8eebdcdf78f55956cab8db99501f0d555a7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e24b8eebdcdf78f55956cab8db99501f0d555a7/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d4e098a2916d37824174b026ee7ae9f3004ba833","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d4e098a2916d37824174b026ee7ae9f3004ba833","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d4e098a2916d37824174b026ee7ae9f3004ba833"}],"stats":{"total":32,"additions":15,"deletions":17},"files":[{"sha":"b5b2973c11fd6dc11c279931fe6947473cb7f7dd","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e24b8eebdcdf78f55956cab8db99501f0d555a7/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e24b8eebdcdf78f55956cab8db99501f0d555a7/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=9e24b8eebdcdf78f55956cab8db99501f0d555a7","patch":"@@ -361,9 +361,7 @@ public NumbersInfo numbers() {\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n-    public Pair<Integer, List<GroupTO>> searchAssignableGroups(\n-            final String realm, final int page, final int size) {\n-\n+    public Pair<Integer, List<GroupTO>> searchAssignableGroups(final String realm, final int page, final int size) {\n         AssignableCond assignableCond = new AssignableCond();\n         assignableCond.setRealmFullPath(realm);\n         SearchCond searchCond = SearchCond.getLeafCond(assignableCond);"},{"sha":"93a4d1cbb617dcc189a4a52c04f7cb588ab99ee0","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/AssignableCond.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e24b8eebdcdf78f55956cab8db99501f0d555a7/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAssignableCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e24b8eebdcdf78f55956cab8db99501f0d555a7/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAssignableCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAssignableCond.java?ref=9e24b8eebdcdf78f55956cab8db99501f0d555a7","patch":"@@ -25,11 +25,11 @@ public class AssignableCond extends AbstractSearchCond {\n     private String realmFullPath;\n \n     /**\n-     * Whether this condition should be evaluated from the assignable group (default) - or instead the\n-     * assignee - point of view.\n+     * Whether this condition should be evaluated from the assignable group's or instead the\n+     * assignee's point of view (default).\n      * The converter from FIQL will ignore this setting, which is meant for internal usage.\n      */\n-    private boolean fromGroup = true;\n+    private boolean fromGroup = false;\n \n     public String getRealmFullPath() {\n         return realmFullPath;"},{"sha":"b6d37e6e4a7eeb3298bff0c5f5d7d6b161777825","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e24b8eebdcdf78f55956cab8db99501f0d555a7/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e24b8eebdcdf78f55956cab8db99501f0d555a7/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=9e24b8eebdcdf78f55956cab8db99501f0d555a7","patch":"@@ -608,15 +608,15 @@ private String getQuery(final AssignableCond cond, final List<Object> parameters\n         StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n                 append(svs.field().name).append(\" WHERE (\");\n         if (cond.isFromGroup()) {\n-            for (Realm current = realm; current.getParent() != null; current = current.getParent()) {\n+            for (Realm current : realmDAO.findDescendants(realm)) {\n                 query.append(\"realm_id=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n             }\n-            query.append(\"realm_id=?\").append(setParameter(parameters, realmDAO.getRoot().getKey()));\n+            query.setLength(query.length() - 4);\n         } else {\n-            for (Realm current : realmDAO.findDescendants(realm)) {\n+            for (Realm current = realm; current.getParent() != null; current = current.getParent()) {\n                 query.append(\"realm_id=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n             }\n-            query.setLength(query.length() - 4);\n+            query.append(\"realm_id=?\").append(setParameter(parameters, realmDAO.getRoot().getKey()));\n         }\n         query.append(')');\n "},{"sha":"d777f70242eec3189f1a0075cd15aca03f064aed","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e24b8eebdcdf78f55956cab8db99501f0d555a7/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e24b8eebdcdf78f55956cab8db99501f0d555a7/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=9e24b8eebdcdf78f55956cab8db99501f0d555a7","patch":"@@ -276,7 +276,7 @@ public List<Group> findAll(final int page, final int itemsPerPage) {\n     private SearchCond buildDynMembershipCond(final String baseCondFIQL, final Realm groupRealm) {\n         AssignableCond cond = new AssignableCond();\n         cond.setRealmFullPath(groupRealm.getFullPath());\n-        cond.setFromGroup(false);\n+        cond.setFromGroup(true);\n \n         return SearchCond.getAndCond(SearchCond.getLeafCond(cond), SearchCondConverter.convert(baseCondFIQL));\n     }"},{"sha":"2a60c6a69c45dc956869455da695b3a71cb6b8c0","filename":"ext/elasticsearch/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/ElasticsearchAnySearchDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e24b8eebdcdf78f55956cab8db99501f0d555a7/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e24b8eebdcdf78f55956cab8db99501f0d555a7/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FElasticsearchAnySearchDAO.java?ref=9e24b8eebdcdf78f55956cab8db99501f0d555a7","patch":"@@ -289,14 +289,14 @@ private QueryBuilder getQueryBuilder(final AssignableCond cond) {\n \n         DisMaxQueryBuilder builder = QueryBuilders.disMaxQuery();\n         if (cond.isFromGroup()) {\n+            realmDAO.findDescendants(realm).forEach(current -> {\n+                builder.add(QueryBuilders.termQuery(\"realm\", current.getFullPath()));\n+            });\n+        } else {\n             for (Realm current = realm; current.getParent() != null; current = current.getParent()) {\n                 builder.add(QueryBuilders.termQuery(\"realm\", current.getFullPath()));\n             }\n             builder.add(QueryBuilders.termQuery(\"realm\", realmDAO.getRoot().getFullPath()));\n-        } else {\n-            realmDAO.findDescendants(realm).forEach(current -> {\n-                builder.add(QueryBuilders.termQuery(\"realm\", current.getFullPath()));\n-            });\n         }\n \n         return builder;"},{"sha":"3742dcfe384753618e77716152d539e075331509","filename":"src/main/asciidoc/reference-guide/concepts/realms.adoc","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9e24b8eebdcdf78f55956cab8db99501f0d555a7/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Frealms.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9e24b8eebdcdf78f55956cab8db99501f0d555a7/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Frealms.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Frealms.adoc?ref=9e24b8eebdcdf78f55956cab8db99501f0d555a7","patch":"@@ -36,8 +36,8 @@ smaller pools.\n \n This has consequences on <<memberships-relationships,memberships and relationships>>:\n \n-* A User or an Any Object can be members of Groups in the same realm or in one of the sub-realms.\n-* A User or an Any object can be in a relation with Any Objects in the same realm or in one of the sub-realms.\n+* A User or an Any Object can be members of Groups in the same realm or in one of the parent realms.\n+* A User or an Any object can be in a relation with Any Objects in the same realm or in one of parent realms.\n \n Moreover, this partition allows fine-grained control over policy enforcement and, alongside with\n <<entitlements,entitlements>> and <<roles,roles>>, helps to implement"}]}