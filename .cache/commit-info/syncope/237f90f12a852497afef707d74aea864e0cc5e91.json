{"sha":"237f90f12a852497afef707d74aea864e0cc5e91","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIzN2Y5MGYxMmE4NTI0OTdhZmVmNzA3ZDc0YWVhODY0ZTBjYzVlOTE=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-14T13:10:01Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-14T13:10:01Z"},"message":"Fixed SYNCOPE-585","tree":{"sha":"e79911e2db3d610d675cee9f2c4093eaa044a62d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e79911e2db3d610d675cee9f2c4093eaa044a62d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/237f90f12a852497afef707d74aea864e0cc5e91","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/237f90f12a852497afef707d74aea864e0cc5e91","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/237f90f12a852497afef707d74aea864e0cc5e91","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/237f90f12a852497afef707d74aea864e0cc5e91/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"87ad997748fa7197584463e2aabcb7745f89f5b0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/87ad997748fa7197584463e2aabcb7745f89f5b0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/87ad997748fa7197584463e2aabcb7745f89f5b0"}],"stats":{"total":163,"additions":115,"deletions":48},"files":[{"sha":"90286177181dff5901e77d34938d7331f8189372","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/NotificationCommand.java","status":"modified","additions":115,"deletions":48,"changes":163,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/237f90f12a852497afef707d74aea864e0cc5e91/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/237f90f12a852497afef707d74aea864e0cc5e91/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java?ref=237f90f12a852497afef707d74aea864e0cc5e91","patch":"@@ -18,74 +18,141 @@\n  */\n package org.apache.syncope.client.cli.commands;\n \n-import com.beust.jcommander.Parameter;\n-import com.beust.jcommander.Parameters;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.client.cli.messages.UsageMessages;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.NotificationTO;\n import org.apache.syncope.common.rest.api.service.NotificationService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-@Parameters(\n-        commandNames = \"notification\",\n-        optionPrefixes = \"-\",\n-        separators = \"=\",\n-        commandDescription = \"Apache Syncope notification service\")\n+@Command(name = \"notification\")\n public class NotificationCommand extends AbstractCommand {\n \n     private static final Logger LOG = LoggerFactory.getLogger(NotificationCommand.class);\n \n-    private final String helpMessage = \"Usage: notification [options]\\n\"\n+    private static final String HELP_MESSAGE = \"Usage: notification [options]\\n\"\n             + \"  Options:\\n\"\n-            + \"    -h, --help \\n\"\n-            + \"    -l, --list \\n\"\n-            + \"    -r, --read \\n\"\n-            + \"       Syntax: -r={NOTIFICATION-ID} \\n\"\n-            + \"    -d, --delete \\n\"\n-            + \"       Syntax: -d={NOTIFICATION-ID}\";\n+            + \"    --help \\n\"\n+            + \"    --list \\n\"\n+            + \"    --read \\n\"\n+            + \"       Syntax: --read {NOTIFICATION-ID} \\n\"\n+            + \"    --delete \\n\"\n+            + \"       Syntax: --delete {NOTIFICATION-ID}\";\n \n-    @Parameter(names = { \"-r\", \"--read\" })\n-    private Long notificationIdToRead = -1L;\n+    @Override\n+    public void execute(final Input input) {\n+        LOG.debug(\"Option: {}\", input.getOption());\n+        LOG.debug(\"Parameters:\");\n+        for (final String parameter : input.getParameters()) {\n+            LOG.debug(\"   > \" + parameter);\n+        }\n \n-    @Parameter(names = { \"-d\", \"--delete\" })\n-    private Long notificationIdToDelete = -1L;\n+        final String[] parameters = input.getParameters();\n+\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(Options.HELP.getOptionName());\n+        }\n \n-    @Override\n-    public void execute() {\n         final NotificationService notificationService = SyncopeServices.get(NotificationService.class);\n+        switch (Options.fromName(input.getOption())) {\n+            case LIST:\n+                try {\n+                    for (final NotificationTO notificationTO : notificationService.list()) {\n+                        System.out.println(notificationTO);\n+                    }\n+                } catch (final SyncopeClientException ex) {\n+                    UsageMessages.printErrorMessage(ex.getMessage());\n+                }\n+                break;\n+            case READ:\n+                final String readErrorMessage = UsageMessages.optionCommandMessage(\n+                        \"notification --read {NOTIFICATION-ID} {NOTIFICATION-ID} [...]\");\n+                if (parameters.length >= 1) {\n+                    for (final String parameter : parameters) {\n+                        try {\n+                            System.out.println(notificationService.read(Long.valueOf(parameter)));\n+                        } catch (final NumberFormatException ex) {\n+                            System.out.println(\"Error reading \" + parameter + \". It isn't a valid notification id\");\n+                        } catch (final WebServiceException | SyncopeClientException ex) {\n+                            if (ex.getMessage().startsWith(\"NotFound\")) {\n+                                UsageMessages.printErrorMessage(\"Notification \" + parameter + \" doesn't exists!\");\n+                            } else {\n+                                UsageMessages.printErrorMessage(ex.getMessage());\n+                            }\n+                        }\n+                    }\n+                } else {\n+                    System.out.println(readErrorMessage);\n+                }\n+                break;\n+            case DELETE:\n+                final String deleteErrorMessage = UsageMessages.optionCommandMessage(\n+                        \"notification --delete {NOTIFICATION-ID} {NOTIFICATION-ID} [...]\");\n+\n+                if (parameters.length >= 1) {\n+                    for (final String parameter : parameters) {\n+                        try {\n+                            notificationService.delete(Long.valueOf(parameter));\n+                            System.out.println(\"\\n - Notification \" + parameter + \" deleted!\\n\");\n+                        } catch (final WebServiceException | SyncopeClientException ex) {\n+                            if (ex.getMessage().startsWith(\"NotFound\")) {\n+                                UsageMessages.printErrorMessage(\"Notification \" + parameter + \" doesn't exists!\");\n+                            } else {\n+                                UsageMessages.printErrorMessage(ex.getMessage());\n+                            }\n+                        } catch (final NumberFormatException ex) {\n+                            UsageMessages.printErrorMessage(\n+                                    \"Error reading \" + parameter + \". It isn't a valid notification id\");\n+                        }\n+                    }\n+                } else {\n+                    System.out.println(deleteErrorMessage);\n+                }\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                System.out.println(input.getOption() + \" is not a valid option.\");\n+                System.out.println(\"\");\n+                System.out.println(HELP_MESSAGE);\n+        }\n+    }\n \n-        LOG.debug(\"Notification service successfully created\");\n+    private enum Options {\n \n-        if (help) {\n-            LOG.debug(\"- notification help command\");\n-            System.out.println(helpMessage);\n-        } else if (list) {\n-            LOG.debug(\"- notification list command\");\n-            try {\n-                for (final NotificationTO notificationTO : notificationService.list()) {\n-                    System.out.println(notificationTO);\n+        HELP(\"--help\"),\n+        LIST(\"--list\"),\n+        READ(\"--read\"),\n+        DELETE(\"--delete\");\n+\n+        private final String optionName;\n+\n+        private Options(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static Options fromName(final String name) {\n+            Options optionToReturn = HELP;\n+            for (final Options option : Options.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n                 }\n-            } catch (final SyncopeClientException ex) {\n-                System.out.println(\" - Error: \" + ex.getMessage());\n-            }\n-        } else if (notificationIdToRead > -1L) {\n-            LOG.debug(\"- notification read {} command\", notificationIdToRead);\n-            try {\n-                System.out.println(notificationService.read(notificationIdToRead));\n-            } catch (final SyncopeClientException ex) {\n-                System.out.println(\" - Error: \" + ex.getMessage());\n-            }\n-        } else if (notificationIdToDelete > -1L) {\n-            try {\n-                LOG.debug(\"- notification delete {} command\", notificationIdToDelete);\n-                notificationService.delete(notificationIdToDelete);\n-                System.out.println(\" - Notification \" + notificationIdToDelete + \" deleted!\");\n-            } catch (final SyncopeClientException ex) {\n-                System.out.println(\" - Error: \" + ex.getMessage());\n             }\n-        } else {\n-            System.out.println(helpMessage);\n+            return optionToReturn;\n         }\n     }\n "}]}