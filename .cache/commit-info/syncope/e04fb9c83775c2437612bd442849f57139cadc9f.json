{"sha":"e04fb9c83775c2437612bd442849f57139cadc9f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwNGZiOWM4Mzc3NWMyNDM3NjEyYmQ0NDI4NDlmNTcxMzljYWRjOWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-07-30T12:25:28Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-07-30T12:25:28Z"},"message":"[SYNCOPE-116] Reverting (part of) what done for SYNCOPE-54 - adding a boolean 'executed' field to NotificationTask for NotificationJob to be able to fetch only non-executed tasks\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1367065 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"41689b3e525cbf52a8f7c38646f6ab1afd360013","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/41689b3e525cbf52a8f7c38646f6ab1afd360013"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e04fb9c83775c2437612bd442849f57139cadc9f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e04fb9c83775c2437612bd442849f57139cadc9f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e04fb9c83775c2437612bd442849f57139cadc9f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e04fb9c83775c2437612bd442849f57139cadc9f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"49bf4b8f3db79de56f35888048066f6345eba04a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/49bf4b8f3db79de56f35888048066f6345eba04a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/49bf4b8f3db79de56f35888048066f6345eba04a"}],"stats":{"total":110,"additions":57,"deletions":53},"files":[{"sha":"ecfd07b73b94396645a5e9e09f35c66c7a4d2bdd","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":1,"deletions":12,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -259,23 +259,12 @@ private String getRecipientEmail(\n     public TaskExec storeExecAndUpdateLatestExecStatus(final TaskExec execution) {\n         NotificationTask task = taskDAO.find(execution.getTask().getId());\n         task.addExec(execution);\n-        task.setLatestExecStatus(execution.getStatus());\n+        task.setExecuted(true);\n         task = taskDAO.save(task);\n         // NotificationTasks always have a single execution at most\n         return task.getExecs().get(0);\n     }\n \n-    /**\n-     * Update latest execution status of a NotificationTask.\n-     *\n-     * @param execution task execution\n-     */\n-    public void updateLatestExecStatus(final TaskExec execution) {\n-        NotificationTask task = taskDAO.find(execution.getTask().getId());\n-        task.setLatestExecStatus(execution.getStatus());\n-        taskDAO.save(task);\n-    }\n-\n     public Map<String, String> findAll() {\n         Map<String, String> syncopeConfMap = new HashMap<String, String>();\n         for (SyncopeConf conf : confDAO.findAll()) {"},{"sha":"29e1c5e7223f8a566f8264da08fe1011abdb0d62","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/NotificationTask.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotificationTask.java?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -20,13 +20,16 @@\n \n import java.util.HashSet;\n import java.util.Set;\n+import javax.persistence.Basic;\n import javax.persistence.Column;\n import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n import javax.persistence.FetchType;\n import javax.persistence.Lob;\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.types.TraceLevel;\n \n@@ -56,6 +59,11 @@ public class NotificationTask extends Task {\n     @Lob\n     private String htmlBody;\n \n+    @Basic\n+    @Min(0)\n+    @Max(1)\n+    private Integer executed;\n+\n     @Enumerated(EnumType.STRING)\n     @NotNull\n     private TraceLevel traceLevel;\n@@ -64,6 +72,7 @@ public NotificationTask() {\n         super();\n \n         recipients = new HashSet<String>();\n+        executed = getBooleanAsInteger(false);\n     }\n \n     public Set<String> getRecipients() {\n@@ -117,6 +126,14 @@ public void setHtmlBody(final String htmlBody) {\n         this.htmlBody = htmlBody;\n     }\n \n+    public boolean isExecuted() {\n+        return isBooleanAsInteger(executed);\n+    }\n+\n+    public void setExecuted(boolean executed) {\n+        this.executed = getBooleanAsInteger(executed);\n+    }\n+\n     public TraceLevel getTraceLevel() {\n         return traceLevel;\n     }"},{"sha":"f018a302e3d5e9162d074d163284d745fb7618f5","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/Task.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -21,7 +21,6 @@\n import java.util.ArrayList;\n import java.util.List;\n import javax.persistence.CascadeType;\n-import javax.persistence.Column;\n import javax.persistence.DiscriminatorColumn;\n import javax.persistence.Entity;\n import javax.persistence.Id;\n@@ -41,9 +40,6 @@ public class Task extends AbstractBaseBean {\n     @Id\n     private Long id;\n \n-    @Column(nullable = true)\n-    private String latestExecStatus;\n-\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n     private List<TaskExec> executions;\n \n@@ -57,14 +53,6 @@ public Long getId() {\n         return id;\n     }\n \n-    public String getLatestExecStatus() {\n-        return latestExecStatus;\n-    }\n-\n-    public void setLatestExecStatus(String latestExecStatus) {\n-        this.latestExecStatus = latestExecStatus;\n-    }\n-\n     public boolean addExec(TaskExec exec) {\n         return exec != null && !executions.contains(exec) && executions.add(exec);\n     }"},{"sha":"ad8755bdcd8f90cbc976a16e7f02e7afd33cebe9","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/TaskDAOImpl.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\n import javax.persistence.Query;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.NotificationTask;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SchedTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n@@ -53,14 +54,18 @@ private <T extends Task> StringBuilder buildfindAllQuery(final Class<T> referenc\n     @Override\n     public <T extends Task> List<T> findToExec(final Class<T> reference) {\n         StringBuilder queryString = buildfindAllQuery(reference);\n-        \n+\n         if (SchedTask.class.equals(reference)) {\n             queryString.append(\"AND \");\n         } else {\n             queryString.append(\"WHERE \");\n         }\n-        \n-        queryString.append(\"e.latestExecStatus IS NULL \");\n+\n+        if (reference.equals(NotificationTask.class)) {\n+            queryString.append(\"e.executed = 0 \");\n+        } else {\n+            queryString.append(\"e.executions IS EMPTY \");\n+        }\n         queryString.append(\"ORDER BY e.id DESC\");\n \n         final Query query = entityManager.createQuery(queryString.toString());"},{"sha":"52964f725833d1642a32d0a649173033fb3980db","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ReportDataBinder.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -20,16 +20,6 @@\n \n import java.util.HashSet;\n import java.util.Set;\n-import org.quartz.Scheduler;\n-import org.quartz.SchedulerException;\n-import org.quartz.Trigger;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n-import org.springframework.stereotype.Component;\n-import org.springframework.util.ClassUtils;\n import org.apache.syncope.client.report.ReportletConf;\n import org.apache.syncope.client.to.ReportExecTO;\n import org.apache.syncope.client.to.ReportTO;\n@@ -40,6 +30,16 @@\n import org.apache.syncope.core.persistence.dao.ReportExecDAO;\n import org.apache.syncope.core.report.Reportlet;\n import org.apache.syncope.core.report.ReportletConfClass;\n+import org.quartz.Scheduler;\n+import org.quartz.SchedulerException;\n+import org.quartz.Trigger;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.ClassUtils;\n \n @Component\n public class ReportDataBinder {"},{"sha":"bea03b30c5e42282bf5fe31031950c94c138e020","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":20,"deletions":11,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -20,16 +20,6 @@\n \n import javassist.NotFoundException;\n import org.apache.commons.lang.StringUtils;\n-import org.quartz.Scheduler;\n-import org.quartz.SchedulerException;\n-import org.quartz.Trigger;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.BeanUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.http.HttpStatus;\n-import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n-import org.springframework.stereotype.Component;\n import org.apache.syncope.client.to.AbstractAttributableTO;\n import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.MembershipTO;\n@@ -49,9 +39,20 @@\n import org.apache.syncope.core.persistence.beans.Task;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n+import org.apache.syncope.core.persistence.dao.TaskExecDAO;\n import org.apache.syncope.core.util.JexlUtil;\n import org.apache.syncope.core.util.TaskUtil;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n+import org.quartz.Scheduler;\n+import org.quartz.SchedulerException;\n+import org.quartz.Trigger;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n+import org.springframework.stereotype.Component;\n \n @Component\n public class TaskDataBinder {\n@@ -61,13 +62,16 @@ public class TaskDataBinder {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(TaskDataBinder.class);\n \n-    private static final String[] IGNORE_TASK_PROPERTIES = {\"executions\", \"resource\", \"user\"};\n+    private static final String[] IGNORE_TASK_PROPERTIES = {\"latestExecStatus\", \"executions\", \"resource\", \"user\"};\n \n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = {\"id\", \"task\"};\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n \n+    @Autowired\n+    private TaskExecDAO taskExecDAO;\n+\n     @Autowired\n     private SchedulerFactoryBean scheduler;\n \n@@ -217,6 +221,11 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n         TaskTO taskTO = taskUtil.newTaskTO();\n         BeanUtils.copyProperties(task, taskTO, IGNORE_TASK_PROPERTIES);\n \n+        TaskExec latestExec = taskExecDAO.findLatestStarted(task);\n+        taskTO.setLatestExecStatus(latestExec == null\n+                ? \"\"\n+                : latestExec.getStatus());\n+\n         for (TaskExec execution : task.getExecs()) {\n             taskTO.addExecution(getTaskExecTO(execution));\n         }"},{"sha":"b09fe7dcf6fae9c7c536430e13ebce7585b88066","filename":"core/src/main/java/org/apache/syncope/core/scheduling/AbstractTaskJob.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FAbstractTaskJob.java?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -88,7 +88,6 @@ public void setTaskId(final Long taskId) {\n \n     @Override\n     public final void execute(final JobExecutionContext context) throws JobExecutionException {\n-\n         task = taskDAO.find(taskId);\n         if (task == null) {\n             throw new JobExecutionException(\"Task \" + taskId + \" not found\");\n@@ -117,7 +116,6 @@ public final void execute(final JobExecutionContext context) throws JobExecution\n             taskExecDAO.save(execution);\n         }\n \n-        task.setLatestExecStatus(execution.getStatus());\n         task = taskDAO.save(task);\n     }\n "},{"sha":"11b9abb7d98e65ce657ea5d4022355b9eea9dad0","filename":"core/src/main/java/org/apache/syncope/core/scheduling/NotificationJob.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FNotificationJob.java?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -201,8 +201,6 @@ public TaskExec executeSingle(final NotificationTask task) {\n \n         if (hasToBeRegistered(execution)) {\n             execution = notificationManager.storeExecAndUpdateLatestExecStatus(execution);\n-        } else {\n-            notificationManager.updateLatestExecStatus(execution);\n         }\n \n         return execution;"},{"sha":"9692dfbe490502b99f7f9a106b51fe93f1ea35ec","filename":"core/src/test/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e04fb9c83775c2437612bd442849f57139cadc9f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=e04fb9c83775c2437612bd442849f57139cadc9f","patch":"@@ -545,7 +545,7 @@ under the License.\n                  mandatoryCondition=\"false\" resource_name=\"resource-ldap\"/>\n                    \n   <Task DTYPE=\"PropagationTask\" id=\"1\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n-        resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\" latestExecStatus=\"SUCCESS\"\n+        resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n   <TaskExec id=\"1\" task_id=\"1\" status=\"SUCCESS\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"2\" propagationMode=\"ONE_PHASE\" propagationOperation=\"CREATE\""}]}