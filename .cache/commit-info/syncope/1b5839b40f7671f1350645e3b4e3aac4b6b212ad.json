{"sha":"1b5839b40f7671f1350645e3b4e3aac4b6b212ad","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFiNTgzOWI0MGY3NjcxZjEzNTA2NDVlM2I0ZTNhYWM0YjZiMjEyYWQ=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-18T12:28:25Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-18T12:28:31Z"},"message":"[SYNCOPE-156] some fixes about object deletes and multifieldpanel","tree":{"sha":"144d23180da8b59e7eb3902b3a447b45286c4188","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/144d23180da8b59e7eb3902b3a447b45286c4188"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1b5839b40f7671f1350645e3b4e3aac4b6b212ad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1b5839b40f7671f1350645e3b4e3aac4b6b212ad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1b5839b40f7671f1350645e3b4e3aac4b6b212ad","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"66c9c3eff1c82e455996c86e50762dab36ebf4d1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/66c9c3eff1c82e455996c86e50762dab36ebf4d1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/66c9c3eff1c82e455996c86e50762dab36ebf4d1"}],"stats":{"total":179,"additions":81,"deletions":98},"files":[{"sha":"9ffef22269125c67bc4b3da83b2364a4d1e566b4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=1b5839b40f7671f1350645e3b4e3aac4b6b212ad","patch":"@@ -134,31 +134,6 @@ public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n                             LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n                         }\n                         ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n-\n-//                        try {\n-//                            final GroupTO modelObject = (GroupTO) restClient.\n-//                                    delete(model.getObject().getETagValue(), model.getObject().getKey());\n-//\n-//                            final IModel<GroupTO> model = new CompoundPropertyModel<>(modelObject);\n-//                            modal.setFormModel(model);\n-//\n-//                            target.add(modal.setContent(new ResultStatusModal.Builder<GroupTO>(\n-//                                    modal, getPage().getPageReference(), modelObject).build()));\n-//\n-//                            modal.header(\n-//                                    new Model<String>(MessageFormat.format(getString(\"any.delete\"), anyTO.getKey())));\n-//                            modal.show(true);\n-//\n-//                            //editmodal.setContent(new ResultStatusModal.Builder(editmodal, groupTO).build());\n-////                            editModal.addOrReplace(new GroupModalPanel(\n-////                                    BaseModal.getModalContentId(), editModal, (GroupTO) model.getObject()));\n-////\n-////                            target.add(editModal);\n-////                            editModal.show(target);\n-//                        } catch (SyncopeClientException scce) {\n-//                            error(getString(Constants.ERROR) + \": \" + scce.getMessage());\n-//                            LOG.error(\"While deleting object {}\", anyTO.getKey(), scce);\n-//                        }\n                     }\n                 }, ActionLink.ActionType.DELETE, entitlement);\n "},{"sha":"aa58e19e3746434dcb28879595146fb19d71411c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=1b5839b40f7671f1350645e3b4e3aac4b6b212ad","patch":"@@ -99,18 +99,16 @@ public PlainSchemaDetails(\n                 new AjaxTextFieldPanel(\"panel\", \"enumerationValues\", new Model<String>(null));\n \n         enumerationValues = new MultiFieldPanel.Builder<>(\n-                new ListModel<String>()).build(\n+                new ListModel<String>(getEnumValuesAsList(((PlainSchemaTO) schemaTO).getEnumerationValues()))).build(\n                         \"enumerationValues\",\n                         \"enumerationValues\",\n                         enumerationValuesPanel);\n-        enumerationValues.setModelObject(getEnumValuesAsList(((PlainSchemaTO) schemaTO).getEnumerationValues()));\n \n         enumerationKeys = new MultiFieldPanel.Builder<>(\n-                new ListModel<String>()).build(\n+                new ListModel<String>(getEnumValuesAsList(((PlainSchemaTO) schemaTO).getEnumerationKeys()))).build(\n                         \"enumerationKeys\",\n                         \"enumerationKeys\",\n                         new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model<String>()));\n-        enumerationKeys.setModelObject(getEnumValuesAsList(((PlainSchemaTO) schemaTO).getEnumerationKeys()));\n \n         final WebMarkupContainer enumParams = new WebMarkupContainer(\"enumParams\");\n         enumParams.setOutputMarkupPlaceholderTag(true);"},{"sha":"ab99f2ba4c38ee28b60a749231ea64d796e9a2c8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":78,"deletions":68,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=1b5839b40f7671f1350645e3b4e3aac4b6b212ad","patch":"@@ -71,6 +71,8 @@ private MultiFieldPanel(\n         container.add(form);\n         // -----------------------\n \n+        view = new InnerView(\"view\", name, model);\n+\n         final List<E> obj = model.getObject();\n         if (obj == null || obj.isEmpty()) {\n             form.addOrReplace(getNoDataFragment(model, name));\n@@ -88,75 +90,7 @@ private Fragment getNoDataFragment(final IModel<List<E>> model, final String lab\n \n     private Fragment getDataFragment(final IModel<List<E>> model, final String label) {\n         final Fragment contentFragment = new Fragment(\"content\", \"dataFragment\", MultiFieldPanel.this);\n-\n-        view = new ListView<E>(\"view\", model) {\n-\n-            private static final long serialVersionUID = -9180479401817023838L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<E> item) {\n-                final FieldPanel<? extends Serializable> fieldPanel = panelTemplate.clone();\n-                fieldPanel.setIndex(item.getIndex());\n-                fieldPanel.setNewModel(item);\n-                fieldPanel.settingsDependingComponents();\n-\n-                if (eventTemplate) {\n-                    fieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                        private static final long serialVersionUID = -1107858522700306810L;\n-\n-                        @Override\n-                        protected void onUpdate(final AjaxRequestTarget target) {\n-                            send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n-                        }\n-                    });\n-                }\n-\n-                item.add(fieldPanel.hideLabel().setRenderBodyOnly(true));\n-\n-                final AjaxSubmitLink minus = new AjaxSubmitLink(\"drop\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                        //Drop current component\n-                        model.getObject().remove(item.getModelObject());\n-                        fieldPanel.getField().clearInput();\n-\n-                        if (model.getObject().isEmpty()) {\n-                            form.addOrReplace(getNoDataFragment(model, label));\n-                        }\n-\n-                        target.add(container);\n-\n-                        if (eventTemplate) {\n-                            send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n-                        }\n-                    }\n-\n-                    @Override\n-                    protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                        error(getString(Constants.OPERATION_ERROR));\n-                        super.onError(target, form);\n-                    }\n-                };\n-\n-                item.add(minus);\n-\n-                final Fragment fragment;\n-                if (item.getIndex() == model.getObject().size() - 1) {\n-                    fragment = getPlusFragment(model, label);\n-                } else {\n-                    fragment = new Fragment(\"panelPlus\", \"emptyFragment\", MultiFieldPanel.this);\n-                }\n-\n-                item.add(fragment.setRenderBodyOnly(true));\n-            }\n-        };\n-\n         contentFragment.add(view.setOutputMarkupId(true));\n-\n         return contentFragment;\n     }\n \n@@ -301,4 +235,80 @@ protected E newModelObject() {\n             };\n         }\n     }\n+\n+    private final class InnerView extends ListView<E> {\n+\n+        private static final long serialVersionUID = -9180479401817023838L;\n+\n+        private final String label;\n+\n+        private final IModel<List<E>> model;\n+\n+        private InnerView(final String id, final String label, final IModel<List<E>> model) {\n+            super(id, model);\n+            this.label = label;\n+            this.model = model;\n+        }\n+\n+        @Override\n+        protected void populateItem(final ListItem<E> item) {\n+            final FieldPanel<? extends Serializable> fieldPanel = panelTemplate.clone();\n+            fieldPanel.setIndex(item.getIndex());\n+            fieldPanel.setNewModel(item);\n+            fieldPanel.settingsDependingComponents();\n+\n+            if (eventTemplate) {\n+                fieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                    private static final long serialVersionUID = -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n+                    }\n+                });\n+            }\n+\n+            item.add(fieldPanel.hideLabel().setRenderBodyOnly(true));\n+\n+            final AjaxSubmitLink minus = new AjaxSubmitLink(\"drop\") {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                    //Drop current component\n+                    model.getObject().remove(item.getModelObject());\n+                    fieldPanel.getField().clearInput();\n+\n+                    if (model.getObject().isEmpty()) {\n+                        form.addOrReplace(getNoDataFragment(model, label));\n+                    }\n+\n+                    target.add(container);\n+\n+                    if (eventTemplate) {\n+                        send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n+                    }\n+                }\n+\n+                @Override\n+                protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                    error(getString(Constants.OPERATION_ERROR));\n+                    super.onError(target, form);\n+                }\n+            };\n+\n+            item.add(minus);\n+\n+            final Fragment fragment;\n+            if (item.getIndex() == model.getObject().size() - 1) {\n+                fragment = getPlusFragment(model, label);\n+            } else {\n+                fragment = new Fragment(\"panelPlus\", \"emptyFragment\", MultiFieldPanel.this);\n+            }\n+\n+            item.add(fragment.setRenderBodyOnly(true));\n+        }\n+    }\n }"},{"sha":"0f2c16feb7ab7c93436c7314bcd1a75e90f6bb8b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1b5839b40f7671f1350645e3b4e3aac4b6b212ad/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=1b5839b40f7671f1350645e3b4e3aac4b6b212ad","patch":"@@ -131,7 +131,7 @@ public <T extends AnyTO> StatusPanel(\n \n         ListViewPanel.Builder<StatusBean> builder = new ListViewPanel.Builder<StatusBean>(StatusBean.class, pageRef) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = -6809736686861678498L;\n \n             @Override\n             protected Component getValueComponent(final String key, final StatusBean bean) {"}]}