{"sha":"2ac6f8d50daebcc0f1070f77a4df19059cfc2704","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJhYzZmOGQ1MGRhZWJjYzBmMTA3MGY3N2E0ZGYxOTA1OWNmYzI3MDQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-29T14:53:04Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-29T14:53:04Z"},"message":"[SYNCOPE-760] Mail templates are now managed entities, not from filesystem anymore","tree":{"sha":"68c20630d7332e3a647098f08bf8c4c511482c99","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/68c20630d7332e3a647098f08bf8c4c511482c99"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2ac6f8d50daebcc0f1070f77a4df19059cfc2704","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ac6f8d50daebcc0f1070f77a4df19059cfc2704","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2ac6f8d50daebcc0f1070f77a4df19059cfc2704","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a4a9ef568d29a591055dfb7fea625cc9bea28e5b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a4a9ef568d29a591055dfb7fea625cc9bea28e5b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a4a9ef568d29a591055dfb7fea625cc9bea28e5b"}],"stats":{"total":1545,"additions":1184,"deletions":361},"files":[{"sha":"6f68af4bbca52b05042e65181df3730f94d6b4c9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/Info.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -128,15 +128,6 @@ public void logicActions() {\n         }\n     }\n \n-    public void mailTemplates() {\n-        try {\n-            infoResultManager.printMailTemplates(syncopeTO.getMailTemplates());\n-        } catch (final Exception ex) {\n-            LOG.error(\"Information error\", ex);\n-            infoResultManager.genericError(ex.getMessage());\n-        }\n-    }\n-\n     public void mappingItemTransformers() {\n         try {\n             infoResultManager.printMappingItemTransformers(syncopeTO.getMappingItemTransformers());"},{"sha":"1991fdde17acd7674cfb679f2542c010c4a1caee","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoCommand.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -67,9 +67,6 @@ public void execute(final Input input) {\n             case LOGIC_ACTIONS:\n                 info.logicActions();\n                 break;\n-            case MAIL_TEMPLATES:\n-                info.mailTemplates();\n-                break;\n             case MAPPING_ITEM_TRANSFORMERS:\n                 info.mappingItemTransformers();\n                 break;\n@@ -133,7 +130,6 @@ private enum Options {\n         CONNID_LOCATION(\"--connid-locations\"),\n         RECONCILIATION_FILTER_BUILDERS(\"--reconciliation-filter-builders\"),\n         LOGIC_ACTIONS(\"--logic-actions\"),\n-        MAIL_TEMPLATES(\"--mail-templates\"),\n         MAPPING_ITEM_TRANSFORMERS(\"--mapping-item-transformers\"),\n         PASSWORD_RULES(\"--password-rules\"),\n         PROPAGATION_ACTIONS(\"--propagation-actions\"),"},{"sha":"4494d86d77a9c4a7b6045f066ec1961cadae1aad","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoResultManager.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -81,12 +81,6 @@ public void printLogicActions(final Collection<String> actions) {\n         }\n     }\n \n-    public void printMailTemplates(final Collection<String> mailTemplates) {\n-        for (final String template : mailTemplates) {\n-            genericMessage(\"Mail template: \" + template);\n-        }\n-    }\n-\n     public void printMappingItemTransformers(final Collection<String> transformers) {\n         for (final String tranformer : transformers) {\n             genericMessage(\"Mapping item tranformer: \" + tranformer);"},{"sha":"dfdd842341c0c28194aaa642736d11ecb8588790","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConfigurationRestClient.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -19,9 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n-import java.util.Set;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AttrLayoutType;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -31,7 +29,7 @@ public class ConfigurationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 7692363064029538722L;\n \n-    private SchemaRestClient schemaRestClient = new SchemaRestClient();\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n     public List<AttrTO> list() {\n         final List<AttrTO> attrTOs = getService(ConfigurationService.class).list();\n@@ -81,10 +79,6 @@ public void delete(final String key) {\n         getService(ConfigurationService.class).delete(key);\n     }\n \n-    public Set<String> getMailTemplates() {\n-        return SyncopeConsoleSession.get().getSyncopeTO().getMailTemplates();\n-    }\n-\n     public Response dbExport() {\n         return getService(ConfigurationService.class).export();\n     }"},{"sha":"b5ea0ca887ade9df96e34b540d4b45ea336216a7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MailTemplateTO.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import javax.ws.rs.PathParam;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"maiLTemplate\")\n+@XmlType\n+public class MailTemplateTO extends AbstractBaseBean implements EntityTO<String> {\n+\n+    private static final long serialVersionUID = 8389755049666062735L;\n+\n+    private String key;\n+\n+    @Override\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    @PathParam(\"key\")\n+    @Override\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+}"},{"sha":"a3c03b607f637b9ea6a8035b43029ce88ced0911","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SyncopeTO.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -89,8 +89,6 @@ public class SyncopeTO extends AbstractBaseBean {\n \n     private final Set<String> notificationRecipientsProviders = new HashSet<>();\n \n-    private final Set<String> mailTemplates = new HashSet<>();\n-\n     public String getVersion() {\n         return version;\n     }\n@@ -255,13 +253,6 @@ public Set<String> getNotificationRecipientsProviders() {\n         return notificationRecipientsProviders;\n     }\n \n-    @XmlElementWrapper(name = \"mailTemplates\")\n-    @XmlElement(name = \"mailTemplate\")\n-    @JsonProperty(\"mailTemplates\")\n-    public Set<String> getMailTemplates() {\n-        return mailTemplates;\n-    }\n-\n     public void setVersion(final String version) {\n         this.version = version;\n     }"},{"sha":"0fc8a7f7913ad50ad7bde51474d619db7a962a75","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -68,6 +68,7 @@ public enum ClientExceptionType {\n     RequiredValuesMissing(Response.Status.BAD_REQUEST),\n     RESTValidation(Response.Status.BAD_REQUEST),\n     GroupOwnership(Response.Status.BAD_REQUEST),\n+    InUseByNotifications(Response.Status.BAD_REQUEST),\n     Scheduling(Response.Status.BAD_REQUEST),\n     DelegatedAdministration(Response.Status.FORBIDDEN),\n     Unknown(Response.Status.BAD_REQUEST),"},{"sha":"fdf84293a9d52747c20a5dfd40c95965acfbb3c7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/MailTemplateFormat.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMailTemplateFormat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMailTemplateFormat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FMailTemplateFormat.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.ws.rs.core.MediaType;\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum MailTemplateFormat {\n+\n+    HTML(MediaType.TEXT_HTML_TYPE),\n+    TEXT(MediaType.TEXT_PLAIN_TYPE);\n+\n+    private final MediaType mediaType;\n+\n+    MailTemplateFormat(final MediaType mediaType) {\n+        this.mediaType = mediaType;\n+    }\n+\n+    public MediaType getMediaType() {\n+        return mediaType;\n+    }\n+\n+}"},{"sha":"339990f28ca01af95067493bd4f33b1fe92c1c80","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/StandardEntitlement.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -178,6 +178,16 @@ public final class StandardEntitlement {\n \n     public static final String WORKFLOW_FORM_SUBMIT = \"WORKFLOW_FORM_SUBMIT\";\n \n+    public static final String MAIL_TEMPLATE_LIST = \"MAIL_TEMPLATE_LIST\";\n+\n+    public static final String MAIL_TEMPLATE_CREATE = \"MAIL_TEMPLATE_CREATE\";\n+\n+    public static final String MAIL_TEMPLATE_READ = \"MAIL_TEMPLATE_READ\";\n+\n+    public static final String MAIL_TEMPLATE_UPDATE = \"MAIL_TEMPLATE_UPDATE\";\n+\n+    public static final String MAIL_TEMPLATE_DELETE = \"MAIL_TEMPLATE_DELETE\";\n+\n     public static final String NOTIFICATION_LIST = \"NOTIFICATION_LIST\";\n \n     public static final String NOTIFICATION_CREATE = \"NOTIFICATION_CREATE\";"},{"sha":"d8e747a5c3039f5529989fa727ee3c9d53e9c450","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/MailTemplateService.java","status":"added","additions":121,"deletions":0,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.service;\n+\n+import java.io.InputStream;\n+import java.util.List;\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+\n+/**\n+ * REST operations for mail templates.\n+ */\n+@Path(\"mailTemplates\")\n+public interface MailTemplateService extends JAXRSService {\n+\n+    /**\n+     * Returns a list of all mail templates.\n+     *\n+     * @return list of all mail templates.\n+     */\n+    @GET\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    List<MailTemplateTO> list();\n+\n+    /**\n+     * Creates a new mail template.\n+     *\n+     * @param mailTemplateTO Creates a new mail template.\n+     * @return Response object featuring Location header of created mail template\n+     */\n+    @POST\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response create(@NotNull MailTemplateTO mailTemplateTO);\n+\n+    /**\n+     * Returns mail template with matching key.\n+     *\n+     * @param key key of mail template to be read\n+     * @return mail template with matching key\n+     */\n+    @GET\n+    @Path(\"{key}\")\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    MailTemplateTO read(@NotNull @PathParam(\"key\") String key);\n+\n+    /**\n+     * Deletes the mail template matching the given key.\n+     *\n+     * @param key key for mail template to be deleted\n+     */\n+    @DELETE\n+    @Path(\"{key}\")\n+    void delete(@NotNull @PathParam(\"key\") String key);\n+\n+    /**\n+     * Gets the template for the given key and format, if available.\n+     *\n+     * @param key mail template\n+     * @param format template format\n+     * @return mail template with matching key and format, if available\n+     */\n+    @GET\n+    @Path(\"{key}/{format}\")\n+    Response getFormat(\n+            @NotNull @PathParam(\"key\") String key,\n+            @NotNull @PathParam(\"format\") MailTemplateFormat format);\n+\n+    /**\n+     * Sets the template for the given key and format, if available.\n+     *\n+     * @param key mail template\n+     * @param format template format\n+     * @param templateIn template to be set\n+     */\n+    @PUT\n+    @Path(\"{key}/{format}\")\n+    void setFormat(\n+            @NotNull @PathParam(\"key\") String key,\n+            @NotNull @PathParam(\"format\") MailTemplateFormat format,\n+            InputStream templateIn);\n+\n+    /**\n+     * Removes the template for the given key and format, if available.\n+     *\n+     * @param key mail template\n+     * @param format template format\n+     */\n+    @DELETE\n+    @Path(\"{key}/{format}\")\n+    void removeFormat(\n+            @NotNull @PathParam(\"key\") String key,\n+            @NotNull @PathParam(\"format\") MailTemplateFormat format);\n+\n+}"},{"sha":"daa04000c0bf4a822216bd62ac8cf224b5e21eeb","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -39,7 +39,7 @@\n public interface NotificationService extends JAXRSService {\n \n     /**\n-     * Returns notification with matching id.\n+     * Returns notification with matching key.\n      *\n      * @param key key of notification to be read\n      * @return notification with matching key"},{"sha":"c1427b8eeeacc10aca674b6a3d5e64a4686ee087","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -138,7 +138,8 @@ public interface ReportService extends JAXRSService {\n     @GET\n     @Path(\"executions/{executionKey}/stream\")\n     @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    Response exportExecutionResult(@NotNull @PathParam(\"executionKey\") Long executionKey,\n+    Response exportExecutionResult(\n+            @NotNull @PathParam(\"executionKey\") Long executionKey,\n             @QueryParam(\"format\") ReportExecExportFormat fmt);\n \n     /**"},{"sha":"7e5b1206c5b36798272dcaf886ad241f62dcef6a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/MailTemplateLogic.java","status":"added","additions":186,"deletions":0,"changes":186,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FMailTemplateLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FMailTemplateLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FMailTemplateLogic.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,186 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.api.dao.MailTemplateDAO;\n+import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n+import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n+import org.apache.syncope.core.persistence.api.entity.Notification;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class MailTemplateLogic extends AbstractTransactionalLogic<MailTemplateTO> {\n+\n+    @Autowired\n+    private MailTemplateDAO mailTemplateDAO;\n+\n+    @Autowired\n+    private NotificationDAO notificationDAO;\n+\n+    @Autowired\n+    private EntityFactory entityFactory;\n+\n+    private MailTemplateTO getMailTemplateTO(final String key) {\n+        MailTemplateTO mailTemplateTO = new MailTemplateTO();\n+        mailTemplateTO.setKey(key);\n+        return mailTemplateTO;\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.MAIL_TEMPLATE_READ + \"')\")\n+    public MailTemplateTO read(final String key) {\n+        MailTemplate mailTemplate = mailTemplateDAO.find(key);\n+        if (mailTemplate == null) {\n+            LOG.error(\"Could not find mail template '\" + key + \"'\");\n+\n+            throw new NotFoundException(key);\n+        }\n+\n+        return getMailTemplateTO(key);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.MAIL_TEMPLATE_LIST + \"')\")\n+    public List<MailTemplateTO> list() {\n+        return CollectionUtils.collect(mailTemplateDAO.findAll(), new Transformer<MailTemplate, MailTemplateTO>() {\n+\n+            @Override\n+            public MailTemplateTO transform(final MailTemplate input) {\n+                return getMailTemplateTO(input.getKey());\n+            }\n+        }, new ArrayList<MailTemplateTO>());\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.MAIL_TEMPLATE_CREATE + \"')\")\n+    public MailTemplateTO create(final String key) {\n+        MailTemplate mailTemplate = entityFactory.newEntity(MailTemplate.class);\n+        mailTemplate.setKey(key);\n+        mailTemplateDAO.save(mailTemplate);\n+\n+        return getMailTemplateTO(key);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.MAIL_TEMPLATE_READ + \"')\")\n+    public String getFormat(final String key, final MailTemplateFormat format) {\n+        MailTemplate mailTemplate = mailTemplateDAO.find(key);\n+        if (mailTemplate == null) {\n+            LOG.error(\"Could not find mail template '\" + key + \"'\");\n+\n+            throw new NotFoundException(key);\n+        }\n+\n+        String template = format == MailTemplateFormat.HTML\n+                ? mailTemplate.getHTMLTemplate()\n+                : mailTemplate.getTextTemplate();\n+        if (StringUtils.isBlank(template)) {\n+            LOG.error(\"Could not find mail template '\" + key + \"' in \" + format + \" format\");\n+\n+            throw new NotFoundException(key + \" in \" + format);\n+        }\n+\n+        return template;\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.MAIL_TEMPLATE_UPDATE + \"')\")\n+    public void setFormat(final String key, final MailTemplateFormat format, final String template) {\n+        MailTemplate mailTemplate = mailTemplateDAO.find(key);\n+        if (mailTemplate == null) {\n+            LOG.error(\"Could not find mail template '\" + key + \"'\");\n+\n+            throw new NotFoundException(key);\n+        }\n+\n+        if (format == MailTemplateFormat.HTML) {\n+            mailTemplate.setHTMLTemplate(template);\n+        } else {\n+            mailTemplate.setTextTemplate(template);\n+        }\n+\n+        mailTemplateDAO.save(mailTemplate);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.MAIL_TEMPLATE_DELETE + \"')\")\n+    public MailTemplateTO delete(final String key) {\n+        MailTemplate mailTemplate = mailTemplateDAO.find(key);\n+        if (mailTemplate == null) {\n+            LOG.error(\"Could not find mail template '\" + key + \"'\");\n+\n+            throw new NotFoundException(key);\n+        }\n+\n+        List<Notification> notifications = notificationDAO.findByTemplate(mailTemplate);\n+        if (!notifications.isEmpty()) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InUseByNotifications);\n+            sce.getElements().addAll(CollectionUtils.collect(notifications, new Transformer<Notification, String>() {\n+\n+                @Override\n+                public String transform(final Notification notification) {\n+                    return String.valueOf(notification.getKey());\n+                }\n+            }, new ArrayList<String>()));\n+            throw sce;\n+        }\n+\n+        MailTemplateTO deleted = getMailTemplateTO(key);\n+        mailTemplateDAO.delete(key);\n+        return deleted;\n+    }\n+\n+    @Override\n+    protected MailTemplateTO resolveReference(final Method method, final Object... args)\n+            throws UnresolvedReferenceException {\n+\n+        String key = null;\n+\n+        if (ArrayUtils.isNotEmpty(args)) {\n+            for (int i = 0; key == null && i < args.length; i++) {\n+                if (args[i] instanceof Long) {\n+                    key = (String) args[i];\n+                } else if (args[i] instanceof MailTemplateTO) {\n+                    key = ((MailTemplateTO) args[i]).getKey();\n+                }\n+            }\n+        }\n+\n+        if ((key != null) && !key.equals(0L)) {\n+            try {\n+                return getMailTemplateTO(key);\n+            } catch (Throwable ignore) {\n+                LOG.debug(\"Unresolved reference\", ignore);\n+                throw new UnresolvedReferenceException(ignore);\n+            }\n+        }\n+\n+        throw new UnresolvedReferenceException();\n+    }\n+}"},{"sha":"7017843c5849b0eeaa184a4bd086f23e6672a7f9","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -19,15 +19,11 @@\n package org.apache.syncope.core.logic;\n \n import org.apache.syncope.core.misc.EntitlementsHolder;\n-import java.io.IOException;\n import java.lang.reflect.Method;\n import java.net.URI;\n-import java.util.HashSet;\n-import java.util.Set;\n import javax.annotation.Resource;\n import org.apache.syncope.common.lib.to.SyncopeTO;\n import org.apache.syncope.core.misc.security.PasswordGenerator;\n-import org.apache.syncope.core.misc.spring.ResourceWithFallbackLoader;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.ImplementationLookup.Type;\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n@@ -36,7 +32,6 @@\n import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n-import org.apache.syncope.core.provisioning.java.notification.NotificationManagerImpl;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n@@ -85,9 +80,6 @@ public class SyncopeLogic extends AbstractLogic<SyncopeTO> {\n     @Autowired\n     private ImplementationLookup implLookup;\n \n-    @Resource(name = \"mailTemplateResourceLoader\")\n-    private ResourceWithFallbackLoader mailTemplateResourceLoader;\n-\n     @Transactional(readOnly = true)\n     public boolean isSelfRegAllowed() {\n         return confDAO.find(\"selfRegistration.allowed\", \"false\").getValues().get(0).getBooleanValue();\n@@ -147,30 +139,6 @@ public SyncopeTO info() {\n         syncopeTO.getNotificationRecipientsProviders().\n                 addAll(implLookup.getClassNames(Type.NOTIFICATION_RECIPIENTS_PROVIDER));\n \n-        Set<String> htmlTemplates = new HashSet<>();\n-        Set<String> textTemplates = new HashSet<>();\n-        try {\n-            for (org.springframework.core.io.Resource resource : mailTemplateResourceLoader.getResources(\n-                    NotificationManagerImpl.MAIL_TEMPLATES + \"*\" + NotificationManagerImpl.MAIL_TEMPLATE_SUFFIX)) {\n-\n-                String template = resource.getURL().toExternalForm();\n-                if (template.endsWith(NotificationManagerImpl.MAIL_TEMPLATE_HTML_SUFFIX)) {\n-                    htmlTemplates.add(template.substring(template.indexOf(NotificationManagerImpl.MAIL_TEMPLATES) + 14,\n-                            template.indexOf(NotificationManagerImpl.MAIL_TEMPLATE_HTML_SUFFIX)));\n-                } else if (template.endsWith(NotificationManagerImpl.MAIL_TEMPLATE_TEXT_SUFFIX)) {\n-                    textTemplates.add(template.substring(template.indexOf(NotificationManagerImpl.MAIL_TEMPLATES) + 14,\n-                            template.indexOf(NotificationManagerImpl.MAIL_TEMPLATE_TEXT_SUFFIX)));\n-                } else {\n-                    LOG.warn(\"Unexpected template found: {}, ignoring...\", template);\n-                }\n-            }\n-        } catch (IOException e) {\n-            LOG.error(\"While searching for mail templates\", e);\n-        }\n-        // Only templates available both as HTML and TEXT are considered\n-        htmlTemplates.retainAll(textTemplates);\n-        syncopeTO.getMailTemplates().addAll(htmlTemplates);\n-\n         return syncopeTO;\n     }\n "},{"sha":"985462a01a4556ba25473884d25b3d7a20426e96","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/MailTemplateDAO.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMailTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMailTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMailTemplateDAO.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n+\n+public interface MailTemplateDAO extends DAO<MailTemplate, String> {\n+\n+    MailTemplate find(String key);\n+\n+    List<MailTemplate> findAll();\n+\n+    MailTemplate save(MailTemplate notification);\n+\n+    void delete(String key);\n+}"},{"sha":"779cc0b0fc6842308b5f0804e7afd8b5efc8d1b7","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/NotificationDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -19,12 +19,15 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n \n public interface NotificationDAO extends DAO<Notification, Long> {\n \n     Notification find(Long key);\n \n+    List<Notification> findByTemplate(MailTemplate template);\n+\n     List<Notification> findAll();\n \n     Notification save(Notification notification);"},{"sha":"e6ea97d8e6ac8d62c38c554cb8600fabd834eb0d","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/MailTemplate.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMailTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMailTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMailTemplate.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.entity;\n+\n+public interface MailTemplate extends Entity<String> {\n+\n+    void setKey(String key);\n+\n+    String getTextTemplate();\n+\n+    void setTextTemplate(String textTemplate);\n+\n+    String getHTMLTemplate();\n+\n+    void setHTMLTemplate(String htmlTemplate);\n+}"},{"sha":"00bd23a63e023715f013adbdef3480b354c66c36","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Notification.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -62,9 +62,9 @@ public interface Notification extends Entity<Long> {\n \n     void setSubject(String subject);\n \n-    String getTemplate();\n+    MailTemplate getTemplate();\n \n-    void setTemplate(String template);\n+    void setTemplate(MailTemplate template);\n \n     TraceLevel getTraceLevel();\n "},{"sha":"8b31fcf022c8b782508831f98702da4d8a415a61","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAMailTemplateDAO.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAMailTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAMailTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAMailTemplateDAO.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.dao;\n+\n+import java.util.List;\n+import javax.persistence.TypedQuery;\n+import org.apache.syncope.core.persistence.api.dao.MailTemplateDAO;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAMailTemplate;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public class JPAMailTemplateDAO extends AbstractDAO<MailTemplate, String> implements MailTemplateDAO {\n+\n+    @Override\n+    public MailTemplate find(final String key) {\n+        return entityManager().find(JPAMailTemplate.class, key);\n+    }\n+\n+    @Override\n+    public List<MailTemplate> findAll() {\n+        TypedQuery<MailTemplate> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPAMailTemplate.class.getSimpleName() + \" e\", MailTemplate.class);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public MailTemplate save(final MailTemplate notification) {\n+        return entityManager().merge(notification);\n+    }\n+\n+    @Override\n+    public void delete(final String key) {\n+        MailTemplate template = find(key);\n+        if (template == null) {\n+            return;\n+        }\n+\n+        entityManager().remove(template);\n+    }\n+}"},{"sha":"1a3da1a5e4d1d413fd94fc83a505a25f6b7e27b8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPANotificationDAO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -21,6 +21,7 @@\n import java.util.List;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n import org.apache.syncope.core.persistence.jpa.entity.JPANotification;\n import org.springframework.stereotype.Repository;\n@@ -33,6 +34,15 @@ public Notification find(final Long key) {\n         return entityManager().find(JPANotification.class, key);\n     }\n \n+    @Override\n+    public List<Notification> findByTemplate(final MailTemplate template) {\n+        TypedQuery<Notification> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPANotification.class.getSimpleName() + \" e \"\n+                + \"WHERE e.template=:template\", Notification.class);\n+        query.setParameter(\"template\", template);\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public List<Notification> findAll() {\n         TypedQuery<Notification> query = entityManager().createQuery("},{"sha":"e142820ab40c3fcc25e70ab287f8691580959a10","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyAbout.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyAbout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyAbout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyAbout.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -47,7 +47,7 @@ public class JPAAnyAbout extends AbstractEntity<Long> implements AnyAbout {\n     private JPAAnyType anyType;\n \n     @Lob\n-    private String about;\n+    private String filter;\n \n     @Override\n     public Long getKey() {\n@@ -78,12 +78,12 @@ public void setAnyType(final AnyType anyType) {\n \n     @Override\n     public String get() {\n-        return about;\n+        return filter;\n     }\n \n     @Override\n     public void set(final String filter) {\n-        this.about = filter;\n+        this.filter = filter;\n     }\n \n }"},{"sha":"1346cdedcc48bfe03377481e2e2fcc3df350cb6a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Logger;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n@@ -170,6 +171,8 @@ public <KEY, T extends Entity<KEY>> T newEntity(final Class<T> reference) {\n             result = (T) new JPAConf();\n         } else if (reference.equals(AnyAbout.class)) {\n             result = (T) new JPAAnyAbout();\n+        } else if (reference.equals(MailTemplate.class)) {\n+            result = (T) new JPAMailTemplate();\n         } else if (reference.equals(Notification.class)) {\n             result = (T) new JPANotification();\n         } else if (reference.equals(ExternalResource.class)) {"},{"sha":"2678df21672de3d3b6276c912962ccb6aa0bf7b4","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAMailTemplate.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAMailTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAMailTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAMailTemplate.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import javax.persistence.Cacheable;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.Lob;\n+import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n+\n+@Entity\n+@Table(name = JPAMailTemplate.TABLE)\n+@Cacheable\n+public class JPAMailTemplate extends AbstractEntity<String> implements MailTemplate {\n+\n+    private static final long serialVersionUID = 2668267884059219835L;\n+\n+    public static final String TABLE = \"MailTemplate\";\n+\n+    @Id\n+    private String name;\n+\n+    @Lob\n+    private String textTemplate;\n+\n+    @Lob\n+    private String htmlTemplate;\n+\n+    @Override\n+    public String getKey() {\n+        return name;\n+    }\n+\n+    @Override\n+    public void setKey(final String name) {\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public String getTextTemplate() {\n+        return textTemplate;\n+    }\n+\n+    @Override\n+    public void setTextTemplate(final String textTemplate) {\n+        this.textTemplate = textTemplate;\n+    }\n+\n+    @Override\n+    public String getHTMLTemplate() {\n+        return htmlTemplate;\n+    }\n+\n+    @Override\n+    public void setHTMLTemplate(final String htmlTemplate) {\n+        this.htmlTemplate = htmlTemplate;\n+    }\n+\n+}"},{"sha":"2202a1248cf88da0bd23183909720d2990cdd61b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPANotification.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPANotification.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -31,6 +31,7 @@\n import javax.persistence.FetchType;\n import javax.persistence.Id;\n import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.persistence.Table;\n import javax.validation.constraints.Max;\n@@ -42,6 +43,7 @@\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.entity.AnyAbout;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n import org.apache.syncope.core.persistence.jpa.validation.entity.NotificationCheck;\n \n@@ -97,8 +99,9 @@ public class JPANotification extends AbstractEntity<Long> implements Notificatio\n     @NotNull\n     private String subject;\n \n-    @NotNull\n-    private String template;\n+    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n+    @JoinColumn(name = \"template_name\")\n+    private JPAMailTemplate template;\n \n     @NotNull\n     @Enumerated(EnumType.STRING)\n@@ -228,13 +231,14 @@ public void setSubject(final String subject) {\n     }\n \n     @Override\n-    public String getTemplate() {\n+    public MailTemplate getTemplate() {\n         return template;\n     }\n \n     @Override\n-    public void setTemplate(final String template) {\n-        this.template = template;\n+    public void setTemplate(final MailTemplate template) {\n+        checkType(template, JPAMailTemplate.class);\n+        this.template = (JPAMailTemplate) template;\n     }\n \n     @Override"},{"sha":"361e7c94769bf0864b477a87901851c54bab230e","filename":"core/persistence-jpa/src/main/resources/domains/MasterContent.xml","status":"modified","additions":41,"deletions":3,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterContent.xml?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -116,14 +116,52 @@ under the License.\n                validatorClass=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator\"/>\n   \n   <!-- Password reset notifications -->\n+  <MailTemplate name=\"requestPasswordReset\"\n+                textTemplate=\"Hi,\n+a password reset was request for ${user.getUsername()}.\n+\n+In order to complete this request, you need to visit this link:\n+\n+http://localhost:9080/syncope-console/?pwdResetToken=${input.get(0).replaceAll(' ', '%20')}\n+\n+If you did not request this reset, just ignore the present e-mail.\n+\n+Best regards.\"\n+                htmlTemplate=\"&lt;html&gt;\n+&lt;body&gt;\n+&lt;p&gt;Hi,\n+a password reset was request for ${user.getUsername()}.&lt;/p&gt;\n+\n+&lt;p&gt;In order to complete this request, you need to visit this \n+&lt;a href=&quot;http://localhost:9080/syncope-console/?pwdResetToken=${input.get(0).replaceAll(' ', '%20')}&quot;&gt;link&lt;/a&gt;&lt;/p&gt;.\n+\n+&lt;p&gt;If you did not request this reset, just ignore the present e-mail.&lt;/p&gt;\n+\n+&lt;p&gt;Best regards.&lt;/p&gt;\n+&lt;/body&gt;\n+&lt;/html&gt;\"/>\n+  <MailTemplate name=\"confirmPasswordReset\"\n+                textTemplate=\"Hi,\n+we are happy to inform you that the password request was execute successfully for your account.\n+\n+Best regards.\"\n+                htmlTemplate=\"&lt;html&gt;\n+&lt;body&gt;\n+&lt;p&gt;Hi,&lt;/br&gt;\n+we are happy to inform you that the password request was execute successfully for your account.&lt;/p&gt;\n+\n+&lt;p&gt;Best regards.&lt;/p&gt;\n+&lt;/body&gt;\n+&lt;/html&gt;\"/>\n+\n   <Notification id=\"1\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template=\"requestPasswordReset\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_name=\"requestPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n-  <AnyAbout id=\"1\" anyType_name=\"USER\" notification_id=\"1\" about=\"token!=$null\"/>\n+  <AnyAbout id=\"1\" anyType_name=\"USER\" notification_id=\"1\" filter=\"token!=$null\"/>\n   <Notification_events Notification_id=\"1\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n   <Notification id=\"2\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template=\"confirmPasswordReset\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_name=\"confirmPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n   <Notification_events Notification_id=\"2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n "},{"sha":"772f4c1a6393c29f57304f254ec52c1224111f53","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MailTemplateTest.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMailTemplateTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMailTemplateTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FMailTemplateTest.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.inner;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.api.dao.MailTemplateDAO;\n+import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n+import org.apache.syncope.core.persistence.jpa.AbstractTest;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Transactional(\"Master\")\n+public class MailTemplateTest extends AbstractTest {\n+\n+    @Autowired\n+    private MailTemplateDAO mailTemplateDAO;\n+\n+    @Test\n+    public void find() {\n+        MailTemplate optin = mailTemplateDAO.find(\"optin\");\n+        assertNotNull(optin);\n+        assertNotNull(optin.getTextTemplate());\n+        assertNotNull(optin.getHTMLTemplate());\n+    }\n+\n+    @Test\n+    public void findAll() {\n+        List<MailTemplate> templates = mailTemplateDAO.findAll();\n+        assertNotNull(templates);\n+        assertFalse(templates.isEmpty());\n+    }\n+\n+    @Test\n+    public void save() {\n+        MailTemplate template = entityFactory.newEntity(MailTemplate.class);\n+        template.setKey(\"new\");\n+        template.setTextTemplate(\"Text template\");\n+\n+        MailTemplate actual = mailTemplateDAO.save(template);\n+        assertNotNull(actual);\n+        assertNotNull(actual.getKey());\n+        assertNotNull(actual.getTextTemplate());\n+        assertNull(actual.getHTMLTemplate());\n+\n+        actual.setHTMLTemplate(\"<html><body><p>HTML template</p></body></html>\");\n+        actual = mailTemplateDAO.save(actual);\n+        assertNotNull(actual.getTextTemplate());\n+        assertNotNull(actual.getHTMLTemplate());\n+    }\n+\n+    @Test\n+    public void delete() {\n+        mailTemplateDAO.delete(\"optin\");\n+        assertNull(mailTemplateDAO.find(\"optin\"));\n+    }\n+}"},{"sha":"4d8824671ebe1fb9271dd3bfdaa0fddbfadb7f66","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/NotificationTest.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -25,6 +25,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.MailTemplateDAO;\n import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyAbout;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n@@ -42,6 +43,9 @@ public class NotificationTest extends AbstractTest {\n     @Autowired\n     private NotificationDAO notificationDAO;\n \n+    @Autowired\n+    private MailTemplateDAO mailTemplateDAO;\n+\n     @Test\n     public void find() {\n         Notification notification = notificationDAO.find(10L);\n@@ -78,7 +82,7 @@ public void save() {\n \n         notification.setSender(\"syncope@syncope.apache.org\");\n         notification.setSubject(\"Test notification\");\n-        notification.setTemplate(\"test\");\n+        notification.setTemplate(mailTemplateDAO.find(\"test\"));\n \n         Notification actual = notificationDAO.save(notification);\n         assertNotNull(actual);\n@@ -111,7 +115,7 @@ public void issueSYNCOPE445() {\n \n         notification.setSender(\"syncope@syncope.apache.org\");\n         notification.setSubject(\"Test notification\");\n-        notification.setTemplate(\"test\");\n+        notification.setTemplate(mailTemplateDAO.find(\"test\"));\n \n         Notification actual = notificationDAO.save(notification);\n         assertNotNull(actual);\n@@ -138,7 +142,7 @@ public void issueSYNCOPE446() {\n \n         notification.setSender(\"syncope@syncope.apache.org\");\n         notification.setSubject(\"Test notification\");\n-        notification.setTemplate(\"test\");\n+        notification.setTemplate(mailTemplateDAO.find(\"test\"));\n \n         Notification actual = notificationDAO.save(notification);\n         assertNotNull(actual);"},{"sha":"d78f0b027090486d4ec67dba2970e18b4a3c1c4d","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":103,"deletions":5,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -1094,22 +1094,120 @@ under the License.\n         destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"0\" syncMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n \n+  <MailTemplate name=\"requestPasswordReset\"\n+                textTemplate=\"Hi,\n+a password reset was request for ${user.getUsername()}.\n+\n+In order to complete this request, you need to visit this link:\n+\n+http://localhost:9080/syncope-console/?pwdResetToken=${input.get(0).replaceAll(' ', '%20')}\n+\n+If you did not request this reset, just ignore the present e-mail.\n+\n+Best regards.\"\n+                htmlTemplate=\"&lt;html&gt;\n+&lt;body&gt;\n+&lt;p&gt;Hi,\n+a password reset was request for ${user.getUsername()}.&lt;/p&gt;\n+\n+&lt;p&gt;In order to complete this request, you need to visit this \n+&lt;a href=&quot;http://localhost:9080/syncope-console/?pwdResetToken=${input.get(0).replaceAll(' ', '%20')}&quot;&gt;link&lt;/a&gt;&lt;/p&gt;.\n+\n+&lt;p&gt;If you did not request this reset, just ignore the present e-mail.&lt;/p&gt;\n+\n+&lt;p&gt;Best regards.&lt;/p&gt;\n+&lt;/body&gt;\n+&lt;/html&gt;\"/>\n+  <MailTemplate name=\"confirmPasswordReset\"\n+                textTemplate=\"Hi,\n+we are happy to inform you that the password request was execute successfully for your account.\n+\n+Best regards.\"\n+                htmlTemplate=\"&lt;html&gt;\n+&lt;body&gt;\n+&lt;p&gt;Hi,&lt;/br&gt;\n+we are happy to inform you that the password request was execute successfully for your account.&lt;/p&gt;\n+\n+&lt;p&gt;Best regards.&lt;/p&gt;\n+&lt;/body&gt;\n+&lt;/html&gt;\"/>\n+  <MailTemplate name=\"test\"/>\n+  <MailTemplate name=\"optin\"\n+                textTemplate=\"Hi ${user.plainAttrMap[&quot;firstname&quot;].values[0]} ${user.plainAttrMap[&quot;surname&quot;].values[0]}, welcome to Syncope!\n+\n+Your username is ${user.username}.\n+Your email address is ${user.plainAttrMap[&quot;email&quot;].values[0]}.\n+Your email address inside a link: http://localhost/?email=${user.plainAttrMap[&quot;email&quot;].values[0].replace('@', '%40')}\n+\n+This message was sent to the following recipients:&#10;\n+$$ for (recipient: recipients) {&#10;\n+  * ${recipient.plainAttrMap[&quot;email&quot;].values[0]}&#10;\n+$$ }&#10;\n+&#10;\n+because one of the following events occurred:&#10;\n+$$ for (event: events) {&#10;\n+  * ${event}&#10;\n+$$ }&#10;\n+&#10;\n+$$ if (!empty(user.memberships)) {&#10;\n+You have been provided with the following groups:&#10;\n+$$ for(membership : user.memberships) {&#10;\n+  * ${membership.groupName}&#10;\n+$$ }&#10;\n+$$ }&#10;\"\n+                htmlTemplate=\"&lt;html&gt;\n+&lt;body&gt;\n+&lt;h3&gt;Hi ${user.plainAttrMap[&quot;firstname&quot;].values[0]} ${user.plainAttrMap[&quot;surname&quot;].values[0]}, welcome to Syncope!&lt;/h3&gt;\n+\n+&lt;p&gt;\n+   Your username is ${user.username}.&lt;br/&gt;\n+   Your email address is ${user.plainAttrMap[&quot;email&quot;].values[0]}.\n+   Your email address inside a &lt;a href=&quot;http://localhost/?email=${user.plainAttrMap[&quot;email&quot;].values[0].replace('@', '%40')}&quot;&gt;link&lt;/a&gt;.\n+&lt;/p&gt;\n+\n+&lt;p&gt;\n+    This message was sent to the following recipients:\n+&lt;ul&gt;&#10;\n+$$ for (recipient: recipients) {&#10;\n+  &lt;li&gt;${recipient.plainAttrMap[&quot;email&quot;].values[0]}&lt;/li&gt;&#10;\n+$$ }&#10;\n+&lt;/ul&gt;&#10;\n+\n+because one of the following events occurred:\n+&lt;ul&gt;&#10;\n+$$ for (event: events) {&#10;\n+  &lt;li&gt;${event}&lt;/i&gt;&#10;\n+$$ }&#10;\n+&lt;/ul&gt;&#10;\n+&lt;/p&gt;\n+&#10;\n+$$ if (!empty(user.memberships)) {&#10;\n+You have been provided with the following groups:&#10;\n+&lt;ul&gt;&#10;\n+$$ for(membership : user.memberships) {&#10;\n+  &lt;li&gt;${membership.groupName}&lt;/li&gt;&#10;\n+$$ }&#10;\n+&lt;/ul&gt;&#10;\n+$$ }&#10;\n+&lt;/body&gt;\n+&lt;/html&gt;\"/>\n+\n   <Notification id=\"1\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template=\"requestPasswordReset\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_name=\"requestPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n-  <AnyAbout id=\"1\" anyType_name=\"USER\" notification_id=\"1\" about=\"token!=$null\"/>\n+  <AnyAbout id=\"1\" anyType_name=\"USER\" notification_id=\"1\" filter=\"token!=$null\"/>\n   <Notification_events Notification_id=\"1\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n   <Notification id=\"2\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template=\"confirmPasswordReset\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_name=\"confirmPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n   <Notification_events Notification_id=\"2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n \n-  <Notification id=\"10\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" \n+  <Notification id=\"10\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template_name=\"test\" selfAsRecipient=\"0\" \n                 traceLevel=\"FAILURES\"\n                 recipientsFIQL=\"$groups==7\"\n                 recipientAttrType=\"UserPlainSchema\" recipientAttrName=\"email\" active=\"1\"/>\n-  <AnyAbout id=\"10\" anyType_name=\"USER\" notification_id=\"10\" about=\"fullname==*o*;fullname==*i*\"/>\n+  <AnyAbout id=\"10\" anyType_name=\"USER\" notification_id=\"10\" filter=\"fullname==*o*;fullname==*i*\"/>\n   <Notification_events Notification_id=\"10\" event=\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\"/>\n   <Notification_events Notification_id=\"10\" event=\"[CUSTOM]:[]:[]:[unexisting2]:[SUCCESS]\"/>\n     "},{"sha":"14c65a8bfc5a72874d991d51324e2f09a9b3e7cb","filename":"core/persistence-jpa/src/test/resources/domains/TwoContent.xml","status":"modified","additions":41,"deletions":3,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -102,14 +102,52 @@ under the License.\n                validatorClass=\"org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator\"/>\n   \n   <!-- Password reset notifications -->\n+  <MailTemplate name=\"requestPasswordReset\"\n+                  textTemplate=\"Hi,\n+a password reset was request for ${user.getUsername()}.\n+\n+In order to complete this request, you need to visit this link:\n+\n+http://localhost:9080/syncope-console/?pwdResetToken=${input.get(0).replaceAll(' ', '%20')}\n+\n+If you did not request this reset, just ignore the present e-mail.\n+\n+Best regards.\"\n+                  htmlTemplate=\"&lt;html&gt;\n+&lt;body&gt;\n+&lt;p&gt;Hi,\n+a password reset was request for ${user.getUsername()}.&lt;/p&gt;\n+\n+&lt;p&gt;In order to complete this request, you need to visit this \n+&lt;a href=&quot;http://localhost:9080/syncope-console/?pwdResetToken=${input.get(0).replaceAll(' ', '%20')}&quot;&gt;link&lt;/a&gt;&lt;/p&gt;.\n+\n+&lt;p&gt;If you did not request this reset, just ignore the present e-mail.&lt;/p&gt;\n+\n+&lt;p&gt;Best regards.&lt;/p&gt;\n+&lt;/body&gt;\n+&lt;/html&gt;\"/>\n+  <MailTemplate name=\"confirmPasswordReset\"\n+                textTemplate=\"Hi,\n+we are happy to inform you that the password request was execute successfully for your account.\n+\n+Best regards.\"\n+                htmlTemplate=\"&lt;html&gt;\n+&lt;body&gt;\n+&lt;p&gt;Hi,&lt;/br&gt;\n+we are happy to inform you that the password request was execute successfully for your account.&lt;/p&gt;\n+\n+&lt;p&gt;Best regards.&lt;/p&gt;\n+&lt;/body&gt;\n+&lt;/html&gt;\"/>\n+\n   <Notification id=\"1\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template=\"requestPasswordReset\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset request\" template_name=\"requestPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n-  <AnyAbout id=\"1\" anyType_name=\"USER\" notification_id=\"1\" about=\"token!=$null\"/>\n+  <AnyAbout id=\"1\" anyType_name=\"USER\" notification_id=\"1\" filter=\"token!=$null\"/>\n   <Notification_events Notification_id=\"1\" event=\"[CUSTOM]:[]:[]:[requestPasswordReset]:[SUCCESS]\"/>\n   \n   <Notification id=\"2\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" \n-                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template=\"confirmPasswordReset\" \n+                sender=\"admin@syncope.apache.org\" subject=\"Password Reset successful\" template_name=\"confirmPasswordReset\" \n                 traceLevel=\"FAILURES\"/> \n   <Notification_events Notification_id=\"2\" event=\"[CUSTOM]:[]:[]:[confirmPasswordReset]:[SUCCESS]\"/>\n "},{"sha":"020f28010c835cc3f4f328998bf95212e0c9855f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/NotificationDataBinderImpl.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FNotificationDataBinderImpl.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.core.persistence.api.entity.Notification;\n import org.apache.syncope.core.misc.spring.BeanUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.MailTemplateDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyAbout;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.slf4j.Logger;\n@@ -40,7 +41,10 @@ public class NotificationDataBinderImpl implements NotificationDataBinder {\n \n     private static final Logger LOG = LoggerFactory.getLogger(NotificationDataBinder.class);\n \n-    private static final String[] IGNORE_PROPERTIES = { \"key\", \"abouts\" };\n+    private static final String[] IGNORE_PROPERTIES = { \"key\", \"template\", \"abouts\" };\n+\n+    @Autowired\n+    private MailTemplateDAO mailTemplateDAO;\n \n     @Autowired\n     private AnyTypeDAO anyTypeDAO;\n@@ -55,6 +59,8 @@ public NotificationTO getNotificationTO(final Notification notification) {\n         BeanUtils.copyProperties(notification, result, IGNORE_PROPERTIES);\n \n         result.setKey(notification.getKey());\n+        result.setTemplate(notification.getTemplate().getKey());\n+\n         for (AnyAbout about : notification.getAbouts()) {\n             result.getAbouts().put(about.getAnyType().getKey(), about.get());\n         }\n@@ -73,6 +79,8 @@ public Notification create(final NotificationTO notificationTO) {\n     public void update(final Notification notification, final NotificationTO notificationTO) {\n         BeanUtils.copyProperties(notificationTO, notification, IGNORE_PROPERTIES);\n \n+        notification.setTemplate(mailTemplateDAO.find(notificationTO.getTemplate()));\n+\n         // 1. add or update all (valid) abouts from TO\n         for (Map.Entry<String, String> entry : notificationTO.getAbouts().entrySet()) {\n             if (StringUtils.isNotBlank(entry.getValue())) {"},{"sha":"74dc39fd47cce4826e5c0d17e2e31b944eb041d2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":11,"deletions":34,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.provisioning.java.notification;\n \n-import java.io.IOException;\n import java.io.StringWriter;\n import java.util.ArrayList;\n import java.util.Collections;\n@@ -27,9 +26,8 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import javax.annotation.Resource;\n-import org.apache.commons.io.IOUtils;\n import org.apache.commons.jexl3.MapContext;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n@@ -58,7 +56,6 @@\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.misc.search.SearchCondConverter;\n import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.misc.spring.ResourceWithFallbackLoader;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n@@ -85,14 +82,6 @@ public class NotificationManagerImpl implements NotificationManager {\n \n     private static final Logger LOG = LoggerFactory.getLogger(NotificationManager.class);\n \n-    public static final String MAIL_TEMPLATES = \"mailTemplates/\";\n-\n-    public static final String MAIL_TEMPLATE_SUFFIX = \".jexl3\";\n-\n-    public static final String MAIL_TEMPLATE_HTML_SUFFIX = \".html.jexl3\";\n-\n-    public static final String MAIL_TEMPLATE_TEXT_SUFFIX = \".txt.jexl3\";\n-\n     @Autowired\n     private DerSchemaDAO derSchemaDAO;\n \n@@ -141,9 +130,6 @@ public class NotificationManagerImpl implements NotificationManager {\n     @Autowired\n     private TaskDAO taskDAO;\n \n-    @Resource(name = \"mailTemplateResourceLoader\")\n-    private ResourceWithFallbackLoader mailTemplateResourceLoader;\n-\n     @Autowired\n     private DerAttrHandler derAttrHander;\n \n@@ -235,30 +221,21 @@ private NotificationTask getNotificationTask(\n         task.setSender(notification.getSender());\n         task.setSubject(notification.getSubject());\n \n-        String htmlBody = evaluate(\n-                MAIL_TEMPLATES + notification.getTemplate() + MAIL_TEMPLATE_HTML_SUFFIX, jexlVars);\n-        String textBody = evaluate(\n-                MAIL_TEMPLATES + notification.getTemplate() + MAIL_TEMPLATE_TEXT_SUFFIX, jexlVars);\n-\n-        task.setHtmlBody(htmlBody);\n-        task.setTextBody(textBody);\n+        if (StringUtils.isNotBlank(notification.getTemplate().getTextTemplate())) {\n+            task.setTextBody(evaluate(notification.getTemplate().getTextTemplate(), jexlVars));\n+        }\n+        if (StringUtils.isNotBlank(notification.getTemplate().getHTMLTemplate())) {\n+            task.setHtmlBody(evaluate(notification.getTemplate().getHTMLTemplate(), jexlVars));\n+        }\n \n         return task;\n     }\n \n-    private String evaluate(final String templateLocation, final Map<String, Object> jexlVars) {\n-        org.springframework.core.io.Resource templateResource =\n-                mailTemplateResourceLoader.getResource(templateLocation);\n-\n+    private String evaluate(final String template, final Map<String, Object> jexlVars) {\n         StringWriter writer = new StringWriter();\n-        try {\n-            JexlUtils.newJxltEngine().\n-                    createTemplate(IOUtils.toString(templateResource.getInputStream())).\n-                    evaluate(new MapContext(jexlVars), writer);\n-        } catch (final IOException e) {\n-            LOG.error(\"Could not get mail body from {}\", templateResource, e);\n-        }\n-\n+        JexlUtils.newJxltEngine().\n+                createTemplate(template).\n+                evaluate(new MapContext(jexlVars), writer);\n         return writer.toString();\n     }\n "},{"sha":"7a6653ead423eb1ae1d08a736240e410df025c1b","filename":"core/provisioning-java/src/main/resources/mail.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fmail.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fmail.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fmail.properties?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-templates.directory=${conf.directory}\n smtpHost=none.syncope.apache.org\n smtpPort=25\n smtpUser="},{"sha":"f07ed07e1ee9deb73666fe4bcc63acceec245c17","filename":"core/provisioning-java/src/main/resources/mailTemplates/confirmPasswordReset.html.jexl3","status":"removed","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.html.jexl3","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.html.jexl3","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.html.jexl3?ref=a4a9ef568d29a591055dfb7fea625cc9bea28e5b","patch":"@@ -1,26 +0,0 @@\n-/*\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n-*/\n-<html>\n-<body>\n-<p>Hi,</br>\n-we are happy to inform you that the password request was execute successfully for your account.</p>\n-\n-<p>Best regards.</p>\n-</body>\n-</html>\n\\ No newline at end of file"},{"sha":"a42bdd7285c16a1f7d11a8f74233df6e9660e50c","filename":"core/provisioning-java/src/main/resources/mailTemplates/confirmPasswordReset.txt.jexl3","status":"removed","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.txt.jexl3","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.txt.jexl3","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FconfirmPasswordReset.txt.jexl3?ref=a4a9ef568d29a591055dfb7fea625cc9bea28e5b","patch":"@@ -1,20 +0,0 @@\n-## Licensed to the Apache Software Foundation (ASF) under one\n-## or more contributor license agreements.  See the NOTICE file\n-## distributed with this work for additional information\n-## regarding copyright ownership.  The ASF licenses this file\n-## to you under the Apache License, Version 2.0 (the\n-## \"License\"); you may not use this file except in compliance\n-## with the License.  You may obtain a copy of the License at\n-##\n-##   http://www.apache.org/licenses/LICENSE-2.0\n-##\n-## Unless required by applicable law or agreed to in writing,\n-## software distributed under the License is distributed on an\n-## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-## KIND, either express or implied.  See the License for the\n-## specific language governing permissions and limitations\n-## under the License.\n-Hi,\n-we are happy to inform you that the password request was execute successfully for your account.\n-\n-Best regards.\n\\ No newline at end of file"},{"sha":"3d2fa2f250ba0af196a2819debf454d064a5ad35","filename":"core/provisioning-java/src/main/resources/mailTemplates/optin.html.jexl3","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.html.jexl3","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.html.jexl3","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.html.jexl3?ref=a4a9ef568d29a591055dfb7fea625cc9bea28e5b","patch":"@@ -1,54 +0,0 @@\n-/*\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n-*/\n-<html>\n-<body>\n-<h3>Hi ${user.plainAttrMap[\"firstname\"].values[0]} ${user.plainAttrMap[\"surname\"].values[0]}, welcome to Syncope!</h3>\n-\n-<p>\n-   Your username is ${user.username}.<br/>\n-   Your email address is ${user.plainAttrMap[\"email\"].values[0]}.\n-   Your email address inside a <a href=\"http://localhost/?email=${user.plainAttrMap[\"email\"].values[0].replace('@', '%40')}\">link</a>.\n-</p>\n-\n-<p>\n-    This message was sent to the following recipients:\n-<ul>\n-$$ for (recipient: recipients) {\n-  <li>${recipient.plainAttrMap[\"email\"].values[0]}</li>\n-$$ }\n-</ul>\n-\n-because one of the following events occurred:\n-<ul>\n-$$ for (event: events) {\n-  <li>${event}</i>\n-$$ }\n-</ul>\n-</p>\n-\n-$$ if (!empty(user.memberships)) {\n-You have been provided with the following groups:\n-<ul>\n-$$ for(membership : user.memberships) {\n-  <li>${membership.groupName}</li>\n-$$ }\n-</ul>\n-$$ }\n-</body>\n-</html>"},{"sha":"c8fee4efaea6b92e9c8620bcd952b66b4793ff56","filename":"core/provisioning-java/src/main/resources/mailTemplates/optin.txt.jexl3","status":"removed","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.txt.jexl3","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.txt.jexl3","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2Foptin.txt.jexl3?ref=a4a9ef568d29a591055dfb7fea625cc9bea28e5b","patch":"@@ -1,38 +0,0 @@\n-## Licensed to the Apache Software Foundation (ASF) under one\n-## or more contributor license agreements.  See the NOTICE file\n-## distributed with this work for additional information\n-## regarding copyright ownership.  The ASF licenses this file\n-## to you under the Apache License, Version 2.0 (the\n-## \"License\"); you may not use this file except in compliance\n-## with the License.  You may obtain a copy of the License at\n-##\n-##   http://www.apache.org/licenses/LICENSE-2.0\n-##\n-## Unless required by applicable law or agreed to in writing,\n-## software distributed under the License is distributed on an\n-## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-## KIND, either express or implied.  See the License for the\n-## specific language governing permissions and limitations\n-## under the License.\n-Hi ${user.plainAttrMap[\"firstname\"].values[0]} ${user.plainAttrMap[\"surname\"].values[0]}, welcome to Syncope!\n-\n-Your username is ${user.username}.<br/>\n-Your email address is ${user.plainAttrMap[\"email\"].values[0]}.\n-Your email address inside a link: http://localhost/?email=${user.plainAttrMap[\"email\"].values[0].replace('@', '%40')}\n-\n-This message was sent to the following recipients:\n-$$ for (recipient: recipients) {\n-  * ${recipient.plainAttrMap[\"email\"].values[0]}\n-$$ }\n-\n-because one of the following events occurred:\n-$$ for (event: events) {\n-  * ${event}\n-$$ }\n-\n-$$ if (!empty(user.memberships)) {\n-You have been provided with the following groups:\n-$$ for(membership : user.memberships) {\n-  * ${membership.groupName}\n-$$ }\n-$$ }"},{"sha":"0c0428da1bff89ec7e8639fece1538963a5da0e3","filename":"core/provisioning-java/src/main/resources/mailTemplates/requestPasswordReset.html.jexl3","status":"removed","additions":0,"deletions":31,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.html.jexl3","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.html.jexl3","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.html.jexl3?ref=a4a9ef568d29a591055dfb7fea625cc9bea28e5b","patch":"@@ -1,31 +0,0 @@\n-/*\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n-*/\n-<html>\n-<body>\n-<p>Hi,\n-a password reset was request for ${user.getUsername()}.</p>\n-\n-<p>In order to complete this request, you need to visit this \n-<a href=\"http://localhost:9080/syncope-console/?pwdResetToken=${input.get(0).replaceAll(' ', '%20')}\">link</a></p>.\n-\n-<p>If you did not request this reset, just ignore the present e-mail.</p>\n-\n-<p>Best regards.</p>\n-</body>\n-</html>\n\\ No newline at end of file"},{"sha":"47788845d6fbf7336f164b6cd8c26c9fbff6834d","filename":"core/provisioning-java/src/main/resources/mailTemplates/requestPasswordReset.txt.jexl3","status":"removed","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.txt.jexl3","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a4a9ef568d29a591055dfb7fea625cc9bea28e5b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.txt.jexl3","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FmailTemplates%2FrequestPasswordReset.txt.jexl3?ref=a4a9ef568d29a591055dfb7fea625cc9bea28e5b","patch":"@@ -1,26 +0,0 @@\n-## Licensed to the Apache Software Foundation (ASF) under one\n-## or more contributor license agreements.  See the NOTICE file\n-## distributed with this work for additional information\n-## regarding copyright ownership.  The ASF licenses this file\n-## to you under the Apache License, Version 2.0 (the\n-## \"License\"); you may not use this file except in compliance\n-## with the License.  You may obtain a copy of the License at\n-##\n-##   http://www.apache.org/licenses/LICENSE-2.0\n-##\n-## Unless required by applicable law or agreed to in writing,\n-## software distributed under the License is distributed on an\n-## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-## KIND, either express or implied.  See the License for the\n-## specific language governing permissions and limitations\n-## under the License.\n-Hi,\n-a password reset was request for ${user.getUsername()}.\n-\n-In order to complete this request, you need to visit this link:\n-\n-http://localhost:9080/syncope-console/?pwdResetToken=${input.get(0).replaceAll(' ', '%20')}\n-\n-If you did not request this reset, just ignore the present e-mail.\n-\n-Best regards.\n\\ No newline at end of file"},{"sha":"ae1bb5ed4fb43626bf635389b63a4888a46ec62a","filename":"core/provisioning-java/src/main/resources/provisioningContext.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -118,11 +118,6 @@ under the License.\n     <constructor-arg value=\"5000\"/>\n   </bean>\n \n-  <bean id=\"mailTemplateResourceLoader\" class=\"org.apache.syncope.core.misc.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${templates.directory}/\"/>\n-    <property name=\"fallback\" value=\"classpath:\"/>\n-  </bean>\n-\n   <bean id=\"connIdBundleManager\" class=\"org.apache.syncope.core.provisioning.java.ConnIdBundleManagerImpl\">\n     <property name=\"stringLocations\" value=\"${connid.locations}\"/>\n   </bean>"},{"sha":"3697d0430428d43424dc9be7b762c8b66a4c9b62","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/MailTemplateTest.java","status":"modified","additions":11,"deletions":20,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMailTemplateTest.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -30,42 +30,35 @@\n import java.util.List;\n import java.util.Map;\n import java.util.UUID;\n-import javax.annotation.Resource;\n-import org.apache.commons.io.IOUtils;\n import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.core.misc.jexl.JexlUtils;\n-import org.apache.syncope.core.misc.spring.ResourceWithFallbackLoader;\n-import org.apache.syncope.core.provisioning.java.notification.NotificationManagerImpl;\n+import org.apache.syncope.core.persistence.api.dao.MailTemplateDAO;\n import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(\"Master\")\n public class MailTemplateTest extends AbstractTest {\n \n-    @Resource(name = \"mailTemplateResourceLoader\")\n-    private ResourceWithFallbackLoader mailTemplateResourceLoader;\n-\n-    private String evaluate(final String templateLocation, final Map<String, Object> jexlVars) throws IOException {\n-        org.springframework.core.io.Resource templateResource =\n-                mailTemplateResourceLoader.getResource(templateLocation);\n+    @Autowired\n+    private MailTemplateDAO mailTemplateDAO;\n \n+    private String evaluate(final String template, final Map<String, Object> jexlVars) {\n         StringWriter writer = new StringWriter();\n         JexlUtils.newJxltEngine().\n-                createTemplate(IOUtils.toString(templateResource.getInputStream())).\n+                createTemplate(template).\n                 evaluate(new MapContext(jexlVars), writer);\n         return writer.toString();\n     }\n \n     @Test\n     public void confirmPasswordReset() throws IOException {\n         String htmlBody = evaluate(\n-                NotificationManagerImpl.MAIL_TEMPLATES\n-                + \"confirmPasswordReset\"\n-                + NotificationManagerImpl.MAIL_TEMPLATE_HTML_SUFFIX,\n+                mailTemplateDAO.find(\"confirmPasswordReset\").getHTMLTemplate(),\n                 new HashMap<String, Object>());\n \n         assertNotNull(htmlBody);\n@@ -86,9 +79,7 @@ public void requestPasswordReset() throws IOException {\n         ctx.put(\"input\", input);\n \n         String htmlBody = evaluate(\n-                NotificationManagerImpl.MAIL_TEMPLATES\n-                + \"requestPasswordReset\"\n-                + NotificationManagerImpl.MAIL_TEMPLATE_HTML_SUFFIX,\n+                mailTemplateDAO.find(\"requestPasswordReset\").getHTMLTemplate(),\n                 ctx);\n \n         assertNotNull(htmlBody);\n@@ -122,12 +113,12 @@ public void optin() throws IOException {\n         ctx.put(\"recipients\", Collections.singletonList(recipient));\n \n         String htmlBody = evaluate(\n-                NotificationManagerImpl.MAIL_TEMPLATES\n-                + \"optin\"\n-                + NotificationManagerImpl.MAIL_TEMPLATE_HTML_SUFFIX,\n+                mailTemplateDAO.find(\"optin\").getHTMLTemplate(),\n                 ctx);\n \n         assertNotNull(htmlBody);\n+        System.out.println(\"AAAAAAAAAAAAA\\n\" + htmlBody);\n+        \n         assertTrue(htmlBody.contains(\"Hi John Doe,\"));\n         assertTrue(htmlBody.contains(\"Your email address is john.doe@syncope.apache.org.\"));\n         assertTrue(htmlBody.contains(\"<li>another@syncope.apache.org</li>\"));"},{"sha":"967b2f09d078ceda1993054a70ba9acb51bb2cc3","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/MailTemplateServiceImpl.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf.service;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.net.URI;\n+import java.util.List;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.StreamingOutput;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.MailTemplateService;\n+import org.apache.syncope.core.logic.MailTemplateLogic;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class MailTemplateServiceImpl extends AbstractServiceImpl implements MailTemplateService {\n+\n+    @Autowired\n+    private MailTemplateLogic logic;\n+\n+    @Override\n+    public Response create(final MailTemplateTO mailTemplateTO) {\n+        MailTemplateTO created = logic.create(mailTemplateTO.getKey());\n+        URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getKey())).build();\n+        return Response.created(location).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n+                build();\n+    }\n+\n+    @Override\n+    public MailTemplateTO read(final String key) {\n+        return logic.read(key);\n+    }\n+\n+    @Override\n+    public List<MailTemplateTO> list() {\n+        return logic.list();\n+    }\n+\n+    @Override\n+    public void delete(final String key) {\n+        logic.delete(key);\n+    }\n+\n+    @Override\n+    public Response getFormat(final String key, final MailTemplateFormat format) {\n+        final String template = logic.getFormat(key, format);\n+        StreamingOutput sout = new StreamingOutput() {\n+\n+            @Override\n+            public void write(final OutputStream os) throws IOException {\n+                os.write(template.getBytes());\n+            }\n+        };\n+        return Response.ok(sout).\n+                type(format.getMediaType()).\n+                build();\n+    }\n+\n+    @Override\n+    public void setFormat(final String key, final MailTemplateFormat format, final InputStream templateIn) {\n+        try {\n+            logic.setFormat(key, format, IOUtils.toString(templateIn));\n+        } catch (final IOException e) {\n+            LOG.error(\"While setting format {} for mail template {}\", format, key, e);\n+            throw new InternalServerErrorException(\"Could not read entity\", e);\n+        }\n+    }\n+\n+    @Override\n+    public void removeFormat(final String key, final MailTemplateFormat format) {\n+        logic.setFormat(key, format, null);\n+    }\n+}"},{"sha":"e80c6111e9e84c30960e32fa06fcf64574f95570","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportServiceImpl.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -81,10 +81,9 @@ public void write(final OutputStream os) throws IOException {\n                 logic.exportExecutionResult(os, reportExec, format);\n             }\n         };\n-        String disposition = \"attachment; filename=\" + reportExec.getReport().getName() + \".\" + format.name().\n-                toLowerCase();\n         return Response.ok(sout).\n-                header(HttpHeaders.CONTENT_DISPOSITION, disposition).\n+                header(HttpHeaders.CONTENT_DISPOSITION,\n+                        \"attachment; filename=\" + reportExec.getReport().getName() + \".\" + format.name().toLowerCase()).\n                 build();\n     }\n "},{"sha":"65e5031fdce82c8b4a5d9b5535a708e823b9f0e4","filename":"deb/core/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/deb%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/deb%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fcore%2Fpom.xml?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -140,7 +140,6 @@ under the License.\n         <includes>\n           <include>mail.properties</include>\n           <include>connid.properties</include>\n-          <include>mailTemplates/*.jexl3</include>\n         </includes>\n         <targetPath>${project.build.directory}/etc</targetPath>\n         <filtering>true</filtering>"},{"sha":"ae391c23a7cff829d3b164fdc90fe8f6fa5317b6","filename":"deb/core/src/deb/control/conffiles","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/deb%2Fcore%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/deb%2Fcore%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fcore%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -12,9 +12,3 @@\n /etc/apache-syncope/userRoutes.xml\n /etc/apache-syncope/userWorkflow.bpmn20.xml\n /etc/apache-syncope/workflow.properties\n-/etc/apache-syncope/mailTemplates/confirmPasswordReset.html.jexl3\n-/etc/apache-syncope/mailTemplates/confirmPasswordReset.txt.jexl3\n-/etc/apache-syncope/mailTemplates/optin.html.jexl3\n-/etc/apache-syncope/mailTemplates/optin.txt.jexl3\n-/etc/apache-syncope/mailTemplates/requestPasswordReset.html.jexl3\n-/etc/apache-syncope/mailTemplates/requestPasswordReset.txt.jexl3"},{"sha":"e8b9a5fbb5801db343b4190a1a71eaccf6ae2de0","filename":"fit/core-reference/src/main/resources/mail.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmail.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmail.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmail.properties?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-templates.directory=${conf.directory}\n smtpHost=localhost\n smtpPort=2525\n smtpUser="},{"sha":"b7af72afd82b41f5aaa856f69011b2cf884b930a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -67,6 +67,7 @@\n import org.apache.syncope.common.rest.api.service.ReportService;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.GroupService;\n+import org.apache.syncope.common.rest.api.service.MailTemplateService;\n import org.apache.syncope.common.rest.api.service.RealmService;\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n import org.apache.syncope.common.rest.api.service.RoleService;\n@@ -193,6 +194,8 @@ public abstract class AbstractITCase {\n \n     protected static WorkflowService workflowService;\n \n+    protected static MailTemplateService mailTemplateService;\n+\n     protected static NotificationService notificationService;\n \n     protected static SchemaService schemaService;\n@@ -258,6 +261,7 @@ public static void restSetup() {\n         taskService = adminClient.getService(TaskService.class);\n         policyService = adminClient.getService(PolicyService.class);\n         workflowService = adminClient.getService(WorkflowService.class);\n+        mailTemplateService = adminClient.getService(MailTemplateService.class);\n         notificationService = adminClient.getService(NotificationService.class);\n         schemaService = adminClient.getService(SchemaService.class);\n         securityQuestionService = adminClient.getService(SecurityQuestionService.class);"},{"sha":"9a7f511fdd70078e04fe97974ccbed65e8dca045","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MailTemplateITCase.java","status":"added","additions":146,"deletions":0,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.List;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+import org.apache.syncope.fit.AbstractITCase;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class MailTemplateITCase extends AbstractITCase {\n+\n+    @Test\n+    public void read() {\n+        MailTemplateTO mailTemplateTO = mailTemplateService.read(\"optin\");\n+        assertNotNull(mailTemplateTO);\n+    }\n+\n+    @Test\n+    public void list() {\n+        List<MailTemplateTO> mailTemplateTOs = mailTemplateService.list();\n+        assertNotNull(mailTemplateTOs);\n+        assertFalse(mailTemplateTOs.isEmpty());\n+        for (MailTemplateTO instance : mailTemplateTOs) {\n+            assertNotNull(instance);\n+        }\n+    }\n+\n+    @Test\n+    public void crud() throws IOException {\n+        final String key = getUUIDString();\n+\n+        // 1. create (empty) mail template\n+        MailTemplateTO mailTemplateTO = new MailTemplateTO();\n+        mailTemplateTO.setKey(key);\n+\n+        Response response = mailTemplateService.create(mailTemplateTO);\n+        assertEquals(201, response.getStatus());\n+\n+        // 2. attempt to read HTML and TEXT -> fail\n+        try {\n+            mailTemplateService.getFormat(key, MailTemplateFormat.HTML);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+        try {\n+            mailTemplateService.getFormat(key, MailTemplateFormat.TEXT);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+\n+        // 3. set TEXT\n+        String textTemplate = \"Hi there, I am ${username}.\";\n+        mailTemplateService.setFormat(\n+                key, MailTemplateFormat.TEXT, IOUtils.toInputStream(textTemplate));\n+\n+        response = mailTemplateService.getFormat(key, MailTemplateFormat.TEXT);\n+        assertEquals(200, response.getStatus());\n+        assertTrue(response.getMediaType().toString().startsWith(MediaType.TEXT_PLAIN));\n+        assertTrue(response.getEntity() instanceof InputStream);\n+        assertEquals(textTemplate, IOUtils.toString((InputStream) response.getEntity()));\n+\n+        // 3. set HTML\n+        String htmlTemplate = \"<html><body>Hi there, I am ${username}.</body></html>\";\n+        mailTemplateService.setFormat(\n+                key, MailTemplateFormat.HTML, IOUtils.toInputStream(htmlTemplate));\n+\n+        response = mailTemplateService.getFormat(key, MailTemplateFormat.HTML);\n+        assertEquals(200, response.getStatus());\n+        assertTrue(response.getMediaType().toString().startsWith(MediaType.TEXT_HTML));\n+        assertTrue(response.getEntity() instanceof InputStream);\n+        assertEquals(htmlTemplate, IOUtils.toString((InputStream) response.getEntity()));\n+\n+        // 4. remove HTML\n+        mailTemplateService.removeFormat(key, MailTemplateFormat.HTML);\n+\n+        try {\n+            mailTemplateService.getFormat(key, MailTemplateFormat.HTML);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+\n+        response = mailTemplateService.getFormat(key, MailTemplateFormat.TEXT);\n+        assertEquals(200, response.getStatus());\n+        assertTrue(response.getMediaType().toString().startsWith(MediaType.TEXT_PLAIN));\n+        assertTrue(response.getEntity() instanceof InputStream);\n+        assertEquals(textTemplate, IOUtils.toString((InputStream) response.getEntity()));\n+\n+        // 5. remove mail template\n+        mailTemplateService.delete(key);\n+\n+        try {\n+            mailTemplateService.read(key);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+        try {\n+            mailTemplateService.getFormat(key, MailTemplateFormat.HTML);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+        try {\n+            mailTemplateService.getFormat(key, MailTemplateFormat.TEXT);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+    }\n+}"},{"sha":"ab6bcdc79b2ea01e8f2f4569782a6dd1c21787c4","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac6f8d50daebcc0f1070f77a4df19059cfc2704/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=2ac6f8d50daebcc0f1070f77a4df19059cfc2704","patch":"@@ -389,7 +389,7 @@ under the License.\n     <font-awesome.version>4.5.0</font-awesome.version>\n     <ionicons.version>2.0.1</ionicons.version>\n     <highlightjs.version>8.7</highlightjs.version>\n-    <codemirror.version>5.8</codemirror.version>\n+    <codemirror.version>5.11</codemirror.version>\n     <jsplumb.version>1.7.5</jsplumb.version>\n     \n     <wicket.version>7.1.0</wicket.version>"}]}