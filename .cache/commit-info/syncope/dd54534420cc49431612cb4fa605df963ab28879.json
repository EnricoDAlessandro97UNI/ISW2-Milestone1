{"sha":"dd54534420cc49431612cb4fa605df963ab28879","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRkNTQ1MzQ0MjBjYzQ5NDMxNjEyY2I0ZmE2MDVkZjk2M2FiMjg4Nzk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-03-17T16:31:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-03-17T16:48:40Z"},"message":"[SYNCOPE-1622] Ensuring to copy ConnInstance#getPoolConf","tree":{"sha":"de37f2a6fd716bd7be7d402dbb0dc76408c2a206","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/de37f2a6fd716bd7be7d402dbb0dc76408c2a206"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dd54534420cc49431612cb4fa605df963ab28879","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd54534420cc49431612cb4fa605df963ab28879","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd54534420cc49431612cb4fa605df963ab28879","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd54534420cc49431612cb4fa605df963ab28879/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ba7b4374000d868ba693c107dff4c1a3db5aeb9f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ba7b4374000d868ba693c107dff4c1a3db5aeb9f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ba7b4374000d868ba693c107dff4c1a3db5aeb9f"}],"stats":{"total":43,"additions":18,"deletions":25},"files":[{"sha":"e08df2169fed9d161ea51ba21a11df6fce950fe2","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ConnectorLogic.java","status":"modified","additions":3,"deletions":19,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd54534420cc49431612cb4fa605df963ab28879/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd54534420cc49431612cb4fa605df963ab28879/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java?ref=dd54534420cc49431612cb4fa605df963ab28879","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Locale;\n import java.util.Objects;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n@@ -214,15 +215,14 @@ public List<ConnIdObjectClassTO> buildObjectClassInfo(\n         }\n \n         Set<ObjectClassInfo> objectClassInfo = connFactory.createConnector(\n-                connFactory.buildConnInstanceOverride(actual, connInstanceTO.getConf(), null)).\n+                connFactory.buildConnInstanceOverride(actual, connInstanceTO.getConf(), Optional.empty())).\n                 getObjectClassInfo();\n \n         return objectClassInfo.stream().map(info -> {\n             ConnIdObjectClassTO connIdObjectClassTO = new ConnIdObjectClassTO();\n             connIdObjectClassTO.setType(info.getType());\n             connIdObjectClassTO.setAuxiliary(info.isAuxiliary());\n             connIdObjectClassTO.setContainer(info.isContainer());\n-\n             connIdObjectClassTO.getAttributes().addAll(info.getAttributeInfo().stream().\n                     filter(attrInfo -> includeSpecial || !AttributeUtil.isSpecialName(attrInfo.getName())).\n                     map(attrInfo -> {\n@@ -231,23 +231,7 @@ public List<ConnIdObjectClassTO> buildObjectClassInfo(\n                         schema.setMandatoryCondition(BooleanUtils.toStringTrueFalse(attrInfo.isRequired()));\n                         schema.setMultivalue(attrInfo.isMultiValued());\n                         schema.setReadonly(!attrInfo.isUpdateable());\n-\n-                        if (attrInfo.getType().equals(int.class) || attrInfo.getType().equals(Integer.class)\n-                                || attrInfo.getType().equals(long.class) || attrInfo.getType().equals(Long.class)) {\n-\n-                            schema.setType(AttrSchemaType.Long);\n-                        } else if (attrInfo.getType().equals(float.class) || attrInfo.getType().equals(Float.class)\n-                                || attrInfo.getType().equals(double.class) || attrInfo.getType().equals(Double.class)) {\n-\n-                            schema.setType(AttrSchemaType.Double);\n-                        } else if (attrInfo.getType().equals(boolean.class)\n-                                || attrInfo.getType().equals(Boolean.class)) {\n-\n-                            schema.setType(AttrSchemaType.Boolean);\n-                        } else {\n-                            schema.setType(AttrSchemaType.String);\n-                        }\n-\n+                        schema.setType(AttrSchemaType.getAttrSchemaTypeByClass(attrInfo.getType()));\n                         return schema;\n                     }).\n                     collect(Collectors.toList()));"},{"sha":"e5859c4624e1fe87b56f0a1a6c215f4098906c5a","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd54534420cc49431612cb4fa605df963ab28879/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd54534420cc49431612cb4fa605df963ab28879/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=dd54534420cc49431612cb4fa605df963ab28879","patch":"@@ -444,7 +444,8 @@ public void check(final ResourceTO resourceTO) {\n                 connFactory.buildConnInstanceOverride(\n                         connInstanceDataBinder.getConnInstanceTO(connInstance),\n                         resourceTO.getConfOverride(),\n-                        resourceTO.isOverrideCapabilities() ? resourceTO.getCapabilitiesOverride() : null)).\n+                        resourceTO.isOverrideCapabilities()\n+                        ? Optional.of(resourceTO.getCapabilitiesOverride()) : Optional.empty())).\n                 test();\n     }\n "},{"sha":"2494df3279469416640ac662b3a70e3f018fa8ec","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/ConnectorFactory.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd54534420cc49431612cb4fa605df963ab28879/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnectorFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd54534420cc49431612cb4fa605df963ab28879/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnectorFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnectorFactory.java?ref=dd54534420cc49431612cb4fa605df963ab28879","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.api;\n \n import java.util.Collection;\n+import java.util.Optional;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n@@ -43,7 +44,7 @@ public interface ConnectorFactory {\n     ConnInstance buildConnInstanceOverride(\n             ConnInstanceTO connInstance,\n             Collection<ConnConfProperty> confOverride,\n-            Collection<ConnectorCapability> capabilitiesOverride);\n+            Optional<Collection<ConnectorCapability>> capabilitiesOverride);\n \n     /**\n      * Create connector from given connector instance."},{"sha":"57e861abefcaf27a6bc0079986d5f0af80c93499","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorManager.java","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd54534420cc49431612cb4fa605df963ab28879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd54534420cc49431612cb4fa605df963ab28879/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java?ref=dd54534420cc49431612cb4fa605df963ab28879","patch":"@@ -23,6 +23,7 @@\n import java.util.HashSet;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.Set;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n@@ -39,6 +40,7 @@\n import org.apache.syncope.core.provisioning.api.ConnectorRegistry;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.provisioning.api.data.ConnInstanceDataBinder;\n+import org.apache.syncope.core.provisioning.api.utils.ConnPoolConfUtils;\n import org.identityconnectors.common.l10n.CurrentLocale;\n import org.identityconnectors.framework.api.ConnectorFacadeFactory;\n import org.slf4j.Logger;\n@@ -87,7 +89,7 @@ public Connector getConnector(final ExternalResource resource) {\n     public ConnInstance buildConnInstanceOverride(\n             final ConnInstanceTO connInstance,\n             final Collection<ConnConfProperty> confOverride,\n-            final Collection<ConnectorCapability> capabilitiesOverride) {\n+            final Optional<Collection<ConnectorCapability>> capabilitiesOverride) {\n \n         synchronized (this) {\n             if (entityFactory == null) {\n@@ -131,9 +133,14 @@ public ConnInstance buildConnInstanceOverride(\n         override.setConf(conf);\n \n         // replace capabilities\n-        if (capabilitiesOverride != null) {\n+        capabilitiesOverride.ifPresent(capabilities -> {\n             override.getCapabilities().clear();\n-            override.getCapabilities().addAll(capabilitiesOverride);\n+            override.getCapabilities().addAll(capabilities);\n+        });\n+\n+        if (connInstance.getPoolConf() != null) {\n+            override.setPoolConf(\n+                    ConnPoolConfUtils.getConnPoolConf(connInstance.getPoolConf(), entityFactory.newConnPoolConf()));\n         }\n \n         return override;\n@@ -152,7 +159,7 @@ public void registerConnector(final ExternalResource resource) {\n         ConnInstance connInstance = buildConnInstanceOverride(\n                 connInstanceDataBinder.getConnInstanceTO(resource.getConnector()),\n                 resource.getConfOverride(),\n-                resource.isOverrideCapabilities() ? resource.getCapabilitiesOverride() : null);\n+                resource.isOverrideCapabilities() ? Optional.of(resource.getCapabilitiesOverride()) : Optional.empty());\n         Connector connector = createConnector(connInstance);\n         LOG.debug(\"Connector to be registered: {}\", connector);\n "}]}