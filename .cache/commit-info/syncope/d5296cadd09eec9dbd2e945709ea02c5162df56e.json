{"sha":"d5296cadd09eec9dbd2e945709ea02c5162df56e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ1Mjk2Y2FkZDA5ZWVjOWRiZDJlOTQ1NzA5ZWEwMmM1MTYyZGY1NmU=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-01-12T15:19:25Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-01-12T15:19:25Z"},"message":"[SYNCOPE-156] Refactoring Schemas panel and AnyTypesClasses panel","tree":{"sha":"805e10f44c9e1e309ca41786e97b518054c34617","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/805e10f44c9e1e309ca41786e97b518054c34617"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d5296cadd09eec9dbd2e945709ea02c5162df56e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5296cadd09eec9dbd2e945709ea02c5162df56e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d5296cadd09eec9dbd2e945709ea02c5162df56e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5296cadd09eec9dbd2e945709ea02c5162df56e/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"c8a536186162180aa25c147b9103b6646dca4dd3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c8a536186162180aa25c147b9103b6646dca4dd3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c8a536186162180aa25c147b9103b6646dca4dd3"}],"stats":{"total":1889,"additions":997,"deletions":892},"files":[{"sha":"46a61d73d0a5a904efebef525d5c164030a1fc90","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/PropertyList.java","status":"added","additions":213,"deletions":0,"changes":213,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPropertyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPropertyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPropertyList.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -0,0 +1,213 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+\n+public abstract class PropertyList<T> implements List<String> {\n+\n+    private final T objectTO;\n+\n+    public PropertyList(final T objectTO) {\n+        this.objectTO = objectTO;\n+    }\n+\n+    @Override\n+    public boolean add(final String item) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        final boolean res = list.add(item);\n+        setValues(list);\n+        return res;\n+    }\n+\n+    @Override\n+    public int size() {\n+        return getEnumValuesAsList(getValues()).size();\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+        return getEnumValuesAsList(getValues()).isEmpty();\n+    }\n+\n+    @Override\n+    public boolean contains(final Object o) {\n+        return getEnumValuesAsList(getValues()).contains(o);\n+    }\n+\n+    @Override\n+    public Iterator<String> iterator() {\n+        return getEnumValuesAsList(getValues()).iterator();\n+    }\n+\n+    @Override\n+    public Object[] toArray() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public <T> T[] toArray(final T[] a) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public boolean remove(final Object o) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        final boolean res = list.remove(o);\n+        setValues(list);\n+        return res;\n+    }\n+\n+    @Override\n+    public boolean containsAll(final Collection<?> c) {\n+        return getEnumValuesAsList(getValues()).containsAll(c);\n+    }\n+\n+    @Override\n+    public boolean addAll(final Collection<? extends String> c) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        boolean res = list.addAll(c);\n+        setValues(list);\n+        return res;\n+    }\n+\n+    @Override\n+    public boolean addAll(final int index, final Collection<? extends String> c) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        final boolean res = list.addAll(index, c);\n+        setValues(list);\n+        return res;\n+    }\n+\n+    @Override\n+    public boolean removeAll(final Collection<?> c) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        final boolean res = list.removeAll(c);\n+        setValues(list);\n+        return res;\n+    }\n+\n+    @Override\n+    public boolean retainAll(final Collection<?> c) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        final boolean res = list.retainAll(c);\n+        setValues(list);\n+        return res;\n+    }\n+\n+    @Override\n+    public void clear() {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        list.clear();\n+        setValues(list);\n+    }\n+\n+    @Override\n+    public String get(final int index) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        return list.get(index);\n+    }\n+\n+    @Override\n+    public String set(final int index, final String element) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        final String res = list.set(index, element);\n+        setValues(list);\n+        return res;\n+    }\n+\n+    @Override\n+    public void add(final int index, final String element) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public String remove(final int index) {\n+        final List<String> list = getEnumValuesAsList(getValues());\n+        final String res = list.remove(index);\n+        setValues(list);\n+        return res;\n+    }\n+\n+    @Override\n+    public int indexOf(final Object o) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public int lastIndexOf(final Object o) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public ListIterator<String> listIterator() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public ListIterator<String> listIterator(final int index) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public List<String> subList(final int fromIndex, final int toIndex) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    public static String getEnumValuesAsString(final List<String> enumerationValues) {\n+        final StringBuilder builder = new StringBuilder();\n+        int index = 0;\n+        for (String str : enumerationValues) {\n+            if (str != null) {\n+                if (index > 0) {\n+                    builder.append(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n+                }\n+                index++;\n+                builder.append(str.trim());\n+            }\n+        }\n+        return builder.toString();\n+    }\n+\n+    public static List<String> getEnumValuesAsList(final String enumerationValues) {\n+        final List<String> values = new ArrayList<>();\n+        if (StringUtils.isNotBlank(enumerationValues)) {\n+            for (String value : enumerationValues.split(SyncopeConstants.ENUM_VALUES_SEPARATOR)) {\n+                values.add(value.trim());\n+            }\n+            if (enumerationValues.trim().endsWith(SyncopeConstants.ENUM_VALUES_SEPARATOR)) {\n+                values.add(StringUtils.EMPTY);\n+            }\n+        } else {\n+            values.add(StringUtils.EMPTY);\n+        }\n+\n+        return values;\n+    }\n+\n+    public abstract String getValues();\n+\n+    public abstract void setValues(final List<String> list);\n+}"},{"sha":"c4f4f1394f816c652d32f123e7978cd0fd3cbfd8","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.UserWorkflowRestClient;\n import org.apache.syncope.client.console.topology.Topology;\n@@ -52,7 +53,7 @@ public BasePage() {\n     public BasePage(final PageParameters parameters) {\n         super(parameters);\n \n-        notificationPanel = new NotificationPanel(\"feedback\");\n+        notificationPanel = new NotificationPanel(Constants.FEEDBACK);\n         notificationPanel.setOutputMarkupId(true);\n         addOrReplace(notificationPanel);\n "},{"sha":"0d9fcc1d4975450ca56414853b12f0470afb59d3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Types.java","status":"modified","additions":2,"deletions":34,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -25,27 +25,18 @@\n import org.apache.syncope.client.console.panels.AnyTypePanel;\n import org.apache.syncope.client.console.panels.RelationshipTypePanel;\n import org.apache.syncope.client.console.panels.SchemasPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n \n public class Types extends BasePage {\n \n     private static final long serialVersionUID = 8091922398776299403L;\n \n-    private final BaseModal<AbstractSchemaTO> schemaModal;\n-\n-    private final BaseModal<AnyTypeClassTO> anyTypeClassModal;\n-\n     private final AjaxBootstrapTabbedPanel<ITab> tabbedPanel;\n \n     private enum Type {\n@@ -59,20 +50,12 @@ private enum Type {\n     public Types(final PageParameters parameters) {\n         super(parameters);\n \n-        this.schemaModal = new BaseModal<>(\"schemaModal\");\n-        this.anyTypeClassModal = new BaseModal<>(\"anyTypeClassModal\");\n-\n         final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.add(new Label(\"header\", \"Types\"));\n         content.setOutputMarkupId(true);\n         tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n         content.add(tabbedPanel);\n-\n         add(content);\n-        addWindowWindowClosedCallback(schemaModal);\n-        addWindowWindowClosedCallback(anyTypeClassModal);\n-        add(schemaModal);\n-        add(anyTypeClassModal);\n     }\n \n     private List<ITab> buildTabList() {\n@@ -105,7 +88,7 @@ public Panel getPanel(final String panelId) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new AnyTypeClassesPanel(panelId, getPageReference(), anyTypeClassModal);\n+                return new AnyTypeClassesPanel(panelId, getPageReference());\n             }\n         });\n \n@@ -115,25 +98,10 @@ public Panel getPanel(final String panelId) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new SchemasPanel(panelId, getPageReference(), schemaModal);\n+                return new SchemasPanel(panelId, getPageReference());\n             }\n         });\n \n         return tabs;\n     }\n-\n-    private void addWindowWindowClosedCallback(final BaseModal<?> modal) {\n-        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                tabbedPanel.setSelectedTab(tabbedPanel.getSelectedTab());\n-                target.add(tabbedPanel);\n-                modal.show(false);\n-                notificationPanel.refresh(target);\n-            }\n-        });\n-    }\n }"},{"sha":"ebddc5bc2b1cfda805ccca314527c9ac5556cbcd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSchemaDetailsPanel.java","status":"modified","additions":3,"deletions":21,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -18,13 +18,9 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n-import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n@@ -39,29 +35,18 @@ public abstract class AbstractSchemaDetailsPanel extends Panel {\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSchemaDetailsPanel.class);\n \n     protected static final String FORM = \"form\";\n-\n-    /**\n-     * Schema rest client for create and update operations\n-     */\n-    protected final SchemaRestClient schemaRestClient = new SchemaRestClient();\n     \n-    /**\n-     * Schema form\n-     */\n     protected final Form<AbstractSchemaTO> schemaForm;\n \n     protected final AbstractSchemaTO schemaTO;\n \n-    private final AbstractBasePage page;\n-\n     public AbstractSchemaDetailsPanel(\n             final String id,\n             final PageReference pageReference,\n-            final BaseModal<AbstractSchemaTO> modal) {\n+            final AbstractSchemaTO schemaTO) {\n         super(id);\n \n-        this.page = (AbstractBasePage) pageReference.getPage();\n-        this.schemaTO = modal.getFormModel();\n+        this.schemaTO = schemaTO;\n \n         schemaForm = new Form<>(FORM);\n         schemaForm.setModel(new CompoundPropertyModel<>(schemaTO));\n@@ -70,12 +55,9 @@ public AbstractSchemaDetailsPanel(\n         final AjaxTextFieldPanel name =\n                 new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(schemaTO, \"key\"));\n         name.addRequiredLabel();\n-        name.setEnabled(schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n+        name.setEnabled(schemaTO == null || schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n \n         schemaForm.add(name);\n         add(schemaForm);\n     }\n-\n-    public abstract void getOnSubmit(final AjaxRequestTarget target, final BaseModal<?> modal, final Form<?> form,\n-            final PageReference pageReference, final boolean createFlag);\n }"},{"sha":"a744d0a71cfd2c6d14f15137d3c46a5347b165e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -217,7 +217,7 @@ public void onClose(final AjaxRequestTarget target) {\n                 data.setRows(rows);\n \n                 send(getParent(), Broadcast.BREADTH, data);\n-                ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n+                page.getNotificationPanel().refresh(target);\n             }\n         });\n     }"},{"sha":"a06c0dd9f5752d8e0823352f18113dd5d9d46e75","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel.java","status":"renamed","additions":17,"deletions":7,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -22,14 +22,17 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class AnyTypeClassDetails extends Panel {\n+public class AnyTypeClassDetailsPanel extends Panel {\n \n     private static final long serialVersionUID = 3321861543207340469L;\n \n@@ -43,16 +46,26 @@ public class AnyTypeClassDetails extends Panel {\n \n     private final List<String> availableVirSchemas = schemaRestClient.getVirSchemaNames();\n \n-    public AnyTypeClassDetails(final String id,\n-            final AnyTypeClassTO anyTypeClassTO, final boolean edit) {\n+    public AnyTypeClassDetailsPanel(final String id, final AnyTypeClassTO anyTypeClassTO) {\n         super(id);\n \n         this.anyTypeClassTO = anyTypeClassTO;\n         buildAvailableSchemas(anyTypeClassTO.getKey());\n \n+        final Form<AnyTypeClassTO> antTypeClassForm = new Form<>(\"form\");\n+        antTypeClassForm.setModel(new CompoundPropertyModel<>(anyTypeClassTO));\n+        antTypeClassForm.setOutputMarkupId(true);\n+        add(antTypeClassForm);\n+\n+        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(\n+                this.anyTypeClassTO, \"key\"));\n+        key.addRequiredLabel();\n+        key.setEnabled(anyTypeClassTO.getKey() == null || this.anyTypeClassTO.getKey().isEmpty());\n+        antTypeClassForm.add(key);\n+\n         final TransparentWebMarkupContainer container = new TransparentWebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n-        add(container);\n+        antTypeClassForm.add(container);\n \n         final AjaxPalettePanel<String> plainSchema =\n                 new AjaxPalettePanel.Builder<String>()\n@@ -63,7 +76,6 @@ public AnyTypeClassDetails(final String id,\n                         new ListModel<>(availablePlainSchemas));\n \n         plainSchema.setOutputMarkupId(true);\n-        plainSchema.setEnabled(edit);\n         container.add(plainSchema);\n \n         final AjaxPalettePanel<String> derSchema =\n@@ -75,7 +87,6 @@ public AnyTypeClassDetails(final String id,\n                         new ListModel<>(availableDerSchemas));\n \n         derSchema.setOutputMarkupId(true);\n-        derSchema.setEnabled(edit);\n         container.add(derSchema);\n \n         final AjaxPalettePanel<String> virSchema =\n@@ -87,7 +98,6 @@ public AnyTypeClassDetails(final String id,\n                         new ListModel<>(availableVirSchemas));\n \n         virSchema.setOutputMarkupId(true);\n-        virSchema.setEnabled(edit);\n         container.add(virSchema);\n     }\n ","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassDetails.java"},{"sha":"64faa9eba2701f6c826ec834563f414a55ea51aa","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassModalPanel.java","status":"modified","additions":4,"deletions":48,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -18,67 +18,23 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n-import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.PropertyModel;\n \n public class AnyTypeClassModalPanel extends AbstractModalPanel<AnyTypeClassTO> {\n \n     private static final long serialVersionUID = 1086997609984272599L;\n \n     private final AnyTypeClassTO anyTypeClassTO;\n \n-    private final boolean createFlag;\n-\n     public AnyTypeClassModalPanel(\n             final BaseModal<AnyTypeClassTO> modal,\n-            final PageReference pageRef,\n-            final boolean createFlag) {\n+            final AnyTypeClassTO anyTypeClassTO,\n+            final PageReference pageRef) {\n         super(modal, pageRef);\n \n-        this.anyTypeClassTO = modal.getFormModel();\n-        this.createFlag = createFlag;\n-\n-        final Form<AnyTypeClassTO> antTypeClassForm = new Form<>(\"form\");\n-        antTypeClassForm.setModel(new CompoundPropertyModel<>(anyTypeClassTO));\n-        antTypeClassForm.setOutputMarkupId(true);\n-\n-        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(\n-                anyTypeClassTO, \"key\"));\n-        key.addRequiredLabel();\n-        key.setEnabled(anyTypeClassTO.getKey() == null || anyTypeClassTO.getKey().isEmpty());\n-        antTypeClassForm.add(key);\n-\n-        antTypeClassForm.add(new AnyTypeClassDetails(\"details\", anyTypeClassTO, true));\n-        add(antTypeClassForm);\n-    }\n-\n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-\n-        try {\n-            final AnyTypeClassTO updatedAnyTypeClassTO = AnyTypeClassTO.class.cast(form.getModelObject());\n-\n-            if (createFlag) {\n-                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).create(updatedAnyTypeClassTO);\n-            } else {\n-                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).update(updatedAnyTypeClassTO);\n-            }\n-\n-            info(getString(Constants.OPERATION_SUCCEEDED));\n-            modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While creating or updating AnyTypeClass\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getNotificationPanel().refresh(target);\n-        }\n+        this.anyTypeClassTO = anyTypeClassTO;\n+        add(new AnyTypeClassDetailsPanel(\"anyTypeClassDetailsPanel\", this.anyTypeClassTO));\n     }\n }"},{"sha":"4ece79e222543bb544b2bf42465167bd27df3a9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":189,"deletions":102,"changes":291,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -18,172 +18,259 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.IChoiceRenderer;\n-import org.apache.wicket.markup.html.form.ListChoice;\n-import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class AnyTypeClassesPanel extends Panel {\n+public class AnyTypeClassesPanel extends AbstractTypesPanel<AnyTypeClassTO, AnyTypeClassesPanel.AnyTypeClassProvider> {\n \n     private static final long serialVersionUID = -2356760296223908382L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AnyTypeClassesPanel.class);\n+    private final String pageID = \"AnyTypesClasses\";\n \n-    private final ListChoice<AnyTypeClassTO> anyTypeClasses;\n-\n-    private AnyTypeClassDetails anyTypeClassesDetails;\n-\n-    public AnyTypeClassesPanel(final String id, final PageReference pageRef, final BaseModal<AnyTypeClassTO> modal) {\n-        super(id);\n-        this.setOutputMarkupId(true);\n-\n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-        container.setOutputMarkupId(true);\n-        add(container);\n+    public AnyTypeClassesPanel(final String id,\n+            final AbstractSearchResultPanel.Builder<AnyTypeClassTO, AnyTypeClassTO, BaseRestClient> builder) {\n+        super(id, builder);\n+    }\n \n-        anyTypeClasses = new ListChoice<AnyTypeClassTO>(\n-                \"anyTypeClasses\", new Model<AnyTypeClassTO>(),\n-                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).list()) {\n+    public AnyTypeClassesPanel(final String id, final PageReference pageRef) {\n+        super(id, new AbstractSearchResultPanel.Builder<AnyTypeClassTO, AnyTypeClassTO, BaseRestClient>(null, pageRef) {\n \n-            private static final long serialVersionUID = 4022366881854379834L;\n+            private static final long serialVersionUID = 8769126634538601689L;\n \n             @Override\n-            protected CharSequence getDefaultChoice(final String selectedValue) {\n-                return null;\n+            protected WizardMgtPanel<AnyTypeClassTO> newInstance(final String id) {\n+                return new AnyTypeClassesPanel(id, this);\n             }\n-        };\n+        });\n \n-        anyTypeClasses.setChoiceRenderer(new IChoiceRenderer<AnyTypeClassTO>() {\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeClassTO>(\n+                BaseModal.CONTENT_ID, new AnyTypeClassTO(), pageRef) {\n \n-            private static final long serialVersionUID = 1048000918946220007L;\n+            private static final long serialVersionUID = -6388405037134399367L;\n \n             @Override\n-            public Object getDisplayValue(final AnyTypeClassTO object) {\n-                return object.getKey();\n+            public ModalPanel<AnyTypeClassTO> build(final int index, final boolean edit) {\n+                final AnyTypeClassTO modelObject = newModelObject();\n+                return new AnyTypeClassModalPanel(modal, modelObject, pageRef) {\n+\n+                    private static final long serialVersionUID = -6227956682141146095L;\n+\n+                    @Override\n+                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n+                                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).create(modelObject);\n+                            } else {\n+                                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).update(modelObject);\n+                            }\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            modal.close(target);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While creating or updating AnyTypeClassTO\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            modal.getNotificationPanel().refresh(target);\n+                        }\n+                    }\n+                };\n             }\n \n             @Override\n-            public String getIdValue(final AnyTypeClassTO object, final int index) {\n-                return object.getKey();\n+            protected void onCancelInternal(final AnyTypeClassTO modelObject) {\n             }\n \n             @Override\n-            public AnyTypeClassTO getObject(final String id,\n-                    final IModel<? extends List<? extends AnyTypeClassTO>> choices) {\n-                for (AnyTypeClassTO item : choices.getObject()) {\n-                    if (item.getKey().equals(id)) {\n-                        return item;\n-                    }\n-                }\n-                return null;\n+            protected void onApplyInternal(final AnyTypeClassTO modelObject) {\n             }\n-        });\n+        }, true);\n \n-        anyTypeClasses.setNullValid(true);\n-        container.add(anyTypeClasses);\n+        initResultTable();\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.ANYTYPE_CREATE);\n+    }\n \n-        updateAnyTypeClassDetails(new AnyTypeClassTO(), false);\n-        container.add(anyTypeClassesDetails);\n+    @Override\n+    protected AnyTypeClassesPanel.AnyTypeClassProvider dataProvider() {\n+        return new AnyTypeClassesPanel.AnyTypeClassProvider(rows);\n+    }\n \n-        anyTypeClasses.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_ANYTYPE_PAGINATOR_ROWS;\n+    }\n \n-            private static final long serialVersionUID = -1107858522700306810L;\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n \n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                updateAnyTypeClassDetails(anyTypeClasses.getModelObject(), true);\n-                container.addOrReplace(anyTypeClassesDetails);\n-                target.add(container);\n-            }\n-        });\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n \n-        final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(pageRef);\n-        actionLinks.setDisableIndicator(true);\n-        actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+    @Override\n+    protected List<IColumn<AnyTypeClassTO, String>> getColumns() {\n \n-            private static final long serialVersionUID = -3722207913631435501L;\n+        final List<IColumn<AnyTypeClassTO, String>> columns = new ArrayList<>();\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                modal.header(new ResourceModel(\"createAnyTypeClass\"));\n-                modal.setFormModel(new AnyTypeClassTO());\n-                modal.size(Modal.Size.Large);\n-                target.add(modal.setContent(new AnyTypeClassModalPanel(modal, pageRef, true)));\n-                modal.addSumbitButton();\n-                modal.show(true);\n+        for (Field field : AnyTypeClassTO.class.getDeclaredFields()) {\n+\n+            if (field != null && !Modifier.isStatic(field.getModifiers())) {\n+                final String fieldName = field.getName();\n+                if (field.getType().isArray()) {\n+                    final IColumn<AnyTypeClassTO, String> column = new PropertyColumn<AnyTypeClassTO, String>(\n+                            new ResourceModel(field.getName()), field.getName()) {\n+\n+                        private static final long serialVersionUID = 3282547854226892169L;\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            String css = super.getCssClass();\n+                            if (\"key\".equals(fieldName)) {\n+                                css = StringUtils.isBlank(css)\n+                                        ? \"medium_fixedsize\"\n+                                        : css + \" medium_fixedsize\";\n+                            }\n+                            return css;\n+                        }\n+                    };\n+                    columns.add(column);\n+\n+                } else {\n+                    final IColumn<AnyTypeClassTO, String> column = new PropertyColumn<AnyTypeClassTO, String>(\n+                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n+\n+                        private static final long serialVersionUID = 3282547854226892169L;\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            String css = super.getCssClass();\n+                            if (\"key\".equals(fieldName)) {\n+                                css = StringUtils.isBlank(css)\n+                                        ? \"medium_fixedsize\"\n+                                        : css + \" medium_fixedsize\";\n+                            }\n+                            return css;\n+                        }\n+                    };\n+                    columns.add(column);\n+                }\n             }\n-        }, ActionLink.ActionType.CREATE, StandardEntitlement.ANYTYPECLASS_CREATE).addWithRoles(\n-                new ActionLink<Serializable>() {\n+        }\n+\n+        columns.add(new AbstractColumn<AnyTypeClassTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n-            private static final long serialVersionUID = -3722207913631435501L;\n+            private static final long serialVersionUID = 2054811145491901166L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                if (anyTypeClasses != null && anyTypeClasses.getModelObject() != null) {\n-                    modal.header(Model.of(anyTypeClasses.getModelObject().getKey()));\n-                    modal.setFormModel(anyTypeClasses.getModelObject());\n-                    modal.addSumbitButton();\n-                    modal.show(true);\n-                    target.add(modal.setContent(new AnyTypeClassModalPanel(modal, pageRef, false)));\n-                }\n+            public String getCssClass() {\n+                return \"action\";\n             }\n-        }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPECLASS_UPDATE).addWithRoles(\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<AnyTypeClassTO>> item, final String componentId,\n+                    final IModel<AnyTypeClassTO> model) {\n+\n+                final ActionLinksPanel.Builder<Serializable> actionLinks =\n+                        ActionLinksPanel.builder(page.getPageReference());\n+                actionLinks.setDisableIndicator(true);\n+                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        send(AnyTypeClassesPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    }\n+                }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPECLASS_UPDATE).addWithRoles(\n                         new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         try {\n-                            if (anyTypeClasses != null && anyTypeClasses.getModelObject() != null) {\n-                                SyncopeConsoleSession.get()\n-                                        .getService(AnyTypeClassService.class).delete(anyTypeClasses.getModelObject().\n-                                        getKey());\n-                                anyTypeClasses.setModelObject(null);\n-                                anyTypeClasses.setChoices(SyncopeConsoleSession.get().getService(\n-                                        AnyTypeClassService.class).\n-                                        list());\n-                                target.add(anyTypeClasses);\n-                                target.add(updateAnyTypeClassDetails(new AnyTypeClassTO(), true));\n-                                info(getString(Constants.OPERATION_SUCCEEDED));\n-                            }\n+                            SyncopeConsoleSession.get().\n+                                    getService(AnyTypeClassService.class).delete(model.getObject().getKey());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n                         } catch (Exception e) {\n-                            LOG.error(\"While deleting AnyTypeClass\", e);\n+                            LOG.error(\"While deleting AnyTypeClassTO\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         }\n                         ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE);\n \n-        container.add(actionLinks.build(\"editRemove\"));\n+                item.add(actionLinks.build(componentId));\n+            }\n+        });\n+\n+        return columns;\n+\n     }\n \n-    private Panel updateAnyTypeClassDetails(final AnyTypeClassTO anyTypeClassTO, final boolean visible) {\n-        anyTypeClassesDetails = new AnyTypeClassDetails(\"anyTypeClassesDetails\", anyTypeClassTO, false);\n-        anyTypeClassesDetails.setOutputMarkupId(true);\n-        anyTypeClassesDetails.setOutputMarkupPlaceholderTag(true);\n-        anyTypeClassesDetails.setVisible(visible);\n-        anyTypeClassesDetails.setEnabled(false);\n-        return anyTypeClassesDetails;\n+    protected final class AnyTypeClassProvider extends SearchableDataProvider<AnyTypeClassTO> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final SortableDataProviderComparator<AnyTypeClassTO> comparator;\n+\n+        private AnyTypeClassProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<AnyTypeClassTO> iterator(final long first, final long count) {\n+            final List<AnyTypeClassTO> list = SyncopeConsoleSession.get().getService(AnyTypeClassService.class).list();\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return SyncopeConsoleSession.get().getService(AnyTypeClassService.class).list().size();\n+        }\n+\n+        @Override\n+        public IModel<AnyTypeClassTO> model(final AnyTypeClassTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n     }\n }"},{"sha":"5c4b7d04bc59aa3c4d7e434531a28aea984cd658","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DerSchemaDetails.java","status":"modified","additions":2,"deletions":28,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -18,17 +18,12 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n-import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.PropertyModel;\n \n public class DerSchemaDetails extends AbstractSchemaDetailsPanel {\n@@ -37,8 +32,8 @@ public class DerSchemaDetails extends AbstractSchemaDetailsPanel {\n \n     public DerSchemaDetails(final String id,\n             final PageReference pageReference,\n-            final BaseModal<AbstractSchemaTO> modal) {\n-        super(id, pageReference, modal);\n+            final AbstractSchemaTO schemaTO) {\n+        super(id, pageReference, schemaTO);\n \n         final AjaxTextFieldPanel expression = new AjaxTextFieldPanel(\"expression\", getString(\"expression\"),\n                 new PropertyModel<String>(schemaTO, \"expression\"));\n@@ -51,25 +46,4 @@ public DerSchemaDetails(final String id,\n         schemaForm.add(questionMarkJexlHelp);\n         questionMarkJexlHelp.add(jexlHelp);\n     }\n-\n-    @Override\n-    public void getOnSubmit(final AjaxRequestTarget target,\n-            final BaseModal<?> modal, final Form<?> form, final PageReference pageReference, final boolean createFlag) {\n-\n-        try {\n-            final DerSchemaTO updatedDerSchemaTO = DerSchemaTO.class.cast(form.getModelObject());\n-            if (createFlag) {\n-                schemaRestClient.createDerSchema(updatedDerSchemaTO);\n-            } else {\n-                schemaRestClient.updateDerSchema(updatedDerSchemaTO);\n-            }\n-\n-            info(getString(Constants.OPERATION_SUCCEEDED));\n-            modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While creating or updating derived schema\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getNotificationPanel().refresh(target);\n-        }\n-    }\n }"},{"sha":"ce41387b22dfdd4573d2a75f89e24daffae5012c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/NotificationPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationPanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -37,6 +37,7 @@ public class NotificationPanel extends FeedbackPanel {\n     public NotificationPanel(final String id) {\n         super(id);\n \n+        //element.kendoNotification.widget.fn.options.autoHideAfter\n         final Options options = new Options();\n         options.set(\"position\", \"{ pinned: true }\");\n         options.set(\"templates\","},{"sha":"2f6ed23e3d361ebe019d8761d14e48c22dcb5434","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"modified","additions":90,"deletions":80,"changes":170,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -24,15 +24,15 @@\n import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n+import org.apache.syncope.client.console.commons.PropertyList;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n@@ -44,12 +44,10 @@\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n-import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.util.string.Strings;\n \n public class PlainSchemaDetails extends AbstractSchemaDetailsPanel {\n@@ -65,14 +63,14 @@ public class PlainSchemaDetails extends AbstractSchemaDetailsPanel {\n     public PlainSchemaDetails(\n             final String id,\n             final PageReference pageReference,\n-            final BaseModal<AbstractSchemaTO> modal) {\n-        super(id, pageReference, modal);\n+            final AbstractSchemaTO schemaTO) {\n+        super(id, pageReference, schemaTO);\n \n         final AjaxDropDownChoicePanel<AttrSchemaType> type = new AjaxDropDownChoicePanel<>(\n                 \"type\", getString(\"type\"), new PropertyModel<AttrSchemaType>(schemaTO, \"type\"));\n \n         type.setChoices(Arrays.asList(AttrSchemaType.values()));\n-        type.setEnabled(schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n+        type.setEnabled(schemaTO == null || schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n         type.addRequiredLabel();\n \n         schemaForm.add(type);\n@@ -97,14 +95,80 @@ public PlainSchemaDetails(\n         final AjaxTextFieldPanel enumerationValuesPanel = new AjaxTextFieldPanel(\"panel\", \"enumerationValues\",\n                 new Model<String>(null));\n \n-        enumerationValues = new MultiFieldPanel.Builder<>(\n-                new ListModel<String>(getEnumValuesAsList(((PlainSchemaTO) schemaTO).getEnumerationValues()))).build(\n+        enumerationValues = new MultiFieldPanel.Builder<String>(\n+                new PropertyModel<List<String>>(schemaTO, \"enumerationValues\") {\n+\n+            private static final long serialVersionUID = -4953564762272833993L;\n+\n+            @Override\n+            public PropertyList<PlainSchemaTO> getObject() {\n+                return new PropertyList<PlainSchemaTO>(PlainSchemaTO.class.cast(schemaTO)) {\n+\n+                    @Override\n+                    public String getValues() {\n+                        return PlainSchemaTO.class.cast(schemaTO).getEnumerationValues();\n+                    }\n+\n+                    @Override\n+                    public void setValues(final List<String> list) {\n+                        PlainSchemaTO.class.cast(schemaTO).setEnumerationValues(getEnumValuesAsString(list));\n+                    }\n+                };\n+            }\n+\n+            @Override\n+            public void setObject(final List<String> object) {\n+                PlainSchemaTO.class.cast(schemaTO).setEnumerationValues(PropertyList.getEnumValuesAsString(object));\n+            }\n+        }) {\n+\n+            private static final long serialVersionUID = -8752965211744734798L;\n+\n+            @Override\n+            protected String newModelObject() {\n+                return StringUtils.EMPTY;\n+            }\n+\n+        }.build(\n                 \"enumerationValues\",\n                 \"enumerationValues\",\n                 enumerationValuesPanel);\n \n-        enumerationKeys = new MultiFieldPanel.Builder<>(\n-                new ListModel<String>(getEnumValuesAsList(((PlainSchemaTO) schemaTO).getEnumerationKeys()))).build(\n+        enumerationKeys = new MultiFieldPanel.Builder<String>(\n+                new PropertyModel<List<String>>(schemaTO, \"enumerationKeys\") {\n+\n+            private static final long serialVersionUID = -4953564762272833993L;\n+\n+            @Override\n+            public PropertyList<PlainSchemaTO> getObject() {\n+                return new PropertyList<PlainSchemaTO>(PlainSchemaTO.class.cast(schemaTO)) {\n+\n+                    @Override\n+                    public String getValues() {\n+                        return PlainSchemaTO.class.cast(schemaTO).getEnumerationKeys();\n+                    }\n+\n+                    @Override\n+                    public void setValues(final List<String> list) {\n+                        PlainSchemaTO.class.cast(schemaTO).setEnumerationKeys(PropertyList.getEnumValuesAsString(list));\n+                    }\n+                };\n+            }\n+\n+            @Override\n+            public void setObject(final List<String> object) {\n+                PlainSchemaTO.class.cast(schemaTO).setEnumerationKeys(PropertyList.getEnumValuesAsString(object));\n+            }\n+        }) {\n+\n+            private static final long serialVersionUID = -8752965211744734798L;\n+\n+            @Override\n+            protected String newModelObject() {\n+                return StringUtils.EMPTY;\n+            }\n+\n+        }.build(\n                 \"enumerationKeys\",\n                 \"enumerationKeys\",\n                 new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model<String>()));\n@@ -172,7 +236,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected List<String> load() {\n-                return schemaRestClient.getAllValidatorClasses();\n+                return new ArrayList<>(SyncopeConsoleSession.get().getSyncopeTO().getValidators());\n             }\n         };\n \n@@ -182,8 +246,8 @@ protected List<String> load() {\n         validatorClass.setChoices(validatorsList.getObject());\n         schemaForm.add(validatorClass);\n \n-        final AutoCompleteTextField<String> mandatoryCondition\n-                = new AutoCompleteTextField<String>(\"mandatoryCondition\") {\n+        final AutoCompleteTextField<String> mandatoryCondition =\n+                new AutoCompleteTextField<String>(\"mandatoryCondition\") {\n \n             private static final long serialVersionUID = -2428903969518079100L;\n \n@@ -251,8 +315,8 @@ private void showHide(final AbstractSchemaTO schema, final AjaxDropDownChoicePan\n             if (enumerationValuesPanel.isRequired()) {\n                 enumerationValuesPanel.removeRequiredLabel();\n             }\n-            enumerationValues.setModelObject(getEnumValuesAsList(null));\n-            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(null));\n \n             encryptedParams.setVisible(false);\n             if (secretKey.isRequired()) {\n@@ -275,8 +339,10 @@ private void showHide(final AbstractSchemaTO schema, final AjaxDropDownChoicePan\n             if (!enumerationValuesPanel.isRequired()) {\n                 enumerationValuesPanel.addRequiredLabel();\n             }\n-            enumerationValues.setModelObject(getEnumValuesAsList(((PlainSchemaTO) schema).getEnumerationValues()));\n-            enumerationKeys.setModelObject(getEnumValuesAsList(((PlainSchemaTO) schema).getEnumerationKeys()));\n+            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(((PlainSchemaTO) schema).\n+                    getEnumerationValues()));\n+            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(((PlainSchemaTO) schema).\n+                    getEnumerationKeys()));\n \n             encryptedParams.setVisible(false);\n             if (secretKey.isRequired()) {\n@@ -299,8 +365,8 @@ private void showHide(final AbstractSchemaTO schema, final AjaxDropDownChoicePan\n             if (enumerationValuesPanel.isRequired()) {\n                 enumerationValuesPanel.removeRequiredLabel();\n             }\n-            enumerationValues.setModelObject(getEnumValuesAsList(null));\n-            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(null));\n \n             encryptedParams.setVisible(true);\n             if (!secretKey.isRequired()) {\n@@ -321,8 +387,8 @@ private void showHide(final AbstractSchemaTO schema, final AjaxDropDownChoicePan\n             if (enumerationValuesPanel.isRequired()) {\n                 enumerationValuesPanel.removeRequiredLabel();\n             }\n-            enumerationValues.setModelObject(getEnumValuesAsList(null));\n-            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(null));\n \n             encryptedParams.setVisible(false);\n             if (secretKey.isRequired()) {\n@@ -345,8 +411,8 @@ private void showHide(final AbstractSchemaTO schema, final AjaxDropDownChoicePan\n             if (enumerationValuesPanel.isRequired()) {\n                 enumerationValuesPanel.removeRequiredLabel();\n             }\n-            enumerationValues.setModelObject(getEnumValuesAsList(null));\n-            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+            enumerationValues.setModelObject(PropertyList.getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(PropertyList.getEnumValuesAsList(null));\n \n             encryptedParams.setVisible(false);\n             if (secretKey.isRequired()) {\n@@ -363,60 +429,4 @@ private void showHide(final AbstractSchemaTO schema, final AjaxDropDownChoicePan\n             mimeType.setChoices(null);\n         }\n     }\n-\n-    private String getEnumValuesAsString(final List<String> enumerationValues) {\n-        final StringBuilder builder = new StringBuilder();\n-\n-        for (String str : enumerationValues) {\n-            if (StringUtils.isNotBlank(str)) {\n-                if (builder.length() > 0) {\n-                    builder.append(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n-                }\n-\n-                builder.append(str.trim());\n-            }\n-        }\n-\n-        return builder.toString();\n-    }\n-\n-    private List<String> getEnumValuesAsList(final String enumerationValues) {\n-        final List<String> values = new ArrayList<>();\n-\n-        if (StringUtils.isNotBlank(enumerationValues)) {\n-            for (String value : enumerationValues.split(SyncopeConstants.ENUM_VALUES_SEPARATOR)) {\n-                values.add(value.trim());\n-            }\n-        } else {\n-            values.add(StringUtils.EMPTY);\n-        }\n-\n-        return values;\n-    }\n-\n-    @Override\n-    public void getOnSubmit(final AjaxRequestTarget target, final BaseModal<?> modal,\n-            final Form<?> form, final PageReference pageReference, final boolean createFlag) {\n-\n-        try {\n-            final PlainSchemaTO updatedPlainSchemaTO = PlainSchemaTO.class.cast(form.getModelObject());\n-\n-            updatedPlainSchemaTO.setEnumerationValues(\n-                    getEnumValuesAsString(enumerationValues.getView().getModelObject()));\n-            updatedPlainSchemaTO.setEnumerationKeys(getEnumValuesAsString(enumerationKeys.getView().getModelObject()));\n-\n-            if (createFlag) {\n-                schemaRestClient.createPlainSchema(updatedPlainSchemaTO);\n-            } else {\n-                schemaRestClient.updatePlainSchema(updatedPlainSchemaTO);\n-            }\n-\n-            info(getString(Constants.OPERATION_SUCCEEDED));\n-            modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While creating or updating plain schema\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getNotificationPanel().refresh(target);\n-        }\n-    }\n }"},{"sha":"dabeb8564acc7c3d2731f9426a9df42a3fc15c48","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaModalPanel.java","status":"modified","additions":12,"deletions":41,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -19,36 +19,30 @@\n package org.apache.syncope.client.console.panels;\n \n import java.util.Arrays;\n-import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n \n public class SchemaModalPanel extends AbstractModalPanel<AbstractSchemaTO> {\n \n     private static final long serialVersionUID = -4681998932778822125L;\n \n-    private AbstractSchemaDetailsPanel schemaPanel;\n+    private final AbstractSchemaDetailsPanel schemaPanel;\n \n-    private final boolean createFlag;\n+    private final AbstractSchemaTO schemaTO;\n \n     public SchemaModalPanel(\n             final BaseModal<AbstractSchemaTO> modal,\n-            final PageReference pageRef, final boolean createFlag) {\n+            final AbstractSchemaTO schemaTO,\n+            final PageReference pageRef) {\n         super(modal, pageRef);\n \n-        this.createFlag = createFlag;\n-        final BaseModal<AbstractSchemaTO> schemaModal = modal;\n+        this.schemaTO = schemaTO;\n \n-        final Panel panel = this;\n         final Form<SchemaType> kindForm = new Form<>(\"kindForm\");\n         add(kindForm);\n \n@@ -57,29 +51,11 @@ public SchemaModalPanel(\n         kind.setChoices(Arrays.asList(SchemaType.values()));\n         kind.setOutputMarkupId(true);\n \n-        SchemaType schemaType = SchemaType.PLAIN;\n-        if (!createFlag) {\n-            schemaType = SchemaType.fromToClass(schemaModal.getFormModel().getClass());\n-            kind.setModelObject(schemaType);\n-            kind.setEnabled(false);\n-        }\n-\n-        ((DropDownChoice) kind.getField()).setNullValid(false);\n+        kind.setModelObject(SchemaType.fromToClass(schemaTO.getClass()));\n+        kind.setEnabled(false);\n         kindForm.add(kind);\n \n-        kind.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                schemaPanel = getSchemaPanel(\"details\", kind.getModelObject(), modal);\n-                panel.addOrReplace(schemaPanel);\n-                target.add(panel);\n-            }\n-        });\n-\n-        schemaPanel = getSchemaPanel(\"details\", schemaType, modal);\n+        schemaPanel = getSchemaPanel(\"details\", SchemaType.fromToClass(schemaTO.getClass()), modal);\n         schemaPanel.setOutputMarkupId(true);\n         addOrReplace(schemaPanel);\n     }\n@@ -88,7 +64,7 @@ private AbstractSchemaDetailsPanel getSchemaPanel(final String id,\n             final SchemaType schemaType, final BaseModal<AbstractSchemaTO> modal) {\n         final AbstractSchemaDetailsPanel panel;\n \n-        if (createFlag) {\n+        if (schemaTO.getKey() != null) {\n             try {\n                 final Class<? extends AbstractSchemaTO> schemaTOClass = schemaType.getToClass();\n                 modal.setFormModel((AbstractSchemaTO) schemaTOClass.newInstance());\n@@ -99,21 +75,16 @@ private AbstractSchemaDetailsPanel getSchemaPanel(final String id,\n \n         switch (schemaType) {\n             case DERIVED:\n-                panel = new DerSchemaDetails(id, pageRef, modal);\n+                panel = new DerSchemaDetails(id, pageRef, schemaTO);\n                 break;\n             case VIRTUAL:\n-                panel = new VirSchemaDetails(id, pageRef, modal);\n+                panel = new VirSchemaDetails(id, pageRef, schemaTO);\n                 break;\n             case PLAIN:\n             default:\n-                panel = new PlainSchemaDetails(id, pageRef, modal);\n+                panel = new PlainSchemaDetails(id, pageRef, schemaTO);\n         }\n         panel.setOutputMarkupId(true);\n         return panel;\n     }\n-\n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        schemaPanel.getOnSubmit(target, modal, form, pageRef, createFlag);\n-    }\n }"},{"sha":"d8809f25dd0a4f4ddee7201f5e793e3c6b4c5f96","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"added","additions":359,"deletions":0,"changes":359,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -0,0 +1,359 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.panels.SchemaTypePanel.SchemaProvider;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.rest.api.service.SchemaService;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.springframework.beans.BeanWrapper;\n+import org.springframework.beans.BeanWrapperImpl;\n+import org.springframework.util.ReflectionUtils;\n+\n+public class SchemaTypePanel extends AbstractTypesPanel<AbstractSchemaTO, SchemaProvider> {\n+\n+    private static final long serialVersionUID = 3905038169553185171L;\n+\n+    private static final Map<SchemaType, List<String>> COL_NAMES = new HashMap<SchemaType, List<String>>() {\n+\n+        private static final long serialVersionUID = 3109256773218160485L;\n+\n+        {\n+            put(SchemaType.PLAIN, Arrays.asList(new String[] { \"key\", \"type\",\n+                \"mandatoryCondition\", \"uniqueConstraint\", \"multivalue\", \"readonly\" }));\n+            put(SchemaType.DERIVED, Arrays.asList(new String[] { \"key\", \"expression\" }));\n+            put(SchemaType.VIRTUAL, Arrays.asList(new String[] { \"key\", \"provision\", \"extAttrName\", \"readonly\" }));\n+        }\n+    };\n+\n+    private final String pageID = \"Schema\";\n+\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    private final SchemaType schemaType;\n+\n+    public SchemaTypePanel(final String id, final SchemaType schemaType,\n+            final AbstractSearchResultPanel.Builder<AbstractSchemaTO, AbstractSchemaTO, BaseRestClient> builder) {\n+        super(id, builder);\n+\n+        this.schemaType = schemaType;\n+    }\n+\n+    public SchemaTypePanel(final String id, final SchemaType schemaType, final PageReference pageRef) {\n+        super(id, new AbstractSearchResultPanel.Builder<AbstractSchemaTO, AbstractSchemaTO, BaseRestClient>(null,\n+                pageRef) {\n+\n+            private static final long serialVersionUID = 8769126634538601689L;\n+\n+            @Override\n+            protected WizardMgtPanel<AbstractSchemaTO> newInstance(final String id) {\n+                return new SchemaTypePanel(id, schemaType, this);\n+            }\n+        });\n+\n+        this.schemaType = schemaType;\n+\n+        try {\n+            this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AbstractSchemaTO>(\n+                    BaseModal.CONTENT_ID, schemaType.getToClass().newInstance(), pageRef) {\n+\n+                private static final long serialVersionUID = -6388405037134399367L;\n+\n+                @Override\n+                public ModalPanel<AbstractSchemaTO> build(final int index, final boolean edit) {\n+                    final AbstractSchemaTO modelObject = newModelObject();\n+                    return new SchemaModalPanel(modal, modelObject, pageRef) {\n+\n+                        private static final long serialVersionUID = -6227956682141146095L;\n+\n+                        @Override\n+                        public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                            try {\n+                                if (getOriginalItem() == null || StringUtils.isBlank(getOriginalItem().getKey())) {\n+                                    SyncopeConsoleSession.get().getService(\n+                                            SchemaService.class).create(schemaType, modelObject);\n+                                } else {\n+                                    SyncopeConsoleSession.get().getService(\n+                                            SchemaService.class).update(schemaType, modelObject);\n+                                }\n+                                info(getString(Constants.OPERATION_SUCCEEDED));\n+                                modal.close(target);\n+                            } catch (Exception e) {\n+                                LOG.error(\"While creating or updating schema\", e);\n+                                error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            }\n+                            modal.getNotificationPanel().refresh(target);\n+                        }\n+                    };\n+                }\n+\n+                @Override\n+                protected void onCancelInternal(final AbstractSchemaTO modelObject) {\n+                }\n+\n+                @Override\n+                protected void onApplyInternal(final AbstractSchemaTO modelObject) {\n+                }\n+            }, true);\n+\n+            initResultTable();\n+            MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.SCHEMA_LIST);\n+        } catch (InstantiationException | IllegalAccessException e) {\n+            LOG.error(\"Error create new schema\", e);\n+        }\n+    }\n+\n+    @Override\n+    protected SchemaProvider dataProvider() {\n+        return new SchemaProvider(rows, schemaType);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_ANYTYPE_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n+\n+    @Override\n+    protected List<IColumn<AbstractSchemaTO, String>> getColumns() {\n+\n+        final List<IColumn<AbstractSchemaTO, String>> columns = new ArrayList<>();\n+\n+        for (final String field : COL_NAMES.get(schemaType)) {\n+            final Field clazzField = ReflectionUtils.findField(schemaType.getToClass(), field);\n+\n+            if (clazzField != null) {\n+                if (clazzField.getType().equals(Boolean.class\n+                ) || clazzField.getType().equals(boolean.class\n+                )) {\n+                    columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(field)) {\n+\n+                        private static final long serialVersionUID = 8263694778917279290L;\n+\n+                        @Override\n+                        public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item,\n+                                final String componentId, final IModel<AbstractSchemaTO> model) {\n+\n+                            BeanWrapper bwi = new BeanWrapperImpl(model.getObject());\n+                            Object obj = bwi.getPropertyValue(field);\n+\n+                            item.add(new Label(componentId, StringUtils.EMPTY));\n+                            if (Boolean.valueOf(obj.toString())) {\n+                                item.add(new AttributeModifier(\"class\", \"glyphicon glyphicon-ok\"));\n+                                item.add(new AttributeModifier(\"style\", \"display: table-cell; text-align: center;\"));\n+                            }\n+                        }\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            return \"short_fixedsize\";\n+                        }\n+                    });\n+                } else {\n+                    final IColumn<AbstractSchemaTO, String> column = new PropertyColumn<AbstractSchemaTO, String>(\n+                            new ResourceModel(field), field, field) {\n+\n+                        private static final long serialVersionUID = 3282547854226892169L;\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            String css = super.getCssClass();\n+                            if (\"key\".equals(field)) {\n+                                css = StringUtils.isBlank(css)\n+                                        ? \"medium_fixedsize\"\n+                                        : css + \" medium_fixedsize\";\n+                            }\n+                            return css;\n+                        }\n+                    };\n+                    columns.add(column);\n+                }\n+            }\n+        }\n+\n+        columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item, final String componentId,\n+                    final IModel<AbstractSchemaTO> model) {\n+\n+                final AbstractSchemaTO schemaTO = model.getObject();\n+\n+                final ActionLinksPanel.Builder<Serializable> actionLinks =\n+                        ActionLinksPanel.builder(page.getPageReference());\n+                actionLinks.setDisableIndicator(true);\n+                actionLinks.setDisableIndicator(true);\n+                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        send(SchemaTypePanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                    }\n+                }, ActionLink.ActionType.EDIT, StandardEntitlement.SCHEMA_UPDATE).addWithRoles(\n+                        new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        try {\n+                            switch (schemaType) {\n+                                case DERIVED:\n+                                    schemaRestClient.deleteDerSchema(schemaTO.getKey());\n+                                    break;\n+\n+                                case VIRTUAL:\n+                                    schemaRestClient.deleteVirSchema(schemaTO.getKey());\n+                                    break;\n+\n+                                default:\n+                                    schemaRestClient.deletePlainSchema(schemaTO.getKey());\n+                                    break;\n+                            }\n+\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (Exception e) {\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                        }\n+                        ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.SCHEMA_DELETE);\n+\n+                item.add(actionLinks.build(componentId));\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    private String getEnumValuesAsString(final List<String> enumerationValues) {\n+        final StringBuilder builder = new StringBuilder();\n+\n+        for (String str : enumerationValues) {\n+            if (StringUtils.isNotBlank(str)) {\n+                if (builder.length() > 0) {\n+                    builder.append(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n+                }\n+\n+                builder.append(str.trim());\n+            }\n+        }\n+\n+        return builder.toString();\n+    }\n+\n+    protected final class SchemaProvider extends SearchableDataProvider<AbstractSchemaTO> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final SortableDataProviderComparator<AbstractSchemaTO> comparator;\n+\n+        private final SchemaType schemaType;\n+\n+        private SchemaProvider(final int paginatorRows, final SchemaType schemaType) {\n+            super(paginatorRows);\n+            this.schemaType = schemaType;\n+\n+            // Default sorting\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<AbstractSchemaTO> iterator(final long first, final long count) {\n+            final List<AbstractSchemaTO> list = schemaRestClient.getSchemas(this.schemaType);\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return schemaRestClient.getSchemas(this.schemaType).size();\n+        }\n+\n+        @Override\n+        public IModel<AbstractSchemaTO> model(final AbstractSchemaTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"ca15926229719fc75f885a45c20f2f864c8d7463","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemasPanel.java","status":"modified","additions":2,"deletions":325,"changes":327,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -18,124 +18,30 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.wicket.Component.ENABLE;\n-\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.Collapsible;\n-import java.io.Serializable;\n-import java.lang.reflect.Field;\n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.PreferenceManager;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.AbstractBasePage;\n-import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SelectChoiceRenderer;\n-import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n-import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n-import org.springframework.beans.BeanWrapper;\n-import org.springframework.beans.BeanWrapperImpl;\n-import org.springframework.util.ReflectionUtils;\n \n public class SchemasPanel extends Panel {\n \n     private static final long serialVersionUID = -1140213992451232279L;\n \n-    private static final Map<SchemaType, String> PAGINATOR_ROWS_KEYS = new HashMap<SchemaType, String>() {\n-\n-        private static final long serialVersionUID = 3109256773218160485L;\n-\n-        {\n-            put(SchemaType.PLAIN, Constants.PREF_CONF_SCHEMA_PAGINATOR_ROWS);\n-            put(SchemaType.DERIVED, Constants.PREF_CONF_SCHEMA_PAGINATOR_ROWS);\n-            put(SchemaType.VIRTUAL, Constants.PREF_CONF_SCHEMA_PAGINATOR_ROWS);\n-        }\n-    };\n-\n-    private static final Map<SchemaType, List<String>> COL_NAMES = new HashMap<SchemaType, List<String>>() {\n-\n-        private static final long serialVersionUID = 3109256773218160485L;\n-\n-        {\n-            put(SchemaType.PLAIN, Arrays.asList(new String[] { \"key\", \"type\",\n-                \"mandatoryCondition\", \"uniqueConstraint\", \"multivalue\", \"readonly\" }));\n-            put(SchemaType.DERIVED, Arrays.asList(new String[] { \"key\", \"expression\" }));\n-            put(SchemaType.VIRTUAL, Arrays.asList(new String[] { \"key\", \"provision\", \"extAttrName\", \"readonly\" }));\n-        }\n-    };\n-\n-    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n-\n-    private final PreferenceManager prefMan = new PreferenceManager();\n-\n     private final PageReference pageReference;\n \n-    private final BaseModal<AbstractSchemaTO> modal;\n-\n-    public SchemasPanel(final String id, final PageReference pageRef, final BaseModal<AbstractSchemaTO> modal) {\n+    public SchemasPanel(final String id, final PageReference pageRef) {\n         super(id);\n \n         this.pageReference = pageRef;\n-        this.modal = modal;\n \n         final Collapsible collapsible = new Collapsible(\"collapsePanel\", buildTabList());\n         collapsible.setOutputMarkupId(true);\n         add(collapsible);\n-\n-        final IndicatingAjaxLink<Void> schemaLink = new IndicatingAjaxLink<Void>(\"createSchema\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                modal.header(new ResourceModel(\"createSchema\"));\n-                modal.setFormModel(new PlainSchemaTO());\n-                target.add(modal.setContent(new SchemaModalPanel(modal, pageRef, true)));\n-                modal.addSumbitButton();\n-                modal.show(true);\n-            }\n-        };\n-\n-        add(schemaLink);\n-        MetaDataRoleAuthorizationStrategy.authorize(schemaLink, ENABLE, StandardEntitlement.SCHEMA_CREATE);\n     }\n \n     private List<ITab> buildTabList() {\n@@ -149,239 +55,10 @@ private List<ITab> buildTabList() {\n \n                 @Override\n                 public Panel getPanel(final String panelId) {\n-                    return new SchemaTypePanel(panelId, schemaType);\n+                    return new SchemaTypePanel(panelId, schemaType, pageReference);\n                 }\n             });\n         }\n         return tabs;\n     }\n-\n-    private <T extends SchemaModalPanel> List<IColumn<AbstractSchemaTO, String>> getColumns(\n-            final WebMarkupContainer webContainer,\n-            final SchemaType schemaType,\n-            final Collection<String> fields) {\n-\n-        final List<IColumn<AbstractSchemaTO, String>> columns = new ArrayList<>();\n-\n-        for (final String field : fields) {\n-            final Field clazzField = ReflectionUtils.findField(schemaType.getToClass(), field);\n-\n-            if (clazzField != null) {\n-                if (clazzField.getType().equals(Boolean.class) || clazzField.getType().equals(boolean.class)) {\n-                    columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(field)) {\n-\n-                        private static final long serialVersionUID = 8263694778917279290L;\n-\n-                        @Override\n-                        public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item,\n-                                final String componentId, final IModel<AbstractSchemaTO> model) {\n-\n-                            BeanWrapper bwi = new BeanWrapperImpl(model.getObject());\n-                            Object obj = bwi.getPropertyValue(field);\n-\n-                            item.add(new Label(componentId, StringUtils.EMPTY));\n-                            if (Boolean.valueOf(obj.toString())) {\n-                                item.add(new AttributeModifier(\"class\", \"glyphicon glyphicon-ok\"));\n-                                item.add(new AttributeModifier(\"style\", \"display: table-cell; text-align: center;\"));\n-                            }\n-                        }\n-\n-                        @Override\n-                        public String getCssClass() {\n-                            return \"short_fixedsize\";\n-                        }\n-                    });\n-                } else {\n-                    final IColumn<AbstractSchemaTO, String> column = new PropertyColumn<AbstractSchemaTO, String>(\n-                            new ResourceModel(field), field, field) {\n-\n-                        private static final long serialVersionUID = 3282547854226892169L;\n-\n-                        @Override\n-                        public String getCssClass() {\n-                            String css = super.getCssClass();\n-                            if (\"key\".equals(field)) {\n-                                css = StringUtils.isBlank(css)\n-                                        ? \"medium_fixedsize\"\n-                                        : css + \" medium_fixedsize\";\n-                            }\n-                            return css;\n-                        }\n-                    };\n-                    columns.add(column);\n-                }\n-            }\n-        }\n-\n-        columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(\"actions\", \"\")) {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n-\n-            @Override\n-            public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item, final String componentId,\n-                    final IModel<AbstractSchemaTO> model) {\n-\n-                final AbstractSchemaTO schemaTO = model.getObject();\n-\n-                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(pageReference);\n-                actionLinks.setDisableIndicator(true);\n-                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        modal.header(Model.of(schemaTO.getKey()));\n-                        modal.setFormModel(schemaTO);\n-                        modal.addSumbitButton();\n-                        modal.show(true);\n-                        target.add(modal.setContent(new SchemaModalPanel(modal, pageReference, false)));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.SCHEMA_UPDATE).addWithRoles(\n-                        new ActionLink<Serializable>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        try {\n-                            switch (schemaType) {\n-                                case DERIVED:\n-                                    schemaRestClient.deleteDerSchema(schemaTO.getKey());\n-                                    break;\n-\n-                                case VIRTUAL:\n-                                    schemaRestClient.deleteVirSchema(schemaTO.getKey());\n-                                    break;\n-\n-                                default:\n-                                    schemaRestClient.deletePlainSchema(schemaTO.getKey());\n-                                    break;\n-                            }\n-\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(webContainer);\n-\n-                        } catch (Exception e) {\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                        }\n-                        ((AbstractBasePage) getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.SCHEMA_DELETE);\n-\n-                item.add(actionLinks.build(componentId));\n-            }\n-        });\n-\n-        return columns;\n-    }\n-\n-    private final class SchemaTypePanel extends Panel {\n-\n-        private static final long serialVersionUID = 2854050613688773575L;\n-\n-        private int pageRows;\n-\n-        private SchemaTypePanel(final String id, final SchemaType schemaType) {\n-            super(id);\n-            setup(schemaType);\n-        }\n-\n-        private void setup(final SchemaType schemaType) {\n-\n-            final WebMarkupContainer schemaWrapContainer = new WebMarkupContainer(\"schemaWrapContainer\");\n-            schemaWrapContainer.setOutputMarkupId(true);\n-            add(schemaWrapContainer);\n-\n-            if (schemaType != SchemaType.VIRTUAL) {\n-                schemaWrapContainer.add(new AttributeModifier(\"style\", \"width:auto;\"));\n-            }\n-\n-            final WebMarkupContainer schemaContainer = new WebMarkupContainer(\"schemaContainer\");\n-            schemaContainer.setOutputMarkupId(true);\n-            schemaWrapContainer.add(schemaContainer);\n-\n-            final String paginatorRowsKey = PAGINATOR_ROWS_KEYS.get(schemaType);\n-            pageRows = prefMan.getPaginatorRows(getRequest(), paginatorRowsKey);\n-\n-            final List<IColumn<AbstractSchemaTO, String>> tableCols = getColumns(schemaContainer,\n-                    schemaType, COL_NAMES.get(schemaType));\n-\n-            final AjaxFallbackDataTable<AbstractSchemaTO, String> table = new AjaxFallbackDataTable<>(\"datatable\",\n-                    tableCols, new SchemaProvider(schemaType), pageRows, schemaContainer);\n-            table.setOutputMarkupId(true);\n-            schemaContainer.add(table);\n-\n-            schemaWrapContainer.add(getPaginatorForm(schemaContainer, table, \"paginator\", this, paginatorRowsKey));\n-        }\n-    }\n-\n-    private Form<Void> getPaginatorForm(final WebMarkupContainer webContainer,\n-            final AjaxFallbackDataTable<AbstractSchemaTO, String> dataTable,\n-            final String formname, final SchemaTypePanel schemaTypePanel, final String rowsPerPagePrefName) {\n-\n-        final Form<Void> form = new Form<>(formname);\n-\n-        final DropDownChoice<Integer> rowChooser = new DropDownChoice<>(\"rowsChooser\",\n-                new PropertyModel<Integer>(schemaTypePanel, \"pageRows\"), prefMan.getPaginatorChoices(),\n-                new SelectChoiceRenderer<Integer>());\n-\n-        rowChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), rowsPerPagePrefName, rowChooser.getInput());\n-                dataTable.setItemsPerPage(rowChooser.getModelObject());\n-\n-                target.add(webContainer);\n-            }\n-        });\n-\n-        form.add(rowChooser);\n-\n-        return form;\n-    }\n-\n-    private final class SchemaProvider extends SortableDataProvider<AbstractSchemaTO, String> {\n-\n-        private static final long serialVersionUID = -185944053385660794L;\n-\n-        private final SortableDataProviderComparator<AbstractSchemaTO> comparator;\n-\n-        private final SchemaType schemaType;\n-\n-        private SchemaProvider(final SchemaType schemaType) {\n-            super();\n-\n-            this.schemaType = schemaType;\n-\n-            // Default sorting\n-            setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-        }\n-\n-        @Override\n-        public Iterator<AbstractSchemaTO> iterator(final long first, final long count) {\n-            final List<AbstractSchemaTO> list = schemaRestClient.getSchemas(this.schemaType);\n-            Collections.sort(list, comparator);\n-            return list.subList((int) first, (int) first + (int) count).iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return schemaRestClient.getSchemas(this.schemaType).size();\n-        }\n-\n-        @Override\n-        public IModel<AbstractSchemaTO> model(final AbstractSchemaTO object) {\n-            return new CompoundPropertyModel<>(object);\n-        }\n-    }\n }"},{"sha":"69bf8a3f47fc28e0a0ae0366f5d1a43d32d8013f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/VirSchemaDetails.java","status":"modified","additions":2,"deletions":27,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -25,19 +25,16 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n-import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.PropertyModel;\n \n public class VirSchemaDetails extends AbstractSchemaDetailsPanel {\n@@ -52,8 +49,8 @@ public class VirSchemaDetails extends AbstractSchemaDetailsPanel {\n \n     public VirSchemaDetails(final String id,\n             final PageReference pageReference,\n-            final BaseModal<AbstractSchemaTO> modal) {\n-        super(id, pageReference, modal);\n+            final AbstractSchemaTO schemaTO) {\n+        super(id, pageReference, schemaTO);\n \n         final AjaxCheckBoxPanel readonly = new AjaxCheckBoxPanel(\"readonly\", getString(\"readonly\"),\n                 new PropertyModel<Boolean>(schemaTO, \"readonly\"));\n@@ -113,28 +110,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         });\n     }\n \n-    @Override\n-    public void getOnSubmit(final AjaxRequestTarget target,\n-            final BaseModal<?> modal, final Form<?> form, final PageReference pageReference, final boolean createFlag) {\n-\n-        try {\n-            final VirSchemaTO updatedVirSchemaTO = VirSchemaTO.class.cast(form.getModelObject());\n-\n-            if (createFlag) {\n-                schemaRestClient.createVirSchema(updatedVirSchemaTO);\n-            } else {\n-                schemaRestClient.updateVirSchema(updatedVirSchemaTO);\n-            }\n-            \n-            info(getString(Constants.OPERATION_SUCCEEDED));\n-            modal.close(target);\n-        } catch (Exception e) {\n-            LOG.error(\"While creating or updating VirSchema\", e);\n-            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-            modal.getNotificationPanel().refresh(target);\n-        }\n-    }\n-\n     private class AnyTypeRenderer extends ChoiceRenderer<Long> {\n \n         private static final long serialVersionUID = 2840364232128308553L;"},{"sha":"774d14356ba719973df9aa2849c9f7478759e7b3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -25,6 +25,7 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.NotificationAwareComponent;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.panels.ModalPanel;\n@@ -85,6 +86,10 @@ public BaseModal(final String id) {\n \n         };\n \n+        notificationPanel = new NotificationPanel(Constants.FEEDBACK);\n+        notificationPanel.setOutputMarkupId(true);\n+        addOrReplace(notificationPanel);\n+\n         content.setOutputMarkupId(true);\n \n         form.add(content);"},{"sha":"96913f10d8dae20bd213b834ec7c14d4c5e717f3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Types.html","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTypes.html?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -37,7 +37,5 @@ <h3 class=\"box-title\">\n         </div>\n       </div>\n     </div>\n-    <div wicket:id=\"schemaModal\"></div>\n-    <div wicket:id=\"anyTypeClassModal\"></div>\n   </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"cfa9d7e5856e205a428a1615fa0f1754bc3ca26b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetails.html","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8a536186162180aa25c147b9103b6646dca4dd3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8a536186162180aa25c147b9103b6646dca4dd3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetails.html?ref=c8a536186162180aa25c147b9103b6646dca4dd3","patch":"@@ -1,57 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <span wicket:id=\"container\">\n-      <div class=\"box\">\n-        <div class=\"box-header with-border\">\n-          <h3 class=\"box-title\"><wicket:message key=\"plainSchemas\"/></h3>\n-        </div>\n-        <div class=\"box-body\">\n-          <div id=\"group-forum\">\n-            <span wicket:id=\"plainSchemas\">[plainSchemas]</span>\n-          </div>\n-        </div>\n-      </div>\n-      <div class=\"box\">\n-        <div class=\"box-header with-border\">\n-          <h3 class=\"box-title\"><wicket:message key=\"derSchemas\"/></h3>\n-        </div>\n-        <div class=\"box-body\">\n-          <div id=\"group-forum\">\n-            <span wicket:id=\"derSchemas\">[derSchemas]</span>\n-          </div>\n-        </div>\n-      </div>\n-      <div class=\"box\">\n-        <div class=\"box-header with-border\">\n-          <h3 class=\"box-title\"><wicket:message key=\"virSchemas\"/></h3>\n-        </div>\n-        <div class=\"box-body\">\n-          <div id=\"group-forum\">\n-            <span wicket:id=\"virSchemas\">[virSchemas]</span>\n-          </div>\n-        </div>\n-      </div>\n-    </span>\n-  </wicket:panel>\n-</html>\n\\ No newline at end of file"},{"sha":"1c042ace9ee4cb0d54158a7f345a8b009e4c3717","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel.html","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.html?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -0,0 +1,66 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n+  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <form wicket:id=\"form\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"key\">[key]</span>\n+        </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"container\">\n+            <div class=\"box\">\n+              <div class=\"box-header with-border\">\n+                <h3 class=\"box-title\"><wicket:message key=\"plainSchemas\"/></h3>\n+              </div>\n+              <div class=\"box-body\">\n+                <div id=\"group-forum\">\n+                  <span wicket:id=\"plainSchemas\">[plainSchemas]</span>\n+                </div>\n+              </div>\n+            </div>\n+            <div class=\"box\">\n+              <div class=\"box-header with-border\">\n+                <h3 class=\"box-title\"><wicket:message key=\"derSchemas\"/></h3>\n+              </div>\n+              <div class=\"box-body\">\n+                <div id=\"group-forum\">\n+                  <span wicket:id=\"derSchemas\">[derSchemas]</span>\n+                </div>\n+              </div>\n+            </div>\n+            <div class=\"box\">\n+              <div class=\"box-header with-border\">\n+                <h3 class=\"box-title\"><wicket:message key=\"virSchemas\"/></h3>\n+              </div>\n+              <div class=\"box-body\">\n+                <div id=\"group-forum\">\n+                  <span wicket:id=\"virSchemas\">[virSchemas]</span>\n+                </div>\n+              </div>\n+            </div>\n+          </span>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"e5b9884798a45af508aa879589f8c4d1b4dbbae7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel.properties","status":"renamed","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\n plainSchemas=Plain Schemas\n derSchemas=Derived Schemas\n virSchemas=Virtual Schemas","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetails_pt_BR.properties"},{"sha":"e5b9884798a45af508aa879589f8c4d1b4dbbae7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel_it.properties","status":"renamed","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel_it.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\n plainSchemas=Plain Schemas\n derSchemas=Derived Schemas\n virSchemas=Virtual Schemas","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetails.properties"},{"sha":"e5b9884798a45af508aa879589f8c4d1b4dbbae7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel_pt_BR.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\n plainSchemas=Plain Schemas\n derSchemas=Derived Schemas\n virSchemas=Virtual Schemas","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassDetails_it.properties"},{"sha":"6de84eb568d9914b513935cabc934187b6381a60","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassModalPanel.html","status":"modified","additions":3,"deletions":12,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassModalPanel.html?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -17,16 +17,7 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <div class=\"form-group\">\n-      <form wicket:id=\"form\">\n-        <div class=\"form-group\">\n-          <span wicket:id=\"key\">[key]</span>\n-        </div>\n-        <div class=\"form-group\">\n-          <span wicket:id=\"details\">[details]</span>\n-        </div>\n-      </form>\n-    </div>\n-  </wicket:panel>\n+  <wicket:extend>\n+    <div wicket:id=\"anyTypeClassDetailsPanel\">[anyTypeDetailsPanel]</div>\n+  </wicket:extend>\n </html>"},{"sha":"0fec0c78cd61d3547c3b9319ac8285d6f5df012a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.html","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8a536186162180aa25c147b9103b6646dca4dd3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8a536186162180aa25c147b9103b6646dca4dd3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.html?ref=c8a536186162180aa25c147b9103b6646dca4dd3","patch":"@@ -1,56 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n-  <body>\n-    <wicket:panel>\n-      <span wicket:id=\"container\">\n-        <div class=\"col-md-4\">\n-          <div class=\"box\">\n-            <div class=\"box-header with-border\">\n-              <h3 class=\"box-title\"><wicket:message key=\"anyTypeClasses\"/></h3>\n-            </div>\n-            <div class=\"box-body\">\n-              <div class=\"row\">\n-                <div class=\"col-md-8\">\n-                  <div class=\"form-group\">\n-                    <label><wicket:message key=\"select\"/></label>\n-                    <select wicket:id=\"anyTypeClasses\" class=\"form-control\"></select>\n-                  </div>\n-                </div>\n-                <div class=\"col-md-1\" style=\"padding-top: 20px\">\n-                  <div class=\"form-group\">\n-                    <div id=\"actionButtons\" style=\"padding-top: 5px;\">\n-                      <span  wicket:id=\"editRemove\"/>\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <div class=\"col-md-8\" style=\"float:right\">\n-          <span wicket:id=\"anyTypeClassesDetails\">[anyTypeClassesDetails]</span>\n-        </div>\n-      </span>\n-    </wicket:panel>\n-  </body>\n-</html>\n\\ No newline at end of file"},{"sha":"2c503c4850beea8291f50f4df990cd289c535d5c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.properties","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,6 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-select=Select\n-\n+any.edit=Edit AnyTypeClass ${key}\n+any.new=New AnyTypeClass\n anyTypeClasses=AnyTypeClasses\n+plainSchemas=Plain Schemas\n+derSchemas=Derived Schemas\n+virSchemas=Virtual Schemas"},{"sha":"7622557511bf04f66c0ce4ab5581a2c9ebab63e6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassesPanel_it.properties","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_it.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,6 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-select=Seleziona\n-\n+any.edit=Modifica AnyTypeClass ${key}\n+any.new=Nuovo AnyTypeClass\n anyTypeClasses=AnyTypeClasses\n+plainSchemas=Plain Schemas\n+derSchemas=Derived Schemas\n+virSchemas=Virtual Schemas"},{"sha":"c8a828c7bbb566343afa2b03c830fab804471eb4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AnyTypeClassesPanel_pt_BR.properties","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel_pt_BR.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,6 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-select=Selecionar\n-\n+any.edit=Alterar AnyTypeClass ${key}\n+any.new=Novo AnyTypeClass\n anyTypeClasses=AnyTypeClasses\n+plainSchemas=Plain Schemas\n+derSchemas=Derived Schemas\n+virSchemas=Virtual Schemas"},{"sha":"47be190fd715bd0bf65af6bbc37a8ce961ae67f0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel$SchemaTypePanel.html","status":"removed","additions":0,"deletions":39,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c8a536186162180aa25c147b9103b6646dca4dd3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel%24SchemaTypePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c8a536186162180aa25c147b9103b6646dca4dd3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel%24SchemaTypePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel%24SchemaTypePanel.html?ref=c8a536186162180aa25c147b9103b6646dca4dd3","patch":"@@ -1,39 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <div wicket:id=\"schemaWrapContainer\">\n-      <span wicket:id=\"schemaContainer\">\n-        <table class=\"table table-bordered table-hover dataTable\" wicket:id=\"datatable\">[datatable]</table>\n-      </span>\n-      <span style=\"float:right\">\n-        <form wicket:id=\"paginator\" style=\"display:inline\">\n-          <div class=\"col-sm-6\">\n-            <div class=\"dataTables_length\">\n-              <label>\n-                <wicket:message key=\"displayRows\"/>\n-                <select class=\"form-control input-sm\" wicket:id=\"rowsChooser\"/>\n-              </label>\n-            </div>\n-          </div>\n-        </form>\n-      </span>\n-    </div>\n-  </wicket:panel>\n-</html>"},{"sha":"fe2037ee86ccf3b2a7c8a4145cb800fe15b4d37f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -23,11 +23,11 @@\n   <body>\n     <wicket:panel>\n       <div wicket:id=\"collapsePanel\"></div>\n-      <div class=\"modal-footer\">\n+<!--      <div class=\"modal-footer\">\n         <a wicket:message=\"title:createSchema\" wicket:id=\"createSchema\">\n           <i class=\"glyphicon glyphicon-duplicate\"></i>\n         </a>\n-      </div>\n+      </div>-->\n     </wicket:panel>\n   </body>\n </html>\n\\ No newline at end of file"},{"sha":"25e0f29cc9b342dfc215d579212b3d775cc3e501","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,6 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+any.edit=Edit Schema ${key}\n+any.new=New Schema\n mandatoryCondition=Mandatory\n enumerationValues= Enumeration values\n enumerationKeys= Enumeration labels"},{"sha":"d859636d0caf69493c174f034c8af1fedcc65997","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_it.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,6 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+any.edit=Modifica Schema ${key}\n+any.new=Nuovo Schema\n mandatoryCondition=Obbligatorio\n enumerationValues= Valori enumeration\n enumerationKeys= Label enumeration"},{"sha":"7fef9982743e55f6b3a4d5f3122a8b35f77fe3f7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_pt_BR.properties?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -14,6 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+any.edit=Alterar Schema ${key}\n+any.new=Novo Schema\n mandatoryCondition=obrigat\\u00f3rio\n enumerationValues= Valores enumerados\n enumerationKeys= R\\u00f3tulos de enumera\\u00e7\\u00e3o"},{"sha":"dc180402841b62fcedd5e6e9e8d10de21fe368fa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5296cadd09eec9dbd2e945709ea02c5162df56e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.html?ref=d5296cadd09eec9dbd2e945709ea02c5162df56e","patch":"@@ -35,6 +35,7 @@\n           <h4 wicket:id=\"header-label\" class=\"modal-title\">Modal header</h4>\n         </div>\n         <div class=\"modal-body\">\n+          <div wicket:id=\"feedback\"/>\n           <form data-example-id=\"simple-input-groups\" class=\"bs-example bs-example-form\" wicket:id=\"form\">\n             <span wicket:id=\"content\">[modal content]</span>\n           </form>"}]}