{"sha":"c23c0d513ce05fbec378abcab8c76eb149c8994b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMyM2MwZDUxM2NlMDVmYmVjMzc4YWJjYWI4Yzc2ZWIxNDljODk5NGI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-27T15:07:51Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-27T15:09:36Z"},"message":"Fixing problems of DynRealms with Elasticsearch","tree":{"sha":"5d79c73b4d302ef22308ca6786d1d316f8cf937d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5d79c73b4d302ef22308ca6786d1d316f8cf937d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c23c0d513ce05fbec378abcab8c76eb149c8994b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c23c0d513ce05fbec378abcab8c76eb149c8994b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c23c0d513ce05fbec378abcab8c76eb149c8994b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c23c0d513ce05fbec378abcab8c76eb149c8994b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4fe8d084a6aa51fbf7fbfbf025b100df162bd27a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4fe8d084a6aa51fbf7fbfbf025b100df162bd27a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4fe8d084a6aa51fbf7fbfbf025b100df162bd27a"}],"stats":{"total":31,"additions":29,"deletions":2},"files":[{"sha":"8e6f59b5059c0b6969d03a9a060221c50c68ac6a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADynRealmDAO.java","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c23c0d513ce05fbec378abcab8c76eb149c8994b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADynRealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c23c0d513ce05fbec378abcab8c76eb149c8994b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADynRealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADynRealmDAO.java?ref=c23c0d513ce05fbec378abcab8c76eb149c8994b","patch":"@@ -32,7 +32,9 @@\n import org.apache.syncope.core.provisioning.api.event.AnyCreatedUpdatedEvent;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.springframework.aop.support.AopUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n@@ -47,6 +49,8 @@ public class JPADynRealmDAO extends AbstractDAO<DynRealm> implements DynRealmDAO\n \n     private AnySearchDAO searchDAO;\n \n+    private AnySearchDAO jpaAnySearchDAO;\n+\n     private AnySearchDAO searchDAO() {\n         synchronized (this) {\n             if (searchDAO == null) {\n@@ -56,6 +60,20 @@ private AnySearchDAO searchDAO() {\n         return searchDAO;\n     }\n \n+    private AnySearchDAO jpaAnySearchDAO() {\n+        synchronized (this) {\n+            if (jpaAnySearchDAO == null) {\n+                if (AopUtils.getTargetClass(searchDAO()).equals(JPAAnySearchDAO.class)) {\n+                    jpaAnySearchDAO = searchDAO();\n+                } else {\n+                    jpaAnySearchDAO = (AnySearchDAO) ApplicationContextProvider.getBeanFactory().\n+                            createBean(JPAAnySearchDAO.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n+                }\n+            }\n+        }\n+        return jpaAnySearchDAO;\n+    }\n+\n     @Override\n     public DynRealm find(final String key) {\n         return entityManager().find(JPADynRealm.class, key);\n@@ -75,7 +93,7 @@ public DynRealm save(final DynRealm dynRealm) {\n         // refresh dynamic memberships\n         clearDynMembers(merged);\n \n-        merged.getDynMemberships().stream().map(memb -> searchDAO().search(\n+        merged.getDynMemberships().stream().map(memb -> jpaAnySearchDAO().search(\n                 SearchCondConverter.convert(memb.getFIQLCond()), memb.getAnyType().getKind())).\n                 forEachOrdered(matching -> {\n                     matching.forEach(any -> {\n@@ -122,7 +140,7 @@ public void refreshDynMemberships(final Any<?> any) {\n                 delete.setParameter(1, dynRealm.getKey());\n                 delete.setParameter(2, any.getKey());\n                 delete.executeUpdate();\n-                if (searchDAO().matches(any, SearchCondConverter.convert(memb.get().getFIQLCond()))) {\n+                if (jpaAnySearchDAO().matches(any, SearchCondConverter.convert(memb.get().getFIQLCond()))) {\n                     Query insert = entityManager().createNativeQuery(\"INSERT INTO \" + DYNMEMB_TABLE + \" VALUES(?, ?)\");\n                     insert.setParameter(1, any.getKey());\n                     insert.setParameter(2, dynRealm.getKey());"},{"sha":"c1348f8313c447f87a7cb6e8f912d8b8dbc3f9b2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/DynRealmITCase.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c23c0d513ce05fbec378abcab8c76eb149c8994b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c23c0d513ce05fbec378abcab8c76eb149c8994b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDynRealmITCase.java?ref=c23c0d513ce05fbec378abcab8c76eb149c8994b","patch":"@@ -47,6 +47,7 @@\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.syncope.fit.AbstractITCase;\n+import org.apache.syncope.fit.ElasticsearchDetector;\n import org.junit.Test;\n \n public class DynRealmITCase extends AbstractITCase {\n@@ -138,6 +139,14 @@ public void delegatedAdmin() {\n             assertNotNull(group);\n             final String groupKey = group.getKey();\n \n+            if (ElasticsearchDetector.isElasticSearchEnabled(syncopeService)) {\n+                try {\n+                    Thread.sleep(2000);\n+                } catch (InterruptedException ex) {\n+                    // ignore\n+                }\n+            }\n+\n             // 5. verify that the new user and group are found when searching by dynamic realm\n             PagedResult<UserTO> matchingUsers = userService.search(new AnyQuery.Builder().realm(\"/\").fiql(\n                     SyncopeClient.getUserSearchConditionBuilder().inDynRealms(dynRealm.getKey()).query()).build());"}]}