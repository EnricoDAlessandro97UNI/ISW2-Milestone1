{"sha":"b13fc1781a7fa276b1eeef6798e5e2812343978b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIxM2ZjMTc4MWE3ZmEyNzZiMWVlZWY2Nzk4ZTVlMjgxMjM0Mzk3OGI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-11-30T11:07:08Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-11-30T11:07:08Z"},"message":"[SYNCOPE-736] Leveraging JAX-RS specs by appending ';qs=0.9' to XML content type to get JSON preferred by default","tree":{"sha":"f1861846a354bd55a539f963859e6436f81e01a8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f1861846a354bd55a539f963859e6436f81e01a8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b13fc1781a7fa276b1eeef6798e5e2812343978b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b13fc1781a7fa276b1eeef6798e5e2812343978b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b13fc1781a7fa276b1eeef6798e5e2812343978b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b13fc1781a7fa276b1eeef6798e5e2812343978b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"eaa00e8c250e5040a30538fa3496254f74f8a4bd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eaa00e8c250e5040a30538fa3496254f74f8a4bd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eaa00e8c250e5040a30538fa3496254f74f8a4bd"}],"stats":{"total":569,"additions":296,"deletions":273},"files":[{"sha":"5599ed1049737baef043b5b50f138176aff5fe55","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyObjectService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -44,7 +44,7 @@ public interface AnyObjectService extends AnyService<AnyObjectTO, AnyObjectPatch\n      * @return paged list of existing any objects matching the given query, for the given type\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<AnyObjectTO> list(@NotNull @MatrixParam(\"type\") String type, @BeanParam AnyListQuery listQuery);\n \n }"},{"sha":"ec46d191bf885f5aa3ade87884a02f4de8411127","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -54,7 +54,7 @@\n      */\n     @GET\n     @Path(\"{key}/{schemaType}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Set<AttrTO> read(@NotNull @PathParam(\"key\") Long key, @NotNull @PathParam(\"schemaType\") SchemaType schemaType);\n \n     /**\n@@ -67,7 +67,7 @@\n      */\n     @GET\n     @Path(\"{key}/{schemaType}/{schema}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     AttrTO read(\n             @NotNull @PathParam(\"key\") Long key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n@@ -81,7 +81,7 @@ AttrTO read(\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     TO read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n@@ -92,7 +92,7 @@ AttrTO read(\n      */\n     @GET\n     @Path(\"search\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<TO> search(@BeanParam AnySearchQuery searchQuery);\n \n     /**\n@@ -103,8 +103,8 @@ AttrTO read(\n      * object itself enriched with propagation status information - ProvisioningResult as Entity\n      */\n     @POST\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull TO anyTO);\n \n     /**\n@@ -116,8 +116,8 @@ AttrTO read(\n      */\n     @PATCH\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response update(@NotNull P anyPatch);\n \n     /**\n@@ -130,8 +130,8 @@ AttrTO read(\n      */\n     @PUT\n     @Path(\"{key}/{schemaType}/{schema}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response update(\n             @NotNull @PathParam(\"key\") Long key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n@@ -146,8 +146,8 @@ Response update(\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response update(@NotNull TO anyTO);\n \n     /**\n@@ -159,8 +159,8 @@ Response update(\n      */\n     @DELETE\n     @Path(\"{key}/{schemaType}/{schema}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void delete(\n             @NotNull @PathParam(\"key\") Long key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n@@ -175,8 +175,8 @@ void delete(\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response delete(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n@@ -187,8 +187,8 @@ void delete(\n      */\n     @POST\n     @Path(\"{key}/deassociate/{action}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response deassociate(@NotNull DeassociationPatch patch);\n \n     /**\n@@ -199,8 +199,8 @@ void delete(\n      */\n     @POST\n     @Path(\"{key}/associate/{action}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response associate(@NotNull AssociationPatch patch);\n \n     /**\n@@ -211,7 +211,7 @@ void delete(\n      */\n     @POST\n     @Path(\"bulk\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     BulkActionResult bulk(@NotNull BulkAction bulkAction);\n }"},{"sha":"729511d0bd008f754948ccd5a239869bbf51b157","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -44,7 +44,7 @@ public interface AnyTypeClassService extends JAXRSService {\n      * @return list of all anyTypeClasss.\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<AnyTypeClassTO> list();\n \n     /**\n@@ -55,7 +55,7 @@ public interface AnyTypeClassService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     AnyTypeClassTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -65,7 +65,7 @@ public interface AnyTypeClassService extends JAXRSService {\n      * @return Response object featuring Location header of created anyTypeClass\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull AnyTypeClassTO anyTypeClassTO);\n \n     /**\n@@ -75,7 +75,7 @@ public interface AnyTypeClassService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull AnyTypeClassTO anyTypeClassTO);\n \n     /**"},{"sha":"5cfe99721c991c27803681bedfd38fe4074b861e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -44,7 +44,7 @@ public interface AnyTypeService extends JAXRSService {\n      * @return list of all anyTypes.\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<AnyTypeTO> list();\n \n     /**\n@@ -55,7 +55,7 @@ public interface AnyTypeService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     AnyTypeTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -65,7 +65,7 @@ public interface AnyTypeService extends JAXRSService {\n      * @return Response object featuring Location header of created anyType\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull AnyTypeTO anyTypeTO);\n \n     /**\n@@ -75,7 +75,7 @@ public interface AnyTypeService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull AnyTypeTO anyTypeTO);\n \n     /**"},{"sha":"09d290dcec499059f01be18594f5c42c1942e048","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConfigurationService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -52,7 +52,7 @@ public interface ConfigurationService extends JAXRSService {\n      * @return all configuration parameters\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<AttrTO> list();\n \n     /**\n@@ -63,7 +63,7 @@ public interface ConfigurationService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{schema}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     AttrTO get(@NotNull @PathParam(\"schema\") String schema);\n \n     /**\n@@ -73,7 +73,7 @@ public interface ConfigurationService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{schema}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void set(@NotNull AttrTO value);\n \n     /**\n@@ -83,6 +83,6 @@ public interface ConfigurationService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{schema}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void delete(@NotNull @PathParam(\"schema\") String schema);\n }"},{"sha":"ad76af3dfa34250e1f5c33d8addcc1ea61d2acc9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -52,7 +52,7 @@ public interface ConnectorService extends JAXRSService {\n      */\n     @GET\n     @Path(\"bundles\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<ConnBundleTO> getBundles(@QueryParam(\"lang\") String lang);\n \n     /**\n@@ -67,8 +67,8 @@ public interface ConnectorService extends JAXRSService {\n      */\n     @POST\n     @Path(\"{key}/supportedObjectClasses\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<ConnIdObjectClassTO> buildObjectClassInfo(\n             @NotNull ConnInstanceTO connInstanceTO,\n             @QueryParam(\"includeSpecial\") @DefaultValue(\"false\") boolean includeSpecial);\n@@ -83,7 +83,7 @@ List<ConnIdObjectClassTO> buildObjectClassInfo(\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     ConnInstanceTO read(@NotNull @PathParam(\"key\") Long key, @QueryParam(\"lang\") String lang);\n \n     /**\n@@ -96,7 +96,7 @@ List<ConnIdObjectClassTO> buildObjectClassInfo(\n      */\n     @GET\n     @Path(\"byResource/{resourceName}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     ConnInstanceTO readByResource(\n             @NotNull @PathParam(\"resourceName\") String resourceName, @QueryParam(\"lang\") String lang);\n \n@@ -108,7 +108,7 @@ ConnInstanceTO readByResource(\n      * @return list of all connector instances with property keys in the matching language\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<ConnInstanceTO> list(@QueryParam(\"lang\") String lang);\n \n     /**\n@@ -118,7 +118,7 @@ ConnInstanceTO readByResource(\n      * @return Response object featuring Location header of created connector instance\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n@@ -128,7 +128,7 @@ ConnInstanceTO readByResource(\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n@@ -147,7 +147,7 @@ ConnInstanceTO readByResource(\n      */\n     @POST\n     @Path(\"check\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void check(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n@@ -165,7 +165,7 @@ ConnInstanceTO readByResource(\n      */\n     @POST\n     @Path(\"bulk\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     BulkActionResult bulk(@NotNull BulkAction bulkAction);\n }"},{"sha":"e9309aefd87ac4b42e1c10f47871f90bdf57f0f9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DomainService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -44,7 +44,7 @@ public interface DomainService extends JAXRSService {\n      * @return list of all domains.\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<DomainTO> list();\n \n     /**\n@@ -55,7 +55,7 @@ public interface DomainService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     DomainTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -65,7 +65,7 @@ public interface DomainService extends JAXRSService {\n      * @return Response object featuring Location header of created domain\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull DomainTO domainTO);\n \n     /**\n@@ -75,7 +75,7 @@ public interface DomainService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull DomainTO domainTO);\n \n     /**"},{"sha":"9d5308c09ec8a924fc14f19d341cee10f819469b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -43,7 +43,7 @@ public interface GroupService extends AnyService<GroupTO, GroupPatch> {\n      */\n     @GET\n     @Path(\"own\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<GroupTO> own();\n \n     /**\n@@ -53,6 +53,6 @@ public interface GroupService extends AnyService<GroupTO, GroupPatch> {\n      * @return paged list of existing groups matching the given query\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<GroupTO> list(@BeanParam AnyListQuery listQuery);\n }"},{"sha":"11cdcd3f1fbd8fd1433f6ceb33b62da6c871265e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/JAXRSService.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -18,8 +18,12 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import javax.ws.rs.core.MediaType;\n+\n public interface JAXRSService {\n \n+    String APPLICATION_XML = MediaType.APPLICATION_XML + \";qs=0.9\";\n+\n     String PARAM_FIQL = \"fiql\";\n \n     String PARAM_PAGE = \"page\";"},{"sha":"f6c9f39715bedc5bfa9ed49e5d96f23726e2d0c5","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/LoggerService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -46,7 +46,7 @@ public interface LoggerService extends JAXRSService {\n      */\n     @GET\n     @Path(\"events\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<EventCategoryTO> events();\n \n     /**\n@@ -58,7 +58,7 @@ public interface LoggerService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{type}/{name}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     LoggerTO read(@NotNull @PathParam(\"type\") LoggerType type, @NotNull @PathParam(\"name\") final String name);\n \n     /**\n@@ -69,7 +69,7 @@ public interface LoggerService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{type}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<LoggerTO> list(@NotNull @PathParam(\"type\") LoggerType type);\n \n     /**\n@@ -80,7 +80,7 @@ public interface LoggerService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{type}/{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull @PathParam(\"type\") LoggerType type, @NotNull LoggerTO logger);\n \n     /**"},{"sha":"d67e4a05d451fef0260da3ece81c3612045e8b69","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -46,7 +46,7 @@ public interface NotificationService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     NotificationTO read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n@@ -55,7 +55,7 @@ public interface NotificationService extends JAXRSService {\n      * @return list of all notifications.\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<NotificationTO> list();\n \n     /**\n@@ -65,7 +65,7 @@ public interface NotificationService extends JAXRSService {\n      * @return Response object featuring Location header of created notification\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull NotificationTO notificationTO);\n \n     /**\n@@ -75,7 +75,7 @@ public interface NotificationService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull NotificationTO notificationTO);\n \n     /**"},{"sha":"c0e33e7f30a689ed2ca199625b1536139a6f46fe","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -49,7 +49,7 @@ public interface PolicyService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractPolicyTO> T read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n@@ -60,7 +60,7 @@ public interface PolicyService extends JAXRSService {\n      * @return list of policies with matching type\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractPolicyTO> List<T> list(@NotNull @MatrixParam(\"type\") PolicyType type);\n \n     /**\n@@ -70,7 +70,7 @@ public interface PolicyService extends JAXRSService {\n      * @return Response object featuring Location header of created policy\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull AbstractPolicyTO policyTO);\n \n     /**\n@@ -80,7 +80,7 @@ public interface PolicyService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull AbstractPolicyTO policyTO);\n \n     /**"},{"sha":"db772ce1295d8a97d0291433f01b64d1559ee6dd","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -44,7 +44,7 @@ public interface RealmService extends JAXRSService {\n      * @return list of all realms.\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<RealmTO> list();\n \n     /**\n@@ -55,7 +55,7 @@ public interface RealmService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{fullPath:.*}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<RealmTO> list(@NotNull @PathParam(\"fullPath\") String fullPath);\n \n     /**\n@@ -67,7 +67,7 @@ public interface RealmService extends JAXRSService {\n      */\n     @POST\n     @Path(\"{parentPath:.*}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull @PathParam(\"parentPath\") String parentPath, @NotNull RealmTO realmTO);\n \n     /**\n@@ -77,7 +77,7 @@ public interface RealmService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{fullPath:.*}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull RealmTO realmTO);\n \n     /**"},{"sha":"a2b199b37e8fc4951483a73f4acbb5a42b76784f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -44,7 +44,7 @@ public interface RelationshipTypeService extends JAXRSService {\n      * @return list of all relationshipTypes.\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<RelationshipTypeTO> list();\n \n     /**\n@@ -55,7 +55,7 @@ public interface RelationshipTypeService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     RelationshipTypeTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -65,7 +65,7 @@ public interface RelationshipTypeService extends JAXRSService {\n      * @return Response object featuring Location header of created relationshipType\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull RelationshipTypeTO relationshipTypeTO);\n \n     /**\n@@ -75,7 +75,7 @@ public interface RelationshipTypeService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull RelationshipTypeTO relationshipTypeTO);\n \n     /**"},{"sha":"e871505a20a4232f9b721a0dbb670adf123edbdc","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -52,7 +52,7 @@ public interface ReportService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     ReportTO read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n@@ -63,7 +63,7 @@ public interface ReportService extends JAXRSService {\n      */\n     @GET\n     @Path(\"executions/{executionKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     ReportExecTO readExecution(@NotNull @PathParam(\"executionKey\") Long executionKey);\n \n     /**\n@@ -72,7 +72,7 @@ public interface ReportService extends JAXRSService {\n      * @return paged list of existing reports matching the given query\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<ReportTO> list();\n \n     /**\n@@ -82,7 +82,7 @@ public interface ReportService extends JAXRSService {\n      * @return Response object featuring Location header of created report\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ReportTO reportTO);\n \n     /**\n@@ -92,7 +92,7 @@ public interface ReportService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull ReportTO reportTO);\n \n     /**\n@@ -121,7 +121,7 @@ public interface ReportService extends JAXRSService {\n      */\n     @POST\n     @Path(\"{key}/execute\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     ReportExecTO execute(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n@@ -133,7 +133,7 @@ public interface ReportService extends JAXRSService {\n      */\n     @GET\n     @Path(\"executions/{executionKey}/stream\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response exportExecutionResult(@NotNull @PathParam(\"executionKey\") Long executionKey,\n             @QueryParam(\"format\") ReportExecExportFormat fmt);\n \n@@ -145,7 +145,7 @@ Response exportExecutionResult(@NotNull @PathParam(\"executionKey\") Long executio\n      */\n     @GET\n     @Path(\"jobs\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<ReportExecTO> listJobs(@MatrixParam(\"type\") JobStatusType type);\n \n     /**"},{"sha":"a007eaf70bcf5eb5f0697c606df82469c2b0263f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -55,7 +55,7 @@ public interface ResourceService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}/{anyTypeKey}/{anyKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     ConnObjectTO readConnObject(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey,\n@@ -72,7 +72,7 @@ ConnObjectTO readConnObject(\n      */\n     @GET\n     @Path(\"{key}/{anyTypeKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedConnObjectTOResult listConnObjects(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey,\n@@ -86,7 +86,7 @@ PagedConnObjectTOResult listConnObjects(\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     ResourceTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -95,7 +95,7 @@ PagedConnObjectTOResult listConnObjects(\n      * @return list of all resources\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<ResourceTO> list();\n \n     /**\n@@ -105,7 +105,7 @@ PagedConnObjectTOResult listConnObjects(\n      * @return Response object featuring Location header of created resource\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ResourceTO resourceTO);\n \n     /**\n@@ -115,7 +115,7 @@ PagedConnObjectTOResult listConnObjects(\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull ResourceTO resourceTO);\n \n     /**\n@@ -125,7 +125,7 @@ PagedConnObjectTOResult listConnObjects(\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -135,8 +135,8 @@ PagedConnObjectTOResult listConnObjects(\n      */\n     @POST\n     @Path(\"check\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void check(@NotNull ResourceTO resourceTO);\n \n     /**\n@@ -147,8 +147,8 @@ PagedConnObjectTOResult listConnObjects(\n      */\n     @POST\n     @Path(\"{key}/bulkDeassociation/{anyTypeKey}/{action}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     BulkActionResult bulkDeassociation(@NotNull ResourceDeassociationPatch patch);\n \n     /**\n@@ -159,7 +159,7 @@ PagedConnObjectTOResult listConnObjects(\n      */\n     @POST\n     @Path(\"bulk\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     BulkActionResult bulk(@NotNull BulkAction bulkAction);\n }"},{"sha":"6fe55a617941445c61caf4c8929a38559625ef7e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -44,7 +44,7 @@ public interface RoleService extends JAXRSService {\n      * @return list of all roles.\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<RoleTO> list();\n \n     /**\n@@ -55,7 +55,7 @@ public interface RoleService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     RoleTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -65,7 +65,7 @@ public interface RoleService extends JAXRSService {\n      * @return Response object featuring Location header of created role\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull RoleTO roleTO);\n \n     /**\n@@ -75,7 +75,7 @@ public interface RoleService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull RoleTO roleTO);\n \n     /**"},{"sha":"48f9b404c6966d924ff6ab72b6b8b212ef3f5db8","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -51,7 +51,7 @@ public interface SchemaService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractSchemaTO> T read(\n             @NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n \n@@ -63,7 +63,7 @@ <T extends AbstractSchemaTO> T read(\n      * @return list of schemas with matching type, for the given anyTypeClass if provided\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractSchemaTO> List<T> list(@BeanParam SchemaQuery query);\n \n     /**\n@@ -74,7 +74,7 @@ <T extends AbstractSchemaTO> T read(\n      * @return Response object featuring Location header of created schema\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n     /**\n@@ -85,7 +85,7 @@ <T extends AbstractSchemaTO> T read(\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n     /**"},{"sha":"be69f4017462b019df53f37f5d1e4bdbcf832b27","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -44,7 +44,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      * @return list of all security questions\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<SecurityQuestionTO> list();\n \n     /**\n@@ -55,7 +55,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     SecurityQuestionTO read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n@@ -65,7 +65,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      * @return Response object featuring Location header of created security question\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull SecurityQuestionTO securityQuestionTO);\n \n     /**\n@@ -75,7 +75,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull SecurityQuestionTO securityQuestionTO);\n \n     /**\n@@ -95,7 +95,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      */\n     @GET\n     @Path(\"byUser/{username}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     SecurityQuestionTO readByUser(@NotNull @PathParam(\"username\") String username);\n }"},{"sha":"50f994db77a51fa5c8c551055e96ec5dc337db1e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SyncopeService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -36,6 +36,6 @@ public interface SyncopeService extends JAXRSService {\n      * @return information summary about this Apache Syncope deployment's configuration\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     SyncopeTO info();\n }"},{"sha":"0f2b8ddd8bf2f902f8cf954f81095709fbacf671","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -59,7 +59,7 @@ public interface TaskService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractTaskTO> T read(@NotNull @PathParam(\"key\") Long key);\n \n     /**\n@@ -70,7 +70,7 @@ public interface TaskService extends JAXRSService {\n      */\n     @GET\n     @Path(\"executions/{executionKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     TaskExecTO readExecution(@NotNull @PathParam(\"executionKey\") Long executionKey);\n \n     /**\n@@ -81,7 +81,7 @@ public interface TaskService extends JAXRSService {\n      * @return paged list of existing tasks matching type and the given query\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractTaskTO> PagedResult<T> list(@BeanParam TaskQuery query);\n \n     /**\n@@ -91,7 +91,7 @@ public interface TaskService extends JAXRSService {\n      * @return Response object featuring Location header of created task\n      */\n     @POST\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull SchedTaskTO taskTO);\n \n     /**\n@@ -101,7 +101,7 @@ public interface TaskService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull AbstractTaskTO taskTO);\n \n     /**\n@@ -131,7 +131,7 @@ public interface TaskService extends JAXRSService {\n      */\n     @POST\n     @Path(\"{key}/execute\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     TaskExecTO execute(@NotNull @PathParam(\"key\") Long key,\n             @QueryParam(\"dryRun\") @DefaultValue(\"false\") boolean dryRun);\n \n@@ -143,8 +143,8 @@ TaskExecTO execute(@NotNull @PathParam(\"key\") Long key,\n      */\n     @POST\n     @Path(\"bulk\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     BulkActionResult bulk(@NotNull BulkAction bulkAction);\n \n     /**\n@@ -155,7 +155,7 @@ TaskExecTO execute(@NotNull @PathParam(\"key\") Long key,\n      */\n     @GET\n     @Path(\"jobs\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<TaskExecTO> listJobs(@MatrixParam(\"type\") JobStatusType type);\n \n     /**"},{"sha":"1248da5b4b96442dddbd63869a25436f7666ff9d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -47,7 +47,7 @@ public interface UserSelfService extends JAXRSService {\n      * {@link org.apache.syncope.common.rest.api.RESTHeaders#OWNED_ENTITLEMENTS}\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response read();\n \n     /**\n@@ -59,8 +59,8 @@ public interface UserSelfService extends JAXRSService {\n      * itself - ProvisioningResult as Entity\n      */\n     @POST\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull UserTO userTO,\n             @DefaultValue(\"true\") @QueryParam(\"storePassword\") boolean storePassword);\n \n@@ -72,8 +72,8 @@ Response create(@NotNull UserTO userTO,\n      */\n     @PATCH\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response update(@NotNull UserPatch patch);\n \n     /**\n@@ -84,8 +84,8 @@ Response create(@NotNull UserTO userTO,\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response update(@NotNull UserTO user);\n \n     /**\n@@ -94,7 +94,7 @@ Response create(@NotNull UserTO userTO,\n      * @return Response object featuring the deleted user - ProvisioningResult as Entity\n      */\n     @DELETE\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response delete();\n \n     /**\n@@ -106,7 +106,7 @@ Response create(@NotNull UserTO userTO,\n      */\n     @POST\n     @Path(\"changePassword\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response changePassword(@NotNull @QueryParam(\"password\") String password);\n \n     /**"},{"sha":"c3331638ff765657a76dbce6a58d6cd5cc1eef93","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -70,7 +70,7 @@ public interface UserService extends AnyService<UserTO, UserPatch> {\n      * @return paged list of existing users matching the given query\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<UserTO> list(@BeanParam AnyListQuery listQuery);\n \n     /**\n@@ -82,8 +82,8 @@ public interface UserService extends AnyService<UserTO, UserPatch> {\n      * enriched with propagation status information - ProvisioningResult as Entity\n      */\n     @POST\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(\n             @NotNull UserTO userTO,\n             @DefaultValue(\"true\") @QueryParam(\"storePassword\") boolean storePassword);\n@@ -97,7 +97,7 @@ Response create(\n      */\n     @POST\n     @Path(\"{key}/status\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response status(@NotNull StatusPatch statusPatch);\n }"},{"sha":"a8e0a0590b3a51e51f7ff7495ab67c635ce6506d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserWorkflowService.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -43,7 +43,7 @@ public interface UserWorkflowService extends JAXRSService {\n      */\n     @GET\n     @Path(\"forms\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<WorkflowFormTO> getForms();\n \n     /**\n@@ -55,7 +55,7 @@ public interface UserWorkflowService extends JAXRSService {\n      */\n     @GET\n     @Path(\"forms/{userKey}/{name}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<WorkflowFormTO> getFormsByName(\n             @NotNull @PathParam(\"userKey\") final Long userKey, @NotNull @PathParam(\"name\") final String name);\n \n@@ -67,7 +67,7 @@ List<WorkflowFormTO> getFormsByName(\n      */\n     @GET\n     @Path(\"forms/{userKey}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     WorkflowFormTO getFormForUser(@NotNull @PathParam(\"userKey\") Long userKey);\n \n     /**\n@@ -78,7 +78,7 @@ List<WorkflowFormTO> getFormsByName(\n      */\n     @POST\n     @Path(\"forms/{taskId}/claim\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     WorkflowFormTO claimForm(@NotNull @PathParam(\"taskId\") String taskId);\n \n     /**\n@@ -89,8 +89,8 @@ List<WorkflowFormTO> getFormsByName(\n      */\n     @POST\n     @Path(\"forms\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     UserTO submitForm(@NotNull WorkflowFormTO form);\n \n     /**\n@@ -102,7 +102,7 @@ List<WorkflowFormTO> getFormsByName(\n      */\n     @POST\n     @Path(\"tasks/{taskId}/execute\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     UserTO executeTask(@NotNull @PathParam(\"taskId\") String taskId, @NotNull UserTO userTO);\n }"},{"sha":"7654e6b5379ac1927c81d3247de22f154fffbc25","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/WorkflowService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -43,7 +43,7 @@ public interface WorkflowService extends JAXRSService {\n      * @return workflow definition for matching kind\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response exportDefinition(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n \n     /**\n@@ -64,7 +64,7 @@ public interface WorkflowService extends JAXRSService {\n      * @param definition workflow definition for matching kind\n      */\n     @PUT\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void importDefinition(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind, @NotNull String definition);\n \n }"},{"sha":"66bdfc198b13b0d568864a8be04e9b98969c91e1","filename":"ext/camel/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/CamelRouteService.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -45,7 +45,7 @@ public interface CamelRouteService extends JAXRSService {\n      * @return all routes for the given any type kind\n      */\n     @GET\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     List<CamelRouteTO> list(@NotNull @MatrixParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n \n     /**\n@@ -56,7 +56,7 @@ public interface CamelRouteService extends JAXRSService {\n      */\n     @GET\n     @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Produces({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     CamelRouteTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n@@ -66,7 +66,7 @@ public interface CamelRouteService extends JAXRSService {\n      */\n     @PUT\n     @Path(\"{key}\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Consumes({ JAXRSService.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void update(@NotNull CamelRouteTO route);\n \n     /**"},{"sha":"c45fba458eb3e33cafafb5a8b43524f4f626369b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":0,"deletions":37,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -25,8 +25,6 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n-import java.io.IOException;\n-import java.io.InputStream;\n import java.security.AccessControlException;\n import java.util.List;\n import javax.naming.NamingEnumeration;\n@@ -38,9 +36,6 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n-import org.apache.commons.io.IOUtils;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.patch.AssociationPatch;\n@@ -75,8 +70,6 @@\n import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.rest.api.Preference;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.service.GroupService;\n@@ -550,36 +543,6 @@ public void anonymous() {\n                 getResult().isEmpty());\n     }\n \n-    @Test\n-    public void noContent() throws IOException {\n-        SyncopeClient noContentclient = clientFactory.create(ADMIN_UNAME, ADMIN_PWD);\n-        GroupService noContentService = noContentclient.prefer(GroupService.class, Preference.RETURN_NO_CONTENT);\n-\n-        GroupTO group = getSampleTO(\"noContent\");\n-\n-        Response response = noContentService.create(group);\n-        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatus());\n-        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n-        assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n-\n-        group = getObject(response.getLocation(), GroupService.class, GroupTO.class);\n-        assertNotNull(group);\n-\n-        GroupPatch groupPatch = new GroupPatch();\n-        groupPatch.setKey(group.getKey());\n-        groupPatch.getPlainAttrs().add(attrAddReplacePatch(\"badge\", \"xxxxxxxxxx\"));\n-\n-        response = noContentService.update(groupPatch);\n-        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n-        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n-        assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n-\n-        response = noContentService.delete(group.getKey());\n-        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n-        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n-        assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n-    }\n-\n     @Test\n     public void dynMembership() {\n         assertTrue(userService.read(4L).getDynGroups().isEmpty());"},{"sha":"a3bc1c75232f339ec99c5942e2be643c27bdfd99","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/RESTITCase.java","status":"added","additions":147,"deletions":0,"changes":147,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRESTITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRESTITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRESTITCase.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -0,0 +1,147 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import javax.ws.rs.core.EntityTag;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.patch.GroupPatch;\n+import org.apache.syncope.common.lib.patch.StringReplacePatchItem;\n+import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.rest.api.Preference;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.apache.syncope.common.rest.api.service.GroupService;\n+import org.apache.syncope.common.rest.api.service.UserService;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class RESTITCase extends AbstractITCase {\n+\n+    @Test\n+    public void noContent() throws IOException {\n+        SyncopeClient noContentclient = clientFactory.create(ADMIN_UNAME, ADMIN_PWD);\n+        GroupService noContentService = noContentclient.prefer(GroupService.class, Preference.RETURN_NO_CONTENT);\n+\n+        GroupTO group = GroupITCase.getSampleTO(\"noContent\");\n+\n+        Response response = noContentService.create(group);\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatus());\n+        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n+        assertEquals(StringUtils.EMPTY, org.apache.commons.io.IOUtils.toString((InputStream) response.getEntity()));\n+\n+        group = getObject(response.getLocation(), GroupService.class, GroupTO.class);\n+        assertNotNull(group);\n+\n+        GroupPatch groupPatch = new GroupPatch();\n+        groupPatch.setKey(group.getKey());\n+        groupPatch.getPlainAttrs().add(attrAddReplacePatch(\"badge\", \"xxxxxxxxxx\"));\n+\n+        response = noContentService.update(groupPatch);\n+        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n+        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n+        assertEquals(StringUtils.EMPTY, org.apache.commons.io.IOUtils.toString((InputStream) response.getEntity()));\n+\n+        response = noContentService.delete(group.getKey());\n+        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n+        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n+        assertEquals(StringUtils.EMPTY, org.apache.commons.io.IOUtils.toString((InputStream) response.getEntity()));\n+    }\n+\n+    @Test\n+    public void ifMatch() {\n+        UserTO userTO = userService.create(UserITCase.getUniqueSampleTO(\"ifmatch@syncope.apache.org\"), true).\n+                readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                }).getAny();\n+        assertNotNull(userTO);\n+        assertNotNull(userTO.getKey());\n+\n+        EntityTag etag = adminClient.getLatestEntityTag(userService);\n+        assertNotNull(etag);\n+        assertTrue(StringUtils.isNotBlank(etag.getValue()));\n+\n+        UserPatch userPatch = new UserPatch();\n+        userPatch.setKey(userTO.getKey());\n+        userPatch.setUsername(new StringReplacePatchItem.Builder().value(userTO.getUsername() + \"XX\").build());\n+        userTO = userService.update(userPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+        }).getAny();\n+        assertTrue(userTO.getUsername().endsWith(\"XX\"));\n+        EntityTag etag1 = adminClient.getLatestEntityTag(userService);\n+        assertFalse(etag.getValue().equals(etag1.getValue()));\n+\n+        UserService ifMatchService = adminClient.ifMatch(UserService.class, etag);\n+        userPatch.setUsername(new StringReplacePatchItem.Builder().value(userTO.getUsername() + \"YY\").build());\n+        try {\n+            ifMatchService.update(userPatch);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.ConcurrentModification, e.getType());\n+        }\n+\n+        userTO = userService.read(userTO.getKey());\n+        assertTrue(userTO.getUsername().endsWith(\"XX\"));\n+    }\n+\n+    @Test\n+    public void defaultContentType() {\n+        // manualy instantiate SyncopeClient so that media type can be set to */*\n+        SyncopeClientFactoryBean factory = new SyncopeClientFactoryBean().setAddress(ADDRESS);\n+        SyncopeClient client = new SyncopeClient(\n+                MediaType.WILDCARD_TYPE,\n+                factory.getRestClientFactoryBean(),\n+                factory.getExceptionMapper(),\n+                ADMIN_UNAME,\n+                ADMIN_PWD,\n+                false);\n+\n+        // perform operation\n+        AnyTypeClassService service = client.getService(AnyTypeClassService.class);\n+        service.list();\n+\n+        // check that */* was actually sent\n+        MultivaluedMap<String, String> requestHeaders = WebClient.client(service).getHeaders();\n+        assertEquals(MediaType.WILDCARD, requestHeaders.getFirst(HttpHeaders.ACCEPT));\n+\n+        // check that application/json was received\n+        String contentType = WebClient.client(service).getResponse().getHeaderString(HttpHeaders.CONTENT_TYPE);\n+        assertTrue(contentType.startsWith(MediaType.APPLICATION_JSON));\n+    }\n+}"},{"sha":"44f09c2b66988950acbf7a56afca44d1c6f69beb","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -27,7 +27,6 @@\n import static org.junit.Assert.fail;\n \n import java.io.IOException;\n-import java.io.InputStream;\n import java.security.AccessControlException;\n import java.text.SimpleDateFormat;\n import java.util.Collection;\n@@ -38,17 +37,14 @@\n import java.util.Map;\n import java.util.Set;\n import javax.naming.NamingException;\n-import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.MapUtils;\n import org.apache.commons.collections4.Transformer;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.common.util.Base64Utility;\n import org.apache.cxf.helpers.IOUtils;\n-import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.patch.AssociationPatch;\n@@ -89,8 +85,6 @@\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.StatusPatchType;\n import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.common.rest.api.Preference;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n@@ -1138,36 +1132,6 @@ public void groupAttrPropagation() {\n         assertEquals(\"sx-dx\", connObjectTO.getPlainAttrMap().get(\"THEIRGROUP\").getValues().get(0));\n     }\n \n-    @Test\n-    public void noContent() throws IOException {\n-        SyncopeClient noContentclient = clientFactory.create(ADMIN_UNAME, ADMIN_PWD);\n-        UserService noContentService = noContentclient.prefer(UserService.class, Preference.RETURN_NO_CONTENT);\n-\n-        UserTO user = getUniqueSampleTO(\"nocontent@syncope.apache.org\");\n-\n-        Response response = noContentService.create(user, true);\n-        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatus());\n-        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n-        assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n-\n-        user = getObject(response.getLocation(), UserService.class, UserTO.class);\n-        assertNotNull(user);\n-\n-        UserPatch userPatch = new UserPatch();\n-        userPatch.setKey(user.getKey());\n-        userPatch.setPassword(new PasswordPatch.Builder().value(\"password321\").build());\n-\n-        response = noContentService.update(userPatch);\n-        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n-        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n-        assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n-\n-        response = noContentService.delete(user.getKey());\n-        assertEquals(Response.Status.NO_CONTENT.getStatusCode(), response.getStatus());\n-        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n-        assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n-    }\n-\n     @Test\n     public void customPolicyRules() {\n         // Using custom policy rules with application/xml requires to overwrite\n@@ -2132,40 +2096,6 @@ public void issueSYNCOPE435() {\n                 startsWith(\"Not attempted because there are mandatory attributes without value(s): [__PASSWORD__]\"));\n     }\n \n-    @Test\n-    public void ifMatch() {\n-        UserTO userTO = userService.create(getUniqueSampleTO(\"ifmatch@syncope.apache.org\"), true).\n-                readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n-                }).getAny();\n-        assertNotNull(userTO);\n-        assertNotNull(userTO.getKey());\n-\n-        EntityTag etag = adminClient.getLatestEntityTag(userService);\n-        assertNotNull(etag);\n-        assertTrue(StringUtils.isNotBlank(etag.getValue()));\n-\n-        UserPatch userPatch = new UserPatch();\n-        userPatch.setKey(userTO.getKey());\n-        userPatch.setUsername(new StringReplacePatchItem.Builder().value(userTO.getUsername() + \"XX\").build());\n-        userTO = userService.update(userPatch).readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n-        }).getAny();\n-        assertTrue(userTO.getUsername().endsWith(\"XX\"));\n-        EntityTag etag1 = adminClient.getLatestEntityTag(userService);\n-        assertFalse(etag.getValue().equals(etag1.getValue()));\n-\n-        UserService ifMatchService = adminClient.ifMatch(UserService.class, etag);\n-        userPatch.setUsername(new StringReplacePatchItem.Builder().value(userTO.getUsername() + \"YY\").build());\n-        try {\n-            ifMatchService.update(userPatch);\n-            fail();\n-        } catch (SyncopeClientException e) {\n-            assertEquals(ClientExceptionType.ConcurrentModification, e.getType());\n-        }\n-\n-        userTO = userService.read(userTO.getKey());\n-        assertTrue(userTO.getUsername().endsWith(\"XX\"));\n-    }\n-\n     @Test\n     public void issueSYNCOPE454() throws NamingException {\n         // 1. create user with LDAP resource (with 'Generate password if missing' enabled)"},{"sha":"7145b3cbc4601be5813b91b8f3136e7aa947284e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserSelfITCase.java","status":"modified","additions":1,"deletions":22,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b13fc1781a7fa276b1eeef6798e5e2812343978b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b13fc1781a7fa276b1eeef6798e5e2812343978b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java?ref=b13fc1781a7fa276b1eeef6798e5e2812343978b","patch":"@@ -26,16 +26,12 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n-import java.io.IOException;\n-import java.io.InputStream;\n import java.security.AccessControlException;\n import java.util.Map;\n import java.util.Set;\n import javax.ws.rs.core.GenericType;\n-import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.cxf.helpers.IOUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.patch.BooleanReplacePatchItem;\n@@ -52,8 +48,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.PatchOperation;\n-import org.apache.syncope.common.rest.api.Preference;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.syncope.common.rest.api.service.UserService;\n@@ -235,7 +229,7 @@ public void delete() {\n         SyncopeClient authClient = clientFactory.create(created.getUsername(), \"password123\");\n         UserTO deleted = authClient.getService(UserSelfService.class).delete().readEntity(\n                 new GenericType<ProvisioningResult<UserTO>>() {\n-                }).getAny();\n+        }).getAny();\n         assertNotNull(deleted);\n         assertEquals(ActivitiDetector.isActivitiEnabledForUsers(syncopeService)\n                 ? \"deleteApproval\" : null, deleted.getStatus());\n@@ -247,21 +241,6 @@ public void issueSYNCOPE373() {\n         assertEquals(ADMIN_UNAME, userTO.getUsername());\n     }\n \n-    @Test\n-    public void noContent() throws IOException {\n-        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers(syncopeService));\n-\n-        SyncopeClient anonClient = clientFactory.create();\n-        UserSelfService noContentService = anonClient.prefer(UserSelfService.class, Preference.RETURN_NO_CONTENT);\n-\n-        UserTO user = UserITCase.getUniqueSampleTO(\"nocontent-anonymous@syncope.apache.org\");\n-\n-        Response response = noContentService.create(user, true);\n-        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatus());\n-        assertEquals(Preference.RETURN_NO_CONTENT.toString(), response.getHeaderString(RESTHeaders.PREFERENCE_APPLIED));\n-        assertEquals(StringUtils.EMPTY, IOUtils.toString((InputStream) response.getEntity()));\n-    }\n-\n     @Test\n     public void passwordReset() {\n         // 0. ensure that password request DOES require security question"}]}