{"sha":"61dcfc8824092a0f1b07acb4ffe9998e7cf8ca09","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYxZGNmYzg4MjQwOTJhMGYxYjA3YWNiNGZmZTk5OThlN2NmOGNhMDk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-06-30T10:45:09Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-06-30T10:49:55Z"},"message":"[SYNCOPE-1573] Use paged search for groups","tree":{"sha":"a7d77e95e81d6731d417f1b863d2550d850ac095","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a7d77e95e81d6731d417f1b863d2550d850ac095"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/61dcfc8824092a0f1b07acb4ffe9998e7cf8ca09","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/61dcfc8824092a0f1b07acb4ffe9998e7cf8ca09","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/61dcfc8824092a0f1b07acb4ffe9998e7cf8ca09","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/61dcfc8824092a0f1b07acb4ffe9998e7cf8ca09/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"25cf0a686f4afcb7179e04b82dfef4bf67b2d595","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/25cf0a686f4afcb7179e04b82dfef4bf67b2d595","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/25cf0a686f4afcb7179e04b82dfef4bf67b2d595"}],"stats":{"total":59,"additions":34,"deletions":25},"files":[{"sha":"2ab456afb2f87b9f859c1b3d2f3f20cfacec124c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":34,"deletions":25,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/61dcfc8824092a0f1b07acb4ffe9998e7cf8ca09/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/61dcfc8824092a0f1b07acb4ffe9998e7cf8ca09/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=61dcfc8824092a0f1b07acb4ffe9998e7cf8ca09","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n+import java.util.Comparator;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -58,9 +59,9 @@ public class Groups extends AbstractGroups {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    private final List<DynRealmTO> allDynRealms = new ArrayList<>();\n+    protected final List<DynRealmTO> allDynRealms = new ArrayList<>();\n \n-    private final boolean templateMode;\n+    protected final boolean templateMode;\n \n     protected final GroupRestClient groupRestClient = new GroupRestClient();\n \n@@ -197,13 +198,13 @@ public class ConsoleGroupsModel extends AbstractGroupsModel {\n \n         private static final long serialVersionUID = -4541954630939063927L;\n \n-        private List<GroupTO> groups;\n+        protected List<GroupTO> groups;\n \n-        private List<MembershipTO> memberships;\n+        protected List<MembershipTO> memberships;\n \n-        private List<String> dynMemberships;\n+        protected List<String> dynMemberships;\n \n-        private String realm;\n+        protected String realm;\n \n         @Override\n         public List<GroupTO> getObject() {\n@@ -237,22 +238,30 @@ public List<MembershipTO> getMemberships() {\n         @Override\n         protected void reloadMemberships() {\n             // this is to be sure to have group names (required to see membership details in approval page)\n-            GroupFiqlSearchConditionBuilder searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n-\n-            List<CompleteCondition> conditions = GroupableRelatableTO.class.cast(anyTO).getMemberships().\n-                    stream().map(membership -> searchConditionBuilder.is(Constants.KEY_FIELD_NAME).\n-                    equalTo(membership.getGroupKey()).wrap()).\n-                    collect(Collectors.toList());\n-\n             Map<String, GroupTO> assignedGroups = new HashMap<>();\n-            if (!conditions.isEmpty()) {\n-                assignedGroups.putAll(groupRestClient.search(\n-                        realm,\n-                        searchConditionBuilder.isAssignable().and().or(conditions).query(),\n-                        -1,\n-                        -1,\n-                        new SortParam<>(\"name\", true),\n-                        null).stream().collect(Collectors.toMap(GroupTO::getKey, Function.identity())));\n+\n+            int total = GroupableRelatableTO.class.cast(anyTO).getMemberships().size();\n+            int pages = (total / Constants.MAX_GROUP_LIST_SIZE) + 1;\n+            SortParam<String> sort = new SortParam<>(\"name\", true);\n+            for (int page = 1; page <= pages; page++) {\n+                GroupFiqlSearchConditionBuilder builder = SyncopeClient.getGroupSearchConditionBuilder();\n+\n+                List<CompleteCondition> conditions = GroupableRelatableTO.class.cast(anyTO).getMemberships().\n+                        stream().\n+                        skip((page - 1) * Constants.MAX_GROUP_LIST_SIZE).\n+                        limit(Constants.MAX_GROUP_LIST_SIZE).\n+                        map(m -> builder.is(Constants.KEY_FIELD_NAME).equalTo(m.getGroupKey()).wrap()).\n+                        collect(Collectors.toList());\n+\n+                if (!conditions.isEmpty()) {\n+                    assignedGroups.putAll(groupRestClient.search(\n+                            realm,\n+                            builder.isAssignable().and().or(conditions).query(),\n+                            1,\n+                            Constants.MAX_GROUP_LIST_SIZE,\n+                            sort,\n+                            null).stream().collect(Collectors.toMap(GroupTO::getKey, Function.identity())));\n+                }\n             }\n \n             // set group names in membership TOs and remove membership not assignable\n@@ -267,6 +276,7 @@ protected void reloadMemberships() {\n             GroupableRelatableTO.class.cast(anyTO).getMemberships().removeAll(toBeRemoved);\n \n             memberships = GroupableRelatableTO.class.cast(anyTO).getMemberships();\n+            memberships.sort(Comparator.comparing(MembershipTO::getGroupName));\n         }\n \n         @Override\n@@ -280,18 +290,18 @@ public List<String> getDynMemberships() {\n          */\n         @Override\n         protected void reloadDynMemberships() {\n-            GroupFiqlSearchConditionBuilder searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n+            GroupFiqlSearchConditionBuilder builder = SyncopeClient.getGroupSearchConditionBuilder();\n \n             List<CompleteCondition> conditions = GroupableRelatableTO.class.cast(anyTO).getDynMemberships().\n-                    stream().map(membership -> searchConditionBuilder.is(Constants.KEY_FIELD_NAME).\n+                    stream().map(membership -> builder.is(Constants.KEY_FIELD_NAME).\n                     equalTo(membership.getGroupKey()).wrap()).\n                     collect(Collectors.toList());\n \n             dynMemberships = new ArrayList<>();\n             if (SyncopeConsoleSession.get().owns(IdRepoEntitlement.GROUP_SEARCH) && !conditions.isEmpty()) {\n                 dynMemberships.addAll(groupRestClient.search(\n                         SyncopeConstants.ROOT_REALM,\n-                        searchConditionBuilder.or(conditions).query(),\n+                        builder.or(conditions).query(),\n                         -1,\n                         -1,\n                         new SortParam<>(\"name\", true),\n@@ -305,7 +315,6 @@ protected void reloadDynMemberships() {\n         @Override\n         protected void reload() {\n             boolean reload;\n-\n             if (Groups.this.templateMode) {\n                 reload = realm == null;\n                 realm = SyncopeConstants.ROOT_REALM;"}]}