{"sha":"2e7e2ceef339fe243de2c688200e4010d46b8776","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJlN2UyY2VlZjMzOWZlMjQzZGUyYzY4ODIwMGU0MDEwZDQ2Yjg3NzY=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-05-05T21:56:29Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-05-05T21:59:18Z"},"message":"[SYNCOPE-1047] Replaces ActionLinksPanel with TogglePanel","tree":{"sha":"c843ef88c04f2782f04130c9ae77b01b67f8d64f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c843ef88c04f2782f04130c9ae77b01b67f8d64f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2e7e2ceef339fe243de2c688200e4010d46b8776","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2e7e2ceef339fe243de2c688200e4010d46b8776","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2e7e2ceef339fe243de2c688200e4010d46b8776","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2e7e2ceef339fe243de2c688200e4010d46b8776/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"018fa9771adee2788be0ba3357c31cdc5da17cba","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/018fa9771adee2788be0ba3357c31cdc5da17cba","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/018fa9771adee2788be0ba3357c31cdc5da17cba"}],"stats":{"total":10420,"additions":5496,"deletions":4924},"files":[{"sha":"a3249cdd33fbdb0c670ab454cde846a05582965f","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/ApprovalDirectoryPanel.java","status":"modified","additions":35,"deletions":58,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -32,10 +32,9 @@\n import org.apache.syncope.client.console.rest.UserWorkflowRestClient;\n import org.apache.syncope.client.console.approvals.ApprovalDirectoryPanel.ApprovalProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -99,77 +98,55 @@ protected List<IColumn<WorkflowFormTO, String>> getColumns() {\n         columns.add(new DatePropertyColumn<WorkflowFormTO>(\n                 new ResourceModel(\"dueDate\"), \"dueDate\", \"dueDate\"));\n         columns.add(new PropertyColumn<WorkflowFormTO, String>(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n-        columns.add(new ActionColumn<WorkflowFormTO, String>(new ResourceModel(\"actions\")) {\n \n-            private static final long serialVersionUID = -3503023501954863133L;\n-\n-            @Override\n-            public ActionLinksPanel<WorkflowFormTO> getActions(\n-                    final String componentId, final IModel<WorkflowFormTO> model) {\n-                final ActionLinksPanel.Builder<WorkflowFormTO> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<WorkflowFormTO>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n+        return columns;\n+    }\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore) {\n-                        try {\n-                            restClient.claimForm(model.getObject().getTaskId());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientException scee) {\n-                            SyncopeConsoleSession.get().error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                        target.add(container);\n-                    }\n-                }, ActionLink.ActionType.CLAIM, StandardEntitlement.WORKFLOW_FORM_CLAIM);\n+    @Override\n+    public ActionsPanel<WorkflowFormTO> getActions(final IModel<WorkflowFormTO> model) {\n+        final ActionsPanel<WorkflowFormTO> panel = super.getActions(model);\n \n-                panel.add(new ActionLink<WorkflowFormTO>() {\n+        panel.add(new ActionLink<WorkflowFormTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore) {\n-                        final IModel<WorkflowFormTO> formModel = new CompoundPropertyModel<>(model.getObject());\n-                        modal.setFormModel(formModel);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore) {\n+                try {\n+                    restClient.claimForm(model.getObject().getTaskId());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                } catch (SyncopeClientException scee) {\n+                    SyncopeConsoleSession.get().error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                target.add(container);\n+            }\n+        }, ActionLink.ActionType.CLAIM, StandardEntitlement.WORKFLOW_FORM_CLAIM);\n \n-                        target.add(modal.setContent(new ApprovalModal(modal, pageRef, model.getObject())));\n-                        modal.header(new Model<>(getString(\"approval.edit\", new Model<>(model.getObject()))));\n+        panel.add(new ActionLink<WorkflowFormTO>() {\n \n-                        modal.show(true);\n-                    }\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    protected boolean statusCondition(final WorkflowFormTO modelObject) {\n-                        return SyncopeConsoleSession.get().getSelfTO().getUsername().\n-                                equals(model.getObject().getOwner());\n-                    }\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore) {\n+                final IModel<WorkflowFormTO> formModel = new CompoundPropertyModel<>(model.getObject());\n+                modal.setFormModel(formModel);\n \n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.WORKFLOW_FORM_READ);\n+                target.add(modal.setContent(new ApprovalModal(modal, pageRef, model.getObject())));\n+                modal.header(new Model<>(getString(\"approval.edit\", new Model<>(model.getObject()))));\n \n-                return panel.build(componentId);\n+                modal.show(true);\n             }\n \n             @Override\n-            public ActionLinksPanel<WorkflowFormTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<WorkflowFormTO> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<WorkflowFormTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final WorkflowFormTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.WORKFLOW_FORM_LIST).build(componentId);\n+            protected boolean statusCondition(final WorkflowFormTO modelObject) {\n+                return SyncopeConsoleSession.get().getSelfTO().getUsername().\n+                        equals(model.getObject().getOwner());\n             }\n-        });\n \n-        return columns;\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.WORKFLOW_FORM_READ);\n+\n+        return panel;\n     }\n \n     @Override"},{"sha":"2a461413ce5b4200cd8732f1974b1aa474c24e3e","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -39,7 +39,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -112,7 +112,7 @@ public IModel<T> model(final T object) {\n                 dataProvider,\n                 Integer.MAX_VALUE).setMarkupId(\"selectedObjects\").setVisible(items != null && !items.isEmpty()));\n \n-        final ActionLinksPanel<Serializable> actionPanel = ActionLinksPanel.builder().build(\"actions\");\n+        final ActionsPanel<Serializable> actionPanel = new ActionsPanel<>(\"actions\", null);\n         container.add(actionPanel);\n \n         for (ActionLink.ActionType action : actions) {\n@@ -236,14 +236,15 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         target.add(actionPanel);\n \n                         SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                    } catch (Exception e) {\n+                    } catch (IllegalArgumentException | NoSuchMethodException | SecurityException \n+                            | IllegalAccessException | InvocationTargetException e) {\n                         LOG.error(\"Bulk action failure\", e);\n                         SyncopeConsoleSession.get().error(\"Operation \" + actionToBeAddresed.getActionId()\n                                 + \" not supported\");\n                     }\n                     ((BasePage) getPage()).getNotificationPanel().refresh(target);\n                 }\n-            }, action, StandardEntitlement.CONFIGURATION_LIST, !items.isEmpty());\n+            }, action, StandardEntitlement.CONFIGURATION_LIST).hideLabel();\n         }\n     }\n "},{"sha":"11bdc722b3cb3fa9d940734fd9bba5d3dc6b05ac","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -37,6 +37,18 @@ public final class Constants {\n \n     public static final String MODEL_ID_PARAM = \"modelId\";\n \n+    public static final String KEY_FIELD_NAME = \"key\";\n+\n+    public static final String SCHEMA_FIELD_NAME = \"schema\";\n+\n+    public static final String DESCRIPTION_FIELD_NAME = \"description\";\n+\n+    public static final String USERNAME_FIELD_NAME = \"username\";\n+\n+    public static final String OBJNAME_FIELD_NAME = \"name\";\n+\n+    public static final String DEFAULT_TOKEN_FIELD_NAME = \"token\";\n+\n     public static final String ON_CLICK = \"click\";\n \n     public static final String ON_CHANGE = \"change\";"},{"sha":"5579d293738b554e025f6a1e53454a9bd3ef4b4d","filename":"client/console/src/main/java/org/apache/syncope/client/console/events/EventCategoryPanel.java","status":"modified","additions":87,"deletions":87,"changes":174,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fevents%2FEventCategoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.client.console.events.SelectedEventsPanel.EventSelectionChanged;\n import org.apache.syncope.client.console.events.SelectedEventsPanel.InspectSelectedEvent;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.log.EventCategoryTO;\n@@ -77,7 +77,7 @@ public abstract class EventCategoryPanel extends Panel {\n \n     private final AjaxTextFieldPanel custom;\n \n-    private final ActionLinksPanel<EventCategoryTO> actionLinksPanel;\n+    private final ActionsPanel<EventCategoryTO> actionsPanel;\n \n     private final IModel<List<String>> model;\n \n@@ -194,93 +194,93 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         categoryContainer.add(custom.hideLabel());\n \n-        actionLinksPanel = ActionLinksPanel.<EventCategoryTO>builder().\n-                add(new ActionLink<EventCategoryTO>() {\n+        actionsPanel = new ActionsPanel<EventCategoryTO>(\"customActions\", null);\n+        actionsPanel.add(new ActionLink<EventCategoryTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n-                        if (StringUtils.isNotBlank(custom.getModelObject())) {\n-                            Map.Entry<EventCategoryTO, AuditElements.Result> parsed =\n-                                    AuditLoggerName.parseEventCategory(custom.getModelObject());\n-\n-                            String eventString = AuditLoggerName.buildEvent(\n-                                    parsed.getKey().getType(),\n-                                    null,\n-                                    null,\n-                                    parsed.getKey().getEvents().isEmpty()\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final EventCategoryTO ignore) {\n+                if (StringUtils.isNotBlank(custom.getModelObject())) {\n+                    Map.Entry<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.parseEventCategory(custom.\n+                            getModelObject());\n+\n+                    String eventString = AuditLoggerName.buildEvent(\n+                            parsed.getKey().getType(),\n+                            null,\n+                            null,\n+                            parsed.getKey().getEvents().isEmpty()\n                                     ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n-                                    parsed.getValue());\n-\n-                            custom.setModelObject(StringUtils.EMPTY);\n-                            send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n-                                    target,\n-                                    Collections.<String>singleton(eventString),\n-                                    Collections.<String>emptySet()));\n-                            target.add(categoryContainer);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.CREATE).\n-                add(new ActionLink<EventCategoryTO>() {\n+                            parsed.getValue());\n+\n+                    custom.setModelObject(StringUtils.EMPTY);\n+                    send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                            target,\n+                            Collections.<String>singleton(eventString),\n+                            Collections.<String>emptySet()));\n+                    target.add(categoryContainer);\n+                }\n+            }\n+        }, ActionLink.ActionType.CREATE, StringUtils.EMPTY);\n+        actionsPanel.add(new ActionLink<EventCategoryTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n-                        if (StringUtils.isNotBlank(custom.getModelObject())) {\n-                            Pair<EventCategoryTO, AuditElements.Result> parsed =\n-                                    AuditLoggerName.parseEventCategory(custom.getModelObject());\n-\n-                            String eventString = AuditLoggerName.buildEvent(\n-                                    parsed.getKey().getType(),\n-                                    null,\n-                                    null,\n-                                    parsed.getKey().getEvents().isEmpty()\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final EventCategoryTO ignore) {\n+                if (StringUtils.isNotBlank(custom.getModelObject())) {\n+                    Pair<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.parseEventCategory(custom.\n+                            getModelObject());\n+\n+                    String eventString = AuditLoggerName.buildEvent(\n+                            parsed.getKey().getType(),\n+                            null,\n+                            null,\n+                            parsed.getKey().getEvents().isEmpty()\n                                     ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n-                                    parsed.getValue());\n-\n-                            custom.setModelObject(StringUtils.EMPTY);\n-                            send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n-                                    target,\n-                                    Collections.<String>singleton(eventString),\n-                                    Collections.<String>emptySet()));\n-                            target.add(categoryContainer);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.CREATE).\n-                add(new ActionLink<EventCategoryTO>() {\n+                            parsed.getValue());\n+\n+                    custom.setModelObject(StringUtils.EMPTY);\n+                    send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                            target,\n+                            Collections.<String>singleton(eventString),\n+                            Collections.<String>emptySet()));\n+                    target.add(categoryContainer);\n+                }\n+            }\n+        }, ActionLink.ActionType.CREATE, StringUtils.EMPTY);\n+        actionsPanel.add(new ActionLink<EventCategoryTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435521L;\n+            private static final long serialVersionUID = -3722207913631435521L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n-                        if (StringUtils.isNotBlank(custom.getModelObject())) {\n-                            Pair<EventCategoryTO, AuditElements.Result> parsed =\n-                                    AuditLoggerName.parseEventCategory(custom.getModelObject());\n-\n-                            String eventString = AuditLoggerName.buildEvent(\n-                                    parsed.getKey().getType(),\n-                                    null,\n-                                    null,\n-                                    parsed.getKey().getEvents().isEmpty()\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final EventCategoryTO ignore) {\n+                if (StringUtils.isNotBlank(custom.getModelObject())) {\n+                    Pair<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.parseEventCategory(custom.\n+                            getModelObject());\n+\n+                    String eventString = AuditLoggerName.buildEvent(\n+                            parsed.getKey().getType(),\n+                            null,\n+                            null,\n+                            parsed.getKey().getEvents().isEmpty()\n                                     ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n-                                    parsed.getValue());\n-\n-                            custom.setModelObject(StringUtils.EMPTY);\n-                            send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n-                                    target,\n-                                    Collections.<String>emptySet(),\n-                                    Collections.<String>singleton(eventString)));\n-                            target.add(categoryContainer);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.DELETE).build(\"customActions\");\n+                            parsed.getValue());\n+\n+                    custom.setModelObject(StringUtils.EMPTY);\n+                    send(EventCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                            target,\n+                            Collections.<String>emptySet(),\n+                            Collections.<String>singleton(eventString)));\n+                    target.add(categoryContainer);\n+                }\n+            }\n+        }, ActionLink.ActionType.DELETE, StringUtils.EMPTY, true);\n \n-        categoryContainer.add(actionLinksPanel);\n+        categoryContainer.add(actionsPanel);\n \n-        actionLinksPanel.setVisible(false);\n-        actionLinksPanel.setEnabled(false);\n+        actionsPanel.setVisible(false);\n+        actionsPanel.setEnabled(false);\n \n         eventsContainer.add(new EventSelectionPanel(\"eventsPanel\", eventCategoryTO, model) {\n \n@@ -346,17 +346,17 @@ public void onEvent(final IEvent<?> event) {\n                             subcategory.setEnabled(false);\n                             custom.setVisible(true);\n                             custom.setEnabled(true);\n-                            actionLinksPanel.setVisible(true);\n-                            actionLinksPanel.setEnabled(true);\n+                            actionsPanel.setVisible(true);\n+                            actionsPanel.setEnabled(true);\n                         } else {\n                             category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n                             subcategory.setChoices(Collections.<String>emptyList());\n                             category.setEnabled(true);\n                             subcategory.setEnabled(true);\n                             custom.setVisible(false);\n                             custom.setEnabled(false);\n-                            actionLinksPanel.setVisible(false);\n-                            actionLinksPanel.setEnabled(false);\n+                            actionsPanel.setVisible(false);\n+                            actionsPanel.setEnabled(false);\n                         }\n                         change.getTarget().add(categoryContainer);\n                         break;\n@@ -399,22 +399,22 @@ public void onEvent(final IEvent<?> event) {\n                         categoryEvent.getKey().getCategory(),\n                         categoryEvent.getKey().getSubcategory(),\n                         categoryEvent.getKey().getEvents().isEmpty()\n-                        ? StringUtils.EMPTY : categoryEvent.getKey().getEvents().iterator().next(),\n+                                ? StringUtils.EMPTY : categoryEvent.getKey().getEvents().iterator().next(),\n                         categoryEvent.getValue()));\n \n                 category.setEnabled(false);\n                 subcategory.setEnabled(false);\n                 custom.setVisible(true);\n                 custom.setEnabled(true);\n-                actionLinksPanel.setVisible(true);\n-                actionLinksPanel.setEnabled(true);\n+                actionsPanel.setVisible(true);\n+                actionsPanel.setEnabled(true);\n             } else {\n                 category.setEnabled(true);\n                 subcategory.setEnabled(true);\n                 custom.setVisible(false);\n                 custom.setEnabled(false);\n-                actionLinksPanel.setVisible(false);\n-                actionLinksPanel.setEnabled(false);\n+                actionsPanel.setVisible(false);\n+                actionsPanel.setEnabled(false);\n             }\n \n             inspectSelectedEvent.getTarget().add(categoryContainer);"},{"sha":"55c4bd0364b47565ebafcf829456c0530c955833","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.java","status":"modified","additions":60,"deletions":69,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,10 +34,8 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -55,6 +53,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.syncope.client.console.panels.WizardModalPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n@@ -112,78 +111,70 @@ public WizardModalPanel<MailTemplateTO> build(\n     @Override\n     protected List<IColumn<MailTemplateTO, String>> getColumns() {\n         List<IColumn<MailTemplateTO, String>> columns = new ArrayList<>();\n-        columns.add(new PropertyColumn<MailTemplateTO, String>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+        columns.add(new PropertyColumn<MailTemplateTO, String>(new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<MailTemplateTO, String>(new ResourceModel(\"actions\", \"\")) {\n+    @Override\n+    public ActionsPanel<MailTemplateTO> getActions(final IModel<MailTemplateTO> model) {\n+        final ActionsPanel<MailTemplateTO> panel = super.getActions(model);\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+        panel.add(new ActionLink<MailTemplateTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n-            public ActionLinksPanel<MailTemplateTO> getActions(\n-                    final String componentId, final IModel<MailTemplateTO> model) {\n-\n-                final ActionLinksPanel.Builder<MailTemplateTO> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<MailTemplateTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        TemplateContent<MailTemplateFormat> content =\n-                                new TemplateContent<>(model.getObject().getKey(), MailTemplateFormat.HTML);\n-                        content.setContent(\n-                                restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.HTML));\n-\n-                        utilityModal.header(new ResourceModel(\"mail.template.html\", \"HTML Content\"));\n-                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n-                    }\n-                }, ActionLink.ActionType.HTML, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n-\n-                panel.add(new ActionLink<MailTemplateTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        TemplateContent<MailTemplateFormat> content =\n-                                new TemplateContent<>(model.getObject().getKey(), MailTemplateFormat.TEXT);\n-                        content.setContent(\n-                                restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.TEXT));\n-\n-                        utilityModal.header(new ResourceModel(\"mail.template.text\", \"TEXT Content\"));\n-                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n-                    }\n-                }, ActionLink.ActionType.TEXT, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n-\n-                panel.add(new ActionLink<MailTemplateTO>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        try {\n-                            restClient.deleteTemplate(model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                    getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.MAIL_TEMPLATE_DELETE);\n-\n-                return panel.build(componentId);\n+            public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n+                TemplateContent<MailTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n+                        MailTemplateFormat.HTML);\n+                content.setContent(\n+                        restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.HTML));\n+\n+                utilityModal.header(new ResourceModel(\"mail.template.html\", \"HTML Content\"));\n+                utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n+                utilityModal.show(true);\n+                target.add(utilityModal);\n             }\n-        });\n-        return columns;\n+        }, ActionLink.ActionType.HTML, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n+\n+        panel.add(new ActionLink<MailTemplateTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770645L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n+                TemplateContent<MailTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n+                        MailTemplateFormat.TEXT);\n+                content.setContent(\n+                        restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.TEXT));\n+\n+                utilityModal.header(new ResourceModel(\"mail.template.text\", \"TEXT Content\"));\n+                utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n+                utilityModal.show(true);\n+                target.add(utilityModal);\n+            }\n+        }, ActionLink.ActionType.TEXT, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n+\n+        panel.add(new ActionLink<MailTemplateTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n+                try {\n+                    restClient.deleteTemplate(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                            getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.MAIL_TEMPLATE_DELETE, true);\n+\n+        return panel;\n     }\n \n     @Override"},{"sha":"740a36d3d88b95978c9a75bc52c1d6d907ab751e","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel.java","status":"modified","additions":51,"deletions":61,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,13 +34,12 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.NotificationTO;\n@@ -54,7 +53,6 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public class NotificationDirectoryPanel\n@@ -87,78 +85,70 @@ public NotificationDirectoryPanel(final String id, final PageReference pageRef)\n     @Override\n     protected List<IColumn<NotificationTO, String>> getColumns() {\n         List<IColumn<NotificationTO, String>> columns = new ArrayList<>();\n-        columns.add(new KeyPropertyColumn<NotificationTO>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+        columns.add(new KeyPropertyColumn<NotificationTO>(new StringResourceModel(\"key\", this), \"key\"));\n         columns.add(new PropertyColumn<NotificationTO, String>(\n                 new StringResourceModel(\"sender\", this), \"sender\", \"sender\"));\n         columns.add(new PropertyColumn<NotificationTO, String>(\n                 new StringResourceModel(\"subject\", this), \"subject\", \"subject\"));\n         columns.add(new PropertyColumn<NotificationTO, String>(\n                 new StringResourceModel(\"template\", this), \"template\", \"template\"));\n         columns.add(new CollectionPropertyColumn<NotificationTO>(\n-                new StringResourceModel(\"events\", this), \"events\", \"events\"));\n+                new StringResourceModel(\"events\", this), \"events\"));\n         columns.add(new BooleanPropertyColumn<NotificationTO>(\n                 new StringResourceModel(\"active\", this), \"active\", \"active\"));\n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<NotificationTO, String>(new ResourceModel(\"actions\", \"\")) {\n+    @Override\n+    public ActionsPanel<NotificationTO> getActions(final IModel<NotificationTO> model) {\n+        final ActionsPanel<NotificationTO> panel = super.getActions(model);\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+        panel.add(new ActionLink<NotificationTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n-            public ActionLinksPanel<NotificationTO> getActions(\n-                    final String componentId, final IModel<NotificationTO> model) {\n-\n-                final ActionLinksPanel.Builder<NotificationTO> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<NotificationTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n-                        target.add(utilityModal.setContent(\n-                                new NotificationTasks(model.getObject().getKey(), pageRef)));\n-                        utilityModal.header(new StringResourceModel(\"notification.tasks\", model));\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n-                    }\n-                }, ActionLink.ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST);\n-\n-                panel.add(new ActionLink<NotificationTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n-                        send(NotificationDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(\n-                                        new NotificationWrapper(restClient.read(model.getObject().getKey())), target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.NOTIFICATION_UPDATE);\n-\n-                panel.add(new ActionLink<NotificationTO>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n-                        try {\n-                            restClient.delete(model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                    getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.NOTIFICATION_DELETE);\n-\n-                return panel.build(componentId);\n+            public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n+                send(NotificationDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                new NotificationWrapper(restClient.read(model.getObject().getKey())), target));\n             }\n-        });\n-        return columns;\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.NOTIFICATION_UPDATE);\n+\n+        panel.add(new ActionLink<NotificationTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770645L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n+                target.add(utilityModal.setContent(\n+                        new NotificationTasks(model.getObject().getKey(), pageRef)));\n+                utilityModal.header(new StringResourceModel(\"notification.tasks\", model));\n+                utilityModal.show(true);\n+                target.add(utilityModal);\n+            }\n+        }, ActionLink.ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST);\n+\n+        panel.add(new ActionLink<NotificationTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                            getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.NOTIFICATION_DELETE, true);\n+\n+        return panel;\n     }\n \n     @Override"},{"sha":"856db28d1d99c476f95d01674de4c3b340edee4c","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Parameters.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FParameters.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FParameters.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FParameters.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -19,15 +19,15 @@\n package org.apache.syncope.client.console.pages;\n \n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n-import org.apache.syncope.client.console.panels.ParametersPanel;\n+import org.apache.syncope.client.console.panels.ParametersDirectoryPanel;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public class Parameters extends BasePage {\n \n     private static final long serialVersionUID = 4116733316105009166L;\n \n-    private final ParametersPanel parametersPanel;\n+    private final ParametersDirectoryPanel parametersPanel;\n \n     public Parameters(final PageParameters parameters) {\n         super(parameters);\n@@ -38,7 +38,7 @@ public Parameters(final PageParameters parameters) {\n         content.setOutputMarkupId(true);\n         body.add(content);\n \n-        parametersPanel = new ParametersPanel(\"parametersPanel\", getPageReference());\n+        parametersPanel = new ParametersDirectoryPanel(\"parametersPanel\", getPageReference());\n         parametersPanel.setOutputMarkupId(true);\n \n         content.add(parametersPanel);"},{"sha":"d02345c037504455e1ac58f827cac793b3124bc0","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Roles.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -44,7 +44,7 @@ public Roles(final PageParameters parameters) {\n \n             private static final long serialVersionUID = -5960765294082359003L;\n \n-        }.disableCheckBoxes().addNewItemPanelBuilder(\n+        }.addNewItemPanelBuilder(\n                 new RoleWizardBuilder(new RoleTO(), getPageReference()), true).build(\"rolesPanel\");\n \n         content.add(rolesPanel);"},{"sha":"86714ee5920e2c56626c9a23704e6f35bf0c82bf","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AccessTokenDirectoryPanel.java","status":"modified","additions":26,"deletions":49,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAccessTokenDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,11 +34,10 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AccessTokenDirectoryPanel.AccessTokenDataProvider;\n import org.apache.syncope.client.console.rest.AccessTokenRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AccessTokenTO;\n@@ -55,6 +54,7 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n \n public class AccessTokenDirectoryPanel\n         extends DirectoryPanel<AccessTokenTO, AccessTokenTO, AccessTokenDataProvider, AccessTokenRestClient> {\n@@ -83,8 +83,10 @@ protected String paginatorRowsKey() {\n     @Override\n     protected List<IColumn<AccessTokenTO, String>> getColumns() {\n         List<IColumn<AccessTokenTO, String>> columns = new ArrayList<>();\n-\n-        columns.add(new KeyPropertyColumn<AccessTokenTO>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+        columns.add(new KeyPropertyColumn<AccessTokenTO>(\n+                new StringResourceModel(Constants.KEY_FIELD_NAME, this),\n+                Constants.KEY_FIELD_NAME,\n+                Constants.KEY_FIELD_NAME));\n \n         columns.add(new PropertyColumn<AccessTokenTO, String>(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n \n@@ -107,58 +109,33 @@ public void populateItem(\n \n         columns.add(new DatePropertyColumn<AccessTokenTO>(new ResourceModel(\"expiryTime\"), \"expiryTime\", \"expiryTime\"));\n \n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<AccessTokenTO, String>(new ResourceModel(\"actions\", \"\")) {\n+    @Override\n+    public ActionsPanel<AccessTokenTO> getActions(final IModel<AccessTokenTO> model) {\n+        final ActionsPanel<AccessTokenTO> panel = super.getActions(model);\n \n-            private static final long serialVersionUID = 6532399418012695495L;\n+        panel.add(new ActionLink<AccessTokenTO>() {\n \n-            @Override\n-            public ActionLinksPanel<AccessTokenTO> getActions(\n-                    final String componentId, final IModel<AccessTokenTO> model) {\n-\n-                final ActionLinksPanel.Builder<AccessTokenTO> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<AccessTokenTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AccessTokenTO ignore) {\n-                        try {\n-                            restClient.delete(model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                    getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.ACCESS_TOKEN_DELETE);\n-\n-                return panel.build(componentId);\n-            }\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            public ActionLinksPanel<AccessTokenTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AccessTokenTO> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<AccessTokenTO>() {\n-\n-                    private static final long serialVersionUID = -8766205612892810375L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AccessTokenTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.ACCESS_TOKEN_LIST).build(componentId);\n+            public void onClick(final AjaxRequestTarget target, final AccessTokenTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                            getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.ACCESS_TOKEN_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     @Override"},{"sha":"9aa2a69710dd560a3b4e7a4e36b96b50c7e6ff52","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -47,7 +47,7 @@\n \n     private final Form<T> bulkActionForm;\n \n-    private final ActionLinksPanel<Serializable> actionPanel;\n+    private final ActionsPanel<Serializable> actionPanel;\n \n     public ActionDataTablePanel(\n             final String id,\n@@ -87,7 +87,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         final WebMarkupContainer actionPanelContainer = new WebMarkupContainer(\"actionPanelContainer\");\n         bulkActionForm.add(actionPanelContainer);\n \n-        actionPanel = ActionLinksPanel.builder().build(\"actions\");\n+        actionPanel = new ActionsPanel<>(\"actions\", null);\n         actionPanelContainer.add(actionPanel);\n \n         if (dataTable.getRowCount() == 0) {\n@@ -107,12 +107,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n     public void addAction(\n             final ActionLink<Serializable> action, final ActionType type, final String entitlements) {\n-        actionPanel.add(action, type, entitlements, true);\n-    }\n-\n-    public void addAction(\n-            final ActionLink<Serializable> action, final ActionType type, final String pageId, final boolean enabled) {\n-        actionPanel.add(action, type, pageId, enabled);\n+        actionPanel.add(action, type, entitlements);\n     }\n \n     public void addCancelButton(final BaseModal<?> modal) {"},{"sha":"fc2cb457febb91b731c51cec4291a3c163b9adbd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":29,"deletions":3,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,6 +34,8 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -46,6 +48,7 @@\n import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n \n public final class AjaxDataTablePanel<T extends Serializable, S> extends DataTablePanel<T, S> {\n@@ -151,6 +154,14 @@ public void setMultiLevelPanel(final BaseModal<?> baseModal, final MultilevelPan\n             this.multiLevelPanel = multiLevelPanel;\n             this.baseModal = baseModal;\n         }\n+\n+        protected ActionsPanel<T> getActions(final IModel<T> model) {\n+            return null;\n+        }\n+\n+        protected ActionLinksTogglePanel<T> getTogglePanel() {\n+            return null;\n+        }\n     }\n \n     private AjaxDataTablePanel(final String id, final Builder<T, S> builder) {\n@@ -200,8 +211,23 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             builder.columns.add(0, new CheckGroupColumn<T, S>(group));\n         }\n \n-        dataTable = new AjaxFallbackDataTable<>(\n-                \"dataTable\", builder.columns, builder.dataProvider, builder.rowsPerPage, builder.container);\n+        dataTable = new AjaxFallbackDataTable<T, S>(\n+                \"dataTable\", builder.columns, builder.dataProvider, builder.rowsPerPage, builder.container) {\n+\n+            private static final long serialVersionUID = -7370603907251344224L;\n+\n+            @Override\n+            protected ActionsPanel<T> getActions(final IModel<T> model) {\n+                return builder.getActions(model);\n+            }\n+\n+            @Override\n+            protected ActionLinksTogglePanel<T> getTogglePanel() {\n+                return builder.getTogglePanel();\n+            }\n+\n+        };\n+\n         dataTable.add(new AttributeModifier(\"class\", \"table table-bordered table-hover dataTable\"));\n \n         group.add(dataTable);\n@@ -221,7 +247,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                             builder.pageRef,\n                             new ArrayList<>(group.getModelObject()),\n                             // serialization problem with sublist only\n-                            new ArrayList<>(builder.columns.subList(1, builder.columns.size() - 1)),\n+                            new ArrayList<>(builder.columns.subList(1, builder.columns.size())),\n                             builder.bulkActions,\n                             builder.bulkActionExecutor,\n                             builder.itemKeyField)));"},{"sha":"0bbaf55971367cb62f4a01d0c6f75153727868cf","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -29,6 +29,7 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AnyDataProvider;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SerializableTransformer;\n import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n@@ -121,9 +122,9 @@ protected void addPropertyColumn(\n             final Field field,\n             final List<IColumn<A, String>> columns) {\n \n-        if (\"key\".equalsIgnoreCase(name)) {\n+        if (Constants.KEY_FIELD_NAME.equalsIgnoreCase(name)) {\n             columns.add(new KeyPropertyColumn<A>(new ResourceModel(name, name), name, name));\n-        } else if (\"token\".equalsIgnoreCase(name)) {\n+        } else if (Constants.DEFAULT_TOKEN_FIELD_NAME.equalsIgnoreCase(name)) {\n             columns.add(new TokenColumn<A>(new ResourceModel(name, name), name));\n         } else if (field != null\n                 && (field.getType().equals(Boolean.class) || field.getType().equals(boolean.class))) {"},{"sha":"8ea0cea90180b6764cf66a7fc848e10111eaf1a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":140,"deletions":149,"changes":289,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -31,11 +31,11 @@\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.status.AnyStatusModal;\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -70,193 +70,184 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_ANYOBJECT_PAGINATOR_ROWS;\n     }\n \n+    @Override\n+    public ActionsPanel<Serializable> getHeader(final String componentId) {\n+        final ActionsPanel<Serializable> panel = super.getHeader(componentId);\n+\n+        panel.add(new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                target.add(displayAttributeModal.setContent(new AnyObjectDisplayAttributesModalPanel<>(\n+                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n+                displayAttributeModal.addSubmitButton();\n+                displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n+                displayAttributeModal.show(true);\n+            }\n+\n+            @Override\n+            protected boolean statusCondition(final Serializable modelObject) {\n+                return wizardInModal;\n+            }\n+        }, ActionType.CHANGE_VIEW, AnyEntitlement.READ.getFor(type)).hideLabel();\n+        return panel;\n+    }\n+\n     @Override\n     protected List<IColumn<AnyObjectTO, String>> getColumns() {\n         final List<IColumn<AnyObjectTO, String>> columns = new ArrayList<>();\n+        final List<IColumn<AnyObjectTO, String>> prefcolumns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<AnyObjectTO>(\n+                new ResourceModel(Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME));\n \n         for (String name : prefMan.getList(\n                 getRequest(), String.format(Constants.PREF_ANY_OBJECT_DETAILS_VIEW, type))) {\n-\n-            addPropertyColumn(name, ReflectionUtils.findField(AnyObjectTO.class, name), columns);\n+            if (!Constants.KEY_FIELD_NAME.equalsIgnoreCase(name)) {\n+                addPropertyColumn(name, ReflectionUtils.findField(AnyObjectTO.class, name), prefcolumns);\n+            }\n         }\n \n         for (String name : prefMan.getList(\n                 getRequest(), String.format(Constants.PREF_ANY_OBJECT_PLAIN_ATTRS_VIEW, type))) {\n \n             if (pSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<AnyObjectTO>(name, SchemaType.PLAIN));\n+                prefcolumns.add(new AttrColumn<AnyObjectTO>(name, SchemaType.PLAIN));\n             }\n         }\n \n         for (String name : prefMan.getList(\n                 getRequest(), String.format(Constants.PREF_ANY_OBJECT_DER_ATTRS_VIEW, type))) {\n \n             if (dSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<AnyObjectTO>(name, SchemaType.DERIVED));\n+                prefcolumns.add(new AttrColumn<AnyObjectTO>(name, SchemaType.DERIVED));\n             }\n         }\n \n         // Add defaults in case of no selection\n-        if (columns.isEmpty()) {\n+        if (prefcolumns.isEmpty()) {\n             for (String name : AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                addPropertyColumn(name, ReflectionUtils.findField(AnyObjectTO.class, name), columns);\n+                addPropertyColumn(name, ReflectionUtils.findField(AnyObjectTO.class, name), prefcolumns);\n             }\n \n-            prefMan.setList(getRequest(), getResponse(),\n-                    String.format(Constants.PREF_ANY_OBJECT_DETAILS_VIEW, type),\n+            prefMan.setList(getRequest(), getResponse(), Constants.PREF_ANY_OBJECT_DETAILS_VIEW,\n                     Arrays.asList(AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION));\n         }\n \n-        columns.add(new ActionColumn<AnyObjectTO, String>(new ResourceModel(\"actions\")) {\n+        columns.addAll(prefcolumns);\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<AnyObjectTO> getActions(final IModel<AnyObjectTO> model) {\n+        final ActionsPanel<AnyObjectTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<AnyObjectTO>() {\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            public ActionLinksPanel<AnyObjectTO> getActions(final String componentId, final IModel<AnyObjectTO> model) {\n-                final ActionLinksPanel.Builder<AnyObjectTO> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<AnyObjectTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                        send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(\n-                                        new AnyWrapper<>(new AnyObjectRestClient().read(model.getObject().getKey())),\n-                                        target));\n-                    }\n-                }, ActionType.EDIT, AnyEntitlement.READ.getFor(type)).add(new ActionLink<AnyObjectTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                        final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(null);\n-                        send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n-                    }\n-\n-                    @Override\n-                    protected boolean statusCondition(final AnyObjectTO modelObject) {\n-                        return addAjaxLink.isVisibleInHierarchy();\n-                    }\n-                }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).add(new ActionLink<AnyObjectTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770646L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                        try {\n-                            restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                    ? e.getClass().getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionType.DELETE, AnyEntitlement.DELETE.getFor(type));\n-\n-                if (wizardInModal) {\n-                    panel.add(new ActionLink<AnyObjectTO>() {\n-\n-                        private static final long serialVersionUID = -7978723352517770645L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                            final IModel<AnyWrapper<AnyObjectTO>> formModel = new CompoundPropertyModel<>(\n-                                    new AnyWrapper<>(model.getObject()));\n-                            altDefaultModal.setFormModel(formModel);\n-\n-                            target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n-                                    altDefaultModal,\n-                                    pageRef,\n-                                    formModel.getObject().getInnerObject(),\n-                                    \"resourceName\",\n-                                    false)));\n-\n-                            altDefaultModal.header(new Model<>(\n-                                    getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                            altDefaultModal.show(true);\n-                        }\n-                    }, ActionType.MANAGE_RESOURCES, AnyEntitlement.READ.getFor(type)).add(\n-                            new ActionLink<AnyObjectTO>() {\n-\n-                        private static final long serialVersionUID = -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                            target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                                    utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n-\n-                            utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n-                            utilityModal.show(true);\n-                        }\n-                    }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<AnyObjectTO>() {\n-\n-                                private static final long serialVersionUID = -7978723352517770644L;\n-\n-                                @Override\n-                                public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                                    target.add(utilityModal.setContent(\n-                                            new NotificationTasks(AnyTypeKind.ANY_OBJECT, model.getObject().getKey(),\n-                                                    pageRef)));\n-                                    utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n-                                    utilityModal.show(true);\n-                                    target.add(utilityModal);\n-                                }\n-                            }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST);\n-                }\n+            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                new AnyWrapper<>(new AnyObjectRestClient().read(model.getObject().getKey())),\n+                                target));\n+            }\n+        }, ActionType.EDIT, AnyEntitlement.READ.getFor(type));\n+        panel.add(new ActionLink<AnyObjectTO>() {\n \n-                return panel.build(componentId, model.getObject());\n+            private static final long serialVersionUID = -7978723352517770645L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.NewItemActionEvent<>(new AnyWrapper<>(clone), target));\n             }\n \n             @Override\n-            public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<Serializable>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        target.add(displayAttributeModal.setContent(new AnyObjectDisplayAttributesModalPanel<>(\n-                                displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n-                        displayAttributeModal.addSubmitButton();\n-                        displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n-                        displayAttributeModal.show(true);\n-                    }\n-\n-                    @Override\n-                    protected boolean statusCondition(final Serializable modelObject) {\n-                        return wizardInModal;\n-                    }\n-                }, ActionType.CHANGE_VIEW, AnyEntitlement.READ.getFor(type)).add(\n-                        new ActionLink<Serializable>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionType.RELOAD, AnyEntitlement.SEARCH.getFor(type));\n-\n-                return panel.build(componentId);\n+            protected boolean statusCondition(final AnyObjectTO modelObject) {\n+                return addAjaxLink.isVisibleInHierarchy();\n             }\n+        }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type));\n+\n+        if (wizardInModal) {\n+            panel.add(new ActionLink<AnyObjectTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770645L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                    final IModel<AnyWrapper<AnyObjectTO>> formModel = new CompoundPropertyModel<>(\n+                            new AnyWrapper<>(model.getObject()));\n+                    altDefaultModal.setFormModel(formModel);\n+\n+                    target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n+                            altDefaultModal,\n+                            pageRef,\n+                            formModel.getObject().getInnerObject(),\n+                            \"resourceName\",\n+                            false)));\n+\n+                    altDefaultModal.header(new Model<>(\n+                            getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                    altDefaultModal.show(true);\n+                }\n+            }, ActionType.MANAGE_RESOURCES, AnyEntitlement.READ.getFor(type));\n+            panel.add(\n+                    new ActionLink<AnyObjectTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                    target.add(utilityModal.setContent(new AnyPropagationTasks(\n+                            utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n+\n+                    utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n+                    utilityModal.show(true);\n+                }\n+            }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST);\n+            panel.add(new ActionLink<AnyObjectTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                    target.add(utilityModal.setContent(\n+                            new NotificationTasks(AnyTypeKind.ANY_OBJECT, model.getObject().getKey(),\n+                                    pageRef)));\n+                    utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n+                    utilityModal.show(true);\n+                    target.add(utilityModal);\n+                }\n+            }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST);\n         }\n-        );\n \n-        return columns;\n+        panel.add(new ActionLink<AnyObjectTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770646L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionType.DELETE, AnyEntitlement.DELETE.getFor(type), true);\n \n+        return panel;\n     }\n \n     public static class Builder extends AnyDirectoryPanel.Builder<AnyObjectTO, AnyObjectRestClient> {"},{"sha":"6462d110d6b3732ca80df606e13b42e7e46606dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDisplayAttributesModalPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -35,7 +35,7 @@\n \n     private static final long serialVersionUID = 5194630813773543054L;\n \n-    public static final String[] DEFAULT_SELECTION = { \"key\", \"name\" };\n+    public static final String[] DEFAULT_SELECTION = { \"name\" };\n \n     public AnyObjectDisplayAttributesModalPanel(\n             final BaseModal<T> modal,"},{"sha":"0e489f3cf786c507544a2534ed8dc747d2c02725","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":29,"deletions":53,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -33,10 +33,9 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -153,67 +152,44 @@ public String getCssClass() {\n             }\n         }\n \n-        columns.add(new ActionColumn<AnyTypeClassTO, String>(new ResourceModel(\"actions\")) {\n-\n-            private static final long serialVersionUID = 906457126287899096L;\n-\n-            @Override\n-            public ActionLinksPanel<AnyTypeClassTO> getActions(\n-                    final String componentId, final IModel<AnyTypeClassTO> model) {\n+        return columns;\n+    }\n \n-                ActionLinksPanel<AnyTypeClassTO> panel = ActionLinksPanel.<AnyTypeClassTO>builder().\n-                        add(new ActionLink<AnyTypeClassTO>() {\n+    @Override\n+    public ActionsPanel<AnyTypeClassTO> getActions(final IModel<AnyTypeClassTO> model) {\n+        final ActionsPanel<AnyTypeClassTO> panel = super.getActions(model);\n \n-                            private static final long serialVersionUID = -3722207913631435501L;\n+        panel.add(new ActionLink<AnyTypeClassTO>() {\n \n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n-                                send(AnyTypeClassesPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPECLASS_UPDATE).\n-                        add(new ActionLink<AnyTypeClassTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n-                                try {\n-                                    restClient.delete(model.getObject().getKey());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (Exception e) {\n-                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE).\n-                        build(componentId);\n-\n-                return panel;\n-            }\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<AnyTypeClassTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AnyTypeClassTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n+                send(AnyTypeClassesPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPECLASS_UPDATE);\n \n-                return panel.add(new ActionLink<AnyTypeClassTO>() {\n+        panel.add(new ActionLink<AnyTypeClassTO>() {\n \n-                    private static final long serialVersionUID = -1140254463922516111L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AnyTypeClassTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPECLASS_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected final class AnyTypeClassProvider extends DirectoryDataProvider<AnyTypeClassTO> {"},{"sha":"f08d13e4300fa5fb8a6d8f4041f1bed5e47e022c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":32,"deletions":58,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -32,12 +32,10 @@\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.AnyTypesPanel.AnyTypeProvider;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -53,7 +51,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public class AnyTypesPanel extends TypesDirectoryPanel<AnyTypeTO, AnyTypeProvider, AnyTypeRestClient> {\n+public class AnyTypesPanel extends TypesDirectoryPanel<AnyTypeTO, AnyTypesPanel.AnyTypeProvider, AnyTypeRestClient> {\n \n     private static final long serialVersionUID = 3905038169553185171L;\n \n@@ -152,69 +150,45 @@ public String getCssClass() {\n             }\n         }\n \n-        columns.add(new ActionColumn<AnyTypeTO, String>(new ResourceModel(\"actions\")) {\n-\n-            private static final long serialVersionUID = 906457126287899096L;\n-\n-            @Override\n-            public ActionLinksPanel<AnyTypeTO> getActions(\n-                    final String componentId, final IModel<AnyTypeTO> model) {\n-\n-                ActionLinksPanel<AnyTypeTO> panel = ActionLinksPanel.<AnyTypeTO>builder().\n-                        add(new ActionLink<AnyTypeTO>() {\n+        return columns;\n+    }\n \n-                            private static final long serialVersionUID = -3722207913631435501L;\n+    @Override\n+    public ActionsPanel<AnyTypeTO> getActions(final IModel<AnyTypeTO> model) {\n+        final ActionsPanel<AnyTypeTO> panel = super.getActions(model);\n \n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n-                                send(AnyTypesPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPE_UPDATE).\n-                        add(new ActionLink<AnyTypeTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n-                                try {\n-                                    restClient.delete(model.getObject().getKey());\n-                                    SyncopeConsoleSession.get().refreshAuth();\n-\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (Exception e) {\n-                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPE_DELETE).\n-                        build(componentId);\n+        panel.add(new ActionLink<AnyTypeTO>() {\n \n-                return panel;\n-            }\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<AnyTypeTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AnyTypeTO> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<AnyTypeTO>() {\n+            public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n+                send(AnyTypesPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.ANYTYPE_UPDATE);\n+        panel.add(new ActionLink<AnyTypeTO>() {\n \n-                    private static final long serialVersionUID = -1140254463922516111L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AnyTypeTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().refreshAuth();\n+\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.ANYTYPE_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected final class AnyTypeProvider extends DirectoryDataProvider<AnyTypeTO> {"},{"sha":"ec92a2e9e3ad1ddac2ff846e58164b4137a6a7e0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":62,"deletions":7,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -30,7 +30,10 @@\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n@@ -40,6 +43,8 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -71,7 +76,7 @@\n \n     /**\n      * Specify if results are about a filtered search or not. Using this attribute it is possible to use this panel to\n-     * show results about user list and user search.\n+     * show results about entity list and search.\n      */\n     protected final boolean filtered;\n \n@@ -85,7 +90,7 @@\n     private AjaxDataTablePanel<T, String> resultTable;\n \n     /**\n-     * Data provider used to search for users.\n+     * Data provider used to search for entities.\n      */\n     protected DP dataProvider;\n \n@@ -94,12 +99,14 @@\n      */\n     protected final BasePage page;\n \n-    protected String itemKeyFieldName = \"key\";\n+    protected String itemKeyFieldName = Constants.KEY_FIELD_NAME;\n \n     protected final BaseModal<W> altDefaultModal = new BaseModal<>(\"outer\");\n \n     protected final BaseModal<W> displayAttributeModal = new BaseModal<>(\"outer\");\n \n+    private final ActionLinksTogglePanel<T> actionTogglePanel;\n+\n     /**\n      * Create simple unfiltered search result panel.\n      * Use the available builder for powerfull configuration options.\n@@ -132,6 +139,9 @@ protected DirectoryPanel(final String id, final Builder<T, W, E> builder, final\n         super(id, wizardInModal);\n         setOutputMarkupId(true);\n \n+        actionTogglePanel = new ActionLinksTogglePanel<T>(\"outer\", builder.getPageRef());\n+        addOuterObject(actionTogglePanel);\n+\n         addOuterObject(altDefaultModal);\n         addOuterObject(displayAttributeModal);\n \n@@ -144,7 +154,7 @@ protected DirectoryPanel(final String id, final Builder<T, W, E> builder, final\n \n         this.restClient = builder.restClient;\n \n-        // Container for user search result\n+        // Container for entity search result\n         container = new WebMarkupContainer(\"searchContainer\");\n         container.setOutputMarkupId(true);\n         addInnerObject(container);\n@@ -217,6 +227,29 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         });\n         paginatorForm.add(rowsChooser);\n         // ---------------------------\n+\n+        // ---------------------------\n+        // Table handling\n+        // ---------------------------\n+        container.add(getHeader(\"tablehandling\"));\n+        // ---------------------------\n+    }\n+\n+    protected ActionsPanel<Serializable> getHeader(final String componentId) {\n+        final ActionsPanel<Serializable> panel = new ActionsPanel<>(componentId, null);\n+\n+        panel.add(new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                if (target != null) {\n+                    target.add(container);\n+                }\n+            }\n+        }, ActionLink.ActionType.RELOAD, StandardEntitlement.USER_SEARCH).hideLabel();\n+        return panel;\n     }\n \n     public void search(final AjaxRequestTarget target) {\n@@ -241,8 +274,22 @@ private void updateResultTable(final boolean create, final int rows) {\n                 ? (create ? (int) resultTable.getPageCount() - 1 : (int) resultTable.getCurrentPage()) : 0;\n \n         // take care of restClient handle: maybe not useful to keep into\n-        AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<>(\n-                dataProvider, page.getPageReference()).\n+        AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<T, String>(\n+                dataProvider, page.getPageReference()) {\n+\n+            private static final long serialVersionUID = 2205322679547329123L;\n+\n+            @Override\n+            protected ActionsPanel<T> getActions(final IModel<T> model) {\n+                return DirectoryPanel.this.getActions(model);\n+            }\n+\n+            @Override\n+            protected ActionLinksTogglePanel<T> getTogglePanel() {\n+                return DirectoryPanel.this.getTogglePanel();\n+            }\n+\n+        }.\n                 setColumns(getColumns()).\n                 setRowsPerPage(rows).\n                 setBulkActions(getBulkActions(), restClient, itemKeyFieldName).\n@@ -299,6 +346,14 @@ protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n         send(getParent(), Broadcast.BREADTH, data);\n     }\n \n+    protected ActionsPanel<T> getActions(final IModel<T> model) {\n+        return model == null ? new ActionsPanel<>(\"actions\", new Model<T>()) : new ActionsPanel<>(\"actions\", model);\n+    }\n+\n+    protected ActionLinksTogglePanel<T> getTogglePanel() {\n+        return actionTogglePanel;\n+    }\n+\n     public static class EventDataWrapper {\n \n         private AjaxRequestTarget target;\n@@ -341,7 +396,7 @@ public void setRows(final int rows) {\n \n         /**\n          * Specify if results are about a filtered search or not.\n-         * By using this attribute it is possible to force this panel to show results about user list and user search.\n+         * By using this attribute it is possible to force this panel to show results about entity list and search.\n          */\n         protected boolean filtered = false;\n "},{"sha":"04ec300822e7abea53469dad2475327b2d5ce743","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":172,"deletions":161,"changes":333,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -36,12 +36,12 @@\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.status.AnyStatusModal;\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -182,224 +182,235 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_GROUP_PAGINATOR_ROWS;\n     }\n \n+    @Override\n+    public ActionsPanel<Serializable> getHeader(final String componentId) {\n+        final ActionsPanel<Serializable> panel = super.getHeader(componentId);\n+\n+        panel.add(new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                target.add(displayAttributeModal.setContent(new GroupDisplayAttributesModalPanel<>(\n+                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n+                displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n+                displayAttributeModal.show(true);\n+            }\n+        }, ActionType.CHANGE_VIEW, StandardEntitlement.GROUP_READ).hideLabel();\n+        return panel;\n+    }\n+\n     @Override\n     protected List<IColumn<GroupTO, String>> getColumns() {\n+\n         final List<IColumn<GroupTO, String>> columns = new ArrayList<>();\n+        final List<IColumn<GroupTO, String>> prefcolumns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<GroupTO>(\n+                new ResourceModel(Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME));\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DETAILS_VIEW)) {\n-            addPropertyColumn(name, ReflectionUtils.findField(GroupTO.class, name), columns);\n+            if (!Constants.KEY_FIELD_NAME.equalsIgnoreCase(name)) {\n+                addPropertyColumn(name, ReflectionUtils.findField(GroupTO.class, name), prefcolumns);\n+            }\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_PLAIN_ATTRS_VIEW)) {\n             if (pSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<GroupTO>(name, SchemaType.PLAIN));\n+                prefcolumns.add(new AttrColumn<GroupTO>(name, SchemaType.PLAIN));\n             }\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DER_ATTRS_VIEW)) {\n             if (dSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<GroupTO>(name, SchemaType.DERIVED));\n+                prefcolumns.add(new AttrColumn<GroupTO>(name, SchemaType.DERIVED));\n             }\n         }\n \n         // Add defaults in case of no selection\n-        if (columns.isEmpty()) {\n+        if (prefcolumns.isEmpty()) {\n             for (String name : GroupDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                addPropertyColumn(name, ReflectionUtils.findField(GroupTO.class, name), columns);\n+                addPropertyColumn(name, ReflectionUtils.findField(GroupTO.class, name), prefcolumns);\n             }\n \n             prefMan.setList(getRequest(), getResponse(), Constants.PREF_GROUP_DETAILS_VIEW,\n                     Arrays.asList(GroupDisplayAttributesModalPanel.DEFAULT_SELECTION));\n         }\n \n-        columns.add(new ActionColumn<GroupTO, String>(new ResourceModel(\"actions\")) {\n+        columns.addAll(prefcolumns);\n+        return columns;\n+    }\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+    @Override\n+    public ActionsPanel<GroupTO> getActions(final IModel<GroupTO> model) {\n+        final ActionsPanel<GroupTO> panel = super.getActions(model);\n \n-            @Override\n-            public ActionLinksPanel<GroupTO> getActions(final String componentId, final IModel<GroupTO> model) {\n-                final ActionLinksPanel.Builder<GroupTO> panel = ActionLinksPanel.builder();\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                panel.add(new ActionLink<GroupTO>() {\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    private static final long serialVersionUID = -7978723352517770645L;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                send(GroupDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(new GroupWrapper(\n+                                restClient.read(model.getObject().getKey())), target));\n+            }\n+        }, ActionType.EDIT, StandardEntitlement.GROUP_READ);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        templates.setTargetObject(model.getObject());\n-                        templates.toggle(target, true);\n-                    }\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                    @Override\n-                    public boolean isIndicatorEnabled() {\n-                        return false;\n-                    }\n-                }, ActionType.MEMBERS, StandardEntitlement.GROUP_READ).add(new ActionLink<GroupTO>() {\n+            private static final long serialVersionUID = 6242834621660352855L;\n \n-                    private static final long serialVersionUID = -7978723352517770645L;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                GroupTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                send(GroupDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n+            }\n+        }, ActionType.CLONE, StandardEntitlement.GROUP_CREATE);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        IModel<AnyWrapper<GroupTO>> formModel = new CompoundPropertyModel<>(\n-                                new AnyWrapper<>(model.getObject()));\n-                        altDefaultModal.setFormModel(formModel);\n-\n-                        target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n-                                altDefaultModal,\n-                                pageRef,\n-                                formModel.getObject().getInnerObject(),\n-                                \"resourceName\",\n-                                false)));\n-\n-                        altDefaultModal.header(new Model<>(\n-                                getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                        altDefaultModal.show(true);\n-                    }\n-                }, ActionType.MANAGE_RESOURCES, StandardEntitlement.GROUP_READ).add(new ActionLink<GroupTO>() {\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = 6242834621660352855L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(new GroupWrapper(\n-                                        restClient.read(model.getObject().getKey())), target));\n-                    }\n-                }, ActionType.EDIT, StandardEntitlement.GROUP_READ).add(new ActionLink<GroupTO>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                target.add(typeExtensionsModal.setContent(new TypeExtensionDirectoryPanel(\n+                        typeExtensionsModal, model.getObject(), pageRef)));\n+                typeExtensionsModal.header(new StringResourceModel(\"typeExtensions\", model));\n+                typeExtensionsModal.show(true);\n+            }\n+        }, ActionType.TYPE_EXTENSIONS, StandardEntitlement.GROUP_UPDATE);\n \n-                    private static final long serialVersionUID = 6242834621660352855L;\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        target.add(typeExtensionsModal.setContent(new TypeExtensionDirectoryPanel(\n-                                typeExtensionsModal, model.getObject(), pageRef)));\n-                        typeExtensionsModal.header(new StringResourceModel(\"typeExtensions\", model));\n-                        typeExtensionsModal.show(true);\n-                    }\n-                }, ActionType.TYPE_EXTENSIONS, StandardEntitlement.GROUP_UPDATE).add(new ActionLink<GroupTO>() {\n+            private static final long serialVersionUID = -7978723352517770645L;\n \n-                    private static final long serialVersionUID = 6242834621660352855L;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                templates.setTargetObject(model.getObject());\n+                templates.toggle(target, true);\n+            }\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        GroupTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(null);\n-                        send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n-                    }\n-                }, ActionType.CLONE, StandardEntitlement.GROUP_CREATE).add(new ActionLink<GroupTO>() {\n+            @Override\n+            public boolean isIndicatorEnabled() {\n+                return false;\n+            }\n+        }, ActionType.MEMBERS, StandardEntitlement.GROUP_READ);\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                                utilityModal, AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n-                        utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n-                        utilityModal.show(true);\n-                    }\n-                }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<GroupTO>() {\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                try {\n+                    restClient.bulkMembersAction(model.getObject().getKey(), BulkMembersActionType.PROVISION);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionType.PROVISION_MEMBERS,\n+                String.format(\"%s,%s\", StandardEntitlement.TASK_CREATE, StandardEntitlement.TASK_EXECUTE));\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        target.add(utilityModal.setContent(\n-                                new NotificationTasks(AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n-                        utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n-                        utilityModal.show(true);\n-                    }\n-                }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<GroupTO>() {\n+        panel.add(\n+                new ActionLink<GroupTO>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        try {\n-                            restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                    ? e.getClass().getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionType.DELETE, StandardEntitlement.GROUP_DELETE).add(new ActionLink<GroupTO>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                try {\n+                    restClient.bulkMembersAction(model.getObject().getKey(), BulkMembersActionType.DEPROVISION);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionType.DEPROVISION_MEMBERS,\n+                String.format(\"%s,%s\", StandardEntitlement.TASK_CREATE, StandardEntitlement.TASK_EXECUTE));\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        try {\n-                            restClient.bulkMembersAction(model.getObject().getKey(), BulkMembersActionType.PROVISION);\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                    ? e.getClass().getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionType.PROVISION_MEMBERS,\n-                        String.format(\"%s,%s\", StandardEntitlement.TASK_CREATE, StandardEntitlement.TASK_EXECUTE)).add(\n-                        new ActionLink<GroupTO>() {\n+            private static final long serialVersionUID = -7978723352517770645L;\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                IModel<AnyWrapper<GroupTO>> formModel = new CompoundPropertyModel<>(\n+                        new AnyWrapper<>(model.getObject()));\n+                altDefaultModal.setFormModel(formModel);\n+\n+                target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n+                        altDefaultModal,\n+                        pageRef,\n+                        formModel.getObject().getInnerObject(),\n+                        \"resourceName\",\n+                        false)));\n+\n+                altDefaultModal.header(new Model<>(\n+                        getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                altDefaultModal.show(true);\n+            }\n+        }, ActionType.MANAGE_RESOURCES, StandardEntitlement.GROUP_READ);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                        try {\n-                            restClient.bulkMembersAction(model.getObject().getKey(), BulkMembersActionType.DEPROVISION);\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While provisioning members of group {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                    ? e.getClass().getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionType.DEPROVISION_MEMBERS,\n-                        String.format(\"%s,%s\", StandardEntitlement.TASK_CREATE, StandardEntitlement.TASK_EXECUTE));\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                return panel.build(componentId);\n-            }\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                target.add(utilityModal.setContent(new AnyPropagationTasks(\n+                        utilityModal, AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n+                utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n+                utilityModal.show(true);\n+            }\n+        }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST);\n \n-                return panel.add(new ActionLink<Serializable>() {\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        target.add(displayAttributeModal.setContent(new GroupDisplayAttributesModalPanel<>(\n-                                displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n-                        displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n-                        displayAttributeModal.show(true);\n-                    }\n-                }, ActionType.CHANGE_VIEW, StandardEntitlement.GROUP_READ).add(\n-                        new ActionLink<Serializable>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                target.add(utilityModal.setContent(\n+                        new NotificationTasks(AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n+                utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n+                utilityModal.show(true);\n+            }\n+        }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST);\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+        panel.add(new ActionLink<GroupTO>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionType.RELOAD).build(componentId);\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionType.DELETE, StandardEntitlement.GROUP_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     public static class Builder extends AnyDirectoryPanel.Builder<GroupTO, GroupRestClient> {"},{"sha":"89d8dc94a75c616bc7d9ee456d419595afd46dcb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDisplayAttributesModalPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -35,7 +35,7 @@\n \n     private static final long serialVersionUID = 5194630813773543054L;\n \n-    public static final String[] DEFAULT_SELECTION = { \"key\", \"name\" };\n+    public static final String[] DEFAULT_SELECTION = { \"name\" };\n \n     public GroupDisplayAttributesModalPanel(\n             final BaseModal<T> modal,"},{"sha":"16c4b7793cc096f4c12a50702f544657b3532705","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":23,"deletions":6,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -31,7 +31,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.wicket.Component;\n@@ -97,7 +97,7 @@ private ListViewPanel(\n             final List<T> list,\n             final Class<T> reference,\n             final List<String> includes,\n-            final ActionLinksPanel.Builder<T> actions,\n+            final ActionsPanel<T> actions,\n             final CheckAvailability check,\n             final boolean reuseItem,\n             final boolean wizardInModal,\n@@ -179,7 +179,7 @@ protected void populateItem(final ListItem<String> fieldItem) {\n                     }\n                 };\n                 beanItem.add(fields);\n-                beanItem.add(actions.build(\"actions\", bean));\n+                beanItem.add(actions.clone(\"actions\", new Model<>(bean)));\n             }\n         };\n         beans.setOutputMarkupId(true);\n@@ -227,7 +227,7 @@ public void setCheckAvailability(final CheckAvailability check) {\n \n         private final List<String> includes = new ArrayList<>();\n \n-        private final ActionLinksPanel.Builder<T> actions;\n+        private final ActionsPanel<T> actions;\n \n         private List<T> items;\n \n@@ -241,7 +241,7 @@ public Builder(final Class<T> reference, final PageReference pageRef) {\n             super(pageRef);\n             this.reference = reference;\n             this.items = null;\n-            this.actions = ActionLinksPanel.<T>builder();\n+            this.actions = new ActionsPanel<T>(\"actions\", null);\n         }\n \n         public Builder<T> setModel(final IModel<? extends Collection<T>> model) {\n@@ -313,7 +313,24 @@ public Builder<T> includes(final String... includes) {\n          */\n         public Builder<T> addAction(\n                 final ActionLink<T> link, final ActionLink.ActionType type, final String entitlements) {\n-            actions.add(link, type, entitlements);\n+            return addAction(link, type, entitlements, false);\n+        }\n+\n+        /**\n+         * Add item action (the given order is ignored.\n+         *\n+         * @param link action link.\n+         * @param type action type.\n+         * @param entitlements entitlements.\n+         * @param onConfirm specify TRUE to ask for confirmation.\n+         * @return current builder object.\n+         */\n+        public Builder<T> addAction(\n+                final ActionLink<T> link,\n+                final ActionLink.ActionType type,\n+                final String entitlements,\n+                final boolean onConfirm) {\n+            actions.add(link, type, entitlements, onConfirm).hideLabel();\n             return this;\n         }\n "},{"sha":"cfac24985d125db6226ad5fa9ae724eefb966022","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"renamed","additions":42,"deletions":64,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -30,13 +30,11 @@\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.ParametersPanel.ParametersProvider;\n import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -54,7 +52,8 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class ParametersPanel extends DirectoryPanel<AttrTO, AttrTO, ParametersProvider, ConfRestClient> {\n+public class ParametersDirectoryPanel\n+        extends DirectoryPanel<AttrTO, AttrTO, ParametersDirectoryPanel.ParametersProvider, ConfRestClient> {\n \n     private static final long serialVersionUID = 2765863608539154422L;\n \n@@ -71,7 +70,7 @@ protected void onConfigure() {\n         }\n     };\n \n-    public ParametersPanel(final String id, final PageReference pageRef) {\n+    public ParametersDirectoryPanel(final String id, final PageReference pageRef) {\n         super(id, new Builder<AttrTO, AttrTO, ConfRestClient>(new ConfRestClient(), pageRef) {\n \n             private static final long serialVersionUID = 8769126634538601689L;\n@@ -82,6 +81,9 @@ protected WizardMgtPanel<AttrTO> newInstance(final String id, final boolean wiza\n             }\n         });\n \n+        itemKeyFieldName = \"schema\";\n+        disableCheckBoxes();\n+\n         modalDetails.setWindowClosedCallback(new WindowClosedCallback() {\n \n             private static final long serialVersionUID = 8804221891699487139L;\n@@ -110,7 +112,7 @@ public WizardModalPanel<AttrTO> build(final String id, final int index, final Aj\n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.CONFIGURATION_SET);\n     }\n \n-    public ParametersPanel(final String id, final Builder<AttrTO, AttrTO, ConfRestClient> builder) {\n+    public ParametersDirectoryPanel(final String id, final Builder<AttrTO, AttrTO, ConfRestClient> builder) {\n         super(id, builder);\n     }\n \n@@ -126,80 +128,56 @@ protected String paginatorRowsKey() {\n \n     @Override\n     protected Collection<ActionLink.ActionType> getBulkActions() {\n-        return Collections.<ActionLink.ActionType>emptyList();\n+        return Collections.<ActionLink.ActionType>singletonList(ActionLink.ActionType.DELETE);\n     }\n \n     @Override\n     protected List<IColumn<AttrTO, String>> getColumns() {\n         final List<IColumn<AttrTO, String>> columns = new ArrayList<>();\n-\n-        columns.add(new PropertyColumn<AttrTO, String>(new ResourceModel(\"schema\"), \"schema\", \"schema\"));\n+        columns.add(new PropertyColumn<AttrTO, String>(new ResourceModel(\"schema\"), \"schema\"));\n         columns.add(new PropertyColumn<AttrTO, String>(new ResourceModel(\"values\"), \"values\"));\n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<AttrTO, String>(new ResourceModel(\"actions\")) {\n+    @Override\n+    public ActionsPanel<AttrTO> getActions(final IModel<AttrTO> model) {\n+        final ActionsPanel<AttrTO> panel = super.getActions(model);\n \n-            private static final long serialVersionUID = 906457126287899096L;\n+        panel.add(new ActionLink<AttrTO>() {\n \n-            @Override\n-            public ActionLinksPanel<AttrTO> getActions(final String componentId, final IModel<AttrTO> model) {\n-                ActionLinksPanel<AttrTO> panel = ActionLinksPanel.<AttrTO>builder().\n-                        add(new ActionLink<AttrTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n-                                target.add(modalDetails);\n-                                modalDetails.addSubmitButton();\n-                                modalDetails.header(new StringResourceModel(\"any.edit\"));\n-                                modalDetails.setContent(\n-                                        new ParametersEditModalPanel(modalDetails, model.getObject(), pageRef));\n-                                modalDetails.show(true);\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.CONFIGURATION_SET).\n-                        add(new ActionLink<AttrTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n-                                try {\n-                                    restClient.delete(model.getObject().getSchema());\n-                                    schemaRestClient.deletePlainSchema(model.getObject().getSchema());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (Exception e) {\n-                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.CONFIGURATION_DELETE).\n-                        build(componentId);\n-\n-                return panel;\n-            }\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<AttrTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AttrTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n+                target.add(modalDetails);\n+                modalDetails.addSubmitButton();\n+                modalDetails.header(new StringResourceModel(\"any.edit\"));\n+                modalDetails.setContent(new ParametersEditModalPanel(modalDetails, model.getObject(), pageRef));\n+                modalDetails.show(true);\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.CONFIGURATION_SET);\n \n-                return panel.add(new ActionLink<AttrTO>() {\n+        panel.add(new ActionLink<AttrTO>() {\n \n-                    private static final long serialVersionUID = -1140254463922516111L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AttrTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getSchema());\n+                    schemaRestClient.deletePlainSchema(model.getObject().getSchema());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.CONFIGURATION_DELETE);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected final class ParametersProvider extends DirectoryDataProvider<AttrTO> {","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersPanel.java"},{"sha":"30c3b21144709ad84f061a9b3add4d041afc8340","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":51,"deletions":48,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -42,7 +42,7 @@\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.ConnObjectPanel;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -86,8 +86,8 @@ public Realm(final String id, final RealmTO realmTO, final PageReference pageRef\n \n         setPageRef(pageRef);\n \n-        AjaxBootstrapTabbedPanel<ITab> tabbedPanel =\n-                new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel\n+                = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n         tabbedPanel.setSelectedTab(selectedIndex);\n         addInnerObject(tabbedPanel);\n         this.wizardBuilder = new RealmWizardBuilder(pageRef);\n@@ -112,54 +112,57 @@ private List<ITab> buildTabList(final PageReference pageRef) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                ActionLinksPanel<RealmTO> actionLinksPanel = ActionLinksPanel.<RealmTO>builder().\n-                        add(new ActionLink<RealmTO>(realmTO) {\n-\n-                            private static final long serialVersionUID = 2802988981431379827L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n-                                onClickTemplate(target);\n-                            }\n-                        }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.REALM_UPDATE).\n-                        add(new ActionLink<RealmTO>(realmTO) {\n-\n-                            private static final long serialVersionUID = 2802988981431379827L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n-                                onClickCreate(target);\n-                            }\n-                        }, ActionLink.ActionType.CREATE, StandardEntitlement.REALM_CREATE).\n-                        add(new ActionLink<RealmTO>(realmTO) {\n-\n-                            private static final long serialVersionUID = 2802988981431379828L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n-                                onClickEdit(target, realmTO);\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.REALM_UPDATE).\n-                        add(new ActionLink<RealmTO>(realmTO) {\n-\n-                            private static final long serialVersionUID = 2802988981431379829L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n-                                onClickDelete(target, realmTO);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.REALM_DELETE).\n-                        build(\"actions\");\n-\n-                RealmDetails panel = new RealmDetails(panelId, realmTO, actionLinksPanel, false);\n+                final ActionsPanel<RealmTO> actionPanel = new ActionsPanel<>(\"actions\", null);\n+\n+                actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+\n+                    private static final long serialVersionUID = 2802988981431379827L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n+                        onClickCreate(target);\n+                    }\n+                }, ActionLink.ActionType.CREATE, StandardEntitlement.REALM_CREATE).hideLabel();\n+\n+                actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+\n+                    private static final long serialVersionUID = 2802988981431379828L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n+                        onClickEdit(target, realmTO);\n+                    }\n+                }, ActionLink.ActionType.EDIT, StandardEntitlement.REALM_UPDATE).hideLabel();\n+\n+                actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+\n+                    private static final long serialVersionUID = 2802988981431379827L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n+                        onClickTemplate(target);\n+                    }\n+                }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.REALM_UPDATE).hideLabel();\n+\n+                actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+\n+                    private static final long serialVersionUID = 2802988981431379829L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n+                        onClickDelete(target, realmTO);\n+                    }\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.REALM_DELETE, true).hideLabel();\n+\n+                RealmDetails panel = new RealmDetails(panelId, realmTO, actionPanel, false);\n                 panel.setContentEnabled(false);\n-                actionLinksPanel.setEnabled(true);\n+                actionPanel.setEnabled(true);\n                 return panel;\n             }\n         });\n \n-        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo =\n-                FormLayoutInfoUtils.fetch(anyTypeTOs);\n+        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo\n+                = FormLayoutInfoUtils.fetch(anyTypeTOs);\n \n         Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n@@ -204,8 +207,8 @@ protected Panel customResultBody(final String panelId, final RealmTO item, final\n         propagations.add(syncope);\n         propagations.addAll(((ProvisioningResult) result).getPropagationStatuses());\n \n-        ListViewPanel.Builder<PropagationStatus> builder =\n-                new ListViewPanel.Builder<PropagationStatus>(PropagationStatus.class, pageRef) {\n+        ListViewPanel.Builder<PropagationStatus> builder = new ListViewPanel.Builder<PropagationStatus>(\n+                PropagationStatus.class, pageRef) {\n \n             private static final long serialVersionUID = -6809736686861678498L;\n "},{"sha":"4f48c3c9a2e8eec199b245f447ccb43fdd6bc925","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -105,7 +105,7 @@ public RealmDetails(final String id, final RealmTO realmTO) {\n     public RealmDetails(\n             final String id,\n             final RealmTO realmTO,\n-            final ActionLinksPanel<?> actions,\n+            final ActionsPanel<?> actions,\n             final boolean unwrapped) {\n \n         super(id);"},{"sha":"a83c440a496b8acd43940bd2199f2f099033ec66","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"modified","additions":29,"deletions":54,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,10 +34,9 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.RelationshipTypesPanel.RelationshipTypeProvider;\n import org.apache.syncope.client.console.rest.RelationshipTypeRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n@@ -156,67 +155,43 @@ public String getCssClass() {\n             }\n         }\n \n-        columns.add(new ActionColumn<RelationshipTypeTO, String>(new ResourceModel(\"actions\")) {\n-\n-            private static final long serialVersionUID = 906457126287899096L;\n-\n-            @Override\n-            public ActionLinksPanel<RelationshipTypeTO> getActions(\n-                    final String componentId, final IModel<RelationshipTypeTO> model) {\n-\n-                ActionLinksPanel<RelationshipTypeTO> panel = ActionLinksPanel.<RelationshipTypeTO>builder().\n-                        add(new ActionLink<RelationshipTypeTO>() {\n+        return columns;\n+    }\n \n-                            private static final long serialVersionUID = -3722207913631435501L;\n+    @Override\n+    public ActionsPanel<RelationshipTypeTO> getActions(final IModel<RelationshipTypeTO> model) {\n+        final ActionsPanel<RelationshipTypeTO> panel = super.getActions(model);\n \n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n-                                send(RelationshipTypesPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.RELATIONSHIPTYPE_UPDATE).\n-                        add(new ActionLink<RelationshipTypeTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n-                                try {\n-                                    restClient.delete(model.getObject().getKey());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (Exception e) {\n-                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.RELATIONSHIPTYPE_DELETE).\n-                        build(componentId);\n+        panel.add(new ActionLink<RelationshipTypeTO>() {\n \n-                return panel;\n-            }\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<RelationshipTypeTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<RelationshipTypeTO> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<RelationshipTypeTO>() {\n+            public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n+                send(RelationshipTypesPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.RELATIONSHIPTYPE_UPDATE);\n+        panel.add(new ActionLink<RelationshipTypeTO>() {\n \n-                    private static final long serialVersionUID = -1140254463922516111L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final RelationshipTypeTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.RELATIONSHIPTYPE_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected final class RelationshipTypeProvider extends DirectoryDataProvider<RelationshipTypeTO> {"},{"sha":"d911887dbdaf4ea1d37bfaa1daef64b3faf7a794","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":113,"deletions":131,"changes":244,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -38,11 +38,9 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.JsonEditorPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -82,6 +80,7 @@ protected RoleDirectoryPanel(final String id, final Builder builder) {\n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, StandardEntitlement.ROLE_CREATE);\n         setReadOnly(!SyncopeConsoleSession.get().owns(StandardEntitlement.ROLE_UPDATE));\n \n+        disableCheckBoxes();\n         setShowResultPage(true);\n \n         modal.size(Modal.Size.Large);\n@@ -117,166 +116,149 @@ protected List<IColumn<RoleTO, String>> getColumns() {\n         columns.add(new PropertyColumn<RoleTO, String>(\n                 new ResourceModel(\"realms\"), null, \"realms\"));\n \n-        columns.add(new ActionColumn<RoleTO, String>(new ResourceModel(\"actions\")) {\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<RoleTO> getActions(final IModel<RoleTO> model) {\n+        final ActionsPanel<RoleTO> panel = super.getActions(model);\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+        panel.add(new ActionLink<RoleTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            public ActionLinksPanel<RoleTO> getActions(final String componentId, final IModel<RoleTO> model) {\n-                final ActionLinksPanel.Builder<RoleTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                send(RoleDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                new RoleWrapper(new RoleRestClient().read(model.getObject().getKey())),\n+                                target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.ROLE_READ);\n \n-                panel.add(new ActionLink<RoleTO>() {\n+        panel.add(new ActionLink<RoleTO>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                        final String query = SyncopeClient.getUserSearchConditionBuilder().and(\n-                                SyncopeClient.getUserSearchConditionBuilder().inRoles(model.getObject().getKey()),\n-                                SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue()).query();\n-\n-                        final AnyTypeRestClient typeRestClient = new AnyTypeRestClient();\n-                        final AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n-\n-                        final AnyTypeTO anyTypeTO = typeRestClient.read(AnyTypeKind.USER.name());\n-\n-                        ModalPanel panel = new AnyPanel(BaseModal.CONTENT_ID, anyTypeTO, null, null, false, pageRef) {\n-\n-                            private static final long serialVersionUID = -7514498203393023415L;\n-\n-                            @Override\n-                            protected Panel getDirectoryPanel(final String id) {\n-                                final Panel panel = new UserDirectoryPanel.Builder(\n-                                        classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n-                                        setRealm(\"/\").\n-                                        setFiltered(true).\n-                                        setFiql(query).\n-                                        disableCheckBoxes().\n-                                        addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n-                                                new UserTO(),\n-                                                anyTypeTO.getClasses(),\n-                                                FormLayoutInfoUtils.fetch(typeRestClient.list()).getLeft(),\n-                                                pageRef), false).\n-                                        setWizardInModal(false).build(id);\n-\n-                                MetaDataRoleAuthorizationStrategy.authorize(\n-                                        panel,\n-                                        WebPage.RENDER,\n-                                        StandardEntitlement.USER_SEARCH);\n-\n-                                return panel;\n-                            }\n-                        };\n-\n-                        membersModal.header(new StringResourceModel(\"role.members\", RoleDirectoryPanel.this, model));\n-                        membersModal.setContent(panel);\n-                        membersModal.show(true);\n-                        target.add(membersModal);\n-                    }\n-                }, ActionLink.ActionType.MEMBERS, StandardEntitlement.USER_SEARCH).add(new ActionLink<RoleTO>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                final RoleTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                send(RoleDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.NewItemActionEvent<>(new RoleWrapper(clone), target));\n+            }\n+        }, ActionLink.ActionType.CLONE, StandardEntitlement.ROLE_CREATE);\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+        panel.add(new ActionLink<RoleTO>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                        send(RoleDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(\n-                                        new RoleWrapper(new RoleRestClient().read(model.getObject().getKey())),\n-                                        target));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.ROLE_READ).add(new ActionLink<RoleTO>() {\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                final String query = SyncopeClient.getUserSearchConditionBuilder().and(\n+                        SyncopeClient.getUserSearchConditionBuilder().inRoles(model.getObject().getKey()),\n+                        SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue()).query();\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                        final RoleTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(null);\n-                        send(RoleDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.NewItemActionEvent<>(new RoleWrapper(clone), target));\n-                    }\n-                }, ActionLink.ActionType.CLONE, StandardEntitlement.ROLE_CREATE).add(new ActionLink<RoleTO>() {\n+                final AnyTypeRestClient typeRestClient = new AnyTypeRestClient();\n+                final AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                final AnyTypeTO anyTypeTO = typeRestClient.read(AnyTypeKind.USER.name());\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                        final ConsoleLayoutInfo info = new ConsoleLayoutInfo(model.getObject().getKey());\n-                        info.setContent(restClient.readConsoleLayoutInfo(model.getObject().getKey()));\n-\n-                        utilityModal.header(new ResourceModel(\"console.layout.info\", \"JSON Content\"));\n-                        utilityModal.setContent(new JsonEditorPanel(\n-                                utilityModal, new PropertyModel<String>(info, \"content\"), false, pageRef) {\n-\n-                            private static final long serialVersionUID = -8927036362466990179L;\n-\n-                            @Override\n-                            public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                                try {\n-                                    restClient.setConsoleLayoutInfo(info.getKey(), info.getContent());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    modal.show(false);\n-                                    modal.close(target);\n-                                } catch (Exception e) {\n-                                    LOG.error(\"While updating onsole layout info for role {}\", info.getKey(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.\n-                                            getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        });\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n-                    }\n-                }, ActionLink.ActionType.LAYOUT_EDIT, StandardEntitlement.ROLE_UPDATE).add(new ActionLink<RoleTO>() {\n+                ModalPanel panel = new AnyPanel(BaseModal.CONTENT_ID, anyTypeTO, null, null, false, pageRef) {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                    private static final long serialVersionUID = -7514498203393023415L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                        try {\n-                            restClient.delete(model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                    getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    protected Panel getDirectoryPanel(final String id) {\n+                        final Panel panel = new UserDirectoryPanel.Builder(\n+                                classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n+                                setRealm(\"/\").\n+                                setFiltered(true).\n+                                setFiql(query).\n+                                disableCheckBoxes().\n+                                addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n+                                        new UserTO(),\n+                                        anyTypeTO.getClasses(),\n+                                        FormLayoutInfoUtils.fetch(typeRestClient.list()).getLeft(),\n+                                        pageRef), false).\n+                                setWizardInModal(false).build(id);\n+\n+                        MetaDataRoleAuthorizationStrategy.authorize(\n+                                panel,\n+                                WebPage.RENDER,\n+                                StandardEntitlement.USER_SEARCH);\n+\n+                        return panel;\n                     }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.ROLE_DELETE);\n+                };\n \n-                return panel.build(componentId);\n+                membersModal.header(new StringResourceModel(\"role.members\", RoleDirectoryPanel.this, model));\n+                membersModal.setContent(panel);\n+                membersModal.show(true);\n+                target.add(membersModal);\n             }\n+        }, ActionLink.ActionType.MEMBERS, StandardEntitlement.USER_SEARCH);\n+\n+        panel.add(new ActionLink<RoleTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            public ActionLinksPanel<RoleTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<RoleTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                final ConsoleLayoutInfo info = new ConsoleLayoutInfo(model.getObject().getKey());\n+                info.setContent(restClient.readConsoleLayoutInfo(model.getObject().getKey()));\n \n-                return panel.add(new ActionLink<RoleTO>() {\n+                utilityModal.header(new ResourceModel(\"console.layout.info\", \"JSON Content\"));\n+                utilityModal.setContent(new JsonEditorPanel(\n+                        utilityModal, new PropertyModel<String>(info, \"content\"), false, pageRef) {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                    private static final long serialVersionUID = -8927036362466990179L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n+                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            restClient.setConsoleLayoutInfo(info.getKey(), info.getContent());\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            modal.show(false);\n+                            modal.close(target);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While updating onsole layout info for role {}\", info.getKey(), e);\n+                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.\n+                                    getMessage());\n                         }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.ROLE_LIST).build(componentId);\n+                });\n+                utilityModal.show(true);\n+                target.add(utilityModal);\n             }\n-        });\n+        }, ActionLink.ActionType.LAYOUT_EDIT, StandardEntitlement.ROLE_UPDATE);\n+        panel.add(new ActionLink<RoleTO>() {\n \n-        return columns;\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                            getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.ROLE_DELETE, true);\n+\n+        return panel;\n     }\n \n     @Override\n     protected Collection<ActionLink.ActionType> getBulkActions() {\n-        final List<ActionType> bulkActions = new ArrayList<>();\n-        bulkActions.add(ActionType.DELETE);\n-        return bulkActions;\n+        return Collections.<ActionLink.ActionType>singletonList(ActionLink.ActionType.DELETE);\n     }\n \n     public abstract static class Builder"},{"sha":"af1b84c3e9ace5bee18a5bfb79a6cdbbbd439afc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":41,"deletions":67,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -38,10 +38,9 @@\n import org.apache.syncope.client.console.panels.SchemaTypePanel.SchemaProvider;\n import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n@@ -180,80 +179,55 @@ public String getCssClass() {\n             }\n         }\n \n-        columns.add(new ActionColumn<AbstractSchemaTO, String>(new ResourceModel(\"actions\")) {\n-\n-            private static final long serialVersionUID = 906457126287899096L;\n-\n-            @Override\n-            public ActionLinksPanel<AbstractSchemaTO> getActions(\n-                    final String componentId, final IModel<AbstractSchemaTO> model) {\n-\n-                ActionLinksPanel<AbstractSchemaTO> panel = ActionLinksPanel.<AbstractSchemaTO>builder().\n-                        add(new ActionLink<AbstractSchemaTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n+        return columns;\n+    }\n \n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignore) {\n-                                send(SchemaTypePanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.SCHEMA_UPDATE).\n-                        add(new ActionLink<AbstractSchemaTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignore) {\n-                                try {\n-                                    switch (schemaType) {\n-                                        case DERIVED:\n-                                            restClient.deleteDerSchema(model.getObject().getKey());\n-                                            break;\n-\n-                                        case VIRTUAL:\n-                                            restClient.deleteVirSchema(model.getObject().getKey());\n-                                            break;\n-\n-                                        default:\n-                                            restClient.deletePlainSchema(model.getObject().getKey());\n-                                            break;\n-                                    }\n-\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (Exception e) {\n-                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.SCHEMA_DELETE).\n-                        build(componentId);\n+    @Override\n+    public ActionsPanel<AbstractSchemaTO> getActions(final IModel<AbstractSchemaTO> model) {\n+        final ActionsPanel<AbstractSchemaTO> panel = super.getActions(model);\n+        panel.add(new ActionLink<AbstractSchemaTO>() {\n \n-                return panel;\n-            }\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<AbstractSchemaTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<AbstractSchemaTO> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<AbstractSchemaTO>() {\n+            public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignore) {\n+                send(SchemaTypePanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.SCHEMA_UPDATE);\n+        panel.add(new ActionLink<AbstractSchemaTO>() {\n \n-                    private static final long serialVersionUID = -1140254463922516111L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AbstractSchemaTO ignore) {\n+                try {\n+                    switch (schemaType) {\n+                        case DERIVED:\n+                            restClient.deleteDerSchema(model.getObject().getKey());\n+                            break;\n+\n+                        case VIRTUAL:\n+                            restClient.deleteVirSchema(model.getObject().getKey());\n+                            break;\n+\n+                        default:\n+                            restClient.deletePlainSchema(model.getObject().getKey());\n+                            break;\n                     }\n-                }, ActionLink.ActionType.RELOAD).build(componentId);\n+\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.SCHEMA_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected final class SchemaProvider extends DirectoryDataProvider<AbstractSchemaTO> {"},{"sha":"c7748d0f1b43d7192598d8b06d2a11f1863db1e1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":31,"deletions":58,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -32,10 +32,9 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel.SecurityQuestionsProvider;\n import org.apache.syncope.client.console.rest.SecurityQuestionRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -50,7 +49,6 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public class SecurityQuestionsPanel extends DirectoryPanel<\n@@ -129,72 +127,47 @@ protected List<IColumn<SecurityQuestionTO, String>> getColumns() {\n         List<IColumn<SecurityQuestionTO, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<SecurityQuestionTO>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n-\n+                new StringResourceModel(\"key\", this), \"key\"));\n         columns.add(new PropertyColumn<SecurityQuestionTO, String>(\n                 new StringResourceModel(\"content\", this), \"content\", \"content\"));\n \n-        columns.add(new ActionColumn<SecurityQuestionTO, String>(new ResourceModel(\"actions\")) {\n+        return columns;\n+    }\n \n-            private static final long serialVersionUID = -8089193528195091515L;\n+    @Override\n+    public ActionsPanel<SecurityQuestionTO> getActions(final IModel<SecurityQuestionTO> model) {\n+        final ActionsPanel<SecurityQuestionTO> panel = super.getActions(model);\n \n-            @Override\n-            public ActionLinksPanel<SecurityQuestionTO> getActions(\n-                    final String componentId, final IModel<SecurityQuestionTO> model) {\n-\n-                ActionLinksPanel<SecurityQuestionTO> panel = ActionLinksPanel.<SecurityQuestionTO>builder().\n-                        add(new ActionLink<SecurityQuestionTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n-                                send(SecurityQuestionsPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.SECURITY_QUESTION_UPDATE).\n-                        add(new ActionLink<SecurityQuestionTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n-                                try {\n-                                    restClient.delete(model.getObject().getKey());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (Exception e) {\n-                                    LOG.error(\"While deleting {}\", model.getObject(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE).\n-                        build(componentId);\n-\n-                return panel;\n-            }\n+        panel.add(new ActionLink<SecurityQuestionTO>() {\n \n-            @Override\n-            public ActionLinksPanel<SecurityQuestionTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<SecurityQuestionTO> panel = ActionLinksPanel.builder();\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                return panel.add(new ActionLink<SecurityQuestionTO>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n+                send(SecurityQuestionsPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.SECURITY_QUESTION_UPDATE);\n+        panel.add(new ActionLink<SecurityQuestionTO>() {\n \n-                    private static final long serialVersionUID = -1140254463922516111L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final SecurityQuestionTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected final class SecurityQuestionsProvider extends DirectoryDataProvider<SecurityQuestionTO> {"},{"sha":"436d332175ba8d1e8559f0cf356212bde75f5060","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TogglePanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -118,8 +118,7 @@ protected void setHeader(final AjaxRequestTarget target, final String header) {\n         target.add(this.header);\n     }\n \n-    protected void close(final AjaxRequestTarget target) {\n-        status = Status.INACTIVE;\n+    public void close(final AjaxRequestTarget target) {\n         toggle(target, false);\n     }\n \n@@ -136,13 +135,13 @@ public void toggle(final AjaxRequestTarget target, final boolean toggle) {\n                 target.add(TogglePanel.this.container);\n                 target.appendJavaScript(\n                         selector + \".toggle(\\\"slow\\\");\"\n-                        + selector + \".attr(\\\"class\\\", \\\"topology-menu active-topology-menu\\\");\");\n+                        + selector + \".attr(\\\"class\\\", \\\"toggle-menu active-toggle-menu\\\");\");\n                 status = Status.ACTIVE;\n             }\n         } else if (status == Status.ACTIVE) {\n             target.appendJavaScript(\n                     selector + \".toggle(\\\"slow\\\");\"\n-                    + selector + \".attr(\\\"class\\\", \\\"topology-menu inactive-topology-menu\\\");\");\n+                    + selector + \".attr(\\\"class\\\", \\\"toggle-menu inactive-toggle-menu\\\");\");\n             status = Status.INACTIVE;\n         }\n     }"},{"sha":"7b5f682a757520911ab745b8dd4260e71bdc8411","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TypeExtensionDirectoryPanel.java","status":"modified","additions":25,"deletions":30,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -24,17 +24,17 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.TypeExtensionDirectoryPanel.TypeExtensionDataProvider;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.any.TypeExtensionWizardBuilder;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n@@ -50,7 +50,6 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public class TypeExtensionDirectoryPanel\n@@ -131,40 +130,36 @@ protected List<IColumn<TypeExtensionTO, String>> getColumns() {\n         columns.add(new PropertyColumn<TypeExtensionTO, String>(\n                 new StringResourceModel(\"auxClasses\", this), \"auxClasses\", \"auxClasses\"));\n \n-        columns.add(new ActionColumn<TypeExtensionTO, String>(new ResourceModel(\"actions\", \"\")) {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public ActionLinksPanel<TypeExtensionTO> getActions(\n-                    final String componentId, final IModel<TypeExtensionTO> model) {\n+        return columns;\n+    }\n \n-                final TypeExtensionTO typeExtension = model.getObject();\n+    @Override\n+    public ActionsPanel<TypeExtensionTO> getActions(final IModel<TypeExtensionTO> model) {\n+        final ActionsPanel<TypeExtensionTO> panel = super.getActions(model);\n+        final TypeExtensionTO typeExtension = model.getObject();\n \n-                return ActionLinksPanel.<TypeExtensionTO>builder().add(new ActionLink<TypeExtensionTO>() {\n+        panel.add(new ActionLink<TypeExtensionTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final TypeExtensionTO ignore) {\n-                        send(TypeExtensionDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(typeExtension, target));\n-                    }\n-                }, ActionLink.ActionType.EDIT).add(new ActionLink<TypeExtensionTO>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final TypeExtensionTO ignore) {\n+                send(TypeExtensionDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(typeExtension, target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StringUtils.EMPTY);\n+        panel.add(new ActionLink<TypeExtensionTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final TypeExtensionTO ignore) {\n-                        groupTO.getTypeExtensions().remove(\n-                                groupTO.getTypeExtension(typeExtension.getAnyType()));\n-                        target.add(container);\n-                    }\n-                }, ActionLink.ActionType.DELETE).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final TypeExtensionTO ignore) {\n+                groupTO.getTypeExtensions().remove(\n+                        groupTO.getTypeExtension(typeExtension.getAnyType()));\n+                target.add(container);\n             }\n-        });\n-\n-        return columns;\n+        }, ActionLink.ActionType.DELETE, StringUtils.EMPTY, true);\n+        return panel;\n     }\n \n     @Override"},{"sha":"ad8bbec5355727a92624bb3157c44b6f06339dca","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":214,"deletions":209,"changes":423,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -33,11 +33,11 @@\n import org.apache.syncope.client.console.status.AnyStatusModal;\n import org.apache.syncope.client.console.status.ChangePasswordModal;\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -99,247 +99,252 @@ protected Collection<ActionType> getBulkActions() {\n         return bulkActions;\n     }\n \n+    @Override\n+    public ActionsPanel<Serializable> getHeader(final String componentId) {\n+        final ActionsPanel<Serializable> panel = super.getHeader(componentId);\n+\n+        panel.add(new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                target.add(displayAttributeModal.setContent(new UserDisplayAttributesModalPanel<>(\n+                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n+\n+                displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n+                displayAttributeModal.addSubmitButton();\n+                displayAttributeModal.show(true);\n+            }\n+\n+            @Override\n+            protected boolean statusCondition(final Serializable modelObject) {\n+                return wizardInModal;\n+            }\n+        }, ActionType.CHANGE_VIEW, StandardEntitlement.USER_READ).hideLabel();\n+        return panel;\n+    }\n+\n     @Override\n     protected List<IColumn<UserTO, String>> getColumns() {\n         final List<IColumn<UserTO, String>> columns = new ArrayList<>();\n+        final List<IColumn<UserTO, String>> prefcolumns = new ArrayList<IColumn<UserTO, String>>();\n+\n+        columns.add(new KeyPropertyColumn<UserTO>(\n+                new ResourceModel(Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME), Constants.KEY_FIELD_NAME));\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n-            addPropertyColumn(name, ReflectionUtils.findField(UserTO.class, name), columns);\n+            if (!Constants.KEY_FIELD_NAME.equalsIgnoreCase(name)) {\n+                addPropertyColumn(name, ReflectionUtils.findField(UserTO.class, name), prefcolumns);\n+            }\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_PLAIN_ATTRS_VIEW)) {\n             if (pSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<UserTO>(name, SchemaType.PLAIN));\n+                prefcolumns.add(new AttrColumn<UserTO>(name, SchemaType.PLAIN));\n             }\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DER_ATTRS_VIEW)) {\n             if (dSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn<UserTO>(name, SchemaType.DERIVED));\n+                prefcolumns.add(new AttrColumn<UserTO>(name, SchemaType.DERIVED));\n             }\n         }\n \n         // Add defaults in case of no selection\n-        if (columns.isEmpty()) {\n+        if (prefcolumns.isEmpty()) {\n             for (String name : UserDisplayAttributesModalPanel.DEFAULT_SELECTION) {\n-                addPropertyColumn(name, ReflectionUtils.findField(UserTO.class, name), columns);\n+                addPropertyColumn(name, ReflectionUtils.findField(UserTO.class, name), prefcolumns);\n             }\n \n             prefMan.setList(getRequest(), getResponse(), Constants.PREF_USERS_DETAILS_VIEW,\n                     Arrays.asList(UserDisplayAttributesModalPanel.DEFAULT_SELECTION));\n         }\n \n-        columns.add(new ActionColumn<UserTO, String>(new ResourceModel(\"actions\")) {\n+        columns.addAll(prefcolumns);\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<UserTO> getActions(final IModel<UserTO> model) {\n+        final ActionsPanel<UserTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<UserTO>() {\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            public ActionLinksPanel<UserTO> getActions(final String componentId, final IModel<UserTO> model) {\n-                final ActionLinksPanel.Builder<UserTO> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        try {\n-                            UserRestClient.class.cast(restClient).mustChangePassword(\n-                                    model.getObject().getETagValue(),\n-                                    !model.getObject().isMustChangePassword(),\n-                                    model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                    getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionType.MUSTCHANGEPASSWORD, StandardEntitlement.USER_UPDATE).add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        send(UserDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(\n-                                        new UserWrapper(new UserRestClient().read(model.getObject().getKey())),\n-                                        target));\n-                    }\n-                }, ActionType.EDIT, new StringBuilder().append(StandardEntitlement.USER_READ).append(\",\").\n-                        append(StandardEntitlement.USER_UPDATE).toString()).add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        UserTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(null);\n-                        clone.setUsername(model.getObject().getUsername() + \"_clone\");\n-                        send(UserDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.NewItemActionEvent<>(new UserWrapper(clone), target));\n-                    }\n-\n-                    @Override\n-                    protected boolean statusCondition(final UserTO modelObject) {\n-                        return addAjaxLink.isVisibleInHierarchy();\n-                    }\n-\n-                }, ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<UserTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        try {\n-                            restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (Exception e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                    getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionType.DELETE, StandardEntitlement.USER_DELETE);\n-\n-                if (wizardInModal) {\n-                    panel.add(new ActionLink<UserTO>() {\n-\n-                        private static final long serialVersionUID = -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                            IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                                    new AnyWrapper<>(model.getObject()));\n-                            altDefaultModal.setFormModel(formModel);\n-\n-                            target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n-                                    altDefaultModal,\n-                                    pageRef,\n-                                    formModel.getObject().getInnerObject(),\n-                                    \"resourceName\",\n-                                    false)));\n-\n-                            altDefaultModal.header(new Model<>(\n-                                    getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                            altDefaultModal.show(true);\n-                        }\n-                    }, ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_UPDATE).add(new ActionLink<UserTO>() {\n-\n-                        private static final long serialVersionUID = -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                            IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                                    new AnyWrapper<>(model.getObject()));\n-                            altDefaultModal.setFormModel(formModel);\n-\n-                            target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n-                                    altDefaultModal,\n-                                    pageRef,\n-                                    formModel.getObject().getInnerObject(),\n-                                    \"resourceName\",\n-                                    true)));\n-\n-                            altDefaultModal.header(new Model<>(\n-                                    getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                            altDefaultModal.show(true);\n-                        }\n-                    }, ActionType.ENABLE, StandardEntitlement.USER_UPDATE).add(new ActionLink<UserTO>() {\n-\n-                        private static final long serialVersionUID = -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                            target.add(utilityModal.setContent(new AnyPropagationTasks(\n-                                    utilityModal, AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n-\n-                            utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n-                            utilityModal.show(true);\n-                        }\n-                    }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<UserTO>() {\n-\n-                        private static final long serialVersionUID = -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                            target.add(utilityModal.setContent(\n-                                    new NotificationTasks(AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n-                            utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n-                            utilityModal.show(true);\n-                            target.add(utilityModal);\n-                        }\n-                    }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<UserTO>() {\n-\n-                        private static final long serialVersionUID = -4875218360625971340L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                            IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n-                                    new AnyWrapper<>(model.getObject()));\n-                            displayAttributeModal.setFormModel(formModel);\n-\n-                            target.add(displayAttributeModal.setContent(new ChangePasswordModal(\n-                                    displayAttributeModal,\n-                                    pageRef,\n-                                    new UserWrapper(model.getObject()))));\n-\n-                            displayAttributeModal.header(new Model<>(\n-                                    getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n-\n-                            displayAttributeModal.show(true);\n-                        }\n-                    }, ActionType.PASSWORD_RESET,\n-                            new StringBuilder().append(StandardEntitlement.USER_UPDATE).toString());\n-                }\n+            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                send(UserDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                new UserWrapper(new UserRestClient().read(model.getObject().getKey())),\n+                                target));\n+            }\n+        }, ActionType.EDIT, new StringBuilder().append(StandardEntitlement.USER_READ).append(\",\").\n+                append(StandardEntitlement.USER_UPDATE).toString());\n+\n+        panel.add(new ActionLink<UserTO>() {\n \n-                return panel.build(componentId, model.getObject());\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                UserTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                clone.setUsername(model.getObject().getUsername() + \"_clone\");\n+                send(UserDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.NewItemActionEvent<>(new UserWrapper(clone), target));\n             }\n \n             @Override\n-            public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<Serializable>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        target.add(displayAttributeModal.setContent(new UserDisplayAttributesModalPanel<>(\n-                                displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n-\n-                        displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n-                        displayAttributeModal.addSubmitButton();\n-                        displayAttributeModal.show(true);\n-                    }\n-\n-                    @Override\n-                    protected boolean statusCondition(final Serializable modelObject) {\n-                        return wizardInModal;\n-                    }\n-                }, ActionType.CHANGE_VIEW, StandardEntitlement.USER_READ).add(\n-                        new ActionLink<Serializable>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionType.RELOAD, StandardEntitlement.USER_SEARCH).build(componentId);\n+            protected boolean statusCondition(final UserTO modelObject) {\n+                return addAjaxLink.isVisibleInHierarchy();\n             }\n-        });\n \n-        return columns;\n+        }, ActionType.CLONE, StandardEntitlement.USER_CREATE);\n+\n+        panel.add(new ActionLink<UserTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                try {\n+                    UserRestClient.class.cast(restClient).mustChangePassword(\n+                            model.getObject().getETagValue(),\n+                            !model.getObject().isMustChangePassword(),\n+                            model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                            getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionType.MUSTCHANGEPASSWORD, StandardEntitlement.USER_UPDATE);\n+\n+        if (wizardInModal) {\n+            panel.add(new ActionLink<UserTO>() {\n+\n+                private static final long serialVersionUID = -4875218360625971340L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                    IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n+                            new AnyWrapper<>(model.getObject()));\n+                    displayAttributeModal.setFormModel(formModel);\n+\n+                    target.add(displayAttributeModal.setContent(new ChangePasswordModal(\n+                            displayAttributeModal,\n+                            pageRef,\n+                            new UserWrapper(model.getObject()))));\n+\n+                    displayAttributeModal.header(new Model<>(\n+                            getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                    displayAttributeModal.show(true);\n+                }\n+            }, ActionType.PASSWORD_RESET,\n+                    new StringBuilder().append(StandardEntitlement.USER_UPDATE).toString());\n+\n+            panel.add(new ActionLink<UserTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                    IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n+                            new AnyWrapper<>(model.getObject()));\n+                    altDefaultModal.setFormModel(formModel);\n+\n+                    target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n+                            altDefaultModal,\n+                            pageRef,\n+                            formModel.getObject().getInnerObject(),\n+                            \"resourceName\",\n+                            true)));\n+\n+                    altDefaultModal.header(new Model<>(\n+                            getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                    altDefaultModal.show(true);\n+                }\n+            }, ActionType.ENABLE, StandardEntitlement.USER_UPDATE);\n+\n+            panel.add(new ActionLink<UserTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                    IModel<AnyWrapper<UserTO>> formModel = new CompoundPropertyModel<>(\n+                            new AnyWrapper<>(model.getObject()));\n+                    altDefaultModal.setFormModel(formModel);\n+\n+                    target.add(altDefaultModal.setContent(new AnyStatusModal<>(\n+                            altDefaultModal,\n+                            pageRef,\n+                            formModel.getObject().getInnerObject(),\n+                            \"resourceName\",\n+                            false)));\n+\n+                    altDefaultModal.header(new Model<>(\n+                            getString(\"any.edit\", new Model<>(new AnyWrapper<>(model.getObject())))));\n+\n+                    altDefaultModal.show(true);\n+                }\n+            }, ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_UPDATE);\n+\n+            panel.add(new ActionLink<UserTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                    target.add(utilityModal.setContent(new AnyPropagationTasks(\n+                            utilityModal, AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n+\n+                    utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n+                    utilityModal.show(true);\n+                }\n+            }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST);\n+            panel.add(new ActionLink<UserTO>() {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                    target.add(utilityModal.setContent(\n+                            new NotificationTasks(AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n+                    utilityModal.header(new StringResourceModel(\"any.notification.tasks\", model));\n+                    utilityModal.show(true);\n+                    target.add(utilityModal);\n+                }\n+            }, ActionType.NOTIFICATION_TASKS, StandardEntitlement.TASK_LIST);\n+        }\n+\n+        panel.add(new ActionLink<UserTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                            getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionType.DELETE, StandardEntitlement.USER_DELETE, true);\n+\n+        return panel;\n     }\n \n     public static class Builder extends AnyDirectoryPanel.Builder<UserTO, UserRestClient> {"},{"sha":"513ec9d8dc342ff8f71af86fa0fa1b5d77b1b897","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDisplayAttributesModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDisplayAttributesModalPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -35,7 +35,7 @@\n \n     private static final long serialVersionUID = 5194630813773543054L;\n \n-    public static final String[] DEFAULT_SELECTION = { \"key\", \"username\", \"status\", \"mustChangePassword\" };\n+    public static final String[] DEFAULT_SELECTION = { \"username\", \"status\", \"mustChangePassword\" };\n \n     public UserDisplayAttributesModalPanel(\n             final BaseModal<T> modal,"},{"sha":"2217da03588959a38a0327b2ec4aa02933108fae","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/WorkflowDirectoryPanel.java","status":"modified","additions":95,"deletions":108,"changes":203,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -37,12 +37,11 @@\n import org.apache.syncope.client.console.pages.ModelerPopupPage;\n import org.apache.syncope.client.console.panels.WorkflowDirectoryPanel.WorkflowDefinitionDataProvider;\n import org.apache.syncope.client.console.rest.WorkflowRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ImageModalPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n@@ -155,142 +154,130 @@ protected String paginatorRowsKey() {\n     protected List<IColumn<WorkflowDefinitionTO, String>> getColumns() {\n         List<IColumn<WorkflowDefinitionTO, String>> columns = new ArrayList<>();\n \n-        columns.add(new KeyPropertyColumn<WorkflowDefinitionTO>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+        columns.add(new KeyPropertyColumn<WorkflowDefinitionTO>(new ResourceModel(\"key\"), \"key\"));\n         columns.add(new PropertyColumn<WorkflowDefinitionTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n         columns.add(new BooleanPropertyColumn<WorkflowDefinitionTO>(new ResourceModel(\"main\"), null, \"main\"));\n \n-        columns.add(new ActionColumn<WorkflowDefinitionTO, String>(new ResourceModel(\"actions\")) {\n-\n-            private static final long serialVersionUID = 906457126287899096L;\n+        return columns;\n+    }\n \n-            @Override\n-            public ActionLinksPanel<?> getActions(final String componentId, final IModel<WorkflowDefinitionTO> model) {\n-                final ActionLinksPanel.Builder<WorkflowDefinitionTO> panel = ActionLinksPanel.builder();\n+    @Override\n+    public ActionsPanel<WorkflowDefinitionTO> getActions(final IModel<WorkflowDefinitionTO> model) {\n+        final ActionsPanel<WorkflowDefinitionTO> panel = super.getActions(model);\n \n-                panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+        panel.add(new ActionLink<WorkflowDefinitionTO>() {\n \n-                    private static final long serialVersionUID = 3109256773218160485L;\n+            private static final long serialVersionUID = -184018732772021627L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n-                        modal.header(Model.of(model.getObject().getKey()));\n-                        modal.setContent(new ImageModalPanel<>(\n-                                modal, restClient.getDiagram(model.getObject().getKey()), pageRef));\n-                        modal.show(target);\n-                        target.add(modal);\n-                    }\n-                }, ActionLink.ActionType.VIEW, StandardEntitlement.WORKFLOW_DEF_GET);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                final IModel<String> wfDefinition = new Model<>();\n+                try {\n+                    wfDefinition.setObject(IOUtils.toString(restClient.getDefinition(\n+                            MediaType.APPLICATION_XML_TYPE, model.getObject().getKey())));\n+                } catch (IOException e) {\n+                    LOG.error(\"Could not get workflow definition\", e);\n+                }\n \n-                panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+                utility.header(Model.of(model.getObject().getKey()));\n+                utility.setContent(new XMLEditorPanel(utility, wfDefinition, false, pageRef) {\n \n-                    private static final long serialVersionUID = -184018732772021627L;\n+                    private static final long serialVersionUID = -7688359318035249200L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n-                        final IModel<String> wfDefinition = new Model<>();\n-                        try {\n-                            wfDefinition.setObject(IOUtils.toString(restClient.getDefinition(\n-                                    MediaType.APPLICATION_XML_TYPE, model.getObject().getKey())));\n-                        } catch (IOException e) {\n-                            LOG.error(\"Could not get workflow definition\", e);\n-                        }\n-\n-                        utility.header(Model.of(model.getObject().getKey()));\n-                        utility.setContent(new XMLEditorPanel(utility, wfDefinition, false, pageRef) {\n-\n-                            private static final long serialVersionUID = -7688359318035249200L;\n-\n-                            @Override\n-                            public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                                if (StringUtils.isNotBlank(wfDefinition.getObject())) {\n-                                    try {\n-                                        restClient.setDefinition(MediaType.APPLICATION_XML_TYPE,\n-                                                model.getObject().getKey(), wfDefinition.getObject());\n-                                        SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-\n-                                        target.add(container);\n-                                        utility.show(false);\n-                                        utility.close(target);\n-                                    } catch (SyncopeClientException e) {\n-                                        SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                                ? e.getClass().getName() : e.getMessage());\n-                                    }\n-                                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                                }\n+                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        if (StringUtils.isNotBlank(wfDefinition.getObject())) {\n+                            try {\n+                                restClient.setDefinition(MediaType.APPLICATION_XML_TYPE,\n+                                        model.getObject().getKey(), wfDefinition.getObject());\n+                                SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+\n+                                target.add(container);\n+                                utility.show(false);\n+                                utility.close(target);\n+                            } catch (SyncopeClientException e) {\n+                                SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                        ? e.getClass().getName() : e.getMessage());\n                             }\n-                        });\n-                        utility.show(target);\n-                        target.add(utility);\n+                            ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                        }\n                     }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.WORKFLOW_DEF_SET);\n-\n-                panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+                });\n+                utility.show(target);\n+                target.add(utility);\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.WORKFLOW_DEF_SET);\n \n-                    private static final long serialVersionUID = -184018732772021627L;\n+        panel.add(new ActionLink<WorkflowDefinitionTO>() {\n \n-                    @Override\n-                    public Class<? extends Page> getPageClass() {\n-                        return ModelerPopupPage.class;\n-                    }\n+            private static final long serialVersionUID = 3109256773218160485L;\n \n-                    @Override\n-                    public PageParameters getPageParameters() {\n-                        PageParameters parameters = new PageParameters();\n-                        if (modelerCtx != null) {\n-                            parameters.add(Constants.MODELER_CONTEXT, modelerCtx);\n-                        }\n-                        parameters.add(Constants.MODEL_ID_PARAM, model.getObject().getModelId());\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                modal.header(Model.of(model.getObject().getKey()));\n+                modal.setContent(new ImageModalPanel<>(\n+                        modal, restClient.getDiagram(model.getObject().getKey()), pageRef));\n+                modal.show(target);\n+                target.add(modal);\n+            }\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.WORKFLOW_DEF_GET);\n \n-                        return parameters;\n-                    }\n+        panel.add(new ActionLink<WorkflowDefinitionTO>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n-                        // do nothing\n-                    }\n-                }, ActionLink.ActionType.WORKFLOW_MODELER, StandardEntitlement.WORKFLOW_DEF_SET, modelerCtx != null);\n+            private static final long serialVersionUID = -184018732772021627L;\n \n-                panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+            @Override\n+            public Class<? extends Page> getPageClass() {\n+                return ModelerPopupPage.class;\n+            }\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            @Override\n+            public PageParameters getPageParameters() {\n+                PageParameters parameters = new PageParameters();\n+                if (modelerCtx != null) {\n+                    parameters.add(Constants.MODELER_CONTEXT, modelerCtx);\n+                }\n+                parameters.add(Constants.MODEL_ID_PARAM, model.getObject().getModelId());\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n-                        try {\n-                            restClient.deleteDefinition(model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting workflow definition {}\", model.getObject().getName(), e);\n-                            SyncopeConsoleSession.get().error(\n-                                    StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.WORKFLOW_DEF_DELETE, !model.getObject().isMain());\n+                return parameters;\n+            }\n \n-                return panel.build(componentId);\n+            @Override\n+            protected boolean statusCondition(final WorkflowDefinitionTO modelObject) {\n+                return modelerCtx != null;\n             }\n \n             @Override\n-            public ActionLinksPanel<WorkflowDefinitionTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<WorkflowDefinitionTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                // do nothing\n+            }\n+        }, ActionLink.ActionType.WORKFLOW_MODELER, StandardEntitlement.WORKFLOW_DEF_SET);\n \n-                return panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+        panel.add(new ActionLink<WorkflowDefinitionTO>() {\n \n-                    private static final long serialVersionUID = -184018732772021627L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.WORKFLOW_DEF_LIST).build(componentId);\n+            @Override\n+            protected boolean statusCondition(final WorkflowDefinitionTO modelObject) {\n+                return !modelObject.isMain();\n             }\n-        });\n \n-        return columns;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                try {\n+                    restClient.deleteDefinition(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting workflow definition {}\", model.getObject().getName(), e);\n+                    SyncopeConsoleSession.get().error(\n+                            StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.WORKFLOW_DEF_DELETE, true);\n+\n+        return panel;\n     }\n \n     @Override"},{"sha":"8276be9d869dd6ba9fc34f707658cd4a060f664a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSelectionDirectoryPanel.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.AnyObjectDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -42,11 +41,6 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_ANYOBJECT_PAGINATOR_ROWS;\n     }\n \n-    @Override\n-    protected String[] getDisplayAttributes() {\n-        return AnyObjectDisplayAttributesModalPanel.DEFAULT_SELECTION;\n-    }\n-\n     @Override\n     public String getPrefDetailsView() {\n         return String.format(Constants.PREF_ANY_OBJECT_DETAILS_VIEW, type);"},{"sha":"27712cee7f98d804c571dcf23d97854099349ba4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionDirectoryPanel.java","status":"modified","additions":13,"deletions":64,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -21,23 +21,20 @@\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n-import org.apache.syncope.client.console.panels.AnyObjectDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.panels.AnyDirectoryPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -104,80 +101,32 @@ protected List<IColumn<A, String>> getColumns() {\n             }\n         }\n \n-        // Add defaults in case of no selection\n-        if (columns.isEmpty()) {\n-            for (String name : getDisplayAttributes()) {\n-                columns.add(new PropertyColumn<A, String>(new ResourceModel(name, name), name, name));\n-            }\n-\n-            prefMan.setList(getRequest(), getResponse(), getPrefDetailsView(), Arrays.asList(getDisplayAttributes()));\n-        }\n-\n-        columns.add(new ActionColumn<A, String>(new ResourceModel(\"actions\")) {\n-\n-            private static final long serialVersionUID = -3503023501954863131L;\n-\n-            @Override\n-            public ActionLinksPanel<A> getActions(final String componentId, final IModel<A> model) {\n-                final ActionLinksPanel.Builder<A> panel = ActionLinksPanel.builder();\n+        return columns;\n+    }\n \n-                panel.add(new ActionLink<A>() {\n+    @Override\n+    public ActionsPanel<A> getActions(final IModel<A> model) {\n+        final ActionsPanel<A> panel = super.getActions(model);\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+        panel.add(new ActionLink<A>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final A ignore) {\n-                        send(AnySelectionDirectoryPanel.this,\n-                                Broadcast.BUBBLE, new ItemSelection<>(target, model.getObject()));\n-                    }\n-                }, ActionType.SELECT, AnyEntitlement.READ.getFor(type));\n-\n-                return panel.build(componentId, model.getObject());\n-            }\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            public ActionLinksPanel<A> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<A> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<A>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final A ignore) {\n-                        // still missing content\n-                        target.add(altDefaultModal.setContent(new AnyObjectDisplayAttributesModalPanel<>(\n-                                altDefaultModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n-\n-                        altDefaultModal.addSubmitButton();\n-                        altDefaultModal.header(new ResourceModel(\"any.attr.display\"));\n-                        altDefaultModal.show(true);\n-                    }\n-                }, ActionType.CHANGE_VIEW, AnyEntitlement.READ.getFor(type)).add(new ActionLink<A>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final A ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionType.RELOAD, AnyEntitlement.SEARCH.getFor(type)).\n-                        build(componentId);\n+            public void onClick(final AjaxRequestTarget target, final A ignore) {\n+                send(AnySelectionDirectoryPanel.this,\n+                        Broadcast.BUBBLE, new ItemSelection<>(target, model.getObject()));\n             }\n-        });\n+        }, ActionType.SELECT, AnyEntitlement.READ.getFor(type));\n \n-        return columns;\n+        return panel;\n     }\n \n     @Override\n     protected Collection<ActionType> getBulkActions() {\n         return Collections.<ActionType>emptyList();\n     }\n \n-    protected abstract String[] getDisplayAttributes();\n-\n     protected abstract String getPrefDetailsView();\n \n     protected abstract String getPrefPlainAttributesView();"},{"sha":"4642414f147350c2670dada2bb692f4d5d468e98","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionDirectoryPanel.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.GroupDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -41,11 +40,6 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_GROUP_PAGINATOR_ROWS;\n     }\n \n-    @Override\n-    protected String[] getDisplayAttributes() {\n-        return GroupDisplayAttributesModalPanel.DEFAULT_SELECTION;\n-    }\n-\n     @Override\n     public String getPrefDetailsView() {\n         return Constants.PREF_GROUP_DETAILS_VIEW;"},{"sha":"a27c2f6abfe302aac044c4d8da77ff098ea5173a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionDirectoryPanel.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.UserDisplayAttributesModalPanel;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n@@ -41,11 +40,6 @@ protected String paginatorRowsKey() {\n         return Constants.PREF_USERS_PAGINATOR_ROWS;\n     }\n \n-    @Override\n-    protected String[] getDisplayAttributes() {\n-        return UserDisplayAttributesModalPanel.DEFAULT_SELECTION;\n-    }\n-\n     @Override\n     protected String getPrefDetailsView() {\n         return Constants.PREF_USERS_DETAILS_VIEW;"},{"sha":"5b0f2f1cf5b75fc1af46129890366e8929957634","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/AccountPolicyDirectoryPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FAccountPolicyDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -54,7 +54,7 @@ public AccountPolicyDirectoryPanel(final String id, final PageReference pageRef)\n     @Override\n     protected void addCustomColumnFields(final List<IColumn<AccountPolicyTO, String>> columns) {\n         columns.add(new CollectionPropertyColumn<AccountPolicyTO>(new StringResourceModel(\n-                \"passthroughResources\", this), \"passthroughResources\", \"passthroughResources\"));\n+                \"passthroughResources\", this), \"passthroughResources\"));\n \n         columns.add(new PropertyColumn<AccountPolicyTO, String>(new StringResourceModel(\n                 \"maxAuthenticationAttempts\", this), \"maxAuthenticationAttempts\", \"maxAuthenticationAttempts\"));\n@@ -64,8 +64,7 @@ protected void addCustomColumnFields(final List<IColumn<AccountPolicyTO, String>\n     }\n \n     @Override\n-    protected void addCustomActions(\n-            final ActionLinksPanel.Builder<AccountPolicyTO> panel, final IModel<AccountPolicyTO> model) {\n+    protected void addCustomActions(final ActionsPanel<AccountPolicyTO> panel, final IModel<AccountPolicyTO> model) {\n         panel.add(new ActionLink<AccountPolicyTO>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"59fe8312f37e40eac4a3330891c2badcb49baa12","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PasswordPolicyDirectoryPanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPasswordPolicyDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -61,8 +61,7 @@ protected void addCustomColumnFields(final List<IColumn<PasswordPolicyTO, String\n     }\n \n     @Override\n-    protected void addCustomActions(\n-            final ActionLinksPanel.Builder<PasswordPolicyTO> panel, final IModel<PasswordPolicyTO> model) {\n+    protected void addCustomActions(final ActionsPanel<PasswordPolicyTO> panel, final IModel<PasswordPolicyTO> model) {\n         panel.add(new ActionLink<PasswordPolicyTO>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"166b9e21fc4e99c13131cb5f66ebebbb4e2b5706","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyDirectoryPanel.java","status":"modified","additions":54,"deletions":80,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -33,18 +33,16 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n-import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -55,7 +53,6 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n /**\n@@ -112,114 +109,91 @@ public void onClose(final AjaxRequestTarget target) {\n         setFooterVisibility(true);\n         modal.addSubmitButton();\n         modal.size(Modal.Size.Large);\n+        \n+        disableCheckBoxes();\n     }\n \n     @Override\n     protected List<IColumn<T, String>> getColumns() {\n         final List<IColumn<T, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<T>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n-\n-        columns.add(new PropertyColumn<T, String>(new StringResourceModel(\n-                \"description\", this), \"description\", \"description\"));\n-\n+                new StringResourceModel(\"key\", this), \"key\"));\n+        columns.add(new PropertyColumn<T, String>(\n+                new StringResourceModel(\"description\", this), \"description\", \"description\"));\n         columns.add(new CollectionPropertyColumn<T>(\n-                new StringResourceModel(\"usedByResources\", this), \"usedByResources\", \"usedByResources\"));\n-\n+                new StringResourceModel(\"usedByResources\", this), \"usedByResources\"));\n         columns.add(new CollectionPropertyColumn<T>(\n-                new StringResourceModel(\"usedByRealms\", this), \"usedByRealms\", \"usedByRealms\"));\n+                new StringResourceModel(\"usedByRealms\", this), \"usedByRealms\"));\n \n         addCustomColumnFields(columns);\n \n-        columns.add(new ActionColumn<T, String>(new ResourceModel(\"actions\")) {\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<T> getActions(final IModel<T> model) {\n+        final ActionsPanel<T> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<T>() {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<T> getActions(final String componentId, final IModel<T> model) {\n-\n-                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.<T>builder().\n-                        add(new ActionLink<T>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AbstractPolicyTO ignore) {\n-                                final AbstractPolicyTO clone = SerializationUtils.clone(model.getObject());\n-                                clone.setKey(null);\n-                                send(PolicyDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(clone, target));\n-                            }\n-                        }, ActionLink.ActionType.CLONE, StandardEntitlement.POLICY_CREATE).\n-                        add(new ActionLink<T>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AbstractPolicyTO ignore) {\n-                                send(PolicyDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(\n-                                                restClient.getPolicy(model.getObject().getKey()), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.POLICY_UPDATE).\n-                        add(new ActionLink<T>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AbstractPolicyTO ignore) {\n-                                final T policyTO = model.getObject();\n-                                try {\n-                                    restClient.delete(policyTO.getKey());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting {}\", policyTO.getKey(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.POLICY_DELETE);\n-\n-                addCustomActions(panel, model);\n-                return panel.build(componentId);\n+            public void onClick(final AjaxRequestTarget target, final AbstractPolicyTO ignore) {\n+                send(PolicyDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                restClient.getPolicy(model.getObject().getKey()), target));\n             }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.POLICY_UPDATE);\n+\n+        panel.add(new ActionLink<T>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<ReportTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<ReportTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final AbstractPolicyTO ignore) {\n+                final AbstractPolicyTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                send(PolicyDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(clone, target));\n+            }\n+        }, ActionLink.ActionType.CLONE, StandardEntitlement.POLICY_CREATE);\n+\n+        addCustomActions(panel, model);\n \n-                return panel.add(new ActionLink<ReportTO>() {\n+        panel.add(new ActionLink<T>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AbstractPolicyTO ignore) {\n+                final T policyTO = model.getObject();\n+                try {\n+                    restClient.delete(policyTO.getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting {}\", policyTO.getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.POLICY_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected void addCustomColumnFields(final List<IColumn<T, String>> columns) {\n     }\n \n-    protected void addCustomActions(final ActionLinksPanel.Builder<T> panel, final IModel<T> model) {\n+    protected void addCustomActions(final ActionsPanel<T> panel, final IModel<T> model) {\n     }\n \n     @Override\n     protected Collection<ActionType> getBulkActions() {\n-        final List<ActionType> bulkActions = new ArrayList<>();\n-        bulkActions.add(ActionType.EXECUTE);\n-        bulkActions.add(ActionType.DELETE);\n-        return bulkActions;\n+        return Collections.<ActionType>emptyList();\n     }\n \n     @Override"},{"sha":"fd3c72eabb97f9ca97eb54e589ef5f80c70a7b50","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel.java","status":"modified","additions":69,"deletions":75,"changes":144,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -38,11 +38,10 @@\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.policies.PolicyRuleDirectoryPanel.PolicyRuleWrapper;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -64,7 +63,6 @@\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n /**\n@@ -120,90 +118,86 @@ public void populateItem(\n                 cellItem.add(new Label(componentId, rowModel.getObject().getConf().getClass().getName()));\n             }\n         });\n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<PolicyRuleWrapper, String>(new ResourceModel(\"actions\")) {\n+    @Override\n+    public ActionsPanel<PolicyRuleWrapper> getActions(final IModel<PolicyRuleWrapper> model) {\n+        final ActionsPanel<PolicyRuleWrapper> panel = super.getActions(model);\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+        panel.add(new ActionLink<PolicyRuleWrapper>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<PolicyRuleWrapper> getActions(final String componentId,\n-                    final IModel<PolicyRuleWrapper> model) {\n-\n-                final ActionLinksPanel<PolicyRuleWrapper> panel = ActionLinksPanel.<PolicyRuleWrapper>builder().\n-                        add(new ActionLink<PolicyRuleWrapper>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n-                                RuleConf clone = SerializationUtils.clone(model.getObject().getConf());\n-\n-                                send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(\n-                                                new PolicyRuleWrapper().setConf(clone),\n-                                                target));\n-                            }\n-                        }, ActionLink.ActionType.CLONE, StandardEntitlement.POLICY_UPDATE).\n-                        add(new ActionLink<PolicyRuleWrapper>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n-                                send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.POLICY_UPDATE).\n-                        add(new ActionLink<PolicyRuleWrapper>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n-                                final RuleConf rule = model.getObject().getConf();\n-                                try {\n-                                    final T actual = restClient.getPolicy(policy);\n-                                    CollectionUtils.filter(getRuleConf(actual), new Predicate<RuleConf>() {\n-\n-                                        @Override\n-                                        public boolean evaluate(final RuleConf object) {\n-                                            return !object.getName().equals(rule.getName());\n-                                        }\n-                                    });\n-                                    restClient.updatePolicy(actual);\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    customActionOnFinishCallback(target);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting {}\", rule.getName(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.POLICY_UPDATE).build(componentId);\n-\n-                return panel;\n+            public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n+                RuleConf clone = SerializationUtils.clone(model.getObject().getConf());\n+\n+                PolicyRuleDirectoryPanel.this.getTogglePanel().close(target);\n+                send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                new PolicyRuleWrapper().setConf(clone),\n+                                target));\n             }\n+        }, ActionLink.ActionType.CLONE, StandardEntitlement.POLICY_CREATE);\n+        panel.add(new ActionLink<PolicyRuleWrapper>() {\n \n-            @Override\n-            public ActionLinksPanel<PolicyRuleWrapper> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<PolicyRuleWrapper> panel = ActionLinksPanel.builder();\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                return panel.add(new ActionLink<PolicyRuleWrapper>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n+                PolicyRuleDirectoryPanel.this.getTogglePanel().close(target);\n+                send(PolicyRuleDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.POLICY_UPDATE);\n+        panel.add(new ActionLink<PolicyRuleWrapper>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n-                        if (target != null) {\n-                            customActionOnFinishCallback(target);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n+                final RuleConf rule = model.getObject().getConf();\n+                try {\n+                    final T actual = restClient.getPolicy(policy);\n+                    CollectionUtils.filter(getRuleConf(actual), new Predicate<RuleConf>() {\n+\n+                        @Override\n+                        public boolean evaluate(final RuleConf object) {\n+                            return !object.getName().equals(rule.getName());\n                         }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+                    });\n+                    restClient.updatePolicy(actual);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    customActionOnFinishCallback(target);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting {}\", rule.getName(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.POLICY_DELETE, true);\n \n-        return columns;\n+        return panel;\n+    }\n+\n+    @Override\n+    public ActionsPanel<Serializable> getHeader(final String componentId) {\n+        final ActionsPanel<Serializable> panel = new ActionsPanel<>(componentId, null);\n+\n+        panel.add(new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                if (target != null) {\n+                    customActionOnFinishCallback(target);\n+                }\n+            }\n+        }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).hideLabel();\n+        return panel;\n     }\n \n     @Override"},{"sha":"32b81b74c36e6c2101dadee32490bd8d79eb0c24","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PullPolicyDirectoryPanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPullPolicyDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.policies;\n \n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.policy.PullPolicySpec;\n import org.apache.syncope.common.lib.policy.PullPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n@@ -52,8 +52,7 @@ public PullPolicyDirectoryPanel(final String id, final PageReference pageRef) {\n     }\n \n     @Override\n-    protected void addCustomActions(\n-            final ActionLinksPanel.Builder<PullPolicyTO> panel, final IModel<PullPolicyTO> model) {\n+    protected void addCustomActions(final ActionsPanel<PullPolicyTO> panel, final IModel<PullPolicyTO> model) {\n         panel.add(new ActionLink<PullPolicyTO>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"01f77db473b741eae355702147725315f63f2239","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportDirectoryPanel.java","status":"modified","additions":85,"deletions":106,"changes":191,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,13 +34,12 @@\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -55,7 +54,6 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n /**\n@@ -86,9 +84,8 @@ protected ReportDirectoryPanel(final MultilevelPanel multiLevelPanelRef, final P\n     protected List<IColumn<ReportTO, String>> getColumns() {\n         final List<IColumn<ReportTO, String>> columns = new ArrayList<>();\n \n-        columns.add(new KeyPropertyColumn<ReportTO>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n-\n+        columns.add(new KeyPropertyColumn<ReportTO>(new StringResourceModel(\n+                \"key\", this), \"key\"));\n         columns.add(new PropertyColumn<ReportTO, String>(new StringResourceModel(\n                 \"name\", this), \"name\", \"name\"));\n \n@@ -110,117 +107,99 @@ protected List<IColumn<ReportTO, String>> getColumns() {\n         columns.add(new BooleanPropertyColumn<ReportTO>(\n                 new StringResourceModel(\"active\", this), \"active\", \"active\"));\n \n-        columns.add(new ActionColumn<ReportTO, String>(new ResourceModel(\"actions\")) {\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<ReportTO> getActions(final IModel<ReportTO> model) {\n+        final ActionsPanel<ReportTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<ReportTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                send(ReportDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                restClient.read(model.getObject().getKey()), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.REPORT_UPDATE);\n+\n+        panel.add(new ActionLink<ReportTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<ReportTO> getActions(final String componentId, final IModel<ReportTO> model) {\n-\n-                final ActionLinksPanel<ReportTO> panel = ActionLinksPanel.<ReportTO>builder().\n-                        add(new ActionLink<ReportTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n-                                target.add(modal.setContent(new ReportletDirectoryPanel(\n-                                        modal, model.getObject().getKey(), pageRef)));\n-\n-                                modal.header(new StringResourceModel(\n-                                        \"reportlet.conf\", ReportDirectoryPanel.this, Model.of(model.getObject())));\n-\n-                                MetaDataRoleAuthorizationStrategy.authorize(\n-                                        modal.getForm(), ENABLE, StandardEntitlement.RESOURCE_UPDATE);\n-\n-                                modal.show(true);\n-                            }\n-                        }, ActionLink.ActionType.COMPOSE, StandardEntitlement.REPORT_UPDATE).\n-                        add(new ActionLink<ReportTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n-                                final ReportTO clone = SerializationUtils.clone(model.getObject());\n-                                clone.setKey(null);\n-                                send(ReportDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(clone, target));\n-                            }\n-                        }, ActionLink.ActionType.CLONE, StandardEntitlement.REPORT_CREATE).\n-                        add(new ActionLink<ReportTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n-                                send(ReportDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(\n-                                                restClient.read(model.getObject().getKey()), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.REPORT_UPDATE).\n-                        add(new ActionLink<ReportTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n-                                viewTask(model.getObject(), target);\n-                            }\n-                        }, ActionLink.ActionType.VIEW, StandardEntitlement.REPORT_READ).\n-                        add(new ActionLink<ReportTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n-                                startAt.setExecutionDetail(\n-                                        model.getObject().getKey(), model.getObject().getName(), target);\n-                                startAt.toggle(target, true);\n-                            }\n-                        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.REPORT_EXECUTE).\n-                        add(new ActionLink<ReportTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n-                                final ReportTO reportTO = model.getObject();\n-                                try {\n-                                    restClient.delete(reportTO.getKey());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting {}\", reportTO.getKey(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.REPORT_DELETE).build(componentId);\n-\n-                return panel;\n+            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                final ReportTO clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                send(ReportDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(clone, target));\n             }\n+        }, ActionLink.ActionType.CLONE, StandardEntitlement.REPORT_CREATE);\n+\n+        panel.add(new ActionLink<ReportTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<ReportTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<ReportTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                target.add(modal.setContent(new ReportletDirectoryPanel(\n+                        modal, model.getObject().getKey(), pageRef)));\n \n-                return panel.add(new ActionLink<ReportTO>() {\n+                modal.header(new StringResourceModel(\n+                        \"reportlet.conf\", ReportDirectoryPanel.this, Model.of(model.getObject())));\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+                MetaDataRoleAuthorizationStrategy.authorize(\n+                        modal.getForm(), ENABLE, StandardEntitlement.RESOURCE_UPDATE);\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+                modal.show(true);\n             }\n-        });\n+        }, ActionLink.ActionType.COMPOSE, StandardEntitlement.REPORT_UPDATE);\n \n-        return columns;\n+        panel.add(new ActionLink<ReportTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                viewTask(model.getObject(), target);\n+            }\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.REPORT_READ);\n+\n+        panel.add(new ActionLink<ReportTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                startAt.setExecutionDetail(\n+                        model.getObject().getKey(), model.getObject().getName(), target);\n+                startAt.toggle(target, true);\n+            }\n+        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.REPORT_EXECUTE);\n+\n+        panel.add(new ActionLink<ReportTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                final ReportTO reportTO = model.getObject();\n+                try {\n+                    restClient.delete(reportTO.getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting {}\", reportTO.getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.REPORT_DELETE, true);\n+        return panel;\n     }\n \n     @Override"},{"sha":"eda0e97c735e2c42d6b80cb03f77ed6409bc5a54","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportExecutionDetails.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportExecutionDetails.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.client.console.tasks.ExecutionsDirectoryPanel;\n import org.apache.syncope.client.console.wicket.ajax.form.AbstractAjaxDownloadBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n@@ -80,7 +80,7 @@ protected void next(\n         }\n \n         @Override\n-        protected void addFurtherAcions(final ActionLinksPanel.Builder<ExecTO> panel, final IModel<ExecTO> model) {\n+        protected void addFurtherAcions(final ActionsPanel<ExecTO> panel, final IModel<ExecTO> model) {\n             panel.add(new ActionLink<ExecTO>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"d3969b359d068b81bed80f219ba63f045ed035bb","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportTemplateDirectoryPanel.java","status":"modified","additions":79,"deletions":87,"changes":166,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -33,10 +33,8 @@\n import org.apache.syncope.client.console.notifications.TemplateModal;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -55,6 +53,7 @@\n import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.reports.ReportTemplateDirectoryPanel.ReportTemplateProvider;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n@@ -113,96 +112,88 @@ public WizardModalPanel<ReportTemplateTO> build(\n     @Override\n     protected List<IColumn<ReportTemplateTO, String>> getColumns() {\n         List<IColumn<ReportTemplateTO, String>> columns = new ArrayList<>();\n-        columns.add(new PropertyColumn<ReportTemplateTO, String>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+        columns.add(new PropertyColumn<ReportTemplateTO, String>(new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<ReportTemplateTO> getActions(final IModel<ReportTemplateTO> model) {\n+        final ActionsPanel<ReportTemplateTO> panel = super.getActions(model);\n \n-        columns.add(new ActionColumn<ReportTemplateTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        panel.add(new ActionLink<ReportTemplateTO>() {\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+            private static final long serialVersionUID = -7978723352517770645L;\n \n             @Override\n-            public ActionLinksPanel<ReportTemplateTO> getActions(\n-                    final String componentId, final IModel<ReportTemplateTO> model) {\n-\n-                final ActionLinksPanel.Builder<ReportTemplateTO> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<ReportTemplateTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n-                        TemplateContent<ReportTemplateFormat> content =\n-                                new TemplateContent<>(model.getObject().getKey(), ReportTemplateFormat.FO);\n-                        content.setContent(\n-                                restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.FO));\n-\n-                        utilityModal.header(new ResourceModel(\"report.template.fo\", \"FO Content\"));\n-                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n-                    }\n-                }, ActionLink.ActionType.FO_EDIT, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n-\n-                panel.add(new ActionLink<ReportTemplateTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n-                        TemplateContent<ReportTemplateFormat> content =\n-                                new TemplateContent<>(model.getObject().getKey(), ReportTemplateFormat.HTML);\n-                        content.setContent(\n-                                restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.HTML));\n-\n-                        utilityModal.header(new ResourceModel(\"report.template.html\", \"HTML Content\"));\n-                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n-                    }\n-                }, ActionLink.ActionType.HTML, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n-\n-                panel.add(new ActionLink<ReportTemplateTO>() {\n-\n-                    private static final long serialVersionUID = -7978723352517770645L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n-                        TemplateContent<ReportTemplateFormat> content =\n-                                new TemplateContent<>(model.getObject().getKey(), ReportTemplateFormat.CSV);\n-                        content.setContent(\n-                                restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.CSV));\n-\n-                        utilityModal.header(new ResourceModel(\"report.template.text\", \"TEXT Content\"));\n-                        utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n-                        utilityModal.show(true);\n-                        target.add(utilityModal);\n-                    }\n-                }, ActionLink.ActionType.TEXT, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n-\n-                panel.add(new ActionLink<ReportTemplateTO>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n-                        try {\n-                            restClient.deleteTemplate(model.getObject().getKey());\n-                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                            target.add(container);\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                    getName() : e.getMessage());\n-                        }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.MAIL_TEMPLATE_DELETE);\n-\n-                return panel.build(componentId);\n+            public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n+                TemplateContent<ReportTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n+                        ReportTemplateFormat.FO);\n+                content.setContent(\n+                        restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.FO));\n+\n+                utilityModal.header(new ResourceModel(\"report.template.fo\", \"FO Content\"));\n+                utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n+                utilityModal.show(true);\n+                target.add(utilityModal);\n             }\n-        });\n-        return columns;\n+        }, ActionLink.ActionType.FO_EDIT, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n+\n+        panel.add(new ActionLink<ReportTemplateTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770645L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n+                TemplateContent<ReportTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n+                        ReportTemplateFormat.HTML);\n+                content.setContent(\n+                        restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.HTML));\n+\n+                utilityModal.header(new ResourceModel(\"report.template.html\", \"HTML Content\"));\n+                utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n+                utilityModal.show(true);\n+                target.add(utilityModal);\n+            }\n+        }, ActionLink.ActionType.HTML, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n+\n+        panel.add(new ActionLink<ReportTemplateTO>() {\n+\n+            private static final long serialVersionUID = -7978723352517770645L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n+                TemplateContent<ReportTemplateFormat> content = new TemplateContent<>(model.getObject().getKey(),\n+                        ReportTemplateFormat.CSV);\n+                content.setContent(\n+                        restClient.readTemplateFormat(model.getObject().getKey(), ReportTemplateFormat.CSV));\n+\n+                utilityModal.header(new ResourceModel(\"report.template.text\", \"TEXT Content\"));\n+                utilityModal.setContent(new TemplateContentEditorPanel(content, pageRef));\n+                utilityModal.show(true);\n+                target.add(utilityModal);\n+            }\n+        }, ActionLink.ActionType.TEXT, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n+\n+        panel.add(new ActionLink<ReportTemplateTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportTemplateTO ignore) {\n+                try {\n+                    restClient.deleteTemplate(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n+                            getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.MAIL_TEMPLATE_DELETE);\n+\n+        return panel;\n     }\n \n     @Override\n@@ -218,6 +209,7 @@ protected String paginatorRowsKey() {\n     @Override\n     protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n+\n     }\n \n     protected final class ReportTemplateProvider extends DirectoryDataProvider<ReportTemplateTO> {"},{"sha":"a5a1a6ee24b0290195afa53ff235726cf2e74295","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":71,"deletions":76,"changes":147,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -42,11 +42,10 @@\n import org.apache.syncope.client.console.panels.search.SearchClause;\n import org.apache.syncope.client.console.reports.ReportletDirectoryPanel.ReportletWrapper;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -68,7 +67,6 @@\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n /**\n@@ -123,90 +121,87 @@ public void populateItem(\n             }\n         });\n \n-        columns.add(new ActionColumn<ReportletWrapper, String>(new ResourceModel(\"actions\")) {\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<ReportletWrapper> getActions(final IModel<ReportletWrapper> model) {\n+        final ActionsPanel<ReportletWrapper> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<ReportletWrapper>() {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<ReportletWrapper> getActions(final String componentId,\n-                    final IModel<ReportletWrapper> model) {\n-\n-                final ActionLinksPanel<ReportletWrapper> panel = ActionLinksPanel.<ReportletWrapper>builder().\n-                        add(new ActionLink<ReportletWrapper>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n-                                AbstractReportletConf clone = SerializationUtils.clone(model.getObject().getConf());\n-                                clone.setName(null);\n-\n-                                send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(\n-                                                new ReportletWrapper().setConf(clone),\n-                                                target));\n-                            }\n-                        }, ActionLink.ActionType.CLONE, StandardEntitlement.REPORT_UPDATE).\n-                        add(new ActionLink<ReportletWrapper>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n-                                send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.REPORT_UPDATE).\n-                        add(new ActionLink<ReportletWrapper>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n-                                final ReportletConf reportlet = model.getObject().getConf();\n-                                try {\n-                                    final ReportTO actual = restClient.read(report);\n-                                    CollectionUtils.filter(actual.getReportletConfs(), new Predicate<ReportletConf>() {\n-\n-                                        @Override\n-                                        public boolean evaluate(final ReportletConf object) {\n-                                            return !object.getName().equals(reportlet.getName());\n-                                        }\n-                                    });\n-                                    restClient.update(actual);\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    customActionOnFinishCallback(target);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting {}\", reportlet.getName(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.REPORT_UPDATE).build(componentId);\n-\n-                return panel;\n+            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n+                ReportletDirectoryPanel.this.getTogglePanel().close(target);\n+                AbstractReportletConf clone = SerializationUtils.clone(model.getObject().getConf());\n+                clone.setName(null);\n+\n+                send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                new ReportletWrapper().setConf(clone),\n+                                target));\n             }\n+        }, ActionLink.ActionType.CLONE, StandardEntitlement.REPORT_CREATE);\n+        panel.add(new ActionLink<ReportletWrapper>() {\n \n-            @Override\n-            public ActionLinksPanel<ReportletWrapper> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<ReportletWrapper> panel = ActionLinksPanel.builder();\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                return panel.add(new ActionLink<ReportletWrapper>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n+                ReportletDirectoryPanel.this.getTogglePanel().close(target);\n+                send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.REPORT_UPDATE);\n+        panel.add(new ActionLink<ReportletWrapper>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n-                        if (target != null) {\n-                            customActionOnFinishCallback(target);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n+                final ReportletConf reportlet = model.getObject().getConf();\n+                try {\n+                    final ReportTO actual = restClient.read(report);\n+                    CollectionUtils.filter(actual.getReportletConfs(), new Predicate<ReportletConf>() {\n+\n+                        @Override\n+                        public boolean evaluate(final ReportletConf object) {\n+                            return !object.getName().equals(reportlet.getName());\n                         }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+                    });\n+                    restClient.update(actual);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    customActionOnFinishCallback(target);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting {}\", reportlet.getName(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.REPORT_DELETE, true);\n \n-        return columns;\n+        return panel;\n+    }\n+\n+    @Override\n+    public ActionsPanel<Serializable> getHeader(final String componentId) {\n+        final ActionsPanel<Serializable> panel = new ActionsPanel<>(componentId, null);\n+\n+        panel.add(new ActionLink<Serializable>() {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                if (target != null) {\n+                    customActionOnFinishCallback(target);\n+                }\n+            }\n+        }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).hideLabel();\n+        return panel;\n     }\n \n     @Override"},{"sha":"992f3fb0dc1cfb336cd17d2b685ca50a5311bb4f","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusDirectoryPanel.java","status":"modified","additions":23,"deletions":31,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -39,10 +39,9 @@\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -58,7 +57,6 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public class AnyStatusDirectoryPanel\n@@ -159,40 +157,34 @@ public void populateItem(\n                 }\n             }\n         });\n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<StatusBean, String>(new ResourceModel(\"actions\", \"\")) {\n-\n-            private static final long serialVersionUID = 3372107192677413965L;\n-\n-            @Override\n-            public ActionLinksPanel<StatusBean> getActions(\n-                    final String componentId, final IModel<StatusBean> model) {\n-\n-                final ActionLinksPanel.Builder<StatusBean> panel = ActionLinksPanel.builder();\n-\n-                panel.add(new ActionLink<StatusBean>() {\n+    @Override\n+    public ActionsPanel<StatusBean> getActions(final IModel<StatusBean> model) {\n+        final ActionsPanel<StatusBean> panel = super.getActions(model);\n \n-                    private static final long serialVersionUID = -7978723352517770645L;\n+        panel.add(new ActionLink<StatusBean>() {\n \n-                    @Override\n-                    protected boolean statusCondition(final StatusBean bean) {\n-                        return bean.getConnObjectLink() != null\n-                                && !bean.getResourceName().equalsIgnoreCase(Constants.SYNCOPE);\n-                    }\n+            private static final long serialVersionUID = -7978723352517770645L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n-                        multiLevelPanelRef.next(bean.getResourceName(),\n-                                new ConnObjectDetails(resourceRestClient.readConnObject(\n-                                        bean.getResourceName(), anyTO.getType(), anyTO.getKey())), target);\n-                        target.add(multiLevelPanelRef);\n-                    }\n-                }, ActionLink.ActionType.VIEW, StandardEntitlement.RESOURCE_GET_CONNOBJECT);\n+            @Override\n+            protected boolean statusCondition(final StatusBean bean) {\n+                return bean != null && bean.getConnObjectLink() != null\n+                        && !bean.getResourceName().equalsIgnoreCase(Constants.SYNCOPE);\n+            }\n \n-                return panel.build(componentId, model.getObject());\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n+                multiLevelPanelRef.next(bean.getResourceName(),\n+                        new ConnObjectDetails(resourceRestClient.readConnObject(\n+                                bean.getResourceName(), anyTO.getType(), anyTO.getKey())), target);\n+                target.add(multiLevelPanelRef);\n+                AnyStatusDirectoryPanel.this.getTogglePanel().close(target);\n             }\n-        });\n-        return columns;\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.RESOURCE_GET_CONNOBJECT);\n+\n+        return panel;\n     }\n \n     @Override"},{"sha":"3642529365afc5e7bff89ccd96d92366dcaaaea2","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ExecutionsDirectoryPanel.java","status":"modified","additions":33,"deletions":57,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -35,12 +34,11 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n import org.apache.syncope.client.console.rest.ExecutionRestClient;\n import org.apache.syncope.client.console.tasks.ExecutionsDirectoryPanel.ExecProvider;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -51,7 +49,6 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public abstract class ExecutionsDirectoryPanel\n@@ -107,70 +104,49 @@ protected List<IColumn<ExecTO, String>> getColumns() {\n         columns.add(new DatePropertyColumn<ExecTO>(new StringResourceModel(\"end\", this), \"end\", \"end\"));\n \n         columns.add(new PropertyColumn<ExecTO, String>(new StringResourceModel(\"status\", this), \"status\", \"status\"));\n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<ExecTO, String>(new ResourceModel(\"actions\")) {\n+    @Override\n+    public ActionsPanel<ExecTO> getActions(final IModel<ExecTO> model) {\n+        final ActionsPanel<ExecTO> panel = super.getActions(model);\n+        final ExecTO taskExecutionTO = model.getObject();\n \n-            private static final long serialVersionUID = -3503023501954863131L;\n+        panel.add(new ActionLink<ExecTO>() {\n \n-            @Override\n-            public ActionLinksPanel<ExecTO> getActions(final String componentId, final IModel<ExecTO> model) {\n-                final ExecTO taskExecutionTO = model.getObject();\n-\n-                final ActionLinksPanel.Builder<ExecTO> panel = ActionLinksPanel.<ExecTO>builder().\n-                        add(new ActionLink<ExecTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n-                                next(new StringResourceModel(\"execution.view\", ExecutionsDirectoryPanel.this, model).\n-                                        getObject(), new ExecMessage(model.getObject().getMessage()), target);\n-                            }\n-                        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ).\n-                        add(new ActionLink<ExecTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n-                                try {\n-                                    restClient.deleteExecution(taskExecutionTO.getKey());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                } catch (SyncopeClientException scce) {\n-                                    SyncopeConsoleSession.get().error(scce.getMessage());\n-                                }\n-                                target.add(ExecutionsDirectoryPanel.this);\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE);\n-\n-                addFurtherAcions(panel, model);\n-\n-                return panel.build(componentId, model.getObject());\n-            }\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<Serializable>() {\n+            public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n+                ExecutionsDirectoryPanel.this.getTogglePanel().close(target);\n+                next(new StringResourceModel(\"execution.view\", ExecutionsDirectoryPanel.this, model).\n+                        getObject(), new ExecMessage(model.getObject().getMessage()), target);\n+            }\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ);\n+        panel.add(new ActionLink<ExecTO>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n+                try {\n+                    restClient.deleteExecution(taskExecutionTO.getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                } catch (SyncopeClientException scce) {\n+                    SyncopeConsoleSession.get().error(scce.getMessage());\n+                }\n+                target.add(ExecutionsDirectoryPanel.this);\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ExecutionsDirectoryPanel.this.getTogglePanel().close(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE, true);\n \n-        return columns;\n+        addFurtherAcions(panel, model);\n+\n+        return panel;\n     }\n \n-    protected void addFurtherAcions(final ActionLinksPanel.Builder<ExecTO> panel, final IModel<ExecTO> model) {\n+    protected void addFurtherAcions(final ActionsPanel<ExecTO> panel, final IModel<ExecTO> model) {\n     }\n \n     @Override"},{"sha":"eb859a646813ddecb887e3431d6df1d273e22dc0","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/NotificationTaskDirectoryPanel.java","status":"modified","additions":66,"deletions":93,"changes":159,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -30,13 +30,12 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -48,7 +47,6 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public abstract class NotificationTaskDirectoryPanel\n@@ -83,7 +81,7 @@ protected List<IColumn<NotificationTaskTO, String>> getColumns() {\n         final List<IColumn<NotificationTaskTO, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<NotificationTaskTO>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+                new StringResourceModel(\"key\", this), \"key\"));\n \n         columns.add(new PropertyColumn<NotificationTaskTO, String>(\n                 new StringResourceModel(\"sender\", this), \"sender\", \"sender\"));\n@@ -92,7 +90,7 @@ protected List<IColumn<NotificationTaskTO, String>> getColumns() {\n                 new StringResourceModel(\"subject\", this), \"subject\", \"subject\"));\n \n         columns.add(new CollectionPropertyColumn<NotificationTaskTO>(\n-                new StringResourceModel(\"recipients\", this), \"recipients\", \"recipients\"));\n+                new StringResourceModel(\"recipients\", this), \"recipients\"));\n \n         columns.add(new DatePropertyColumn<NotificationTaskTO>(\n                 new StringResourceModel(\"start\", this), \"start\", \"start\"));\n@@ -102,105 +100,80 @@ protected List<IColumn<NotificationTaskTO, String>> getColumns() {\n \n         columns.add(new PropertyColumn<NotificationTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this), \"latestExecStatus\", \"latestExecStatus\"));\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<NotificationTaskTO> getActions(final IModel<NotificationTaskTO> model) {\n+        final ActionsPanel<NotificationTaskTO> panel = super.getActions(model);\n+        final NotificationTaskTO taskTO = model.getObject();\n \n-        columns.add(new ActionColumn<NotificationTaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        panel.add(new ActionLink<NotificationTaskTO>() {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<NotificationTaskTO> getActions(\n-                    final String componentId, final IModel<NotificationTaskTO> model) {\n-\n-                final NotificationTaskTO taskTO = model.getObject();\n-\n-                final ActionLinksPanel<NotificationTaskTO> panel = ActionLinksPanel.<NotificationTaskTO>builder().\n-                        add(new ActionLink<NotificationTaskTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n-                                viewTask(taskTO, target);\n-                            }\n-                        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ).\n-                        add(new ActionLink<NotificationTaskTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n-                                viewMailBody(MailTemplateFormat.TEXT, taskTO.getTextBody(), target);\n-                            }\n-                        }, ActionLink.ActionType.TEXT, StandardEntitlement.TASK_READ).\n-                        add(new ActionLink<NotificationTaskTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n-                                viewMailBody(MailTemplateFormat.HTML, taskTO.getHtmlBody(), target);\n-                            }\n-                        }, ActionLink.ActionType.HTML, StandardEntitlement.TASK_READ).\n-                        add(new ActionLink<NotificationTaskTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n-                                try {\n-                                    restClient.startExecution(taskTO.getKey(), null);\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                    LOG.error(\"While running {}\", taskTO.getKey(), e);\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.TASK_EXECUTE).\n-                        add(new ActionLink<NotificationTaskTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n-                                try {\n-                                    restClient.delete(taskTO.getKey(), NotificationTaskTO.class);\n-                                    updateResultTable(target);\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting {}\", taskTO.getKey(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE).build(componentId);\n-\n-                return panel;\n+            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n+                viewTask(taskTO, target);\n             }\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ);\n+        panel.add(new ActionLink<NotificationTaskTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<NotificationTaskTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<NotificationTaskTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n+                viewMailBody(MailTemplateFormat.TEXT, taskTO.getTextBody(), target);\n+            }\n+        }, ActionLink.ActionType.TEXT, StandardEntitlement.TASK_READ);\n+        panel.add(new ActionLink<NotificationTaskTO>() {\n \n-                return panel.add(new ActionLink<NotificationTaskTO>() {\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n+                viewMailBody(MailTemplateFormat.HTML, taskTO.getHtmlBody(), target);\n+            }\n+        }, ActionLink.ActionType.HTML, StandardEntitlement.TASK_READ);\n+        panel.add(new ActionLink<NotificationTaskTO>() {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final NotificationTaskTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n+                try {\n+                    restClient.startExecution(taskTO.getKey(), null);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                    LOG.error(\"While running {}\", taskTO.getKey(), e);\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.TASK_EXECUTE);\n+        panel.add(new ActionLink<NotificationTaskTO>() {\n \n-        return columns;\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n+                try {\n+                    restClient.delete(taskTO.getKey(), NotificationTaskTO.class);\n+                    updateResultTable(target);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting {}\", taskTO.getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE, true);\n+\n+        return panel;\n     }\n \n     @Override\n@@ -237,7 +210,7 @@ public NotificationTasksProvider(\n                 final String entityKey,\n                 final int paginatorRows) {\n \n-            super(paginatorRows, TaskType.NOTIFICATION , restClient);\n+            super(paginatorRows, TaskType.NOTIFICATION, restClient);\n             this.notification = notification;\n             this.anyTypeKind = anyTypeKind;\n             this.entityKey = entityKey;"},{"sha":"1c653d061ddd6836ae32a89309e4c43392ca3c57","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel.java","status":"modified","additions":49,"deletions":72,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -30,13 +30,12 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -46,7 +45,6 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n /**\n@@ -74,7 +72,7 @@ protected List<IColumn<PropagationTaskTO, String>> getColumns() {\n         final List<IColumn<PropagationTaskTO, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<PropagationTaskTO>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+                new StringResourceModel(\"key\", this), \"key\"));\n \n         columns.add(new PropertyColumn<PropagationTaskTO, String>(new StringResourceModel(\n                 \"operation\", this), \"operation\", \"operation\"));\n@@ -101,86 +99,65 @@ protected List<IColumn<PropagationTaskTO, String>> getColumns() {\n \n         columns.add(new PropertyColumn<PropagationTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this), \"latestExecStatus\", \"latestExecStatus\"));\n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<PropagationTaskTO, String>(new ResourceModel(\"actions\")) {\n+    @Override\n+    public ActionsPanel<PropagationTaskTO> getActions(final IModel<PropagationTaskTO> model) {\n+        final ActionsPanel<PropagationTaskTO> panel = super.getActions(model);\n+        final PropagationTaskTO taskTO = model.getObject();\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+        panel.add(new ActionLink<PropagationTaskTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<PropagationTaskTO> getActions(\n-                    final String componentId, final IModel<PropagationTaskTO> model) {\n-\n-                final PropagationTaskTO taskTO = model.getObject();\n-\n-                final ActionLinksPanel<PropagationTaskTO> panel = ActionLinksPanel.<PropagationTaskTO>builder().\n-                        add(new ActionLink<PropagationTaskTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n-                                viewTask(taskTO, target);\n-                            }\n-                        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ).\n-                        add(new ActionLink<PropagationTaskTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n-                                try {\n-                                    restClient.startExecution(taskTO.getKey(), null);\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                    LOG.error(\"While running {}\", taskTO.getKey(), e);\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.TASK_EXECUTE).\n-                        add(new ActionLink<PropagationTaskTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n-                                try {\n-                                    restClient.delete(taskTO.getKey(), PropagationTaskTO.class);\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting {}\", taskTO.getKey(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE).build(componentId);\n-\n-                return panel;\n+            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n+                PropagationTaskDirectoryPanel.this.getTogglePanel().close(target);\n+                viewTask(taskTO, target);\n             }\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ);\n+\n+        panel.add(new ActionLink<PropagationTaskTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<PropagationTaskTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<PropagationTaskTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n+                try {\n+                    restClient.startExecution(taskTO.getKey(), null);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                    LOG.error(\"While running {}\", taskTO.getKey(), e);\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.TASK_EXECUTE);\n \n-                return panel.add(new ActionLink<PropagationTaskTO>() {\n+        panel.add(new ActionLink<PropagationTaskTO>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final PropagationTaskTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n+                try {\n+                    restClient.delete(taskTO.getKey(), PropagationTaskTO.class);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                    PropagationTaskDirectoryPanel.this.getTogglePanel().close(target);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting {}\", taskTO.getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     @Override"},{"sha":"6634736610df5f98ae10197bb48aa0543c9111ec","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -72,7 +72,7 @@ protected List<IColumn<T, String>> getFieldColumns() {\n         List<IColumn<T, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<T>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+                new StringResourceModel(\"key\", this), \"key\"));\n \n         columns.add(new PropertyColumn<T, String>(\n                 new StringResourceModel(\"name\", this), \"name\", \"name\"));"},{"sha":"9af12512e0025fc9fce85ec4d24dc04ac8676f6b","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PullTaskDirectoryPanel.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -53,21 +53,17 @@ protected ProvisioningTasksProvider<PullTaskTO> dataProvider() {\n     }\n \n     @Override\n-    protected void addFurtherActions(final ActionLinksPanel.Builder<PullTaskTO> panel, final IModel<PullTaskTO> model) {\n+    protected void addFurtherActions(final ActionsPanel<PullTaskTO> panel, final IModel<PullTaskTO> model) {\n         panel.add(new ActionLink<PullTaskTO>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final PullTaskTO ignore) {\n+                PullTaskDirectoryPanel.this.getTogglePanel().close(target);\n                 templates.setTargetObject(model.getObject());\n                 templates.toggle(target, true);\n             }\n-\n-            @Override\n-            public boolean isIndicatorEnabled() {\n-                return false;\n-            }\n-        }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.TASK_UPDATE);\n+        }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.TASK_UPDATE).disableIndicator();\n     }\n }"},{"sha":"f09c0dcf8095231c41912d96a84de1fc109466e9","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":91,"deletions":96,"changes":187,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,14 +34,13 @@\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -61,7 +60,6 @@\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n /**\n@@ -74,8 +72,8 @@\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    private static final String GROUP_MEMBER_PROVISION_TASKJOB =\n-            \"org.apache.syncope.core.provisioning.java.job.GroupMemberProvisionTaskJobDelegate\";\n+    private static final String GROUP_MEMBER_PROVISION_TASKJOB\n+            = \"org.apache.syncope.core.provisioning.java.job.GroupMemberProvisionTaskJobDelegate\";\n \n     protected final Class<T> reference;\n \n@@ -131,7 +129,7 @@ protected List<IColumn<T, String>> getFieldColumns() {\n         final List<IColumn<T, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<T>(\n-                new StringResourceModel(\"key\", this), \"key\", \"key\"));\n+                new StringResourceModel(\"key\", this), \"key\"));\n \n         columns.add(new PropertyColumn<T, String>(\n                 new StringResourceModel(\"name\", this), \"name\", \"name\"));\n@@ -179,113 +177,110 @@ protected final List<IColumn<T, String>> getColumns() {\n         final List<IColumn<T, String>> columns = new ArrayList<>();\n \n         columns.addAll(getFieldColumns());\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<T> getActions(final IModel<T> model) {\n+        final ActionsPanel<T> panel = super.getActions(model);\n+        final T taskTO = model.getObject();\n \n-        columns.add(new ActionColumn<T, String>(new ResourceModel(\"actions\")) {\n+        panel.add(new ActionLink<T>() {\n \n-            private static final long serialVersionUID = 2054811145491901166L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<T> getActions(final String componentId, final IModel<T> model) {\n-                final T taskTO = model.getObject();\n+            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                SchedTaskDirectoryPanel.this.getTogglePanel().close(target);\n+                viewTask(taskTO, target);\n+            }\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ);\n \n-                ActionLinksPanel.Builder<T> panel = ActionLinksPanel.<T>builder().add(new ActionLink<T>() {\n+        panel.add(new ActionLink<T>() {\n \n-                    private static final long serialVersionUID = -3722207913631435501L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                        viewTask(taskTO, target);\n-                    }\n-                }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ).add(new ActionLink<T>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                        send(SchedTaskDirectoryPanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<>(\n-                                        restClient.readSchedTask(reference, model.getObject().getKey()),\n-                                        target).setResourceModel(\n-                                        new StringResourceModel(\"inner.task.edit\",\n-                                                SchedTaskDirectoryPanel.this,\n-                                                Model.of(Pair.of(\n-                                                        ActionLink.ActionType.EDIT, model.getObject())))));\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.TASK_UPDATE,\n-                        !GROUP_MEMBER_PROVISION_TASKJOB.equals(taskTO.getJobDelegateClassName())).\n-                        add(new ActionLink<T>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                                final T clone = SerializationUtils.clone(model.getObject());\n-                                clone.setKey(null);\n-                                send(SchedTaskDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(clone, target).setResourceModel(\n-                                                new StringResourceModel(\"inner.task.clone\",\n-                                                        SchedTaskDirectoryPanel.this,\n-                                                        Model.of(Pair.of(\n-                                                                ActionLink.ActionType.CLONE, model.getObject())))));\n-                            }\n-                        }, ActionLink.ActionType.CLONE, StandardEntitlement.TASK_CREATE).add(new ActionLink<T>() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                        startAt.setExecutionDetail(\n-                                model.getObject().getKey(), model.getObject().getName(), target);\n-                        startAt.toggle(target, true);\n-                    }\n-                }, ActionLink.ActionType.EXECUTE, StandardEntitlement.TASK_EXECUTE,\n-                        !GROUP_MEMBER_PROVISION_TASKJOB.equals(taskTO.getJobDelegateClassName())).\n-                        add(new ActionLink<T>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                                try {\n-                                    restClient.delete(taskTO.getKey(), reference);\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                    LOG.error(\"While deleting propagation task {}\", taskTO.getKey(), e);\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE);\n-\n-                addFurtherActions(panel, model);\n-\n-                return panel.build(componentId, model.getObject());\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                SchedTaskDirectoryPanel.this.getTogglePanel().close(target);\n+                send(SchedTaskDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(\n+                                restClient.readSchedTask(reference, model.getObject().getKey()),\n+                                target).setResourceModel(\n+                                new StringResourceModel(\"inner.task.edit\",\n+                                        SchedTaskDirectoryPanel.this,\n+                                        Model.of(Pair.of(\n+                                                ActionLink.ActionType.EDIT, model.getObject())))));\n             }\n \n             @Override\n-            public ActionLinksPanel<T> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder();\n+            protected boolean statusCondition(final T modelObject) {\n+                return !GROUP_MEMBER_PROVISION_TASKJOB.equals(taskTO.getJobDelegateClassName());\n+            }\n+        }, ActionLink.ActionType.EDIT, StandardEntitlement.TASK_UPDATE);\n \n-                return panel.add(new ActionLink<T>() {\n+        panel.add(new ActionLink<T>() {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                SchedTaskDirectoryPanel.this.getTogglePanel().close(target);\n+                final T clone = SerializationUtils.clone(model.getObject());\n+                clone.setKey(null);\n+                send(SchedTaskDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(clone, target).setResourceModel(\n+                                new StringResourceModel(\"inner.task.clone\",\n+                                        SchedTaskDirectoryPanel.this,\n+                                        Model.of(Pair.of(\n+                                                ActionLink.ActionType.CLONE, model.getObject())))));\n             }\n-        });\n+        }, ActionLink.ActionType.CLONE, StandardEntitlement.TASK_CREATE);\n \n-        return columns;\n+        panel.add(new ActionLink<T>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                SchedTaskDirectoryPanel.this.getTogglePanel().close(target);\n+                startAt.setExecutionDetail(\n+                        model.getObject().getKey(), model.getObject().getName(), target);\n+                startAt.toggle(target, true);\n+            }\n+\n+            @Override\n+            protected boolean statusCondition(final T modelObject) {\n+                return !GROUP_MEMBER_PROVISION_TASKJOB.equals(taskTO.getJobDelegateClassName());\n+            }\n+        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.TASK_EXECUTE);\n+\n+        addFurtherActions(panel, model);\n+\n+        panel.add(new ActionLink<T>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                try {\n+                    restClient.delete(taskTO.getKey(), reference);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                    SchedTaskDirectoryPanel.this.getTogglePanel().close(target);\n+                } catch (SyncopeClientException e) {\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                    LOG.error(\"While deleting propagation task {}\", taskTO.getKey(), e);\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE, true);\n+\n+        return panel;\n     }\n \n-    protected void addFurtherActions(final ActionLinksPanel.Builder<T> panel, final IModel<T> model) {\n+    protected void addFurtherActions(final ActionsPanel<T> panel, final IModel<T> model) {\n     }\n \n     @Override"},{"sha":"d2ba68246efb26cfad2acccef8fa6a4c799ee027","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -38,7 +38,7 @@\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -92,8 +92,8 @@ protected List<ResourceTO> load() {\n         }\n     };\n \n-    private final LoadableDetachableModel<Map<String, List<ConnInstanceTO>>> connModel =\n-            new LoadableDetachableModel<Map<String, List<ConnInstanceTO>>>() {\n+    private final LoadableDetachableModel<Map<String, List<ConnInstanceTO>>> connModel\n+            = new LoadableDetachableModel<Map<String, List<ConnInstanceTO>>>() {\n \n         private static final long serialVersionUID = 5275935387613157432L;\n \n@@ -116,8 +116,8 @@ protected Map<String, List<ConnInstanceTO>> load() {\n         }\n     };\n \n-    private final LoadableDetachableModel<Pair<List<URI>, List<URI>>> csModel =\n-            new LoadableDetachableModel<Pair<List<URI>, List<URI>>>() {\n+    private final LoadableDetachableModel<Pair<List<URI>, List<URI>>> csModel\n+            = new LoadableDetachableModel<Pair<List<URI>, List<URI>>>() {\n \n         private static final long serialVersionUID = 5275935387613157433L;\n \n@@ -167,8 +167,7 @@ public void onClose(final AjaxRequestTarget target) {\n         // -----------------------------------------\n         // Add Zoom panel\n         // -----------------------------------------\n-        final ActionLinksPanel.Builder<Serializable> zoomActionPanel = ActionLinksPanel.builder();\n-        zoomActionPanel.setDisableIndicator(true);\n+        final ActionsPanel<Serializable> zoomActionPanel = new ActionsPanel<>(\"zoom\", null);\n \n         zoomActionPanel.add(new ActionLink<Serializable>() {\n \n@@ -178,17 +177,18 @@ public void onClose(final AjaxRequestTarget target) {\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.appendJavaScript(\"zoomIn($('#drawing')[0]);\");\n             }\n-        }, ActionLink.ActionType.ZOOM_IN, StandardEntitlement.RESOURCE_LIST).add(new ActionLink<Serializable>() {\n+        }, ActionLink.ActionType.ZOOM_IN, StandardEntitlement.RESOURCE_LIST).disableIndicator().hideLabel();\n+        zoomActionPanel.add(new ActionLink<Serializable>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.appendJavaScript(\"zoomOut($('#drawing')[0]);\");\n             }\n-        }, ActionLink.ActionType.ZOOM_OUT, StandardEntitlement.RESOURCE_LIST);\n+        }, ActionLink.ActionType.ZOOM_OUT, StandardEntitlement.RESOURCE_LIST).disableIndicator().hideLabel();\n \n-        body.add(zoomActionPanel.build(\"zoom\"));\n+        body.add(zoomActionPanel);\n         // -----------------------------------------\n \n         // -----------------------------------------"},{"sha":"dff34e69fedd6125985939238a5ae9737fe1eb05","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -76,7 +76,7 @@ public class TopologyTogglePanel extends TogglePanel<Serializable> {\n     protected final BaseModal<Serializable> provisionModal;\n \n     public TopologyTogglePanel(final String id, final PageReference pageRef) {\n-        super(id, pageRef);\n+        super(id, \"topologyTogglePanel\", pageRef);\n \n         modal.size(Modal.Size.Large);\n         setFooterVisibility(false);"},{"sha":"e1ec878e83282bd05c32ffce701aaef9bdd4195e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ActionColumn.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/018fa9771adee2788be0ba3357c31cdc5da17cba/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/018fa9771adee2788be0ba3357c31cdc5da17cba/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FActionColumn.java?ref=018fa9771adee2788be0ba3357c31cdc5da17cba","patch":"@@ -1,50 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n-\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.IModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public abstract class ActionColumn<T, S> extends AbstractColumn<T, S> {\n-\n-    private static final long serialVersionUID = 7955560320949560725L;\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(ActionColumn.class);\n-\n-    public ActionColumn(final IModel<String> displayModel) {\n-        super(displayModel);\n-    }\n-\n-    @Override\n-    public String getCssClass() {\n-        return \"action\";\n-    }\n-\n-    @Override\n-    public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n-        item.add(getActions(componentId, rowModel));\n-    }\n-\n-    public abstract ActionLinksPanel<?> getActions(final String componentId, final IModel<T> rowModel);\n-}"},{"sha":"4afa9eaa7ed229a54b7eaff804c3d1bea506530c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AjaxFallbackDataTable.java","status":"modified","additions":49,"deletions":2,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -18,8 +18,15 @@\n  */\n package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n \n+import java.io.Serializable;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.navigation.paging.AjaxDataNavigationToolbar;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.sort.AjaxFallbackOrderByBorder;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackHeadersToolbar;\n@@ -33,16 +40,20 @@\n import org.apache.wicket.markup.repeater.OddEvenItem;\n import org.apache.wicket.model.IModel;\n \n-public class AjaxFallbackDataTable<T, S> extends DataTable<T, S> {\n+public class AjaxFallbackDataTable<T extends Serializable, S> extends DataTable<T, S> {\n \n     private static final long serialVersionUID = 6861105496141602937L;\n \n+    private ActionLinksTogglePanel<T> togglePanel;\n+\n     public AjaxFallbackDataTable(final String id, final List<? extends IColumn<T, S>> columns,\n             final ISortableDataProvider<T, S> dataProvider, final int rowsPerPage, final WebMarkupContainer container) {\n         super(id, columns, dataProvider, rowsPerPage);\n         setOutputMarkupId(true);\n         setVersioned(false);\n \n+        togglePanel = getTogglePanel();\n+\n         addTopToolbar(new AjaxFallbackHeadersToolbar<S>(this, dataProvider) {\n \n             private static final long serialVersionUID = 7406306172424359609L;\n@@ -90,8 +101,44 @@ protected void onAjaxClick(final AjaxRequestTarget target) {\n         addBottomToolbar(new NoRecordsToolbar(this));\n     }\n \n+    protected ActionsPanel<T> getActions(final IModel<T> model) {\n+        return null;\n+    }\n+\n+    protected ActionLinksTogglePanel<T> getTogglePanel() {\n+        return null;\n+    }\n+\n     @Override\n     protected Item<T> newRowItem(final String id, final int index, final IModel<T> model) {\n-        return new OddEvenItem<>(id, index, model);\n+        final OddEvenItem<T> item = new OddEvenItem<>(id, index, model);\n+\n+        if (togglePanel != null) {\n+            final ActionsPanel<T> actions = getActions(model);\n+\n+            if (actions != null && !actions.isEmpty()) {\n+                item.add(new AttributeModifier(\"style\", \"cursor: pointer;\"));\n+                item.add(new AjaxEventBehavior(Constants.ON_CLICK) {\n+\n+                    private static final long serialVersionUID = 1L;\n+\n+                    @Override\n+                    protected String findIndicatorId() {\n+                        return StringUtils.EMPTY;\n+                    }\n+\n+                    @Override\n+                    protected void onEvent(final AjaxRequestTarget target) {\n+                        if (target.getLastFocusedElementId() == null\n+                                || (!target.getLastFocusedElementId().startsWith(\"check\")\n+                                && !target.getLastFocusedElementId().startsWith(\"groupselector\"))) {\n+                            togglePanel.toggleWithContent(target, getActions(model), model.getObject());\n+                        }\n+                    }\n+                });\n+            }\n+        }\n+\n+        return item;\n     }\n }"},{"sha":"eaac4dd58e3a63c44e95dccb83b272548a478ab7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPropertyColumn.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -33,9 +33,8 @@\n \n     public CollectionPropertyColumn(\n             final IModel<String> displayModel,\n-            final String sortProperty,\n             final String propertyExpression) {\n-        super(displayModel, sortProperty, propertyExpression);\n+        super(displayModel, propertyExpression);\n     }\n \n     @Override"},{"sha":"3773712fe4b6e46fc6b445a23ddbf7e474cefdd5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/KeyPropertyColumn.java","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FKeyPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FKeyPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FKeyPropertyColumn.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -35,8 +36,12 @@\n \n     private static final long serialVersionUID = 3527840552172947705L;\n \n-    public KeyPropertyColumn(final IModel<String> displayModel, final String sortProperty,\n-            final String propertyExpression) {\n+    public KeyPropertyColumn(final IModel<String> displayModel, final String propertyExpression) {\n+        super(displayModel, propertyExpression);\n+    }\n+\n+    public KeyPropertyColumn(\n+            final IModel<String> displayModel, final String sortProperty, final String propertyExpression) {\n \n         super(displayModel, sortProperty, propertyExpression);\n     }\n@@ -57,4 +62,9 @@ public String getCssClass() {\n         return \"keyColumn\";\n     }\n \n+    @Override\n+    public Component getHeader(final String componentId) {\n+        return super.getHeader(componentId).setEnabled(false).setVisible(false);\n+    }\n+\n }"},{"sha":"ab1241324130e8d27c639e3cb283c9d2f5c010d8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/Action.java","status":"added","additions":176,"deletions":0,"changes":176,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAction.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,176 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.model.Model;\n+\n+/**\n+ * Action link basic details.\n+ *\n+ * @param <T> model object type.\n+ */\n+public final class Action<T extends Serializable> implements Serializable {\n+\n+    private static final long serialVersionUID = -7989237020377623993L;\n+\n+    private final ActionLink<T> link;\n+\n+    private final ActionLink.ActionType type;\n+\n+    private String entitlements;\n+\n+    private boolean onConfirm;\n+\n+    private boolean visibleLabel;\n+\n+    private Model<String> label;\n+\n+    private Model<String> title;\n+\n+    private Model<String> alt;\n+\n+    private Model<String> icon;\n+\n+    private boolean indicator;\n+\n+    public Action(final ActionLink<T> link, final ActionLink.ActionType type) {\n+        this.link = link;\n+        this.type = type;\n+        this.entitlements = StringUtils.EMPTY;\n+        this.onConfirm = false;\n+        this.visibleLabel = true;\n+        this.label = null;\n+        this.title = null;\n+        this.alt = null;\n+        this.icon = null;\n+        this.indicator = true;\n+    }\n+\n+    public ActionLink<T> getLink() {\n+        return link;\n+    }\n+\n+    public ActionLink.ActionType getType() {\n+        return type;\n+    }\n+\n+    public String getEntitlements() {\n+        return entitlements;\n+    }\n+\n+    public boolean isOnConfirm() {\n+        return onConfirm;\n+    }\n+\n+    public Action<T> setEntitlements(final String entitlements) {\n+        this.entitlements = entitlements;\n+        return this;\n+    }\n+\n+    public Action<T> setOnConfirm(final boolean onConfirm) {\n+        this.onConfirm = onConfirm;\n+        return this;\n+    }\n+\n+    public Action<T> hideLabel() {\n+        this.visibleLabel = false;\n+        return this;\n+    }\n+\n+    public boolean isVisibleLabel() {\n+        return visibleLabel;\n+    }\n+\n+    /**\n+     * Override default action label.\n+     *\n+     * @param label new action label;\n+     * @return updated action.\n+     */\n+    public Action<T> setLabel(final Model<String> label) {\n+        this.label = label;\n+        return this;\n+    }\n+\n+    public Model<String> getLabel() {\n+        return label;\n+    }\n+\n+    /**\n+     * Override default action title.\n+     *\n+     * @param title new action title;\n+     * @return updated action.\n+     */\n+    public Action<T> setTitleI(final Model<String> title) {\n+        this.title = title;\n+        return this;\n+    }\n+\n+    public Model<String> getTitle() {\n+        return title;\n+    }\n+\n+    /**\n+     * Override default action icon text name.\n+     *\n+     * @param alt action icon text name;\n+     * @return updated action.\n+     */\n+    public Action<T> setAlt(final Model<String> alt) {\n+        this.alt = alt;\n+        return this;\n+    }\n+\n+    public Model<String> getAlt() {\n+        return alt;\n+    }\n+\n+    /**\n+     * Override default action css class.\n+     *\n+     * @param icon new action class;\n+     * @return updated action.\n+     */\n+    public Action<T> setIcon(final Model<String> icon) {\n+        this.icon = icon;\n+        return this;\n+    }\n+\n+    public Model<String> getIcon() {\n+        return icon;\n+    }\n+\n+    /**\n+     * Override disable AJAX indicator.\n+     *\n+     * @return updated action.\n+     */\n+    public Action<T> disableIndicator() {\n+        this.indicator = false;\n+        return this;\n+    }\n+\n+    public boolean hasIndicator() {\n+        return indicator;\n+    }\n+\n+}"},{"sha":"c90ef37c4fe0a07cb1abe494975d6c10919c542d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -58,7 +58,7 @@ public enum ActionType {\n         LAYOUT_EDIT(\"read\"),\n         RESET(\"update\"),\n         ENABLE(\"update\"),\n-        NOT_FOND(\"read\"),\n+        NOT_FOUND(\"read\"),\n         VIEW(\"view\"),\n         MEMBERS(\"members\"),\n         SEARCH(\"search\"),"},{"sha":"c9a632d96fb70c7474510cdf03f693fbd7bf42b7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"removed","additions":0,"deletions":1459,"changes":1459,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/018fa9771adee2788be0ba3357c31cdc5da17cba/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/018fa9771adee2788be0ba3357c31cdc5da17cba/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=018fa9771adee2788be0ba3357c31cdc5da17cba","patch":"@@ -1,1459 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.markup.html.form;\n-\n-import java.io.Serializable;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Map.Entry;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.client.console.wicket.markup.html.link.VeilPopupSettings;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n-import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n-import org.apache.wicket.markup.html.panel.Fragment;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-\n-/**\n- * This empty class must exist because there not seems to be alternative to provide specialized HTML for edit links.\n- *\n- * @param <T> model object type.\n- */\n-public final class ActionLinksPanel<T extends Serializable> extends Panel {\n-\n-    private static final long serialVersionUID = 322966537010107771L;\n-\n-    private final IModel<T> model;\n-\n-    private boolean disableIndicator = false;\n-\n-    private ActionLinksPanel(final String componentId, final IModel<T> model) {\n-        super(componentId, model);\n-        this.model = model;\n-\n-        setOutputMarkupId(true);\n-\n-        super.add(new Fragment(\"panelClaim\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelManageResources\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelManageUsers\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelMapping\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelMustChangePassword\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelSetLatestSyncToken\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelRemoveSyncToken\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelClone\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelTemplate\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelTypeExtensions\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelFoEdit\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelHtml\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelText\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelCompose\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelLayoutEdit\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelReset\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelEnable\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelNotFound\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelView\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelMembers\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelSearch\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelDelete\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelExecute\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelPasswordReset\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelDryRun\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelSelect\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelClose\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelExport\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelExportCSV\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelExportHTML\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelExportPDF\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelExportRTF\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelExportXML\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelSuspend\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelReactivate\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelReload\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelChangeView\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelUnlink\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelLink\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelUnassign\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelAssign\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelDeprovision\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelProvision\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelDeprovisionMembers\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelProvisionMembers\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelPropagationTasks\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelNotificationTasks\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelZoomIn\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelZoomOut\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelWorkflowModeler\", \"emptyFragment\", this));\n-    }\n-\n-    public ActionLinksPanel<T> add(\n-            final ActionLink<T> link,\n-            final ActionLink.ActionType type,\n-            final String entitlements,\n-            final boolean enabled) {\n-\n-        Fragment fragment = null;\n-\n-        switch (type) {\n-\n-            case CLAIM:\n-                fragment = new Fragment(\"panelClaim\", \"fragmentClaim\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"claimLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case MANAGE_RESOURCES:\n-                fragment = new Fragment(\"panelManageResources\", \"fragmentManageResources\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"manageResourcesLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610291L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case MANAGE_USERS:\n-                fragment = new Fragment(\"panelManageUsers\", \"fragmentManageUsers\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"manageUsersLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610292L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case MANAGE_GROUPS:\n-                fragment = new Fragment(\"panelManageGroups\", \"fragmentManageGroups\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"manageGroupsLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610293L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case MAPPING:\n-                fragment = new Fragment(\"panelMapping\", \"fragmentMapping\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"mappingLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case MUSTCHANGEPASSWORD:\n-                fragment = new Fragment(\"panelMustChangePassword\", \"fragmentMustChangePassword\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"MustChangePasswordLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case SET_LATEST_SYNC_TOKEN:\n-                fragment = new Fragment(\"panelSetLatestSyncToken\", \"fragmentSetLatestSyncToken\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"setLatestSyncTokenLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case REMOVE_SYNC_TOKEN:\n-                fragment = new Fragment(\"panelRemoveSyncToken\", \"fragmentRemoveSyncToken\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"removeSyncTokenLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case CLONE:\n-                fragment = new Fragment(\"panelClone\", \"fragmentClone\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"cloneLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case CREATE:\n-                fragment = new Fragment(\"panelCreate\", \"fragmentCreate\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"createLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case RESET:\n-                fragment = new Fragment(\"panelReset\", \"fragmentReset\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"resetLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610290L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case TEMPLATE:\n-                fragment = new Fragment(\"panelTemplate\", \"fragmentTemplate\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"templateLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case EDIT:\n-                fragment = new Fragment(\"panelEdit\", \"fragmentEdit\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"editLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case TYPE_EXTENSIONS:\n-                fragment = new Fragment(\"panelTypeExtensions\", \"fragmentTypeExtensions\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"typeExtensionsLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case FO_EDIT:\n-                fragment = new Fragment(\"panelFoEdit\", \"fragmentFoEdit\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"foEditLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case HTML:\n-                fragment = new Fragment(\"panelHtml\", \"fragmentHtml\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"htmlLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case TEXT:\n-                fragment = new Fragment(\"panelText\", \"fragmentText\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"textLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case COMPOSE:\n-                fragment = new Fragment(\"panelCompose\", \"fragmentCompose\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"composeLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case LAYOUT_EDIT:\n-                fragment = new Fragment(\"panelLayoutEdit\", \"fragmentLayoutEdit\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"layoutEditLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case ENABLE:\n-                fragment = new Fragment(\"panelEnable\", \"fragmentEnable\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"enableLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case NOT_FOND:\n-                fragment = new Fragment(\"panelNotFound\", \"fragmentNotFound\", this);\n-                break;\n-\n-            case VIEW:\n-                fragment = new Fragment(\"panelView\", \"fragmentView\", this);\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"viewLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case MEMBERS:\n-                fragment = new Fragment(\"panelMembers\", \"fragmentMembers\", this);\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"membersLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case SEARCH:\n-                fragment = new Fragment(\"panelSearch\", \"fragmentSearch\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"searchLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case EXECUTE:\n-                fragment = new Fragment(\"panelExecute\", \"fragmentExecute\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"executeLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case PASSWORD_RESET:\n-                fragment = new Fragment(\"panelPasswordReset\", \"fragmentPasswordReset\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"passwordResetLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case DRYRUN:\n-                fragment = new Fragment(\"panelDryRun\", \"fragmentDryRun\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"dryRunLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case DELETE:\n-                fragment = new Fragment(\"panelDelete\", \"fragmentDelete\", this);\n-\n-                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"deleteLink\", enabled) {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }).setVisible(link.isEnabled(model.getObject()));\n-\n-                break;\n-\n-            case SELECT:\n-                fragment = new Fragment(\"panelSelect\", \"fragmentSelect\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"selectLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }).setVisible(link.isEnabled(model.getObject()));\n-\n-                break;\n-            case CLOSE:\n-                fragment = new Fragment(\"panelClose\", \"fragmentClose\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"closeLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }).setVisible(link.isEnabled(model.getObject()));\n-\n-                break;\n-\n-            case EXPORT:\n-                fragment = new Fragment(\"panelExport\", \"fragmentExport\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"exportLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case EXPORT_CSV:\n-                fragment = new Fragment(\"panelExportCSV\", \"fragmentExportCSV\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"exportCSVLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case EXPORT_HTML:\n-                fragment = new Fragment(\"panelExportHTML\", \"fragmentExportHTML\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"exportHTMLLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case EXPORT_PDF:\n-                fragment = new Fragment(\"panelExportPDF\", \"fragmentExportPDF\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"exportPDFLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case EXPORT_RTF:\n-                fragment = new Fragment(\"panelExportRTF\", \"fragmentExportRTF\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"exportRTFLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case EXPORT_XML:\n-                fragment = new Fragment(\"panelExportXML\", \"fragmentExportXML\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"exportXMLLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case SUSPEND:\n-                fragment = new Fragment(\"panelSuspend\", \"fragmentSuspend\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"suspendLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610291L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case REACTIVATE:\n-                fragment = new Fragment(\"panelReactivate\", \"fragmentReactivate\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"reactivateLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610292L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case RELOAD:\n-                fragment = new Fragment(\"panelReload\", \"fragmentReload\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"reloadLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610293L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case CHANGE_VIEW:\n-                fragment = new Fragment(\"panelChangeView\", \"fragmentChangeView\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"changeViewLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610292L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case UNLINK:\n-                fragment = new Fragment(\"panelUnlink\", \"fragmentUnlink\", this);\n-\n-                fragment.addOrReplace(new IndicatingOnConfirmAjaxLink<Void>(\"unlinkLink\", \"confirmUnlink\", enabled) {\n-\n-                    private static final long serialVersionUID = -6957616042924610293L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case LINK:\n-                fragment = new Fragment(\"panelLink\", \"fragmentLink\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"linkLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610303L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case UNASSIGN:\n-                fragment = new Fragment(\"panelUnassign\", \"fragmentUnassign\", this);\n-\n-                fragment.addOrReplace(\n-                        new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", \"confirmUnassign\", enabled) {\n-\n-                            private static final long serialVersionUID = -6957616042924610294L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target) {\n-                                link.onClick(target, model.getObject());\n-                            }\n-\n-                            @Override\n-                            public String getAjaxIndicatorMarkupId() {\n-                                return disableIndicator || !link.isIndicatorEnabled()\n-                                        ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                            }\n-                        }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case ASSIGN:\n-                fragment = new Fragment(\"panelAssign\", \"fragmentAssign\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"assignLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610304L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case DEPROVISION:\n-                fragment = new Fragment(\"panelDeprovision\", \"fragmentDeprovision\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"deprovisionLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610295L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case PROVISION:\n-                fragment = new Fragment(\"panelProvision\", \"fragmentProvision\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"provisionLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case DEPROVISION_MEMBERS:\n-                fragment = new Fragment(\"panelDeprovisionMembers\", \"fragmentDeprovisionMembers\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"deprovisionMembersLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610295L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case PROVISION_MEMBERS:\n-                fragment = new Fragment(\"panelProvisionMembers\", \"fragmentProvisionMembers\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"provisionMembersLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case PROPAGATION_TASKS:\n-                fragment = new Fragment(\"panelPropagationTasks\", \"fragmentPropagationTasks\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"propagationTasksLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case NOTIFICATION_TASKS:\n-                fragment = new Fragment(\"panelNotificationTasks\", \"fragmentNotificationTasks\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"notificationTasksLink\") {\n-\n-                    private static final long serialVersionUID = -1876519166660008562L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case ZOOM_IN:\n-                fragment = new Fragment(\"panelZoomIn\", \"fragmentZoomIn\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"zoomInLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610305L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case ZOOM_OUT:\n-                fragment = new Fragment(\"panelZoomOut\", \"fragmentZoomOut\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"zoomOutLink\") {\n-\n-                    private static final long serialVersionUID = -6957616042924610305L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case WORKFLOW_MODELER:\n-                fragment = new Fragment(\"panelWorkflowModeler\", \"fragmentWorkflowModeler\", this);\n-\n-                fragment.addOrReplace(new BookmarkablePageLink<>(\n-                        \"workflowModelerLink\", link.getPageClass(), link.getPageParameters()).\n-                        setPopupSettings(new VeilPopupSettings().setHeight(600).setWidth(800)).\n-                        setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            default:\n-            // do nothing\n-        }\n-\n-        if (fragment != null) {\n-            fragment.setEnabled(enabled);\n-            if (StringUtils.isNotBlank(entitlements)) {\n-                MetaDataRoleAuthorizationStrategy.authorize(fragment, RENDER, entitlements);\n-            }\n-            super.addOrReplace(fragment);\n-        }\n-\n-        return this;\n-    }\n-\n-    public void remove(final ActionLink.ActionType type) {\n-        switch (type) {\n-            case CLAIM:\n-                super.addOrReplace(new Fragment(\"panelClaim\", \"emptyFragment\", this));\n-                break;\n-\n-            case MANAGE_RESOURCES:\n-                super.addOrReplace(new Fragment(\"panelManageResources\", \"emptyFragment\", this));\n-                break;\n-\n-            case MANAGE_USERS:\n-                super.addOrReplace(new Fragment(\"panelManageUsers\", \"emptyFragment\", this));\n-                break;\n-\n-            case MANAGE_GROUPS:\n-                super.addOrReplace(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n-                break;\n-\n-            case MAPPING:\n-                super.addOrReplace(new Fragment(\"panelMapping\", \"emptyFragment\", this));\n-                break;\n-\n-            case MUSTCHANGEPASSWORD:\n-                super.addOrReplace(new Fragment(\"panelMustChangePassword\", \"emptyFragment\", this));\n-                break;\n-\n-            case SET_LATEST_SYNC_TOKEN:\n-                super.addOrReplace(new Fragment(\"panelSetLatestSyncToken\", \"emptyFragment\", this));\n-                break;\n-\n-            case REMOVE_SYNC_TOKEN:\n-                super.addOrReplace(new Fragment(\"panelRemoveSyncToken\", \"emptyFragment\", this));\n-                break;\n-\n-            case CLONE:\n-                super.addOrReplace(new Fragment(\"panelClone\", \"emptyFragment\", this));\n-                break;\n-\n-            case CREATE:\n-                super.addOrReplace(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n-                break;\n-\n-            case COMPOSE:\n-                super.addOrReplace(new Fragment(\"panelCompose\", \"emptyFragment\", this));\n-                break;\n-\n-            case TEMPLATE:\n-                super.addOrReplace(new Fragment(\"panelTemplate\", \"emptyFragment\", this));\n-                break;\n-\n-            case EDIT:\n-                super.addOrReplace(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n-                break;\n-\n-            case FO_EDIT:\n-                super.addOrReplace(new Fragment(\"panelFoEdit\", \"emptyFragment\", this));\n-                break;\n-\n-            case HTML:\n-                super.addOrReplace(new Fragment(\"panelHtml\", \"emptyFragment\", this));\n-                break;\n-\n-            case TEXT:\n-                super.addOrReplace(new Fragment(\"panelTestEdit\", \"emptyFragment\", this));\n-                break;\n-\n-            case VIEW:\n-                super.addOrReplace(new Fragment(\"panelView\", \"emptyFragment\", this));\n-                break;\n-\n-            case MEMBERS:\n-                super.addOrReplace(new Fragment(\"panelMembers\", \"emptyFragment\", this));\n-                break;\n-\n-            case SEARCH:\n-                super.addOrReplace(new Fragment(\"panelSearch\", \"emptyFragment\", this));\n-                break;\n-\n-            case EXECUTE:\n-                super.addOrReplace(new Fragment(\"panelExecute\", \"emptyFragment\", this));\n-                break;\n-\n-            case PASSWORD_RESET:\n-                super.addOrReplace(new Fragment(\"panelPasswordReset\", \"emptyFragment\", this));\n-                break;\n-\n-            case DRYRUN:\n-                super.addOrReplace(new Fragment(\"panelDryRun\", \"emptyFragment\", this));\n-                break;\n-\n-            case DELETE:\n-                super.addOrReplace(new Fragment(\"panelDelete\", \"emptyFragment\", this));\n-                break;\n-\n-            case SELECT:\n-                super.addOrReplace(new Fragment(\"panelSelect\", \"emptyFragment\", this));\n-                break;\n-\n-            case CLOSE:\n-                super.addOrReplace(new Fragment(\"panelClose\", \"emptyFragment\", this));\n-                break;\n-\n-            case EXPORT:\n-                super.addOrReplace(new Fragment(\"panelExport\", \"emptyFragment\", this));\n-                break;\n-\n-            case EXPORT_CSV:\n-                super.addOrReplace(new Fragment(\"panelExportCSV\", \"emptyFragment\", this));\n-                break;\n-\n-            case EXPORT_HTML:\n-                super.addOrReplace(new Fragment(\"panelExportHTML\", \"emptyFragment\", this));\n-                break;\n-\n-            case EXPORT_PDF:\n-                super.addOrReplace(new Fragment(\"panelExportPDF\", \"emptyFragment\", this));\n-                break;\n-\n-            case EXPORT_RTF:\n-                super.addOrReplace(new Fragment(\"panelExportRTF\", \"emptyFragment\", this));\n-                break;\n-            case EXPORT_XML:\n-                super.addOrReplace(new Fragment(\"panelExportXML\", \"emptyFragment\", this));\n-                break;\n-\n-            case SUSPEND:\n-                super.addOrReplace(new Fragment(\"panelSuspend\", \"emptyFragment\", this));\n-                break;\n-\n-            case REACTIVATE:\n-                super.addOrReplace(new Fragment(\"panelReactivate\", \"emptyFragment\", this));\n-                break;\n-\n-            case RELOAD:\n-                super.addOrReplace(new Fragment(\"panelReload\", \"emptyFragment\", this));\n-                break;\n-\n-            case CHANGE_VIEW:\n-                super.addOrReplace(new Fragment(\"panelChangeView\", \"emptyFragment\", this));\n-                break;\n-\n-            case UNLINK:\n-                super.addOrReplace(new Fragment(\"panelUnlink\", \"emptyFragment\", this));\n-                break;\n-\n-            case LINK:\n-                super.addOrReplace(new Fragment(\"panelLink\", \"emptyFragment\", this));\n-                break;\n-\n-            case UNASSIGN:\n-                super.addOrReplace(new Fragment(\"panelUnassign\", \"emptyFragment\", this));\n-                break;\n-\n-            case ASSIGN:\n-                super.addOrReplace(new Fragment(\"panelAssign\", \"emptyFragment\", this));\n-                break;\n-\n-            case DEPROVISION:\n-                super.addOrReplace(new Fragment(\"panelDeprovision\", \"emptyFragment\", this));\n-                break;\n-\n-            case PROVISION:\n-                super.addOrReplace(new Fragment(\"panelProvision\", \"emptyFragment\", this));\n-                break;\n-\n-            case PROPAGATION_TASKS:\n-                super.addOrReplace(new Fragment(\"panelPropagationTasks\", \"emptyFragment\", this));\n-                break;\n-\n-            case NOTIFICATION_TASKS:\n-                super.addOrReplace(new Fragment(\"panelNotificationTasks\", \"emptyFragment\", this));\n-                break;\n-\n-            case ZOOM_IN:\n-                super.addOrReplace(new Fragment(\"panelZoomIn\", \"emptyFragment\", this));\n-                break;\n-\n-            case ZOOM_OUT:\n-                super.addOrReplace(new Fragment(\"panelZoomOut\", \"emptyFragment\", this));\n-                break;\n-\n-            case WORKFLOW_MODELER:\n-                super.addOrReplace(new Fragment(\"panelWorkflowModelert\", \"emptyFragment\", this));\n-                break;\n-\n-            default:\n-            // do nothing\n-        }\n-    }\n-\n-    private ActionLinksPanel<T> setDisableIndicator(final boolean disableIndicator) {\n-        this.disableIndicator = disableIndicator;\n-        return this;\n-    }\n-\n-    public static <T extends Serializable> Builder<T> builder() {\n-        return new Builder<>();\n-    }\n-\n-    /**\n-     * ActionLinksPanel builder.\n-     *\n-     * @param <T> model object type.\n-     */\n-    public static final class Builder<T extends Serializable> implements Serializable {\n-\n-        private static final long serialVersionUID = 2998390938134582025L;\n-\n-        private final Map<ActionLink.ActionType, Triple<ActionLink<T>, String, Boolean>> actions = new HashMap<>();\n-\n-        private boolean disableIndicator = false;\n-\n-        public Builder<T> setDisableIndicator(final boolean disableIndicator) {\n-            this.disableIndicator = disableIndicator;\n-            return this;\n-        }\n-\n-        public Builder<T> add(final ActionLink<T> link, final ActionLink.ActionType type) {\n-            return addWithRoles(link, type, null, true);\n-        }\n-\n-        public Builder<T> add(\n-                final ActionLink<T> link,\n-                final ActionLink.ActionType type,\n-                final String entitlements) {\n-\n-            return addWithRoles(link, type, entitlements, true);\n-        }\n-\n-        public Builder<T> add(\n-                final ActionLink<T> link,\n-                final ActionLink.ActionType type,\n-                final String entitlement,\n-                final boolean enabled) {\n-\n-            return addWithRoles(link, type, entitlement, enabled);\n-        }\n-\n-        public Builder<T> addWithRoles(\n-                final ActionLink<T> link,\n-                final ActionLink.ActionType type,\n-                final String entitlements) {\n-\n-            return addWithRoles(link, type, entitlements, true);\n-        }\n-\n-        public Builder<T> addWithRoles(\n-                final ActionLink<T> link,\n-                final ActionLink.ActionType type,\n-                final String entitlements,\n-                final boolean enabled) {\n-            actions.put(type, Triple.of(link, entitlements, enabled));\n-            return this;\n-        }\n-\n-        /**\n-         * Use this method to build an ation panel without any model reference.\n-         *\n-         * @param id Component id.\n-         * @return Action link panel.\n-         */\n-        public ActionLinksPanel<T> build(final String id) {\n-            return build(id, null);\n-        }\n-\n-        /**\n-         * Use this methos to build an action panel including a model reference.\n-         *\n-         * @param id Component id.\n-         * @param modelObject model object.\n-         * @return Action link panel.\n-         */\n-        public ActionLinksPanel<T> build(final String id, final T modelObject) {\n-            final ActionLinksPanel<T> panel = modelObject == null\n-                    ? new ActionLinksPanel<>(id, new Model<T>())\n-                    : new ActionLinksPanel<>(id, new Model<>(modelObject));\n-\n-            panel.setDisableIndicator(disableIndicator);\n-\n-            for (Entry<ActionLink.ActionType, Triple<ActionLink<T>, String, Boolean>> action : actions.entrySet()) {\n-                panel.add(\n-                        action.getValue().getLeft(),\n-                        action.getKey(),\n-                        action.getValue().getMiddle(),\n-                        action.getValue().getRight());\n-            }\n-            return panel;\n-        }\n-    }\n-}"},{"sha":"70f674c94926bb0730528fb4fcfba8ab539d1ea9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksTogglePanel.java","status":"added","additions":129,"deletions":0,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,129 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.io.Serializable;\n+import java.util.UUID;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.panels.TogglePanel;\n+import org.apache.syncope.client.console.policies.PolicyRuleDirectoryPanel.PolicyRuleWrapper;\n+import org.apache.syncope.client.console.reports.ReportletDirectoryPanel.ReportletWrapper;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n+import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n+import org.apache.syncope.common.lib.to.AccessTokenTO;\n+import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class ActionLinksTogglePanel<T extends Serializable> extends TogglePanel<Serializable> {\n+\n+    private static final long serialVersionUID = -2025535531121434056L;\n+\n+    private final WebMarkupContainer container;\n+\n+    public ActionLinksTogglePanel(final String id, final PageReference pageRef) {\n+        super(id, UUID.randomUUID().toString(), pageRef);\n+\n+        modal.size(Modal.Size.Large);\n+        setFooterVisibility(false);\n+\n+        container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupPlaceholderTag(true);\n+        addInnerObject(container);\n+\n+        container.add(getEmptyFragment());\n+    }\n+\n+    public void toggleWithContent(\n+            final AjaxRequestTarget target, final ActionsPanel<T> actionsPanel, final T modelObject) {\n+        final String header;\n+        if (modelObject == null) {\n+            header = new ResourceModel(\"actions\", StringUtils.EMPTY).getObject();\n+        } else if (modelObject instanceof UserTO) {\n+            header = ((UserTO) modelObject).getUsername();\n+        } else if (modelObject instanceof GroupTO) {\n+            header = ((GroupTO) modelObject).getName();\n+        } else if (modelObject instanceof ReportTO) {\n+            header = ((ReportTO) modelObject).getName();\n+        } else if (modelObject instanceof AnyObjectTO) {\n+            header = ((AnyObjectTO) modelObject).getName();\n+        } else if (modelObject instanceof AttrTO) {\n+            header = ((AttrTO) modelObject).getSchema();\n+        } else if (modelObject instanceof AbstractPolicyTO) {\n+            header = ((AbstractPolicyTO) modelObject).getDescription();\n+        } else if (modelObject instanceof SecurityQuestionTO) {\n+            header = ((SecurityQuestionTO) modelObject).getContent();\n+        } else if (modelObject instanceof AccessTokenTO) {\n+            header = ((AccessTokenTO) modelObject).getOwner();\n+        } else if (modelObject instanceof ExecTO) {\n+            header = ((ExecTO) modelObject).getRefDesc();\n+        } else if (modelObject instanceof WorkflowDefinitionTO) {\n+            header = ((WorkflowDefinitionTO) modelObject).getName();\n+        } else if (modelObject instanceof EntityTO) {\n+            header = ((EntityTO) modelObject).getKey();\n+        } else if (modelObject instanceof StatusBean) {\n+            header = ((StatusBean) modelObject).getResourceName();\n+        } else if (modelObject instanceof PolicyRuleWrapper) {\n+            header = ((PolicyRuleWrapper) modelObject).getName();\n+        } else if (modelObject instanceof PolicyRuleWrapper) {\n+            header = ((PolicyRuleWrapper) modelObject).getName();\n+        } else if (modelObject instanceof ReportletWrapper) {\n+            header = ((ReportletWrapper) modelObject).getName();\n+        } else {\n+            header = new ResourceModel(\"actions\", StringUtils.EMPTY).getObject();\n+        }\n+        setHeader(target, StringUtils.abbreviate(header, 25));\n+\n+        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                modal.show(false);\n+            }\n+        });\n+\n+        final Fragment frag = new Fragment(\"actions\", \"actionsFragment\", this);\n+        frag.setOutputMarkupId(true);\n+        frag.add(actionsPanel);\n+\n+        container.addOrReplace(frag);\n+        target.add(this.container);\n+\n+        this.toggle(target, true);\n+    }\n+\n+    private Fragment getEmptyFragment() {\n+        return new Fragment(\"actions\", \"emptyFragment\", this);\n+    }\n+}"},{"sha":"a3c9aef15f867a12926d6a02232e52bd1e2faf7f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionPanel.java","status":"added","additions":160,"deletions":0,"changes":160,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,160 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+/**\n+ * This empty class must exist because there not seems to be alternative to provide specialized HTML for edit links.\n+ *\n+ * @param <T> model object type.\n+ */\n+public final class ActionPanel<T extends Serializable> extends Panel {\n+\n+    private static final long serialVersionUID = 322966537010107771L;\n+\n+    private final Label actionIcon;\n+\n+    private final Label actionLabel;\n+\n+    private boolean disableIndicator = false;\n+\n+    public ActionPanel(final IModel<T> model, final Action<T> action) {\n+        this(\"action\", model, action);\n+    }\n+\n+    public ActionPanel(final String componentId, final IModel<T> model, final Action<T> action) {\n+        super(componentId);\n+        setOutputMarkupId(true);\n+\n+        final T obj;\n+        if (model == null) {\n+            obj = null;\n+        } else {\n+            obj = model.getObject();\n+        }\n+\n+        final boolean enabled;\n+        final AjaxLink<Void> actionLink;\n+\n+        if (action.getLink() == null || action.getType() == ActionType.NOT_FOUND) {\n+            enabled = true;\n+            actionLink = new IndicatingAjaxLink<Void>(\"action\") {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public boolean isEnabled() {\n+                    return false;\n+                }\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                }\n+            };\n+        } else {\n+            enabled = action.getLink().isEnabled(obj);\n+\n+            actionLink = action.isOnConfirm()\n+                    ? new IndicatingOnConfirmAjaxLink<Void>(\"action\", enabled) {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    action.getLink().onClick(target, obj);\n+                }\n+\n+                @Override\n+                public String getAjaxIndicatorMarkupId() {\n+                    return disableIndicator || !action.getLink().isIndicatorEnabled()\n+                            ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                }\n+            }\n+                    : new IndicatingAjaxLink<Void>(\"action\") {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    action.getLink().onClick(target, obj);\n+                }\n+\n+                @Override\n+                public String getAjaxIndicatorMarkupId() {\n+                    return disableIndicator || !action.getLink().isIndicatorEnabled()\n+                            ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                }\n+            };\n+        }\n+\n+        actionLink.setVisible(enabled);\n+\n+        actionIcon = new Label(\"actionIcon\", \"\");\n+        actionLink.add(actionIcon);\n+\n+        final String clazz = action.getType().name().toLowerCase() + \".class\";\n+        actionIcon.add(new AttributeModifier(\"class\", new ResourceModel(clazz, clazz)));\n+\n+        final String title = action.getType().name().toLowerCase() + \".title\";\n+        final IModel<String> titleModel = new ResourceModel(title, title);\n+        actionIcon.add(new AttributeModifier(\"title\", titleModel));\n+\n+        final String alt = action.getType().name().toLowerCase() + \".alt\";\n+        actionIcon.add(new AttributeModifier(\"alt\", new ResourceModel(alt, alt)));\n+\n+        actionLabel = new Label(\"label\", titleModel);\n+        actionLink.add(actionLabel);\n+        add(actionLink);\n+\n+        // ---------------------------\n+        // Action configuration\n+        // ---------------------------\n+        actionLabel.setVisible(action.isVisibleLabel());\n+\n+        if (action.getLabel() != null) {\n+            actionLabel.setDefaultModel(action.getLabel());\n+        }\n+\n+        if (action.getTitle() != null) {\n+            actionIcon.add(new AttributeModifier(\"title\", action.getTitle()));\n+        }\n+\n+        if (action.getAlt() != null) {\n+            actionIcon.add(new AttributeModifier(\"alt\", action.getAlt()));\n+        }\n+\n+        if (action.getIcon() != null) {\n+            actionIcon.add(new AttributeModifier(\"class\", action.getIcon()));\n+        }\n+\n+        this.disableIndicator = !action.hasIndicator();\n+        // ---------------------------\n+    }\n+}"},{"sha":"6c26aa96d732de63f83d44e58f90730a915aa1b7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * This empty class must exist because there not seems to be alternative to provide specialized HTML for edit links.\n+ *\n+ * @param <T> model object type.\n+ */\n+public final class ActionsPanel<T extends Serializable> extends Panel {\n+\n+    private static final long serialVersionUID = 322966537010107771L;\n+\n+    private final List<Action<T>> actions = new ArrayList<>();\n+\n+    private IModel<T> model;\n+\n+    public ActionsPanel(final String componentId, final IModel<T> model) {\n+        super(componentId, model);\n+        setOutputMarkupId(true);\n+        this.model = model;\n+\n+        add(new ListView<Action<T>>(\"actionRepeater\", actions) {\n+\n+            private static final long serialVersionUID = -9180479401817023838L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<Action<T>> item) {\n+                item.add(new ActionPanel<T>(ActionsPanel.this.model, item.getModelObject()));\n+            }\n+\n+        }.setRenderBodyOnly(true));\n+    }\n+\n+    public Action<T> add(\n+            final ActionLink<T> link,\n+            final ActionLink.ActionType type,\n+            final String entitlements) {\n+        return add(link, type, entitlements, false);\n+    }\n+\n+    public Action<T> add(\n+            final ActionLink<T> link,\n+            final ActionLink.ActionType type,\n+            final String entitlements,\n+            final boolean onConfirm) {\n+\n+        final Action<T> action = new Action<>(link, type);\n+        action.setEntitlements(entitlements);\n+        action.setOnConfirm(onConfirm);\n+        actions.add(action);\n+        return action;\n+    }\n+\n+    public ActionsPanel<T> clone(final String componentId, final IModel<T> model) {\n+        final ActionsPanel<T> panel = new ActionsPanel<>(componentId, model);\n+        panel.actions.addAll(actions);\n+        return panel;\n+    }\n+\n+    public boolean isEmpty() {\n+        return this.actions.isEmpty();\n+    }\n+}"},{"sha":"7eaac21cbefd2f5b8fb99de4aa753325a09798be","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":41,"deletions":65,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -37,12 +37,11 @@\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxTimerBehavior;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.JobTO;\n@@ -379,8 +378,8 @@ public IModel<JobTO> model(final JobTO object) {\n         }\n     }\n \n-    private class RecentExecPanel extends DirectoryPanel<\n-        ExecTO, ExecTO, RecentExecProvider, BaseRestClient> {\n+    private class RecentExecPanel\n+            extends DirectoryPanel<ExecTO, ExecTO, RecentExecPanel.RecentExecProvider, BaseRestClient> {\n \n         private static final long serialVersionUID = -8214546246301342868L;\n \n@@ -426,81 +425,58 @@ protected List<IColumn<ExecTO, String>> getColumns() {\n \n             columns.add(new PropertyColumn<ExecTO, String>(new ResourceModel(\"status\"), \"status\", \"status\"));\n \n-            columns.add(new ActionColumn<ExecTO, String>(new ResourceModel(\"actions\")) {\n-\n-                private static final long serialVersionUID = -3503023501954863131L;\n-\n-                @Override\n-                public ActionLinksPanel<ExecTO> getActions(final String componentId, final IModel<ExecTO> model) {\n-\n-                    final ActionLinksPanel.Builder<ExecTO> panel = ActionLinksPanel.<ExecTO>builder().\n-                            add(new ActionLink<ExecTO>() {\n+            return columns;\n+        }\n \n-                                private static final long serialVersionUID = -3722207913631435501L;\n+        @Override\n+        public ActionsPanel<ExecTO> getActions(final IModel<ExecTO> model) {\n+            final ActionsPanel<ExecTO> panel = super.getActions(model);\n \n-                                @Override\n-                                public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n+            panel.add(new ActionLink<ExecTO>() {\n \n-                                    StringResourceModel stringResourceModel =\n-                                            new StringResourceModel(\"execution.view\", JobWidget.this, model);\n-                                    detailModal.header(stringResourceModel);\n-                                    detailModal.setContent(new ExecMessageModal(model.getObject().getMessage()));\n-                                    detailModal.show(true);\n-                                    target.add(detailModal);\n-                                }\n-                            }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ);\n-                    return panel.build(componentId, model.getObject());\n-                }\n+                private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n-                public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                    final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder();\n-\n-                    return panel.add(new ActionLink<Serializable>() {\n-\n-                        private static final long serialVersionUID = -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                            if (target != null) {\n-                                target.add(container);\n-                            }\n-                        }\n-                    }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+                public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n+\n+                    StringResourceModel stringResourceModel = new StringResourceModel(\"execution.view\", JobWidget.this,\n+                            model);\n+                    detailModal.header(stringResourceModel);\n+                    detailModal.setContent(new ExecMessageModal(model.getObject().getMessage()));\n+                    detailModal.show(true);\n+                    target.add(detailModal);\n                 }\n-            });\n-\n-            return columns;\n+            }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ);\n+            return panel;\n         }\n \n-    }\n-\n-    protected final class RecentExecProvider extends DirectoryDataProvider<ExecTO> {\n+        protected final class RecentExecProvider extends DirectoryDataProvider<ExecTO> {\n \n-        private static final long serialVersionUID = 2835707012690698633L;\n+            private static final long serialVersionUID = 2835707012690698633L;\n \n-        private final SortableDataProviderComparator<ExecTO> comparator;\n+            private final SortableDataProviderComparator<ExecTO> comparator;\n \n-        private RecentExecProvider() {\n-            super(ROWS);\n-            setSort(\"end\", SortOrder.DESCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-        }\n+            private RecentExecProvider() {\n+                super(ROWS);\n+                setSort(\"end\", SortOrder.DESCENDING);\n+                comparator = new SortableDataProviderComparator<>(this);\n+            }\n \n-        @Override\n-        public Iterator<ExecTO> iterator(final long first, final long count) {\n-            Collections.sort(recent, comparator);\n-            return recent.subList((int) first, (int) first + (int) count).iterator();\n-        }\n+            @Override\n+            public Iterator<ExecTO> iterator(final long first, final long count) {\n+                Collections.sort(recent, comparator);\n+                return recent.subList((int) first, (int) first + (int) count).iterator();\n+            }\n \n-        @Override\n-        public long size() {\n-            return recent.size();\n-        }\n+            @Override\n+            public long size() {\n+                return recent.size();\n+            }\n \n-        @Override\n-        public IModel<ExecTO> model(final ExecTO object) {\n-            return new CompoundPropertyModel<>(object);\n+            @Override\n+            public IModel<ExecTO> model(final ExecTO object) {\n+                return new CompoundPropertyModel<>(object);\n+            }\n         }\n     }\n }"},{"sha":"edce805ac5059efe25a40a78e9544167bcdd739a","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationWidget.java","status":"modified","additions":18,"deletions":9,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -47,8 +47,9 @@\n import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxTimerBehavior;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.IndicatorAjaxLink;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.Action;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionPanel;\n import org.apache.syncope.client.console.widgets.reconciliation.Any;\n import org.apache.syncope.client.console.widgets.reconciliation.Anys;\n import org.apache.syncope.client.console.widgets.reconciliation.Misaligned;\n@@ -428,10 +429,13 @@ public boolean evaluate(final Misaligned object) {\n                                 return resource.equals(object.getResource());\n                             }\n                         }, new ArrayList<Misaligned>());\n-                        Component content = missing == null\n-                                ? misaligned == null || misaligned.isEmpty()\n-                                ? new Label(componentId, StringUtils.EMPTY)\n-                                : ActionLinksPanel.<Any>builder().add(new ActionLink<Any>() {\n+                        Component content;\n+\n+                        if (missing == null) {\n+                            if (misaligned == null || misaligned.isEmpty()) {\n+                                content = new Label(componentId, StringUtils.EMPTY);\n+                            } else {\n+                                final Action<Any> action = new Action<>(new ActionLink<Any>() {\n \n                                     private static final long serialVersionUID = -3722207913631435501L;\n \n@@ -449,10 +453,15 @@ public void onClick(final AjaxRequestTarget target, final Any ignore) {\n                                         modal.show(true);\n                                         target.add(modal);\n                                     }\n-                                }, ActionLink.ActionType.VIEW).\n-                                        build(componentId)\n-                                : ActionLinksPanel.<Any>builder().add(null, ActionLink.ActionType.NOT_FOND).\n-                                        build(componentId);\n+                                }, ActionLink.ActionType.VIEW);\n+                                action.hideLabel();\n+                                content = new ActionPanel<>(componentId, rowModel, action);\n+                            }\n+                        } else {\n+                            final Action<Any> action = new Action<>(null, ActionLink.ActionType.NOT_FOUND);\n+                            action.hideLabel();\n+                            content = new ActionPanel<>(componentId, rowModel, action);\n+                        }\n                         cellItem.add(content);\n                         cellItem.add(new AttributeModifier(\"class\", \"text-center\"));\n                     }"},{"sha":"f807c13d61eb4ff407bef1557a28aa54fafb307a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractMappingPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -39,7 +39,7 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MappingPurposePanel;\n@@ -318,7 +318,7 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                 //--------------------------------\n                 // Remove\n                 // -------------------------------\n-                final ActionLinksPanel.Builder<Serializable> actions = ActionLinksPanel.builder();\n+                final ActionsPanel<Serializable> actions = new ActionsPanel<>(\"toRemove\", null);\n                 actions.add(new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -3722207913631435501L;\n@@ -338,8 +338,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(AbstractMappingPanel.this);\n                         }\n                     }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.RESOURCE_UPDATE);\n-                item.add(actions.build(\"toRemove\"));\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.RESOURCE_UPDATE, true).hideLabel();\n+                item.add(actions);\n                 // -------------------------------\n \n                 intAttrName.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {"},{"sha":"9c43187151aa982a19184f8b7df58f01a0f3184c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -46,7 +46,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -154,7 +154,10 @@ public void renderHead(final IHeaderResponse response) {\n             }\n         });\n \n-        viewFragment.add(ActionLinksPanel.<RelationshipTO>builder().add(new ActionLink<RelationshipTO>() {\n+        final ActionsPanel<RelationshipTO> panel = new ActionsPanel<>(\"actions\", null);\n+        viewFragment.add(panel);\n+\n+        panel.add(new ActionLink<RelationshipTO>() {\n \n             private static final long serialVersionUID = 3257738274365467945L;\n \n@@ -165,7 +168,7 @@ public void onClick(final AjaxRequestTarget target, final RelationshipTO ignore)\n                 addFragment.add(new Specification().setRenderBodyOnly(true));\n                 target.add(Relationships.this);\n             }\n-        }, ActionType.CREATE, AnyEntitlement.UPDATE.getFor(anyTO.getType())).build(\"actions\"));\n+        }, ActionType.CREATE, AnyEntitlement.UPDATE.getFor(anyTO.getType()));\n \n         return viewFragment;\n     }"},{"sha":"2be32df7c64678b4dd9ef778095bd7242456b127","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ResultPage.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -19,12 +19,13 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.syncope.client.console.panels.WizardModalPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n \n public abstract class ResultPage<T extends Serializable> extends Panel implements WizardModalPanel<T> {\n \n@@ -39,15 +40,20 @@ public ResultPage(final T item, final Serializable result) {\n \n         add(customResultBody(\"customResultBody\", item, result));\n \n-        add(ActionLinksPanel.<T>builder().add(new ActionLink<T>() {\n+        final ActionsPanel<T> panel = new ActionsPanel<>(\"action\", null);\n+        add(panel);\n+\n+        panel.add(new ActionLink<T>() {\n \n             private static final long serialVersionUID = 3257738274365467945L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final T ignore) {\n                 closeAction(target);\n             }\n-        }, ActionLink.ActionType.CLOSE).build(\"action\").setRenderBodyOnly(true));\n+        }, ActionLink.ActionType.CLOSE, StringUtils.EMPTY).hideLabel();\n+\n+        panel.setRenderBodyOnly(true);\n     }\n \n     protected abstract void closeAction(final AjaxRequestTarget target);"},{"sha":"a9f38483921402f4e22cb41eee4666daef56cdab","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -1107,4 +1107,41 @@ div.background-footer {\n \n div#editUserChangePassword > label {\n   color: #e00000;\n+}\n+\n+div > li {\n+  list-style-type: none; \n+}\n+\n+th ul.menu, div#inline-actions ul.menu, div#tablehandling ul.menu, div.listview-actions ul.menu {\n+  list-style-type: none;  \n+  margin: 0;\n+  padding: 0;\n+}\n+\n+div#tablehandling ul.menu{\n+  float: right;\n+}\n+\n+th ul.menu li, div#inline-actions ul.menu li, div#tablehandling ul.menu li, div.listview-actions ul.menu li {\n+  display: inline-block;\n+}\n+\n+th ul.menu li a, div#inline-actions ul.menu li a, div.listview-actions ul.menu li a, div#tablehandling ul.menu li a {\n+  margin-left: 5px;\n+  display: inline-block !important;\n+}\n+\n+ul.menu li a {\n+  display: block;\n+  cursor: pointer !important;\n+}\n+\n+.toggle-menu ul.menu li a {\n+  padding: 0px;\n+  text-align: left;\n+}\n+\n+div#tablehandling ul.menu li a {\n+  padding: 0px !important;\n }\n\\ No newline at end of file"},{"sha":"6b8c1205a71847718a90e4280fcace63437c22a6","filename":"client/console/src/main/resources/META-INF/resources/css/topology.css","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -177,3 +177,20 @@ div.node-action-link .dropdown-menu{\n   margin: 0px;\n   border-radius: 0.5em;\n }\n+\n+div#zoom ul.menu {\n+  list-style-type: none;  \n+  margin: 0;\n+  padding: 0;\n+  float: right;\n+}\n+\n+div#zoom ul.menu li {\n+  display: inline-block;\n+}\n+\n+div#zoom ul.menu li a {\n+  display: inline-block;\n+  margin-left: 5px;\n+}\n+"},{"sha":"c0f5b9fc844f2f5e745be34cdcc5ad517d12611f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkContent.html","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -27,7 +27,9 @@\n         <table class=\"ui-widget ui-widget-content table-hover pageRowElement\" wicket:id=\"selectedObjects\">[DataTable]</table>\n \n         <div class=\"circular-actions\">\n-          <span wicket:id=\"actions\">[Actions]</span>\n+          <div id=\"inline-actions\">\n+            <span wicket:id=\"actions\">[Actions]</span>\n+          </div>\n         </div>\n       </div>\n     </wicket:panel>"},{"sha":"78c2d31b69d1968410b6c40df32d5b559b490f28","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AjaxDataTablePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -28,7 +28,7 @@\n         </span>\n       </form>\n       <div class=\"bulkAction\">\n-        <div class=\"bulkActionCell\" style=\"width: 40px\">\n+        <div class=\"bulkActionCell\">\n           <a href=\"#\" wicket:id=\"bulkActionLink\">\n             <i class=\"fa fa-gear\" alt=\"bulk action icon\"  title=\"Bulk action\"></i>\n           </a>"},{"sha":"bdc27e974a12c1f2a57497b89b64c92690bec2df","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel.html","status":"modified","additions":15,"deletions":10,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -20,17 +20,22 @@\n   <wicket:extend>\n     <div wicket:id=\"searchContainer\">\n       <div class=\"row\">\n-        <div class=\"col-sm-6\">\n-          <form wicket:id=\"paginator\">\n-            <div>\n-              <div class=\"dataTables_length\">\n-                <label>\n-                  <wicket:message key=\"displayRows\"/>\n-                  <select class=\"form-control input-sm\" wicket:id=\"rowsChooser\"/>\n-                </label>\n+        <div class=\"col-sm-12\">\n+          <div class=\"col-sm-6\">\n+            <form wicket:id=\"paginator\">\n+              <div>\n+                <div class=\"dataTables_length\">\n+                  <label>\n+                    <wicket:message key=\"displayRows\"/>\n+                    <select class=\"form-control input-sm\" wicket:id=\"rowsChooser\"/>\n+                  </label>\n+                </div>\n               </div>\n-            </div>\n-          </form>\n+            </form>\n+          </div>\n+          <div id=\"tablehandling\" class=\"col-sm-6 pull-right\">\n+            <span wicket:id=\"tablehandling\">[TABLE HANDLING]</span>\n+          </div>\n         </div>\n       </div>\n "},{"sha":"3550ace741a7e0ce1ac938bff8b1105b281527e0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersPanel.html"},{"sha":"6c35595a508892e8d9f31be0dba80cdef42dbdce","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersPanel.properties"},{"sha":"631b7b6c4c377661313625260ab3b1d1a657eb7a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_it.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersPanel_it.properties"},{"sha":"91548dec0fb782f3812f87af6b90f66a643f7f1f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_pt_BR.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersPanel_pt_BR.properties"},{"sha":"1c94ee8bd8b78fb172de30978383b80985ec3266","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersDirectoryPanel_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel_ru.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ParametersPanel_ru.properties"},{"sha":"3b9448cca3818e4d5bd77574752f77a8b36ed9b6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.html","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -45,7 +45,9 @@\n \n     <wicket:fragment wicket:id=\"emptyFragment\"></wicket:fragment>\n     <wicket:fragment wicket:id=\"actionsFragment\">\n-      <div wicket:id=\"actions\" class=\"modal-footer circular-actions\"/>\n+      <div id=\"inline-actions\">\n+        <div wicket:id=\"actions\" class=\"modal-footer circular-actions\"/>\n+      </div>\n     </wicket:fragment>\n   </wicket:panel>\n </html>"},{"sha":"c92d8a2676c568d53d4e76045803caa1762b89e2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/TogglePanel.html","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -19,74 +19,74 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:head>\n     <style type=\"text/css\">\n-      div.topology-menu {\n+      div.toggle-menu {\n         display: none;\n         border-radius: 5px;\n-        background-color: rgba(0, 0, 0, 0.45);\n+        background-color: rgba(120, 120, 120, 0.96);\n         color: #fff;\n         position: absolute;\n         right: 5px;\n-        top: 130px;\n+        top: 0px;\n         width: 0px;\n         min-width: 250px;\n         z-index: 999;\n       }\n \n-      div.topology-menu ul.menu {\n+      div.toggle-menu ul.menu {\n         list-style: outside none none;\n         margin: 0;\n         padding: 0;\n         list-style: outside none none;\n       }\n \n-      div.topology-menu ul.menu li {\n+      div.toggle-menu ul.menu li {\n         display: block;\n-        line-height: 2em;\n+        line-height: 1em;\n         vertical-align: middle;\n-        padding: 5px 10px;\n+        padding: 0px 10px;\n       }\n \n-      div.topology-menu ul.menu li a i {\n+      div.toggle-menu ul.menu li a i {\n         position: relative;\n         padding: 12px 15px 12px 5px;\n       }\n \n-      div.topology-menu div.header a:active,\n-      div.topology-menu div.header a:link,\n-      div.topology-menu div.header a:visited,\n-      div.topology-menu ul a:active,\n-      div.topology-menu ul a:link,\n-      div.topology-menu ul a:visited{\n+      div.toggle-menu div.header a:active,\n+      div.toggle-menu div.header a:link,\n+      div.toggle-menu div.header a:visited,\n+      div.toggle-menu ul a:active,\n+      div.toggle-menu ul a:link,\n+      div.toggle-menu ul a:visited{\n         color: #fff;\n       }\n \n-      div.topology-menu ul li:hover {\n+      div.toggle-menu ul li:hover {\n         color: #fff;\n         background-color: rgba(0, 0, 0, 0.2);\n         z-index: 1000;\n         font-weight: bold;\n       }\n \n-      div.topology-menu div.header {\n+      div.toggle-menu div.header {\n         background-color: rgba(0, 0, 0, 0);\n         position: relative;\n         font-size: 1.5em;\n         padding-bottom: 5px;\n         border-bottom: 1px solid #aaa;\n       }\n \n-      div.topology-menu div.header a {\n+      div.toggle-menu div.header a {\n         display: inline-table;\n         padding: 6px 2px 0px 0px;\n       }\n \n-      div.topology-menu div.header .close {\n+      div.toggle-menu div.header .close {\n         text-align: right;\n       }\n     </style>\n   </wicket:head>\n   <wicket:extend>\n-    <div wicket:id=\"togglePanelContainer\" class=\"topology-menu inactive-topology-menu\">\n+    <div wicket:id=\"togglePanelContainer\" class=\"toggle-menu inactive-toggle-menu\">\n       <div class=\"header\">\n         <div class=\"label\">\n           <label wicket:id=\"label\"/>"},{"sha":"5abef8823669c9772f3e73ddbe8ba6e78066ce02","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel.html","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -17,8 +17,15 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style type=\"text/css\">\n+      div#topologyTogglePanel {\n+        top: 130px !important;\n+      }\n+    </style>\n+  </wicket:head>\n   <wicket:extend>\n-    <div wicket:id=\"container\" >\n+    <div wicket:id=\"container\">\n       <wicket:container wicket:id=\"actions\" />\n     </div>\n "},{"sha":"65a7eb7a7e5da74cbc27fdc7655b2b906bdd2e7b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"removed","additions":0,"deletions":298,"changes":298,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/018fa9771adee2788be0ba3357c31cdc5da17cba/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/018fa9771adee2788be0ba3357c31cdc5da17cba/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=018fa9771adee2788be0ba3357c31cdc5da17cba","patch":"@@ -1,298 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <style>\n-      span#actionLink{\n-        margin-left: 1px;\n-        margin-right: 1px;\n-      }\n-    </style>\n-  </wicket:head>\n-  <wicket:panel>\n-    <span wicket:id=\"panelMustChangePassword\">[plus]</span>\n-    <span wicket:id=\"panelClaim\">[plus]</span>\n-    <span wicket:id=\"panelManageResources\">[plus]</span>\n-    <span wicket:id=\"panelManageUsers\">[plus]</span>\n-    <span wicket:id=\"panelManageGroups\">[plus]</span>\n-    <span wicket:id=\"panelDryRun\">[plus]</span>\n-    <span wicket:id=\"panelExecute\">[plus]</span>\n-    <span wicket:id=\"panelPasswordReset\">[plus]</span>\n-    <span wicket:id=\"panelEnable\">[plus]</span>\n-    <span wicket:id=\"panelSearch\">[plus]</span>\n-    <span wicket:id=\"panelNotFound\">[plus]</span>\n-    <span wicket:id=\"panelView\">[plus]</span>\n-    <span wicket:id=\"panelMembers\">[plus]</span>\n-    <span wicket:id=\"panelMapping\">[plus]</span>\n-    <span wicket:id=\"panelSetLatestSyncToken\">[plus]</span>\n-    <span wicket:id=\"panelRemoveSyncToken\">[plus]</span>\n-    <span wicket:id=\"panelClone\">[plus]</span>\n-    <span wicket:id=\"panelCreate\">[plus]</span>\n-    <span wicket:id=\"panelReset\">[plus]</span>\n-    <span wicket:id=\"panelEdit\">[plus]</span>\n-    <span wicket:id=\"panelTemplate\">[plus]</span>\n-    <span wicket:id=\"panelTypeExtensions\">[plus]</span>\n-    <span wicket:id=\"panelFoEdit\">[plus]</span>\n-    <span wicket:id=\"panelHtml\">[plus]</span>\n-    <span wicket:id=\"panelText\">[plus]</span>\n-    <span wicket:id=\"panelCompose\">[plus]</span>\n-    <span wicket:id=\"panelLayoutEdit\">[plus]</span>\n-    <span wicket:id=\"panelExport\">[plus]</span>\n-    <span wicket:id=\"panelExportCSV\">[plus]</span>\n-    <span wicket:id=\"panelExportHTML\">[plus]</span>\n-    <span wicket:id=\"panelExportPDF\">[plus]</span>\n-    <span wicket:id=\"panelExportRTF\">[plus]</span>\n-    <span wicket:id=\"panelExportXML\">[plus]</span>\n-    <span wicket:id=\"panelPropagationTasks\">[plus]</span>\n-    <span wicket:id=\"panelNotificationTasks\">[plus]</span>\n-    <span wicket:id=\"panelDeprovisionMembers\">[plus]</span>\n-    <span wicket:id=\"panelProvisionMembers\">[plus]</span>\n-    <span wicket:id=\"panelWorkflowModeler\">[plus]</span>\n-    <span wicket:id=\"panelDelete\">[plus]</span>\n-    <span wicket:id=\"panelSelect\">[select]</span>\n-    <span wicket:id=\"panelClose\">[close]</span>\n-    <span wicket:id=\"panelSuspend\">[plus]</span>\n-    <span wicket:id=\"panelReactivate\">[plus]</span>\n-    <span wicket:id=\"panelReload\">[plus]</span>\n-    <span wicket:id=\"panelChangeView\">[plus]</span>\n-    <span wicket:id=\"panelUnlink\">[plus]</span>\n-    <span wicket:id=\"panelLink\">[plus]</span>\n-    <span wicket:id=\"panelUnassign\">[plus]</span>\n-    <span wicket:id=\"panelAssign\">[plus]</span>\n-    <span wicket:id=\"panelDeprovision\">[plus]</span>\n-    <span wicket:id=\"panelProvision\">[plus]</span>\n-    <span wicket:id=\"panelZoomIn\">[plus]</span>\n-    <span wicket:id=\"panelZoomOut\">[plus]</span>\n-\n-    <wicket:fragment wicket:id=\"fragmentMustChangePassword\">\n-      <a href=\"#\" wicket:id=\"MustChangePasswordLink\" class=\"btn\"><i class=\"fa fa-lock\" alt=\"must change password icon\" title=\"Toggle must change password\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentClaim\">\n-      <a href=\"#\" wicket:id=\"claimLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-ticket\" alt=\"claim icon\" title=\"Claim\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentManageResources\">\n-      <a href=\"#\" wicket:id=\"manageResourcesLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-sitemap\" alt=\"manage resources icon\" title=\"Manage resources\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentManageUsers\">\n-      <a href=\"#\" wicket:id=\"manageUsersLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/users-icon.png\" alt=\"manage users icon\" title=\"Manage users\"/></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentManageGroups\">\n-      <a href=\"#\" wicket:id=\"manageGroupsLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/groups-icon.png\" alt=\"manage groups icon\" title=\"Manage groups\"/></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentMapping\">\n-      <a href=\"#\" wicket:id=\"mappingLink\" class=\"btn\"><i class=\"fa fa-exchange\" alt=\"mapping icon\" title=\"Mapping\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentSetLatestSyncToken\">\n-      <a href=\"#\" wicket:id=\"setLatestSyncTokenLink\" class=\"btn\"><i class=\"fa fa-hourglass-start\" alt=\"reset time icon\" title=\"Set latest Sync Token\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentRemoveSyncToken\">\n-      <a href=\"#\" wicket:id=\"removeSyncTokenLink\" class=\"btn\"><i class=\"fa fa-hourglass-o\" alt=\"reset time icon\" title=\"Remove Sync Token\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentClone\">\n-      <a href=\"#\" wicket:id=\"cloneLink\" class=\"btn\"><i class=\"fa fa-clone\" alt=\"clone icon\" title=\"Clone\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentCreate\">\n-      <a href=\"#\" wicket:id=\"createLink\" class=\"btn\"><i class=\"glyphicon glyphicon-plus\" alt=\"create icon\" title=\"Create\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentNotFound\">\n-      <i class=\"fa fa-eye-slash\" alt=\"notFound icon\" title=\"Not Found\"></i>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentView\">\n-      <a href=\"#\" wicket:id=\"viewLink\" class=\"btn\"><i class=\"fa fa-eye\" alt=\"view icon\" title=\"View\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentMembers\">\n-      <a href=\"#\" wicket:id=\"membersLink\" class=\"btn\"><i class=\"fa fa-users\" alt=\"members icon\" title=\"Members\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentSearch\">\n-      <a href=\"#\" wicket:id=\"searchLink\" class=\"btn\"><i class=\"glyphicon glyphicon-search\" alt=\"search icon\" title=\"Search\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentEnable\">\n-      <a href=\"#\" wicket:id=\"enableLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-toggle-on\" alt=\"enable icon\" title=\"Enable / Disable\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentEdit\">\n-      <a href=\"#\" wicket:id=\"editLink\" class=\"btn\"><i id=\"actionLink\" class=\"glyphicon glyphicon-pencil\" alt=\"edit icon\" title=\"Edit\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentTemplate\">\n-      <a href=\"#\" wicket:id=\"templateLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-list-alt\" alt=\"template icon\" title=\"Template\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentTypeExtensions\">\n-      <a href=\"#\" wicket:id=\"typeExtensionsLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-expand\" alt=\"typeExtensions icon\" title=\"Type extensions\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentFoEdit\">\n-      <a href=\"#\" wicket:id=\"foEditLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-file-pdf-o\" alt=\"fo edit icon\" title=\"FO Edit\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentHtml\">\n-      <a href=\"#\" wicket:id=\"htmlLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-file-code-o\" alt=\"html icon\" title=\"HTML\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentText\">\n-      <a href=\"#\" wicket:id=\"textLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-file-text-o\" alt=\"text icon\" title=\"TEXT\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentCompose\">\n-      <a href=\"#\" wicket:id=\"composeLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-puzzle-piece\" alt=\"compose icon\" title=\"Compose\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentLayoutEdit\">\n-      <a href=\"#\" wicket:id=\"layoutEditLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-object-ungroup\" alt=\"layout edit icon\" title=\"Layout Edit\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentReset\">\n-      <a href=\"#\" wicket:id=\"resetLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/reset.png\" alt=\"reset icon\" title=\"Reset sync token\"/></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentPropagationTasks\">\n-      <a href=\"#\" wicket:id=\"propagationTasksLink\" class=\"btn\"><i class=\"fa fa-arrow-right\" alt=\"PropagationTasks icon\" title=\"PropagationTasks\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentNotificationTasks\">\n-      <a href=\"#\" wicket:id=\"notificationTasksLink\" class=\"btn\"><i class=\"fa fa-envelope-o\" alt=\"NotificationTasks icon\" title=\"NotificationTasks\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentDelete\">\n-      <a href=\"#\" wicket:id=\"deleteLink\" class=\"btn\"><i class=\"glyphicon glyphicon-minus\" alt=\"delete icon\" title=\"Delete\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentDryRun\">\n-      <a href=\"#\" wicket:id=\"dryRunLink\" class=\"btn\"><i class=\"fa fa-gears\" alt=\"dryrun icon\" title=\"DryRun\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentExecute\">\n-      <a href=\"#\" wicket:id=\"executeLink\" class=\"btn\"><i class=\"fa fa-gear\" alt=\"execute icon\" title=\"Execute\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentPasswordReset\">\n-      <a href=\"#\" wicket:id=\"passwordResetLink\" class=\"btn\"><i class=\"fa fa-shield\" alt=\"password reset icon\" title=\"Password reset\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentSelect\">\n-      <a href=\"#\" wicket:id=\"selectLink\" class=\"btn\"><i class=\"glyphicon glyphicon-ok\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentClose\">\n-      <a href=\"#\" wicket:id=\"closeLink\" class=\"btn\"><i class=\"fa fa-sign-out\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentExport\">\n-      <a href=\"#\" wicket:id=\"exportLink\" class=\"btn\"><i class=\"fa fa-floppy-o\" alt=\"export icon\" title=\"Export\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentExportCSV\">\n-      <a href=\"#\" wicket:id=\"exportCSVLink\" class=\"btn\"><i class=\"fa fa-file-text-o\" alt=\"export icon\" title=\"Export CSV\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentExportHTML\">\n-      <a href=\"#\" wicket:id=\"exportHTMLLink\" class=\"btn\"><i class=\"fa fa-file-code-o\" alt=\"export icon\" title=\"Export HTML\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentExportPDF\">\n-      <a href=\"#\" wicket:id=\"exportPDFLink\" class=\"btn\"><i class=\"fa fa-file-pdf-o\" alt=\"export icon\" title=\"Export PDF\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentExportRTF\">\n-      <a href=\"#\" wicket:id=\"exportRTFLink\" class=\"btn\"><i class=\"fa fa-file-word-o\" alt=\"export icon\" title=\"Export RTF\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentExportXML\">\n-      <a href=\"#\" wicket:id=\"exportXMLLink\" class=\"btn\"><i class=\"fa fa-file-excel-o\" alt=\"export icon\" title=\"Export XML\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentSuspend\">\n-      <a href=\"#\" wicket:id=\"suspendLink\" class=\"btn\"><i class=\"glyphicon glyphicon-ban-circle\" alt=\"suspend icon\" title=\"Suspend\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentReactivate\">\n-      <a href=\"#\" wicket:id=\"reactivateLink\" class=\"btn\"><i class=\"glyphicon glyphicon-ok-sign\" alt=\"reactivate icon\" title=\"Reactivate\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentReload\">\n-      <a href=\"#\" wicket:id=\"reloadLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-repeat\" alt=\"reload icon\" title=\"Reload\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentChangeView\">\n-      <a href=\"#\" wicket:id=\"changeViewLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-list\" alt=\"Change view icon\" title=\"Change view\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentUnlink\">\n-      <a href=\"#\" wicket:id=\"unlinkLink\" class=\"btn\"><i class=\"fa fa-unlink\" alt=\"Unlink icon\" title=\"Unlink\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentLink\">\n-      <a href=\"#\" wicket:id=\"linkLink\" class=\"btn\"><i class=\"fa fa-link\" alt=\"Link icon\" title=\"Link\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentUnassign\">\n-      <a href=\"#\" wicket:id=\"unassignLink\" class=\"btn\"><i class=\"glyphicon glyphicon-resize-full\" alt=\"Unassign icon\" title=\"Unassign\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentAssign\">\n-      <a href=\"#\" wicket:id=\"assignLink\" class=\"btn\"><i class=\"glyphicon glyphicon-resize-small\" alt=\"Assign icon\" title=\"Assign\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentDeprovision\">\n-      <a href=\"#\" wicket:id=\"deprovisionLink\" class=\"btn\"><i class=\"glyphicon glyphicon-fast-backward\" alt=\"Deprovision icon\" title=\"Deprovision\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentProvision\">\n-      <a href=\"#\" wicket:id=\"provisionLink\" class=\"btn\"><i class=\"glyphicon glyphicon-fast-forward\" alt=\"Provision icon\" title=\"Provision\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentDeprovisionMembers\">\n-      <a href=\"#\" wicket:id=\"deprovisionMembersLink\" class=\"btn\"><i class=\"glyphicon glyphicon-fast-backward\" alt=\"Deprovision icon\" title=\"Deprovision members\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentProvisionMembers\">\n-      <a href=\"#\" wicket:id=\"provisionMembersLink\" class=\"btn\"><i class=\"glyphicon glyphicon-fast-forward\" alt=\"Provision icon\" title=\"Provision members\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentZoomIn\">\n-      <a href=\"#\" wicket:id=\"zoomInLink\" class=\"btn\"><i class=\"fa fa-search-plus\" alt=\"zoom in icon\" title=\"Zoom In\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentZoomOut\">\n-      <a href=\"#\" wicket:id=\"zoomOutLink\" class=\"btn\"><i class=\"fa fa-search-minus\" alt=\"zoom out icon\" title=\"Zoom Out\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentWorkflowModeler\">\n-      <a wicket:id=\"workflowModelerLink\" class=\"btn\"><i class=\"fa fa-picture-o\" alt=\"picture icon\" title=\"Workflow Modeler\"></i></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"emptyFragment\">\n-    </wicket:fragment>\n-  </wicket:panel>\n-</html>"},{"sha":"79679d237178c75ef2f64603a6299743249b2727","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksTogglePanel.html","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div wicket:id=\"container\">\n+      <wicket:container wicket:id=\"actions\" />\n+    </div>\n+\n+    <wicket:fragment wicket:id=\"emptyFragment\"></wicket:fragment>\n+    <wicket:fragment wicket:id=\"actionsFragment\">\n+      <div wicket:id=\"actions\"></div>\n+    </wicket:fragment>\n+  </wicket:extend>\n+</html>"},{"sha":"51eb2515e2f8fedbfd859c81558a84ce0aad84f0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionPanel.html","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <li>\n+      <a href=\"#\" wicket:id=\"action\" class=\"btn\">\n+        <i wicket:id=\"actionIcon\"></i>\n+        <wicket:enclosure child=\"label\">\n+          <label wicket:id=\"label\">[LABEL]</label>\n+        </wicket:enclosure>\n+      </a>\n+    </li>\n+  </wicket:panel>\n+</html>"},{"sha":"3eff2308363549b4e72a35958dd36a6a13c0d27f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionPanel.properties","status":"added","additions":227,"deletions":0,"changes":227,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,227 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mapping.class=fa fa-exchange\n+mapping.title=mapping\n+mapping.alt=mapping icon\n+\n+mustchangepassword.class=fa fa-lock\n+mustchangepassword.title=set must change password\n+mustchangepassword.alt=must change password icon\n+\n+set_latest_sync_token.class=fa fa-hourglass-start\n+set_latest_sync_token.title=set last sync token\n+set_latest_sync_token.alt=set last sync token icon\n+\n+remove_sync_token.class=fa fa-hourglass-o\n+remove_sync_token.title=remove sync token\n+remove_sync_token.alt=remove sync token icon\n+\n+clone.class=fa fa-clone\n+clone.title=clone\n+clone.alt=clone icon\n+\n+create.class=glyphicon glyphicon-plus\n+create.title=create\n+create.alt=create icon\n+\n+template.class=fa fa-list-alt\n+template.title=template\n+template.alt=template icon\n+\n+edit.class=glyphicon glyphicon-pencil\n+edit.title=edit\n+edit.alt=edit icon\n+\n+type_extensions.class=fa fa-expand\n+type_extensions.title=extensions\n+type_extensions.alt=extensions icon\n+\n+fo_edit.class=fa fa-file-code-o\n+fo_edit.title=fo\n+fo_edit.alt=fo icon\n+\n+html.class=fa fa-file-code-o\n+html.title=html\n+html.alt=html icon\n+\n+text.class=fa fa-file-text-o\n+text.title=text\n+text.alt=text icon\n+\n+compose.class=fa fa-puzzle-piece\n+compose.title=compose\n+compose.alt=compose icon\n+\n+layout_edit.class=fa fa-object-ungroup\n+layout_edit.title=layout\n+layout_edit.alt=layout icon\n+\n+reset.class=fa fa-shield\n+reset.title=reset\n+reset.alt=reset icon\n+\n+enable.class=fa fa-toggle-on\n+enable.title=enable\n+enable.alt=enable icon\n+\n+not_found.class=fa fa-eye-slash\n+not_found.title=not found\n+not_found.alt=not found icon\n+\n+view.class=fa fa-eye\n+view.title=view\n+view.alt=view icon\n+\n+members.class=fa fa-users\n+members.title=members\n+members.alt=members icon\n+\n+search.class=glyphicon glyphicon-search\n+search.title=search\n+search.alt=search icon\n+\n+delete.class=glyphicon glyphicon-minus\n+delete.title=delete\n+delete.alt=delete icon\n+\n+execute.class=fa fa-gear\n+execute.title=execute\n+execute.alt=execute icon\n+\n+password_reset.class=fa fa-shield\n+password_reset.title=password reset\n+password_reset.alt=password reset icon\n+\n+dryrun.class=fa fa-gears\n+dryrun.title=dry-run\n+dryrun.alt=dry-run icon\n+\n+claim.class=fa fa-ticket\n+claim.title=claim\n+claim.alt=claim icon\n+\n+select.class=glyphicon glyphicon-ok\n+select.title=select\n+select.alt=select icon\n+\n+close.class=fa fa-sign-out\n+close.title=close\n+close.alt=close icon\n+\n+export.class=fa fa-floppy-o\n+export.title=export\n+export.alt=export icon\n+\n+export_csv.class=fa fa-file-text-o\n+export_csv.title=export as csv\n+export_csv.alt=export as csv icon\n+\n+export_html.class=fa fa-file-code-o\n+export_html.title=export as html\n+export_html.alt=export as html icon\n+\n+export_pdf.class=fa fa-file-pdf-o\n+export_pdf.title=export as pdf\n+export_pdf.alt=export as pdf icon\n+\n+export_rtf.class=fa fa-file-word-o\n+export_rtf.title=export as rtf\n+export_rtf.alt=export as rtf icon\n+\n+export_xml.class=fa fa-file-excel-o\n+export_xml.title=export as xml\n+export_xml.alt=export as xml icon\n+\n+suspend.class=glyphicon glyphicon-ban-circle\n+suspend.title=suspend\n+suspend.alt=suspend icon\n+\n+reactivate.class=glyphicon glyphicon-ok-sign\n+reactivate.title=reactivate\n+reactivate.alt=reactivate icon\n+\n+reload.class=fa fa-repeat\n+reload.title=reload\n+reload.alt=reload icon\n+\n+change_view.class=fa fa-list\"\n+change_view.title=change view\n+change_view.alt=change view icon\n+\n+unlink.class=fa fa-unlink\n+unlink.title=unlink\n+unlink.alt=unlink icon\n+\n+link.class=fa fa-link\n+link.title=link\n+link.alt=link icon\n+\n+unassign.class=glyphicon glyphicon-resize-full\n+unassign.title=unassign\n+unassign.alt=unassign icon\n+\n+assign.class=glyphicon glyphicon-resize-small\n+assign.title=assign\n+assign.alt=assign icon\n+\n+deprovision.class=glyphicon glyphicon-fast-backward\n+deprovision.title=deprovision\n+deprovision.alt=deprovision icon\n+\n+provision.class=glyphicon glyphicon-fast-forward\n+provision.title=provision\n+provision.alt=provision icon\n+\n+deprovision_members.class=glyphicon glyphicon-fast-backward\n+deprovision_members.title=deprovision members\n+deprovision_members.alt=deprovision members icon\n+\n+provision_members.class=glyphicon glyphicon-fast-forward\n+provision_members.title=provision members\n+provision_members.alt=provision members icon\n+\n+manage_resources.class=fa fa-sitemap\n+manage_resources.title=manage resources\n+manage_resources.alt=manage resources icon\n+\n+manage_users.class=fa fa-users\n+manage_users.title=manage users\n+manage_users.alt=manage users icon\n+\n+manage_groups.class=fa fa-users\n+manage_groups.title=manage groups\n+manage_groups.alt=manage groups icon\n+\n+propagation_tasks.class=fa fa-arrow-right\n+propagation_tasks.title=propagation tasks\n+propagation_tasks.alt=propagation tasks icon\n+\n+notification_tasks.class=fa fa-envelope-o\n+notification_tasks.title=notification tasks\n+notification_tasks.alt=notification tasks icon\n+\n+zoom_in.class=fa fa-search-plus\n+zoom_in.title=zoom-in\n+zoom_in.alt=zoom-in icon\n+\n+zoom_out.class=fa fa-search-minus\n+zoom_out.title=zoom-out\n+zoom_out.alt=zoom-out icon\n+\n+workflow_modeler.class=fa fa-picture-o\n+workflow_modeler.title=workflow modeler\n+workflow_modeler.alt=workflow modeler icon"},{"sha":"e23ad289bd5ef753aa5f75d8df4bac6db31e3313","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionPanel_it.properties","status":"added","additions":226,"deletions":0,"changes":226,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_it.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,226 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mapping.class=fa fa-exchange\n+mapping.title=mapping\n+mapping.alt=mapping icon\n+\n+mustchangepassword.class=fa fa-lock\n+mustchangepassword.title=set must change password\n+mustchangepassword.alt=must change password icon\n+\n+set_latest_sync_token.class=fa fa-hourglass-start\n+set_latest_sync_token.title=set last sync token\n+set_latest_sync_token.alt=set last sync token icon\n+\n+remove_sync_token.class=fa fa-hourglass-o\n+remove_sync_token.title=remove sync token\n+remove_sync_token.alt=remove sync token icon\n+\n+clone.class=fa fa-clone\n+clone.title=clone\n+clone.alt=clone icon\n+\n+create.class=glyphicon glyphicon-plus\n+create.title=create\n+create.alt=create icon\n+\n+template.class=fa fa-list-alt\n+template.title=template\n+template.alt=template icon\n+\n+edit.class=glyphicon glyphicon-pencil\n+edit.title=edit\n+edit.alt=edit icon\n+\n+type_extensions.class=fa fa-expand\n+type_extensions.title=extensions\n+type_extensions.alt=extensions icon\n+\n+fo_edit.class=fa fa-file-code-o\n+fo_edit.title=fo\n+fo_edit.alt=fo icon\n+\n+html.class=fa fa-file-code-o\n+html.title=html\n+html.alt=html icon\n+\n+text.class=fa fa-file-text-o\n+text.title=text\n+text.alt=text icon\n+\n+compose.class=fa fa-puzzle-piece\n+compose.title=compose\n+compose.alt=compose icon\n+\n+layout_edit.class=fa fa-object-ungroup\n+layout_edit.title=layout\n+layout_edit.alt=layout icon\n+\n+reset.class=fa fa-shield\n+reset.title=reset\n+reset.alt=reset icon\n+\n+enable.class=fa fa-toggle-on\n+enable.title=enable\n+enable.alt=enable icon\n+\n+not_found.class=fa fa-eye-slash\n+not_found.title=not found\n+not_found.alt=not found icon\n+\n+view.class=fa fa-eye\n+view.title=view\n+view.alt=view icon\n+\n+members.class=fa fa-users\n+members.title=members\n+members.alt=members icon\n+\n+search.class=glyphicon glyphicon-search\n+search.title=search\n+search.alt=search icon\n+\n+delete.class=glyphicon glyphicon-minus\n+delete.title=delete\n+delete.alt=delete icon\n+\n+execute.class=fa fa-gear\n+execute.title=execute\n+execute.alt=execute icon\n+\n+password_reset.class=fa fa-shield\n+password_reset.title=password reset\n+password_reset.alt=password reset icon\n+\n+dryrun.class=fa fa-gears\n+dryrun.title=dry-run\n+dryrun.alt=dry-run icon\n+\n+claim.class=fa fa-ticket\n+claim.title=claim\n+claim.alt=claim icon\n+\n+select.class=glyphicon glyphicon-ok\n+select.title=select\n+select.alt=select icon\n+\n+close.class=fa fa-sign-out\n+close.title=close\n+close.alt=close icon\n+\n+export.class=fa fa-floppy-o\n+export.title=export\n+export.alt=export icon\n+\n+export_csv.class=fa fa-file-text-o\n+export_csv.title=export as csv\n+export_csv.alt=export as csv icon\n+\n+export_html.class=fa fa-file-code-o\n+export_html.title=export as html\n+export_html.alt=export as html icon\n+\n+export_pdf.class=fa fa-file-pdf-o\n+export_pdf.title=export as pdf\n+export_pdf.alt=export as pdf icon\n+\n+export_rtf.class=fa fa-file-word-o\n+export_rtf.title=export as rtf\n+export_rtf.alt=export as rtf icon\n+\n+export_xml.class=fa fa-file-excel-o\n+export_xml.title=export as xml\n+export_xml.alt=export as xml icon\n+\n+suspend.class=glyphicon glyphicon-ban-circle\n+suspend.title=suspend\n+suspend.alt=suspend icon\n+\n+reactivate.class=glyphicon glyphicon-ok-sign\n+reactivate.title=reactivate\n+reactivate.alt=reactivate icon\n+\n+reload.class=fa fa-repeat\n+reload.title=reload\n+reload.alt=reload icon\n+\n+change_view.class=fa fa-list\"\n+change_view.title=change view\n+change_view.alt=change view icon\n+\n+unlink.class=fa fa-unlink\n+unlink.title=unlink\n+unlink.alt=unlink icon\n+\n+link.class=fa fa-link\n+link.title=link\n+link.alt=link icon\n+\n+unassign.class=glyphicon glyphicon-resize-full\n+unassign.title=unassign\n+unassign.alt=unassign icon\n+\n+assign.class=glyphicon glyphicon-resize-small\n+assign.title=assign\n+assign.alt=assign icon\n+\n+deprovision.class=glyphicon glyphicon-fast-backward\n+deprovision.title=deprovision\n+deprovision.alt=deprovision icon\n+\n+provision.class=glyphicon glyphicon-fast-forward\n+provision.title=provision\n+provision.alt=provision icon\n+\n+deprovision_members.class=glyphicon glyphicon-fast-backward\n+deprovision_members.title=deprovision members\n+deprovision_members.alt=deprovision members icon\n+\n+provision_members.class=glyphicon glyphicon-fast-forward\n+provision_members.title=provision members\n+provision_members.alt=provision members icon\n+\n+manage_resources.class=fa fa-sitemap\n+manage_resources.title=manage resources\n+manage_resources.alt=manage resources icon\n+\n+manage_users.class=fa fa-users\n+manage_users.title=manage users\n+manage_users.alt=manage users icon\n+\n+manage_groups.class=fa fa-users\n+manage_groups.title=manage groups\n+manage_groups.alt=manage groups icon\n+\n+propagation_tasks.class=fa fa-arrow-right\n+propagation_tasks.title=propagation tasks\n+propagation_tasks.alt=propagation tasks icon\n+\n+notification_tasks.class=fa fa-envelope-o\n+notification_tasks.title=notification tasks\n+notification_tasks.alt=notification tasks icon\n+\n+zoom_in.class=fa fa-search-plus\n+zoom_in.title=zoom-in\n+zoom_in.alt=zoom-in icon\n+\n+zoom_out.class=fa fa-search-minus\n+zoom_out.title=zoom-out\n+zoom_out.alt=zoom-out icon\n+workflow_modeler.class=fa fa-picture-o\n+workflow_modeler.title=workflow modeler\n+workflow_modeler.alt=workflow modeler icon"},{"sha":"e23ad289bd5ef753aa5f75d8df4bac6db31e3313","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionPanel_pt_BR.properties","status":"added","additions":226,"deletions":0,"changes":226,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_pt_BR.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,226 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mapping.class=fa fa-exchange\n+mapping.title=mapping\n+mapping.alt=mapping icon\n+\n+mustchangepassword.class=fa fa-lock\n+mustchangepassword.title=set must change password\n+mustchangepassword.alt=must change password icon\n+\n+set_latest_sync_token.class=fa fa-hourglass-start\n+set_latest_sync_token.title=set last sync token\n+set_latest_sync_token.alt=set last sync token icon\n+\n+remove_sync_token.class=fa fa-hourglass-o\n+remove_sync_token.title=remove sync token\n+remove_sync_token.alt=remove sync token icon\n+\n+clone.class=fa fa-clone\n+clone.title=clone\n+clone.alt=clone icon\n+\n+create.class=glyphicon glyphicon-plus\n+create.title=create\n+create.alt=create icon\n+\n+template.class=fa fa-list-alt\n+template.title=template\n+template.alt=template icon\n+\n+edit.class=glyphicon glyphicon-pencil\n+edit.title=edit\n+edit.alt=edit icon\n+\n+type_extensions.class=fa fa-expand\n+type_extensions.title=extensions\n+type_extensions.alt=extensions icon\n+\n+fo_edit.class=fa fa-file-code-o\n+fo_edit.title=fo\n+fo_edit.alt=fo icon\n+\n+html.class=fa fa-file-code-o\n+html.title=html\n+html.alt=html icon\n+\n+text.class=fa fa-file-text-o\n+text.title=text\n+text.alt=text icon\n+\n+compose.class=fa fa-puzzle-piece\n+compose.title=compose\n+compose.alt=compose icon\n+\n+layout_edit.class=fa fa-object-ungroup\n+layout_edit.title=layout\n+layout_edit.alt=layout icon\n+\n+reset.class=fa fa-shield\n+reset.title=reset\n+reset.alt=reset icon\n+\n+enable.class=fa fa-toggle-on\n+enable.title=enable\n+enable.alt=enable icon\n+\n+not_found.class=fa fa-eye-slash\n+not_found.title=not found\n+not_found.alt=not found icon\n+\n+view.class=fa fa-eye\n+view.title=view\n+view.alt=view icon\n+\n+members.class=fa fa-users\n+members.title=members\n+members.alt=members icon\n+\n+search.class=glyphicon glyphicon-search\n+search.title=search\n+search.alt=search icon\n+\n+delete.class=glyphicon glyphicon-minus\n+delete.title=delete\n+delete.alt=delete icon\n+\n+execute.class=fa fa-gear\n+execute.title=execute\n+execute.alt=execute icon\n+\n+password_reset.class=fa fa-shield\n+password_reset.title=password reset\n+password_reset.alt=password reset icon\n+\n+dryrun.class=fa fa-gears\n+dryrun.title=dry-run\n+dryrun.alt=dry-run icon\n+\n+claim.class=fa fa-ticket\n+claim.title=claim\n+claim.alt=claim icon\n+\n+select.class=glyphicon glyphicon-ok\n+select.title=select\n+select.alt=select icon\n+\n+close.class=fa fa-sign-out\n+close.title=close\n+close.alt=close icon\n+\n+export.class=fa fa-floppy-o\n+export.title=export\n+export.alt=export icon\n+\n+export_csv.class=fa fa-file-text-o\n+export_csv.title=export as csv\n+export_csv.alt=export as csv icon\n+\n+export_html.class=fa fa-file-code-o\n+export_html.title=export as html\n+export_html.alt=export as html icon\n+\n+export_pdf.class=fa fa-file-pdf-o\n+export_pdf.title=export as pdf\n+export_pdf.alt=export as pdf icon\n+\n+export_rtf.class=fa fa-file-word-o\n+export_rtf.title=export as rtf\n+export_rtf.alt=export as rtf icon\n+\n+export_xml.class=fa fa-file-excel-o\n+export_xml.title=export as xml\n+export_xml.alt=export as xml icon\n+\n+suspend.class=glyphicon glyphicon-ban-circle\n+suspend.title=suspend\n+suspend.alt=suspend icon\n+\n+reactivate.class=glyphicon glyphicon-ok-sign\n+reactivate.title=reactivate\n+reactivate.alt=reactivate icon\n+\n+reload.class=fa fa-repeat\n+reload.title=reload\n+reload.alt=reload icon\n+\n+change_view.class=fa fa-list\"\n+change_view.title=change view\n+change_view.alt=change view icon\n+\n+unlink.class=fa fa-unlink\n+unlink.title=unlink\n+unlink.alt=unlink icon\n+\n+link.class=fa fa-link\n+link.title=link\n+link.alt=link icon\n+\n+unassign.class=glyphicon glyphicon-resize-full\n+unassign.title=unassign\n+unassign.alt=unassign icon\n+\n+assign.class=glyphicon glyphicon-resize-small\n+assign.title=assign\n+assign.alt=assign icon\n+\n+deprovision.class=glyphicon glyphicon-fast-backward\n+deprovision.title=deprovision\n+deprovision.alt=deprovision icon\n+\n+provision.class=glyphicon glyphicon-fast-forward\n+provision.title=provision\n+provision.alt=provision icon\n+\n+deprovision_members.class=glyphicon glyphicon-fast-backward\n+deprovision_members.title=deprovision members\n+deprovision_members.alt=deprovision members icon\n+\n+provision_members.class=glyphicon glyphicon-fast-forward\n+provision_members.title=provision members\n+provision_members.alt=provision members icon\n+\n+manage_resources.class=fa fa-sitemap\n+manage_resources.title=manage resources\n+manage_resources.alt=manage resources icon\n+\n+manage_users.class=fa fa-users\n+manage_users.title=manage users\n+manage_users.alt=manage users icon\n+\n+manage_groups.class=fa fa-users\n+manage_groups.title=manage groups\n+manage_groups.alt=manage groups icon\n+\n+propagation_tasks.class=fa fa-arrow-right\n+propagation_tasks.title=propagation tasks\n+propagation_tasks.alt=propagation tasks icon\n+\n+notification_tasks.class=fa fa-envelope-o\n+notification_tasks.title=notification tasks\n+notification_tasks.alt=notification tasks icon\n+\n+zoom_in.class=fa fa-search-plus\n+zoom_in.title=zoom-in\n+zoom_in.alt=zoom-in icon\n+\n+zoom_out.class=fa fa-search-minus\n+zoom_out.title=zoom-out\n+zoom_out.alt=zoom-out icon\n+workflow_modeler.class=fa fa-picture-o\n+workflow_modeler.title=workflow modeler\n+workflow_modeler.alt=workflow modeler icon"},{"sha":"e23ad289bd5ef753aa5f75d8df4bac6db31e3313","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionPanel_ru.properties","status":"added","additions":226,"deletions":0,"changes":226,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionPanel_ru.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,226 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mapping.class=fa fa-exchange\n+mapping.title=mapping\n+mapping.alt=mapping icon\n+\n+mustchangepassword.class=fa fa-lock\n+mustchangepassword.title=set must change password\n+mustchangepassword.alt=must change password icon\n+\n+set_latest_sync_token.class=fa fa-hourglass-start\n+set_latest_sync_token.title=set last sync token\n+set_latest_sync_token.alt=set last sync token icon\n+\n+remove_sync_token.class=fa fa-hourglass-o\n+remove_sync_token.title=remove sync token\n+remove_sync_token.alt=remove sync token icon\n+\n+clone.class=fa fa-clone\n+clone.title=clone\n+clone.alt=clone icon\n+\n+create.class=glyphicon glyphicon-plus\n+create.title=create\n+create.alt=create icon\n+\n+template.class=fa fa-list-alt\n+template.title=template\n+template.alt=template icon\n+\n+edit.class=glyphicon glyphicon-pencil\n+edit.title=edit\n+edit.alt=edit icon\n+\n+type_extensions.class=fa fa-expand\n+type_extensions.title=extensions\n+type_extensions.alt=extensions icon\n+\n+fo_edit.class=fa fa-file-code-o\n+fo_edit.title=fo\n+fo_edit.alt=fo icon\n+\n+html.class=fa fa-file-code-o\n+html.title=html\n+html.alt=html icon\n+\n+text.class=fa fa-file-text-o\n+text.title=text\n+text.alt=text icon\n+\n+compose.class=fa fa-puzzle-piece\n+compose.title=compose\n+compose.alt=compose icon\n+\n+layout_edit.class=fa fa-object-ungroup\n+layout_edit.title=layout\n+layout_edit.alt=layout icon\n+\n+reset.class=fa fa-shield\n+reset.title=reset\n+reset.alt=reset icon\n+\n+enable.class=fa fa-toggle-on\n+enable.title=enable\n+enable.alt=enable icon\n+\n+not_found.class=fa fa-eye-slash\n+not_found.title=not found\n+not_found.alt=not found icon\n+\n+view.class=fa fa-eye\n+view.title=view\n+view.alt=view icon\n+\n+members.class=fa fa-users\n+members.title=members\n+members.alt=members icon\n+\n+search.class=glyphicon glyphicon-search\n+search.title=search\n+search.alt=search icon\n+\n+delete.class=glyphicon glyphicon-minus\n+delete.title=delete\n+delete.alt=delete icon\n+\n+execute.class=fa fa-gear\n+execute.title=execute\n+execute.alt=execute icon\n+\n+password_reset.class=fa fa-shield\n+password_reset.title=password reset\n+password_reset.alt=password reset icon\n+\n+dryrun.class=fa fa-gears\n+dryrun.title=dry-run\n+dryrun.alt=dry-run icon\n+\n+claim.class=fa fa-ticket\n+claim.title=claim\n+claim.alt=claim icon\n+\n+select.class=glyphicon glyphicon-ok\n+select.title=select\n+select.alt=select icon\n+\n+close.class=fa fa-sign-out\n+close.title=close\n+close.alt=close icon\n+\n+export.class=fa fa-floppy-o\n+export.title=export\n+export.alt=export icon\n+\n+export_csv.class=fa fa-file-text-o\n+export_csv.title=export as csv\n+export_csv.alt=export as csv icon\n+\n+export_html.class=fa fa-file-code-o\n+export_html.title=export as html\n+export_html.alt=export as html icon\n+\n+export_pdf.class=fa fa-file-pdf-o\n+export_pdf.title=export as pdf\n+export_pdf.alt=export as pdf icon\n+\n+export_rtf.class=fa fa-file-word-o\n+export_rtf.title=export as rtf\n+export_rtf.alt=export as rtf icon\n+\n+export_xml.class=fa fa-file-excel-o\n+export_xml.title=export as xml\n+export_xml.alt=export as xml icon\n+\n+suspend.class=glyphicon glyphicon-ban-circle\n+suspend.title=suspend\n+suspend.alt=suspend icon\n+\n+reactivate.class=glyphicon glyphicon-ok-sign\n+reactivate.title=reactivate\n+reactivate.alt=reactivate icon\n+\n+reload.class=fa fa-repeat\n+reload.title=reload\n+reload.alt=reload icon\n+\n+change_view.class=fa fa-list\"\n+change_view.title=change view\n+change_view.alt=change view icon\n+\n+unlink.class=fa fa-unlink\n+unlink.title=unlink\n+unlink.alt=unlink icon\n+\n+link.class=fa fa-link\n+link.title=link\n+link.alt=link icon\n+\n+unassign.class=glyphicon glyphicon-resize-full\n+unassign.title=unassign\n+unassign.alt=unassign icon\n+\n+assign.class=glyphicon glyphicon-resize-small\n+assign.title=assign\n+assign.alt=assign icon\n+\n+deprovision.class=glyphicon glyphicon-fast-backward\n+deprovision.title=deprovision\n+deprovision.alt=deprovision icon\n+\n+provision.class=glyphicon glyphicon-fast-forward\n+provision.title=provision\n+provision.alt=provision icon\n+\n+deprovision_members.class=glyphicon glyphicon-fast-backward\n+deprovision_members.title=deprovision members\n+deprovision_members.alt=deprovision members icon\n+\n+provision_members.class=glyphicon glyphicon-fast-forward\n+provision_members.title=provision members\n+provision_members.alt=provision members icon\n+\n+manage_resources.class=fa fa-sitemap\n+manage_resources.title=manage resources\n+manage_resources.alt=manage resources icon\n+\n+manage_users.class=fa fa-users\n+manage_users.title=manage users\n+manage_users.alt=manage users icon\n+\n+manage_groups.class=fa fa-users\n+manage_groups.title=manage groups\n+manage_groups.alt=manage groups icon\n+\n+propagation_tasks.class=fa fa-arrow-right\n+propagation_tasks.title=propagation tasks\n+propagation_tasks.alt=propagation tasks icon\n+\n+notification_tasks.class=fa fa-envelope-o\n+notification_tasks.title=notification tasks\n+notification_tasks.alt=notification tasks icon\n+\n+zoom_in.class=fa fa-search-plus\n+zoom_in.title=zoom-in\n+zoom_in.alt=zoom-in icon\n+\n+zoom_out.class=fa fa-search-minus\n+zoom_out.title=zoom-out\n+zoom_out.alt=zoom-out icon\n+workflow_modeler.class=fa fa-picture-o\n+workflow_modeler.title=workflow modeler\n+workflow_modeler.alt=workflow modeler icon"},{"sha":"54d24236fb6ec5b1dfff287673a316fc1df14856","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel.html","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,34 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n+  <wicket:head>\n+    <style type=\"text/css\">\n+      div#actionsTogglePanel div.toggle-menu {\n+        top: 0px !important;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <ul class=\"menu\">\n+      <wicket:container wicket:id=\"actionRepeater\">\n+        <wicket:container wicket:id=\"action\"/>\n+      </wicket:container>\n+    </ul>\n+  </wicket:panel>\n+</html>"},{"sha":"79692d86b202450e9b2164a9a9392adbb99622c0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel.properties","status":"added","additions":223,"deletions":0,"changes":223,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,223 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mapping.class=fa fa-exchange\n+mapping.title=mapping\n+mapping.alt=mapping icon\n+\n+mustchangepassword.class=fa fa-lock\n+mustchangepassword.title=set must change password\n+mustchangepassword.alt=must change password icon\n+\n+set_latest_sync_token.class=fa fa-hourglass-start\n+set_latest_sync_token.title=set last sync token\n+set_latest_sync_token.alt=set last sync token icon\n+\n+remove_sync_token.class=fa fa-hourglass-o\n+remove_sync_token.title=remove sync token\n+remove_sync_token.alt=remove sync token icon\n+\n+clone.class=fa fa-clone\n+clone.title=clone\n+clone.alt=clone icon\n+\n+create.class=glyphicon glyphicon-plus\n+create.title=create\n+create.alt=create icon\n+\n+template.class=fa fa-list-alt\n+template.title=template\n+template.alt=template icon\n+\n+edit.class=glyphicon glyphicon-pencil\n+edit.title=edit\n+edit.alt=edit icon\n+\n+type_extensions.class=fa fa-expand\n+type_extensions.title=extensions\n+type_extensions.alt=extensions icon\n+\n+fo_edit.class=fa fa-file-code-o\n+fo_edit.title=fo\n+fo_edit.alt=fo icon\n+\n+html.class=fa fa-file-code-o\n+html.title=html\n+html.alt=html icon\n+\n+text.class=fa fa-file-text-o\n+text.title=text\n+text.alt=text icon\n+\n+compose.class=fa fa-puzzle-piece\n+compose.title=compose\n+compose.alt=compose icon\n+\n+layout_edit.class=fa fa-object-ungroup\n+layout_edit.title=layout\n+layout_edit.alt=layout icon\n+\n+reset.class=fa fa-shield\n+reset.title=reset\n+reset.alt=reset icon\n+\n+enable.class=fa fa-toggle-on\n+enable.title=enable\n+enable.alt=enable icon\n+\n+not_found.class=fa fa-eye-slash\n+not_found.title=not found\n+not_found.alt=not found icon\n+\n+view.class=fa fa-eye\n+view.title=view\n+view.alt=view icon\n+\n+members.class=fa fa-users\n+members.title=members\n+members.alt=members icon\n+\n+search.class=glyphicon glyphicon-search\n+search.title=search\n+search.alt=search icon\n+\n+delete.class=glyphicon glyphicon-minus\n+delete.title=delete\n+delete.alt=delete icon\n+\n+execute.class=fa fa-gear\n+execute.title=execute\n+execute.alt=execute icon\n+\n+password_reset.class=fa fa-shield\n+password_reset.title=password reset\n+password_reset.alt=password reset icon\n+\n+dryrun.class=fa fa-gears\n+dryrun.title=dry-run\n+dryrun.alt=dry-run icon\n+\n+claim.class=fa fa-ticket\n+claim.title=claim\n+claim.alt=claim icon\n+\n+select.class=glyphicon glyphicon-ok\n+select.title=select\n+select.alt=select icon\n+\n+close.class=fa fa-sign-out\n+close.title=close\n+close.alt=close icon\n+\n+export.class=fa fa-floppy-o\n+export.title=export\n+export.alt=export icon\n+\n+export_csv.class=fa fa-file-text-o\n+export_csv.title=export as csv\n+export_csv.alt=export as csv icon\n+\n+export_html.class=fa fa-file-code-o\n+export_html.title=export as html\n+export_html.alt=export as html icon\n+\n+export_pdf.class=fa fa-file-pdf-o\n+export_pdf.title=export as pdf\n+export_pdf.alt=export as pdf icon\n+\n+export_rtf.class=fa fa-file-word-o\n+export_rtf.title=export as rtf\n+export_rtf.alt=export as rtf icon\n+\n+export_xml.class=fa fa-file-excel-o\n+export_xml.title=export as xml\n+export_xml.alt=export as xml icon\n+\n+suspend.class=glyphicon glyphicon-ban-circle\n+suspend.title=suspend\n+suspend.alt=suspend icon\n+\n+reactivate.class=glyphicon glyphicon-ok-sign\n+reactivate.title=reactivate\n+reactivate.alt=reactivate icon\n+\n+reload.class=fa fa-repeat\n+reload.title=reload\n+reload.alt=reload icon\n+\n+change_view.class=fa fa-list\n+change_view.title=change view\n+change_view.alt=change view icon\n+\n+unlink.class=fa fa-unlink\n+unlink.title=unlink\n+unlink.alt=unlink icon\n+\n+link.class=fa fa-link\n+link.title=link\n+link.alt=link icon\n+\n+unassign.class=glyphicon glyphicon-resize-full\n+unassign.title=unassign\n+unassign.alt=unassign icon\n+\n+assign.class=glyphicon glyphicon-resize-small\n+assign.title=assign\n+assign.alt=assign icon\n+\n+deprovision.class=glyphicon glyphicon-fast-backward\n+deprovision.title=deprovision\n+deprovision.alt=deprovision icon\n+\n+provision.class=glyphicon glyphicon-fast-forward\n+provision.title=provision\n+provision.alt=provision icon\n+\n+deprovision_members.class=glyphicon glyphicon-fast-backward\n+deprovision_members.title=deprovision members\n+deprovision_members.alt=deprovision members icon\n+\n+provision_members.class=glyphicon glyphicon-fast-forward\n+provision_members.title=provision members\n+provision_members.alt=provision members icon\n+\n+manage_resources.class=fa fa-sitemap\n+manage_resources.title=manage resources\n+manage_resources.alt=manage resources icon\n+\n+manage_users.class=fa fa-users\n+manage_users.title=manage users\n+manage_users.alt=manage users icon\n+\n+manage_groups.class=fa fa-users\n+manage_groups.title=manage groups\n+manage_groups.alt=manage groups icon\n+\n+propagation_tasks.class=fa fa-arrow-right\n+propagation_tasks.title=propagation tasks\n+propagation_tasks.alt=propagation tasks icon\n+\n+notification_tasks.class=fa fa-envelope-o\n+notification_tasks.title=notification tasks\n+notification_tasks.alt=notification tasks icon\n+\n+zoom_in.class=fa fa-search-plus\n+zoom_in.title=zoom-in\n+zoom_in.alt=zoom-in icon\n+\n+zoom_out.class=fa fa-search-minus\n+zoom_out.title=zoom-out\n+zoom_out.alt=zoom-out icon"},{"sha":"cffac9267cdd0dfccd34446fa56c4bf08da15337","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_it.properties","status":"added","additions":223,"deletions":0,"changes":223,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_it.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,223 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mapping.class=fa fa-exchange\n+mapping.title=mapping\n+mapping.alt=mapping icon\n+\n+mustchangepassword.class=fa fa-lock\n+mustchangepassword.title=set must change password\n+mustchangepassword.alt=must change password icon\n+\n+set_latest_sync_token.class=fa fa-hourglass-start\n+set_latest_sync_token.title=set last sync token\n+set_latest_sync_token.alt=set last sync token icon\n+\n+remove_sync_token.class=fa fa-hourglass-o\n+remove_sync_token.title=remove sync token\n+remove_sync_token.alt=remove sync token icon\n+\n+clone.class=fa fa-clone\n+clone.title=clone\n+clone.alt=clone icon\n+\n+create.class=glyphicon glyphicon-plus\n+create.title=create\n+create.alt=create icon\n+\n+template.class=fa fa-list-alt\n+template.title=template\n+template.alt=template icon\n+\n+edit.class=glyphicon glyphicon-pencil\n+edit.title=edit\n+edit.alt=edit icon\n+\n+type_extensions.class=fa fa-expand\n+type_extensions.title=extensions\n+type_extensions.alt=extensions icon\n+\n+fo_edit.class=fa fa-file-code-o\n+fo_edit.title=fo\n+fo_edit.alt=fo icon\n+\n+html.class=fa fa-file-code-o\n+html.title=html\n+html.alt=html icon\n+\n+text.class=fa fa-file-text-o\n+text.title=text\n+text.alt=text icon\n+\n+compose.class=fa fa-puzzle-piece\n+compose.title=compose\n+compose.alt=compose icon\n+\n+layout_edit.class=fa fa-object-ungroup\n+layout_edit.title=layout\n+layout_edit.alt=layout icon\n+\n+reset.class=fa fa-shield\n+reset.title=reset\n+reset.alt=reset icon\n+\n+enable.class=fa fa-toggle-on\n+enable.title=enable\n+enable.alt=enable icon\n+\n+not_found.class=fa fa-eye-slash\n+not_found.title=not found\n+not_found.alt=not found icon\n+\n+view.class=fa fa-eye\n+view.title=view\n+view.alt=view icon\n+\n+members.class=fa fa-users\n+members.title=members\n+members.alt=members icon\n+\n+search.class=glyphicon glyphicon-search\n+search.title=search\n+search.alt=search icon\n+\n+delete.class=glyphicon glyphicon-minus\n+delete.title=delete\n+delete.alt=delete icon\n+\n+execute.class=fa fa-gear\n+execute.title=execute\n+execute.alt=execute icon\n+\n+password_reset.class=fa fa-shield\n+password_reset.title=password reset\n+password_reset.alt=password reset icon\n+\n+dryrun.class=fa fa-gears\n+dryrun.title=dry-run\n+dryrun.alt=dry-run icon\n+\n+claim.class=fa fa-ticket\n+claim.title=claim\n+claim.alt=claim icon\n+\n+select.class=glyphicon glyphicon-ok\n+select.title=select\n+select.alt=select icon\n+\n+close.class=fa fa-sign-out\n+close.title=close\n+close.alt=close icon\n+\n+export.class=fa fa-floppy-o\n+export.title=export\n+export.alt=export icon\n+\n+export_csv.class=fa fa-file-text-o\n+export_csv.title=export as csv\n+export_csv.alt=export as csv icon\n+\n+export_html.class=fa fa-file-code-o\n+export_html.title=export as html\n+export_html.alt=export as html icon\n+\n+export_pdf.class=fa fa-file-pdf-o\n+export_pdf.title=export as pdf\n+export_pdf.alt=export as pdf icon\n+\n+export_rtf.class=fa fa-file-word-o\n+export_rtf.title=export as rtf\n+export_rtf.alt=export as rtf icon\n+\n+export_xml.class=fa fa-file-excel-o\n+export_xml.title=export as xml\n+export_xml.alt=export as xml icon\n+\n+suspend.class=glyphicon glyphicon-ban-circle\n+suspend.title=suspend\n+suspend.alt=suspend icon\n+\n+reactivate.class=glyphicon glyphicon-ok-sign\n+reactivate.title=reactivate\n+reactivate.alt=reactivate icon\n+\n+reload.class=fa fa-repeat\n+reload.title=reload\n+reload.alt=reload icon\n+\n+change_view.class=fa fa-list\"\n+change_view.title=change view\n+change_view.alt=change view icon\n+\n+unlink.class=fa fa-unlink\n+unlink.title=unlink\n+unlink.alt=unlink icon\n+\n+link.class=fa fa-link\n+link.title=link\n+link.alt=link icon\n+\n+unassign.class=glyphicon glyphicon-resize-full\n+unassign.title=unassign\n+unassign.alt=unassign icon\n+\n+assign.class=glyphicon glyphicon-resize-small\n+assign.title=assign\n+assign.alt=assign icon\n+\n+deprovision.class=glyphicon glyphicon-fast-backward\n+deprovision.title=deprovision\n+deprovision.alt=deprovision icon\n+\n+provision.class=glyphicon glyphicon-fast-forward\n+provision.title=provision\n+provision.alt=provision icon\n+\n+deprovision_members.class=glyphicon glyphicon-fast-backward\n+deprovision_members.title=deprovision members\n+deprovision_members.alt=deprovision members icon\n+\n+provision_members.class=glyphicon glyphicon-fast-forward\n+provision_members.title=provision members\n+provision_members.alt=provision members icon\n+\n+manage_resources.class=fa fa-sitemap\n+manage_resources.title=manage resources\n+manage_resources.alt=manage resources icon\n+\n+manage_users.class=fa fa-users\n+manage_users.title=manage users\n+manage_users.alt=manage users icon\n+\n+manage_groups.class=fa fa-users\n+manage_groups.title=manage groups\n+manage_groups.alt=manage groups icon\n+\n+propagation_tasks.class=fa fa-arrow-right\n+propagation_tasks.title=propagation tasks\n+propagation_tasks.alt=propagation tasks icon\n+\n+notification_tasks.class=fa fa-envelope-o\n+notification_tasks.title=notification tasks\n+notification_tasks.alt=notification tasks icon\n+\n+zoom_in.class=fa fa-search-plus\n+zoom_in.title=zoom-in\n+zoom_in.alt=zoom-in icon\n+\n+zoom_out.class=fa fa-search-minus\n+zoom_out.title=zoom-out\n+zoom_out.alt=zoom-out icon"},{"sha":"cffac9267cdd0dfccd34446fa56c4bf08da15337","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_pt_BR.properties","status":"added","additions":223,"deletions":0,"changes":223,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_pt_BR.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,223 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mapping.class=fa fa-exchange\n+mapping.title=mapping\n+mapping.alt=mapping icon\n+\n+mustchangepassword.class=fa fa-lock\n+mustchangepassword.title=set must change password\n+mustchangepassword.alt=must change password icon\n+\n+set_latest_sync_token.class=fa fa-hourglass-start\n+set_latest_sync_token.title=set last sync token\n+set_latest_sync_token.alt=set last sync token icon\n+\n+remove_sync_token.class=fa fa-hourglass-o\n+remove_sync_token.title=remove sync token\n+remove_sync_token.alt=remove sync token icon\n+\n+clone.class=fa fa-clone\n+clone.title=clone\n+clone.alt=clone icon\n+\n+create.class=glyphicon glyphicon-plus\n+create.title=create\n+create.alt=create icon\n+\n+template.class=fa fa-list-alt\n+template.title=template\n+template.alt=template icon\n+\n+edit.class=glyphicon glyphicon-pencil\n+edit.title=edit\n+edit.alt=edit icon\n+\n+type_extensions.class=fa fa-expand\n+type_extensions.title=extensions\n+type_extensions.alt=extensions icon\n+\n+fo_edit.class=fa fa-file-code-o\n+fo_edit.title=fo\n+fo_edit.alt=fo icon\n+\n+html.class=fa fa-file-code-o\n+html.title=html\n+html.alt=html icon\n+\n+text.class=fa fa-file-text-o\n+text.title=text\n+text.alt=text icon\n+\n+compose.class=fa fa-puzzle-piece\n+compose.title=compose\n+compose.alt=compose icon\n+\n+layout_edit.class=fa fa-object-ungroup\n+layout_edit.title=layout\n+layout_edit.alt=layout icon\n+\n+reset.class=fa fa-shield\n+reset.title=reset\n+reset.alt=reset icon\n+\n+enable.class=fa fa-toggle-on\n+enable.title=enable\n+enable.alt=enable icon\n+\n+not_found.class=fa fa-eye-slash\n+not_found.title=not found\n+not_found.alt=not found icon\n+\n+view.class=fa fa-eye\n+view.title=view\n+view.alt=view icon\n+\n+members.class=fa fa-users\n+members.title=members\n+members.alt=members icon\n+\n+search.class=glyphicon glyphicon-search\n+search.title=search\n+search.alt=search icon\n+\n+delete.class=glyphicon glyphicon-minus\n+delete.title=delete\n+delete.alt=delete icon\n+\n+execute.class=fa fa-gear\n+execute.title=execute\n+execute.alt=execute icon\n+\n+password_reset.class=fa fa-shield\n+password_reset.title=password reset\n+password_reset.alt=password reset icon\n+\n+dryrun.class=fa fa-gears\n+dryrun.title=dry-run\n+dryrun.alt=dry-run icon\n+\n+claim.class=fa fa-ticket\n+claim.title=claim\n+claim.alt=claim icon\n+\n+select.class=glyphicon glyphicon-ok\n+select.title=select\n+select.alt=select icon\n+\n+close.class=fa fa-sign-out\n+close.title=close\n+close.alt=close icon\n+\n+export.class=fa fa-floppy-o\n+export.title=export\n+export.alt=export icon\n+\n+export_csv.class=fa fa-file-text-o\n+export_csv.title=export as csv\n+export_csv.alt=export as csv icon\n+\n+export_html.class=fa fa-file-code-o\n+export_html.title=export as html\n+export_html.alt=export as html icon\n+\n+export_pdf.class=fa fa-file-pdf-o\n+export_pdf.title=export as pdf\n+export_pdf.alt=export as pdf icon\n+\n+export_rtf.class=fa fa-file-word-o\n+export_rtf.title=export as rtf\n+export_rtf.alt=export as rtf icon\n+\n+export_xml.class=fa fa-file-excel-o\n+export_xml.title=export as xml\n+export_xml.alt=export as xml icon\n+\n+suspend.class=glyphicon glyphicon-ban-circle\n+suspend.title=suspend\n+suspend.alt=suspend icon\n+\n+reactivate.class=glyphicon glyphicon-ok-sign\n+reactivate.title=reactivate\n+reactivate.alt=reactivate icon\n+\n+reload.class=fa fa-repeat\n+reload.title=reload\n+reload.alt=reload icon\n+\n+change_view.class=fa fa-list\"\n+change_view.title=change view\n+change_view.alt=change view icon\n+\n+unlink.class=fa fa-unlink\n+unlink.title=unlink\n+unlink.alt=unlink icon\n+\n+link.class=fa fa-link\n+link.title=link\n+link.alt=link icon\n+\n+unassign.class=glyphicon glyphicon-resize-full\n+unassign.title=unassign\n+unassign.alt=unassign icon\n+\n+assign.class=glyphicon glyphicon-resize-small\n+assign.title=assign\n+assign.alt=assign icon\n+\n+deprovision.class=glyphicon glyphicon-fast-backward\n+deprovision.title=deprovision\n+deprovision.alt=deprovision icon\n+\n+provision.class=glyphicon glyphicon-fast-forward\n+provision.title=provision\n+provision.alt=provision icon\n+\n+deprovision_members.class=glyphicon glyphicon-fast-backward\n+deprovision_members.title=deprovision members\n+deprovision_members.alt=deprovision members icon\n+\n+provision_members.class=glyphicon glyphicon-fast-forward\n+provision_members.title=provision members\n+provision_members.alt=provision members icon\n+\n+manage_resources.class=fa fa-sitemap\n+manage_resources.title=manage resources\n+manage_resources.alt=manage resources icon\n+\n+manage_users.class=fa fa-users\n+manage_users.title=manage users\n+manage_users.alt=manage users icon\n+\n+manage_groups.class=fa fa-users\n+manage_groups.title=manage groups\n+manage_groups.alt=manage groups icon\n+\n+propagation_tasks.class=fa fa-arrow-right\n+propagation_tasks.title=propagation tasks\n+propagation_tasks.alt=propagation tasks icon\n+\n+notification_tasks.class=fa fa-envelope-o\n+notification_tasks.title=notification tasks\n+notification_tasks.alt=notification tasks icon\n+\n+zoom_in.class=fa fa-search-plus\n+zoom_in.title=zoom-in\n+zoom_in.alt=zoom-in icon\n+\n+zoom_out.class=fa fa-search-minus\n+zoom_out.title=zoom-out\n+zoom_out.alt=zoom-out icon"},{"sha":"cffac9267cdd0dfccd34446fa56c4bf08da15337","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionsPanel_ru.properties","status":"added","additions":223,"deletions":0,"changes":223,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionsPanel_ru.properties?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -0,0 +1,223 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mapping.class=fa fa-exchange\n+mapping.title=mapping\n+mapping.alt=mapping icon\n+\n+mustchangepassword.class=fa fa-lock\n+mustchangepassword.title=set must change password\n+mustchangepassword.alt=must change password icon\n+\n+set_latest_sync_token.class=fa fa-hourglass-start\n+set_latest_sync_token.title=set last sync token\n+set_latest_sync_token.alt=set last sync token icon\n+\n+remove_sync_token.class=fa fa-hourglass-o\n+remove_sync_token.title=remove sync token\n+remove_sync_token.alt=remove sync token icon\n+\n+clone.class=fa fa-clone\n+clone.title=clone\n+clone.alt=clone icon\n+\n+create.class=glyphicon glyphicon-plus\n+create.title=create\n+create.alt=create icon\n+\n+template.class=fa fa-list-alt\n+template.title=template\n+template.alt=template icon\n+\n+edit.class=glyphicon glyphicon-pencil\n+edit.title=edit\n+edit.alt=edit icon\n+\n+type_extensions.class=fa fa-expand\n+type_extensions.title=extensions\n+type_extensions.alt=extensions icon\n+\n+fo_edit.class=fa fa-file-code-o\n+fo_edit.title=fo\n+fo_edit.alt=fo icon\n+\n+html.class=fa fa-file-code-o\n+html.title=html\n+html.alt=html icon\n+\n+text.class=fa fa-file-text-o\n+text.title=text\n+text.alt=text icon\n+\n+compose.class=fa fa-puzzle-piece\n+compose.title=compose\n+compose.alt=compose icon\n+\n+layout_edit.class=fa fa-object-ungroup\n+layout_edit.title=layout\n+layout_edit.alt=layout icon\n+\n+reset.class=fa fa-shield\n+reset.title=reset\n+reset.alt=reset icon\n+\n+enable.class=fa fa-toggle-on\n+enable.title=enable\n+enable.alt=enable icon\n+\n+not_found.class=fa fa-eye-slash\n+not_found.title=not found\n+not_found.alt=not found icon\n+\n+view.class=fa fa-eye\n+view.title=view\n+view.alt=view icon\n+\n+members.class=fa fa-users\n+members.title=members\n+members.alt=members icon\n+\n+search.class=glyphicon glyphicon-search\n+search.title=search\n+search.alt=search icon\n+\n+delete.class=glyphicon glyphicon-minus\n+delete.title=delete\n+delete.alt=delete icon\n+\n+execute.class=fa fa-gear\n+execute.title=execute\n+execute.alt=execute icon\n+\n+password_reset.class=fa fa-shield\n+password_reset.title=password reset\n+password_reset.alt=password reset icon\n+\n+dryrun.class=fa fa-gears\n+dryrun.title=dry-run\n+dryrun.alt=dry-run icon\n+\n+claim.class=fa fa-ticket\n+claim.title=claim\n+claim.alt=claim icon\n+\n+select.class=glyphicon glyphicon-ok\n+select.title=select\n+select.alt=select icon\n+\n+close.class=fa fa-sign-out\n+close.title=close\n+close.alt=close icon\n+\n+export.class=fa fa-floppy-o\n+export.title=export\n+export.alt=export icon\n+\n+export_csv.class=fa fa-file-text-o\n+export_csv.title=export as csv\n+export_csv.alt=export as csv icon\n+\n+export_html.class=fa fa-file-code-o\n+export_html.title=export as html\n+export_html.alt=export as html icon\n+\n+export_pdf.class=fa fa-file-pdf-o\n+export_pdf.title=export as pdf\n+export_pdf.alt=export as pdf icon\n+\n+export_rtf.class=fa fa-file-word-o\n+export_rtf.title=export as rtf\n+export_rtf.alt=export as rtf icon\n+\n+export_xml.class=fa fa-file-excel-o\n+export_xml.title=export as xml\n+export_xml.alt=export as xml icon\n+\n+suspend.class=glyphicon glyphicon-ban-circle\n+suspend.title=suspend\n+suspend.alt=suspend icon\n+\n+reactivate.class=glyphicon glyphicon-ok-sign\n+reactivate.title=reactivate\n+reactivate.alt=reactivate icon\n+\n+reload.class=fa fa-repeat\n+reload.title=reload\n+reload.alt=reload icon\n+\n+change_view.class=fa fa-list\"\n+change_view.title=change view\n+change_view.alt=change view icon\n+\n+unlink.class=fa fa-unlink\n+unlink.title=unlink\n+unlink.alt=unlink icon\n+\n+link.class=fa fa-link\n+link.title=link\n+link.alt=link icon\n+\n+unassign.class=glyphicon glyphicon-resize-full\n+unassign.title=unassign\n+unassign.alt=unassign icon\n+\n+assign.class=glyphicon glyphicon-resize-small\n+assign.title=assign\n+assign.alt=assign icon\n+\n+deprovision.class=glyphicon glyphicon-fast-backward\n+deprovision.title=deprovision\n+deprovision.alt=deprovision icon\n+\n+provision.class=glyphicon glyphicon-fast-forward\n+provision.title=provision\n+provision.alt=provision icon\n+\n+deprovision_members.class=glyphicon glyphicon-fast-backward\n+deprovision_members.title=deprovision members\n+deprovision_members.alt=deprovision members icon\n+\n+provision_members.class=glyphicon glyphicon-fast-forward\n+provision_members.title=provision members\n+provision_members.alt=provision members icon\n+\n+manage_resources.class=fa fa-sitemap\n+manage_resources.title=manage resources\n+manage_resources.alt=manage resources icon\n+\n+manage_users.class=fa fa-users\n+manage_users.title=manage users\n+manage_users.alt=manage users icon\n+\n+manage_groups.class=fa fa-users\n+manage_groups.title=manage groups\n+manage_groups.alt=manage groups icon\n+\n+propagation_tasks.class=fa fa-arrow-right\n+propagation_tasks.title=propagation tasks\n+propagation_tasks.alt=propagation tasks icon\n+\n+notification_tasks.class=fa fa-envelope-o\n+notification_tasks.title=notification tasks\n+notification_tasks.alt=notification tasks icon\n+\n+zoom_in.class=fa fa-search-plus\n+zoom_in.title=zoom-in\n+zoom_in.alt=zoom-in icon\n+\n+zoom_out.class=fa fa-search-minus\n+zoom_out.title=zoom-out\n+zoom_out.alt=zoom-out icon"},{"sha":"538d8043a89d2d84b26f386f48dfbd2102ea2a73","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/AbstractMappingPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractMappingPanel.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -75,7 +75,7 @@\n                 </div>\n               </td>\n               <td>\n-                <div>\n+                <div id=\"inline-actions\">\n                   <span  wicket:id=\"toRemove\"/>\n                 </div>\n               </td>"},{"sha":"cf436022c1835eb643e544653a1d5905623a47f6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ResultPage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.html?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -21,7 +21,7 @@\n   <body>\n     <wicket:panel>\n       <span wicket:id=\"customResultBody\"/>\n-      <div class=\"modal-footer circular-actions\">\n+      <div id=\"inline-actions\" class=\"modal-footer circular-actions\">\n         <span wicket:id=\"action\"/>\n       </div>\n     </wicket:panel>"},{"sha":"2cb569081d231d08ab9b5256e78bc5d9c7be4526","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/JobTO.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -40,8 +40,6 @@ public class JobTO extends AbstractBaseBean {\n \n     private boolean scheduled;\n \n-    private String status;\n-\n     private Date start;\n \n     public JobType getType() {"},{"sha":"f6f37a60110cb6e8bc79b18f71aef05e421241e5","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesDirectoryPanel.java","status":"modified","additions":30,"deletions":57,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -30,10 +30,9 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.CamelRoutesDirectoryPanel.CamelRoutesProvider;\n import org.apache.syncope.client.console.rest.CamelRoutesRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n@@ -101,75 +100,49 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n \n     @Override\n     protected List<IColumn<CamelRouteTO, String>> getColumns() {\n-        List<IColumn<CamelRouteTO, String>> columns = new ArrayList<>();\n-\n+        final List<IColumn<CamelRouteTO, String>> columns = new ArrayList<>();\n         columns.add(new PropertyColumn<CamelRouteTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+        return columns;\n+    }\n \n-        columns.add(new ActionColumn<CamelRouteTO, String>(new ResourceModel(\"actions\", \"\")) {\n+    @Override\n+    public ActionsPanel<CamelRouteTO> getActions(final IModel<CamelRouteTO> model) {\n+        final ActionsPanel<CamelRouteTO> panel = super.getActions(model);\n \n-            private static final long serialVersionUID = 906457126287899096L;\n+        panel.add(new ActionLink<CamelRouteTO>() {\n \n-            @Override\n-            public ActionLinksPanel<CamelRouteTO> getActions(\n-                    final String componentId, final IModel<CamelRouteTO> model) {\n-\n-                ActionLinksPanel<CamelRouteTO> panel = ActionLinksPanel.<CamelRouteTO>builder().\n-                        add(new ActionLink<CamelRouteTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n-                                final CamelRouteTO route = restClient.read(model.getObject().getKey());\n-\n-                                utilityModal.header(Model.of(route.getKey()));\n-                                utilityModal.setContent(new XMLEditorPanel(\n-                                        utilityModal, new PropertyModel<String>(route, \"content\"), filtered, pageRef) {\n-\n-                                    private static final long serialVersionUID = 5488080606102212554L;\n-\n-                                    @Override\n-                                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                                        try {\n-                                            restClient.update(route);\n-                                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                                            modal.close(target);\n-                                        } catch (Exception e) {\n-                                            LOG.error(\"While creating or updating CamelRouteTO\", e);\n-                                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                                        }\n-                                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                                    }\n-\n-                                });\n-                                utilityModal.show(true);\n-                                target.add(utilityModal);\n-                            }\n-                        }, ActionLink.ActionType.EDIT, CamelEntitlement.ROUTE_UPDATE).\n-                        build(componentId);\n-\n-                return panel;\n-            }\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<CamelRouteTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<CamelRouteTO> panel = ActionLinksPanel.builder();\n+            public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n+                final CamelRouteTO route = restClient.read(model.getObject().getKey());\n \n-                return panel.add(new ActionLink<CamelRouteTO>() {\n+                utilityModal.header(Model.of(route.getKey()));\n+                utilityModal.setContent(new XMLEditorPanel(\n+                        utilityModal, new PropertyModel<String>(route, \"content\"), filtered, pageRef) {\n \n-                    private static final long serialVersionUID = -1140254463922516111L;\n+                    private static final long serialVersionUID = 5488080606102212554L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n+                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                        try {\n+                            restClient.update(route);\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            modal.close(target);\n+                        } catch (Exception e) {\n+                            LOG.error(\"While creating or updating CamelRouteTO\", e);\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                         }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.RELOAD).build(componentId);\n+\n+                });\n+                utilityModal.show(true);\n+                target.add(utilityModal);\n             }\n-        });\n+        }, ActionLink.ActionType.EDIT, CamelEntitlement.ROUTE_UPDATE);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected final class CamelRoutesProvider extends DirectoryDataProvider<CamelRouteTO> {"},{"sha":"caa70bfe5e8225506fdb8378e3eca1cf243b01b6","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.java","status":"modified","additions":46,"deletions":72,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -33,12 +33,11 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.SAML2IdPsDirectoryPanel.SAML2IdPsProvider;\n import org.apache.syncope.client.console.rest.SAML2IdPsRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -135,7 +134,6 @@ protected List<IColumn<SAML2IdPTO, String>> getColumns() {\n         List<IColumn<SAML2IdPTO, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<SAML2IdPTO>(new ResourceModel(\"key\"), \"key\", \"key\"));\n-\n         columns.add(new PropertyColumn<SAML2IdPTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n         columns.add(new PropertyColumn<SAML2IdPTO, String>(new ResourceModel(\"entityID\"), \"entityID\", \"entityID\"));\n         columns.add(new BooleanPropertyColumn<SAML2IdPTO>(\n@@ -145,85 +143,61 @@ protected List<IColumn<SAML2IdPTO, String>> getColumns() {\n         columns.add(new BooleanPropertyColumn<SAML2IdPTO>(\n                 new ResourceModel(\"logoutSupported\"), \"logoutSupported\", \"logoutSupported\"));\n \n-        columns.add(new ActionColumn<SAML2IdPTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<SAML2IdPTO> getActions(final IModel<SAML2IdPTO> model) {\n+        final ActionsPanel<SAML2IdPTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<SAML2IdPTO>() {\n \n-            private static final long serialVersionUID = 906457126287899096L;\n+            private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public ActionLinksPanel<SAML2IdPTO> getActions(\n-                    final String componentId, final IModel<SAML2IdPTO> model) {\n-\n-                ActionLinksPanel<SAML2IdPTO> panel = ActionLinksPanel.<SAML2IdPTO>builder().\n-                        add(new ActionLink<SAML2IdPTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n-                                SAML2IdPTO object = restClient.read(model.getObject().getKey());\n-                                send(SAML2IdPsDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(object, target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, SAML2SPEntitlement.IDP_UPDATE).\n-                        add(new ActionLink<SAML2IdPTO>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770645L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n-                                SAML2IdPTO object = restClient.read(model.getObject().getKey());\n-                                metadataModal.header(Model.of(object.getName() + \" - Metadata\"));\n-                                metadataModal.setContent(new XMLEditorPanel(\n-                                        metadataModal,\n-                                        Model.of(new String(Base64.decodeBase64(object.getMetadata()))),\n-                                        true,\n-                                        pageRef));\n-                                metadataModal.show(true);\n-                                target.add(metadataModal);\n-                            }\n-                        }, ActionLink.ActionType.HTML, SAML2SPEntitlement.IDP_READ).\n-                        add(new ActionLink<SAML2IdPTO>() {\n-\n-                            private static final long serialVersionUID = -5467832321897812767L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n-                                try {\n-                                    restClient.delete(model.getObject().getKey());\n-                                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, SAML2SPEntitlement.IDP_DELETE).\n-                        build(componentId);\n-\n-                return panel;\n+            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n+                SAML2IdPTO object = restClient.read(model.getObject().getKey());\n+                send(SAML2IdPsDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(object, target));\n             }\n+        }, ActionLink.ActionType.EDIT, SAML2SPEntitlement.IDP_UPDATE);\n+        panel.add(new ActionLink<SAML2IdPTO>() {\n \n-            @Override\n-            public ActionLinksPanel<SAML2IdPTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<SAML2IdPTO> panel = ActionLinksPanel.builder();\n+            private static final long serialVersionUID = -7978723352517770645L;\n \n-                return panel.add(new ActionLink<SAML2IdPTO>() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n+                SAML2IdPTO object = restClient.read(model.getObject().getKey());\n+                metadataModal.header(Model.of(object.getName() + \" - Metadata\"));\n+                metadataModal.setContent(new XMLEditorPanel(\n+                        metadataModal,\n+                        Model.of(new String(Base64.decodeBase64(object.getMetadata()))),\n+                        true,\n+                        pageRef));\n+                metadataModal.show(true);\n+                target.add(metadataModal);\n+            }\n+        }, ActionLink.ActionType.HTML, SAML2SPEntitlement.IDP_READ);\n+        panel.add(new ActionLink<SAML2IdPTO>() {\n \n-                    private static final long serialVersionUID = -5467832321897812767L;\n+            private static final long serialVersionUID = -5467832321897812767L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD).build(componentId);\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final SAML2IdPTO ignore) {\n+                try {\n+                    restClient.delete(model.getObject().getKey());\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (SyncopeClientException e) {\n+                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        });\n+        }, ActionLink.ActionType.DELETE, SAML2SPEntitlement.IDP_DELETE, true);\n \n-        return columns;\n+        return panel;\n     }\n \n     protected final class SAML2IdPsProvider extends DirectoryDataProvider<SAML2IdPTO> {"},{"sha":"75d65bb5a90397800fc94e68e13a72476713da6c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":12,"deletions":6,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -22,7 +22,6 @@\n \n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Test;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -69,7 +68,9 @@ public void clickToClonePrinter() {\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:1:action:action\");\n \n         FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n@@ -87,8 +88,10 @@ public void editPrinter() {\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n-        \n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n+\n         FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n@@ -117,7 +120,7 @@ public void editPrinter() {\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n@@ -135,7 +138,10 @@ public void checkDeletePrinterLink() {\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        TESTER.assertComponent(component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:5:action:action\",\n                 IndicatingOnConfirmAjaxLink.class);\n     }\n }"},{"sha":"d17ee20dc6c1c13a12f63d5d5cc744fcbb5cd20b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypeClassesITCase.java","status":"modified","additions":55,"deletions":34,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -22,13 +22,12 @@\n import static org.junit.Assert.assertNull;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.Types;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.apache.wicket.Component;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Test;\n \n@@ -38,17 +37,14 @@ public class AnyTypeClassesITCase extends AbstractTypesITCase {\n     public void read() {\n         browsingToAnyTypeClasses();\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, \"csv\");\n-        TESTER.assertLabel(\n-                result.getPageRelativePath() + \":cells:1:cell\", \"csv\");\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"csv\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n-        TESTER.assertComponent(\n-                result.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n+        // click edit\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n-\n-        TESTER.assertComponent(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n     }\n \n     @Test\n@@ -58,11 +54,10 @@ public void create() {\n \n         TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        TESTER.assertComponent(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester =\n-                TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", anyTypeClassTest);\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:derSchemas:paletteField:recorder\", \"mderiveddata\");\n@@ -89,26 +84,49 @@ public void create() {\n     @Test\n     public void update() {\n         final String plainSchema = \"anyPlainSchema\";\n+        final String name = \"anyTypeClassToUpdate\";\n+        createAnyTypeClassWithoutSchema(name);\n         createPlainSchema(plainSchema);\n         browsingToAnyTypeClasses();\n \n-        TESTER.assertComponent(\n-                DATATABLE_PATH\n-                + \":tablePanel:groupForm:checkgroup:dataTable:\"\n-                + \"body:rows:1:cells:6:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n-        TESTER.clickLink(\n-                DATATABLE_PATH\n-                + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelEdit:editLink\");\n+        // click edit\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        final FormTester formTester =\n-                TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        final FormTester formTester = TESTER.newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:plainSchemas:paletteField:recorder\", plainSchema);\n \n         TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        assertNotNull(component);\n+\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+\n+        // click delete\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n+\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n+                Constants.ON_CLICK);\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+\n+        assertNull(component);\n     }\n \n     @Test\n@@ -118,24 +136,27 @@ public void delete() {\n         browsingToAnyTypeClasses();\n         TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n-\n-        assertNotNull(result);\n-        TESTER.assertComponent(\n-                result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\",\n-                IndicatingOnConfirmAjaxLink.class);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n+        assertNotNull(component);\n \n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+\n+        // click delete\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"), \"click\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n+                Constants.ON_CLICK);\n+\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n         TESTER.cleanupFeedbackMessages();\n-        result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n+        component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n \n-        assertNull(result);\n+        assertNull(component);\n     }\n }"},{"sha":"d56c76a4fbb26cad0c2742e7ec233b123e7f1acf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypesITCase.java","status":"modified","additions":29,"deletions":26,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -22,12 +22,11 @@\n import static org.junit.Assert.assertNull;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.Types;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.apache.wicket.Component;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Test;\n@@ -42,13 +41,13 @@ public void read() {\n                 + \":tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable:body:rows:1:cells:1:cell\", Label.class);\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n \n-        TESTER.assertComponent(\n-                result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n-        TESTER.clickLink(\n-                result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+        // click edit\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n     }\n@@ -78,10 +77,10 @@ public void create() {\n         TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeTest);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeTest);\n \n-        TESTER.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n-        TESTER.assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n+        TESTER.assertLabel(component.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n+        TESTER.assertLabel(component.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n     }\n \n     @Test\n@@ -90,14 +89,14 @@ public void update() {\n         createAnyTypeClassWithoutSchema(name);\n         browsingToAnyTypes();\n \n-        TESTER.assertComponent(\n-                DATATABLE_PATH\n-                + \":tablePanel:groupForm:checkgroup:dataTable:\"\n-                + \"body:rows:1:cells:4:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n+        assertNotNull(component);\n \n-        TESTER.clickLink(\n-                DATATABLE_PATH\n-                + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:4:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+\n+        // click edit\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n@@ -117,24 +116,28 @@ public void delete() {\n         browsingToAnyTypes();\n \n         TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        Component component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        assertNotNull(component);\n \n-        assertNotNull(result);\n-        TESTER.assertComponent(\n-                result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n-                IndicatingOnConfirmAjaxLink.class);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+\n+        // click delete\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"), \"onclick\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n+                Constants.ON_CLICK);\n+\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n         TESTER.cleanupFeedbackMessages();\n-        result = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n-        assertNull(result);\n+        assertNull(component);\n     }\n }"},{"sha":"d39ed71e883e7c94ef9e79f3fc21922f711d59cb","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":74,"deletions":58,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -52,8 +52,7 @@ public void usersBulkAction() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        FormTester formTester = TESTER.newFormTester(CONTAINER\n-                + \"searchContainer:resultTable:tablePanel:groupForm\");\n+        FormTester formTester = TESTER.newFormTester(CONTAINER + \"searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n@@ -77,34 +76,37 @@ public void userResourceBulkAction() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath()\n-                + \":cells:6:cell:panelManageResources:manageResourcesLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        // manage resource\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:\"\n+                + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         component = findComponentByProp(\"resourceName\",\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-csv\");\n         assertNotNull(component);\n \n         FormTester formTester = TESTER.newFormTester(\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:1:outer:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container\", \"resource-csv\"));\n     }\n \n@@ -127,51 +129,55 @@ private void userStatusBulkAction(final int index, final String resourceName) {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        // enable\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:4:\"\n+                + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         component = findComponentByProp(\"resourceName\",\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n \n         component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n         assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resourceName, StatusBean.class.cast(component.getDefaultModelObject()).getResourceName());\n \n         FormTester formTester = TESTER.newFormTester(\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", index);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:\"\n-                + \"status:secondLevelContainer:second:container:actions:panelSuspend:suspendLink\",\n+        // suspend link\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:\"\n+                + \"second:container:actions:actionRepeater:0:action:action\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n-                + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:4:cell\", \"SUCCESS\");\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+                + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n \n-        TESTER.\n-                executeAjaxEvent(TAB_PANEL\n-                        + \"outerObjectsRepeater:1:outer:form:content:status:secondLevelContainer:back\",\n-                        Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:back\",\n+                Constants.ON_CLICK);\n \n         component = findComponentByProp(\"resourceName\",\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n \n         component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n@@ -186,50 +192,54 @@ private void userStatusBulkAction(final int index, final String resourceName) {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        // enable\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:4:\"\n+                + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         formTester = TESTER.newFormTester(\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", index);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:\"\n-                + \"status:secondLevelContainer:second:container:actions:panelReactivate:reactivateLink\",\n+        // suspend link\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:\"\n+                + \"second:container:actions:actionRepeater:1:action:action\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n-                + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:4:cell\", \"SUCCESS\");\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+                + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n \n-        TESTER.\n-                executeAjaxEvent(TAB_PANEL\n-                        + \"outerObjectsRepeater:1:outer:form:content:status:secondLevelContainer:back\",\n-                        Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:back\",\n+                Constants.ON_CLICK);\n \n         component = findComponentByProp(\"resourceName\",\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n \n         component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n         assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resourceName, StatusBean.class.cast(component.getDefaultModelObject()).getResourceName());\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:dialog:footer:buttons:0:button\",\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n     }\n \n@@ -242,38 +252,41 @@ public void groupResourceBulkAction() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath()\n-                + \":cells:4:cell:panelManageResources:manageResourcesLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        // manage resource\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:6:\"\n+                + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n         component = findComponentByProp(\"resourceName\",\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n         FormTester formTester = TESTER.newFormTester(\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 7);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:1:outer:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-testdb2\"));\n     }\n \n@@ -287,38 +300,41 @@ public void printerResourceBulkAction() {\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath()\n-                + \":cells:4:cell:panelManageResources:manageResourcesLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        // manage resource\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+                + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:\"\n+                + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n         component = findComponentByProp(\"resourceName\",\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n         FormTester formTester = TESTER.newFormTester(\n-                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 7);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:1:outer:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-testdb2\"));\n     }\n "},{"sha":"7de9a0d2f475a93d6be2ea9dd68c6c7cf328aa64","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/DisplayAttributesITCase.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -36,22 +36,20 @@ public void login() {\n     @Test\n     public void readAndSet() {\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:\"\n-                + \"searchResult:container:content:searchContainer:resultTable:\"\n-                + \"tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n-                + \"toolbars:1:headers:4:header:label:panelChangeView:changeViewLink\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n+                + \"searchContainer:tablehandling:actionRepeater:1:action:action\");\n \n         TESTER.assertComponent(\n-                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer\",\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:3:outer\",\n                 Modal.class);\n \n         FormTester formTester = TESTER.newFormTester(\n-                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer:form\");\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:3:outer:form\");\n \n         formTester.setValue(\"content:container:details:paletteField:recorder\", \"status\");\n \n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n-                + \"2:outer:dialog:footer:inputs:0:submit\");\n+                + \"3:outer:dialog:footer:inputs:0:submit\");\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n         TESTER.clearFeedbackMessages();"},{"sha":"a07dc2fe842b08efd0e033cb4e7b2ac33814be22","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":58,"deletions":46,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -34,9 +34,9 @@\n \n public class GroupsITCase extends AbstractConsoleITCase {\n \n-    private final String tabPanel = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n+    private final static String TAB_PANEL = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n \n-    private final String searchResultContainer = tabPanel + \"container:content:\";\n+    private final static String CONTAINER = TAB_PANEL + \"container:content:\";\n \n     @Before\n     public void login() {\n@@ -48,27 +48,28 @@ public void read() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", searchResultContainer\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"artDirector\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelMembers:membersLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:3:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:body:container:content:tabbedPanel:panel:\"\n-                + \"searchResult:outerObjectsRepeater:6:outer:container:content:togglePanelContainer:membersForm\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:7:outer:container:content:togglePanelContainer:membersForm\");\n \n         formTester.select(\"type:dropDownChoiceField\", 0);\n         formTester.submit(\"changeit\");\n \n-        TESTER.assertModelValue(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n-                + \"outerObjectsRepeater:5:outer:dialog:header:header-label\", \"USER members of artDirector\");\n-\n-        assertNotNull(findComponentByProp(\"username\", \"body:content:body:container:content:tabbedPanel:panel:\"\n-                + \"searchResult:outerObjectsRepeater:5:outer:form:content:searchResult:container:content:\"\n+        TESTER.assertModelValue(TAB_PANEL\n+                + \"outerObjectsRepeater:6:outer:dialog:header:header-label\", \"USER members of artDirector\");\n+        assertNotNull(findComponentByProp(\"username\", TAB_PANEL\n+                + \"outerObjectsRepeater:6:outer:form:content:searchResult:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\"));\n \n-        TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n-                + \"outerObjectsRepeater:5:outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:6:outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n     }\n \n     @Test\n@@ -91,27 +92,28 @@ private void cloneGroup(final String group) {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", searchResultContainer\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", group);\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.setValue(\"view:name:textField\", group + \"_clone\");\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n-                + \"outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"name\", searchResultContainer\n+        component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", group + \"_clone\");\n         assertNotNull(component);\n     }\n@@ -120,15 +122,18 @@ private void cloneGroup(final String group) {\n     public void clickToCloneGroup() {\n         cloneGroup(\"director\");\n \n-        Component component = findComponentByProp(\"name\", searchResultContainer\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n+\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:9:action:action\");\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:9:action:action\"), Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -138,16 +143,18 @@ public void clickToCloneGroup() {\n     public void editGroup() {\n         cloneGroup(\"director\");\n \n-        Component component = findComponentByProp(\"name\", searchResultContainer\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n@@ -166,53 +173,56 @@ public void editGroup() {\n                 + \"textField\").getDefaultModelObjectAsString(), StringUtils.EMPTY);\n         // -------------------------\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.assertComponent(tabPanel\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        TESTER.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"name\", searchResultContainer\n+        component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:9:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:9:action:action\"), Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -223,11 +233,13 @@ public void checkDeleteGroupLink() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", searchResultContainer\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        TESTER.assertComponent(component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n-                IndicatingOnConfirmAjaxLink.class);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:9:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }\n }"},{"sha":"4e5ff94ebb58dc5dc39f74121e27e95a1c44b88f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/NotificationsITCase.java","status":"modified","additions":36,"deletions":15,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -125,7 +125,10 @@ public void update() {\n         Component result = findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToUpdate\");\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:7:cell:panelEdit:editLink\");\n+        // edit notification\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n@@ -143,18 +146,24 @@ public void execute() {\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"Password Reset request\");\n \n-        TESTER.clickLink(\n-                result.getPageRelativePath() + \":cells:7:cell:panelNotificationTasks:notificationTasksLink\");\n+        // notification tasks link\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n+        result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\");\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:9:cell:panelExecute:executeLink\");\n+        // execute task\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n+                + \"firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n+                + \"container:actions:actions:actionRepeater:3:action:action\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -164,22 +173,28 @@ public void execute() {\n         result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"Password Reset request\");\n \n-        TESTER.clickLink(\n-                result.getPageRelativePath() + \":cells:7:cell:panelNotificationTasks:notificationTasksLink\");\n+        // notification tasks link\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n+        result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\");\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:9:cell:panelView:viewLink\");\n+        // view task\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n+                + \"firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n+                + \"container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertLabel(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:tasks:\"\n+        TESTER.assertLabel(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:title\", \"Executions\");\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:tasks:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:back\");\n \n-        assertNotNull(findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n+        assertNotNull(findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\"));\n     }\n@@ -190,12 +205,18 @@ public void delete() {\n         Component result = findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToDelete\");\n \n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+\n+        // delete task\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"));\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\"),\n+                Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();"},{"sha":"cd2bb4392abf2567b0a7fd1b716a31cc7ab674df","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -21,6 +21,7 @@\n import static org.junit.Assert.assertNotNull;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.Parameters;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -72,7 +73,10 @@ public void updateParameter() {\n \n         Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"notification.maxRetries\");\n         assertNotNull(result);\n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+        \n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         FormTester formTester = TESTER.newFormTester(\n                 \"body:content:parametersPanel:container:content:modalDetails:form\");\n@@ -108,7 +112,10 @@ public void deleteParameter() {\n \n         Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"deleteParam\");\n         assertNotNull(result);\n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\");\n+        \n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();"},{"sha":"bdfd776776b64c01f7ff96ad95c99a2b8c3e2a68","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":121,"deletions":61,"changes":182,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -74,7 +74,10 @@ private void createAccountPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n@@ -121,7 +124,10 @@ private void createPasswordPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n@@ -164,7 +170,10 @@ private void createPullPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n@@ -184,13 +193,16 @@ private void deleteAccountPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:9:cell:panelDelete:deleteLink\"));\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:9:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n+                Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -205,14 +217,16 @@ private void deletePasswordPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\n-                TESTER.getComponentFromLastRenderedPage(\n-                        component.getPageRelativePath() + \":cells:8:cell:panelDelete:deleteLink\"));\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:8:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n+                Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -227,14 +241,16 @@ private void deletePullPolicy(final String description) {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\n-                TESTER.getComponentFromLastRenderedPage(\n-                        component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n+                Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -265,7 +281,10 @@ public void cloneDeleteAccountPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelClone:cloneLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n@@ -310,7 +329,10 @@ public void cloneDeletePasswordPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelClone:cloneLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n@@ -355,7 +377,10 @@ public void cloneDeletePullPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n@@ -393,7 +418,10 @@ public void createUpdateDeleteAccountPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n@@ -415,9 +443,10 @@ public void createUpdateDeleteAccountPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.assertLabel(component.getPageRelativePath() + \":cells:7:cell\", \"2\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n@@ -436,40 +465,43 @@ private void composeDefaultAccountPolicy(final String policyDescription, final S\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", policyDescription);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelCompose:composeLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\");\n \n         TESTER.clickLink(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:add\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:add\");\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", ruleName);\n         formTester.setValue(\"view:configuration:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:\"\n                 + \"container:content:wizard:form:view:bean:propView:1:value:spinner\", 0);\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:bean:propView:1:value:spinner\", \"6\");\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n+        component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 ruleName);\n \n         Assert.assertNotNull(component);\n \n         TESTER.clickLink(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:exit\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:exit\");\n \n         closeCallBack(modal);\n     }\n@@ -491,7 +523,10 @@ public void createUpdateDeletePasswordPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n@@ -513,9 +548,10 @@ public void createUpdateDeletePasswordPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.assertLabel(component.getPageRelativePath() + \":cells:6:cell\", \"2\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n@@ -537,39 +573,42 @@ public void createComposeDeletePasswordPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelCompose:composeLink\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer\", Modal.class);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n+\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\");\n \n         TESTER.clickLink(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:add\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:add\");\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"myrule\");\n         formTester.setValue(\"view:configuration:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:\"\n                 + \"container:content:wizard:form:view:bean:propView:0:value:spinner\", 0);\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n+        component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"myrule\");\n \n         Assert.assertNotNull(component);\n \n         TESTER.clickLink(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:exit\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:exit\");\n \n         closeCallBack(modal);\n \n@@ -588,7 +627,10 @@ public void createUpdateDeletePullPolicy() {\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         FormTester formTester = TESTER.newFormTester(\n@@ -607,7 +649,10 @@ public void createUpdateDeletePullPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + \"2\");\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n+\n         TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n@@ -629,24 +674,27 @@ public void createComposeDeletePullPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelCompose:composeLink\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\", Modal.class);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n+\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\", Modal.class);\n \n         Component modal = TESTER.getComponentFromLastRenderedPage(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\");\n \n         FormTester formTester = TESTER.newFormTester(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form\");\n \n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:content:\"\n                 + \"correlationRules:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n \n         formTester.setValue(\"content:conflictResolutionAction:dropDownChoiceField\", \"1\");\n         formTester.setValue(\"content:correlationRules:multiValueContainer:innerForm:content:view:0:panel:\"\n                 + \"jsonRule:paletteField:recorder\", \"fullname\");\n \n         TESTER.clickLink(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:dialog:footer:inputs:0:submit\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:footer:inputs:0:submit\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -657,18 +705,21 @@ public void createComposeDeletePullPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelCompose:composeLink\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\", Modal.class);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n+\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\", Modal.class);\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:\"\n                 + \"content:conflictResolutionAction:dropDownChoiceField\", ConflictResolutionAction.FIRSTMATCH);\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:\"\n                 + \"content:correlationRules:multiValueContainer:innerForm:content:view:0:panel:\"\n                 + \"jsonRule:paletteField:recorder\", \"fullname\");\n \n         TESTER.clickLink(\n-                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:dialog:footer:buttons:0:button\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:footer:buttons:0:button\");\n \n         closeCallBack(modal);\n \n@@ -688,7 +739,7 @@ public void issueSYNCOPE1030() {\n \n         // edit root realm\n         TESTER.clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n         TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n         // set new account policy\n@@ -704,7 +755,7 @@ public void issueSYNCOPE1030() {\n         TESTER.cleanupFeedbackMessages();\n \n         TESTER.executeAjaxEvent(\n-                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\",\n                 Constants.ON_CLICK);\n \n         // create user with a valid account name\n@@ -715,7 +766,10 @@ public void issueSYNCOPE1030() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n+                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:\"\n+                + \"action:action\");\n \n         TESTER.assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n@@ -753,20 +807,26 @@ public void issueSYNCOPE1030() {\n         TESTER.cleanupFeedbackMessages();\n \n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n-                + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         component = findComponentByProp(\"username\",\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n         assertNotNull(component);\n \n         // delete the new user\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n+                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:8:\"\n+                + \"action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"), \"onclick\");\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n+                + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:8:\"\n+                + \"action:action\"), Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();"},{"sha":"1a59db476be0a1f529db54899dde99fe286ac32d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":17,"deletions":22,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -48,8 +48,7 @@ public void read() {\n     @Test\n     public void create() {\n         TESTER.clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelCreate:createLink\");\n-\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:0:action:action\");\n         TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n         FormTester formTester = TESTER.newFormTester(\n@@ -61,9 +60,8 @@ public void create() {\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.executeAjaxEvent(\n-                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n-                Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n+                + \"0:action:action\", Constants.ON_CLICK);\n \n         // remove the new realm just created\n         TESTER.clickLink(\"body:realmsLI:realms\");\n@@ -76,7 +74,7 @@ public void create() {\n \n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n         TESTER.clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelDelete:deleteLink\");\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:3:action:action\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -90,7 +88,7 @@ public void create() {\n     @Test\n     public void update() {\n         TESTER.clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n         TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n         FormTester formTester = TESTER.newFormTester(\n@@ -100,9 +98,8 @@ public void update() {\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.executeAjaxEvent(\n-                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n-                Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n+                + \"0:action:action\", Constants.ON_CLICK);\n     }\n \n     @Test\n@@ -114,7 +111,7 @@ public void addUserTemplate() {\n         TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n \n         TESTER.clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:2:action:action\");\n         TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n         FormTester formTester = TESTER.newFormTester(\n@@ -134,7 +131,7 @@ public void addUserTemplate() {\n         TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n \n         TESTER.clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:2:action:action\");\n         TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n         formTester = TESTER.newFormTester(\n@@ -162,7 +159,7 @@ public void verifyPropagation() {\n                 Constants.ON_CLICK);\n \n         TESTER.clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n         TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n         TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n                 + \"container:generics:name:textField\", \"two\");\n@@ -182,7 +179,7 @@ public void verifyPropagation() {\n         Component component = findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\");\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":actions:panelView:viewLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n \n         TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:2:value:oldAttribute:field-label\", \"ou\");\n@@ -209,12 +206,11 @@ public void verifyPropagation() {\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\"));\n         // ----------------------------------\n \n-        TESTER.executeAjaxEvent(\n-                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n-                Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n+                + \"0:action:action\", Constants.ON_CLICK);\n \n         TESTER.clickLink(\n-                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n         TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n         TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n                 + \"container:generics:name:textField\", \"two\");\n@@ -234,7 +230,7 @@ public void verifyPropagation() {\n         component = findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\");\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":actions:panelView:viewLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n \n         TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:2:value:oldAttribute:field-label\", \"ou\");\n@@ -261,8 +257,7 @@ public void verifyPropagation() {\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\"));\n         // ----------------------------------\n \n-        TESTER.executeAjaxEvent(\n-                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n-                Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n+                + \"0:action:action\", Constants.ON_CLICK);\n     }\n }"},{"sha":"a9fe9249dd56010478bbb8bca730ccad30ed40b7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RelationshipTypesITCase.java","status":"modified","additions":18,"deletions":22,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -21,11 +21,10 @@\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n \n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.apache.wicket.Component;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Test;\n@@ -41,11 +40,9 @@ public void read() {\n         TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:1:cell\", Label.class);\n \n-        TESTER.assertComponent(\n-                result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n-\n-        TESTER.clickLink(\n-                result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n@@ -71,17 +68,15 @@ public void update() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        TESTER.assertComponent(\n-                DATATABLE_PATH\n-                + \":tablePanel:groupForm:checkgroup:dataTable:\"\n-                + \"body:rows:1:cells:3:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n+        Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        assertNotNull(result);\n \n-        TESTER.clickLink(\n-                DATATABLE_PATH\n-                + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:3:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        final FormTester formTester =\n-                TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        final FormTester formTester = TESTER.newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"new description\");\n \n@@ -99,18 +94,19 @@ public void delete() {\n         TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n-\n         assertNotNull(result);\n-        TESTER.assertComponent(\n-                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\",\n-                IndicatingOnConfirmAjaxLink.class);\n \n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"), Constants.ON_CLICK);\n+\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n         TESTER.cleanupFeedbackMessages();"},{"sha":"c94b48b4a626a217afc15cc6529e6f84c89d7625","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ReportsITCase.java","status":"modified","additions":39,"deletions":11,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -73,12 +73,15 @@ private void delete(final String name) {\n \n         assertNotNull(result);\n \n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:10:cell:panelDelete:deleteLink\"));\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:action:action\");\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:10:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:action:action\"),\n+                Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -97,17 +100,23 @@ private void deleteReportlet(final String report, final String reportlet) {\n \n         assertNotNull(result);\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n         result = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", reportlet);\n \n         assertNotNull(result);\n \n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:\"\n+                + \"form:content:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:actions:\"\n+                + \"actions:actionRepeater:2:action:action\"));\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -125,7 +134,9 @@ public void read() {\n \n         assertNotNull(result);\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\");\n \n         TESTER.assertModelValue(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:title\", \"Executions of report 'test'\");\n@@ -135,7 +146,11 @@ public void read() {\n \n         assertNotNull(result);\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:6:cell:panelView:viewLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:firstLevelContainer:\"\n+                + \"first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:actions:\"\n+                + \"actions:actionRepeater:0:action:action\");\n+\n         TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:secondLevelContainer:back\");\n \n@@ -157,14 +172,21 @@ public void cloneReportlets() {\n \n         assertNotNull(result);\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n         result = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"testUserReportlet\");\n \n         assertNotNull(result);\n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:3:cell:panelClone:cloneLink\");\n+\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form:\"\n+                + \"content:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:actions:\"\n+                + \"actions:actionRepeater:0:action:action\");\n \n         FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n@@ -194,7 +216,9 @@ public void createReportlets() {\n \n         assertNotNull(result);\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n         TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:container:content:add\");\n@@ -228,7 +252,11 @@ public void update() {\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateReport\");\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelEdit:editLink\");\n+        assertNotNull(result);\n+\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertModelValue(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:\"\n                 + \"0:outer:dialog:header:header-label\", \"Edit Report updateReport\");"},{"sha":"54d8348a1a52d7c39d2c54ac6e9a7a0ac69367a5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":20,"deletions":15,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -63,22 +63,24 @@ private void createRole(final String name) {\n \n     @Test\n     public void read() {\n-        assertNull(findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n-                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"OTHER\"));\n+        Component result = findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n+                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"Other\");\n+        assertNotNull(result);\n \n-        TESTER.clickLink(\"body:content:rolesPanel:container:content:searchContainer:resultTable:tablePanel:\"\n-                + \"groupForm:checkgroup:dataTable:body:rows:1:cells:4:cell:panelMembers:membersLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:rolesPanel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n+                + \"container:actions:actions:actionRepeater:2:action:action\");\n \n         TESTER.assertModelValue(\n-                \"body:content:rolesPanel:outerObjectsRepeater:4:outer:dialog:header:header-label\",\n+                \"body:content:rolesPanel:outerObjectsRepeater:5:outer:dialog:header:header-label\",\n                 \"Role 'Other' members\");\n \n-        assertNotNull(findComponentByProp(\"username\", \"body:content:rolesPanel:outerObjectsRepeater:4:outer:form:\"\n+        assertNotNull(findComponentByProp(\"username\", \"body:content:rolesPanel:outerObjectsRepeater:5:outer:form:\"\n                 + \"content:searchResult:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"rossini\"));\n \n         TESTER.executeAjaxEvent(\n-                \"body:content:rolesPanel:outerObjectsRepeater:4:outer:dialog:footer:buttons:0:button\",\n+                \"body:content:rolesPanel:outerObjectsRepeater:5:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n     }\n \n@@ -93,11 +95,11 @@ public void update() {\n         Component result = findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateRole\");\n \n-        TESTER.assertLabel(\n-                result.getPageRelativePath() + \":cells:1:cell\", \"updateRole\");\n+        assertNotNull(result);\n \n-        TESTER.clickLink(\n-                result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:rolesPanel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n+                + \"container:actions:actions:actionRepeater:0:action:action\");\n \n         FormTester formTester = TESTER.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:key:textField\", \"updateRole\");\n@@ -121,15 +123,18 @@ public void delete() {\n         Component result = findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteRole\");\n \n-        TESTER.assertLabel(\n-                result.getPageRelativePath() + \":cells:1:cell\", \"deleteRole\");\n+        assertNotNull(result);\n+\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+                \"body:content:rolesPanel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n+                + \"container:actions:actions:actionRepeater:4:action:action\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");\n+                \"body:content:rolesPanel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n+                + \"container:actions:actions:actionRepeater:4:action:action\"), \"onclick\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();"},{"sha":"45303fb5d866ccdec2adfe01401b1f8564fd80a9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SchemasITCase.java","status":"modified","additions":32,"deletions":29,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -25,9 +25,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.Types;\n import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.apache.wicket.Component;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Test;\n@@ -42,15 +40,13 @@ public void readPlainSchema() {\n                 + \":tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable:body:rows:1:cells:1:cell\", \"aLong\");\n \n-        TESTER.assertComponent(\n-                PLAIN_DATATABLE_PATH\n-                + \":tablePanel:groupForm:checkgroup:dataTable:\"\n-                + \"body:rows:1:cells:7:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n+        TESTER.executeAjaxEvent(\n+                PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1\",\n+                Constants.ON_CLICK);\n \n         TESTER.clickLink(\n-                PLAIN_DATATABLE_PATH\n-                + \":tablePanel:groupForm:checkgroup:dataTable:\"\n-                + \"body:rows:1:cells:7:cell:panelEdit:editLink\");\n+                \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertComponent(\n                 \"body:content:tabbedPanel:\"\n@@ -73,8 +69,8 @@ public void createPlainSchema() {\n         formTester.setValue(\"content:details:form:key:textField\", \"zBoolean\");\n         formTester.setValue(\"content:details:form:type:dropDownChoiceField\", \"3\");\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:\"\n-                + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:\"\n+                + \"outer:dialog:footer:inputs:0:submit\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n@@ -88,11 +84,13 @@ public void updatePlainSchema() {\n \n         Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, \"ctype\");\n \n-        TESTER.assertLabel(\n-                result.getPageRelativePath() + \":cells:1:cell\", \"ctype\");\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", \"ctype\");\n+        assertNotNull(result);\n \n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.clickLink(\n-                result.getPageRelativePath() + \":cells:7:cell:panelEdit:editLink\");\n+                \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertComponent(\n                 \"body:content:tabbedPanel:\"\n@@ -142,17 +140,20 @@ public void deletePlainSchema() {\n         TESTER.assertComponent(PLAIN_DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName);\n+        assertNotNull(result);\n \n-        TESTER.assertComponent(\n-                result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\",\n-                IndicatingOnConfirmAjaxLink.class);\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"));\n+        TESTER.clickLink(\n+                \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"), \"onclick\");\n+                \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n+                Constants.ON_CLICK);\n+\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n@@ -182,27 +183,29 @@ public void createVirtualSchema() {\n         formTester.setValue(\"content:details:form:anyType:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"content:details:form:extAttrName:textField\", \"virattr\");\n \n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n-                + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\",\n-                Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:\"\n+                + \"outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n         TESTER.assertRenderedPage(Types.class);\n \n         Component result = findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\");\n-        assertNotNull(result);\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n+        TESTER.clickLink(\n+                \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"), \"onclick\");\n+                \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:1:outer:\"\n+                + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n+                Constants.ON_CLICK);\n+\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        result = findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\");\n-        assertNull(result);\n+        assertNull(findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\"));\n     }\n }"},{"sha":"664feeb828adad8ae556830051a2edafa909831b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":20,"deletions":12,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -18,11 +18,13 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.apache.syncope.fit.console.AbstractConsoleITCase.TESTER;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.SecurityQuestions;\n import org.apache.wicket.Component;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n@@ -46,8 +48,8 @@ private void createSecurityQuestion(final String name) {\n         TESTER.assertComponent(\n                 \"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester =\n-                TESTER.newFormTester(\"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(\n+                \"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 name);\n \n@@ -67,11 +69,13 @@ public void read() {\n                 + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:2:cell\");\n         assertTrue(label.getDefaultModelObjectAsString().startsWith(\"What&#039;s your \"));\n \n+        TESTER.executeAjaxEvent(\"body:content:securityQuestionPanel:container:content:searchContainer:resultTable:\"\n+                + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1\", Constants.ON_CLICK);\n+\n         TESTER.assertComponent(\n-                \"body:content:securityQuestionPanel:container:content:\"\n-                + \"searchContainer:resultTable:tablePanel:\"\n-                + \"groupForm:checkgroup:dataTable:body:rows:\"\n-                + \"1:cells:3:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n+                \"body:content:securityQuestionPanel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\",\n+                IndicatingAjaxLink.class);\n     }\n \n     @Test\n@@ -88,10 +92,12 @@ public void update() {\n \n         assertNotNull(result);\n \n-        TESTER.clickLink(result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:securityQuestionPanel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester =\n-                TESTER.newFormTester(\"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(\n+                \"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 \"What's your preferred car?\");\n \n@@ -112,12 +118,14 @@ public void delete() {\n                 name);\n         assertNotNull(result);\n \n+        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n+        TESTER.clickLink(\"body:content:securityQuestionPanel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n-                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");\n+                \"body:content:securityQuestionPanel:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"), \"onclick\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();"},{"sha":"281873dfe3119410a92f801a4abec2f7629b037d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":60,"deletions":25,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -145,7 +145,7 @@ public void editProvisioning() {\n         // ------------------------------------------\n \n         TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n-                + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n+                + \"content:group:beans:0:actions:actionRepeater:0:action:action\");\n \n         formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n@@ -251,7 +251,7 @@ public void createNewResurceAndProvisionRules() {\n         TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n         TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n-                + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n+                + \"content:group:beans:0:actions:actionRepeater:0:action:action\");\n \n         formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n@@ -262,7 +262,7 @@ public void createNewResurceAndProvisionRules() {\n \n         TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:buttons:cancel\", Constants.ON_CLICK);\n-        \n+\n         TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:buttons:0:button\");\n \n         TESTER.cleanupFeedbackMessages();\n@@ -288,7 +288,10 @@ public void executePullTask() {\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"TestDB Task\");\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelExecute:executeLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:3:action:action\");\n \n         TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:startAt:container:content:togglePanelContainer:startAtForm:startAt\");\n@@ -298,7 +301,10 @@ public void executePullTask() {\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"TestDB Task\");\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertLabel(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:title\",\n@@ -307,11 +313,11 @@ public void executePullTask() {\n         int iteration = 0;\n         do {\n             try {\n-                TESTER.assertComponent(\n+                component = findComponentByProp(\"status\",\n                         \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n                         + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n-                        + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelView:viewLink\",\n-                        AjaxLink.class);\n+                        + \"tablePanel:groupForm:checkgroup:dataTable\", \"SUCCESS\");\n+                assertNotNull(component);\n                 iteration = 10;\n             } catch (AssertionError e) {\n                 try {\n@@ -320,19 +326,24 @@ public void executePullTask() {\n                 } catch (Exception ignore) {\n                 }\n \n-                component = findComponentById(\n-                        \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:second:\"\n-                        + \"executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n-                        + \"tablePanel:groupForm:checkgroup:dataTable:topToolbars:toolbars:1:headers\", \"panelReload\");\n+                TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+                        + \"secondLevelContainer:second:executions:firstLevelContainer:first:container:content:\"\n+                        + \"searchContainer:tablehandling:actionRepeater:0:action:action\", Constants.ON_CLICK);\n \n-                TESTER.executeAjaxEvent(component.getPageRelativePath() + \":reloadLink\", Constants.ON_CLICK);\n                 iteration++;\n             }\n         } while (iteration < 10);\n \n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n+        component = findComponentByProp(\"status\",\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n-                + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelView:viewLink\");\n+                + \"tablePanel:groupForm:checkgroup:dataTable\", \"SUCCESS\");\n+        assertNotNull(component);\n+\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:second:\"\n+                + \"executions:firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:secondLevelContainer:title\", Label.class);\n@@ -353,7 +364,11 @@ public void readPropagationTaskExecutions() {\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", ResourceOperation.CREATE);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelExecute:executeLink\");\n+        assertNotNull(component);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:1:action:action\");\n \n         TESTER.clickLink(\"body:topologyLI:topology\");\n \n@@ -366,15 +381,25 @@ public void readPropagationTaskExecutions() {\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", ResourceOperation.CREATE);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n+        assertNotNull(component);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertLabel(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:title\",\n                 \"CREATE task about USER\");\n \n+        component = findComponentByProp(\"status\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+                + \"secondLevelContainer:second:executions:firstLevelContainer:first:container:content:searchContainer:\"\n+                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"FAILURE\");\n+\n+        assertNotNull(component);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n-                + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n-                + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelView:viewLink\");\n+                + \"second:executions:firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:\"\n+                + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:secondLevelContainer:title\", Label.class);\n@@ -386,9 +411,13 @@ public void editPushTask() {\n         assertNotNull(component);\n         TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:push\");\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n-                + \"body:rows:1:cells:9:cell:panelEdit:editLink\");\n+                + \"body:rows:1\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:1:action:action\");\n \n         FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:\"\n@@ -446,9 +475,12 @@ public void addGroupTemplate() {\n         TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n \n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n-                + \"body:rows:1:cells:10:cell:panelTemplate:templateLink\");\n+                + \"body:rows:1\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:4:action:action\");\n \n         TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n@@ -470,9 +502,12 @@ public void addGroupTemplate() {\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n-                + \"body:rows:1:cells:10:cell:panelTemplate:templateLink\");\n+                + \"body:rows:1\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:4:action:action\");\n \n         TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);"},{"sha":"fe5f3aba464ecec1222b551313842e5dc68f3761","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":44,"deletions":24,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e7e2ceef339fe243de2c688200e4010d46b8776/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=2e7e2ceef339fe243de2c688200e4010d46b8776","patch":"@@ -69,8 +69,9 @@ public void forceChangePassword() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"verdi\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath()\n-                + \":cells:6:cell:panelMustChangePassword:MustChangePasswordLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:2:action:action\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n     }\n@@ -84,7 +85,9 @@ public void clickToCloneUser() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:1:action:action\");\n \n         TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n@@ -104,11 +107,12 @@ public void editUser() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.\n-                assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n-                        TextField.class);\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+                TextField.class);\n \n         FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n@@ -149,7 +153,7 @@ public void editUser() {\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n@@ -173,7 +177,9 @@ public void editUserMembership() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n \n         FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n@@ -213,14 +219,16 @@ public void editUserMembership() {\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         // reset ....\n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n \n         formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n@@ -249,8 +257,10 @@ public void checkDeleteUsrLink() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.assertComponent(component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\",\n-                IndicatingOnConfirmAjaxLink.class);\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:8:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }\n \n     @Test\n@@ -262,7 +272,9 @@ public void editDateTimeField() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n@@ -296,13 +308,15 @@ public void editDateTimeField() {\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:0:action:action\");\n \n         TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n@@ -350,17 +364,20 @@ public void changePassword() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"vivaldi\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelPasswordReset:passwordResetLink\");\n-        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:resources:\"\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:3:action:action\");\n+\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", \"syncope\");\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:2:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:password:passwordField\", \"Password345\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:confirmPassword:passwordField\", \"Password345\");\n         formTester.select(\"content:status:resources:firstLevelContainer:first:container:content:group\", 0);\n \n         TESTER.executeAjaxEvent(\n-                TAB_PANEL + \"outerObjectsRepeater:2:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n+                TAB_PANEL + \"outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n@@ -372,17 +389,20 @@ public void changePassword() {\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"vivaldi\");\n         assertNotNull(component);\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelPasswordReset:passwordResetLink\");\n-        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:resources:\"\n+        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+                + \"actions:actions:actionRepeater:3:action:action\");\n+\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", \"syncope\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:2:outer:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:password:passwordField\", \"Password123\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:confirmPassword:passwordField\", \"Password123\");\n         formTester.select(\"content:status:resources:firstLevelContainer:first:container:content:group\", 0);\n \n         TESTER.executeAjaxEvent(\n-                TAB_PANEL + \"outerObjectsRepeater:2:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n+                TAB_PANEL + \"outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();"}]}