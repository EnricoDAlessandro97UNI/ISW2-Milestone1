{"sha":"dbdd1bc219c89c4666d98b0635041c76b11993d3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRiZGQxYmMyMTljODljNDY2NmQ5OGIwNjM1MDQxYzc2YjExOTkzZDM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-15T12:16:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-15T12:16:24Z"},"message":"[SYNCOPE-827] Fixing FIQL filter generation, which was causing test failure","tree":{"sha":"92f0f25f58ebc18c1a230abc7dc3116ce1727d65","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/92f0f25f58ebc18c1a230abc7dc3116ce1727d65"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dbdd1bc219c89c4666d98b0635041c76b11993d3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbdd1bc219c89c4666d98b0635041c76b11993d3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dbdd1bc219c89c4666d98b0635041c76b11993d3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbdd1bc219c89c4666d98b0635041c76b11993d3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bcc33d296a3504595285079a195e8fe01fbd98d0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bcc33d296a3504595285079a195e8fe01fbd98d0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bcc33d296a3504595285079a195e8fe01fbd98d0"}],"stats":{"total":68,"additions":27,"deletions":41},"files":[{"sha":"1d6ee77027695136b7c88091b9b6711dccbf5476","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWrapper.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbdd1bc219c89c4666d98b0635041c76b11993d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbdd1bc219c89c4666d98b0635041c76b11993d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWrapper.java?ref=dbdd1bc219c89c4666d98b0635041c76b11993d3","patch":"@@ -80,23 +80,22 @@ public Map<String, String> getAboutFIQLs() {\n         if (CollectionUtils.isEmpty(this.aboutClauses)) {\n             return this.notificationTO.getAbouts();\n         } else {\n-\n-            final Map<String, String> res = new HashMap<>();\n+            Map<String, String> res = new HashMap<>();\n             for (Pair<String, List<SearchClause>> pair : this.aboutClauses) {\n                 AbstractFiqlSearchConditionBuilder builder;\n                 switch (pair.getLeft()) {\n                     case \"USER\":\n                         builder = SyncopeClient.getUserSearchConditionBuilder();\n                         break;\n+\n                     case \"GROUP\":\n                         builder = SyncopeClient.getGroupSearchConditionBuilder();\n                         break;\n+\n                     default:\n                         builder = SyncopeClient.getAnyObjectSearchConditionBuilder(pair.getLeft());\n-                        break;\n-\n                 }\n-                res.put(pair.getLeft(), getFIQLString(pair.getRight(), builder));\n+                res.put(pair.getLeft(), SearchUtils.buildFIQL(pair.getRight(), builder));\n             }\n             return res;\n         }\n@@ -106,14 +105,10 @@ private String getRecipientsFIQL() {\n         if (CollectionUtils.isEmpty(this.recipientClauses)) {\n             return null;\n         } else {\n-            return getFIQLString(this.recipientClauses, SyncopeClient.getUserSearchConditionBuilder());\n+            return SearchUtils.buildFIQL(this.recipientClauses, SyncopeClient.getUserSearchConditionBuilder());\n         }\n     }\n \n-    private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n-        return SearchUtils.buildFIQL(clauses, bld);\n-    }\n-\n     public NotificationTO fillAboutConditions() {\n         this.notificationTO.getAbouts().clear();\n         this.notificationTO.getAbouts().putAll(this.getAboutFIQLs());"},{"sha":"0b359715688ca18fe6216fcba51da6546310daa2","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PushTaskWrapper.java","status":"modified","additions":19,"deletions":11,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbdd1bc219c89c4666d98b0635041c76b11993d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbdd1bc219c89c4666d98b0635041c76b11993d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskWrapper.java?ref=dbdd1bc219c89c4666d98b0635041c76b11993d3","patch":"@@ -54,21 +54,29 @@ public void setFilterClauses(final Map<String, List<SearchClause>> aDynClauses)\n     }\n \n     public Map<String, String> getFilters() {\n-        final Map<String, String> res = new HashMap<>();\n-        if (this.filterClauses != null && !this.filterClauses.isEmpty()) {\n-            for (Map.Entry<String, List<SearchClause>> entry : this.filterClauses.entrySet()) {\n-                if (CollectionUtils.isNotEmpty(entry.getValue())) {\n-                    res.put(entry.getKey(), getFIQLString(entry.getValue(),\n-                            SyncopeClient.getAnyObjectSearchConditionBuilder(entry.getKey())));\n+        Map<String, String> filters = new HashMap<>();\n+\n+        for (Map.Entry<String, List<SearchClause>> entry : getFilterClauses().entrySet()) {\n+            if (CollectionUtils.isNotEmpty(entry.getValue())) {\n+                AbstractFiqlSearchConditionBuilder bld;\n+                switch (entry.getKey()) {\n+                    case \"USER\":\n+                        bld = SyncopeClient.getUserSearchConditionBuilder();\n+                        break;\n+\n+                    case \"GROUP\":\n+                        bld = SyncopeClient.getGroupSearchConditionBuilder();\n+                        break;\n+\n+                    default:\n+                        bld = SyncopeClient.getAnyObjectSearchConditionBuilder(entry.getKey());\n                 }\n+\n+                filters.put(entry.getKey(), SearchUtils.buildFIQL(entry.getValue(), bld));\n             }\n         }\n \n-        return res;\n-    }\n-\n-    private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n-        return SearchUtils.buildFIQL(clauses, bld);\n+        return filters;\n     }\n \n     public PushTaskTO fillFilterConditions() {"},{"sha":"97a3f6e53fed967e310002b49304b127900d90ec","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWrapper.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbdd1bc219c89c4666d98b0635041c76b11993d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbdd1bc219c89c4666d98b0635041c76b11993d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java?ref=dbdd1bc219c89c4666d98b0635041c76b11993d3","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.console.panels.search.SearchClause;\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.GroupTO;\n \n public class GroupWrapper extends AnyWrapper<GroupTO> {\n@@ -68,7 +67,7 @@ public String getUDynMembershipCond() {\n         if (CollectionUtils.isEmpty(this.uDynClauses)) {\n             return null;\n         } else {\n-            return getFIQLString(this.uDynClauses, SyncopeClient.getUserSearchConditionBuilder());\n+            return SearchUtils.buildFIQL(this.uDynClauses, SyncopeClient.getUserSearchConditionBuilder());\n         }\n     }\n \n@@ -77,7 +76,7 @@ public Map<String, String> getADynMembershipConds() {\n         if (this.aDynClauses != null && !this.aDynClauses.isEmpty()) {\n             for (Map.Entry<String, List<SearchClause>> entry : this.aDynClauses.entrySet()) {\n                 if (CollectionUtils.isNotEmpty(entry.getValue())) {\n-                    res.put(entry.getKey(), getFIQLString(entry.getValue(),\n+                    res.put(entry.getKey(), SearchUtils.buildFIQL(entry.getValue(),\n                             SyncopeClient.getAnyObjectSearchConditionBuilder(entry.getKey())));\n                 }\n             }\n@@ -86,10 +85,6 @@ public Map<String, String> getADynMembershipConds() {\n         return res;\n     }\n \n-    private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n-        return SearchUtils.buildFIQL(clauses, bld);\n-    }\n-\n     public GroupTO fillDynamicConditions() {\n         this.anyTO.setUDynMembershipCond(this.getUDynMembershipCond());\n         this.anyTO.getADynMembershipConds().clear();"},{"sha":"70cfb999ff1fd36d519c9639fb898aa270baa64c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWrapper.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbdd1bc219c89c4666d98b0635041c76b11993d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbdd1bc219c89c4666d98b0635041c76b11993d3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWrapper.java?ref=dbdd1bc219c89c4666d98b0635041c76b11993d3","patch":"@@ -24,7 +24,6 @@\n import org.apache.syncope.client.console.panels.search.SearchClause;\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.RoleTO;\n \n public class RoleWrapper implements Serializable {\n@@ -55,14 +54,10 @@ public String getDynMembershipCond() {\n         if (CollectionUtils.isEmpty(this.dynClauses)) {\n             return null;\n         } else {\n-            return getFIQLString(this.dynClauses, SyncopeClient.getUserSearchConditionBuilder());\n+            return SearchUtils.buildFIQL(this.dynClauses, SyncopeClient.getUserSearchConditionBuilder());\n         }\n     }\n \n-    private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n-        return SearchUtils.buildFIQL(clauses, bld);\n-    }\n-\n     public RoleTO fillDynamicConditions() {\n         this.roleTO.setDynMembershipCond(this.getDynMembershipCond());\n         return this.roleTO;"},{"sha":"e5fa0455a6808b4336d20a355d03fae134d79fcf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PushTaskITCase.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbdd1bc219c89c4666d98b0635041c76b11993d3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbdd1bc219c89c4666d98b0635041c76b11993d3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java?ref=dbdd1bc219c89c4666d98b0635041c76b11993d3","patch":"@@ -127,13 +127,6 @@ public void pushMatchingUnmatchingGroups() {\n                 RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), \"29f96485-729e-4d31-88a1-6fc60e4677f3\"));\n         assertTrue(groupService.read(\"29f96485-729e-4d31-88a1-6fc60e4677f3\").\n                 getResources().contains(RESOURCE_NAME_LDAP));\n-\n-        execProvisioningTask(taskService, \"fd905ba5-9d56-4f51-83e2-859096a67b75\", 50, false);\n-\n-        assertNotNull(resourceService.readConnObject(\n-                RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), \"29f96485-729e-4d31-88a1-6fc60e4677f3\"));\n-        assertFalse(groupService.read(\"29f96485-729e-4d31-88a1-6fc60e4677f3\").\n-                getResources().contains(RESOURCE_NAME_LDAP));\n     }\n \n     @Test"}]}