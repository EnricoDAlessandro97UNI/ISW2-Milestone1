{"sha":"9bf4b8f10f191c5966b0edf39d5c50311f44e593","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjliZjRiOGYxMGYxOTFjNTk2NmIwZWRmMzlkNWM1MDMxMWY0NGU1OTM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-05-10T15:01:57Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-05-10T15:01:57Z"},"message":"RESTful interface for user-related operations\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1245954 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"41327685736a071a84ea26b762281dd13bc08bc5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/41327685736a071a84ea26b762281dd13bc08bc5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9bf4b8f10f191c5966b0edf39d5c50311f44e593","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9bf4b8f10f191c5966b0edf39d5c50311f44e593","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9bf4b8f10f191c5966b0edf39d5c50311f44e593","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9bf4b8f10f191c5966b0edf39d5c50311f44e593/comments","author":null,"committer":null,"parents":[{"sha":"32ebe637f95d8a486b6fc48e82526f7d7834c7af","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/32ebe637f95d8a486b6fc48e82526f7d7834c7af","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/32ebe637f95d8a486b6fc48e82526f7d7834c7af"}],"stats":{"total":582,"additions":552,"deletions":30},"files":[{"sha":"e65aa5c38445a4940a5331574672a9e066ac620a","filename":"core/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -47,11 +47,6 @@\n             <artifactId>hibernate-core</artifactId>\n         </dependency>\n \n-        <dependency>\n-            <groupId>org.springframework</groupId>\n-            <artifactId>spring</artifactId>\n-        </dependency>\n-\n         <dependency>\n             <groupId>javassist</groupId>\n             <artifactId>javassist</artifactId>"},{"sha":"1343ff0e873ccce77fd09b86ff73e5b30fb72784","filename":"pom.xml","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -101,9 +101,7 @@\n \n         <wicket.version>1.4.7</wicket.version>\n \n-        <jersey-version>1.1.5.1</jersey-version>\n-\n-        <org.slf4j.logback-classic.version>0.9.18</org.slf4j.logback-classic.version>\n+        <jersey-version>1.2</jersey-version>\n \n         <junit.version>4.8.1</junit.version>\n \n@@ -179,12 +177,6 @@\n             </dependency>\n             <!-- /Jersey -->\n \n-            <dependency>\n-                <groupId>org.slf4j</groupId>\n-                <artifactId>logback-classic</artifactId>\n-                <version>${org.slf4j.logback-classic.version}</version>\n-            </dependency>\n-\n             <!-- TEST -->\n             <dependency>\n                 <groupId>junit</groupId>\n@@ -206,6 +198,11 @@\n \n     <repositories>\n \n+        <repository>\n+            <id>main</id>\n+            <url>http://repo1.maven.org/maven2/</url>\n+        </repository>\n+\n         <repository>\n             <id>forgerock</id>\n             <url>http://repo.forgerock.org</url>\n@@ -234,6 +231,12 @@\n             <layout>default</layout>\n         </repository>\n \n+        <repository>\n+            <id>com.springsource.repository.maven.release</id>\n+            <url>http://maven.springframework.org/release/</url>\n+            <snapshots><enabled>false</enabled></snapshots>\n+        </repository>\n+\n     </repositories>\n \n     <build>"},{"sha":"d0f606ee4555c90a7cbfacf01d85b71337d9b799","filename":"rest/src/main/java/org/syncope/rest/user/Create.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,48 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user;\n+\n+import java.util.logging.Logger;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+import org.syncope.rest.user.jaxb.Attributes;\n+\n+@Path(\"/user/create\")\n+@Component\n+@Scope(\"request\")\n+public class Create {\n+\n+    final static Logger logger = Logger.getLogger(Create.class.getName());\n+\n+    /**\n+     * TODO: call syncope-core\n+     */\n+    @PUT\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String createUser(Attributes userAttributes) {\n+\n+        logger.info(\"searchUser() called with attributes \" + userAttributes);\n+\n+        return \"userId\";\n+    }\n+}"},{"sha":"98b04be5fafda3e3650650ebf562c46855f65d23","filename":"rest/src/main/java/org/syncope/rest/user/Delete.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,51 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user;\n+\n+import java.util.logging.Logger;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+@Path(\"/user/delete/{userId}\")\n+@Component\n+@Scope(\"request\")\n+public class Delete {\n+\n+    final static Logger logger = Logger.getLogger(Delete.class.getName());\n+\n+    /**\n+     * TODO: call syncope-core\n+     */\n+    @DELETE\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public String deleteUser(@PathParam(\"userId\") String userId) {\n+        if (\"error\".equals(userId)) {\n+            throw new WebApplicationException(\n+                    new Exception(\"Wrong userId: \" + userId));\n+        }\n+\n+        logger.info(\"deleteUser() called for \" + userId);\n+\n+        return Boolean.TRUE.toString();\n+    }\n+}"},{"sha":"43053751c87d7e772c7a9ee1ec31239387f4584e","filename":"rest/src/main/java/org/syncope/rest/user/Read.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,70 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user;\n+\n+import java.util.Collections;\n+import java.util.logging.Logger;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+import org.syncope.rest.user.jaxb.AttributeValues;\n+import org.syncope.rest.user.jaxb.Attributes;\n+\n+@Path(\"/user/read/{userId}\")\n+@Component\n+@Scope(\"request\")\n+public class Read {\n+\n+    final static Logger logger = Logger.getLogger(Read.class.getName());\n+\n+    /**\n+     * TODO: read actual values for the corresponding userId via syncope-core\n+     */\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Attributes readUser(@PathParam(\"userId\") String userId) {\n+        if (\"error\".equals(userId)) {\n+            logger.severe(\"Entered in the error condition, going ahead...\");\n+\n+            throw new WebApplicationException(\n+                    new Exception(\"Wrong userId: \" + userId));\n+        }\n+\n+        logger.info(\"readUser called\");\n+\n+        Attributes attributes = new Attributes();\n+\n+        attributes.addUserAttribute(\"userId\",\n+                new AttributeValues(Collections.singleton(userId)));\n+\n+        AttributeValues values1 = new AttributeValues(\"attribute1\");\n+        values1.addAttributeValue(\"value1.1\");\n+        values1.addAttributeValue(\"value1.2\");\n+        attributes.addUserAttribute(\"attribute1\", values1);\n+\n+        AttributeValues values2 = new AttributeValues(\"attribute2\");\n+        values2.addAttributeValue(\"value2.1\");\n+        attributes.addUserAttribute(\"attribute2\", values2);\n+\n+        return attributes;\n+    }\n+}"},{"sha":"eb9b3d4d78128d062f0c0758d1b9573b2db4c246","filename":"rest/src/main/java/org/syncope/rest/user/Search.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,55 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.logging.Logger;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+import org.syncope.rest.user.jaxb.SearchParameters;\n+\n+@Path(\"/user/search\")\n+@Component\n+@Scope(\"request\")\n+public class Search {\n+\n+    final static Logger logger = Logger.getLogger(Search.class.getName());\n+\n+    /**\n+     * TODO: call syncope-core\n+     */\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public List<String> searchUser(SearchParameters searchParameters) {\n+\n+        logger.info(\"searchUser() called with parameters \" + searchParameters);\n+\n+        List<String> searchResults = new ArrayList<String>();\n+        searchResults.add(\"user1\");\n+        searchResults.add(\"user2\");\n+        searchResults.add(\"user3\");\n+\n+        return searchResults;\n+    }\n+}"},{"sha":"307969c8bd0ba260765b423ee666e75d802ed695","filename":"rest/src/main/java/org/syncope/rest/user/Update.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,57 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user;\n+\n+import java.util.logging.Logger;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+import org.syncope.rest.user.jaxb.Attributes;\n+\n+@Path(\"/user/update/${userId}\")\n+@Component\n+@Scope(\"request\")\n+public class Update {\n+\n+    final static Logger logger = Logger.getLogger(Update.class.getName());\n+\n+    /**\n+     * TODO: call syncope-core\n+     */\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public String updateUser(@PathParam(\"userId\") String userId,\n+            Attributes userAttributes) {\n+\n+        if (\"error\".equals(userId)) {\n+            throw new WebApplicationException(\n+                    new Exception(\"Wrong userId: \" + userId));\n+        }\n+\n+        logger.info(\"searchUser() called with userId \" + userId\n+                + \" and attributes \" + userAttributes);\n+\n+        return Boolean.TRUE.toString();\n+    }\n+}"},{"sha":"a210060e908f9b56e7da4ee5fd95715822d5cc49","filename":"rest/src/main/java/org/syncope/rest/user/config/JAXBContextResolver.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fconfig%2FJAXBContextResolver.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fconfig%2FJAXBContextResolver.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fconfig%2FJAXBContextResolver.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,49 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user.config;\n+\n+import com.sun.jersey.api.json.JSONConfiguration;\n+import com.sun.jersey.api.json.JSONJAXBContext;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.ws.rs.ext.ContextResolver;\n+import javax.ws.rs.ext.Provider;\n+import javax.xml.bind.JAXBContext;\n+import org.syncope.rest.user.jaxb.AttributeValues;\n+import org.syncope.rest.user.jaxb.Attributes;\n+import org.syncope.rest.user.jaxb.SearchParameters;\n+\n+@Provider\n+public final class JAXBContextResolver implements ContextResolver<JAXBContext> {\n+\n+    private final JAXBContext context;\n+    private final Set<Class> types;\n+    private final Class[] cTypes = {AttributeValues.class,\n+        Attributes.class, SearchParameters.class};\n+\n+    public JAXBContextResolver() throws Exception {\n+        this.types = new HashSet(Arrays.asList(cTypes));\n+        this.context = new JSONJAXBContext(\n+                JSONConfiguration.natural().build(), cTypes);\n+    }\n+\n+    public JAXBContext getContext(Class<?> objectType) {\n+        return (types.contains(objectType)) ? context : null;\n+    }\n+}\n+"},{"sha":"4c9b4eb2415d0408bc9f97c0ab011c2dca101c93","filename":"rest/src/main/java/org/syncope/rest/user/jaxb/AttributeValues.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeValues.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeValues.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeValues.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user.jaxb;\n+\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+\n+@XmlRootElement(name = \"values\")\n+public class AttributeValues {\n+\n+    @XmlElement(name = \"value\")\n+    private Set<String> elements;\n+\n+    public AttributeValues() {\n+        elements = new HashSet<String>();\n+    }\n+\n+    public AttributeValues(String value) {\n+        this();\n+        elements.add(value);\n+    }\n+\n+    public AttributeValues(Collection<String> values) {\n+        this();\n+        elements.addAll(values);\n+    }\n+\n+    public void addAttributeValue(String value) {\n+        elements.add(value);\n+    }\n+\n+    public boolean removeAttributeValue(String value) {\n+        return elements.remove(value);\n+    }\n+\n+    public void setElements(Set<String> elements) {\n+        this.elements = elements;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return elements.toString();\n+    }\n+}"},{"sha":"395d42c1aaf1d31ac1ff4a84ed55d352bb9a87c7","filename":"rest/src/main/java/org/syncope/rest/user/jaxb/AttributeXmlAdapter.java","status":"added","additions":90,"deletions":0,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeXmlAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeXmlAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributeXmlAdapter.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,90 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user.jaxb;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import javax.xml.bind.annotation.XmlAttribute;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+class AttributeXmlAdapter extends XmlAdapter<Temp, Map<String, AttributeValues>> {\n+\n+    @Override\n+    public Map<String, AttributeValues> unmarshal(Temp v) throws Exception {\n+        Map<String, AttributeValues> result = new HashMap<String, AttributeValues>();\n+\n+        for (Item item : v.getEntry()) {\n+            result.put(item.getKey(), item.getValue());\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public Temp marshal(Map<String, AttributeValues> v) throws Exception {\n+        Temp result = new Temp();\n+\n+        for (String key : v.keySet()) {\n+            result.addItem(new Item(key, v.get(key)));\n+        }\n+\n+        return result;\n+    }\n+}\n+\n+class Temp {\n+\n+    @XmlElement(name = \"attribute\")\n+    private List<Item> entry = new ArrayList<Item>();\n+\n+    public List<Item> getEntry() {\n+        return entry;\n+    }\n+\n+    public void addItem(Item item) {\n+        entry.add(item);\n+    }\n+}\n+\n+class Item {\n+\n+    @XmlAttribute(name = \"name\")\n+    private String key;\n+    @XmlElement\n+    private AttributeValues values;\n+\n+    public Item() {\n+        key = new String();\n+        values = new AttributeValues();\n+    }\n+\n+    public Item(String key, AttributeValues value) {\n+        this.key = key;\n+        this.values = value;\n+    }\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public AttributeValues getValue() {\n+        return values;\n+    }\n+}"},{"sha":"ca12190ba789a695aef7d74ed024c179996e195a","filename":"rest/src/main/java/org/syncope/rest/user/jaxb/Attributes.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FAttributes.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -0,0 +1,52 @@\n+/*\n+ *  Copyright 2010 ilgrosso.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.rest.user.jaxb;\n+\n+import java.util.HashMap;\n+import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+\n+@XmlRootElement(name = \"userAttributes\")\n+public class Attributes {\n+\n+    @XmlJavaTypeAdapter(AttributeXmlAdapter.class)\n+    @XmlElement(name = \"attributes\")\n+    private HashMap<String, AttributeValues> elements;\n+\n+    public Attributes() {\n+        elements = new HashMap<String, AttributeValues>();\n+    }\n+\n+    public void addUserAttribute(String name, String value) {\n+        elements.put(name, new AttributeValues(value));\n+    }\n+\n+    public void addUserAttribute(String name, Set<String> values) {\n+        elements.put(name, new AttributeValues(values));\n+    }\n+\n+    public void addUserAttribute(String name, AttributeValues values) {\n+        elements.put(name, values);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return elements.toString();\n+    }\n+}"},{"sha":"30382679961751e4f00266a7e03c258eb1d25a9a","filename":"rest/src/main/java/org/syncope/rest/user/jaxb/SearchParameters.java","status":"renamed","additions":7,"deletions":16,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FSearchParameters.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9bf4b8f10f191c5966b0edf39d5c50311f44e593/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FSearchParameters.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2Fjaxb%2FSearchParameters.java?ref=9bf4b8f10f191c5966b0edf39d5c50311f44e593","patch":"@@ -14,22 +14,13 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.rest;\n+package org.syncope.rest.user.jaxb;\n \n-import javax.ws.rs.POST;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.Produces;\n-import org.springframework.context.annotation.Scope;\n-import org.springframework.stereotype.Component;\n+import javax.xml.bind.annotation.XmlRootElement;\n \n-@Path(\"/createUser\")\n-@Component\n-@Scope(\"request\")\n-public class CreateUser {\n-\n-    @POST\n-    @Produces(\"text/plain\")\n-    public String createUser() {\n-        return \"new user created\";\n-    }\n+/**\n+ * TODO: implement\n+ */\n+@XmlRootElement\n+public class SearchParameters {\n }","previous_filename":"rest/src/main/java/org/syncope/rest/CreateUser.java"}]}