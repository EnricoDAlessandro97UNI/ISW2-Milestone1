{"sha":"9ed14eab8951eec6d182af3270c295b4d8cfc9c8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjllZDE0ZWFiODk1MWVlYzZkMTgyYWYzMjcwYzI5NWI0ZDhjZmM5Yzg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-30T12:30:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-30T12:30:52Z"},"message":"[SYNCOPE-172] Adjusting SybcJob report for Roles\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/DEV_ROLE_PROVISIONING@1415595 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"95d3074f5181d88909b8a5365c7d0cab51e8c544","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/95d3074f5181d88909b8a5365c7d0cab51e8c544"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9ed14eab8951eec6d182af3270c295b4d8cfc9c8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ed14eab8951eec6d182af3270c295b4d8cfc9c8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ed14eab8951eec6d182af3270c295b4d8cfc9c8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b0bfcdd128050915a66aedcee824be61f22c58eb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0bfcdd128050915a66aedcee824be61f22c58eb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b0bfcdd128050915a66aedcee824be61f22c58eb"}],"stats":{"total":323,"additions":211,"deletions":112},"files":[{"sha":"cffc059e6c91fddaadbfab087a9e93e7cd6a9c79","filename":"client/src/main/java/org/apache/syncope/client/to/PropagationTaskTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -20,15 +20,15 @@\n \n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n \n public class PropagationTaskTO extends TaskTO {\n \n     private static final long serialVersionUID = 386450127003321197L;\n \n     private PropagationMode propagationMode;\n \n-    private PropagationOperation propagationOperation;\n+    private ResourceOperation propagationOperation;\n \n     private String accountId;\n \n@@ -76,11 +76,11 @@ public void setResource(String resource) {\n         this.resource = resource;\n     }\n \n-    public PropagationOperation getPropagationOperation() {\n+    public ResourceOperation getPropagationOperation() {\n         return propagationOperation;\n     }\n \n-    public void setPropagationOperation(PropagationOperation propagationOperation) {\n+    public void setPropagationOperation(ResourceOperation propagationOperation) {\n \n         this.propagationOperation = propagationOperation;\n     }"},{"sha":"3c87a46a83960602c52f3a0be6623ef3e941d937","filename":"client/src/main/java/org/apache/syncope/types/ResourceOperation.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FResourceOperation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FResourceOperation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FResourceOperation.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.types;\n \n-public enum PropagationOperation {\n+public enum ResourceOperation {\n \n     CREATE,\n     UPDATE,","previous_filename":"client/src/main/java/org/apache/syncope/types/PropagationOperation.java"},{"sha":"f4dbf76b7c84955c954bec27167d22b45da47f9e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/PropagationTask.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.core.persistence.validation.entity.PropagationTaskCheck;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.identityconnectors.framework.common.objects.Attribute;\n \n /**\n@@ -50,7 +50,7 @@ public class PropagationTask extends Task {\n      * @see PropagationOperation\n      */\n     @Enumerated(EnumType.STRING)\n-    private PropagationOperation propagationOperation;\n+    private ResourceOperation propagationOperation;\n \n     /**\n      * The accountId on the external resource.\n@@ -113,11 +113,11 @@ public void setPropagationMode(PropagationMode propagationMode) {\n         this.propagationMode = propagationMode;\n     }\n \n-    public PropagationOperation getPropagationOperation() {\n+    public ResourceOperation getPropagationOperation() {\n         return propagationOperation;\n     }\n \n-    public void setPropagationOperation(PropagationOperation propagationOperation) {\n+    public void setPropagationOperation(ResourceOperation propagationOperation) {\n \n         this.propagationOperation = propagationOperation;\n     }"},{"sha":"f9e284371e28ddfe8bf5d1c43211d77ef4ce6f8f","filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.types.ConnConfProperty;\n import org.apache.syncope.types.ConnectorCapability;\n import org.apache.syncope.types.PropagationMode;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.api.APIConfiguration;\n@@ -310,7 +310,7 @@ public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, f\n      * @param options ConnId's OperationOptions\n      * @return ConnId's connector object for given uid\n      */\n-    public ConnectorObject getObject(final PropagationMode propagationMode, final PropagationOperation operationType,\n+    public ConnectorObject getObject(final PropagationMode propagationMode, final ResourceOperation operationType,\n             final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n \n         ConnectorObject result = null;"},{"sha":"c59c098a55fd744fb0315321c1d8ec880dba6d83","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationByResource.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationByResource.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -24,7 +24,7 @@\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n \n /**\n  * Utility class for encapsulating operations to be performed on various resources.\n@@ -82,7 +82,7 @@ public final void purge() {\n      * @param resourceName target resource\n      * @return whether the operation was successful or not\n      */\n-    public final boolean add(final PropagationOperation type, final String resourceName) {\n+    public final boolean add(final ResourceOperation type, final String resourceName) {\n         Set<String> set;\n         switch (type) {\n             case CREATE:\n@@ -109,7 +109,7 @@ public final boolean add(final PropagationOperation type, final String resourceN\n      * @param resourceNames target resources\n      * @return whether the operation was successful or not\n      */\n-    public boolean addAll(final PropagationOperation type, final Set<String> resourceNames) {\n+    public boolean addAll(final ResourceOperation type, final Set<String> resourceNames) {\n         Set<String> set;\n         switch (type) {\n             case CREATE:\n@@ -136,7 +136,7 @@ public boolean addAll(final PropagationOperation type, final Set<String> resourc\n      * @param resourceName target resource\n      * @return whether the operation was successful or not\n      */\n-    public final boolean remove(final PropagationOperation type, final String resourceName) {\n+    public final boolean remove(final ResourceOperation type, final String resourceName) {\n         boolean result = false;\n \n         switch (type) {\n@@ -158,7 +158,7 @@ public final boolean remove(final PropagationOperation type, final String resour\n         return result;\n     }\n \n-    public boolean contains(final PropagationOperation type, final String resourceName) {\n+    public boolean contains(final ResourceOperation type, final String resourceName) {\n         boolean result = false;\n \n         switch (type) {\n@@ -186,7 +186,7 @@ public boolean contains(final PropagationOperation type, final String resourceNa\n      * @param type resource operation type\n      * @return resource matching the given type\n      */\n-    public final Set<String> get(final PropagationOperation type) {\n+    public final Set<String> get(final ResourceOperation type) {\n         Set<String> result = Collections.emptySet();\n \n         switch (type) {\n@@ -214,7 +214,7 @@ public final Set<String> get(final PropagationOperation type) {\n      * @param type resource operation type\n      * @param resourceNames to be set\n      */\n-    public final void set(final PropagationOperation type, final Set<String> resourceNames) {\n+    public final void set(final ResourceOperation type, final Set<String> resourceNames) {\n \n         switch (type) {\n             case CREATE:\n@@ -242,9 +242,9 @@ public final void set(final PropagationOperation type, final Set<String> resourc\n      * @param propByRes to be merged\n      */\n     public final void merge(final PropagationByResource propByRes) {\n-        toBeCreated.addAll(propByRes.get(PropagationOperation.CREATE));\n-        toBeUpdated.addAll(propByRes.get(PropagationOperation.UPDATE));\n-        toBeDeleted.addAll(propByRes.get(PropagationOperation.DELETE));\n+        toBeCreated.addAll(propByRes.get(ResourceOperation.CREATE));\n+        toBeUpdated.addAll(propByRes.get(ResourceOperation.UPDATE));\n+        toBeDeleted.addAll(propByRes.get(ResourceOperation.DELETE));\n         oldAccountIds.putAll(propByRes.getOldAccountIds());\n     }\n "},{"sha":"1a2b8fed719085f35608430167443c11b1275bb4","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationManager.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -53,7 +53,7 @@\n import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.IntMappingType;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.apache.syncope.types.SchemaType;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -198,7 +198,7 @@ protected List<PropagationTask> getCreateTaskIds(final AbstractAttributable attr\n         }\n \n         if (syncResourceNames != null) {\n-            propByRes.get(PropagationOperation.CREATE).removeAll(syncResourceNames);\n+            propByRes.get(ResourceOperation.CREATE).removeAll(syncResourceNames);\n         }\n \n         return createTasks(attributable, password, enable, false, propByRes);\n@@ -338,15 +338,15 @@ protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attr\n                 : vAttrsToBeUpdated, AttributableUtil.getInstance(AttributableType.USER));\n \n         if (propByRes == null || propByRes.isEmpty()) {\n-            localPropByRes.addAll(PropagationOperation.UPDATE, attributable.getResourceNames());\n+            localPropByRes.addAll(ResourceOperation.UPDATE, attributable.getResourceNames());\n         } else {\n             localPropByRes.merge(propByRes);\n         }\n \n         if (syncResourceNames != null) {\n-            localPropByRes.get(PropagationOperation.CREATE).removeAll(syncResourceNames);\n-            localPropByRes.get(PropagationOperation.UPDATE).removeAll(syncResourceNames);\n-            localPropByRes.get(PropagationOperation.DELETE).removeAll(syncResourceNames);\n+            localPropByRes.get(ResourceOperation.CREATE).removeAll(syncResourceNames);\n+            localPropByRes.get(ResourceOperation.UPDATE).removeAll(syncResourceNames);\n+            localPropByRes.get(ResourceOperation.DELETE).removeAll(syncResourceNames);\n         }\n \n         return createTasks(attributable, password, enable, false, localPropByRes);\n@@ -424,9 +424,9 @@ protected List<PropagationTask> getDeleteTaskIds(final AbstractAttributable attr\n             final String syncResourceName) {\n \n         final PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(PropagationOperation.DELETE, attributable.getResourceNames());\n+        propByRes.set(ResourceOperation.DELETE, attributable.getResourceNames());\n         if (syncResourceName != null) {\n-            propByRes.get(PropagationOperation.DELETE).remove(syncResourceName);\n+            propByRes.get(ResourceOperation.DELETE).remove(syncResourceName);\n         }\n         return createTasks(attributable, null, false, true, propByRes);\n     }\n@@ -634,7 +634,7 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n \n         final List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n \n-        for (PropagationOperation operation : PropagationOperation.values()) {\n+        for (ResourceOperation operation : ResourceOperation.values()) {\n             for (String resourceName : propByRes.get(operation)) {\n                 final ExternalResource resource = resourceDAO.find(resourceName);\n                 if (resource == null) {"},{"sha":"961b3fd8115f5c96b7cf5caedfcf6648e2613206","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -64,7 +64,7 @@\n import org.apache.syncope.core.util.MappingUtil;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.IntMappingType;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -311,7 +311,7 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n                                 && mapItem.getIntMappingType() == attrUtil.virIntMappingType()\n                                 && attributable.getResources().contains(resource)) {\n \n-                            propByRes.add(PropagationOperation.UPDATE, resource.getName());\n+                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n \n                             // Using virtual attribute as AccountId must be avoided\n                             if (mapItem.isAccountid() && virAttr != null && !virAttr.getValues().isEmpty()) {\n@@ -335,7 +335,7 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n                                 && mapItem.getIntMappingType() == attrUtil.virIntMappingType()\n                                 && attributable.getResources().contains(resource)) {\n \n-                            propByRes.add(PropagationOperation.UPDATE, resource.getName());\n+                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n                         }\n                     }\n                 }\n@@ -376,7 +376,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         for (String resourceToBeRemoved : attributableMod.getResourcesToBeRemoved()) {\n             ExternalResource resource = getResource(resourceToBeRemoved);\n             if (resource != null) {\n-                propByRes.add(PropagationOperation.DELETE, resource.getName());\n+                propByRes.add(ResourceOperation.DELETE, resource.getName());\n                 attributable.removeResource(resource);\n             }\n         }\n@@ -387,7 +387,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         for (String resourceToBeAdded : attributableMod.getResourcesToBeAdded()) {\n             ExternalResource resource = getResource(resourceToBeAdded);\n             if (resource != null) {\n-                propByRes.add(PropagationOperation.CREATE, resource.getName());\n+                propByRes.add(ResourceOperation.CREATE, resource.getName());\n                 attributable.addResource(resource);\n             }\n         }\n@@ -425,7 +425,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                                 && mapItem.getIntMappingType() == attrUtil.intMappingType()\n                                 && attributable.getResources().contains(resource)) {\n \n-                            propByRes.add(PropagationOperation.UPDATE, resource.getName());\n+                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n \n                             if (mapItem.isAccountid() && attribute != null\n                                     && !attribute.getValuesAsStrings().isEmpty()) {\n@@ -451,7 +451,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                                 && mapItem.getIntMappingType() == attrUtil.intMappingType()\n                                 && attributable.getResources().contains(resource)) {\n \n-                            propByRes.add(PropagationOperation.UPDATE, resource.getName());\n+                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n                         }\n                     }\n                 }\n@@ -527,7 +527,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                                 && mapItem.getIntMappingType() == attrUtil.derIntMappingType()\n                                 && attributable.getResources().contains(resource)) {\n \n-                            propByRes.add(PropagationOperation.UPDATE, resource.getName());\n+                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n \n                             if (mapItem.isAccountid() && derAttr != null\n                                     && !derAttr.getValue(attributable.getAttributes()).isEmpty()) {\n@@ -553,7 +553,7 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                                 && mapItem.getIntMappingType() == attrUtil.derIntMappingType()\n                                 && attributable.getResources().contains(resource)) {\n \n-                            propByRes.add(PropagationOperation.UPDATE, resource.getName());\n+                            propByRes.add(ResourceOperation.UPDATE, resource.getName());\n                         }\n                     }\n                 }"},{"sha":"7b8dc377fc792db126fe1ca580b745448bf97716","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -39,7 +39,7 @@\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.types.AttributableType;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n@@ -176,7 +176,7 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n                     role.getParent() == null ? null : role.getParent().getId());\n             if (otherRole == null || role.equals(otherRole)) {\n                 if (!roleMod.getName().equals(role.getName())) {\n-                    propByRes.addAll(PropagationOperation.UPDATE, currentResources);\n+                    propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n                     for (String resource : currentResources) {\n                         propByRes.addOldAccountId(resource, role.getName());\n                     }"},{"sha":"ade5c148ad7be86a7dffd98360e861ee7a5ba3d0","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -51,7 +51,7 @@\n import org.apache.syncope.types.CipherAlgorithm;\n import org.apache.syncope.types.IntMappingType;\n import org.apache.syncope.types.PasswordPolicySpec;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -271,15 +271,15 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n \n             user.setChangePwdDate(new Date());\n \n-            propByRes.addAll(PropagationOperation.UPDATE, currentResources);\n+            propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n         }\n \n         // username\n         if (userMod.getUsername() != null && !userMod.getUsername().equals(user.getUsername())) {\n             String oldUsername = user.getUsername();\n \n             user.setUsername(userMod.getUsername());\n-            propByRes.addAll(PropagationOperation.UPDATE, currentResources);\n+            propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n \n             for (ExternalResource resource : user.getResources()) {\n                 for (AbstractMappingItem mapItem : resource.getUmapping().getItems()) {\n@@ -394,16 +394,16 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n             throw scce;\n         }\n \n-        propByRes.addAll(PropagationOperation.DELETE, toBeDeprovisioned);\n-        propByRes.addAll(PropagationOperation.UPDATE, toBeProvisioned);\n+        propByRes.addAll(ResourceOperation.DELETE, toBeDeprovisioned);\n+        propByRes.addAll(ResourceOperation.UPDATE, toBeProvisioned);\n \n         /**\n          * In case of new memberships all the current resources have to be updated in order to propagate new role and\n          * membership attribute values.\n          */\n         if (!toBeDeprovisioned.isEmpty() || !toBeProvisioned.isEmpty()) {\n             currentResources.removeAll(toBeDeprovisioned);\n-            propByRes.addAll(PropagationOperation.UPDATE, currentResources);\n+            propByRes.addAll(ResourceOperation.UPDATE, currentResources);\n         }\n \n         return propByRes;"},{"sha":"f58c553f7246e294f2a93bcbb9647a601e1d05ed","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncJob.java","status":"modified","additions":125,"deletions":31,"changes":156,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -105,27 +105,63 @@ private String createReport(final List<SyncResult> syncResults, final TraceLevel\n             report.append(\"==>Dry run only, no modifications were made<==\\n\\n\");\n         }\n \n-        List<SyncResult> created = new ArrayList<SyncResult>();\n-        List<SyncResult> createdFailed = new ArrayList<SyncResult>();\n-        List<SyncResult> updated = new ArrayList<SyncResult>();\n-        List<SyncResult> updatedFailed = new ArrayList<SyncResult>();\n-        List<SyncResult> deleted = new ArrayList<SyncResult>();\n-        List<SyncResult> deletedFailed = new ArrayList<SyncResult>();\n+        List<SyncResult> uSuccCreate = new ArrayList<SyncResult>();\n+        List<SyncResult> uFailCreate = new ArrayList<SyncResult>();\n+        List<SyncResult> uSuccUpdate = new ArrayList<SyncResult>();\n+        List<SyncResult> uFailUpdate = new ArrayList<SyncResult>();\n+        List<SyncResult> uSuccDelete = new ArrayList<SyncResult>();\n+        List<SyncResult> uFailDelete = new ArrayList<SyncResult>();\n+        List<SyncResult> rSuccCreate = new ArrayList<SyncResult>();\n+        List<SyncResult> rFailCreate = new ArrayList<SyncResult>();\n+        List<SyncResult> rSuccUpdate = new ArrayList<SyncResult>();\n+        List<SyncResult> rFailUpdate = new ArrayList<SyncResult>();\n+        List<SyncResult> rSuccDelete = new ArrayList<SyncResult>();\n+        List<SyncResult> rFailDelete = new ArrayList<SyncResult>();\n \n         for (SyncResult syncResult : syncResults) {\n             switch (syncResult.getStatus()) {\n                 case SUCCESS:\n                     switch (syncResult.getOperation()) {\n                         case CREATE:\n-                            created.add(syncResult);\n+                            switch (syncResult.getSubjectType()) {\n+                                case USER:\n+                                    uSuccCreate.add(syncResult);\n+                                    break;\n+\n+                                case ROLE:\n+                                    rSuccCreate.add(syncResult);\n+                                    break;\n+\n+                                default:\n+                            }\n                             break;\n \n                         case UPDATE:\n-                            updated.add(syncResult);\n+                            switch (syncResult.getSubjectType()) {\n+                                case USER:\n+                                    uSuccUpdate.add(syncResult);\n+                                    break;\n+\n+                                case ROLE:\n+                                    rSuccUpdate.add(syncResult);\n+                                    break;\n+\n+                                default:\n+                            }\n                             break;\n \n                         case DELETE:\n-                            deleted.add(syncResult);\n+                            switch (syncResult.getSubjectType()) {\n+                                case USER:\n+                                    uSuccDelete.add(syncResult);\n+                                    break;\n+\n+                                case ROLE:\n+                                    rSuccDelete.add(syncResult);\n+                                    break;\n+\n+                                default:\n+                            }\n                             break;\n \n                         default:\n@@ -135,15 +171,45 @@ private String createReport(final List<SyncResult> syncResults, final TraceLevel\n                 case FAILURE:\n                     switch (syncResult.getOperation()) {\n                         case CREATE:\n-                            createdFailed.add(syncResult);\n+                            switch (syncResult.getSubjectType()) {\n+                                case USER:\n+                                    uFailCreate.add(syncResult);\n+                                    break;\n+\n+                                case ROLE:\n+                                    rFailCreate.add(syncResult);\n+                                    break;\n+\n+                                default:\n+                            }\n                             break;\n \n                         case UPDATE:\n-                            updatedFailed.add(syncResult);\n+                            switch (syncResult.getSubjectType()) {\n+                                case USER:\n+                                    uFailUpdate.add(syncResult);\n+                                    break;\n+\n+                                case ROLE:\n+                                    rFailUpdate.add(syncResult);\n+                                    break;\n+\n+                                default:\n+                            }\n                             break;\n \n                         case DELETE:\n-                            deletedFailed.add(syncResult);\n+                            switch (syncResult.getSubjectType()) {\n+                                case USER:\n+                                    uFailDelete.add(syncResult);\n+                                    break;\n+\n+                                case ROLE:\n+                                    rFailDelete.add(syncResult);\n+                                    break;\n+\n+                                default:\n+                            }\n                             break;\n \n                         default:\n@@ -155,35 +221,63 @@ private String createReport(final List<SyncResult> syncResults, final TraceLevel\n         }\n \n         // Summary, also to be included for FAILURE and ALL, so create it anyway.\n-        report.append(\"Users [created/failures]: \").append(created.size()).append('/').append(createdFailed.size())\n-                .append(' ').append(\"[updated/failures]: \").append(updated.size()).append('/').append(\n-                updatedFailed.size()).append(' ').append(\"[deleted/ failures]: \").append(deleted.size())\n-                .append('/').append(deletedFailed.size());\n+        report.append(\"Users \").\n+                append(\"[created/failures]: \").append(uSuccCreate.size()).append('/').append(uFailCreate.size()).\n+                append(' ').\n+                append(\"[updated/failures]: \").append(uSuccUpdate.size()).append('/').append(uFailUpdate.size()).\n+                append(' ').\n+                append(\"[deleted/failures]: \").append(uSuccDelete.size()).append('/').append(uFailDelete.size()).\n+                append('\\n');\n+        report.append(\"Roles \").\n+                append(\"[created/failures]: \").append(rSuccCreate.size()).append('/').append(rFailCreate.size()).\n+                append(' ').\n+                append(\"[updated/failures]: \").append(rSuccUpdate.size()).append('/').append(rFailUpdate.size()).\n+                append(' ').\n+                append(\"[deleted/failures]: \").append(rSuccDelete.size()).append('/').append(rFailDelete.size());\n \n         // Failures\n         if (syncTraceLevel == TraceLevel.FAILURES || syncTraceLevel == TraceLevel.ALL) {\n-            if (!createdFailed.isEmpty()) {\n-                report.append(\"\\n\\nFailed to create: \");\n-                report.append(SyncResult.reportSetOfSynchronizationResult(createdFailed, syncTraceLevel));\n+            if (!uFailCreate.isEmpty()) {\n+                report.append(\"\\n\\nUsers failed to create: \");\n+                report.append(SyncResult.produceReport(uFailCreate, syncTraceLevel));\n+            }\n+            if (!uFailUpdate.isEmpty()) {\n+                report.append(\"\\nUsers failed to update: \");\n+                report.append(SyncResult.produceReport(uFailUpdate, syncTraceLevel));\n+            }\n+            if (!uFailDelete.isEmpty()) {\n+                report.append(\"\\nUsers failed to delete: \");\n+                report.append(SyncResult.produceReport(uFailDelete, syncTraceLevel));\n+            }\n+\n+            if (!rFailCreate.isEmpty()) {\n+                report.append(\"\\n\\nRoles failed to create: \");\n+                report.append(SyncResult.produceReport(rFailCreate, syncTraceLevel));\n             }\n-            if (!updatedFailed.isEmpty()) {\n-                report.append(\"\\nFailed to update: \");\n-                report.append(SyncResult.reportSetOfSynchronizationResult(updatedFailed, syncTraceLevel));\n+            if (!rFailUpdate.isEmpty()) {\n+                report.append(\"\\nRoles failed to update: \");\n+                report.append(SyncResult.produceReport(rFailUpdate, syncTraceLevel));\n             }\n-            if (!deletedFailed.isEmpty()) {\n-                report.append(\"\\nFailed to delete: \");\n-                report.append(SyncResult.reportSetOfSynchronizationResult(deletedFailed, syncTraceLevel));\n+            if (!rFailDelete.isEmpty()) {\n+                report.append(\"\\nRoles failed to delete: \");\n+                report.append(SyncResult.produceReport(rFailDelete, syncTraceLevel));\n             }\n         }\n \n         // Succeeded, only if on 'ALL' level\n         if (syncTraceLevel == TraceLevel.ALL) {\n-            report.append(\"\\n\\nCreated:\\n\")\n-                    .append(SyncResult.reportSetOfSynchronizationResult(created, syncTraceLevel))\n-                    .append(\"\\nUpdated:\\n\")\n-                    .append(SyncResult.reportSetOfSynchronizationResult(updated, syncTraceLevel))\n-                    .append(\"\\nDeleted:\\n\")\n-                    .append(SyncResult.reportSetOfSynchronizationResult(deleted, syncTraceLevel));\n+            report.append(\"\\n\\nUsers created:\\n\")\n+                    .append(SyncResult.produceReport(uSuccCreate, syncTraceLevel))\n+                    .append(\"\\nUsers updated:\\n\")\n+                    .append(SyncResult.produceReport(uSuccUpdate, syncTraceLevel))\n+                    .append(\"\\nUsers deleted:\\n\")\n+                    .append(SyncResult.produceReport(uSuccDelete, syncTraceLevel));\n+            report.append(\"\\n\\nRoles created:\\n\")\n+                    .append(SyncResult.produceReport(rSuccCreate, syncTraceLevel))\n+                    .append(\"\\nRoles updated:\\n\")\n+                    .append(SyncResult.produceReport(rSuccUpdate, syncTraceLevel))\n+                    .append(\"\\nRoles deleted:\\n\")\n+                    .append(SyncResult.produceReport(rSuccDelete, syncTraceLevel));\n         }\n \n         return report.toString();"},{"sha":"0dfd10c37af1d12c157c65e0080ea5f460121946","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncResult.java","status":"modified","additions":22,"deletions":21,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -23,23 +23,19 @@\n import org.apache.commons.lang.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang.builder.ToStringStyle;\n import org.apache.syncope.core.quartz.AbstractTaskJob.Status;\n+import org.apache.syncope.types.AttributableType;\n+import org.apache.syncope.types.ResourceOperation;\n import org.apache.syncope.types.TraceLevel;\n \n public class SyncResult {\n \n-    static enum Operation {\n-\n-        CREATE,\n-        UPDATE,\n-        DELETE\n-\n-    }\n-\n     private String message;\n \n     private Status status;\n \n-    private Operation operation;\n+    private AttributableType subjectType;\n+\n+    private ResourceOperation operation;\n \n     private Long id;\n \n@@ -77,12 +73,20 @@ public void setStatus(final Status status) {\n         this.status = status;\n     }\n \n-    public Operation getOperation() {\n-        return this.operation;\n+    public AttributableType getSubjectType() {\n+        return subjectType;\n     }\n \n-    public void setOperation(Operation t) {\n-        this.operation = t;\n+    public void setSubjectType(final AttributableType subjectType) {\n+        this.subjectType = subjectType;\n+    }\n+\n+    public ResourceOperation getOperation() {\n+        return operation;\n+    }\n+\n+    public void setOperation(final ResourceOperation operation) {\n+        this.operation = operation;\n     }\n \n     @Override\n@@ -101,13 +105,12 @@ public String getReportString(final TraceLevel level) {\n             // No per entry log in this case.\n             return null;\n         } else if (level == TraceLevel.FAILURES && status == Status.FAILURE) {\n-\n             // only report failures\n             return String.format(\"Failed %s (id/name): %d/%s with message: %s\", operation, id, name, message);\n         } else {\n             // All\n-            return String.format(\"%s %s (id/ name): %d/ %s %s\", operation, status, id, name, StringUtils\n-                    .isEmpty(message)\n+            return String.format(\"%s %s (id/name): %d/%s %s\", operation, status, id, name,\n+                    StringUtils.isBlank(message)\n                     ? \"\"\n                     : \"with message: \" + message);\n         }\n@@ -120,12 +123,10 @@ public String getReportString(final TraceLevel level) {\n      * @param level trace level\n      * @return report as string\n      */\n-    public static String reportSetOfSynchronizationResult(final Collection<SyncResult> results,\n-            final TraceLevel level) {\n-\n+    public static String produceReport(final Collection<SyncResult> results, final TraceLevel level) {\n         StringBuilder sb = new StringBuilder();\n-        for (SyncResult sr : results) {\n-            sb.append(sr.getReportString(level)).append(\"\\n\");\n+        for (SyncResult result : results) {\n+            sb.append(result.getReportString(level)).append(\"\\n\");\n         }\n         return sb.toString();\n     }"},{"sha":"cd867350115761e80a54fb4943f80f6c160580eb","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHandler.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -65,6 +65,7 @@\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.ConflictResolutionAction;\n+import org.apache.syncope.types.ResourceOperation;\n import org.apache.syncope.types.SyncPolicySpec;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n@@ -378,7 +379,8 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n         }\n \n         final SyncResult result = new SyncResult();\n-        result.setOperation(SyncResult.Operation.CREATE);\n+        result.setOperation(ResourceOperation.CREATE);\n+        result.setSubjectType(attrUtil.getType());\n \n         AbstractAttributableTO subjectTO = connObjectUtil.getAttributableTO(delta.getObject(), syncTask, attrUtil);\n \n@@ -473,7 +475,8 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n \n         for (Long id : subjects) {\n             final SyncResult result = new SyncResult();\n-            result.setOperation(SyncResult.Operation.UPDATE);\n+            result.setOperation(ResourceOperation.UPDATE);\n+            result.setSubjectType(attrUtil.getType());\n \n             try {\n                 AbstractAttributableTO subjectTO = AttributableType.USER == attrUtil.getType()\n@@ -567,7 +570,8 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                 if (subjectTO instanceof RoleTO) {\n                     result.setName(((RoleTO) subjectTO).getName());\n                 }\n-                result.setOperation(SyncResult.Operation.DELETE);\n+                result.setOperation(ResourceOperation.DELETE);\n+                result.setSubjectType(attrUtil.getType());\n                 result.setStatus(AbstractTaskJob.Status.SUCCESS);\n \n                 if (!dryRun) {"},{"sha":"06820d1bf9024b64842423849d025b7ca06aa146","filename":"core/src/main/java/org/apache/syncope/core/workflow/role/NoOpRoleWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.core.workflow.WorkflowException;\n import org.apache.syncope.core.workflow.WorkflowResult;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n@@ -52,7 +52,7 @@ public WorkflowResult<Long> create(final RoleTO roleTO)\n         role = roleDAO.save(role);\n \n         final PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(PropagationOperation.CREATE, role.getResourceNames());\n+        propByRes.set(ResourceOperation.CREATE, role.getResourceNames());\n \n         return new WorkflowResult<Long>(role.getId(), propByRes, \"create\");\n     }"},{"sha":"469089ed110c68173410ed94ccabdb47fb44d707","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -33,7 +33,7 @@\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.core.workflow.WorkflowException;\n import org.apache.syncope.core.workflow.WorkflowResult;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n@@ -83,7 +83,7 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, fina\n         user = userDAO.save(user);\n \n         final PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(PropagationOperation.CREATE, user.getResourceNames());\n+        propByRes.set(ResourceOperation.CREATE, user.getResourceNames());\n \n         return new WorkflowResult<Map.Entry<Long, Boolean>>(new DefaultMapEntry(user.getId(), propagateEnable),\n                 propByRes, \"create\");"},{"sha":"75ac4df2fa10737742be0fe60d729ac504b91feb","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -67,7 +67,7 @@\n import org.apache.syncope.core.workflow.WorkflowException;\n import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.core.workflow.user.AbstractUserWorkflowAdapter;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.apache.syncope.types.WorkflowFormPropertyType;\n import org.identityconnectors.common.security.EncryptorFactory;\n import org.slf4j.Logger;\n@@ -237,7 +237,7 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, fina\n         // save resources to be propagated and password for later -\n         // after form submission - propagation\n         PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(PropagationOperation.CREATE, user.getResourceNames());\n+        propByRes.set(ResourceOperation.CREATE, user.getResourceNames());\n \n         String formTaskId = getFormTask(user);\n         if (formTaskId != null) {"},{"sha":"46e723755506cca6ebc35980e12c5d472cf97b28","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.core.quartz.TestSyncActions;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.junit.Test;\n@@ -84,7 +84,7 @@ public void savePropagationTask() {\n         task.setResource(resource);\n         task.setSubjectType(AttributableType.USER);\n         task.setPropagationMode(PropagationMode.TWO_PHASES);\n-        task.setPropagationOperation(PropagationOperation.CREATE);\n+        task.setPropagationOperation(ResourceOperation.CREATE);\n         task.setAccountId(\"one@two.com\");\n \n         Set<Attribute> attributes = new HashSet<Attribute>();"},{"sha":"3d60a8614c60875fdfae2291b8aecaa2cbc80529","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/TaskTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ed14eab8951eec6d182af3270c295b4d8cfc9c8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java?ref=9ed14eab8951eec6d182af3270c295b4d8cfc9c8","patch":"@@ -41,7 +41,7 @@\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n-import org.apache.syncope.types.PropagationOperation;\n+import org.apache.syncope.types.ResourceOperation;\n \n @Transactional\n public class TaskTest extends AbstractTest {\n@@ -80,7 +80,7 @@ public void save() {\n         task.setResource(resource);\n         task.setSubjectType(AttributableType.USER);\n         task.setPropagationMode(PropagationMode.TWO_PHASES);\n-        task.setPropagationOperation(PropagationOperation.CREATE);\n+        task.setPropagationOperation(ResourceOperation.CREATE);\n         task.setAccountId(\"one@two.com\");\n \n         Set<Attribute> attributes = new HashSet<Attribute>();"}]}