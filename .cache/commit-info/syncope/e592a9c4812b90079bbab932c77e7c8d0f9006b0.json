{"sha":"e592a9c4812b90079bbab932c77e7c8d0f9006b0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU1OTJhOWM0ODEyYjkwMDc5YmJhYjkzMmM3N2U3YzhkMGY5MDA2YjA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-27T14:47:56Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-27T14:47:56Z"},"message":"Fixes issue 240\nA new glassfish profile has been added to core/pom.xml, performing all IT tests with Glassfish 3.1.1.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247382 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e8abf2f36cfdc3745646424648fefc145927c5fa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e8abf2f36cfdc3745646424648fefc145927c5fa"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e592a9c4812b90079bbab932c77e7c8d0f9006b0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e592a9c4812b90079bbab932c77e7c8d0f9006b0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e592a9c4812b90079bbab932c77e7c8d0f9006b0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e592a9c4812b90079bbab932c77e7c8d0f9006b0/comments","author":null,"committer":null,"parents":[{"sha":"ded1cf9dba23d9c09cbe67a957a95d190e6e7618","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ded1cf9dba23d9c09cbe67a957a95d190e6e7618","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ded1cf9dba23d9c09cbe67a957a95d190e6e7618"}],"stats":{"total":520,"additions":286,"deletions":234},"files":[{"sha":"6b4d96cc38dda9be4eb9d9541daaea0f6ae61c9d","filename":"build-tools/src/main/webapp/WEB-INF/glassfish-web.xml","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/build-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/build-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE glassfish-web-app PUBLIC \"-//GlassFish.org//DTD \n+GlassFish Application Server 3.1 Servlet 3.0//EN\" \"http://glassfish.org/dtds/glassfish-web-app_3_0-1.dtd\">\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<glassfish-web-app>\n+    <class-loader delegate=\"false\"/>\n+</glassfish-web-app>"},{"sha":"6e84f38cf62789931940ced4b61c6577ba5a9c57","filename":"core/pom.xml","status":"modified","additions":55,"deletions":1,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -189,7 +189,7 @@\n             <artifactId>openjpa-all</artifactId>\n             <scope>provided</scope>\n         </dependency>\n-\n+        \n         <dependency>\n             <groupId>org.codehaus.groovy</groupId>\n             <artifactId>groovy-all</artifactId>\n@@ -922,6 +922,60 @@\n                 </testResources>\n             </build>\n         </profile>\n+        \n+        <profile>\n+            <id>glassfish-it</id>\n+            \n+            <dependencies>                                   \n+                <dependency>\n+                    <groupId>org.apache.openjpa</groupId>\n+                    <artifactId>openjpa-all</artifactId>\n+                </dependency>\n+\n+                <dependency>\n+                    <groupId>org.codehaus.groovy</groupId>\n+                    <artifactId>groovy-all</artifactId>\n+                </dependency>\n+                \n+                <dependency>\n+                    <groupId>com.h2database</groupId>\n+                    <artifactId>h2</artifactId>\n+                </dependency>\n+            </dependencies>\n+            \n+            <build>\n+                <defaultGoal>clean verify</defaultGoal>\n+\n+                <plugins>       \n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <inherited>true</inherited>\n+                        <configuration>\n+                            <skipTests>true</skipTests>\n+                        </configuration>\n+                    </plugin>\n+                \n+                    <plugin>\n+                        <groupId>org.codehaus.cargo</groupId>\n+                        <artifactId>cargo-maven2-plugin</artifactId>\n+                        <inherited>true</inherited>\n+                        <configuration>\n+                            <container>\n+                                <containerId>glassfish3x</containerId>\n+                                <zipUrlInstaller>\n+                                    <url>http://download.java.net/glassfish/${glassfish.version}/release/glassfish-${glassfish.version}.zip</url>\n+                                    <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n+                                    <extractDir>${java.io.tmpdir}</extractDir>\n+                                </zipUrlInstaller>\n+                                <log>${cargo.log}</log>\n+                                <output>${cargo.output}</output>\n+                            </container>\n+                        </configuration>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n     </profiles>\n     \n     <reporting>"},{"sha":"7d2c1dca5c72e38ab73a2f6750da8873a052dd5f","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -153,22 +153,22 @@ public abstract <T extends AbstractVirAttr> boolean removeVirtualAttribute(\n     public abstract void setVirtualAttributes(\n             List<? extends AbstractVirAttr> virtualAttributes);\n \n-    protected abstract Set<ExternalResource> resources();\n+    protected abstract List<ExternalResource> resources();\n \n     public boolean addResource(final ExternalResource resource) {\n-        return resources().add(resource);\n+        return resources().contains(resource) || resources().add(resource);\n     }\n \n     public boolean removeResource(final ExternalResource resource) {\n         return resources().remove(resource);\n     }\n \n-    public Set<ExternalResource> getResources() {\n+    public List<ExternalResource> getResources() {\n         return resources();\n     }\n \n     public Set<String> getResourceNames() {\n-        Set<ExternalResource> ownResources = getResources();\n+        List<ExternalResource> ownResources = getResources();\n \n         Set<String> result = new HashSet<String>(ownResources.size());\n         for (ExternalResource resource : ownResources) {\n@@ -178,7 +178,7 @@ public Set<String> getResourceNames() {\n         return result;\n     }\n \n-    public void setResources(final Set<ExternalResource> resources) {\n+    public void setResources(final List<ExternalResource> resources) {\n         resources().clear();\n         if (resources != null) {\n             resources().addAll(resources);"},{"sha":"39ebdc8d08e2a272b491679a610a184cd5dadd40","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractVirAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -48,7 +48,7 @@ public Long getId() {\n         return id;\n     }\n \n-    public void setValues(List<String> values) {\n+    public void setValues(final List<String> values) {\n         this.values = values;\n     }\n "},{"sha":"9d2fa10a6c9c0a586330d7f645c91575164e1537","filename":"core/src/main/java/org/syncope/core/persistence/beans/Entitlement.java","status":"modified","additions":2,"deletions":35,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -14,15 +14,10 @@\n  */\n package org.syncope.core.persistence.beans;\n \n-import java.util.HashSet;\n-import java.util.Set;\n import javax.persistence.Cacheable;\n-import org.syncope.core.persistence.beans.role.SyncopeRole;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n import javax.persistence.Id;\n-import javax.persistence.ManyToMany;\n import org.syncope.core.persistence.validation.entity.EntitlementCheck;\n \n @Entity\n@@ -38,47 +33,19 @@ public class Entitlement extends AbstractBaseBean {\n     @Column(nullable = true)\n     private String description;\n \n-    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"entitlements\")\n-    private Set<SyncopeRole> roles;\n-\n     public String getDescription() {\n         return description;\n     }\n \n-    public void setDescription(String description) {\n+    public void setDescription(final String description) {\n         this.description = description;\n     }\n \n     public String getName() {\n         return name;\n     }\n \n-    public void setName(String name) {\n+    public void setName(final String name) {\n         this.name = name;\n     }\n-\n-    public boolean addRole(SyncopeRole role) {\n-        if (this.roles == null) {\n-            this.roles = new HashSet<SyncopeRole>();\n-        }\n-        return this.roles.add(role);\n-    }\n-\n-    public boolean removeRole(SyncopeRole role) {\n-        if (this.roles == null) {\n-            return true;\n-        }\n-        return this.roles.remove(role);\n-    }\n-\n-    public Set<SyncopeRole> getRoles() {\n-        if (this.roles == null) {\n-            this.roles = new HashSet<SyncopeRole>();\n-        }\n-        return this.roles;\n-    }\n-\n-    public void setRoles(Set<SyncopeRole> roles) {\n-        this.roles = roles;\n-    }\n }"},{"sha":"f416f661dc70f67c50afc755d8e0cf5c38fdaa72","filename":"core/src/main/java/org/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":10,"deletions":66,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -14,8 +14,10 @@\n  */\n package org.syncope.core.persistence.beans;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Set;\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n@@ -27,7 +29,6 @@\n import javax.persistence.FetchType;\n import javax.persistence.Id;\n import javax.persistence.Lob;\n-import javax.persistence.ManyToMany;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n import javax.validation.Valid;\n@@ -36,8 +37,6 @@\n import javax.validation.constraints.NotNull;\n import org.apache.commons.lang.StringUtils;\n import org.identityconnectors.framework.common.objects.SyncToken;\n-import org.syncope.core.persistence.beans.role.SyncopeRole;\n-import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.validation.entity.ExternalResourceCheck;\n import org.syncope.core.util.XMLSerializer;\n import org.syncope.types.ConnConfProperty;\n@@ -77,28 +76,13 @@ public class ExternalResource extends AbstractBaseBean {\n     @NotNull\n     private ConnInstance connector;\n \n-    /**\n-     * Users associated to this resource.\n-     */\n-    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"resources\")\n-    private Set<SyncopeUser> users;\n-\n-    /**\n-     * Roles associated to this resource.\n-     */\n-    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"resources\")\n-    private Set<SyncopeRole> roles;\n-\n     /**\n      * Attribute mappings.\n-     * \n-     * List type cannot be used. Please, take a look at \n-     * https://hibernate.onjira.com/browse/HHH-1718\n      */\n-    @OneToMany(cascade = {CascadeType.ALL}, orphanRemoval = true,\n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true,\n     fetch = FetchType.EAGER, mappedBy = \"resource\")\n     @Valid\n-    private Set<SchemaMapping> mappings;\n+    private List<SchemaMapping> mappings;\n \n     /**\n      * A JEXL expression for determining how to link user account id in Syncope\n@@ -169,9 +153,7 @@ public ExternalResource() {\n         super();\n \n         forceMandatoryConstraint = getBooleanAsInteger(false);\n-        users = new HashSet<SyncopeUser>();\n-        roles = new HashSet<SyncopeRole>();\n-        mappings = new HashSet<SchemaMapping>();\n+        mappings = new ArrayList<SchemaMapping>();\n         propagationPrimary = 0;\n         propagationPriority = 0;\n         propagationMode = PropagationMode.TWO_PHASES;\n@@ -225,14 +207,14 @@ public void setPropagationMode(PropagationMode propagationMode) {\n         this.propagationMode = propagationMode;\n     }\n \n-    public Set<SchemaMapping> getMappings() {\n+    public List<SchemaMapping> getMappings() {\n         return mappings;\n     }\n \n-    public Set<SchemaMapping> getMappings(final String intAttrName,\n+    public List<SchemaMapping> getMappings(final String intAttrName,\n             final IntMappingType intMappingType) {\n \n-        Set<SchemaMapping> result = new HashSet<SchemaMapping>();\n+        List<SchemaMapping> result = new ArrayList<SchemaMapping>();\n         for (SchemaMapping mapping : mappings) {\n             if (intAttrName.equals(mapping.getIntAttrName())\n                     && mapping.getIntMappingType() == intMappingType) {\n@@ -260,11 +242,11 @@ public boolean removeMapping(SchemaMapping mapping) {\n         return mappings.remove(mapping);\n     }\n \n-    public boolean addMapping(SchemaMapping mapping) {\n+    public boolean addMapping(final SchemaMapping mapping) {\n         return mappings.contains(mapping) || mappings.add(mapping);\n     }\n \n-    public void setMappings(Set<SchemaMapping> mappings) {\n+    public void setMappings(final Set<SchemaMapping> mappings) {\n         for (SchemaMapping mapping : this.mappings) {\n             mapping.setResource(null);\n         }\n@@ -291,44 +273,6 @@ public void setName(String name) {\n         this.name = name;\n     }\n \n-    public boolean addRole(SyncopeRole role) {\n-        return roles.add(role);\n-    }\n-\n-    public boolean removeRole(SyncopeRole role) {\n-        return roles.remove(role);\n-    }\n-\n-    public Set<SyncopeRole> getRoles() {\n-        return roles;\n-    }\n-\n-    public void setRoles(Set<SyncopeRole> roles) {\n-        this.roles.clear();\n-        if (roles != null && !roles.isEmpty()) {\n-            this.roles.addAll(roles);\n-        }\n-    }\n-\n-    public boolean addUser(SyncopeUser user) {\n-        return users.add(user);\n-    }\n-\n-    public boolean removeUser(SyncopeUser user) {\n-        return users.remove(user);\n-    }\n-\n-    public Set<SyncopeUser> getUsers() {\n-        return users;\n-    }\n-\n-    public void setUsers(Set<SyncopeUser> users) {\n-        this.users.clear();\n-        if (users != null && !users.isEmpty()) {\n-            this.users.addAll(users);\n-        }\n-    }\n-\n     public TraceLevel getCreateTraceLevel() {\n         return createTraceLevel;\n     }"},{"sha":"271e8622728e66aed04f00fdf4c488919dbae3a7","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -79,8 +79,8 @@ public Long getId() {\n     }\n \n     @Override\n-    protected Set<ExternalResource> resources() {\n-        return Collections.EMPTY_SET;\n+    protected List<ExternalResource> resources() {\n+        return Collections.EMPTY_LIST;\n     }\n \n     public SyncopeRole getSyncopeRole() {\n@@ -185,8 +185,8 @@ public boolean removeResource(final ExternalResource resource) {\n     }\n \n     @Override\n-    public Set<ExternalResource> getResources() {\n-        return Collections.EMPTY_SET;\n+    public List<ExternalResource> getResources() {\n+        return Collections.EMPTY_LIST;\n     }\n \n     @Override\n@@ -195,7 +195,7 @@ public Set<String> getResourceNames() {\n     }\n \n     @Override\n-    public void setResources(final Set<ExternalResource> resources) {\n+    public void setResources(final List<ExternalResource> resources) {\n     }\n \n     @Override"},{"sha":"702b6fc5db1c56c36005a645067f60bb356f88c0","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":27,"deletions":16,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -17,10 +17,8 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n@@ -38,8 +36,8 @@\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n-import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractAttr;\n+import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractDerAttr;\n import org.syncope.core.persistence.beans.AbstractDerSchema;\n import org.syncope.core.persistence.beans.AbstractSchema;\n@@ -70,8 +68,12 @@ public class SyncopeRole extends AbstractAttributable {\n     @ManyToOne(optional = true)\n     private SyncopeRole parent;\n \n-    @ManyToMany(fetch = FetchType.LAZY)\n-    private Set<Entitlement> entitlements;\n+    @ManyToMany(fetch = FetchType.EAGER)\n+    @JoinTable(joinColumns =\n+    @JoinColumn(name = \"role_id\"),\n+    inverseJoinColumns =\n+    @JoinColumn(name = \"entitlement_name\"))\n+    private List<Entitlement> entitlements;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n@@ -125,12 +127,12 @@ public class SyncopeRole extends AbstractAttributable {\n     inverseJoinColumns =\n     @JoinColumn(name = \"resource_name\"))\n     @Valid\n-    private Set<ExternalResource> resources;\n+    private List<ExternalResource> resources;\n \n     public SyncopeRole() {\n         super();\n \n-        entitlements = new HashSet<Entitlement>();\n+        entitlements = new ArrayList<Entitlement>();\n         attributes = new ArrayList<RAttr>();\n         derivedAttributes = new ArrayList<RDerAttr>();\n         virtualAttributes = new ArrayList<RVirAttr>();\n@@ -139,7 +141,7 @@ public SyncopeRole() {\n         inheritVirtualAttributes = getBooleanAsInteger(false);\n         inheritPasswordPolicy = getBooleanAsInteger(false);\n         inheritAccountPolicy = getBooleanAsInteger(false);\n-        resources = new HashSet<ExternalResource>();\n+        resources = new ArrayList<ExternalResource>();\n     }\n \n     @Override\n@@ -148,7 +150,7 @@ public Long getId() {\n     }\n \n     @Override\n-    protected Set<ExternalResource> resources() {\n+    protected List<ExternalResource> resources() {\n         return resources;\n     }\n \n@@ -168,20 +170,24 @@ public void setParent(SyncopeRole parent) {\n         this.parent = parent;\n     }\n \n-    public boolean addEntitlement(Entitlement entitlement) {\n-        return entitlements.add(entitlement);\n+    public boolean addEntitlement(final Entitlement entitlement) {\n+        return entitlements.contains(entitlement)\n+                || entitlements.add(entitlement);\n     }\n \n-    public boolean removeEntitlement(Entitlement entitlement) {\n+    public boolean removeEntitlement(final Entitlement entitlement) {\n         return entitlements.remove(entitlement);\n     }\n \n-    public Set<Entitlement> getEntitlements() {\n+    public List<Entitlement> getEntitlements() {\n         return entitlements;\n     }\n \n-    public void setEntitlements(Set<Entitlement> entitlements) {\n-        this.entitlements = entitlements;\n+    public void setEntitlements(final List<Entitlement> entitlements) {\n+        this.entitlements.clear();\n+        if (entitlements != null && !entitlements.isEmpty()) {\n+            this.entitlements.addAll(entitlements);\n+        }\n     }\n \n     @Override\n@@ -267,6 +273,7 @@ public void setInheritAttributes(boolean inheritAttributes) {\n \n     /**\n      * Get all inherited attributes from the ancestors.\n+     *\n      * @return a list of inherited and only inherited attributes.\n      */\n     public List<RAttr> findInheritedAttributes() {\n@@ -306,6 +313,7 @@ public void setInheritDerivedAttributes(boolean inheritDerivedAttributes) {\n \n     /**\n      * Get all inherited derived attributes from the ancestors.\n+     *\n      * @return a list of inherited and only inherited attributes.\n      */\n     public List<RDerAttr> findInheritedDerivedAttributes() {\n@@ -349,6 +357,7 @@ public void setInheritVirtualAttributes(boolean inheritVirtualAttributes) {\n \n     /**\n      * Get all inherited virtual attributes from the ancestors.\n+     *\n      * @return a list of inherited and only inherited attributes.\n      */\n     public List<RVirAttr> findInheritedVirtualAttributes() {\n@@ -382,6 +391,7 @@ public List<RVirAttr> findInheritedVirtualAttributes() {\n \n     /**\n      * Get first valid password policy.\n+     *\n      * @return parent password policy if isInheritPasswordPolicy is 'true' and\n      * parent is not null. Return local passowrd policy otherwise.\n      */\n@@ -404,7 +414,8 @@ public void setInheritPasswordPolicy(boolean inheritPasswordPolicy) {\n \n     /**\n      * Get first valid account policy.\n-     * @return parent account policy if isInheritAccountPolicy is 'true' and \n+     *\n+     * @return parent account policy if isInheritAccountPolicy is 'true' and\n      * parent is not null. Return local account policy otherwise.\n      */\n     public AccountPolicy getAccountPolicy() {"},{"sha":"42df451b4215953d86580cf0dab77cd6f2ba3aa5","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -16,19 +16,19 @@\n \n import java.io.UnsupportedEncodingException;\n import java.security.InvalidKeyException;\n-import java.security.NoSuchAlgorithmException;\n-import javax.crypto.BadPaddingException;\n-import javax.crypto.IllegalBlockSizeException;\n-import javax.crypto.NoSuchPaddingException;\n import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n import java.util.ArrayList;\n import java.util.Calendar;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n+import javax.crypto.BadPaddingException;\n import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n import javax.crypto.spec.SecretKeySpec;\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n@@ -55,8 +55,8 @@\n import org.apache.commons.lang.ArrayUtils;\n import org.apache.commons.lang.RandomStringUtils;\n import org.springframework.security.crypto.codec.Base64;\n-import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractAttr;\n+import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractDerAttr;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n import org.syncope.core.persistence.beans.ExternalResource;\n@@ -173,7 +173,7 @@ public class SyncopeUser extends AbstractAttributable {\n     @JoinColumn(name = \"user_id\"),\n     inverseJoinColumns =\n     @JoinColumn(name = \"resource_name\"))\n-    private Set<ExternalResource> resources;\n+    private List<ExternalResource> resources;\n \n     public SyncopeUser() {\n         super();\n@@ -185,7 +185,7 @@ public SyncopeUser() {\n         passwordHistory = new ArrayList<String>();\n         failedLogins = 0;\n         suspended = getBooleanAsInteger(Boolean.FALSE);\n-        resources = new HashSet<ExternalResource>();\n+        resources = new ArrayList<ExternalResource>();\n     }\n \n     @Override\n@@ -194,7 +194,7 @@ public Long getId() {\n     }\n \n     @Override\n-    protected Set<ExternalResource> resources() {\n+    protected List<ExternalResource> resources() {\n         return resources;\n     }\n \n@@ -234,8 +234,8 @@ public void setMemberships(final List<Membership> memberships) {\n         }\n     }\n \n-    public Set<SyncopeRole> getRoles() {\n-        Set<SyncopeRole> result = new HashSet<SyncopeRole>();\n+    public List<SyncopeRole> getRoles() {\n+        List<SyncopeRole> result = new ArrayList<SyncopeRole>();\n \n         for (Membership membership : memberships) {\n             if (membership.getSyncopeRole() != null) {\n@@ -247,7 +247,7 @@ public Set<SyncopeRole> getRoles() {\n     }\n \n     public Set<Long> getRoleIds() {\n-        Set<SyncopeRole> roles = getRoles();\n+        List<SyncopeRole> roles = getRoles();\n \n         Set<Long> result = new HashSet<Long>(roles.size());\n         for (SyncopeRole role : roles) {\n@@ -258,8 +258,8 @@ public Set<Long> getRoleIds() {\n     }\n \n     @Override\n-    public Set<ExternalResource> getResources() {\n-        Set<ExternalResource> result = new HashSet<ExternalResource>();\n+    public List<ExternalResource> getResources() {\n+        List<ExternalResource> result = new ArrayList<ExternalResource>();\n         result.addAll(super.getResources());\n         for (SyncopeRole role : getRoles()) {\n             result.addAll(role.getResources());"},{"sha":"85bd340602b936f75ebdf8de04a57194b43f2694","filename":"core/src/main/java/org/syncope/core/persistence/dao/EntitlementDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementDAO.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -28,7 +28,7 @@ public interface EntitlementDAO extends DAO {\n     Entitlement save(Entitlement entitlement)\n             throws InvalidEntityException;\n \n-    Entitlement save(SyncopeRole role);\n+    Entitlement saveEntitlementRole(SyncopeRole role);\n \n     void delete(String name);\n "},{"sha":"63c94389df2193ad53fa27999ec19b866e75b586","filename":"core/src/main/java/org/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -15,6 +15,8 @@\n package org.syncope.core.persistence.dao;\n \n import java.util.List;\n+import org.syncope.core.persistence.beans.Entitlement;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n@@ -27,6 +29,10 @@ public interface RoleDAO extends DAO {\n \n     SyncopeRole find(String name, Long parent);\n \n+    List<SyncopeRole> findByEntitlement(final Entitlement entitlement);\n+\n+    List<SyncopeRole> findByResource(ExternalResource resource);\n+    \n     List<SyncopeRole> findChildren(Long roleId);\n \n     List<SyncopeRole> findAll();"},{"sha":"b74f64712ee1beec2925db6820405b34401db186","filename":"core/src/main/java/org/syncope/core/persistence/dao/UserDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -16,6 +16,7 @@\n \n import java.util.List;\n import java.util.Set;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n@@ -37,6 +38,8 @@ List<SyncopeUser> findByDerAttrValue(String schemaName, String value)\n     SyncopeUser findByAttrUniqueValue(String schemaName,\n             UAttrValue attrUniqueValue);\n \n+    List<SyncopeUser> findByResource(ExternalResource resource);\n+\n     List<SyncopeUser> findAll(Set<Long> adminRoles);\n \n     List<SyncopeUser> findAll(Set<Long> adminRoles, int page, int itemsPerPage);"},{"sha":"d749b299441f749a9d252302457bc85f9d34d854","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/EntitlementDAOImpl.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -49,9 +49,10 @@ public Entitlement save(final Entitlement entitlement) {\n     }\n \n     @Override\n-    public Entitlement save(final SyncopeRole role) {\n+    public Entitlement saveEntitlementRole(final SyncopeRole role) {\n         Entitlement roleEnt = new Entitlement();\n-        roleEnt.setName(EntitlementUtil.getEntitlementName(role.getId()));\n+        roleEnt.setName(EntitlementUtil.getEntitlementNameFromRoleId(\n+                role.getId()));\n         roleEnt.setDescription(\"Entitlement for managing role \" + role.getId());\n \n         return save(roleEnt);\n@@ -69,7 +70,11 @@ public void delete(final String name) {\n \n     @Override\n     public void delete(final Entitlement entitlement) {\n-        for (SyncopeRole role : entitlement.getRoles()) {\n+        if (entitlement == null) {\n+            return;\n+        }\n+\n+        for (SyncopeRole role : roleDAO.findByEntitlement(entitlement)) {\n             role.removeEntitlement(entitlement);\n             roleDAO.save(role);\n         }"},{"sha":"b20e9487a335a66ee8a728436f97825ac6deaf8a","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -30,7 +30,9 @@\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.ResourceDAO;\n+import org.syncope.core.persistence.dao.RoleDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n+import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.types.IntMappingType;\n \n @Repository\n@@ -40,6 +42,12 @@ public class ResourceDAOImpl extends AbstractDAOImpl\n     @Autowired\n     private TaskDAO taskDAO;\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n     @Autowired\n     private ConnInstanceLoader connInstanceLoader;\n \n@@ -153,15 +161,12 @@ public void delete(final String name) {\n         taskDAO.deleteAll(resource, PropagationTask.class);\n         taskDAO.deleteAll(resource, SyncTask.class);\n \n-        for (SyncopeUser user : resource.getUsers()) {\n+        for (SyncopeUser user : userDAO.findByResource(resource)) {\n             user.removeResource(resource);\n         }\n-        resource.getUsers().clear();\n-\n-        for (SyncopeRole role : resource.getRoles()) {\n+        for (SyncopeRole role : roleDAO.findByResource(resource)) {\n             role.removeResource(resource);\n         }\n-        resource.getRoles().clear();\n \n         if (resource.getConnector() != null\n                 && resource.getConnector().getResources() != null"},{"sha":"c978a2d077d1eab29a00d5cf6bc8bb8f46d7db26","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":24,"deletions":7,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -14,14 +14,14 @@\n  */\n package org.syncope.core.persistence.dao.impl;\n \n-import java.util.Collections;\n import java.util.List;\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.syncope.core.persistence.beans.Entitlement;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.EntitlementDAO;\n@@ -78,6 +78,26 @@ public SyncopeRole find(final String name, final Long parentId) {\n         return result.isEmpty() ? null : result.get(0);\n     }\n \n+    @Override\n+    public List<SyncopeRole> findByEntitlement(final Entitlement entitlement) {\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e \"\n+                + \"WHERE :entitlement MEMBER OF e.entitlements\");\n+        query.setParameter(\"entitlement\", entitlement);\n+\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public List<SyncopeRole> findByResource(final ExternalResource resource) {\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e \"\n+                + \"WHERE :resource MEMBER OF e.resources\");\n+        query.setParameter(\"resource\", resource);\n+\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public List<SyncopeRole> findChildren(final Long roleId) {\n         Query query = entityManager.createQuery(\n@@ -116,7 +136,7 @@ public SyncopeRole save(final SyncopeRole role) {\n         }\n \n         final SyncopeRole savedRole = entityManager.merge(role);\n-        entitlementDAO.save(savedRole);\n+        entitlementDAO.saveEntitlementRole(savedRole);\n \n         return savedRole;\n     }\n@@ -144,14 +164,11 @@ public void delete(final Long id) {\n             entityManager.remove(membership);\n         }\n \n-        for (Entitlement entitlement : role.getEntitlements()) {\n-            entitlement.removeRole(role);\n-        }\n-        role.setEntitlements(Collections.EMPTY_SET);\n+        role.getEntitlements().clear();\n \n         role.setParent(null);\n         entityManager.remove(role);\n \n-        entitlementDAO.delete(EntitlementUtil.getEntitlementName(id));\n+        entitlementDAO.delete(EntitlementUtil.getEntitlementNameFromRoleId(id));\n     }\n }"},{"sha":"9773117d6ab9a392b454cfe77c4c0708026d133c","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -34,6 +34,7 @@\n import org.springframework.util.StringUtils;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -242,6 +243,16 @@ public SyncopeUser findByAttrUniqueValue(final String schemaName,\n         return result.isEmpty() ? null : result.iterator().next();\n     }\n \n+    @Override\n+    public List<SyncopeUser> findByResource(final ExternalResource resource) {\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n+                + \"WHERE :resource MEMBER OF e.resources\");\n+        query.setParameter(\"resource\", resource);\n+\n+        return query.getResultList();\n+    }\n+\n     private StringBuilder getFindAllQuery(final Set<Long> adminRoles) {\n         final StringBuilder queryString = new StringBuilder(\n                 \"SELECT id FROM SyncopeUser WHERE id NOT IN (\");"},{"sha":"4250a025428690657c244701f43699fe8c7975f6","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":3,"deletions":16,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -46,7 +46,6 @@\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.ExternalResource;\n-import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.RoleDAO;\n@@ -301,21 +300,9 @@ public List<SchemaMappingTO> getRoleResourcesMapping(\n \n         List<SchemaMappingTO> roleMappings = new ArrayList<SchemaMappingTO>();\n \n-        Set<ExternalResource> resources = role.getResources();\n-\n-        List<SchemaMappingTO> resourceMappings;\n-        for (ExternalResource resource : resources) {\n-            LOG.debug(\"Ask for the mappings of {}\", resource);\n-\n-            Set<SchemaMapping> schemaMappings = resource.getMappings();\n-            LOG.debug(\"The mappings of {} are {}\",\n-                    resource, schemaMappings);\n-\n-            resourceMappings = binder.getSchemaMappingTOs(schemaMappings);\n-            LOG.debug(\"The mappings TO of {} are {}\",\n-                    resource, resourceMappings);\n-\n-            roleMappings.addAll(resourceMappings);\n+        for (ExternalResource resource : role.getResources()) {\n+            roleMappings.addAll(\n+                    binder.getSchemaMappingTOs(resource.getMappings()));\n         }\n \n         LOG.debug(\"Mappings found: {} \", roleMappings);"},{"sha":"41bd5fb931ad4afbe6e4719769311eff41761e8a","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -222,16 +222,13 @@ private boolean evaluateMandatoryCondition(\n             final String intAttrName,\n             final AttributableUtil attributableUtil) {\n \n-        Set<SchemaMapping> mappings = resource.getMappings(intAttrName,\n-                attributableUtil.intMappingType());\n-\n         boolean result = false;\n \n-        SchemaMapping mapping;\n-        for (Iterator<SchemaMapping> itor = mappings.iterator();\n+        for (Iterator<SchemaMapping> itor = resource.getMappings(intAttrName,\n+                attributableUtil.intMappingType()).iterator();\n                 itor.hasNext() && !result;) {\n \n-            mapping = itor.next();\n+            SchemaMapping mapping = itor.next();\n             result |= evaluateMandatoryCondition(\n                     mapping.getMandatoryCondition(),\n                     attributes);\n@@ -241,7 +238,7 @@ private boolean evaluateMandatoryCondition(\n     }\n \n     private boolean evaluateMandatoryCondition(\n-            final Set<ExternalResource> resources,\n+            final List<ExternalResource> resources,\n             final List<? extends AbstractAttr> attributes,\n             final String intAttrName,\n             final AttributableUtil attributableUtil) {"},{"sha":"6d31e28ba2d60e5294f8a297139c4524ad6a27e1","filename":"core/src/main/java/org/syncope/core/security/SyncopeUserDetailsService.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -74,12 +74,8 @@ public UserDetails loadUserByUsername(final String username)\n \n             // Give entitlements based on roles owned by user,\n             // considering role inheritance as well\n-            Set<SyncopeRole> roles = user.getRoles();\n-            Set<Long> roleIds = new HashSet<Long>(roles.size());\n-            for (SyncopeRole role : roles) {\n-                roleIds.add(role.getId());\n-            }\n-            for (Long roleId : roleIds) {\n+            Set<SyncopeRole> roles = new HashSet<SyncopeRole>(user.getRoles());\n+            for (Long roleId : user.getRoleIds()) {\n                 roles.addAll(roleDAO.findChildren(roleId));\n             }\n             for (SyncopeRole role : roles) {"},{"sha":"2e8cad80884d5f15279c46e5d442e34d4794bfa9","filename":"core/src/main/java/org/syncope/core/util/EntitlementUtil.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -48,7 +48,7 @@ public static Set<String> getOwnedEntitlementNames() {\n         return result;\n     }\n \n-    public static String getEntitlementName(final Long roleId) {\n+    public static String getEntitlementNameFromRoleId(final Long roleId) {\n         return \"ROLE_\" + roleId;\n     }\n "},{"sha":"f597017bad9bb23b26583dd2634bd5428819b050","filename":"core/src/main/resources/META-INF/persistence.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpersistence.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpersistence.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpersistence.xml?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -19,5 +19,9 @@\n              version=\"2.0\">\n     <persistence-unit name=\"syncopePersistenceUnit\">\n         <validation-mode>NONE</validation-mode>\n+        \n+        <properties>\n+            <property name=\"eclipselink.weaving\" value=\"false\"/>\n+        </properties>\n     </persistence-unit>\n </persistence>"},{"sha":"5ae2269630633c4075af84bff9fd745617ca0f2d","filename":"core/src/main/resources/indexes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -47,8 +47,8 @@\n     <entry key=\"SyncopeRole_Index_31\">CREATE INDEX SyncopeRole_Index_31 ON SyncopeRole(accountPolicy_id)</entry>\n     <entry key=\"SyncopeRole_Index_32\">CREATE INDEX SyncopeRole_Index_32 ON SyncopeRole(passwordPolicy_id)</entry>\n     <entry key=\"SyncopeRole_Index_33\">CREATE INDEX SyncopeRole_Index_33 ON SyncopeRole(parent_id)</entry>\n-    <entry key=\"SyncopeRole_Entitlement_Index_34\">CREATE INDEX SyncopeRole_Ent_Index_34 ON SyncopeRole_Entitlement(entitlements_name)</entry>\n-    <entry key=\"SyncopeRole_Entitlement_Index_35\">CREATE INDEX SyncopeRole_Ent_Index_35 ON SyncopeRole_Entitlement(roles_id)</entry>\n+    <entry key=\"SyncopeRole_Entitlement_Index_34\">CREATE INDEX SyncopeRole_Ent_Index_34 ON SyncopeRole_Entitlement(entitlement_name)</entry>\n+    <entry key=\"SyncopeRole_Entitlement_Index_35\">CREATE INDEX SyncopeRole_Ent_Index_35 ON SyncopeRole_Entitlement(role_id)</entry>\n     <entry key=\"SyncopeRole_ExternalResource_Index_36\">CREATE INDEX SyncopeRole_Ext_Index_36 ON SyncopeRole_ExternalResource(resource_name)</entry>\n     <entry key=\"SyncopeRole_ExternalResource_Index_37\">CREATE INDEX SyncopeRole_Ext_Index_37 ON SyncopeRole_ExternalResource(role_id)</entry>\n     <entry key=\"SyncopeUser_ExternalResource_Index_38\">CREATE INDEX SyncopeUser_Ext_Index_38 ON SyncopeUser_ExternalResource(resource_name)</entry>"},{"sha":"67561bcd12aceb275a653db9558343aed3e923c3","filename":"core/src/main/webapp/WEB-INF/glassfish-web.xml","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE glassfish-web-app PUBLIC \"-//GlassFish.org//DTD \n+GlassFish Application Server 3.1 Servlet 3.0//EN\" \"http://glassfish.org/dtds/glassfish-web-app_3_0-1.dtd\">\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<glassfish-web-app>\n+    <context-root>/syncope</context-root>\n+    <resource-ref>\n+        <res-ref-name>jdbc/syncopeDataSource</res-ref-name>\n+        <jndi-name>jdbc/syncopeDataSource</jndi-name>\n+    </resource-ref>\n+    <class-loader delegate=\"false\"/>\n+    <jsp-config>\n+        <property name=\"httpMethods\" value=\"GET,POST,HEAD,PUT,DELETE\"/>\n+    </jsp-config>\n+</glassfish-web-app>\n\\ No newline at end of file"},{"sha":"b08f88929a9272c16ba5192b70c5c9896edf3f7c","filename":"core/src/test/java/org/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -17,7 +17,6 @@\n import static org.junit.Assert.*;\n \n import java.util.List;\n-import java.util.Set;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n@@ -31,6 +30,9 @@ public class EntitlementTest extends AbstractTest {\n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n     @Test\n     public void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n@@ -64,12 +66,12 @@ public void delete() {\n         assertNotNull(\"did not find expected entitlement\",\n                 entitlement);\n \n-        Set<SyncopeRole> roles = entitlement.getRoles();\n+        List<SyncopeRole> roles = roleDAO.findByEntitlement(entitlement);\n         assertEquals(\"expected two roles\", 2, roles.size());\n \n         entitlementDAO.delete(\"base\");\n-        for (SyncopeRole role : roles) {\n-            assertFalse(role.getEntitlements().contains(entitlement));\n-        }\n+\n+        roles = roleDAO.findByEntitlement(entitlement);\n+        assertTrue(roles.isEmpty());\n     }\n }"},{"sha":"ab6b98d041303bbac7cdd42218ab38d0a756c61e","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -17,7 +17,6 @@\n import static org.junit.Assert.*;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Set;\n import org.connid.bundles.soap.WebServiceConnector;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -56,18 +55,14 @@ public void findById() {\n         assertEquals(\"invalid bundle version\",\n                 connidSoapVersion, connector.getVersion());\n \n-        Set<SchemaMapping> mappings = resource.getMappings();\n-\n+        List<SchemaMapping> mappings = resource.getMappings();\n         assertNotNull(\"mappings not found\", mappings);\n-\n         assertFalse(\"no mapping specified\", mappings.isEmpty());\n \n         List<Long> mappingIds = new ArrayList<Long>();\n-\n         for (SchemaMapping mapping : mappings) {\n             mappingIds.add(mapping.getId());\n         }\n-\n         assertTrue(mappingIds.contains(100L));\n     }\n "},{"sha":"1dc9b453187dc8a910d97c1e25e2e5e52c536ccd","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -203,7 +203,6 @@ public void save() {\n         SyncopeUser user = userDAO.find(1L);\n         assertNotNull(\"user not found\", user);\n \n-        actual.addUser(user);\n         user.addResource(actual);\n \n         resourceDAO.flush();\n@@ -223,7 +222,7 @@ public void save() {\n         assertTrue(resource.getConnector().equals(connector));\n \n         // check mappings\n-        Set<SchemaMapping> schemaMappings = resource.getMappings();\n+        List<SchemaMapping> schemaMappings = resource.getMappings();\n         assertNotNull(schemaMappings);\n         assertEquals(5, schemaMappings.size());\n \n@@ -251,7 +250,7 @@ public void delete() {\n         // -------------------------------------\n         // Get originally associated users\n         // -------------------------------------\n-        Set<SyncopeUser> users = resource.getUsers();\n+        List<SyncopeUser> users = userDAO.findByResource(resource);\n         assertNotNull(users);\n \n         Set<Long> userIds = new HashSet<Long>();"},{"sha":"2ce05de50d58acd8a7222d99bcbda782d22344ab","filename":"core/src/test/java/org/syncope/core/persistence/relationships/RoleTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FRoleTest.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -85,7 +85,8 @@ public void delete() {\n         roleDAO.flush();\n \n         assertNull(roleDAO.find(2L));\n-        assertEquals(1, entitlementDAO.find(\"base\").getRoles().size());\n+        assertEquals(1, roleDAO.findByEntitlement(\n+                entitlementDAO.find(\"base\")).size());\n         assertEquals(userDAO.find(2L).getRoles().size(), 2);\n         assertNull(attrDAO.find(700L, RAttr.class));\n         assertNull(attrValueDAO.find(41L, RAttrValue.class));"},{"sha":"b071cea46367f2b7d1d8ebd7d268742c81c7e569","filename":"core/src/test/java/org/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -14,11 +14,11 @@\n  */\n package org.syncope.core.rest;\n \n+import static org.junit.Assert.*;\n+\n import java.io.UnsupportedEncodingException;\n import java.util.Arrays;\n import java.util.List;\n-import static org.junit.Assert.*;\n-\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpStatusCodeException;\n@@ -41,11 +41,12 @@ public void create() {\n     @Test\n     public void delete()\n             throws UnsupportedEncodingException {\n+\n         try {\n             restTemplate.delete(BASE_URL + \"configuration/delete/{key}.json\",\n                     \"nonExistent\");\n         } catch (HttpStatusCodeException e) {\n-            assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n+            assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n \n         ConfigurationTO tokenLengthTO = restTemplate.getForObject("},{"sha":"a11457107c97edbb8ac617127cfbc291f1fafe97","filename":"core/src/test/java/org/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -247,7 +247,7 @@ public void deleteWithException() {\n             restTemplate.delete(\n                     BASE_URL + \"connector/delete/{connectorId}.json\", \"0\");\n         } catch (HttpStatusCodeException e) {\n-            assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n+            assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n     }\n "},{"sha":"4f2b1bf002aa04052124bdcfa54e9145c35cc866","filename":"core/src/test/java/org/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -111,15 +111,15 @@ public void delete() {\n         try {\n             restTemplate.delete(BASE_URL + \"role/delete/{roleId}\", 0);\n         } catch (HttpStatusCodeException e) {\n-            assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n+            assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n \n         restTemplate.delete(BASE_URL + \"role/delete/{roleId}\", 5);\n         try {\n             restTemplate.getForObject(BASE_URL + \"role/read/{roleId}.json\",\n                     RoleTO.class, 2);\n         } catch (HttpStatusCodeException e) {\n-            assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n+            assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n     }\n \n@@ -180,10 +180,10 @@ public void update() {\n         assertEquals(1, roleTO.getAttributes().size());\n \n         assertNotNull(roleTO.getAccountPolicy());\n-        assertEquals(6L, (long) roleTO.getAccountPolicy());\n+        assertEquals(Long.valueOf(6), roleTO.getAccountPolicy());\n \n         assertNotNull(roleTO.getPasswordPolicy());\n-        assertEquals(4L, (long) roleTO.getPasswordPolicy());\n+        assertEquals(Long.valueOf(4), roleTO.getPasswordPolicy());\n \n         AttributeMod attributeMod = new AttributeMod();\n         attributeMod.setSchema(\"show\");"},{"sha":"10a7d5b61fa7907a4837ee9947512d8ec8d2db11","filename":"core/src/test/resources/content.xml","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -536,22 +536,22 @@\n     <Entitlement name=\"ROLE_8\"/>\n     <Entitlement name=\"ROLE_9\"/>\n \n-    <SyncopeRole_Entitlement entitlements_name=\"base\" roles_id=\"1\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"advanced\" roles_id=\"1\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"base\" roles_id=\"2\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"USER_READ\" roles_id=\"2\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"USER_LIST\" roles_id=\"2\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"USER_READ\" roles_id=\"7\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"USER_LIST\" roles_id=\"7\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"ROLE_8\" roles_id=\"7\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"ROLE_9\" roles_id=\"7\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"ROLE_7\" roles_id=\"7\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"ROLE_1\" roles_id=\"7\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"WORKFLOW_FORM_CLAIM\" roles_id=\"7\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"WORKFLOW_FORM_SUBMIT\" roles_id=\"7\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"SCHEMA_READ\" roles_id=\"8\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"ROLE_READ\" roles_id=\"8\"/>\n-    <SyncopeRole_Entitlement entitlements_name=\"WORKFLOW_FORM_CLAIM\" roles_id=\"8\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"base\" role_id=\"1\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"advanced\" role_id=\"1\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"base\" role_id=\"2\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"USER_READ\" role_id=\"2\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"USER_LIST\" role_id=\"2\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"USER_READ\" role_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"USER_LIST\" role_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"ROLE_8\" role_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"ROLE_9\" role_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"ROLE_7\" role_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"ROLE_1\" role_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"WORKFLOW_FORM_CLAIM\" role_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"WORKFLOW_FORM_SUBMIT\" role_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"SCHEMA_READ\" role_id=\"8\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"ROLE_READ\" role_id=\"8\"/>\n+    <SyncopeRole_Entitlement entitlement_name=\"WORKFLOW_FORM_CLAIM\" role_id=\"8\"/>\n     \n     <Notification id=\"100\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n                   xmlAbout=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\""},{"sha":"de909ef1e32b1c594f5a4e55ca9ac8c5627eb8f5","filename":"parent/pom.xml","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e592a9c4812b90079bbab932c77e7c8d0f9006b0/parent%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e592a9c4812b90079bbab932c77e7c8d0f9006b0/parent%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/parent%2Fpom.xml?ref=e592a9c4812b90079bbab932c77e7c8d0f9006b0","patch":"@@ -147,16 +147,16 @@\n \n         <spring.version>3.1.0.RELEASE</spring.version>\n         <aspectj.version>1.6.12</aspectj.version>\n-        <jackson.version>1.9.3</jackson.version>\n+        <jackson.version>1.9.4</jackson.version>\n         <xstream.version>1.4.2</xstream.version>\n         <velocity.version>1.7</velocity.version>\n-        <quartz.version>1.8.5</quartz.version>\n+        <quartz.version>1.8.6</quartz.version>\n \n         <openjpa.version>2.2.0-SNAPSHOT</openjpa.version>\n \n         <wicket.version>1.5.4</wicket.version>\n \n-        <groovy.version>1.8.4</groovy.version>\n+        <groovy.version>1.8.5</groovy.version>\n \n         <h2.version>1.3.163</h2.version>\n \n@@ -171,6 +171,7 @@\n         <apacheds.version>1.5.7</apacheds.version>\n \n         <tomcat.version>7.0.25</tomcat.version>\n+        <glassfish.version>3.1.1</glassfish.version>\n  \n         <bundles.directory>${project.build.directory}/bundles</bundles.directory>\n         <log.directory>${project.build.directory}/log</log.directory>\n@@ -725,7 +726,7 @@\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-dependency-plugin</artifactId>\n-                    <version>2.3</version>\n+                    <version>2.4</version>\n                     <configuration>\n                         <artifactItems>\n                             <artifactItem>\n@@ -780,7 +781,7 @@\n                 <plugin>\n                     <groupId>org.zeroturnaround</groupId>\n                     <artifactId>jrebel-maven-plugin</artifactId>\n-                    <version>1.1.2</version>\n+                    <version>1.1.3</version>\n                 </plugin>\n             </plugins>\n         </pluginManagement>"}]}