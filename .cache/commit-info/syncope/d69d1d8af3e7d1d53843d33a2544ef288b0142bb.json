{"sha":"d69d1d8af3e7d1d53843d33a2544ef288b0142bb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ2OWQxZDhhZjNlN2QxZDUzODQzZDMzYTI1NDRlZjI4OGIwMTQyYmI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-02-01T16:50:02Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-02-01T16:50:02Z"},"message":"[SYNCOPE-743] providing wizard for tasks management + removed all transparent containers","tree":{"sha":"409af9e5692214de56b18da1a5c6d28378a10447","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/409af9e5692214de56b18da1a5c6d28378a10447"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d69d1d8af3e7d1d53843d33a2544ef288b0142bb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d69d1d8af3e7d1d53843d33a2544ef288b0142bb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d69d1d8af3e7d1d53843d33a2544ef288b0142bb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"0268a3587aa419ad3380347cb19162da347ccfcd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0268a3587aa419ad3380347cb19162da347ccfcd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0268a3587aa419ad3380347cb19162da347ccfcd"}],"stats":{"total":1213,"additions":577,"deletions":636},"files":[{"sha":"0ca02414b6485402b7ff959f55a8985376b85333","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -56,7 +56,7 @@\n      */\n     protected PreferenceManager prefMan = new PreferenceManager();\n \n-    protected final E restClient;\n+    protected E restClient;\n \n     /**\n      * Number of rows per page.\n@@ -112,6 +112,7 @@ protected WizardMgtPanel<W> newInstance(final String id) {\n                 throw new UnsupportedOperationException(\"Not supported yet.\");\n             }\n         }.setFiltered(false), wizardInModal);\n+        setPageRef(pageRef);\n     }\n \n     protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> builder) {\n@@ -120,7 +121,6 @@ protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> buil\n \n     protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> builder, final boolean wizardInModal) {\n         super(id, wizardInModal);\n-\n         setOutputMarkupId(true);\n \n         this.page = (BasePage) builder.getPageRef().getPage();\n@@ -133,7 +133,7 @@ protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> buil\n         // Container for user search result\n         container = new WebMarkupContainer(\"searchContainer\");\n         container.setOutputMarkupId(true);\n-        add(container);\n+        addInnerObject(container);\n \n         rows = prefMan.getPaginatorRows(getRequest(), paginatorRowsKey());\n \n@@ -330,7 +330,7 @@ public Builder<T, W, E> setFiql(final String fiql) {\n         }\n \n         private PageReference getPageRef() {\n-            return pageRef;\n+            return this.pageRef;\n         }\n     }\n }"},{"sha":"95cacd9f790676348d886f08998d5ba61a7be628","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -31,7 +31,7 @@\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.common.rest.api.service.ConfigurationService;\n-import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n@@ -73,7 +73,7 @@ public AnyTypeClassDetailsPanel(final String id, final AnyTypeClassTO anyTypeCla\n         key.setEnabled(anyTypeClassTO.getKey() == null || this.anyTypeClassTO.getKey().isEmpty());\n         antTypeClassForm.add(key);\n \n-        final TransparentWebMarkupContainer container = new TransparentWebMarkupContainer(\"container\");\n+        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         antTypeClassForm.add(container);\n "},{"sha":"f75e71b002c485e4d718ba334197b22597bee962","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -104,7 +104,7 @@ private ListViewPanel(\n \n         this.check = Model.of(check);\n \n-        add(new Label(\"caption\", new ResourceModel(\"listview.caption\", StringUtils.EMPTY)));\n+        addInnerObject(new Label(\"caption\", new ResourceModel(\"listview.caption\", StringUtils.EMPTY)));\n \n         final CheckGroup<T> checkGroup = new CheckGroup<>(\"group\", model);\n         checkGroup.setOutputMarkupId(true);\n@@ -117,10 +117,10 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 // ignore\n             }\n         });\n-        add(checkGroup);\n+        addInnerObject(checkGroup);\n \n         groupSelector = new CheckGroupSelector(\"groupselector\", checkGroup);\n-        add(groupSelector.setOutputMarkupId(true)\n+        addInnerObject(groupSelector.setOutputMarkupId(true)\n                 .setOutputMarkupPlaceholderTag(true)\n                 .setVisible(this.check.getObject() == CheckAvailability.AVAILABLE));\n \n@@ -149,7 +149,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         }\n \n-        add(header(toBeIncluded));\n+        addInnerObject(header(toBeIncluded));\n \n         final ListView<T> beans = new ListView<T>(\"beans\", listOfItems) {\n "},{"sha":"428e39e0f7ec9f0fffe7de86db2d2e0dd6dfbb29","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/MultilevelPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -22,7 +22,6 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.markup.html.IHeaderContributor;\n-import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -52,7 +51,7 @@ public class MultilevelPanel extends Panel implements IHeaderContributor {\n     public MultilevelPanel(final String id) {\n         super(id);\n \n-        firstLevelContainer = new TransparentWebMarkupContainer(\"firstLevelContainer\");\n+        firstLevelContainer = new WebMarkupContainer(\"firstLevelContainer\");\n         firstLevelContainer.setOutputMarkupPlaceholderTag(true);\n         firstLevelContainer.setVisible(true);\n         add(firstLevelContainer);"},{"sha":"f267691bc6fcaa67acd23080cd0d298338b47b16","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -96,7 +96,7 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n \n-        add(modalDetails);\n+        addInnerObject(modalDetails);\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AttrTO>(\n                 BaseModal.CONTENT_ID, new AttrTO(), pageRef) {"},{"sha":"dac1e7d919aac3e1eea73592bbc25f2400980715","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskDetails.java","status":"removed","additions":0,"deletions":78,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails.java?ref=0268a3587aa419ad3380347cb19162da347ccfcd","patch":"@@ -1,78 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.tasks;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.lib.to.PropagationTaskTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-\n-/**\n- * Modal window with Task form (to stop and start execution).\n- */\n-public class PropagationTaskDetails extends TaskDetails<PropagationTaskTO> {\n-\n-    private static final long serialVersionUID = -4110576026663173545L;\n-\n-    public PropagationTaskDetails(final PropagationTaskTO taskTO, final PageReference pageRef) {\n-        super(taskTO, pageRef);\n-    }\n-\n-    @Override\n-    protected List<ITab> buildTabList(final PropagationTaskTO taskTO, final PageReference pageRef) {\n-        final List<ITab> res = new ArrayList<>();\n-        res.add(new AbstractTab(new Model<>(\"profile\")) {\n-\n-            private static final long serialVersionUID = -5861786415855103559L;\n-\n-            @Override\n-            public WebMarkupContainer getPanel(final String panelId) {\n-                return new Profile(panelId, taskTO);\n-            }\n-        });\n-        return res;\n-    }\n-\n-    public class Profile extends Panel {\n-\n-        private static final long serialVersionUID = -1518744792346267268L;\n-\n-        public Profile(final String id, final PropagationTaskTO taskTO) {\n-            super(id);\n-            add(new AjaxTextFieldPanel(\n-                    \"key\", getString(\"key\"), new PropertyModel<String>(taskTO, \"key\")).\n-                    setEnabled(false));\n-\n-            add(new AjaxTextFieldPanel(\n-                    \"anyKey\", getString(\"anyKey\"), new PropertyModel<String>(taskTO, \"anyKey\")).\n-                    setEnabled(false));\n-\n-            add(new AjaxTextFieldPanel(\n-                    \"resource\", getString(\"resource\"), new PropertyModel<String>(taskTO, \"resource\")).\n-                    setEnabled(false));\n-        }\n-    }\n-}"},{"sha":"a884f70f6400c060abea4c8fc25a5d23b5fd48a2","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskSearchResultPanel.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -55,7 +55,7 @@ public abstract class PropagationTaskSearchResultPanel extends TaskSearchResultP\n \n     private final String resource;\n \n-    protected PropagationTaskSearchResultPanel(final String id, final PageReference pageRef, final String resource) {\n+    protected PropagationTaskSearchResultPanel(final String id, final String resource, final PageReference pageRef) {\n         super(id, pageRef);\n         this.resource = resource;\n         initResultTable();\n@@ -113,15 +113,15 @@ public ActionLinksPanel<PropagationTaskTO> getActions(\n                             public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n                                 viewTask(taskTO, target);\n                             }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.TASK_READ).\n+                        }, ActionLink.ActionType.SEARCH, StandardEntitlement.TASK_READ).\n                         add(new ActionLink<PropagationTaskTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n                             public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n                                 try {\n-                                    taskRestClient.startExecution(taskTO.getKey(), new Date());\n+                                    restClient.startExecution(taskTO.getKey(), new Date());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n@@ -138,7 +138,7 @@ public void onClick(final AjaxRequestTarget target, final PropagationTaskTO mode\n                             @Override\n                             public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n                                 try {\n-                                    taskRestClient.delete(taskTO.getKey(), PropagationTaskTO.class);\n+                                    restClient.delete(taskTO.getKey(), PropagationTaskTO.class);\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n@@ -198,15 +198,15 @@ public class PropagationTasksProvider extends TaskDataProvider<PropagationTaskTO\n         private final String resource;\n \n         public PropagationTasksProvider(final int paginatorRows, final String resource) {\n-            super(paginatorRows, TaskType.PROPAGATION, taskRestClient);\n+            super(paginatorRows, TaskType.PROPAGATION, restClient);\n             this.resource = resource;\n         }\n \n         @Override\n         public Iterator<PropagationTaskTO> iterator(final long first, final long count) {\n             final int page = ((int) first / paginatorRows);\n \n-            final List<PropagationTaskTO> tasks = taskRestClient.listPropagationTasks(\n+            final List<PropagationTaskTO> tasks = restClient.listPropagationTasks(\n                     resource, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n \n             Collections.sort(tasks, getComparator());"},{"sha":"749f0cd75d19088db90d996f7f29bbd813d4d69e","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTasks.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n+import static org.apache.syncope.client.console.panels.MultilevelPanel.FIRST_LEVEL_ID;\n+\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -35,14 +37,13 @@ public <T extends AnyTO> PropagationTasks(final PageReference pageReference, fin\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(\n-                new PropagationTaskSearchResultPanel(MultilevelPanel.FIRST_LEVEL_ID, pageReference, resource) {\n+        mlp.setFirstLevel(new PropagationTaskSearchResultPanel(FIRST_LEVEL_ID, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n             protected void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target) {\n-                mlp.next(\"task.view\", new PropagationTaskDetails(taskTO, pageReference), target);\n+                mlp.next(\"task.view\", new TaskExecutionDetails<PropagationTaskTO>(taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"2728065984a200edc3b37fde611a468d23c96b04","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskSearchResultPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -103,7 +103,7 @@ public ProvisioningTasksProvider(final Class<T> reference, final int paginatorRo\n         public Iterator<T> iterator(final long first, final long count) {\n             final int page = ((int) first / paginatorRows);\n \n-            final List<T> tasks = taskRestClient.list(\n+            final List<T> tasks = restClient.list(\n                     resource, reference, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n \n             Collections.sort(tasks, getComparator());"},{"sha":"ad67040d4da80326bcb74767af8ecc9be7b528f5","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PushTaskSearchResultPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTaskSearchResultPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -23,7 +23,7 @@\n import org.apache.wicket.PageReference;\n \n /**\n- * Tasks page.\n+ * Push Tasks page.\n  */\n public abstract class PushTaskSearchResultPanel extends ProvisioningTaskSearchResultPanel<PushTaskTO> {\n "},{"sha":"cc69bae1be87a8e7d5488144734a1d4ad0e204aa","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PushTasks.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import static org.apache.syncope.client.console.panels.MultilevelPanel.FIRST_LEVEL_ID;\n+\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.PushTaskTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+\n+public class PushTasks extends AbstractTasks {\n+\n+    private static final long serialVersionUID = -4013796607157549641L;\n+\n+    public <T extends AnyTO> PushTasks(final PageReference pageReference, final String resource) {\n+        super(BaseModal.CONTENT_ID);\n+\n+        final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n+        add(mlp);\n+\n+        mlp.setFirstLevel(new PushTaskSearchResultPanel(FIRST_LEVEL_ID, resource, pageReference) {\n+\n+            private static final long serialVersionUID = -2195387360323687302L;\n+\n+            @Override\n+            protected void viewTask(final PushTaskTO taskTO, final AjaxRequestTarget target) {\n+                mlp.next(\"task.view\", new TaskExecutionDetails<PushTaskTO>(taskTO, pageReference), target);\n+            }\n+        });\n+    }\n+}"},{"sha":"b1f6de4d9a076b1b7d59ae0e552366cd29caf05b","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDetails.java","status":"removed","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDetails.java?ref=0268a3587aa419ad3380347cb19162da347ccfcd","patch":"@@ -1,43 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.tasks;\n-\n-import org.apache.syncope.common.lib.to.SchedTaskTO;\n-import org.apache.wicket.PageReference;\n-\n-/**\n- * Modal window with Task form (to stop and start execution).\n- */\n-public class SchedTaskDetails extends AbstractSchedTaskDetails<SchedTaskTO> {\n-\n-    private static final long serialVersionUID = -2501860242590060867L;\n-\n-    public SchedTaskDetails(final SchedTaskTO taskTO, final PageReference pageRef) {\n-        super(taskTO, pageRef);\n-    }\n-\n-//    @Override\n-//    public void submitAction(final SchedTaskTO taskTO) {\n-//        if (taskTO.getId() > 0) {\n-//            taskRestClient.updateSchedTask(taskTO);\n-//        } else {\n-//            taskRestClient.createSchedTask(taskTO);\n-//        }\n-//    }\n-}"},{"sha":"db6271d2a4e6c7c1752f13f93d7cc1f1650d7381","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskSearchResultPanel.java","status":"modified","additions":50,"deletions":9,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -18,12 +18,15 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n+import static org.apache.wicket.Component.ENABLE;\n+\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n import org.apache.syncope.client.console.pages.BasePage;\n@@ -33,12 +36,15 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n@@ -64,6 +70,15 @@\n     protected SchedTaskSearchResultPanel(final String id, final Class<T> reference, final PageReference pageRef) {\n         super(id, pageRef);\n         this.reference = reference;\n+\n+        try {\n+            this.addNewItemPanelBuilder(new SchedTaskWizardBuilder<T>(reference.newInstance(), pageRef), true);\n+        } catch (InstantiationException | IllegalAccessException e) {\n+            LOG.error(\"Falure instantiating task\", e);\n+        }\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.TASK_CREATE);\n+\n         initResultTable();\n     }\n \n@@ -145,18 +160,44 @@ public ActionLinksPanel<T> getActions(\n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final T modelObject) {\n+                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                 viewTask(taskTO, target);\n                             }\n+                        }, ActionLink.ActionType.SEARCH, StandardEntitlement.TASK_READ).\n+                        add(new ActionLink<T>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                                send(SchedTaskSearchResultPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(\n+                                                restClient.readSchedTask(reference, model.getObject().getKey()),\n+                                                target));\n+                            }\n                         }, ActionLink.ActionType.EDIT, StandardEntitlement.TASK_READ).\n                         add(new ActionLink<T>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final T modelObject) {\n+                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                                final T clone = SerializationUtils.clone(model.getObject());\n+                                clone.setKey(0L);\n+                                send(SchedTaskSearchResultPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(\n+                                                restClient.readSchedTask(reference, model.getObject().getKey()),\n+                                                target));\n+                            }\n+                        }, ActionLink.ActionType.CLONE, StandardEntitlement.TASK_READ).\n+                        add(new ActionLink<T>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                 try {\n-                                    taskRestClient.startExecution(taskTO.getKey(), new Date());\n+                                    restClient.startExecution(taskTO.getKey(), new Date());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n@@ -171,9 +212,9 @@ public void onClick(final AjaxRequestTarget target, final T modelObject) {\n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final T modelObject) {\n+                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                 try {\n-                                    taskRestClient.startExecution(taskTO.getKey(), new Date(), true);\n+                                    restClient.startExecution(taskTO.getKey(), new Date(), true);\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n@@ -188,9 +229,9 @@ public void onClick(final AjaxRequestTarget target, final T modelObject) {\n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final T modelObject) {\n+                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                 try {\n-                                    taskRestClient.delete(taskTO.getKey(), reference);\n+                                    restClient.delete(taskTO.getKey(), reference);\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (SyncopeClientException e) {\n@@ -252,15 +293,15 @@ protected SchedTasksProvider<T> dataProvider() {\n         private final Class<T> reference;\n \n         public SchedTasksProvider(final Class<T> reference, final int paginatorRows) {\n-            super(paginatorRows, TaskType.SCHEDULED, taskRestClient);\n+            super(paginatorRows, TaskType.SCHEDULED, restClient);\n             this.reference = reference;\n         }\n \n         @Override\n         public Iterator<T> iterator(final long first, final long count) {\n             final int page = ((int) first / paginatorRows);\n \n-            final List<T> tasks = taskRestClient.list(\n+            final List<T> tasks = restClient.list(\n                     reference, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n \n             Collections.sort(tasks, getComparator());"},{"sha":"621a1eaa0a265eedcc42d743e3cdc12ecc9adab3","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"renamed","additions":45,"deletions":67,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -1,94 +1,65 @@\n /*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n+ * Copyright 2015 The Apache Software Foundation.\n  *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n package org.apache.syncope.client.console.tasks;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.commons.DateFormatROModel;\n import org.apache.syncope.client.console.rest.TaskRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n \n-/**\n- * Modal window with Task form (to stop and start execution).\n- *\n- * @param <T>\n- */\n-public abstract class AbstractSchedTaskDetails<T extends SchedTaskTO> extends TaskDetails<T> {\n-\n-    private static final long serialVersionUID = 2892005971093059242L;\n+public class SchedTaskWizardBuilder<T extends SchedTaskTO> extends AjaxWizardBuilder<T> {\n \n-    protected CrontabPanel crontab;\n+    private static final long serialVersionUID = 5945391813567245081L;\n \n-    public AbstractSchedTaskDetails(final T taskTO, final PageReference pageRef) {\n-        super(taskTO, pageRef);\n+    /**\n+     * Construct.\n+     *\n+     * @param taskTO task\n+     * @param pageRef Caller page reference.\n+     */\n+    public SchedTaskWizardBuilder(final T taskTO, final PageReference pageRef) {\n+        super(\"wizard\", taskTO, pageRef);\n     }\n \n     @Override\n-    protected List<ITab> buildTabList(final T taskTO, final PageReference pageRef) {\n-        final List<ITab> res = new ArrayList<>();\n-        res.add(new AbstractTab(new Model<>(\"profile\")) {\n-\n-            private static final long serialVersionUID = -5861786415855103559L;\n-\n-            @Override\n-            public WebMarkupContainer getPanel(final String panelId) {\n-                return new AbstractSchedTaskDetails.Profile(panelId, taskTO);\n-            }\n-        });\n-        res.add(new AbstractTab(new Model<>(\"schedule\")) {\n-\n-            private static final long serialVersionUID = -5861786415855103559L;\n-\n-            @Override\n-            public WebMarkupContainer getPanel(final String panelId) {\n-                return new Schedule(panelId, taskTO);\n-            }\n-        });\n-        return res;\n+    protected Serializable onApplyInternal(final SchedTaskTO modelObject) {\n+        return null;\n     }\n \n-    public class Schedule extends Panel {\n-\n-        private static final long serialVersionUID = -785981096328637758L;\n-\n-        public Schedule(final String id, final SchedTaskTO taskTO) {\n-            super(id);\n-            add(new CrontabPanel(\n-                    \"schedule\", new PropertyModel<String>(taskTO, \"cronExpression\"), taskTO.getCronExpression()));\n-        }\n-\n+    @Override\n+    protected WizardModel buildModelSteps(final SchedTaskTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new Profile(modelObject));\n+        wizardModel.add(new Schedule(modelObject));\n+        return wizardModel;\n     }\n \n-    public class Profile extends Panel {\n+    public class Profile extends WizardStep {\n \n         private static final long serialVersionUID = -3043839139187792810L;\n \n@@ -102,9 +73,7 @@ protected List<String> load() {\n             }\n         };\n \n-        public Profile(final String id, final SchedTaskTO taskTO) {\n-            super(id);\n-\n+        public Profile(final SchedTaskTO taskTO) {\n             final AjaxTextFieldPanel name\n                     = new AjaxTextFieldPanel(\"name\", \"name\", new PropertyModel<String>(taskTO, \"name\"));\n             name.setEnabled(true);\n@@ -122,7 +91,7 @@ public Profile(final String id, final SchedTaskTO taskTO) {\n \n             className.setChoices(classNames.getObject());\n             className.addRequiredLabel();\n-            className.setEnabled(taskTO.getKey() == 0);\n+            className.setEnabled(taskTO.getKey() == null || taskTO.getKey() == 0L);\n             className.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n             add(className);\n \n@@ -195,5 +164,14 @@ public Profile(final String id, final SchedTaskTO taskTO) {\n         }\n     }\n \n-//    protected abstract void submitAction(SchedTaskTO taskTO);\n+    public class Schedule extends WizardStep {\n+\n+        private static final long serialVersionUID = -785981096328637758L;\n+\n+        public Schedule(final SchedTaskTO taskTO) {\n+            add(new CrontabPanel(\n+                    \"schedule\", new PropertyModel<String>(taskTO, \"cronExpression\"), taskTO.getCronExpression()));\n+        }\n+\n+    }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails.java"},{"sha":"3146dc7a1431665e2bb3cd9762e7642aa4bfdb79","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTasks.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -42,7 +42,7 @@ public <T extends AnyTO> SchedTasks(final PageReference pageReference) {\n \n             @Override\n             protected void viewTask(final SchedTaskTO taskTO, final AjaxRequestTarget target) {\n-                mlp.next(\"task.view\", new SchedTaskDetails(taskTO, pageReference), target);\n+//                mlp.next(\"task.view\", new SchedTaskDetails(taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"5fa1802bedaa7950d5ea7ec3b9b33a4f56ba96c1","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTaskSearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTaskSearchResultPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -23,7 +23,7 @@\n import org.apache.wicket.PageReference;\n \n /**\n- * Tasks page.\n+ * Sync Tasks page.\n  */\n public abstract class SyncTaskSearchResultPanel extends ProvisioningTaskSearchResultPanel<SyncTaskTO> {\n \n@@ -35,6 +35,6 @@ protected SyncTaskSearchResultPanel(final String id, final String resource, fina\n \n     @Override\n     protected String paginatorRowsKey() {\n-        return Constants.PREF_SYNC_TASKS_PAGINATOR_ROWS;\n+        return Constants.PREF_PUSH_TASKS_PAGINATOR_ROWS;\n     }\n }"},{"sha":"4c2dbe2b2e5422072e6ea2f61497a9d0d852f72a","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTasks.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import static org.apache.syncope.client.console.panels.MultilevelPanel.FIRST_LEVEL_ID;\n+\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+\n+public class SyncTasks extends AbstractTasks {\n+\n+    private static final long serialVersionUID = -4013796607157549641L;\n+\n+    public <T extends AnyTO> SyncTasks(final PageReference pageReference, final String resource) {\n+        super(BaseModal.CONTENT_ID);\n+\n+        final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n+        add(mlp);\n+\n+        mlp.setFirstLevel(new SyncTaskSearchResultPanel(FIRST_LEVEL_ID, resource, pageReference) {\n+\n+            private static final long serialVersionUID = -2195387360323687302L;\n+\n+            @Override\n+            protected void viewTask(final SyncTaskTO taskTO, final AjaxRequestTarget target) {\n+                mlp.next(\"task.view\", new TaskExecutionDetails<SyncTaskTO>(taskTO, pageReference), target);\n+            }\n+        });\n+    }\n+}"},{"sha":"c34c15266e99c9dfea68be93d479a8125b16b6db","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskDetails.java","status":"removed","additions":0,"deletions":267,"changes":267,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.java?ref=0268a3587aa419ad3380347cb19162da347ccfcd","patch":"@@ -1,267 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.tasks;\n-\n-import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.SearchableDataProvider;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n-import org.apache.syncope.client.console.panels.MultilevelPanel;\n-import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n-import org.apache.syncope.client.console.rest.TaskRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.AbstractTaskTO;\n-import org.apache.syncope.common.lib.to.TaskExecTO;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.model.AbstractReadOnlyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n-\n-/**\n- * Modal window with Task form (to stop and start execution).\n- *\n- * @param <T> task type.\n- */\n-public abstract class TaskDetails<T extends AbstractTaskTO> extends MultilevelPanel.SecondLevel {\n-\n-    private static final long serialVersionUID = -4110576026663173545L;\n-\n-    public TaskDetails(final T taskTO, final PageReference pageReference) {\n-        super();\n-\n-        final List<ITab> tabs = buildTabList(taskTO, pageReference);\n-        tabs.add(new AbstractTab(new Model<>(\"executions\")) {\n-\n-            private static final long serialVersionUID = -5861786415855103549L;\n-\n-            @Override\n-            public WebMarkupContainer getPanel(final String panelId) {\n-                final MultilevelPanel mlp = new MultilevelPanel(panelId);\n-                mlp.setFirstLevel(new Executions(MultilevelPanel.FIRST_LEVEL_ID, taskTO, pageReference) {\n-\n-                    private static final long serialVersionUID = 5691719817252887541L;\n-\n-                    @Override\n-                    protected void next(\n-                            final String title, final SecondLevel secondLevel, final AjaxRequestTarget target) {\n-                        mlp.next(title, secondLevel, target);\n-                    }\n-\n-                });\n-                return mlp;\n-            }\n-        });\n-\n-        add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", tabs));\n-    }\n-\n-    protected abstract List<ITab> buildTabList(final T taskTO, final PageReference pageReference);\n-\n-    public abstract class Executions\n-            extends AbstractSearchResultPanel<TaskExecTO, TaskExecTO, TaskExecProvider, TaskRestClient> {\n-\n-        private static final long serialVersionUID = 2039393934721149162L;\n-\n-        private final AbstractTaskTO taskTO;\n-\n-        public Executions(final String id, final AbstractTaskTO taskTO, final PageReference pageRef) {\n-            super(id, pageRef, false);\n-            setOutputMarkupId(true);\n-            this.taskTO = taskTO;\n-            initResultTable();\n-        }\n-\n-        protected abstract void next(final String title, final SecondLevel secondLevel, final AjaxRequestTarget target);\n-\n-        @Override\n-        protected List<IColumn<TaskExecTO, String>> getColumns() {\n-            final List<IColumn<TaskExecTO, String>> columns = new ArrayList<IColumn<TaskExecTO, String>>();\n-\n-            final int paginatorRows = 10;\n-\n-            columns.add(new PropertyColumn<TaskExecTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n-\n-            columns.add(new DatePropertyColumn<TaskExecTO>(new ResourceModel(\"start\"), \"start\", \"start\"));\n-\n-            columns.add(new DatePropertyColumn<TaskExecTO>(new ResourceModel(\"end\"), \"end\", \"end\"));\n-\n-            columns.add(new PropertyColumn<TaskExecTO, String>(new ResourceModel(\"status\"), \"status\", \"status\"));\n-\n-            columns.add(new ActionColumn<TaskExecTO, String>(new ResourceModel(\"actions\", \"\")) {\n-\n-                private static final long serialVersionUID = -3503023501954863131L;\n-\n-                @Override\n-                public ActionLinksPanel<TaskExecTO> getActions(\n-                        final String componentId, final IModel<TaskExecTO> model) {\n-\n-                    final TaskExecTO taskExecutionTO = model.getObject();\n-\n-                    final ActionLinksPanel.Builder<TaskExecTO> panel = ActionLinksPanel.builder(pageRef);\n-\n-                    panel.\n-                            add(new ActionLink<TaskExecTO>() {\n-\n-                                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                                @Override\n-                                public void onClick(final AjaxRequestTarget target, final TaskExecTO ignore) {\n-                                    next(\"execution.view\",\n-                                            new ExecMessage(model.getObject().getMessage()), target);\n-                                }\n-                            }, ActionLink.ActionType.EDIT, StandardEntitlement.TASK_READ).\n-                            add(new ActionLink<TaskExecTO>() {\n-\n-                                private static final long serialVersionUID = -3722207913631435501L;\n-\n-                                @Override\n-                                public void onClick(final AjaxRequestTarget target, final TaskExecTO ignore) {\n-                                    try {\n-                                        restClient.deleteExecution(taskExecutionTO.getKey());\n-                                        taskTO.getExecutions().remove(taskExecutionTO);\n-                                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    } catch (SyncopeClientException scce) {\n-                                        error(scce.getMessage());\n-                                    }\n-\n-                                    BasePage.class.cast(pageRef.getPage()).getNotificationPanel().refresh(target);\n-                                    target.add(Executions.this);\n-                                }\n-                            }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE);\n-\n-                    return panel.build(componentId, model.getObject());\n-                }\n-\n-                @Override\n-                public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n-                    final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(pageRef);\n-\n-                    return panel.add(new ActionLink<Serializable>() {\n-\n-                        private static final long serialVersionUID = -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n-                            if (target != null) {\n-                                final AjaxFallbackDefaultDataTable<TaskExecTO, String> currentTable\n-                                        = new AjaxFallbackDefaultDataTable<TaskExecTO, String>(\n-                                                \"executionsTable\",\n-                                                columns,\n-                                                new TaskExecProvider(taskTO.getKey(), paginatorRows),\n-                                                paginatorRows);\n-                                currentTable.setOutputMarkupId(true);\n-                                target.add(currentTable);\n-                                addOrReplace(currentTable);\n-                            }\n-                        }\n-                    }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n-                }\n-            });\n-\n-            return columns;\n-        }\n-\n-        @Override\n-        protected TaskExecProvider dataProvider() {\n-            return new TaskExecProvider(taskTO.getKey(), rows);\n-        }\n-\n-        @Override\n-        protected String paginatorRowsKey() {\n-            return Constants.PREF_TASK_EXECS_PAGINATOR_ROWS;\n-        }\n-\n-        @Override\n-        protected Collection<ActionLink.ActionType> getBulkActions() {\n-            final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n-            bulkActions.add(ActionLink.ActionType.DELETE);\n-            return bulkActions;\n-        }\n-\n-    }\n-\n-    protected class TaskExecProvider extends SearchableDataProvider<TaskExecTO> {\n-\n-        private static final long serialVersionUID = 8943636537120648961L;\n-\n-        protected TaskRestClient taskRestClient = new TaskRestClient();\n-\n-        private final SortableDataProviderComparator<TaskExecTO> comparator;\n-\n-        private final Long taskId;\n-\n-        public TaskExecProvider(final Long taskId, final int paginatorRows) {\n-            super(paginatorRows);\n-            this.taskId = taskId;\n-            comparator = new SortableDataProviderComparator<TaskExecTO>(this);\n-        }\n-\n-        public SortableDataProviderComparator<TaskExecTO> getComparator() {\n-            return comparator;\n-        }\n-\n-        @Override\n-        public Iterator<TaskExecTO> iterator(final long first, final long count) {\n-            final int page = ((int) first / paginatorRows);\n-            List<TaskExecTO> list = taskRestClient.listExecutions(taskId, (page < 0 ? 0 : page) + 1, paginatorRows);\n-            Collections.sort(list, comparator);\n-            return list.iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return taskRestClient.countExecutions(taskId);\n-        }\n-\n-        @Override\n-        public IModel<TaskExecTO> model(final TaskExecTO taskExecution) {\n-\n-            return new AbstractReadOnlyModel<TaskExecTO>() {\n-\n-                private static final long serialVersionUID = 7485475149862342421L;\n-\n-                @Override\n-                public TaskExecTO getObject() {\n-                    return taskExecution;\n-                }\n-            };\n-        }\n-    }\n-}"},{"sha":"811ae9d801dd5c98e00c6028176490ef36dd0676","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskExecutionDetails.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+\n+/**\n+ * Modal window with Task form (to stop and start execution).\n+ *\n+ * @param <T>\n+ */\n+public class TaskExecutionDetails<T extends AbstractTaskTO> extends MultilevelPanel.SecondLevel {\n+\n+    private static final long serialVersionUID = -4110576026663173545L;\n+\n+    public TaskExecutionDetails(final T taskTO, final PageReference pageRef) {\n+        super();\n+\n+        final MultilevelPanel mlp = new MultilevelPanel(\"executions\");\n+        add(mlp);\n+\n+        mlp.setFirstLevel(new TaskExecutions(MultilevelPanel.FIRST_LEVEL_ID, taskTO, pageRef) {\n+\n+            private static final long serialVersionUID = 5691719817252887541L;\n+\n+            @Override\n+            protected void next(\n+                    final String title,\n+                    final MultilevelPanel.SecondLevel slevel,\n+                    final AjaxRequestTarget target) {\n+                mlp.next(title, slevel, target);\n+            }\n+        });\n+    }\n+}"},{"sha":"98de6591c7babb386568ff5978a13de0201e7aff","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskExecutions.java","status":"added","additions":221,"deletions":0,"changes":221,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n+import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.client.console.tasks.TaskExecutions.TaskExecProvider;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.TaskExecTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public abstract class TaskExecutions\n+        extends AbstractSearchResultPanel<TaskExecTO, TaskExecTO, TaskExecProvider, TaskRestClient> {\n+\n+    private static final long serialVersionUID = 2039393934721149162L;\n+\n+    protected TaskRestClient taskRestClient = new TaskRestClient();\n+\n+    private final AbstractTaskTO taskTO;\n+\n+    public TaskExecutions(final String id, final AbstractTaskTO taskTO, final PageReference pageRef) {\n+        super(id, pageRef, false);\n+        restClient = taskRestClient;\n+        setOutputMarkupId(true);\n+        this.taskTO = taskTO;\n+        initResultTable();\n+    }\n+\n+    protected abstract void next(final String title, final SecondLevel secondLevel, final AjaxRequestTarget target);\n+\n+    @Override\n+    protected List<IColumn<TaskExecTO, String>> getColumns() {\n+        final List<IColumn<TaskExecTO, String>> columns = new ArrayList<IColumn<TaskExecTO, String>>();\n+\n+        final int paginatorRows = 10;\n+\n+        columns.add(new PropertyColumn<TaskExecTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+\n+        columns.add(new DatePropertyColumn<TaskExecTO>(new ResourceModel(\"start\"), \"start\", \"start\"));\n+\n+        columns.add(new DatePropertyColumn<TaskExecTO>(new ResourceModel(\"end\"), \"end\", \"end\"));\n+\n+        columns.add(new PropertyColumn<TaskExecTO, String>(new ResourceModel(\"status\"), \"status\", \"status\"));\n+\n+        columns.add(new ActionColumn<TaskExecTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel<TaskExecTO> getActions(\n+                    final String componentId, final IModel<TaskExecTO> model) {\n+\n+                final TaskExecTO taskExecutionTO = model.getObject();\n+\n+                final ActionLinksPanel.Builder<TaskExecTO> panel = ActionLinksPanel.builder(pageRef);\n+\n+                panel.\n+                        add(new ActionLink<TaskExecTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final TaskExecTO ignore) {\n+                                next(\"execution.view\",\n+                                        new ExecMessage(model.getObject().getMessage()), target);\n+                            }\n+                        }, ActionLink.ActionType.SEARCH, StandardEntitlement.TASK_READ).\n+                        add(new ActionLink<TaskExecTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final TaskExecTO ignore) {\n+                                try {\n+                                    restClient.deleteExecution(taskExecutionTO.getKey());\n+                                    taskTO.getExecutions().remove(taskExecutionTO);\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                } catch (SyncopeClientException scce) {\n+                                    error(scce.getMessage());\n+                                }\n+\n+                                BasePage.class.cast(pageRef.getPage()).getNotificationPanel().refresh(target);\n+                                target.add(TaskExecutions.this);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE);\n+\n+                return panel.build(componentId, model.getObject());\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(pageRef);\n+\n+                return panel.add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        if (target != null) {\n+                            final AjaxFallbackDefaultDataTable<TaskExecTO, String> currentTable\n+                                    = new AjaxFallbackDefaultDataTable<TaskExecTO, String>(\n+                                            \"executionsTable\",\n+                                            columns,\n+                                            new TaskExecProvider(taskTO.getKey(), paginatorRows),\n+                                            paginatorRows);\n+                            currentTable.setOutputMarkupId(true);\n+                            target.add(currentTable);\n+                            addOrReplace(currentTable);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected TaskExecProvider dataProvider() {\n+        return new TaskExecProvider(taskTO.getKey(), rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_TASK_EXECS_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+        bulkActions.add(ActionLink.ActionType.DELETE);\n+        return bulkActions;\n+    }\n+\n+    protected class TaskExecProvider extends SearchableDataProvider<TaskExecTO> {\n+\n+        private static final long serialVersionUID = 8943636537120648961L;\n+\n+        private final SortableDataProviderComparator<TaskExecTO> comparator;\n+\n+        private final Long taskId;\n+\n+        public TaskExecProvider(final Long taskId, final int paginatorRows) {\n+            super(paginatorRows);\n+            this.taskId = taskId;\n+            comparator = new SortableDataProviderComparator<TaskExecTO>(this);\n+        }\n+\n+        public SortableDataProviderComparator<TaskExecTO> getComparator() {\n+            return comparator;\n+        }\n+\n+        @Override\n+        public Iterator<TaskExecTO> iterator(final long first, final long count) {\n+            final int page = ((int) first / paginatorRows);\n+            List<TaskExecTO> list = taskRestClient.listExecutions(taskId, (page < 0 ? 0 : page) + 1, paginatorRows);\n+            Collections.sort(list, comparator);\n+            return list.iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return taskRestClient.countExecutions(taskId);\n+        }\n+\n+        @Override\n+        public IModel<TaskExecTO> model(final TaskExecTO taskExecution) {\n+\n+            return new AbstractReadOnlyModel<TaskExecTO>() {\n+\n+                private static final long serialVersionUID = 7485475149862342421L;\n+\n+                @Override\n+                public TaskExecTO getObject() {\n+                    return taskExecution;\n+                }\n+            };\n+        }\n+    }\n+}"},{"sha":"da92165230b42aac5d8494c30325d7250168c6a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskSearchResultPanel.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskSearchResultPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.commons.TaskDataProvider;\n@@ -44,12 +43,10 @@\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    protected final TaskRestClient taskRestClient = new TaskRestClient();\n-\n     protected TaskSearchResultPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef, false);\n+        restClient = new TaskRestClient();\n         setShowResultPage(false);\n-        modal.size(Modal.Size.Large);\n     }\n \n     @Override\n@@ -91,7 +88,7 @@ public SortableDataProviderComparator<T> getComparator() {\n \n         @Override\n         public long size() {\n-            return taskRestClient.count(id);\n+            return restClient.count(id);\n         }\n \n         @Override"},{"sha":"3eed4e5350ef6eb4d274f860df6460ca7241e795","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -172,7 +172,7 @@ public void onClose(final AjaxRequestTarget target) {\n \n         add(new WebSocketBehavior());\n \n-        togglePanel = new TopologyTogglePanel(\"toggle\", getPage().getPageReference());\n+        togglePanel = new TopologyTogglePanel(\"toggle\", getPageReference());\n         add(togglePanel);\n \n         // -----------------------------------------"},{"sha":"544d2e85738b3831830405c9267b52e12a4498cf","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -29,7 +29,9 @@\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.tasks.PropagationTasks;\n+import org.apache.syncope.client.console.tasks.PushTasks;\n import org.apache.syncope.client.console.tasks.SchedTasks;\n+import org.apache.syncope.client.console.tasks.SyncTasks;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.confirmation.ConfirmationModalBehavior;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n@@ -313,7 +315,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(modal);\n+                target.add(modal.setContent(new SyncTasks(pageRef, node.getKey().toString())));\n                 modal.header(new ResourceModel(\"task.synchronization.list\", \"Synchronization tasks\"));\n                 modal.show(true);\n             }\n@@ -327,7 +329,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(modal);\n+                target.add(modal.setContent(new PushTasks(pageRef, node.getKey().toString())));\n                 modal.header(new ResourceModel(\"task.push.list\", \"Push tasks\"));\n                 modal.show(true);\n             }"},{"sha":"d8f3007adf85687e9da25364ad5d9e23f3d72488","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -81,10 +81,10 @@ public AjaxDropDownChoicePanel<T> setChoices(final IModel<? extends List<? exten\n     }\n \n     public AjaxDropDownChoicePanel<T> setNullValid(final boolean validity) {\n-        DropDownChoice.class.cast(field).setNullValid(validity);\n+        BootstrapSelect.class.cast(field).setNullValid(validity);\n         return this;\n     }\n-\n+    \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public FieldPanel<T> clone() {"},{"sha":"fdb6fa6ca38f5c070a2caae5a0cba097242e73d1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":41,"deletions":35,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -29,10 +29,10 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.event.IEventSource;\n-import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -45,23 +45,23 @@\n \n     private static final long serialVersionUID = 1L;\n \n-    protected PageReference pageRef;\n-\n     private final WebMarkupContainer container;\n \n     private final Fragment initialFragment;\n \n-    protected final AjaxLink<?> addAjaxLink;\n+    private final boolean wizardInModal;\n \n-    private AbstractModalPanelBuilder<T> newItemPanelBuilder;\n+    protected PageReference pageRef;\n \n-    private NotificationPanel notificationPanel;\n+    protected final AjaxLink<?> addAjaxLink;\n \n-    private boolean footerVisibility = false;\n+    protected AbstractModalPanelBuilder<T> newItemPanelBuilder;\n \n-    private boolean showResultPage = false;\n+    protected NotificationPanel notificationPanel;\n \n-    private final boolean wizardInModal;\n+    protected boolean footerVisibility = false;\n+\n+    protected boolean showResultPage = false;\n \n     /**\n      * Modal window.\n@@ -85,13 +85,14 @@ protected WizardMgtPanel(final String id) {\n     protected WizardMgtPanel(final String id, final boolean wizardInModal) {\n         super(id);\n         setOutputMarkupId(true);\n+        \n         this.wizardInModal = wizardInModal;\n \n-        add(modal);\n+        super.add(modal);\n \n-        container = new TransparentWebMarkupContainer(\"container\");\n+        container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n-        add(container);\n+        super.add(container);\n \n         initialFragment = new Fragment(\"content\", \"default\", this);\n         container.addOrReplace(initialFragment);\n@@ -111,25 +112,6 @@ public void onClick(final AjaxRequestTarget target) {\n         initialFragment.add(addAjaxLink);\n     }\n \n-    public <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> setPageRef(final PageReference pageRef) {\n-        this.pageRef = pageRef;\n-        return this;\n-    }\n-\n-    public <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> setShowResultPage(final boolean showResultPage) {\n-        this.showResultPage = showResultPage;\n-        return this;\n-    }\n-\n-    @Override\n-    public final MarkupContainer add(final Component... childs) {\n-        return super.add(childs);\n-    }\n-\n-    public void setFooterVisibility(final boolean footerVisibility) {\n-        this.footerVisibility = footerVisibility;\n-    }\n-\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n@@ -218,6 +200,25 @@ protected Panel customResultBody(final String panelId, final T item, final Seria\n         };\n     }\n \n+    @Override\n+    public Component add(final Behavior... behaviors) {\n+        return super.add(behaviors);\n+    }\n+\n+    public final MarkupContainer addInnerObject(final Component childs) {\n+        return initialFragment.add(childs);\n+    }\n+\n+    public <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> setPageRef(final PageReference pageRef) {\n+        this.pageRef = pageRef;\n+        return this;\n+    }\n+\n+    public <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> setShowResultPage(final boolean showResultPage) {\n+        this.showResultPage = showResultPage;\n+        return this;\n+    }\n+\n     protected <B extends AbstractModalPanelBuilder<T>> WizardMgtPanel<T> addNewItemPanelBuilder(\n             final B panelBuilder, final boolean newItemDefaultButtonEnabled) {\n         this.newItemPanelBuilder = panelBuilder;\n@@ -235,6 +236,11 @@ protected WizardMgtPanel<T> addNotificationPanel(final NotificationPanel notific\n         return this;\n     }\n \n+    public WizardMgtPanel<T> setFooterVisibility(final boolean footerVisibility) {\n+        this.footerVisibility = footerVisibility;\n+        return this;\n+    }\n+\n     /**\n      * PanelInWizard abstract builder.\n      *\n@@ -268,10 +274,10 @@ protected Builder(final PageReference pageRef) {\n          */\n         public WizardMgtPanel<T> build(final String id) {\n             return newInstance(id).\n-                    setPageRef(pageRef).\n-                    setShowResultPage(showResultPage).\n-                    addNewItemPanelBuilder(newItemPanelBuilder, newItemDefaultButtonEnabled).\n-                    addNotificationPanel(notificationPanel);\n+                    setPageRef(this.pageRef).\n+                    setShowResultPage(this.showResultPage).\n+                    addNewItemPanelBuilder(this.newItemPanelBuilder, this.newItemDefaultButtonEnabled).\n+                    addNotificationPanel(this.notificationPanel);\n         }\n \n         public void setShowResultPage(final boolean showResultPage) {"},{"sha":"3d674970fd95c32bb80a866dcd3af0b4b2078942","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -67,8 +67,8 @@ public <T extends AnyTO> AuxClasses(final T entityTO, final String... anyTypeCla\n                 dyngroups = Collections.<Long>emptyList();\n             }\n \n-            final AjaxPalettePanel.Builder<MembershipTO> builder =\n-                    new AjaxPalettePanel.Builder<MembershipTO>().setRenderer(new IChoiceRenderer<MembershipTO>() {\n+            final AjaxPalettePanel.Builder<MembershipTO> builder = new AjaxPalettePanel.Builder<MembershipTO>().\n+                    setRenderer(new IChoiceRenderer<MembershipTO>() {\n \n                         private static final long serialVersionUID = -3086661086073628855L;\n \n@@ -116,9 +116,9 @@ public List<MembershipTO> execute(final String filter) {\n                         public MembershipTO transform(final GroupTO input) {\n                             final MembershipTO membershipTO = new MembershipTO();\n                             membershipTO.setGroupName(input.getName());\n-                            membershipTO.setRightKey(input.getKey());\n+                            membershipTO.setRightKey(input.getKey() == null ? 0L : input.getKey());\n                             membershipTO.setRightType(input.getType());\n-                            membershipTO.setLeftKey(entityTO.getKey());\n+                            membershipTO.setLeftKey(entityTO.getKey() == null ? 0L : entityTO.getKey());\n                             membershipTO.setLeftType(entityTO.getType());\n                             return membershipTO;\n                         }"},{"sha":"8592edb3725b273d037f984804a9b9cb3eaae548","filename":"client/console/src/main/resources/META-INF/resources/js/topology.js","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -19,7 +19,7 @@\n var def = {\n   paintStyle: {\n     lineWidth: 2,\n-    strokeStyle: \"rgba(204,204,204, 0.3)\",\n+    strokeStyle: \"rgba(204,204,204, 1)\",\n     outlineColor: \"#666\",\n     outlineWidth: 1\n   },\n@@ -86,7 +86,7 @@ var disabledEndpointStyle = {\n \n var enabledConnectorStyle = {\n   lineWidth: 2,\n-  strokeStyle: \"rgba(65, 155, 30, 0.3)\",\n+  strokeStyle: \"rgba(65, 155, 30, 1)\",\n   outlineColor: \"#666\",\n   outlineWidth: 1\n };"},{"sha":"d174a076e5dd598badef47e3e45af20f6d28a8f7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails_it.properties","status":"removed","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractSchedTaskDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractSchedTaskDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractSchedTaskDetails_it.properties?ref=0268a3587aa419ad3380347cb19162da347ccfcd","patch":"@@ -1,20 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-profile=Profilo\n-schedule=Pianificazione\n-start=Inizio\n-end=Fine"},{"sha":"ef1b61591b92eceaec679e2831241a1815e87b6b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/CrontabPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -23,3 +23,4 @@ selOpt3=Fire at 12pm (noon) every day\n selOpt4=Fire at 12am (midnight) every first day of the month\n selOpt5=Fire at 12am (midnight) every last day of the month\n selOpt6=Fire at 12am (midnight) every Monday\n+cronTemplateChooser.dropDownChoiceField.null=Available templates"},{"sha":"d01da0e833d4e0369d6a49f745239a4e6121ffb4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/CrontabPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel_it.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -23,3 +23,4 @@ selOpt3=Lanciato ogni giorno a mezzanotte\n selOpt4=Lanciato ogni primo giorno del mese a mezzogiorno\n selOpt5=Lanciato ogni ultimo giorno del mese a mezzogiorno\n selOpt6=Lanciato ogni Luned\\u00ec a mezzogiorno\n+cronTemplateChooser.dropDownChoiceField.null=Template disponibili"},{"sha":"2f7ee97412569c65707c4f70c47a76eff1c60ab5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/CrontabPanel_pt_BR.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FCrontabPanel_pt_BR.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-cron=Agendar (segundos, minutos, horas, dias do m\\u00EAs, meses, dias da semana)\n+cron=Agendar (segundos, minutos, horas, dias do m\\u00eas, meses, dias da semana)\n cronTemplateChooser=Templates\n chooseForTemplate=Templates\n selOpt1=N\\u00e3o Agendado\n@@ -23,3 +23,4 @@ selOpt3=Acionar \\u00e0s 12\\:00 todos os dias\n selOpt4=Acionar \\u00e0s 24\\:00 sempre no primeiro dia de cada m\\u00eas\n selOpt5=Acionar \\u00e0s 24\\:00 sempre no \\u00faltimo dia de cada m\\u00eas\n selOpt6=Acionar \\u00e0s 24\\:00 de toda Segunda Feira\n+cronTemplateChooser.dropDownChoiceField.null=Available templates"},{"sha":"fdc632841b8162535dab806a1a11440b1a573440","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDetails$Profile.html","status":"removed","additions":0,"deletions":28,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.html?ref=0268a3587aa419ad3380347cb19162da347ccfcd","patch":"@@ -1,28 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title></title></head>\n-  <body>\n-    <wicket:panel>\n-      <div class=\"form-group\"><span wicket:id=\"key\">[id]</span></div>\n-      <div class=\"form-group\"><span wicket:id=\"anyKey\">[anyKey]</span></div>\n-      <div class=\"form-group\"><span wicket:id=\"resource\">[resource]</span></div>\n-    </wicket:panel>\n-  </body>\n-</html>"},{"sha":"4a36305c24ec1cb80372517da9c1e3fcfc5222d2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDetails$Profile.properties","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.properties?ref=0268a3587aa419ad3380347cb19162da347ccfcd","patch":"@@ -1,18 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-anyKey=Object key\n-resource=Resource"},{"sha":"4a36305c24ec1cb80372517da9c1e3fcfc5222d2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDetails$Profile_pt_BR.properties","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0268a3587aa419ad3380347cb19162da347ccfcd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile_pt_BR.properties?ref=0268a3587aa419ad3380347cb19162da347ccfcd","patch":"@@ -1,18 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-anyKey=Object key\n-resource=Resource"},{"sha":"9d390f20b83d37d35b66a7f2d9e9e85aa5da7055","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskSearchResultPanel.properties","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -20,3 +20,8 @@ jobDelegateClassName=Job\n lastExec=Last execution\n nextExec=Next execution\n active=Active\n+\n+any.edit=Edit ${name}\n+any.new=New task\n+any.finish=Submit ${name}\n+any.cancel=Cancel ${name}"},{"sha":"70e4730d0e76e739038329203dfa6698303a65a8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskSearchResultPanel_it.properties","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel_it.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -20,3 +20,8 @@ jobDelegateClassName=Job\n lastExec=Ultima esecuszione\n nextExec=Prossima esecuzione\n active=Attivo\n+\n+any.edit=Modifica ${name}\n+any.new=Nuovo Task\n+any.finish=Invia ${name}\n+any.cancel=Annulla ${name}"},{"sha":"9d390f20b83d37d35b66a7f2d9e9e85aa5da7055","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskSearchResultPanel_pt_BR.properties","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel_pt_BR.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -20,3 +20,8 @@ jobDelegateClassName=Job\n lastExec=Last execution\n nextExec=Next execution\n active=Active\n+\n+any.edit=Edit ${name}\n+any.new=New task\n+any.finish=Submit ${name}\n+any.cancel=Cancel ${name}"},{"sha":"0136a054d6cf14436195d4aeee65ed8ea5eea042","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails$Profile.html"},{"sha":"30bb712c07f15c94d149165d99029a520e4ba10d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails$Profile.properties"},{"sha":"30bb712c07f15c94d149165d99029a520e4ba10d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails$Profile_it.properties"},{"sha":"30bb712c07f15c94d149165d99029a520e4ba10d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails$Profile_pt_BR.properties"},{"sha":"99e853e65248f514a4498d38f2c1fa3711647d4e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Schedule.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Schedule.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Schedule.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Schedule.html?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails$Schedule.html"},{"sha":"6e191e6606fbe78624794c330b543f888a6dc596","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskExecutionDetails.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.html?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -20,7 +20,7 @@\n   <head><title></title></head>\n   <body>\n     <wicket:panel>\n-      <div wicket:id=\"tabbedPanel\"></div>\n+      <div wicket:id=\"executions\"></div>\n       <wicket:child />\n     </wicket:panel>\n   </body>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDetails.html"},{"sha":"43c8575ffb84118b9f20ec286c4808d485857d76","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskExecutionDetails.properties","status":"renamed","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -14,7 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-profile=Profile\n-schedule=Schedule\n start=Start\n end=End","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails.properties"},{"sha":"43c8575ffb84118b9f20ec286c4808d485857d76","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskExecutionDetails_it.properties","status":"renamed","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_it.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -14,7 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-profile=Profile\n-schedule=Schedule\n start=Start\n end=End","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/AbstractSchedTaskDetails_pt_BR.properties"},{"sha":"43c8575ffb84118b9f20ec286c4808d485857d76","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskExecutionDetails_pt_BR.properties","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails_pt_BR.properties?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-anyKey=Object Id\n-resource=Risorsa\n+start=Start\n+end=End","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDetails$Profile_it.properties"},{"sha":"a96d3d3722f53ab1aa809e82dcd6676c4d41c080","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/Topology.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -19,7 +19,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:head>\n-    <script type=\"text/javascript\" src=\"webjars/jsplumb/${jsplumb.version}/dom.jsPlumb-${jsplumb.version}-min.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/jsplumb/${jsplumb.version}/js/jsPlumb-${jsplumb.version}-min.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/jquery-cookie/${jquery-cookie.version}/jquery.cookie.js\"></script>\n     <script type=\"text/javascript\" src=\"js/topology.js\"></script>\n     <link href=\"css/topology.css\" rel=\"stylesheet\"/>"},{"sha":"e3f4a5eb1d2609ef02765c1b3fce123cc8d82c60","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d69d1d8af3e7d1d53843d33a2544ef288b0142bb/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=d69d1d8af3e7d1d53843d33a2544ef288b0142bb","patch":"@@ -390,7 +390,7 @@ under the License.\n     <ionicons.version>2.0.1</ionicons.version>\n     <highlightjs.version>8.7</highlightjs.version>\n     <codemirror.version>5.11</codemirror.version>\n-    <jsplumb.version>1.7.5</jsplumb.version>\n+    <jsplumb.version>2.0.5</jsplumb.version>\n     \n     <wicket.version>7.1.0</wicket.version>\n     <wicket-jqueryui.version>7.1.0</wicket-jqueryui.version>"}]}