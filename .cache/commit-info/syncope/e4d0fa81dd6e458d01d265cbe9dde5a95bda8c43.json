{"sha":"e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43","node_id":"C_kwDOJfYA1toAKGU0ZDBmYTgxZGQ2ZTQ1OGQwMWQyNjVjYmU5ZGRlNWE5NWJkYThjNDM","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-07-06T14:12:58Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-07-06T14:12:58Z"},"message":"[SYNCOPE-1545] Fixing SAML2 and OIDC client apps storage with Oracle","tree":{"sha":"89187eb2821c5fd3074b078a34b5377353dd2df8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/89187eb2821c5fd3074b078a34b5377353dd2df8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6223ede387255c2ac1ad92f798eb86da6cf2e62a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6223ede387255c2ac1ad92f798eb86da6cf2e62a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6223ede387255c2ac1ad92f798eb86da6cf2e62a"}],"stats":{"total":34,"additions":17,"deletions":17},"files":[{"sha":"9262479bd8b3a87cfc6b80918d99a97ccd7101a5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ClientAppDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FClientAppDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FClientAppDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FClientAppDAO.java?ref=e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.am.ClientApp;\n import org.apache.syncope.core.persistence.api.entity.policy.Policy;\n \n-public interface ClientAppDAO<C extends ClientApp> {\n+public interface ClientAppDAO<C extends ClientApp> extends DAO<C> {\n \n     List<C> findByPolicy(Policy policy);\n "},{"sha":"db45c860246da8b4bb52e9b48fdec4a8d387fe7c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/PersistenceContext.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java?ref=e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43","patch":"@@ -559,7 +559,7 @@ public RealmDAO realmDAO(\n             final @Lazy RoleDAO roleDAO,\n             final @Lazy CASSPClientAppDAO casSPClientAppDAO,\n             final @Lazy OIDCRPClientAppDAO oidcRPClientAppDAO,\n-            final SAML2SPClientAppDAO saml2SPClientAppDAO) {\n+            final @Lazy SAML2SPClientAppDAO saml2SPClientAppDAO) {\n \n         return new JPARealmDAO(roleDAO, casSPClientAppDAO, oidcRPClientAppDAO, saml2SPClientAppDAO);\n     }"},{"sha":"35e8d31d3a8d1c9ca5f84fa1aafc6c9953b47422","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/am/JPAOIDCRPClientApp.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPAOIDCRPClientApp.java?ref=e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43","patch":"@@ -66,15 +66,15 @@ public class JPAOIDCRPClientApp extends AbstractClientApp implements OIDCRPClien\n     @ElementCollection(fetch = FetchType.EAGER)\n     @Enumerated(EnumType.STRING)\n     @Column(name = \"supportedGrantType\")\n-    @CollectionTable(name = \"OIDCRPClientApp_SupportedGrantTypes\",\n+    @CollectionTable(name = \"OIDCRPClientApp_SuppGrantTypes\",\n             joinColumns =\n             @JoinColumn(name = \"client_id\", referencedColumnName = \"id\"))\n     private Set<OIDCGrantType> supportedGrantTypes = new HashSet<>();\n \n     @ElementCollection(fetch = FetchType.EAGER)\n     @Enumerated(EnumType.STRING)\n     @Column(name = \"supportedResponseType\")\n-    @CollectionTable(name = \"OIDCRPClientApp_SupportedResponseTypes\",\n+    @CollectionTable(name = \"OIDCRPClientApp_SuppResTypes\",\n             joinColumns =\n             @JoinColumn(name = \"client_id\", referencedColumnName = \"id\"))\n     private Set<OIDCResponseType> supportedResponseTypes = new HashSet<>();"},{"sha":"12916717b53a8e2df7e2395d81699da741cdf133","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/am/JPASAML2SPClientApp.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPASAML2SPClientApp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPASAML2SPClientApp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fam%2FJPASAML2SPClientApp.java?ref=e4d0fa81dd6e458d01d265cbe9dde5a95bda8c43","patch":"@@ -68,7 +68,7 @@ public class JPASAML2SPClientApp extends AbstractClientApp implements SAML2SPCli\n \n     @ElementCollection(fetch = FetchType.EAGER)\n     @Column(name = \"assertionAudience\")\n-    @CollectionTable(name = \"SAML2SPClientApp_AssertionAudiences\",\n+    @CollectionTable(name = \"SAML2SPClientApp_AssAud\",\n             joinColumns =\n             @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n     private Set<String> assertionAudiences = new HashSet<>();\n@@ -77,43 +77,43 @@ public class JPASAML2SPClientApp extends AbstractClientApp implements SAML2SPCli\n     private String serviceProviderNameIdQualifier;\n \n     @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"signingSignatureAlgorithm\")\n-    @CollectionTable(name = \"SAML2SPClientApp_SigningSignatureAlgs\",\n+    @Column(name = \"sigAlg\")\n+    @CollectionTable(name = \"SAML2SPClientApp_SigAlgs\",\n             joinColumns =\n             @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n     private List<XmlSecAlgorithm> signingSignatureAlgorithms = new ArrayList<>();\n \n     @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"signingSignatureReferenceDigestMethod\")\n-    @CollectionTable(name = \"SAML2SPClientApp_SigningSignatureRefDigestAlgs\",\n+    @Column(name = \"sigRefDigestMethod\")\n+    @CollectionTable(name = \"SAML2SPClientApp_SigRefDigAlgs\",\n             joinColumns =\n             @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n     private List<XmlSecAlgorithm> signingSignatureReferenceDigestMethods = new ArrayList<>();\n \n     @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"encryptionDataAlgorithm\")\n-    @CollectionTable(name = \"SAML2SPClientApp_EncryptionDataAlgs\",\n+    @Column(name = \"encDataAlg\")\n+    @CollectionTable(name = \"SAML2SPClientApp_EncDataAlgs\",\n             joinColumns =\n             @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n     private List<XmlSecAlgorithm> encryptionDataAlgorithms = new ArrayList<>();\n \n     @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"encryptionKeyAlgorithm\")\n-    @CollectionTable(name = \"SAML2SPClientApp_EncryptionKeyAlgs\",\n+    @Column(name = \"encKeyAlg\")\n+    @CollectionTable(name = \"SAML2SPClientApp_EncKeyAlgs\",\n             joinColumns =\n             @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n     private List<XmlSecAlgorithm> encryptionKeyAlgorithms = new ArrayList<>();\n \n     @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"signingSignatureBlackListedAlgorithm\")\n-    @CollectionTable(name = \"SAML2SPClientApp_BlacklistedSigningAlgs\",\n+    @Column(name = \"sigBlAlg\")\n+    @CollectionTable(name = \"SAML2SPClientApp_BlSigAlgs\",\n             joinColumns =\n             @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n     private List<XmlSecAlgorithm> signingSignatureBlackListedAlgorithms = new ArrayList<>();\n \n     @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"encryptionBlackListedAlgorithm\")\n-    @CollectionTable(name = \"SAML2SPClientApp_BlacklistedEncryptionAlgs\",\n+    @Column(name = \"encBlAlg\")\n+    @CollectionTable(name = \"SAML2SPClientApp_BlEncAlgs\",\n             joinColumns =\n             @JoinColumn(name = \"client_app_id\", referencedColumnName = \"id\"))\n     private List<XmlSecAlgorithm> encryptionBlackListedAlgorithms = new ArrayList<>();"}]}