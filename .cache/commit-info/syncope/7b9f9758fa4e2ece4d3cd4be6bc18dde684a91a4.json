{"sha":"7b9f9758fa4e2ece4d3cd4be6bc18dde684a91a4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdiOWY5NzU4ZmE0ZTJlY2U0ZDNjZDRiZTZiYzE4ZGRlNjg0YTkxYTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-30T08:52:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-30T08:52:38Z"},"message":"[SYNCOPE-940] Enable link to Realms only if required entitlements are owned","tree":{"sha":"5a3a3238f0c8544be0129e236328194bb39b608f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5a3a3238f0c8544be0129e236328194bb39b608f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7b9f9758fa4e2ece4d3cd4be6bc18dde684a91a4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7b9f9758fa4e2ece4d3cd4be6bc18dde684a91a4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7b9f9758fa4e2ece4d3cd4be6bc18dde684a91a4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7b9f9758fa4e2ece4d3cd4be6bc18dde684a91a4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8f59258cc3b740ae4c67d4840916958e4de351a6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8f59258cc3b740ae4c67d4840916958e4de351a6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8f59258cc3b740ae4c67d4840916958e4de351a6"}],"stats":{"total":122,"additions":69,"deletions":53},"files":[{"sha":"fe5ef293299ddbbc9231935be7052d73ec4d1a64","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/NumberWidget.java","status":"modified","additions":69,"deletions":53,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7b9f9758fa4e2ece4d3cd4be6bc18dde684a91a4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FNumberWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7b9f9758fa4e2ece4d3cd4be6bc18dde684a91a4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FNumberWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FNumberWidget.java?ref=7b9f9758fa4e2ece4d3cd4be6bc18dde684a91a4","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Collections;\n import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AnyTypeComparator;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n@@ -31,6 +32,8 @@\n import org.apache.syncope.client.console.pages.Realms;\n import org.apache.syncope.client.console.pages.Roles;\n import org.apache.syncope.client.console.topology.Topology;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.request.component.IRequestablePage;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public class NumberWidget extends BaseWidget {\n@@ -48,65 +51,78 @@ public NumberWidget(final String id, final String bg, final int number, final St\n \n         WebMarkupContainer box = new WebMarkupContainer(\"box\");\n         box.add(new AttributeAppender(\"class\", \" \" + bg));\n-        box.add(new AjaxEventBehavior(\"onmousedown\") {\n+\n+        boolean isAuthorized = true;\n+        final PageParameters pageParameters = new PageParameters();\n+        final Class<? extends IRequestablePage> responsePage;\n+        List<AnyTypeTO> anyTypeTOs = new AnyTypeRestClient().list();\n+        switch (id) {\n+            case \"totalUsers\":\n+                pageParameters.add(\"selectedIndex\", 1);\n+                responsePage = Realms.class;\n+                isAuthorized = SyncopeConsoleSession.get().owns(StandardEntitlement.USER_SEARCH);\n+                break;\n+\n+            case \"totalGroups\":\n+                pageParameters.add(\"selectedIndex\", 2);\n+                responsePage = Realms.class;\n+                break;\n+\n+            case \"totalAny1OrRoles\":\n+                if (icon.equals(\"ion ion-gear-a\")) {\n+                    Collections.sort(anyTypeTOs, new AnyTypeComparator());\n+                    Integer selectedIndex = null;\n+                    for (int i = 0; i < anyTypeTOs.size() && selectedIndex == null; i++) {\n+                        if (anyTypeTOs.get(i).getKey().equals(label)) {\n+                            selectedIndex = i + 1;\n+                            pageParameters.add(\"selectedIndex\", selectedIndex);\n+                        }\n+                    }\n+                    responsePage = Realms.class;\n+                    isAuthorized = SyncopeConsoleSession.get().owns(label + \"_SEARCH\");\n+                } else {\n+                    responsePage = Roles.class;\n+                    isAuthorized = SyncopeConsoleSession.get().owns(StandardEntitlement.ROLE_LIST);\n+                }\n+                break;\n+\n+            case \"totalAny2OrResources\":\n+                if (icon.equals(\"ion ion-gear-a\")) {\n+                    Collections.sort(anyTypeTOs, new AnyTypeComparator());\n+                    Integer selectedIndex = null;\n+                    for (int i = 0; i < anyTypeTOs.size() && selectedIndex == null; i++) {\n+                        if (anyTypeTOs.get(i).getKey().equals(label)) {\n+                            selectedIndex = i + 1;\n+                            pageParameters.add(\"selectedIndex\", selectedIndex);\n+                        }\n+                    }\n+                    responsePage = Realms.class;\n+                    isAuthorized = SyncopeConsoleSession.get().owns(label + \"_SEARCH\");\n+                } else {\n+                    responsePage = Topology.class;\n+                    isAuthorized = SyncopeConsoleSession.get().owns(StandardEntitlement.CONNECTOR_LIST)\n+                            && SyncopeConsoleSession.get().owns(StandardEntitlement.RESOURCE_LIST);\n+                }\n+                break;\n+\n+            default:\n+                pageParameters.add(\"selectedIndex\", 0);\n+                responsePage = Realms.class;\n+        }\n+\n+        AjaxEventBehavior clickToRealms = new AjaxEventBehavior(\"onmousedown\") {\n \n             private static final long serialVersionUID = -7133385027739964990L;\n \n             @Override\n             protected void onEvent(final AjaxRequestTarget target) {\n-                List<AnyTypeTO> anyTypeTOs = new AnyTypeRestClient().list();\n-                PageParameters pageParameters = new PageParameters();\n-                switch (id) {\n-                    case \"totalUsers\":\n-                        pageParameters.add(\"selectedIndex\", 1);\n-                        setResponsePage(Realms.class, pageParameters);\n-                        break;\n-\n-                    case \"totalGroups\":\n-                        pageParameters.add(\"selectedIndex\", 2);\n-                        setResponsePage(Realms.class, pageParameters);\n-                        break;\n-\n-                    case \"totalAny1OrRoles\":\n-                        if (icon.equals(\"ion ion-gear-a\")) {\n-                            Collections.sort(anyTypeTOs, new AnyTypeComparator());\n-                            int selectedIndex = 1;\n-                            for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n-                                if (anyTypeTO.getKey().equals(label)) {\n-                                    pageParameters.add(\"selectedIndex\", selectedIndex);\n-                                    break;\n-                                }\n-                                selectedIndex++;\n-                            }\n-                            setResponsePage(Realms.class, pageParameters);\n-                        } else {\n-                            setResponsePage(Roles.class);\n-                        }\n-                        break;\n-\n-                    case \"totalAny2OrResources\":\n-                        if (icon.equals(\"ion ion-gear-a\")) {\n-                            Collections.sort(anyTypeTOs, new AnyTypeComparator());\n-                            int selectedIndex = 1;\n-                            for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n-                                if (anyTypeTO.getKey().equals(label)) {\n-                                    pageParameters.add(\"selectedIndex\", selectedIndex);\n-                                    break;\n-                                }\n-                                selectedIndex++;\n-                            }\n-                            setResponsePage(Realms.class, pageParameters);\n-                        } else {\n-                            setResponsePage(Topology.class);\n-                        }\n-                        break;\n-\n-                    default:\n-                        pageParameters.add(\"selectedIndex\", 0);\n-                        setResponsePage(Realms.class, pageParameters);\n-                }\n+                setResponsePage(responsePage, pageParameters);\n             }\n-        });\n+        };\n+        if (isAuthorized) {\n+            box.add(clickToRealms);\n+        }\n+\n         add(box);\n \n         numberLabel = new Label(\"number\", number);"}]}