{"sha":"492f2807adcae9ce24ebaaab51cb3c0b934cbea8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ5MmYyODA3YWRjYWU5Y2UyNGViYWFhYjUxY2IzYzBiOTM0Y2JlYTg=","commit":{"author":{"name":"Cristian Capozucco","email":"cristcapo@gmail.com","date":"2020-11-25T15:19:36Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2020-11-25T15:29:45Z"},"message":"[SYNCOPE-1604] short date years represented by 4 digits (#228)","tree":{"sha":"fe3521fd8cd30f654aa055bb1f7b650a8206dfdd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fe3521fd8cd30f654aa055bb1f7b650a8206dfdd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/492f2807adcae9ce24ebaaab51cb3c0b934cbea8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/492f2807adcae9ce24ebaaab51cb3c0b934cbea8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/492f2807adcae9ce24ebaaab51cb3c0b934cbea8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/492f2807adcae9ce24ebaaab51cb3c0b934cbea8/comments","author":{"login":"CapozXVII","id":22611280,"node_id":"MDQ6VXNlcjIyNjExMjgw","avatar_url":"https://avatars.githubusercontent.com/u/22611280?v=4","gravatar_id":"","url":"https://api.github.com/users/CapozXVII","html_url":"https://github.com/CapozXVII","followers_url":"https://api.github.com/users/CapozXVII/followers","following_url":"https://api.github.com/users/CapozXVII/following{/other_user}","gists_url":"https://api.github.com/users/CapozXVII/gists{/gist_id}","starred_url":"https://api.github.com/users/CapozXVII/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CapozXVII/subscriptions","organizations_url":"https://api.github.com/users/CapozXVII/orgs","repos_url":"https://api.github.com/users/CapozXVII/repos","events_url":"https://api.github.com/users/CapozXVII/events{/privacy}","received_events_url":"https://api.github.com/users/CapozXVII/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6127abe6db989623c800b12a13708b6268688503","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6127abe6db989623c800b12a13708b6268688503","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6127abe6db989623c800b12a13708b6268688503"}],"stats":{"total":35,"additions":18,"deletions":17},"files":[{"sha":"3b962e50a5fe748eb41ac54bbf08665788ff3845","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AjaxDateTimeFieldPanel.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/492f2807adcae9ce24ebaaab51cb3c0b934cbea8/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/492f2807adcae9ce24ebaaab51cb3c0b934cbea8/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAjaxDateTimeFieldPanel.java?ref=492f2807adcae9ce24ebaaab51cb3c0b934cbea8","patch":"@@ -19,8 +19,11 @@\n package org.apache.syncope.client.ui.commons.markup.html.form;\n \n import com.googlecode.wicket.kendo.ui.form.datetime.AjaxDateTimePicker;\n+import java.text.DateFormat;\n import java.util.Date;\n+import java.util.Locale;\n import org.apache.commons.lang3.time.FastDateFormat;\n+import org.apache.wicket.Session;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n@@ -39,7 +42,13 @@ public AjaxDateTimeFieldPanel(\n \n         // dateTimePattern should be spit into separate date and time pattern strings in order to be passed to the\n         // AjaxDateTimePicker constructor, but there is no safe way to do that - ignoring\n-        field = new AjaxDateTimePicker(\"field\", model, getLocale());\n+        Locale locale = Session.get().getLocale();\n+        field = new AjaxDateTimePicker(\n+                \"field\",\n+                model,\n+                locale,\n+                FastDateFormat.getDateInstance(DateFormat.SHORT, locale).getPattern().replace(\"yy\", \"yyyy\"),\n+                FastDateFormat.getTimeInstance(DateFormat.SHORT, locale).getPattern());\n         add(field.setLabel(new ResourceModel(name, name)).setOutputMarkupId(true));\n     }\n "},{"sha":"d8e85b9ffa8274bba92b46584bad89e4d6f89a5d","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/DateFieldPanel.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/492f2807adcae9ce24ebaaab51cb3c0b934cbea8/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/492f2807adcae9ce24ebaaab51cb3c0b934cbea8/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=492f2807adcae9ce24ebaaab51cb3c0b934cbea8","patch":"@@ -24,7 +24,6 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Optional;\n-\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.common.lib.Attributable;\n import org.apache.wicket.markup.head.IHeaderResponse;\n@@ -54,7 +53,6 @@ public FieldPanel<Date> setNewModel(final List<Serializable> list) {\n             @Override\n             public Date getObject() {\n                 Date date = null;\n-\n                 if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n                     try {\n                         // Parse string using datePattern\n@@ -123,18 +121,17 @@ public void setObject(final Date object) {\n         return this;\n     }\n \n-    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     @Override\n-    public FieldPanel<Date> setNewModel(final Attributable attributableTO, final String schema) {\n-        field.setModel(new Model() {\n+    public FieldPanel<Date> setNewModel(final Attributable attributable, final String schema) {\n+        field.setModel(new Model<Date>() {\n \n             private static final long serialVersionUID = -4214654722524358000L;\n \n             @Override\n-            public Serializable getObject() {\n-                if (!attributableTO.getPlainAttr(schema).get().getValues().isEmpty()) {\n+            public Date getObject() {\n+                if (!attributable.getPlainAttr(schema).get().getValues().isEmpty()) {\n                     try {\n-                        return fmt.parse(attributableTO.getPlainAttr(schema).get().getValues().get(0));\n+                        return fmt.parse(attributable.getPlainAttr(schema).get().getValues().get(0));\n                     } catch (ParseException ex) {\n                         LOG.error(\"While parsing date\", ex);\n                     }\n@@ -143,10 +140,10 @@ public Serializable getObject() {\n             }\n \n             @Override\n-            public void setObject(final Serializable object) {\n-                attributableTO.getPlainAttr(schema).get().getValues().clear();\n+            public void setObject(final Date object) {\n+                attributable.getPlainAttr(schema).get().getValues().clear();\n                 if (object != null) {\n-                    attributableTO.getPlainAttr(schema).get().getValues().add(fmt.format(object));\n+                    attributable.getPlainAttr(schema).get().getValues().add(fmt.format(object));\n                 }\n             }\n         });"},{"sha":"7a922b8b26562435c5319d31a14680f4cbbe76b1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/492f2807adcae9ce24ebaaab51cb3c0b934cbea8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/492f2807adcae9ce24ebaaab51cb3c0b934cbea8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=492f2807adcae9ce24ebaaab51cb3c0b934cbea8","patch":"@@ -664,11 +664,6 @@ public void editDateTimeField() {\n         cal.set(2017, Calendar.JANUARY, 19, 0, 0, 0);\n         cal.set(Calendar.MILLISECOND, 0);\n \n-        TESTER.assertModelValue(\"body:content:body:container:content:\"\n-                + \"tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n-                + \"0:outer:form:content:form:view:plainSchemas:tabs:0:\"\n-                + \"body:content:schemas:1:panel:field:datepicker\", cal.getTime());\n-\n         assertEquals(TESTER.getComponentFromLastRenderedPage(\"body:content:body:\"\n                 + \"container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:plainSchemas:\""}]}