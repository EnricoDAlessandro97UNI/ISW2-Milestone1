{"sha":"c95ca2fd2f47dbe680798058ed6da1827a10b1f3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM5NWNhMmZkMmY0N2RiZTY4MDc5ODA1OGVkNmRhMTgyN2ExMGIxZjM=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-15T17:18:08Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-15T17:18:08Z"},"message":"[SYNCOPE-156] providing search panel for group ownership","tree":{"sha":"55f05a4fa3f496a2a66c2de00cb1fa12d89c1d83","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/55f05a4fa3f496a2a66c2de00cb1fa12d89c1d83"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c95ca2fd2f47dbe680798058ed6da1827a10b1f3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c95ca2fd2f47dbe680798058ed6da1827a10b1f3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c95ca2fd2f47dbe680798058ed6da1827a10b1f3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"3395c6ed6a53f6b52ac0cb66d458e52d2c1c3bf1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3395c6ed6a53f6b52ac0cb66d458e52d2c1c3bf1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3395c6ed6a53f6b52ac0cb66d458e52d2c1c3bf1"}],"stats":{"total":490,"additions":238,"deletions":252},"files":[{"sha":"9a8dad883dd012b0ed24d35aba0a65196d4299b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":26,"deletions":21,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -38,7 +38,6 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -55,40 +54,47 @@ public abstract class AbstractSearchPanel extends Panel {\n \n     protected ResourceRestClient resourceRestClient = new ResourceRestClient();\n \n-//    protected AuthRestClient authRestClient;\n     protected IModel<List<String>> dnames;\n \n     protected IModel<List<String>> anames;\n \n     protected IModel<List<String>> resourceNames;\n \n-//    protected IModel<List<String>> entitlements;\n     protected IModel<List<SearchClause.Type>> types;\n \n     protected IModel<List<Pair<Long, String>>> groupNames;\n \n     protected NotificationPanel searchFeedback;\n \n-    protected PropertyModel<List<SearchClause>> model;\n+    protected IModel<List<SearchClause>> model;\n \n     protected WebMarkupContainer searchFormContainer;\n \n-    protected AnyTypeKind typeKind;\n+    protected final AnyTypeKind typeKind;\n \n-    protected boolean required;\n+    protected final boolean required;\n+\n+    protected final boolean enableSearch;\n \n     public abstract static class Builder<T extends AbstractSearchPanel> implements Serializable {\n \n         private static final long serialVersionUID = 6308997285778809578L;\n \n-        protected final PropertyModel<List<SearchClause>> model;\n+        protected final IModel<List<SearchClause>> model;\n \n         protected boolean required = true;\n \n-        public Builder(final PropertyModel<List<SearchClause>> model) {\n+        protected boolean enableSearch = false;\n+\n+        public Builder(final IModel<List<SearchClause>> model) {\n             this.model = model;\n         }\n \n+        public Builder<T> enableSearch() {\n+            this.enableSearch = true;\n+            return this;\n+        }\n+\n         public Builder<T> required(final boolean required) {\n             this.required = required;\n             return this;\n@@ -97,24 +103,15 @@ public Builder<T> required(final boolean required) {\n         public abstract T build(final String id);\n     }\n \n-    protected AbstractSearchPanel(\n-            final String id,\n-            final PropertyModel<List<SearchClause>> model,\n-            final AnyTypeKind typeKind) {\n-        this(id, model, typeKind, true);\n-    }\n-\n-    protected AbstractSearchPanel(\n-            final String id,\n-            final PropertyModel<List<SearchClause>> model,\n-            final AnyTypeKind typeKind,\n-            final boolean required) {\n+    protected AbstractSearchPanel(final String id, final AnyTypeKind typeKind, final Builder<?> builder) {\n \n         super(id);\n         populate();\n \n+        this.model = builder.model;\n         this.typeKind = typeKind;\n-        this.required = required;\n+        this.required = builder.required;\n+        this.enableSearch = builder.enableSearch;\n \n         setOutputMarkupId(true);\n \n@@ -149,6 +146,10 @@ public boolean accept(final FeedbackMessage message) {\n                 required,\n                 types, anames, dnames, groupNames, resourceNames);\n \n+        if (enableSearch) {\n+            searchClausePanel.enableSearch();\n+        }\n+\n         final MultiFieldPanel.Builder<SearchClause> searchView = new MultiFieldPanel.Builder<SearchClause>(model) {\n \n             private static final long serialVersionUID = 1L;\n@@ -203,4 +204,8 @@ public String transform(final ResourceTO input) {\n     public NotificationPanel getSearchFeedback() {\n         return searchFeedback;\n     }\n+\n+    public IModel<List<SearchClause>> getModel() {\n+        return this.model;\n+    }\n }"},{"sha":"681ab1c6ff43116e2dcec3430f7cd20633a87b5b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSearchPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.PropertyModel;\n \n public class AnyObjectSearchPanel extends AbstractSearchPanel {\n \n@@ -38,7 +38,7 @@ public static class Builder extends AbstractSearchPanel.Builder<AnyObjectSearchP\n \n         private static final long serialVersionUID = 6308997285778809578L;\n \n-        public Builder(final PropertyModel<List<SearchClause>> model) {\n+        public Builder(final IModel<List<SearchClause>> model) {\n             super(model);\n         }\n \n@@ -49,7 +49,7 @@ public AnyObjectSearchPanel build(final String id) {\n     }\n \n     protected AnyObjectSearchPanel(final String id, final AnyTypeKind kind, final Builder builder) {\n-        super(id, builder.model, kind, builder.required);\n+        super(id, kind, builder);\n     }\n \n     @Override"},{"sha":"b151568cde3b9e714884082eb30a906ca55c53a5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSearchPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -23,8 +23,8 @@\n import java.util.List;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.PropertyModel;\n \n public final class GroupSearchPanel extends AbstractSearchPanel {\n \n@@ -34,7 +34,7 @@ public static class Builder extends AbstractSearchPanel.Builder<GroupSearchPanel\n \n         private static final long serialVersionUID = 6308997285778809578L;\n \n-        public Builder(final PropertyModel<List<SearchClause>> model) {\n+        public Builder(final IModel<List<SearchClause>> model) {\n             super(model);\n         }\n \n@@ -45,7 +45,7 @@ public GroupSearchPanel build(final String id) {\n     }\n \n     private GroupSearchPanel(final String id, final GroupSearchPanel.Builder builder) {\n-        super(id, builder.model, AnyTypeKind.USER, builder.required);\n+        super(id, AnyTypeKind.USER, builder);\n     }\n \n     @Override"},{"sha":"2904053542cf2d9cbc76f2fce50b7df401e3226e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":60,"deletions":20,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -20,6 +20,7 @@\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggle;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggleConfig;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -41,12 +42,15 @@\n import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckBox;\n+import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n@@ -74,6 +78,12 @@ public class SearchClausePanel extends FieldPanel<SearchClause> {\n \n     private final LoadableDetachableModel<List<Pair<Long, String>>> properties;\n \n+    private final Fragment operatorFragment;\n+\n+    private final Fragment searchButtonFragment;\n+\n+    private final AjaxSubmitLink searchButton;\n+\n     public SearchClausePanel(\n             final String id,\n             final String name,\n@@ -97,6 +107,22 @@ public SearchClausePanel(\n         this.groupNames = groupNames;\n         this.resourceNames = resourceNames;\n \n+        searchButton = new AjaxSubmitLink(\"search\") {\n+\n+            private static final long serialVersionUID = 5538299138211283825L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                send(this, Broadcast.BUBBLE, new SearchEvent(target));\n+            }\n+\n+        };\n+\n+        searchButtonFragment = new Fragment(\"operator\", \"searchButtonFragment\", this);\n+        searchButtonFragment.add(searchButton.setEnabled(false));\n+\n+        operatorFragment = new Fragment(\"operator\", \"operatorFragment\", this);\n+\n         field = new FormComponent<SearchClause>(\"container\", this.clause) {\n \n             private static final long serialVersionUID = 1L;\n@@ -172,6 +198,10 @@ public Pair<Long, String> transform(final String input) {\n         };\n     }\n \n+    public void enableSearch() {\n+        this.searchButton.setEnabled(true);\n+    }\n+\n     @Override\n     public SearchClause getModelObject() {\n         return this.clause.getObject();\n@@ -205,22 +235,8 @@ public final MarkupContainer add(final Component... childs) {\n     public FieldPanel<SearchClause> settingsDependingComponents() {\n         final SearchClause searchClause = this.clause.getObject();\n \n-        final WebMarkupContainer operatorContainer = new WebMarkupContainer(\"operatorContainer\") {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected void onComponentTag(final ComponentTag tag) {\n-                super.onComponentTag(tag);\n-                if (getIndex() == 0) {\n-                    tag.append(\"class\", \"glyphicon glyphicon-search\", \" \");\n-                }\n-            }\n-\n-        };\n-\n+        final WebMarkupContainer operatorContainer = new WebMarkupContainer(\"operatorContainer\");\n         operatorContainer.setOutputMarkupId(true);\n-\n         field.add(operatorContainer);\n \n         final BootstrapToggleConfig config = new BootstrapToggleConfig();\n@@ -230,7 +246,7 @@ protected void onComponentTag(final ComponentTag tag) {\n                 .withOnLabel(\"AND\")\n                 .withOffLabel(\"OR\");\n \n-        operatorContainer.add(new BootstrapToggle(\"operator\", new Model<Boolean>() {\n+        operatorFragment.add(new BootstrapToggle(\"operator\", new Model<Boolean>() {\n \n             private static final long serialVersionUID = 1L;\n \n@@ -249,12 +265,12 @@ public void setObject(final Boolean object) {\n \n             @Override\n             protected IModel<String> getOffLabel() {\n-                return Model.of(getString(\"Off\", null, \"Off\"));\n+                return Model.of(getString(\"Off\", null, \"OR\"));\n             }\n \n             @Override\n             protected IModel<String> getOnLabel() {\n-                return Model.of(getString(\"On\", null, \"On\"));\n+                return Model.of(getString(\"On\", null, \"AND\"));\n             }\n \n             @Override\n@@ -270,7 +286,13 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 });\n                 return checkBox;\n             }\n-        }.setVisible(getIndex() > 0).setOutputMarkupPlaceholderTag(true));\n+        }.setOutputMarkupPlaceholderTag(true));\n+\n+        if (getIndex() > 0) {\n+            operatorContainer.add(operatorFragment);\n+        } else {\n+            operatorContainer.add(searchButtonFragment);\n+        }\n \n         final AjaxDropDownChoicePanel<Pair<Long, String>> property = new AjaxDropDownChoicePanel<Pair<Long, String>>(\n                 \"property\", \"property\", new PropertyModel<Pair<Long, String>>(searchClause, \"property\") {\n@@ -531,6 +553,9 @@ public FieldPanel<SearchClause> clone() {\n                 getId(), name, null, required, types, anames, dnames, groupNames, resourceNames);\n         panel.setReadOnly(this.isReadOnly());\n         panel.setRequired(this.isRequired());\n+        if (searchButton.isEnabled()) {\n+            panel.enableSearch();\n+        }\n         return panel;\n     }\n \n@@ -582,4 +607,19 @@ public boolean evaluate(final Pair<Long, String> object) {\n             });\n         }\n     }\n+\n+    protected static class SearchEvent implements Serializable {\n+\n+        private static final long serialVersionUID = 2693338614198749301L;\n+\n+        private final AjaxRequestTarget target;\n+\n+        public SearchEvent(final AjaxRequestTarget target) {\n+            this.target = target;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n }"},{"sha":"8f9af18c2d12123592d4248a25dc20b9faa250c4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSearchPanel.java","status":"modified","additions":26,"deletions":2,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -19,18 +19,25 @@\n package org.apache.syncope.client.console.panels.search;\n \n import java.util.List;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.apache.wicket.model.IModel;\n \n public final class UserSearchPanel extends AnyObjectSearchPanel {\n \n     private static final long serialVersionUID = -1769527800450203738L;\n \n+    private final UserRestClient userRestClient = new UserRestClient();\n+\n     public static class Builder extends AnyObjectSearchPanel.Builder {\n \n         private static final long serialVersionUID = 6308997285778809578L;\n \n-        public Builder(final PropertyModel<List<SearchClause>> model) {\n+        public Builder(final IModel<List<SearchClause>> model) {\n             super(model);\n         }\n \n@@ -43,4 +50,21 @@ public UserSearchPanel build(final String id) {\n     private UserSearchPanel(final String id, final Builder builder) {\n         super(id, AnyTypeKind.USER, builder);\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n+            final String fiql = SearchUtils.buildFIQL(\n+                    UserSearchPanel.this.getModel().getObject(), SyncopeClient.getUserSearchConditionBuilder());\n+\n+            final List<UserTO> res = userRestClient.search(\n+                    \"/\", fiql, 1, 50, new SortParam<>(\"username\", true), AnyTypeKind.USER.name());\n+\n+            // let's provide result panel to be populated ....\n+            \n+        } else {\n+            super.onEvent(event);\n+        }\n+    }\n+\n }"},{"sha":"65cc7589e2ba6266a445b584980cabbe43af8d2d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":94,"deletions":196,"changes":290,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -18,257 +18,155 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import static org.apache.syncope.client.console.wizards.any.Details.LOG;\n-\n-import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggle;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggleConfig;\n+import java.util.ArrayList;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n+import org.apache.syncope.client.console.panels.search.GroupSearchPanel;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.CheckBox;\n+import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n \n public class Ownership extends WizardStep {\n \n     private static final long serialVersionUID = 855618618337931784L;\n \n-    private final UserRestClient userRestClient = new UserRestClient();\n-\n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n-\n     private final WebMarkupContainer ownerContainer;\n \n-    private final OwnerModel uOwnerModel;\n+    private final Fragment groupSearchFragment;\n \n-    private final OwnerModel gOwnerModel;\n+    private final Fragment userSearchFragment;\n \n     public Ownership(final GroupHandler groupHandler) {\n         super();\n-        final GroupTO groupTO = GroupHandler.class.cast(groupHandler).getInnerObject();\n \n-        ownerContainer = new WebMarkupContainer(\"ownerContainer\");\n-        ownerContainer.setOutputMarkupId(true);\n-        this.add(ownerContainer);\n+        final Model<Boolean> isGroupOwnership = Model.of(groupHandler.getInnerObject().getGroupOwner() != null);\n \n-        final ModalWindow userOwnerSelectWin = new ModalWindow(\"userOwnerSelectWin\");\n-        userOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        userOwnerSelectWin.setCookieName(\"create-userOwnerSelect-modal\");\n-        this.add(userOwnerSelectWin);\n-        final ModalWindow groupOwnerSelectWin = new ModalWindow(\"groupOwnerSelectWin\");\n-        groupOwnerSelectWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        groupOwnerSelectWin.setCookieName(\"create-groupOwnerSelect-modal\");\n-        this.add(groupOwnerSelectWin);\n-\n-        uOwnerModel = new OwnerModel(groupTO, AnyTypeKind.USER);\n-        @SuppressWarnings(\"unchecked\")\n-        final AjaxTextFieldPanel userOwner = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\", uOwnerModel, false);\n-        userOwner.setPlaceholder(\"userOwner\");\n-        userOwner.hideLabel();\n-        userOwner.setReadOnly(true).setOutputMarkupId(true);\n-        ownerContainer.add(userOwner);\n-        final AjaxLink<Void> userOwnerSelect = new IndicatingAjaxLink<Void>(\"userOwnerSelect\") {\n+        final BootstrapToggleConfig config = new BootstrapToggleConfig();\n+        config\n+                .withOnStyle(BootstrapToggleConfig.Style.info).withOffStyle(BootstrapToggleConfig.Style.warning)\n+                .withSize(BootstrapToggleConfig.Size.mini)\n+                .withOnLabel(AnyTypeKind.GROUP.name())\n+                .withOffLabel(AnyTypeKind.USER.name());\n \n-            private static final long serialVersionUID = -7978723352517770644L;\n+        add(new BootstrapToggle(\"ownership\", new Model<Boolean>() {\n \n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                userOwnerSelectWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    private static final long serialVersionUID = -7834632442532690940L;\n-\n-                    @Override\n-                    public Page createPage() {\n-//                        return new UserOwnerSelectModalPage(getPage().getPageReference(), userOwnerSelectWin);\n-                        return null;\n-                    }\n-                });\n-                userOwnerSelectWin.show(target);\n-            }\n-        };\n-        ownerContainer.add(userOwnerSelect.setEnabled(false));\n-        final IndicatingAjaxLink<Void> userOwnerReset = new IndicatingAjaxLink<Void>(\"userOwnerReset\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = 1L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                uOwnerModel.setObject(null);\n-                target.add(userOwner);\n+            public Boolean getObject() {\n+                return isGroupOwnership.getObject();\n             }\n-        };\n-        ownerContainer.add(userOwnerReset.setEnabled(false));\n-\n-        gOwnerModel = new OwnerModel(groupTO, AnyTypeKind.GROUP);\n-        @SuppressWarnings(\"unchecked\")\n-        final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\", gOwnerModel, false);\n-        groupOwner.setPlaceholder(\"groupOwner\");\n-        groupOwner.hideLabel();\n-        groupOwner.setReadOnly(true).setOutputMarkupId(true);\n-        ownerContainer.add(groupOwner);\n-        final AjaxLink<Void> groupOwnerSelect = new IndicatingAjaxLink<Void>(\"groupOwnerSelect\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                userOwnerSelectWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    private static final long serialVersionUID = -7834632442532690940L;\n+            public void setObject(final Boolean object) {\n \n-                    @Override\n-                    public Page createPage() {\n-//                        return new GroupSelectModalPage(getPage().getPageReference(), userOwnerSelectWin,\n-//                                GroupOwnerSelectPayload.class);\n-                        return null;\n-                    }\n-                });\n-                userOwnerSelectWin.show(target);\n             }\n-        };\n-        ownerContainer.add(groupOwnerSelect.setEnabled(false));\n-        final IndicatingAjaxLink<Void> groupOwnerReset = new IndicatingAjaxLink<Void>(\"groupOwnerReset\") {\n+        }, config) {\n \n-            private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = 1L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                gOwnerModel.setObject(null);\n-                target.add(groupOwner);\n+            protected IModel<String> getOffLabel() {\n+                return Model.of(getString(\"Off\", null, \"USER Owner\"));\n             }\n-        };\n-        ownerContainer.add(groupOwnerReset.setEnabled(false));\n-    }\n-\n-    /**\n-     * This is waiting for events from opened modal windows: first to get the selected user / group, then to update the\n-     * respective text panel.\n-     *\n-     * @param event event\n-     */\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        super.onEvent(event);\n-\n-        if (event.getPayload() instanceof UserOwnerSelectPayload) {\n-            uOwnerModel.setObject(((UserOwnerSelectPayload) event.getPayload()).getUserId());\n-        }\n-        if (event.getPayload() instanceof GroupOwnerSelectPayload) {\n-            gOwnerModel.setObject(((GroupOwnerSelectPayload) event.getPayload()).getGroupId());\n-        }\n \n-        if (event.getPayload() instanceof AjaxRequestTarget) {\n-            ((AjaxRequestTarget) event.getPayload()).add(ownerContainer);\n-        }\n-    }\n-\n-    private class OwnerModel implements IModel {\n-\n-        private static final long serialVersionUID = -3865621970810102714L;\n-\n-        private final GroupTO groupTO;\n+            @Override\n+            protected IModel<String> getOnLabel() {\n+                return Model.of(getString(\"On\", null, \"GROUP Owner\"));\n+            }\n \n-        private final AnyTypeKind type;\n+            @Override\n+            protected CheckBox newCheckBox(final String id, final IModel<Boolean> model) {\n+                final CheckBox checkBox = super.newCheckBox(id, model);\n+                checkBox.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n-        OwnerModel(final GroupTO groupTO, final AnyTypeKind type) {\n-            this.groupTO = groupTO;\n-            this.type = type;\n-        }\n+                    private static final long serialVersionUID = 1L;\n \n-        @Override\n-        public Object getObject() {\n-            String object = null;\n-\n-            switch (type) {\n-                case USER:\n-                    if (groupTO.getUserOwner() != null) {\n-                        UserTO user = null;\n-                        try {\n-                            user = userRestClient.read(groupTO.getUserOwner());\n-                        } catch (Exception e) {\n-                            LOG.warn(\"Could not find user with id {}, ignoring\", groupTO.getUserOwner(), e);\n-                        }\n-                        if (user == null) {\n-                            groupTO.setUserOwner(null);\n-                        } else {\n-                            object = user.getKey() + \" \" + user.getUsername();\n-                        }\n-                    }\n-                    break;\n-\n-                case GROUP:\n-                    GroupTO group = null;\n-                    if (groupTO.getGroupOwner() != null) {\n-                        try {\n-                            group = groupRestClient.read(groupTO.getGroupOwner());\n-                        } catch (Exception e) {\n-                            LOG.warn(\"Could not find group with id {}, ignoring\", groupTO.getGroupOwner(), e);\n-                        }\n-                        if (group == null) {\n-                            groupTO.setGroupOwner(null);\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        isGroupOwnership.setObject(!isGroupOwnership.getObject());\n+                        if (isGroupOwnership.getObject()) {\n+                            ownerContainer.addOrReplace(groupSearchFragment);\n                         } else {\n-                            object = group.getName();\n+                            ownerContainer.addOrReplace(userSearchFragment);\n                         }\n+                        target.add(ownerContainer);\n                     }\n-                    break;\n-\n-                default:\n+                });\n+                return checkBox;\n             }\n+        });\n \n-            return object;\n-        }\n+        ownerContainer = new WebMarkupContainer(\"ownerContainer\");\n+        ownerContainer.setOutputMarkupId(true);\n+        this.add(ownerContainer);\n \n-        @Override\n-        public void setObject(final Object object) {\n-            switch (type) {\n-                case USER:\n-                    groupTO.setUserOwner((Long) object);\n-                    break;\n+        groupSearchFragment = new Fragment(\"search\", \"groupSearchFragment\", this);\n+        final GroupSearchPanel groupSearchPanel = new GroupSearchPanel.Builder(\n+                new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(\"groupsearch\");\n+        groupSearchFragment.add(groupSearchPanel.setRenderBodyOnly(true));\n \n-                case GROUP:\n-                    groupTO.setGroupOwner((Long) object);\n-                    break;\n+        userSearchFragment = new Fragment(\"search\", \"userSearchFragment\", this);\n+        final AnyObjectSearchPanel userSearchPanel = new UserSearchPanel.Builder(\n+                new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(\"usersearch\");\n+        userSearchFragment.add(userSearchPanel.setRenderBodyOnly(true));\n \n-                default:\n-            }\n+        if (isGroupOwnership.getObject()) {\n+            ownerContainer.add(groupSearchFragment);\n+        } else {\n+            ownerContainer.add(userSearchFragment);\n         }\n \n-        @Override\n-        public void detach() {\n-            // ignore\n-        }\n-    }\n+        final GroupTO groupTO = GroupHandler.class.cast(groupHandler).getInnerObject();\n \n-    public static class UserOwnerSelectPayload {\n+        final AjaxTextFieldPanel userOwner\n+                = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\", new Model<String>(), false);\n+        userOwner.setPlaceholder(\"userOwner\");\n+        userOwner.hideLabel();\n+        userOwner.setReadOnly(true).setOutputMarkupId(true);\n+        userSearchFragment.add(userOwner);\n \n-        private final Long userId;\n+        final IndicatingAjaxLink<Void> userOwnerReset = new IndicatingAjaxLink<Void>(\"userOwnerReset\") {\n \n-        public UserOwnerSelectPayload(final Long userId) {\n-            this.userId = userId;\n-        }\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-        public Long getUserId() {\n-            return userId;\n-        }\n-    }\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                target.add(userOwner);\n+            }\n+        };\n+        userSearchFragment.add(userOwnerReset.setEnabled(false));\n \n-    public static class GroupOwnerSelectPayload {\n+        final AjaxTextFieldPanel groupOwner\n+                = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\", new Model<String>(), false);\n+        groupOwner.setPlaceholder(\"groupOwner\");\n+        groupOwner.hideLabel();\n+        groupOwner.setReadOnly(true).setOutputMarkupId(true);\n+        groupSearchFragment.add(groupOwner);\n \n-        private final Long groupId;\n+        final IndicatingAjaxLink<Void> groupOwnerReset = new IndicatingAjaxLink<Void>(\"groupOwnerReset\") {\n \n-        public GroupOwnerSelectPayload(final Long groupId) {\n-            this.groupId = groupId;\n-        }\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-        public Long getGroupId() {\n-            return groupId;\n-        }\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                target.add(groupOwner);\n+            }\n+        };\n+        groupSearchFragment.add(groupOwnerReset.setEnabled(false));\n     }\n }"},{"sha":"39a0942d83548c2c212b9ce4da4310ed893e3547","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -232,7 +232,7 @@ div.basepage-content{\n \n .wizard-view > div {\n   display: block;\n-  height: 100%;\n+  height: 98%;\n   position: relative;\n }\n \n@@ -334,3 +334,7 @@ div.wrap{\n END - Style for Information panel\n */\n \n+#ownership div.toggle {\n+  width: 110px !important;\n+}\n+"},{"sha":"bf8165ebb1bcd9a2092f682f4613545942daaff4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/search/SearchClausePanel.html","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.html?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -27,6 +27,14 @@\n         <span wicket:id=\"comparator\" class=\"field comparator\"/>\n         <span wicket:id=\"value\" class=\"field value\"/>\n       </span>\n+\n+      <wicket:fragment wicket:id=\"searchButtonFragment\">\n+        <a href=\"#\" wicket:id=\"search\"><li class=\"glyphicon glyphicon-search\"></li></a>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"operatorFragment\">\n+        <span wicket:id=\"operator\"/>\n+      </wicket:fragment>\n     </wicket:extend>\n   </body>\n </html>"},{"sha":"2a3a9164a69a4a49839b0bd5d0806826dd674c5d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Ownership.html","status":"modified","additions":13,"deletions":6,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c95ca2fd2f47dbe680798058ed6da1827a10b1f3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html?ref=c95ca2fd2f47dbe680798058ed6da1827a10b1f3","patch":"@@ -20,22 +20,29 @@\n   <head><title></title></head>\n   <body>\n     <wicket:panel>\n+      <div id=\"ownership\">\n+        <span wicket:id=\"ownership\">[OWNERSHIP]</span>\n+      </div>\n+\n       <div wicket:id=\"ownerContainer\">\n+        <span wicket:id=\"search\">[SEARCH]</span>\n+      </div>\n+\n+      <wicket:fragment wicket:id=\"userSearchFragment\">\n         <div class=\"form-group input-group\">\n           <span wicket:id=\"userOwner\"/>\n-          <a href=\"#\" wicket:id=\"userOwnerSelect\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\" alt=\"select group owner\" title=\"Search\"></i></a>\n           <a href=\"#\" wicket:id=\"userOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset user owner\" title=\"Delete\"></i></a>\n         </div>\n+        <span wicket:id=\"usersearch\">[USER SEARCH]</span>\n+      </wicket:fragment>\n \n+      <wicket:fragment wicket:id=\"groupSearchFragment\">\n         <div class=\"form-group input-group\">\n           <span wicket:id=\"groupOwner\"/>\n-          <a href=\"#\" wicket:id=\"groupOwnerSelect\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\" alt=\"select group owner\" title=\"Search\"></i></a>\n           <a href=\"#\" wicket:id=\"groupOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset group owner\" title=\"Delete\"></i></a>\n         </div>\n-      </div>\n-\n-      <span wicket:id=\"userOwnerSelectWin\"/>\n-      <span wicket:id=\"groupOwnerSelectWin\"/>\n+        <span wicket:id=\"groupsearch\">[GROUP SEARCH]</span>\n+      </wicket:fragment>\n     </wicket:panel>\n   </body>\n </html>"}]}