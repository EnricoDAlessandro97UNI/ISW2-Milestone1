{"sha":"9cbeffd396b76cdd52768145be1cb9a5460211a8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjljYmVmZmQzOTZiNzZjZGQ1Mjc2ODE0NWJlMWNiOWE1NDYwMjExYTg=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-02-19T11:11:38Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-02-19T11:11:38Z"},"message":"[SYNCOPE-645] Merge from 1_2_X","tree":{"sha":"6f185865dde3b522779a0f1e898cfede4917f677","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6f185865dde3b522779a0f1e898cfede4917f677"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9cbeffd396b76cdd52768145be1cb9a5460211a8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9cbeffd396b76cdd52768145be1cb9a5460211a8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9cbeffd396b76cdd52768145be1cb9a5460211a8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9cbeffd396b76cdd52768145be1cb9a5460211a8/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"fc06e742d6c0b506e62372f84cd796424674c3bb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fc06e742d6c0b506e62372f84cd796424674c3bb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fc06e742d6c0b506e62372f84cd796424674c3bb"},{"sha":"583e83905f533293ee621e9fce0d82fecfdb1938","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/583e83905f533293ee621e9fce0d82fecfdb1938","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/583e83905f533293ee621e9fce0d82fecfdb1938"}],"stats":{"total":35,"additions":35,"deletions":0},"files":[{"sha":"2cc90f06b5551c935f4bc7f1303ac91209212078","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ExternalResourceValidator.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9cbeffd396b76cdd52768145be1cb9a5460211a8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9cbeffd396b76cdd52768145be1cb9a5460211a8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=9cbeffd396b76cdd52768145be1cb9a5460211a8","patch":"@@ -20,11 +20,13 @@\n \n import javax.validation.ConstraintValidatorContext;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.types.AttributableType;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Mapping;\n import org.apache.syncope.core.persistence.api.entity.MappingItem;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n+import org.apache.syncope.core.persistence.api.entity.user.UMapping;\n \n public class ExternalResourceValidator extends AbstractValidator<ExternalResourceCheck, ExternalResource> {\n \n@@ -74,6 +76,16 @@ private boolean isValid(final Mapping<?> mapping, final ConstraintValidatorConte\n             return false;\n         }\n \n+        final MappingItem accountId = mapping.getAccountIdItem();\n+        if (mapping instanceof UMapping\n+                && AttributableType.ROLE == accountId.getIntMappingType().getAttributableType()) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidMapping,\n+                            \"Role attribute as accountId is not permitted\")).\n+                    addPropertyNode(\"attributableType\").addConstraintViolation();\n+            return false;\n+        }\n+\n         boolean isValid = true;\n \n         int passwords = 0;"},{"sha":"103b9bbe0fe3995e4c0675d25810ad166179d4d1","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/ResourceTest.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9cbeffd396b76cdd52768145be1cb9a5460211a8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9cbeffd396b76cdd52768145be1cb9a5460211a8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FResourceTest.java?ref=9cbeffd396b76cdd52768145be1cb9a5460211a8","patch":"@@ -263,4 +263,27 @@ public void issueSYNCOPE418() {\n             assertTrue(e.hasViolation(EntityViolationType.InvalidName));\n         }\n     }\n+\n+    @Test(expected = InvalidEntityException.class)\n+    public void issueSYNCOPE645() {\n+        ExternalResource resource = entityFactory.newEntity(ExternalResource.class);\n+        resource.setKey(\"ws-target-resource-basic-save-invalid\");\n+\n+        ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();\n+        resource.setConnector(connector);\n+\n+        UMapping mapping = entityFactory.newEntity(UMapping.class);\n+        resource.setUmapping(mapping);\n+\n+        final UMappingItem item = entityFactory.newEntity(UMappingItem.class);\n+        item.setIntAttrName(\"icon\");\n+        item.setExtAttrName(\"icon\");\n+        item.setIntMappingType(IntMappingType.RolePlainSchema);\n+        item.setPurpose(MappingPurpose.BOTH);\n+        mapping.setAccountIdItem(item);\n+\n+        // save the resource\n+        ExternalResource actual = resourceDAO.save(resource);\n+        assertNotNull(actual);\n+    }\n }"}]}