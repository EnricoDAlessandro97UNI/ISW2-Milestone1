{"sha":"f62714915fc141118b043bd56087468b64b470a7","node_id":"C_kwDOJfYA1toAKGY2MjcxNDkxNWZjMTQxMTE4YjA0M2JkNTYwODc0NjhiNjRiNDcwYTc","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-11-10T13:45:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-11-10T13:53:24Z"},"message":"[SYNCOPE-1649] Using Tika's ToTextContentHandler for CSV output","tree":{"sha":"9a57543a90491c1d4489dc291c06eda1e7fb7efb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9a57543a90491c1d4489dc291c06eda1e7fb7efb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f62714915fc141118b043bd56087468b64b470a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f62714915fc141118b043bd56087468b64b470a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f62714915fc141118b043bd56087468b64b470a7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f62714915fc141118b043bd56087468b64b470a7/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"74951cd7d37bcbb899ed8ceb81d1f0f51b666ebd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/74951cd7d37bcbb899ed8ceb81d1f0f51b666ebd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/74951cd7d37bcbb899ed8ceb81d1f0f51b666ebd"}],"stats":{"total":74,"additions":19,"deletions":55},"files":[{"sha":"dd1fe37c171b12724c43bf85970eadafccc84417","filename":"core/idrepo/logic/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f62714915fc141118b043bd56087468b64b470a7/core%2Fidrepo%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f62714915fc141118b043bd56087468b64b470a7/core%2Fidrepo%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fpom.xml?ref=f62714915fc141118b043bd56087468b64b470a7","patch":"@@ -66,6 +66,11 @@ under the License.\n       <artifactId>fop</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.tika</groupId>\n+      <artifactId>tika-core</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n       <artifactId>log4j-core</artifactId>"},{"sha":"8a866492f433855cbe3bb8825baabcd26b807c47","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/cocoon/TextSerializer.java","status":"modified","additions":14,"deletions":55,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f62714915fc141118b043bd56087468b64b470a7/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FTextSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f62714915fc141118b043bd56087468b64b470a7/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FTextSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fcocoon%2FTextSerializer.java?ref=f62714915fc141118b043bd56087468b64b470a7","patch":"@@ -18,66 +18,25 @@\n  */\n package org.apache.syncope.core.logic.cocoon;\n \n-import org.apache.cocoon.sax.component.XMLSerializer;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.Locator;\n-import org.xml.sax.SAXException;\n+import java.io.OutputStream;\n+import java.io.OutputStreamWriter;\n+import java.nio.charset.StandardCharsets;\n+import org.apache.cocoon.pipeline.caching.CacheKey;\n+import org.apache.cocoon.pipeline.caching.SimpleCacheKey;\n+import org.apache.cocoon.pipeline.component.CachingPipelineComponent;\n+import org.apache.cocoon.sax.AbstractSAXSerializer;\n+import org.apache.tika.sax.ToTextContentHandler;\n \n-/**\n- * Converts XML into plain text. It omits all XML tags and writes only character events to the output. Input document\n- * must have at least one element - root element - which should wrap all the text inside it.\n- *\n- */\n-public class TextSerializer extends XMLSerializer {\n-\n-    private static final String UTF_8 = \"UTF-8\";\n-\n-    private static final String TXT = \"text\";\n-\n-    public TextSerializer() {\n-        super();\n-        super.setOmitXmlDeclaration(true);\n-    }\n-\n-    @Override\n-    public void setDocumentLocator(final Locator locator) {\n-        // nothing\n-    }\n-\n-    @Override\n-    public void processingInstruction(final String target, final String data)\n-            throws SAXException {\n-        // nothing\n-    }\n-\n-    @Override\n-    public void startDTD(final String name, final String publicId, final String systemId)\n-            throws SAXException {\n-        // nothing\n-    }\n+public class TextSerializer extends AbstractSAXSerializer implements CachingPipelineComponent {\n \n     @Override\n-    public void endDTD() throws SAXException {\n-        // nothing\n+    public void setOutputStream(final OutputStream outputStream) {\n+        super.setOutputStream(outputStream);\n+        setContentHandler(new ToTextContentHandler(new OutputStreamWriter(outputStream, StandardCharsets.UTF_8)));\n     }\n \n     @Override\n-    public void startElement(final String uri, final String loc, final String raw, final Attributes atts)\n-            throws SAXException {\n-        // nothing\n-    }\n-\n-    @Override\n-    public void endElement(final String uri, final String name, final String raw)\n-            throws SAXException {\n-        // nothing\n-    }\n-\n-    public static TextSerializer createPlainSerializer() {\n-        final TextSerializer serializer = new TextSerializer();\n-        serializer.setContentType(\"text/plain; charset=\" + UTF_8);\n-        serializer.setEncoding(UTF_8);\n-        serializer.setMethod(TXT);\n-        return serializer;\n+    public CacheKey constructCacheKey() {\n+        return new SimpleCacheKey();\n     }\n }"}]}