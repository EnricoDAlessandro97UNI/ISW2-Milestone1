{"sha":"6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY5MzhiM2NkODRlZmQ5MmQzOTdkY2M3ZDY1YTNmMWE3ZTlkZTQyMGM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-12-27T15:47:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-12-27T15:47:38Z"},"message":"[SYNCOPE-1418] Minor modifications in preparation to Spring Boot","tree":{"sha":"7d2d3e02031c294dde9ea9559ef5a6ed49e31d48","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7d2d3e02031c294dde9ea9559ef5a6ed49e31d48"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e0d5229a7e9a7535b3dd9013dd4a842b79883e35","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e0d5229a7e9a7535b3dd9013dd4a842b79883e35","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e0d5229a7e9a7535b3dd9013dd4a842b79883e35"}],"stats":{"total":114,"additions":55,"deletions":59},"files":[{"sha":"b0062a49bf99fef509c806be4e01bb3971083853","filename":"core/idrepo/rest-cxf/src/main/resources/META-INF/web-fragment.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -49,7 +49,7 @@ under the License.\n   <servlet-mapping>\n     <servlet-name>WADLServlet</servlet-name>\n     <url-pattern>/index.html</url-pattern>\n-    <url-pattern>/schema_1_syncope21.html</url-pattern>\n+    <url-pattern>/schema_1_syncope30.html</url-pattern>\n     <url-pattern>/syncope.wadl</url-pattern>\n   </servlet-mapping>\n "},{"sha":"11e97d8eb8a72c7fa9cbea6ccb9c3b5ccada935d","filename":"core/idrepo/rest-cxf/src/main/resources/restCXFContext.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -41,8 +41,8 @@ under the License.\n   <bean id=\"jaxbProvider\" class=\"org.apache.cxf.jaxrs.provider.JAXBElementProvider\">\n     <property name=\"namespacePrefixes\">\n       <map>\n-        <entry key=\"http://syncope.apache.org/2.1\">\n-          <value>syncope21</value>\n+        <entry key=\"http://syncope.apache.org/30\">\n+          <value>syncope30</value>\n         </entry>\n       </map>      \n     </property>\n@@ -96,7 +96,7 @@ under the License.\n   \n   <bean id=\"wadlGenerator\" class=\"org.apache.syncope.core.rest.cxf.WadlGenerator\">\n     <property name=\"applicationTitle\" value=\"Apache Syncope ${syncope.version}\"/>\n-    <property name=\"namespacePrefix\" value=\"syncope21\"/>\n+    <property name=\"namespacePrefix\" value=\"syncope30\"/>\n     <property name=\"incrementNamespacePrefix\" value=\"false\"/>    \n     <property name=\"linkAnyMediaTypeToXmlSchema\" value=\"true\"/>\n     <property name=\"useJaxbContextForQnames\" value=\"true\"/>"},{"sha":"efef0bac8ef892141e9ff3e3ac7606ae26a3f6d1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPlainSchemaDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Lazy;\n \n public class JPAPlainSchemaDAO extends AbstractDAO<PlainSchema> implements PlainSchemaDAO {\n \n@@ -43,6 +44,7 @@ public class JPAPlainSchemaDAO extends AbstractDAO<PlainSchema> implements Plain\n     private PlainAttrDAO plainAttrDAO;\n \n     @Autowired\n+    @Lazy\n     private ExternalResourceDAO resourceDAO;\n \n     @Override"},{"sha":"2afe4dac72f112de6062611e3fa9665ce9d4530b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/spring/CommonEntityManagerFactoryConf.java","status":"modified","additions":3,"deletions":23,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FCommonEntityManagerFactoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FCommonEntityManagerFactoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FCommonEntityManagerFactoryConf.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -22,21 +22,14 @@\n import java.util.Map;\n import javax.persistence.ValidationMode;\n import javax.sql.DataSource;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.persistence.api.DomainsHolder;\n-import org.springframework.beans.BeansException;\n-import org.springframework.beans.factory.InitializingBean;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.context.ApplicationContextAware;\n import org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor;\n \n /**\n  * Container for common configuration options among all EntityManagerFactory entities (one for each domain).\n  * Acts as a commodity place for fetching each domain's {@link DataSource}..\n  */\n-public class CommonEntityManagerFactoryConf implements DomainsHolder, InitializingBean, ApplicationContextAware {\n-\n-    private ApplicationContext ctx;\n+public class CommonEntityManagerFactoryConf implements DomainsHolder {\n \n     private final Map<String, DataSource> domains = new HashMap<>();\n \n@@ -48,20 +41,8 @@ public class CommonEntityManagerFactoryConf implements DomainsHolder, Initializi\n \n     private final Map<String, Object> jpaPropertyMap = new HashMap<>();\n \n-    @Override\n-    public void setApplicationContext(final ApplicationContext ctx) throws BeansException {\n-        this.ctx = ctx;\n-    }\n-\n-    @Override\n-    public void afterPropertiesSet() {\n-        for (Map.Entry<String, DataSource> entry : ctx.getBeansOfType(DataSource.class).entrySet()) {\n-            if (!entry.getKey().startsWith(\"local\")) {\n-                this.domains.put(\n-                        StringUtils.substringBefore(entry.getKey(), DataSource.class.getSimpleName()),\n-                        entry.getValue());\n-            }\n-        }\n+    public void addDomain(final String domain, final DataSource datasource) {\n+        this.domains.put(domain, datasource);\n     }\n \n     @Override\n@@ -102,5 +83,4 @@ public void setJpaPropertyMap(final Map<String, ?> jpaProperties) {\n             this.jpaPropertyMap.putAll(jpaProperties);\n         }\n     }\n-\n }"},{"sha":"e7ae68195742db4b2eea176d062b161968d4b987","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/spring/DomainEntityManagerFactoryBean.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainEntityManagerFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainEntityManagerFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainEntityManagerFactoryBean.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -40,6 +40,7 @@ public void setCommonEntityManagerFactoryConf(final CommonEntityManagerFactoryCo\n         if (commonEMFConf.getPersistenceUnitPostProcessors() != null) {\n             super.setPersistenceUnitPostProcessors(commonEMFConf.getPersistenceUnitPostProcessors());\n         }\n-    }\n \n+        commonEMFConf.addDomain(this.getPersistenceUnitName(), this.getDataSource());\n+    }\n }"},{"sha":"c12d823c98a2ec08590d8f531ccfa05db6edd7bf","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/cache/VirAttrCache.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fcache%2FVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fcache%2FVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fcache%2FVirAttrCache.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -23,6 +23,12 @@\n  */\n public interface VirAttrCache {\n \n+    default void setTtl(int ttl) {\n+    }\n+\n+    default void setMaxCacheSize(int maxCacheSize) {\n+    }\n+\n     /**\n      * Force entry expiring.\n      *"},{"sha":"95c302671d161d8b011307f11dc9557c07321a5d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/job/JobManager.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobManager.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -44,5 +44,4 @@ void register(Report report, Date startAt, long interruptMaxRetries)\n     void unregister(Task task);\n \n     void unregister(Report report);\n-\n }"},{"sha":"eb536dff5ba3620c021314153702e7ea471c2689","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/cache/DisabledVirAttrCache.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FDisabledVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FDisabledVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FDisabledVirAttrCache.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -26,10 +26,6 @@\n  */\n public class DisabledVirAttrCache implements VirAttrCache {\n \n-    public DisabledVirAttrCache(final int ttl, final int maxCacheSize) {\n-        // ignore\n-    }\n-\n     @Override\n     public void expire(final String type, final String key, final String schemaKey) {\n         // nothing to do\n@@ -49,5 +45,4 @@ public boolean isValidEntry(final VirAttrCacheValue value) {\n     public void put(final String type, final String key, final String schemaName, final VirAttrCacheValue value) {\n         // nothing to do\n     }\n-\n }"},{"sha":"e5c1b42ad71f93e538ad17abf1998aea78b7b7c2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/cache/MemoryVirAttrCache.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FMemoryVirAttrCache.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FMemoryVirAttrCache.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fcache%2FMemoryVirAttrCache.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -35,20 +35,25 @@ public class MemoryVirAttrCache implements VirAttrCache {\n     /**\n      * Elapsed time in seconds.\n      */\n-    protected int ttl;\n+    protected int ttl = 60;\n \n     /**\n      * Max cache size.\n      */\n-    protected int maxCacheSize;\n+    protected int maxCacheSize = 5000;\n \n     /**\n      * Cache entries.\n      */\n     protected final Map<VirAttrCacheKey, VirAttrCacheValue> cache = new HashMap<>();\n \n-    public MemoryVirAttrCache(final int ttl, final int maxCacheSize) {\n+    @Override\n+    public void setTtl(final int ttl) {\n         this.ttl = ttl;\n+    }\n+\n+    @Override\n+    public void setMaxCacheSize(final int maxCacheSize) {\n         this.maxCacheSize = maxCacheSize;\n     }\n "},{"sha":"c59c881df639c33de087616fa27980577ec94ab6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/JobManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -396,7 +396,7 @@ public void load() {\n         try {\n             SystemLoadReporterJob job = createSpringBean(SystemLoadReporterJob.class);\n             registerJob(\n-                    \"systemLoadReporterJob\",\n+                    StringUtils.uncapitalize(SystemLoadReporterJob.class.getSimpleName()),\n                     job,\n                     \"0 * * * * ?\",\n                     null,"},{"sha":"e8436f78053c0d54bfd165a0735f5d184c3b8e30","filename":"core/provisioning-java/src/main/resources/provisioningContext.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -108,8 +108,8 @@ under the License.\n   <bean class=\"org.apache.syncope.core.provisioning.java.propagation.PropagationManagerImpl\"/>\n \n   <bean id=\"virAttrCache\" class=\"${virAttrCache}\" scope=\"singleton\">\n-    <constructor-arg value=\"60\"/>\n-    <constructor-arg value=\"5000\"/>\n+    <property name=\"ttl\" value=\"60\"/>\n+    <property name=\"maxCacheSize\" value=\"5000\"/>\n   </bean>\n \n   <bean id=\"connIdBundleManager\" class=\"org.apache.syncope.core.provisioning.java.ConnIdBundleManagerImpl\">"},{"sha":"db36f44dc3c9309d8f6b7a536abc45c3743470ce","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/Encryptor.java","status":"modified","additions":24,"deletions":16,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -142,6 +142,8 @@ public static Encryptor getInstance(final String secretKey) {\n         return instance;\n     }\n \n+    private final Map<CipherAlgorithm, StandardStringDigester> digesters = new ConcurrentHashMap<>();\n+\n     private SecretKeySpec keySpec;\n \n     private Encryptor(final String secretKey) {\n@@ -230,24 +232,30 @@ public String decode(final String encodedValue, final CipherAlgorithm cipherAlgo\n     }\n \n     private StandardStringDigester getDigester(final CipherAlgorithm cipherAlgorithm) {\n-        StandardStringDigester digester = new StandardStringDigester();\n-\n-        if (cipherAlgorithm.getAlgorithm().startsWith(\"S-\")) {\n-            // Salted ...\n-            digester.setAlgorithm(cipherAlgorithm.getAlgorithm().replaceFirst(\"S\\\\-\", \"\"));\n-            digester.setIterations(SALT_ITERATIONS);\n-            digester.setSaltSizeBytes(SALT_SIZE_BYTES);\n-            digester.setInvertPositionOfPlainSaltInEncryptionResults(IPOPSIER);\n-            digester.setInvertPositionOfSaltInMessageBeforeDigesting(IPOSIMBD);\n-            digester.setUseLenientSaltSizeCheck(ULSSC);\n-        } else {\n-            // Not salted ...\n-            digester.setAlgorithm(cipherAlgorithm.getAlgorithm());\n-            digester.setIterations(1);\n-            digester.setSaltSizeBytes(0);\n+        StandardStringDigester digester = digesters.get(cipherAlgorithm);\n+        if (digester == null) {\n+            digester = new StandardStringDigester();\n+\n+            if (cipherAlgorithm.getAlgorithm().startsWith(\"S-\")) {\n+                // Salted ...\n+                digester.setAlgorithm(cipherAlgorithm.getAlgorithm().replaceFirst(\"S\\\\-\", \"\"));\n+                digester.setIterations(SALT_ITERATIONS);\n+                digester.setSaltSizeBytes(SALT_SIZE_BYTES);\n+                digester.setInvertPositionOfPlainSaltInEncryptionResults(IPOPSIER);\n+                digester.setInvertPositionOfSaltInMessageBeforeDigesting(IPOSIMBD);\n+                digester.setUseLenientSaltSizeCheck(ULSSC);\n+            } else {\n+                // Not salted ...\n+                digester.setAlgorithm(cipherAlgorithm.getAlgorithm());\n+                digester.setIterations(1);\n+                digester.setSaltSizeBytes(0);\n+            }\n+\n+            digester.setStringOutputType(CommonUtils.STRING_OUTPUT_TYPE_HEXADECIMAL);\n+\n+            digesters.put(cipherAlgorithm, digester);\n         }\n \n-        digester.setStringOutputType(CommonUtils.STRING_OUTPUT_TYPE_HEXADECIMAL);\n         return digester;\n     }\n }"},{"sha":"fb6f1f7b555a357bdc5cf99259318c97c50a8e6d","filename":"fit/core-reference/src/main/resources/jboss/restCXFContext.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6938b3cd84efd92d397dcc7d65a3f1a7e9de420c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FrestCXFContext.xml?ref=6938b3cd84efd92d397dcc7d65a3f1a7e9de420c","patch":"@@ -41,8 +41,8 @@ under the License.\n   <bean id=\"jaxbProvider\" class=\"org.apache.cxf.jaxrs.provider.JAXBElementProvider\">\n     <property name=\"namespacePrefixes\">\n       <map>\n-        <entry key=\"http://syncope.apache.org/2.1\">\n-          <value>syncope21</value>\n+        <entry key=\"http://syncope.apache.org/3.0\">\n+          <value>syncope30</value>\n         </entry>\n       </map>      \n     </property>\n@@ -96,7 +96,7 @@ under the License.\n   \n   <bean id=\"wadlGenerator\" class=\"org.apache.syncope.core.rest.cxf.WadlGenerator\">\n     <property name=\"applicationTitle\" value=\"Apache Syncope ${syncope.version}\"/>\n-    <property name=\"namespacePrefix\" value=\"syncope21\"/>\n+    <property name=\"namespacePrefix\" value=\"syncope30\"/>\n     <property name=\"incrementNamespacePrefix\" value=\"false\"/>    \n     <property name=\"linkAnyMediaTypeToXmlSchema\" value=\"true\"/>\n     <property name=\"useJaxbContextForQnames\" value=\"true\"/>"}]}