{"sha":"b9bb64fe180a0f28ade487385cf48a1f9da6f919","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI5YmI2NGZlMTgwYTBmMjhhZGU0ODczODVjZjQ4YTFmOWRhNmY5MTk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-07-25T10:07:05Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-07-25T10:07:05Z"},"message":"Missing commit...\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247048 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ad2a937bc4c3a8e38b717d98265eb106e1ae0257","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ad2a937bc4c3a8e38b717d98265eb106e1ae0257"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b9bb64fe180a0f28ade487385cf48a1f9da6f919","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b9bb64fe180a0f28ade487385cf48a1f9da6f919","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b9bb64fe180a0f28ade487385cf48a1f9da6f919","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b9bb64fe180a0f28ade487385cf48a1f9da6f919/comments","author":null,"committer":null,"parents":[{"sha":"aa6cf1057499970d1c3d5b6f737f660646f16c89","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aa6cf1057499970d1c3d5b6f737f660646f16c89","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/aa6cf1057499970d1c3d5b6f737f660646f16c89"}],"stats":{"total":74,"additions":72,"deletions":2},"files":[{"sha":"cbdcb7c39b32169efdaf76e82145e57754d5adda","filename":"core/src/main/java/org/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":72,"deletions":2,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b9bb64fe180a0f28ade487385cf48a1f9da6f919/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b9bb64fe180a0f28ade487385cf48a1f9da6f919/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=b9bb64fe180a0f28ade487385cf48a1f9da6f919","patch":"@@ -14,34 +14,99 @@\n  */\n package org.syncope.core.rest.data;\n \n+import java.util.Date;\n import java.util.List;\n+import javassist.NotFoundException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.PropagationTaskTO;\n+import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.to.TaskExecTO;\n import org.syncope.client.to.TaskTO;\n import org.syncope.core.persistence.beans.PropagationTask;\n+import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.syncope.core.persistence.dao.ResourceDAO;\n+import org.syncope.core.persistence.dao.RoleDAO;\n import org.syncope.core.util.TaskUtil;\n \n @Component\n public class TaskDataBinder {\n \n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(\n+            TaskDataBinder.class);\n+\n     private static final String[] IGNORE_TASK_PROPERTIES = {\n         \"executions\", \"resource\", \"defaultResources\", \"defaultRoles\",\n         \"updateIdentities\"};\n \n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = {\n         \"task\"};\n \n-    public TaskExecTO getTaskExecutionTO(\n-            final TaskExec execution) {\n+    @Autowired\n+    private ResourceDAO resourceDAO;\n+\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n+    public SchedTask getSchedTask(final SchedTaskTO taskTO,\n+            final TaskUtil taskUtil)\n+            throws NotFoundException {\n+\n+        SchedTask task = taskUtil.newTask();\n+        task.setCronExpression(taskTO.getCronExpression());\n+\n+        if (task instanceof SchedTask) {\n+            task.setJobClassName(taskTO.getJobClassName());\n+        }\n+        if (task instanceof SyncTask) {\n+            SyncTaskTO syncTaskTO = (SyncTaskTO) taskTO;\n+\n+            TargetResource resource = resourceDAO.find(syncTaskTO.getResource());\n+            if (resource == null) {\n+                throw new NotFoundException(\"Resource \"\n+                        + syncTaskTO.getResource());\n+            }\n+            ((SyncTask) task).setResource(resource);\n+\n+            for (String resourceName : syncTaskTO.getDefaultResources()) {\n+                resource = resourceDAO.find(resourceName);\n+                if (resource == null) {\n+                    LOG.warn(\"Ignoring invalid resource \" + resourceName);\n+                } else {\n+                    ((SyncTask) task).addDefaultResource(resource);\n+                }\n+            }\n+\n+            SyncopeRole role;\n+            for (Long roleId : syncTaskTO.getDefaultRoles()) {\n+                role = roleDAO.find(roleId);\n+                if (role == null) {\n+                    LOG.warn(\"Ignoring invalid role \" + roleId);\n+                } else {\n+                    ((SyncTask) task).addDefaultRole(role);\n+                }\n+            }\n+\n+            ((SyncTask) task).setUpdateIdentities(\n+                    syncTaskTO.isUpdateIdentities());\n+        }\n+\n+        return task;\n+    }\n \n+    public TaskExecTO getTaskExecutionTO(final TaskExec execution) {\n         TaskExecTO executionTO = new TaskExecTO();\n         BeanUtils.copyProperties(execution, executionTO,\n                 IGNORE_TASK_EXECUTION_PROPERTIES);\n@@ -66,9 +131,14 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n                 break;\n \n             case SCHED:\n+                ((SchedTaskTO) taskTO).setLastExec(new Date());\n+                ((SchedTaskTO) taskTO).setNextExec(new Date());\n                 break;\n \n             case SYNC:\n+                ((SyncTaskTO) taskTO).setLastExec(new Date());\n+                ((SyncTaskTO) taskTO).setNextExec(new Date());\n+\n                 ((SyncTaskTO) taskTO).setResource(\n                         ((SyncTask) task).getResource().getName());\n                 for (TargetResource resource :"}]}