{"sha":"b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI4MGNkM2NkODhmYTRjM2JiMGZiNmQyZTRlNjU2M2E3MGNlZTk3NDM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-05T16:21:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-05T16:21:26Z"},"message":"Some UMapping / UMappingItems left in Resource DataBinder now fixed + added a dedicated IT\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/DEV_ROLE_PROVISIONING@1417507 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a298f3479d5637e4cea451a60db80251dd7f57bb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a298f3479d5637e4cea451a60db80251dd7f57bb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"cc2ffa8912f74a127bb3597282a41ab05d112f52","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc2ffa8912f74a127bb3597282a41ab05d112f52","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cc2ffa8912f74a127bb3597282a41ab05d112f52"}],"stats":{"total":42,"additions":30,"deletions":12},"files":[{"sha":"3c45179493b793f7bb6d046ab6fedd6215aec5d0","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743","patch":"@@ -39,6 +39,7 @@\n import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n import org.apache.syncope.core.persistence.beans.SyncPolicy;\n import org.apache.syncope.core.persistence.beans.role.RMapping;\n+import org.apache.syncope.core.persistence.beans.role.RMappingItem;\n import org.apache.syncope.core.persistence.beans.user.UMapping;\n import org.apache.syncope.core.persistence.beans.user.UMappingItem;\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n@@ -109,12 +110,12 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n         if (resourceTO.getUmapping() != null) {\n             UMapping mapping = new UMapping();\n             resource.setUmapping(mapping);\n-            populateMapping(resourceTO.getUmapping(), mapping);\n+            populateMapping(resourceTO.getUmapping(), mapping, new UMappingItem());\n         }\n         if (resourceTO.getRmapping() != null) {\n             RMapping mapping = new RMapping();\n             resource.setRmapping(mapping);\n-            populateMapping(resourceTO.getRmapping(), mapping);\n+            populateMapping(resourceTO.getRmapping(), mapping, new RMappingItem());\n         }\n \n         resource.setCreateTraceLevel(resourceTO.getCreateTraceLevel());\n@@ -145,10 +146,12 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n         return resource;\n     }\n \n-    private void populateMapping(final MappingTO mappingTO, final AbstractMapping mapping) {\n+    private void populateMapping(final MappingTO mappingTO, final AbstractMapping mapping,\n+            final AbstractMappingItem prototype) {\n+\n         mapping.setAccountLink(mappingTO.getAccountLink());\n \n-        for (AbstractMappingItem item : getMappingItems(mappingTO.getItems())) {\n+        for (AbstractMappingItem item : getMappingItems(mappingTO.getItems(), prototype)) {\n             if (item.isAccountid()) {\n                 mapping.setAccountIdItem(item);\n             } else if (item.isPassword()) {\n@@ -159,16 +162,18 @@ private void populateMapping(final MappingTO mappingTO, final AbstractMapping ma\n         }\n     }\n \n-    private Set<AbstractMappingItem> getMappingItems(final Collection<MappingItemTO> itemTOs) {\n+    private Set<AbstractMappingItem> getMappingItems(final Collection<MappingItemTO> itemTOs,\n+            final AbstractMappingItem prototype) {\n+\n         Set<AbstractMappingItem> items = new HashSet<AbstractMappingItem>(itemTOs.size());\n         for (MappingItemTO itemTO : itemTOs) {\n-            items.add(getMappingItem(itemTO));\n+            items.add(getMappingItem(itemTO, prototype));\n         }\n \n         return items;\n     }\n \n-    private AbstractMappingItem getMappingItem(final MappingItemTO itemTO)\n+    private AbstractMappingItem getMappingItem(final MappingItemTO itemTO, final AbstractMappingItem prototype)\n             throws SyncopeClientCompositeErrorException {\n \n         SyncopeClientCompositeErrorException scce = new SyncopeClientCompositeErrorException(HttpStatus.BAD_REQUEST);\n@@ -213,7 +218,7 @@ private AbstractMappingItem getMappingItem(final MappingItemTO itemTO)\n             throw scce;\n         }\n \n-        UMappingItem item = new UMappingItem();\n+        AbstractMappingItem item = (AbstractMappingItem) SerializationUtils.clone(prototype);\n         BeanUtils.copyProperties(itemTO, item, MAPPINGITEM_IGNORE_PROPERTIES);\n         return item;\n     }"},{"sha":"93758765a4bda17491c49bdf4e176e0e0c2b3ef3","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=b80cd3cd88fa4c3bb0fb6d2e4e6563a70cee9743","patch":"@@ -147,23 +147,36 @@ public void createOverridingProps() {\n     }\n \n     @Test\n-    public void createWithSingleMapping() {\n+    public void createWithSingleMappingItem() {\n         String resourceName = \"ws-target-resource-create-single\";\n         ResourceTO resourceTO = new ResourceTO();\n         resourceTO.setName(resourceName);\n         resourceTO.setConnectorId(102L);\n \n-        MappingTO mapping = new MappingTO();\n+        MappingTO umapping = new MappingTO();\n \n         MappingItemTO item = new MappingItemTO();\n         item.setIntMappingType(IntMappingType.UserId);\n         item.setAccountid(true);\n-        mapping.setAccountIdItem(item);\n+        umapping.setAccountIdItem(item);\n \n-        resourceTO.setUmapping(mapping);\n+        resourceTO.setUmapping(umapping);\n+\n+        MappingTO rmapping = new MappingTO();\n+\n+        item = new MappingItemTO();\n+        item.setIntMappingType(IntMappingType.RoleId);\n+        item.setAccountid(true);\n+        rmapping.setAccountIdItem(item);\n+\n+        resourceTO.setRmapping(rmapping);\n \n         ResourceTO actual = restTemplate.postForObject(BASE_URL + \"resource/create.json\", resourceTO, ResourceTO.class);\n         assertNotNull(actual);\n+        assertNotNull(actual.getUmapping());\n+        assertNotNull(actual.getUmapping().getItems());\n+        assertNotNull(actual.getRmapping());\n+        assertNotNull(actual.getRmapping().getItems());\n     }\n \n     @Test"}]}