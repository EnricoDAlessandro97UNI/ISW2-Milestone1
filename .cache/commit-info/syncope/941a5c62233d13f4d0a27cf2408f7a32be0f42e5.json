{"sha":"941a5c62233d13f4d0a27cf2408f7a32be0f42e5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk0MWE1YzYyMjMzZDEzZjRkMGEyN2NmMjQwOGY3YTMyYmUwZjQyZTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-28T13:35:45Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-28T13:35:45Z"},"message":"[SYNCOPE-49] Collections.unmodifiableMap() applied to all proper get*Map() client methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1306317 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"35418af3306ee6b8e4d034cb9e6e3a913859f1c8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/35418af3306ee6b8e4d034cb9e6e3a913859f1c8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/941a5c62233d13f4d0a27cf2408f7a32be0f42e5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/941a5c62233d13f4d0a27cf2408f7a32be0f42e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/941a5c62233d13f4d0a27cf2408f7a32be0f42e5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1715f3a72776466fe90dd5040febc8c5de577787","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1715f3a72776466fe90dd5040febc8c5de577787","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1715f3a72776466fe90dd5040febc8c5de577787"}],"stats":{"total":144,"additions":98,"deletions":46},"files":[{"sha":"3a90db0536943be25948242ccdbc31485bc7f684","filename":"client/src/main/java/org/syncope/client/to/AbstractAttributableTO.java","status":"modified","additions":21,"deletions":6,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java?ref=941a5c62233d13f4d0a27cf2408f7a32be0f42e5","patch":"@@ -19,6 +19,7 @@\n package org.syncope.client.to;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n@@ -56,19 +57,33 @@ public void setId(final long id) {\n \n     @JsonIgnore\n     public Map<String, AttributeTO> getDerivedAttributeMap() {\n-        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(derivedAttributes.size());\n-        for (AttributeTO attributeTO : derivedAttributes) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n+        Map<String, AttributeTO> result;\n+\n+        if (derivedAttributes == null) {\n+            result = Collections.EMPTY_MAP;\n+        } else {\n+            result = new HashMap<String, AttributeTO>(derivedAttributes.size());\n+            for (AttributeTO attributeTO : derivedAttributes) {\n+                result.put(attributeTO.getSchema(), attributeTO);\n+            }\n+            result = Collections.unmodifiableMap(result);\n         }\n \n         return result;\n     }\n \n     @JsonIgnore\n     public Map<String, AttributeTO> getVirtualAttributeMap() {\n-        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(virtualAttributes.size());\n-        for (AttributeTO attributeTO : virtualAttributes) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n+        Map<String, AttributeTO> result;\n+\n+        if (derivedAttributes == null) {\n+            result = Collections.EMPTY_MAP;\n+        } else {\n+            result = new HashMap<String, AttributeTO>(virtualAttributes.size());\n+            for (AttributeTO attributeTO : virtualAttributes) {\n+                result.put(attributeTO.getSchema(), attributeTO);\n+            }\n+            result = Collections.unmodifiableMap(result);\n         }\n \n         return result;"},{"sha":"1d144bab332636ccf49cc45ae3c985196f2d2a3b","filename":"client/src/main/java/org/syncope/client/to/ConnInstanceTO.java","status":"modified","additions":14,"deletions":7,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java?ref=941a5c62233d13f4d0a27cf2408f7a32be0f42e5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.syncope.client.to;\n \n+import java.util.Collections;\n import java.util.EnumSet;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -83,9 +84,16 @@ public Set<ConnConfProperty> getConfiguration() {\n \n     @JsonIgnore\n     public Map<String, ConnConfProperty> getConfigurationMap() {\n-        Map<String, ConnConfProperty> result = new HashMap<String, ConnConfProperty>();\n-        for (ConnConfProperty prop : getConfiguration()) {\n-            result.put(prop.getSchema().getName(), prop);\n+        Map<String, ConnConfProperty> result;\n+\n+        if (getConfiguration() == null) {\n+            result = Collections.EMPTY_MAP;\n+        } else {\n+            result = new HashMap<String, ConnConfProperty>();\n+            for (ConnConfProperty prop : getConfiguration()) {\n+                result.put(prop.getSchema().getName(), prop);\n+            }\n+            result = Collections.unmodifiableMap(result);\n         }\n \n         return result;\n@@ -100,10 +108,9 @@ public boolean removeConfiguration(ConnConfProperty property) {\n     }\n \n     public void setConfiguration(Set<ConnConfProperty> configuration) {\n-        if (configuration == null || configuration.isEmpty()) {\n-            this.configuration.clear();\n-        } else {\n-            this.configuration = configuration;\n+        this.configuration.clear();\n+        if (configuration != null && !configuration.isEmpty()) {\n+            this.configuration.addAll(configuration);\n         }\n     }\n "},{"sha":"f7260014518c6618a848f1ed2091025d7e5a8b15","filename":"client/src/main/java/org/syncope/client/to/ConnObjectTO.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnObjectTO.java?ref=941a5c62233d13f4d0a27cf2408f7a32be0f42e5","patch":"@@ -19,6 +19,7 @@\n package org.syncope.client.to;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -55,9 +56,16 @@ public void setAttributes(final List<AttributeTO> attributes) {\n \n     @JsonIgnore\n     public Map<String, AttributeTO> getAttributeMap() {\n-        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(attributes.size());\n-        for (AttributeTO attributeTO : attributes) {\n-            result.put(attributeTO.getSchema(), attributeTO);\n+        Map<String, AttributeTO> result;\n+\n+        if (attributes == null) {\n+            result = Collections.EMPTY_MAP;\n+        } else {\n+            result = new HashMap<String, AttributeTO>(attributes.size());\n+            for (AttributeTO attributeTO : attributes) {\n+                result.put(attributeTO.getSchema(), attributeTO);\n+            }\n+            result = Collections.unmodifiableMap(result);\n         }\n \n         return result;"},{"sha":"62b518f9dd1888964a769103a82f6e4dbc52d25d","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=941a5c62233d13f4d0a27cf2408f7a32be0f42e5","patch":"@@ -20,6 +20,7 @@\n \n import java.lang.reflect.Field;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n import java.util.HashMap;\n import java.util.List;\n@@ -87,10 +88,16 @@ public void setMemberships(List<MembershipTO> memberships) {\n \n     @JsonIgnore\n     public Map<Long, MembershipTO> getMembershipMap() {\n-        Map<Long, MembershipTO> result = new HashMap<Long, MembershipTO>(getMemberships().size());\n-\n-        for (MembershipTO membership : getMemberships()) {\n-            result.put(membership.getRoleId(), membership);\n+        Map<Long, MembershipTO> result;\n+\n+        if (getMemberships() == null) {\n+            result = Collections.EMPTY_MAP;\n+        } else {\n+            result = new HashMap<Long, MembershipTO>(getMemberships().size());\n+            for (MembershipTO membership : getMemberships()) {\n+                result.put(membership.getRoleId(), membership);\n+            }\n+            result = Collections.unmodifiableMap(result);\n         }\n \n         return result;"},{"sha":"28359f98114812028f632e63a2d3825f50f85ab8","filename":"client/src/main/java/org/syncope/client/to/WorkflowFormTO.java","status":"modified","additions":13,"deletions":5,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java?ref=941a5c62233d13f4d0a27cf2408f7a32be0f42e5","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.Date;\n import java.util.HashMap;\n import java.util.List;\n@@ -120,13 +121,20 @@ public void setProperties(final Collection<WorkflowFormPropertyTO> properties) {\n     }\n \n     @JsonIgnore\n-    public Map<String, WorkflowFormPropertyTO> getPropertiesAsMap() {\n-        Map<String, WorkflowFormPropertyTO> props = new HashMap<String, WorkflowFormPropertyTO>();\n-        for (WorkflowFormPropertyTO prop : getProperties()) {\n-            props.put(prop.getId(), prop);\n+    public Map<String, WorkflowFormPropertyTO> getPropertyMap() {\n+        Map<String, WorkflowFormPropertyTO> result;\n+\n+        if (getProperties() == null) {\n+            result = Collections.EMPTY_MAP;\n+        } else {\n+            result = new HashMap<String, WorkflowFormPropertyTO>();\n+            for (WorkflowFormPropertyTO prop : getProperties()) {\n+                result.put(prop.getId(), prop);\n+            }\n+            result = Collections.unmodifiableMap(result);\n         }\n \n-        return props;\n+        return result;\n     }\n \n     @JsonIgnore"},{"sha":"4174ce71957236247e2b665e93c108293ca4f758","filename":"client/src/main/java/org/syncope/client/util/ConnConfPropUtils.java","status":"modified","additions":15,"deletions":8,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java?ref=941a5c62233d13f4d0a27cf2408f7a32be0f42e5","patch":"@@ -18,6 +18,7 @@\n  */\n package org.syncope.client.util;\n \n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n@@ -34,20 +35,26 @@ public final class ConnConfPropUtils {\n     private ConnConfPropUtils() {\n     }\n \n-    public static Set<ConnConfProperty> joinConnInstanceProperties(final Map<String, ConnConfProperty> connectorProp,\n-            final Map<String, ConnConfProperty> resourceProp) {\n+    public static Set<ConnConfProperty> joinConnInstanceProperties(\n+            final Map<String, ConnConfProperty> connectorProp, final Map<String, ConnConfProperty> resourceProp) {\n \n         connectorProp.putAll(resourceProp);\n         return new HashSet<ConnConfProperty>(connectorProp.values());\n     }\n \n     public static Map<String, ConnConfProperty> getConnConfPropertyMap(final Set<ConnConfProperty> properties) {\n-\n-        final Map<String, ConnConfProperty> prop = new HashMap<String, ConnConfProperty>();\n-        for (Iterator<ConnConfProperty> item = properties.iterator(); item.hasNext();) {\n-            ConnConfProperty property = item.next();\n-            prop.put(property.getSchema().getName(), property);\n+        Map<String, ConnConfProperty> result;\n+        if (properties == null) {\n+            result = Collections.EMPTY_MAP;\n+        } else {\n+            result = new HashMap<String, ConnConfProperty>();\n+            for (Iterator<ConnConfProperty> item = properties.iterator(); item.hasNext();) {\n+                ConnConfProperty property = item.next();\n+                result.put(property.getSchema().getName(), property);\n+            }\n+            result = Collections.unmodifiableMap(result);\n         }\n-        return prop;\n+\n+        return result;\n     }\n }"},{"sha":"126eeb36f8049e589e1f7b3113eb2126149f6ae4","filename":"console/src/main/java/org/syncope/console/pages/ApprovalModalPage.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java?ref=941a5c62233d13f4d0a27cf2408f7a32be0f42e5","patch":"@@ -88,9 +88,9 @@ protected void populateItem(final ListItem<WorkflowFormPropertyTO> item) {\n                 FieldPanel field;\n                 switch (prop.getType()) {\n                     case Boolean:\n-                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(), new Model(\n-                                Boolean.valueOf(prop.getValue()))).setChoices(Arrays\n-                                .asList(new String[] { \"Yes\", \"No\" }));\n+                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(),\n+                                new Model(Boolean.valueOf(prop.getValue()))).setChoices(Arrays.asList(\n+                                new String[]{\"Yes\", \"No\"}));\n                         break;\n \n                     case Date:\n@@ -111,11 +111,11 @@ protected void populateItem(final ListItem<WorkflowFormPropertyTO> item) {\n                         break;\n \n                     case Enum:\n-                        MapChoiceRenderer<String, String> enumCR = new MapChoiceRenderer<String, String>(prop\n-                                .getEnumValues());\n+                        MapChoiceRenderer<String, String> enumCR =\n+                                new MapChoiceRenderer<String, String>(prop.getEnumValues());\n \n-                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(), new Model(\n-                                prop.getValue())).setChoiceRenderer(enumCR).setChoices(new Model() {\n+                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(),\n+                                new Model(prop.getValue())).setChoiceRenderer(enumCR).setChoices(new Model() {\n \n                             private static final long serialVersionUID = -858521070366432018L;\n \n@@ -127,8 +127,8 @@ public Serializable getObject() {\n                         break;\n \n                     case Long:\n-                        field = new AjaxNumberFieldPanel(\"value\", label.getDefaultModelObjectAsString(), new Model(Long\n-                                .valueOf(prop.getValue())), Long.class);\n+                        field = new AjaxNumberFieldPanel(\"value\", label.getDefaultModelObjectAsString(),\n+                                new Model(Long.valueOf(prop.getValue())), Long.class);\n                         break;\n \n                     case String:\n@@ -153,7 +153,7 @@ public Serializable getObject() {\n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n-                Map<String, WorkflowFormPropertyTO> props = formTO.getPropertiesAsMap();\n+                Map<String, WorkflowFormPropertyTO> props = formTO.getPropertyMap();\n \n                 for (int i = 0; i < propView.size(); i++) {\n                     ListItem<WorkflowFormPropertyTO> item = (ListItem<WorkflowFormPropertyTO>) propView.get(i);\n@@ -166,7 +166,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     if (item.getModelObject().isWritable()) {\n                         switch (item.getModelObject().getType()) {\n                             case Boolean:\n-                                props.get(item.getModelObject().getId()).setValue(String.valueOf(input.equals(\"0\")));\n+                                props.get(item.getModelObject().getId()).setValue(String.valueOf(\"0\".equals(input)));\n                                 break;\n \n                             case Date:"},{"sha":"b8343ce99dbb5ad1dd7087e1ab5820f0a70f38ae","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/941a5c62233d13f4d0a27cf2408f7a32be0f42e5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=941a5c62233d13f4d0a27cf2408f7a32be0f42e5","patch":"@@ -650,7 +650,7 @@ public void createWithReject() {\n         assertNotNull(form.getOwner());\n \n         // 5. reject user\n-        Map<String, WorkflowFormPropertyTO> props = form.getPropertiesAsMap();\n+        Map<String, WorkflowFormPropertyTO> props = form.getPropertyMap();\n         props.get(\"approve\").setValue(Boolean.FALSE.toString());\n         props.get(\"rejectReason\").setValue(\"I don't like him.\");\n         form.setProperties(props.values());\n@@ -707,7 +707,7 @@ public void createWithApproval() {\n         assertNotNull(form.getOwner());\n \n         // 5. approve user (and verify that propagation occurred)\n-        Map<String, WorkflowFormPropertyTO> props = form.getPropertiesAsMap();\n+        Map<String, WorkflowFormPropertyTO> props = form.getPropertyMap();\n         props.get(\"approve\").setValue(Boolean.TRUE.toString());\n         form.setProperties(props.values());\n         userTO = restTemplate.postForObject(BASE_URL + \"user/workflow/form/submit\", form, UserTO.class);"}]}