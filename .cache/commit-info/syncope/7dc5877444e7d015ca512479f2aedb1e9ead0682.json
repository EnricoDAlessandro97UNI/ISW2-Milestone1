{"sha":"7dc5877444e7d015ca512479f2aedb1e9ead0682","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdkYzU4Nzc0NDRlN2QwMTVjYTUxMjQ3OWYyYWVkYjFlOWVhZDA2ODI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-13T15:59:04Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-13T15:59:04Z"},"message":"Fixes issue 173\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247130 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"dfc1b58b3d8e785c929a6fb2a19c3cf08e9a594d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dfc1b58b3d8e785c929a6fb2a19c3cf08e9a594d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7dc5877444e7d015ca512479f2aedb1e9ead0682","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7dc5877444e7d015ca512479f2aedb1e9ead0682","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7dc5877444e7d015ca512479f2aedb1e9ead0682","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7dc5877444e7d015ca512479f2aedb1e9ead0682/comments","author":null,"committer":null,"parents":[{"sha":"e645ebc757b431f958850cbbc5fef5a685519519","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e645ebc757b431f958850cbbc5fef5a685519519","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e645ebc757b431f958850cbbc5fef5a685519519"}],"stats":{"total":27,"additions":21,"deletions":6},"files":[{"sha":"1a714a60459188572e5373e1cc94955a6893a28c","filename":"console/src/main/java/org/syncope/console/pages/DerivedSchemaModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7dc5877444e7d015ca512479f2aedb1e9ead0682/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7dc5877444e7d015ca512479f2aedb1e9ead0682/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java?ref=7dc5877444e7d015ca512479f2aedb1e9ead0682","patch":"@@ -62,7 +62,7 @@ public void setSchemaModalPage(\n \n         final AjaxTextFieldPanel expression = new AjaxTextFieldPanel(\n                 \"expression\", getString(\"expression\"),\n-                new PropertyModel<String>(schema, \"name\"), false);\n+                new PropertyModel<String>(schema, \"expression\"), false);\n         expression.addRequiredLabel();\n \n         name.setEnabled(createFlag);"},{"sha":"ed4d3978e7512f8cdb1f3bf496c1e215ed6c08f1","filename":"core/src/test/java/org/syncope/core/rest/PolicyTestITCase.java","status":"modified","additions":20,"deletions":5,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7dc5877444e7d015ca512479f2aedb1e9ead0682/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7dc5877444e7d015ca512479f2aedb1e9ead0682/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java?ref=7dc5877444e7d015ca512479f2aedb1e9ead0682","patch":"@@ -114,27 +114,42 @@ public final void create() {\n \n     @Test\n     public final void update() {\n-\n-        PolicyTO policyTO = restTemplate.getForObject(\n+        // get global password\n+        PasswordPolicyTO policyTO = restTemplate.getForObject(\n                 BASE_URL + \"policy/read/{id}\", PasswordPolicyTO.class, 2L);\n \n+        policyTO.setType(PolicyType.PASSWORD);\n+        policyTO.setId(0);\n+\n+        // create a new password policy using global password as a template\n+        policyTO = restTemplate.postForObject(\n+                BASE_URL + \"policy/password/create\",\n+                policyTO, PasswordPolicyTO.class);\n+\n+        // read new password policy\n+        policyTO = restTemplate.getForObject(\n+                BASE_URL + \"policy/read/{id}\",\n+                PasswordPolicyTO.class, policyTO.getId());\n+\n         assertNotNull(\"find to update did not work\", policyTO);\n \n-        PasswordPolicy policy = ((PasswordPolicyTO) policyTO).getSpecification();\n+        PasswordPolicy policy =\n+                ((PasswordPolicyTO) policyTO).getSpecification();\n         policy.setMaxLength(22);\n \n         PasswordPolicyMod policyMod = new PasswordPolicyMod();\n         policyMod.setId(policyTO.getId());\n-        policyMod.setType(PolicyType.GLOBAL_PASSWORD);\n+        policyMod.setType(PolicyType.PASSWORD);\n         policyMod.setSpecification(policy);\n         policyMod.setDescription(policyTO.getDescription());\n \n+        // update new password policy\n         policyTO = restTemplate.postForObject(\n                 BASE_URL + \"policy/password/update\",\n                 policyMod, PasswordPolicyTO.class);\n \n         assertNotNull(policyTO);\n-        assertEquals(PolicyType.GLOBAL_PASSWORD, policyTO.getType());\n+        assertEquals(PolicyType.PASSWORD, policyTO.getType());\n         assertEquals(22,\n                 ((PasswordPolicyTO) policyTO).getSpecification().getMaxLength());\n         assertEquals(8,"}]}