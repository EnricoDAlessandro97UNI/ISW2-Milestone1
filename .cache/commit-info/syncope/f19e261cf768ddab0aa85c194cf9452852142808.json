{"sha":"f19e261cf768ddab0aa85c194cf9452852142808","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYxOWUyNjFjZjc2OGRkYWIwYWE4NWMxOTRjZjk0NTI4NTIxNDI4MDg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-11T14:29:08Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-11T14:29:08Z"},"message":"Some integration tests improvements","tree":{"sha":"53d1bd77856f3b65c81ecd71a0d990b8f0f7caed","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/53d1bd77856f3b65c81ecd71a0d990b8f0f7caed"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f19e261cf768ddab0aa85c194cf9452852142808","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f19e261cf768ddab0aa85c194cf9452852142808","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f19e261cf768ddab0aa85c194cf9452852142808","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f19e261cf768ddab0aa85c194cf9452852142808/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7af5e995d60f30b500f4496ea3672c67d2a51d01","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7af5e995d60f30b500f4496ea3672c67d2a51d01","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7af5e995d60f30b500f4496ea3672c67d2a51d01"}],"stats":{"total":812,"additions":477,"deletions":335},"files":[{"sha":"d1c51a4c971c813862a3df74cdde0783ceac43cd","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/RestClientExceptionMapper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -47,7 +47,7 @@ public class RestClientExceptionMapper implements ExceptionMapper<Exception>, Re\n     @Override\n     public Response toResponse(final Exception exception) {\n         throw new UnsupportedOperationException(\n-                \"Call of toResponse() method is not expected in RestClientExceptionnMapper\");\n+                \"Call of toResponse() method is not expected in \" + RestClientExceptionMapper.class.getSimpleName());\n     }\n \n     @Override"},{"sha":"0caa8ab30d6723b39fecc36bd651c474ed8df95f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -186,7 +186,7 @@ public PlatformInfo platform() {\n                         addAll(implLookup.getClassNames(Type.RECONCILIATION_FILTER_BUILDER));\n                 PLATFORM_INFO.getLogicActions().addAll(implLookup.getClassNames(Type.LOGIC_ACTIONS));\n                 PLATFORM_INFO.getPropagationActions().addAll(implLookup.getClassNames(Type.PROPAGATION_ACTIONS));\n-                PLATFORM_INFO.getPullActions().addAll(implLookup.getClassNames(Type.SYNC_ACTIONS));\n+                PLATFORM_INFO.getPullActions().addAll(implLookup.getClassNames(Type.PULL_ACTIONS));\n                 PLATFORM_INFO.getPushActions().addAll(implLookup.getClassNames(Type.PUSH_ACTIONS));\n                 PLATFORM_INFO.getPullCorrelationRules().addAll(implLookup.getClassNames(Type.PULL_CORRELATION_RULE));\n                 PLATFORM_INFO.getValidators().addAll(implLookup.getClassNames(Type.VALIDATOR));"},{"sha":"a5b9a78f22645bae0e4547a9da8a5f602d6e25f5","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -50,7 +50,6 @@\n import org.springframework.beans.factory.config.BeanDefinition;\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n import org.springframework.core.type.filter.AssignableTypeFilter;\n-import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n@@ -62,7 +61,6 @@\n /**\n  * Cache class names for all implementations of Syncope interfaces found in classpath, for later usage.\n  */\n-@Component\n public class ClassPathScanImplementationLookup implements ImplementationLookup {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ImplementationLookup.class);\n@@ -170,7 +168,7 @@ public void load() {\n                 }\n \n                 if (PullActions.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n-                    classNames.get(Type.SYNC_ACTIONS).add(bd.getBeanClassName());\n+                    classNames.get(Type.PULL_ACTIONS).add(bd.getBeanClassName());\n                 }\n \n                 if (PushActions.class.isAssignableFrom(clazz) && !isAbsractClazz) {"},{"sha":"a9a71b1b6426defe2e5cb77f85082b5b7e6459f8","filename":"core/logic/src/main/resources/logic.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -15,3 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n logicInvocationHandler=org.apache.syncope.core.logic.LogicInvocationHandler\n+classPathScanImplementationLookup=org.apache.syncope.core.logic.init.ClassPathScanImplementationLookup"},{"sha":"7faa00cf18665ff66347f8399b9d10b3fc74daed","filename":"core/logic/src/main/resources/logicContext.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/core%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/core%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -38,4 +38,6 @@ under the License.\n \n   <bean class=\"${logicInvocationHandler}\"/>\n \n+  <bean class=\"${classPathScanImplementationLookup}\"/>\n+\n </beans>"},{"sha":"61eb32709e40f7a0847a48738baa8eddd215280e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/ImplementationLookup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -38,7 +38,7 @@ enum Type {\n         RECONCILIATION_FILTER_BUILDER,\n         LOGIC_ACTIONS,\n         PROPAGATION_ACTIONS,\n-        SYNC_ACTIONS,\n+        PULL_ACTIONS,\n         PUSH_ACTIONS,\n         PULL_CORRELATION_RULE,\n         VALIDATOR,"},{"sha":"80f854bf7f861f8f7e17b8ad5208811d1632de6f","filename":"core/persistence-jpa/src/test/resources/persistenceTest.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -25,7 +25,7 @@ under the License.\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\">\n \n-  <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n+  <bean class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n     <property name=\"locations\">\n       <list>\n         <value>classpath:persistence.properties</value>"},{"sha":"88b61b4127e8b057dc82b0b63385283d6ee2f8e5","filename":"core/provisioning-java/src/test/resources/provisioningTest.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -22,7 +22,7 @@ under the License.\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\">\n     \n-  <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n+  <bean class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n     <property name=\"locations\">\n       <list>\n         <value>classpath:persistence.properties</value>"},{"sha":"50049c85fc248280dc259670e25ae134963cd730","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -59,9 +59,6 @@\n  */\n public class ApacheDSStartStopListener implements ServletContextListener {\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(ApacheDSStartStopListener.class);\n \n     private DirectoryService service;"},{"sha":"ae329b9a1c2d82c1da1c402adb0ff5872f2c9161","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"added","additions":209,"deletions":0,"changes":209,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -0,0 +1,209 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.policy.AccountRuleConf;\n+import org.apache.syncope.common.lib.policy.DefaultAccountRuleConf;\n+import org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf;\n+import org.apache.syncope.common.lib.policy.PasswordRuleConf;\n+import org.apache.syncope.common.lib.report.AuditReportletConf;\n+import org.apache.syncope.common.lib.report.GroupReportletConf;\n+import org.apache.syncope.common.lib.report.ReconciliationReportletConf;\n+import org.apache.syncope.common.lib.report.ReportletConf;\n+import org.apache.syncope.common.lib.report.StaticReportletConf;\n+import org.apache.syncope.common.lib.report.UserReportletConf;\n+import org.apache.syncope.core.logic.report.AuditReportlet;\n+import org.apache.syncope.core.logic.report.GroupReportlet;\n+import org.apache.syncope.core.logic.report.ReconciliationReportlet;\n+import org.apache.syncope.core.logic.report.StaticReportlet;\n+import org.apache.syncope.core.logic.report.UserReportlet;\n+import org.apache.syncope.core.migration.MigrationPullActions;\n+import org.apache.syncope.core.persistence.api.ImplementationLookup;\n+import org.apache.syncope.core.persistence.api.dao.AccountRule;\n+import org.apache.syncope.core.persistence.api.dao.PasswordRule;\n+import org.apache.syncope.core.persistence.api.dao.Reportlet;\n+import org.apache.syncope.core.persistence.jpa.attrvalue.validation.AlwaysTrueValidator;\n+import org.apache.syncope.core.persistence.jpa.attrvalue.validation.BasicValidator;\n+import org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator;\n+import org.apache.syncope.core.persistence.jpa.dao.DefaultAccountRule;\n+import org.apache.syncope.core.persistence.jpa.dao.DefaultPasswordRule;\n+import org.apache.syncope.core.provisioning.java.DefaultLogicActions;\n+import org.apache.syncope.core.provisioning.java.data.DefaultMappingItemTransformer;\n+import org.apache.syncope.core.provisioning.java.propagation.DBPasswordPropagationActions;\n+import org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions;\n+import org.apache.syncope.core.provisioning.java.propagation.LDAPPasswordPropagationActions;\n+import org.apache.syncope.core.provisioning.java.pushpull.DBPasswordPullActions;\n+import org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions;\n+import org.apache.syncope.core.provisioning.java.pushpull.LDAPPasswordPullActions;\n+\n+/**\n+ * Static implementation providing information about the integration test environment.\n+ */\n+public class ITImplementationLookup implements ImplementationLookup {\n+\n+    private static final Map<Type, Set<String>> CLASS_NAMES = new HashMap<Type, Set<String>>() {\n+\n+        private static final long serialVersionUID = 3109256773218160485L;\n+\n+        {\n+            Set<String> classNames = new HashSet<>();\n+            classNames.add(ReconciliationReportletConf.class.getName());\n+            classNames.add(UserReportletConf.class.getName());\n+            classNames.add(GroupReportletConf.class.getName());\n+            classNames.add(AuditReportletConf.class.getName());\n+            classNames.add(StaticReportletConf.class.getName());\n+            put(Type.REPORTLET_CONF, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(TestAccountRuleConf.class.getName());\n+            classNames.add(DefaultAccountRuleConf.class.getName());\n+            put(Type.ACCOUNT_RULE_CONF, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(TestPasswordRuleConf.class.getName());\n+            classNames.add(DefaultPasswordRuleConf.class.getName());\n+            put(Type.PASSWORD_RULE_CONF, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(PrefixMappingItemTransformer.class.getName());\n+            classNames.add(DefaultMappingItemTransformer.class.getName());\n+            put(Type.MAPPING_ITEM_TRANSFORMER, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(TestSampleJobDelegate.class.getName());\n+            put(Type.TASKJOBDELEGATE, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(TestReconciliationFilterBuilder.class.getName());\n+            put(Type.RECONCILIATION_FILTER_BUILDER, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(DoubleValueLogicActions.class.getName());\n+            classNames.add(DefaultLogicActions.class.getName());\n+            put(Type.LOGIC_ACTIONS, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(LDAPMembershipPropagationActions.class.getName());\n+            classNames.add(LDAPPasswordPropagationActions.class.getName());\n+            classNames.add(DBPasswordPropagationActions.class.getName());\n+            put(Type.PROPAGATION_ACTIONS, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(LDAPPasswordPullActions.class.getName());\n+            classNames.add(TestPullActions.class.getName());\n+            classNames.add(MigrationPullActions.class.getName());\n+            classNames.add(LDAPMembershipPullActions.class.getName());\n+            classNames.add(DBPasswordPullActions.class.getName());\n+            put(Type.PULL_ACTIONS, classNames);\n+\n+            classNames = new HashSet<>();\n+            put(Type.PUSH_ACTIONS, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(TestPullRule.class.getName());\n+            put(Type.PULL_CORRELATION_RULE, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(BasicValidator.class.getName());\n+            classNames.add(EmailAddressValidator.class.getName());\n+            classNames.add(AlwaysTrueValidator.class.getName());\n+            put(Type.VALIDATOR, classNames);\n+\n+            classNames = new HashSet<>();\n+            classNames.add(TestNotificationRecipientsProvider.class.getName());\n+            put(Type.NOTIFICATION_RECIPIENTS_PROVIDER, classNames);\n+        }\n+    };\n+\n+    private static final Map<Class<? extends ReportletConf>, Class<? extends Reportlet>> REPORTLET_CLASSES =\n+            new HashMap<Class<? extends ReportletConf>, Class<? extends Reportlet>>() {\n+\n+        private static final long serialVersionUID = 3109256773218160485L;\n+\n+        {\n+            put(AuditReportletConf.class, AuditReportlet.class);\n+            put(ReconciliationReportletConf.class, ReconciliationReportlet.class);\n+            put(GroupReportletConf.class, GroupReportlet.class);\n+            put(UserReportletConf.class, UserReportlet.class);\n+            put(StaticReportletConf.class, StaticReportlet.class);\n+        }\n+    };\n+\n+    private static final Map<Class<? extends AccountRuleConf>, Class<? extends AccountRule>> ACCOUNT_RULE_CLASSES =\n+            new HashMap<Class<? extends AccountRuleConf>, Class<? extends AccountRule>>() {\n+\n+        private static final long serialVersionUID = 3109256773218160485L;\n+\n+        {\n+            put(TestAccountRuleConf.class, TestAccountRule.class);\n+            put(DefaultAccountRuleConf.class, DefaultAccountRule.class);\n+        }\n+    };\n+\n+    private static final Map<Class<? extends PasswordRuleConf>, Class<? extends PasswordRule>> PASSWORD_RULE_CLASSES =\n+            new HashMap<Class<? extends PasswordRuleConf>, Class<? extends PasswordRule>>() {\n+\n+        private static final long serialVersionUID = -6624291041977583649L;\n+\n+        {\n+            put(TestPasswordRuleConf.class, TestPasswordRule.class);\n+            put(DefaultPasswordRuleConf.class, DefaultPasswordRule.class);\n+        }\n+    };\n+\n+    @Override\n+    public Integer getPriority() {\n+        return 400;\n+    }\n+\n+    @Override\n+    public void load() {\n+        // nothing to do\n+    }\n+\n+    @Override\n+    public Set<String> getClassNames(final Type type) {\n+        return CLASS_NAMES.get(type);\n+    }\n+\n+    @Override\n+    public Class<? extends Reportlet> getReportletClass(\n+            final Class<? extends ReportletConf> reportletConfClass) {\n+\n+        return REPORTLET_CLASSES.get(reportletConfClass);\n+    }\n+\n+    @Override\n+    public Class<? extends AccountRule> getAccountRuleClass(\n+            final Class<? extends AccountRuleConf> accountRuleConfClass) {\n+\n+        return ACCOUNT_RULE_CLASSES.get(accountRuleConfClass);\n+    }\n+\n+    @Override\n+    public Class<? extends PasswordRule> getPasswordRuleClass(\n+            final Class<? extends PasswordRuleConf> passwordRuleConfClass) {\n+\n+        return PASSWORD_RULE_CLASSES.get(passwordRuleConfClass);\n+    }\n+}"},{"sha":"de4a865428ae961649ef72f03fe4125c4037dc52","filename":"fit/core-reference/src/main/resources/coreContext.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -22,7 +22,7 @@ under the License.\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\">\n \n-  <bean id=\"confDirectoryPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n+  <bean id=\"confDirectoryPropertyConfigurer\" class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n     <property name=\"order\" value=\"1\"/>\n     <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n     <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n@@ -39,7 +39,7 @@ under the License.\n       </list>\n     </property>\n   </bean>\n-  <bean id=\"classpathPropertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n+  <bean id=\"classpathPropertyConfigurer\" class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n     <property name=\"locations\">\n       <list>\n         <value>classpath:persistence.properties</value>"},{"sha":"802e78538496c6e2410457f39eb3ee198602dd2f","filename":"fit/core-reference/src/main/resources/logic.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -15,3 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n logicInvocationHandler=org.apache.syncope.core.logic.LogicInvocationHandler\n+classPathScanImplementationLookup=org.apache.syncope.fit.core.reference.ITImplementationLookup"},{"sha":"4003c3b9d655398e757cc79c2952fd93b63a9d14","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":5,"deletions":12,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.fit;\n \n+import static org.junit.Assert.assertNotNull;\n+\n import java.io.InputStream;\n import java.net.URI;\n import java.util.Locale;\n@@ -27,7 +29,6 @@\n import javax.naming.Context;\n import javax.naming.NamingException;\n import javax.naming.directory.InitialDirContext;\n-import javax.sql.DataSource;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n@@ -79,17 +80,12 @@\n import org.apache.syncope.common.rest.api.service.WorkflowService;\n import org.identityconnectors.common.security.Encryptor;\n import org.junit.BeforeClass;\n-import org.junit.runner.RunWith;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.test.context.ContextConfiguration;\n-import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+import org.junit.FixMethodOrder;\n+import org.junit.runners.MethodSorters;\n \n-import static org.junit.Assert.assertNotNull;\n-\n-@RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = { \"classpath:testJDBCContext.xml\" })\n+@FixMethodOrder(MethodSorters.JVM)\n public abstract class AbstractITCase {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractITCase.class);\n@@ -212,9 +208,6 @@ public abstract class AbstractITCase {\n \n     protected static CamelRouteService camelRouteService;\n \n-    @Autowired\n-    protected DataSource testDataSource;\n-\n     @BeforeClass\n     public static void securitySetup() {\n         InputStream propStream = null;"},{"sha":"ae598d07984ac6d71fb76dd3146f3b2e4bc711f2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/cli/CLIITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -45,11 +45,8 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.BeforeClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class CLIITCase extends AbstractITCase {\n \n     private static final String SCRIPT_FILENAME = \"syncopeadm\";"},{"sha":"05655901599ec9039710cacab3f8b292124a74c1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":13,"deletions":27,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -20,13 +20,7 @@\n \n import java.io.Serializable;\n import java.lang.reflect.Method;\n-import javax.servlet.ServletContext;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n-import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.pages.Login;\n-import org.apache.syncope.fit.AbstractITCase;\n import org.apache.wicket.Component;\n import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.behavior.AbstractAjaxBehavior;\n@@ -38,8 +32,19 @@\n import org.apache.wicket.util.visit.IVisit;\n import org.apache.wicket.util.visit.IVisitor;\n import org.junit.BeforeClass;\n+import org.junit.FixMethodOrder;\n+import org.junit.runners.MethodSorters;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n-public abstract class AbstractConsoleITCase extends AbstractITCase {\n+@FixMethodOrder(MethodSorters.JVM)\n+public abstract class AbstractConsoleITCase {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractConsoleITCase.class);\n+\n+    protected static final String ADMIN_UNAME = \"admin\";\n+\n+    protected static final String ADMIN_PWD = \"password\";\n \n     protected static final String KEY = \"key\";\n \n@@ -49,26 +54,7 @@ public abstract class AbstractConsoleITCase extends AbstractITCase {\n \n     @BeforeClass\n     public static void setUp() {\n-        synchronized (KEY) {\n-            if (TESTER == null) {\n-                TESTER = new WicketTester(new SyncopeConsoleApplication() {\n-\n-                    @Override\n-                    protected void init() {\n-                        ServletContext ctx = getServletContext();\n-                        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n-                        lookup.load();\n-                        ctx.setAttribute(ConsoleInitializer.CLASSPATH_LOOKUP, lookup);\n-\n-                        MIMETypesLoader mimeTypes = new MIMETypesLoader();\n-                        mimeTypes.load();\n-                        ctx.setAttribute(ConsoleInitializer.MIMETYPES_LOADER, mimeTypes);\n-\n-                        super.init();\n-                    }\n-                });\n-            }\n-        }\n+        TESTER = ConsoleSetup.TESTER;\n     }\n \n     protected void doLogin(final String user, final String passwd) {"},{"sha":"a8da7488d276551abf8d02f8b4c351be69660e79","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxPalettePanelITCase.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -20,7 +20,6 @@\n \n import static org.junit.Assert.assertEquals;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Iterator;\n@@ -29,16 +28,13 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class AjaxPalettePanelITCase extends AbstractConsoleITCase {\n \n-    private static final IModel<List<String>> SELECTED = new ListModel<>(new ArrayList<>(Arrays.asList(\"A\", \"D\")));\n+    private static final IModel<List<String>> SELECTED = new ListModel<>(Arrays.asList(\"A\", \"D\"));\n \n-    private static final ListModel<String> ALL = new ListModel<>(new ArrayList<>(Arrays.asList(\"A\", \"B\", \"C\", \"D\")));\n+    private static final ListModel<String> ALL = new ListModel<>(Arrays.asList(\"A\", \"B\", \"C\", \"D\"));\n \n     @Test\n     public void isRendered() {"},{"sha":"a29b2964d270528a9496cd98ba26a4c9ad017ef6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxTextFieldITCase.java","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -28,19 +28,16 @@\n import org.junit.Test;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.junit.FixMethodOrder;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class AjaxTextFieldITCase extends AbstractConsoleITCase {\n \n-    private final IModel<String> textModel = Model.of((String) null);\n+    private static final IModel<String> TEXT_MODEL = Model.of((String) null);\n \n     @Test\n     public void emptyInputConvertedToNull() {\n         TestPage<String, AjaxTextFieldPanel> testPage =\n                 new TestPage.Builder<String, AjaxTextFieldPanel>().build(\n-                        new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, textModel));\n+                        new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         TESTER.startPage(testPage);\n         FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n         formTester.setValue(\"field:textField\", \"\");\n@@ -52,9 +49,9 @@ public void emptyInputConvertedToNull() {\n     public void valueAttribute() {\n         TestPage<String, AjaxTextFieldPanel> testPage =\n                 new TestPage.Builder<String, AjaxTextFieldPanel>().build(\n-                        new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, textModel));\n+                        new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         String text = \"sometext\";\n-        textModel.setObject(text);\n+        TEXT_MODEL.setObject(text);\n         TESTER.startPage(testPage);\n         assertTrue(TESTER.getLastResponseAsString().contains(Strings.escapeMarkup(text)));\n     }\n@@ -63,7 +60,7 @@ public void valueAttribute() {\n     public void nullIsNotValidated() {\n         TestPage<String, AjaxTextFieldPanel> testPage =\n                 new TestPage.Builder<String, AjaxTextFieldPanel>().build(\n-                        new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, textModel));\n+                        new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         testPage.getFieldPanel().getField().setRequired(false);\n         testPage.getFieldPanel().getField().add(StringValidator.minimumLength(2));\n         TESTER.startPage(testPage);\n@@ -78,7 +75,7 @@ public void nullIsNotValidated() {\n     public void requiredAttribute() {\n         TestPage<String, AjaxTextFieldPanel> testPage =\n                 new TestPage.Builder<String, AjaxTextFieldPanel>().build(\n-                        new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, textModel));\n+                        new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         testPage.getFieldPanel().setOutputMarkupId(true);\n         testPage.getFieldPanel().getField().setRequired(true);\n         TESTER.startPage(testPage);"},{"sha":"740ad9a71a4c357e06c85c0f0fe9ed787f4d1496","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":15,"deletions":18,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -24,20 +24,17 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.apache.wicket.markup.html.form.TextField;\n import org.junit.Before;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class AnyObjectsITCase extends AbstractConsoleITCase {\n \n-    private final String tabPanel = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n+    private static final String TAB_PANEL = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n \n-    private final String searchResultContainer = tabPanel + \"container:content:\";\n+    private static final String CONTAINER = TAB_PANEL + \"container:content:\";\n \n     @Before\n     public void login() {\n@@ -67,14 +64,14 @@ public void clickToClonePrinter() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", searchResultContainer\n+        Component component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n \n-        FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:cancel\");\n@@ -85,47 +82,47 @@ public void editPrinter() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", searchResultContainer\n+        Component component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:status:\"\n                 + \"resources:firstLevelContainer:first:container:content:group:beans:0:fields:0\", ListItem.class);\n \n-        FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n         TESTER.cleanupFeedbackMessages();\n \n-        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        TESTER.assertComponent(tabPanel\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        TESTER.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n \n-        component = findComponentByProp(\"key\", searchResultContainer\n+        component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n@@ -136,7 +133,7 @@ public void checkDeletePrinterLink() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", searchResultContainer\n+        Component component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);"},{"sha":"0a7f8e630caf7e1c15ab891f6aeeca23cbca8637","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypeClassesITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,11 +30,8 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class AnyTypeClassesITCase extends AbstractTypesITCase {\n \n     @Test"},{"sha":"fd65f298aebff1e8158bc3ce4a045e2533664e11","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypesITCase.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,11 +30,8 @@\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class AnyTypesITCase extends AbstractTypesITCase {\n \n     @Test\n@@ -129,7 +126,7 @@ public void delete() {\n \n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                        result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+                result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"), \"onclick\");"},{"sha":"5a3c0d89b6ed479973c70ae1b1d49b32e8558111","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BrowseITCase.java","status":"renamed","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBrowseITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBrowseITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBrowseITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,12 +30,9 @@\n import org.apache.syncope.client.console.pages.Types;\n import org.apache.syncope.client.console.pages.Workflow;\n import org.apache.syncope.client.console.topology.Topology;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n-public class BaseITCase extends AbstractConsoleITCase {\n+public class BrowseITCase extends AbstractConsoleITCase {\n \n     @Test\n     public void loginPage() {","previous_filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BaseITCase.java"},{"sha":"ef55a9bfd822074829e2171bc9cf2e40e183425b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":56,"deletions":55,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,16 +30,13 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class BulkActionITCase extends AbstractConsoleITCase {\n \n-    private final String tabPanel = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n+    private static final String TAB_PANEL = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n \n-    private final String searchResultContainer = tabPanel + \"container:content:\";\n+    private static final String CONTAINER = TAB_PANEL + \"container:content:\";\n \n     @Before\n     public void login() {\n@@ -51,23 +48,23 @@ public void usersBulkAction() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", searchResultContainer\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        FormTester formTester = TESTER.newFormTester(searchResultContainer\n+        FormTester formTester = TESTER.newFormTester(CONTAINER\n                 + \"searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        TESTER.executeAjaxEvent(searchResultContainer + \"searchContainer:resultTable:tablePanel:bulkActionLink\",\n+        TESTER.executeAjaxEvent(CONTAINER + \"searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(searchResultContainer\n+        TESTER.assertComponent(CONTAINER\n                 + \"searchContainer:resultTable:bulkModal:form:content:content:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"username\", searchResultContainer\n+        assertNotNull(findComponentByProp(\"username\", CONTAINER\n                 + \"searchContainer:resultTable:bulkModal:form:content:content:container\", \"rossini\"));\n     }\n \n@@ -76,38 +73,38 @@ public void userResourceBulkAction() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", searchResultContainer\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath()\n                 + \":cells:6:cell:panelManageResources:manageResourcesLink\");\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         component = findComponentByProp(\"resourceName\",\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-csv\");\n         assertNotNull(component);\n \n         FormTester formTester = TESTER.newFormTester(\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"outerObjectsRepeater:1:outer:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:1:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container\", \"resource-csv\"));\n     }\n \n@@ -126,53 +123,55 @@ private void userStatusBulkAction(final int index, final String resourceName) {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", searchResultContainer\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         component = findComponentByProp(\"resourceName\",\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n \n         component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n         assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resourceName, StatusBean.class.cast(component.getDefaultModelObject()).getResourceName());\n \n         FormTester formTester = TESTER.newFormTester(\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", index);\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:\"\n                 + \"status:secondLevelContainer:second:container:actions:panelSuspend:suspendLink\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.assertLabel(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:secondLevelContainer:back\",\n-                Constants.ON_CLICK);\n+        TESTER.\n+                executeAjaxEvent(TAB_PANEL\n+                        + \"outerObjectsRepeater:1:outer:form:content:status:secondLevelContainer:back\",\n+                        Constants.ON_CLICK);\n \n         component = findComponentByProp(\"resourceName\",\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n \n         component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n@@ -183,52 +182,54 @@ private void userStatusBulkAction(final int index, final String resourceName) {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        component = findComponentByProp(\"username\", searchResultContainer\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n         formTester = TESTER.newFormTester(\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", index);\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:\"\n                 + \"status:secondLevelContainer:second:container:actions:panelReactivate:reactivateLink\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.assertLabel(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:secondLevelContainer:back\",\n-                Constants.ON_CLICK);\n+        TESTER.\n+                executeAjaxEvent(TAB_PANEL\n+                        + \"outerObjectsRepeater:1:outer:form:content:status:secondLevelContainer:back\",\n+                        Constants.ON_CLICK);\n \n         component = findComponentByProp(\"resourceName\",\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resourceName);\n \n         component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n         assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resourceName, StatusBean.class.cast(component.getDefaultModelObject()).getResourceName());\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:dialog:footer:buttons:0:button\",\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n     }\n \n@@ -237,42 +238,42 @@ public void groupResourceBulkAction() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", searchResultContainer\n+        Component component = findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath()\n                 + \":cells:4:cell:panelManageResources:manageResourcesLink\");\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        TESTER.clickLink(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n         component = findComponentByProp(\"resourceName\",\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n         FormTester formTester = TESTER.newFormTester(\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 7);\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"outerObjectsRepeater:1:outer:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:1:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-testdb2\"));\n     }\n \n@@ -281,43 +282,43 @@ public void printerResourceBulkAction() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", searchResultContainer\n+        Component component = findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath()\n                 + \":cells:4:cell:panelManageResources:manageResourcesLink\");\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        TESTER.clickLink(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n         component = findComponentByProp(\"resourceName\",\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n         FormTester formTester = TESTER.newFormTester(\n-                tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n+                TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 7);\n \n-        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"outerObjectsRepeater:1:outer:\"\n+        assertNotNull(findComponentByProp(\"resourceName\", TAB_PANEL + \"outerObjectsRepeater:1:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-testdb2\"));\n     }\n "},{"sha":"21b51ffc73e12d5b9667148de2a898cfd890e458","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ConsoleSetup.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FConsoleSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FConsoleSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FConsoleSetup.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import javax.servlet.ServletContext;\n+import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.ConsoleInitializer;\n+import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.wicket.util.tester.WicketTester;\n+\n+public final class ConsoleSetup {\n+\n+    public static final WicketTester TESTER = new WicketTester(new SyncopeConsoleApplication() {\n+\n+        @Override\n+        protected void init() {\n+            ServletContext ctx = getServletContext();\n+            ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+            lookup.load();\n+            ctx.setAttribute(ConsoleInitializer.CLASSPATH_LOOKUP, lookup);\n+\n+            MIMETypesLoader mimeTypes = new MIMETypesLoader();\n+            mimeTypes.load();\n+            ctx.setAttribute(ConsoleInitializer.MIMETYPES_LOADER, mimeTypes);\n+\n+            super.init();\n+        }\n+    });\n+\n+}"},{"sha":"cb8e7829fe1a48b87b9ac3be26583a10f12d700c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/DisplayAttributesITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -22,11 +22,8 @@\n import org.apache.syncope.client.console.pages.Realms;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class DisplayAttributesITCase extends AbstractConsoleITCase {\n \n     @Before"},{"sha":"f71fa63e550347cf7cd838149a5a4be326e08a50","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -24,14 +24,11 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.junit.Before;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class GroupsITCase extends AbstractConsoleITCase {\n \n     private final String tabPanel = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";"},{"sha":"d192d57e3a7760ef91bd4d6229a8a0489c21d3cd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/LogsITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -50,15 +50,15 @@ public void readCoreLogs() {\n         TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n         TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n-        assertNotNull(searchLog(KEY, CONTAINER_PATH, \"org.apache.camel\"));\n+        assertNotNull(searchLog(KEY, CONTAINER_PATH, \"io.swagger\"));\n     }\n \n     @Test\n     public void updateCoreLogs() {\n         TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n         TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n-        Component result = searchLog(KEY, CONTAINER_PATH, \"org.apache.camel\");\n+        Component result = searchLog(KEY, CONTAINER_PATH, \"io.swagger\");\n         assertNotNull(result);\n \n         TESTER.getRequest().addParameter("},{"sha":"adf4238eb537f1a5b218742b5f300b1053a341a5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/NotificationsITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -28,11 +28,8 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class NotificationsITCase extends AbstractConsoleITCase {\n \n     @Before"},{"sha":"ab88a4dbb7773fb39b75a6f2556335490299111a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -26,11 +26,8 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class ParametersITCase extends AbstractConsoleITCase {\n \n     @Before"},{"sha":"5916ce0305bf795f434885f4130de26cd0b50cd6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -27,11 +27,8 @@\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Assert;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class PoliciesITCase extends AbstractConsoleITCase {\n \n     @Before"},{"sha":"c44f52aeadcac45c6a0cd099e96455dec61f3605","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -28,11 +28,8 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class RealmsITCase extends AbstractConsoleITCase {\n \n     @Before\n@@ -113,9 +110,9 @@ public void addUserTemplate() {\n         TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n         TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:3:button\",\n                 Constants.ON_CLICK);\n-        \n+\n         TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n-        \n+\n         TESTER.clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n         TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n@@ -133,7 +130,7 @@ public void addUserTemplate() {\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n-        \n+\n         TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n \n         TESTER.clickLink(\n@@ -149,7 +146,7 @@ public void addUserTemplate() {\n \n         TESTER.assertModelValue(\"body:content:templateModal:form:content:form:view:username:textField\",\n                 \"'k' + firstname\");\n-        \n+\n         formTester = TESTER.newFormTester(\"body:content:templateModal:form:content:form\");\n         formTester.setValue(\"view:username:textField\", \"\");\n         formTester.submit(\"buttons:finish\");\n@@ -192,10 +189,10 @@ public void verifyPropagation() {\n \n         TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:oldAttribute:textField\", null);\n-        \n+\n         TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:1:value:oldAttribute:textField\", null);\n-        \n+\n         TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:2:value:oldAttribute:textField\", null);\n \n@@ -253,10 +250,10 @@ public void verifyPropagation() {\n \n         TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:1:value:newAttribute:textField\", null);\n-        \n+\n         TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:2:value:newAttribute:textField\", null);\n-        \n+\n         TESTER.clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:back\");\n "},{"sha":"c5bde0ca02fa421e1d88b7caff41c7909bc28374","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RelationshipTypesITCase.java","status":"renamed","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -28,12 +28,9 @@\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n-public class RelationshipTypeITCase extends AbstractTypesITCase {\n+public class RelationshipTypesITCase extends AbstractTypesITCase {\n \n     @Test\n     public void read() {\n@@ -110,7 +107,7 @@ public void delete() {\n \n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                        result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n+                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");","previous_filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RelationshipTypeITCase.java"},{"sha":"7adf92d8d9d840ea14767643fceed6e124dc3b18","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ReportsITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -28,11 +28,8 @@\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class ReportsITCase extends AbstractConsoleITCase {\n \n     @Before"},{"sha":"05d98e323f21edf428e4193df7f442b064e0374d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -27,11 +27,8 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class RolesITCase extends AbstractConsoleITCase {\n \n     @Before"},{"sha":"75f3057a9f602f700218f47ca637f82c3a1f1212","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SchemasITCase.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,11 +30,8 @@\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class SchemasITCase extends AbstractTypesITCase {\n \n     @Test\n@@ -152,7 +149,7 @@ public void deletePlainSchema() {\n \n         TESTER.getRequest().addParameter(\"confirm\", \"true\");\n         TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n-                        result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"));\n+                result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"));\n \n         TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"), \"onclick\");"},{"sha":"50aa6673ab154727ce9d0951a0ea0e99a8d03e9d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -29,11 +29,8 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class SecurityQuestionsITCase extends AbstractConsoleITCase {\n \n     @Before"},{"sha":"7a6d343935a61f4702fdbd1b131b6e1819590abc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":9,"deletions":12,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -25,19 +25,16 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.junit.Before;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class UsersITCase extends AbstractConsoleITCase {\n \n     private static final String TAB_PANEL = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n \n-    private static final String SEARCH_RES_CONTAINER = TAB_PANEL + \"container:content:\";\n+    private static final String CONTAINER = TAB_PANEL + \"container:content:\";\n \n     @Before\n     public void login() {\n@@ -66,7 +63,7 @@ public void forceChangePassword() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"verdi\");\n         assertNotNull(component);\n \n@@ -81,7 +78,7 @@ public void clickToCloneUser() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n@@ -102,7 +99,7 @@ public void editUser() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n@@ -153,7 +150,7 @@ public void editUser() {\n \n         TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n \n-        component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n     }\n@@ -167,11 +164,11 @@ public void editUserMembership() {\n \n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNull(component);\n \n-        component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n@@ -217,7 +214,7 @@ public void editUserMembership() {\n \n         TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n \n-        component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n+        component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n@@ -247,7 +244,7 @@ public void checkDeleteUsrLink() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n+        Component component = findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n "},{"sha":"b4aaf2ea9548bca22af1358c5b75540a50c6086f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyObjectITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -42,11 +42,8 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class AnyObjectITCase extends AbstractITCase {\n \n     public static AnyObjectTO getSampleTO(final String location) {"},{"sha":"5cc40f82459a1d0faacb147b28a3170803d34a79","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyTypeClassITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeClassITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeClassITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeClassITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -36,11 +36,8 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class AnyTypeClassITCase extends AbstractITCase {\n \n     @Test"},{"sha":"93cd32639e263ad4a8a6d7ad5dfb08ae06195931","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyTypeITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyTypeITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -34,11 +34,8 @@\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class AnyTypeITCase extends AbstractITCase {\n \n     @Test"},{"sha":"af6914e6acd70c843cabeb327f7dec06ffec7af5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,6 +30,7 @@\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import javax.sql.DataSource;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -75,14 +76,20 @@\n import org.apache.syncope.core.spring.security.Encryptor;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.Assume;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:testJDBCEnv.xml\" })\n public class AuthenticationITCase extends AbstractITCase {\n \n+    @Autowired\n+    private DataSource testDataSource;\n+\n     private int getFailedLogins(final UserService userService, final String userKey) {\n         UserTO readUserTO = userService.read(userKey);\n         assertNotNull(readUserTO);\n@@ -206,7 +213,8 @@ public void testUserSearch() {\n         UserService userService2 = clientFactory.create(userTO.getUsername(), \"password123\").\n                 getService(UserService.class);\n \n-        PagedResult<UserTO> matchingUsers = userService2.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+        PagedResult<UserTO> matchingUsers = userService2.search(new AnyQuery.Builder().\n+                realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"key\").query()).build());\n         assertNotNull(matchingUsers);\n         assertFalse(matchingUsers.getResult().isEmpty());"},{"sha":"20feec630681772b8cc25022e576096744c7762d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/CamelRouteITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -34,11 +34,8 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.Assume;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class CamelRouteITCase extends AbstractITCase {\n \n     @Test"},{"sha":"d1780e71de5246e4ac63c45b8412768746f982d9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConfigurationITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -42,11 +42,8 @@\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class ConfigurationITCase extends AbstractITCase {\n \n     @Test"},{"sha":"cfc2cd1886407d0034f39c9857818a6502898fc0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConnectorITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -63,11 +63,8 @@\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.junit.BeforeClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class ConnectorITCase extends AbstractITCase {\n \n     private static String connectorServerLocation;"},{"sha":"db8bdaae72fbd9b723a67492ee89d441046542b8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/DerSchemaITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDerSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDerSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDerSchemaITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -33,11 +33,8 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class DerSchemaITCase extends AbstractITCase {\n \n     @Test"},{"sha":"5c635e5dd9ee892868dcbf79882bc5761ea65fd3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/DomainITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDomainITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDomainITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDomainITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -31,11 +31,8 @@\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class DomainITCase extends AbstractITCase {\n \n     @Test"},{"sha":"8a8e6a22cfaca9a5af9ce3c7c68b8ea554d80782","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FExceptionMapperITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -35,11 +35,8 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.BeforeClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class ExceptionMapperITCase extends AbstractITCase {\n \n     private static final Properties ERROR_MESSAGES = new Properties();"},{"sha":"9c86a8ea23ff7be1b672c3d20fe882280c967a83","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -88,11 +88,8 @@\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class GroupITCase extends AbstractITCase {\n \n     public static GroupTO getBasicSampleTO(final String name) {"},{"sha":"ccd5d243ccf909527d290cb373b343e6587bb13a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LoggerITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -44,11 +44,8 @@\n import org.apache.syncope.core.logic.GroupLogic;\n import org.apache.syncope.core.logic.UserLogic;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class LoggerITCase extends AbstractITCase {\n \n     @Test"},{"sha":"4911382fa4769e652afee42a25d1002f2e70c1c4","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MailTemplateITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMailTemplateITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -36,11 +36,8 @@\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.MailTemplateFormat;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class MailTemplateITCase extends AbstractITCase {\n \n     @Test"},{"sha":"577af666471d9c42ac4221ae0286f74ee0c50798","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MembershipITCase.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMembershipITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -24,6 +24,7 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import javax.sql.DataSource;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n@@ -54,14 +55,20 @@\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:testJDBCEnv.xml\" })\n public class MembershipITCase extends AbstractITCase {\n \n+    @Autowired\n+    private DataSource testDataSource;\n+\n     @Test\n     public void misc() {\n         UserTO user = UserITCase.getUniqueSampleTO(\"memb@apache.org\");"},{"sha":"fee17fbf978c59e71f0bf57a3bc1952528f0fbf1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MigrationITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -64,15 +64,15 @@\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.junit.BeforeClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.datasource.DriverManagerDataSource;\n import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@ContextConfiguration(locations = { \"classpath:migrationContext.xml\" })\n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:migrationEnv.xml\" })\n public class MigrationITCase extends AbstractTaskITCase {\n \n     private static final String CONNINSTANCE_DISPLAY_NAME = \"syncope12DB\";"},{"sha":"ae97d2b22e18d07377357f20e88403096305f0db","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -62,11 +62,8 @@\n import org.apache.syncope.fit.AbstractITCase;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.junit.BeforeClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class MultitenancyITCase extends AbstractITCase {\n \n     @BeforeClass\n@@ -212,7 +209,8 @@ public void createResourceAndPull() {\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(status));\n \n             // verify that pulled user is found\n-            PagedResult<UserTO> matchingUsers = adminClient.getService(UserService.class).search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+            PagedResult<UserTO> matchingUsers = adminClient.getService(UserService.class).search(new AnyQuery.Builder().\n+                    realm(SyncopeConstants.ROOT_REALM).\n                     fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").query()).\n                     build());\n             assertNotNull(matchingUsers);"},{"sha":"c16176878f039dd2ebbcaa26f2694c367e32a47e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/NotificationITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -33,11 +33,8 @@\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.common.rest.api.service.NotificationService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class NotificationITCase extends AbstractITCase {\n \n     private NotificationTO buildNotificationTO() {"},{"sha":"8f3a1cb54d370f7ccc498ec4ac259e00877ceb83","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/NotificationTaskITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FNotificationTaskITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -55,11 +55,8 @@\n import org.apache.syncope.fit.core.reference.TestNotificationRecipientsProvider;\n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class NotificationTaskITCase extends AbstractTaskITCase {\n \n     private static final String MAIL_ADDRESS = \"notificationtest@syncope.apache.org\";"},{"sha":"8841851faad98a890c3ebc554e7c27eb15c4b0d5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PlainSchemaITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -44,11 +44,8 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class PlainSchemaITCase extends AbstractITCase {\n \n     private PlainSchemaTO buildPlainSchemaTO(final String name, final AttrSchemaType type) {"},{"sha":"7b8d6d983e349e49c9f470abc7c210d7971fdff3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PolicyITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -40,11 +40,8 @@\n import org.apache.syncope.common.lib.policy.PullPolicySpec;\n import org.apache.syncope.fit.AbstractITCase;\n import org.apache.syncope.fit.core.reference.TestPullRule;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class PolicyITCase extends AbstractITCase {\n \n     private PullPolicyTO buildPullPolicyTO() {"},{"sha":"abf2d5d0c34211c3464a1840e8b0d8197a7ee03c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PropagationTaskITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -44,11 +44,8 @@\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n import org.apache.syncope.common.rest.api.beans.ExecQuery;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class PropagationTaskITCase extends AbstractTaskITCase {\n \n     @Test"},{"sha":"c88131fc10074ef97e9feedb589d8bcdbe91019e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -37,6 +37,7 @@\n import java.util.Properties;\n import java.util.Set;\n import java.util.UUID;\n+import javax.sql.DataSource;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n@@ -89,15 +90,21 @@\n import org.apache.syncope.fit.core.reference.TestPullRule;\n import org.identityconnectors.framework.common.objects.Name;\n import org.junit.BeforeClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.dao.EmptyResultDataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:testJDBCEnv.xml\" })\n public class PullTaskITCase extends AbstractTaskITCase {\n \n+    @Autowired\n+    private DataSource testDataSource;\n+\n     @BeforeClass\n     public static void testPullActionsSetup() {\n         PullTaskTO pullTask = taskService.read(PULL_TASK_KEY, true);"},{"sha":"9c9a1499b6e918ebd088e8cb1448fc5c7c533eef","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PushTaskITCase.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -27,6 +27,7 @@\n \n import java.util.HashSet;\n import java.util.Set;\n+import javax.sql.DataSource;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n@@ -56,14 +57,20 @@\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:testJDBCEnv.xml\" })\n public class PushTaskITCase extends AbstractTaskITCase {\n \n+    @Autowired\n+    private DataSource testDataSource;\n+\n     @Test\n     public void getPushActionsClasses() {\n         Set<String> actions = syncopeService.platform().getPushActions();"},{"sha":"f11e421a9179f6ea002498ae31ade19f64a64aaa","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RESTITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRESTITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRESTITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRESTITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -52,11 +52,8 @@\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class RESTITCase extends AbstractITCase {\n \n     @Test"},{"sha":"3d1622e1958fb7b6f82028ad598ed6bec0e89f56","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RealmITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -40,11 +40,8 @@\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.rest.api.service.RealmService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class RealmITCase extends AbstractITCase {\n \n     private RealmTO getRealm(final String fullPath) {"},{"sha":"0afa80e77067e1f73766959f7dc291bdde047810","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RelationshipTypeITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRelationshipTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRelationshipTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRelationshipTypeITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,11 +30,8 @@\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class RelationshipTypeITCase extends AbstractITCase {\n \n     @Test"},{"sha":"9f9f8bef1cb739f3beac192991ba83b58de7bd78","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -51,11 +51,8 @@\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n import org.apache.syncope.common.rest.api.service.ReportService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class ReportITCase extends AbstractITCase {\n \n     private ReportTO createReport(final ReportTO report) {"},{"sha":"f640c437a0fb29c2d630fd57c0a6dbbd36252e60","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportTemplateITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportTemplateITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -36,11 +36,8 @@\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class ReportTemplateITCase extends AbstractITCase {\n \n     @Test"},{"sha":"c2d23b817a1de1a262ffd9d4d76e50a6de48503b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ResourceITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -56,11 +56,8 @@\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class ResourceITCase extends AbstractITCase {\n \n     private ResourceTO buildResourceTO(final String resourceKey) {"},{"sha":"62fdde1b7a393c54fe07a0342cc5a1a58c8d1999","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RoleITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -33,11 +33,8 @@\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.RoleService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class RoleITCase extends AbstractITCase {\n \n     public static RoleTO getSampleRoleTO(final String name) {"},{"sha":"c1558318893f2a41e4b0fa21d0f60f9adbd6cdd1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SchedTaskITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSchedTaskITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -46,11 +46,8 @@\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.fit.core.reference.TestSampleJobDelegate;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class SchedTaskITCase extends AbstractTaskITCase {\n \n     @Test"},{"sha":"a044c2293f4654b979caa6dbdeb218200ac6b3d8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -38,11 +38,8 @@\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.service.RoleService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class SearchITCase extends AbstractITCase {\n \n     @Test"},{"sha":"cb9b018b7bc4282c16a692b3a90b96621146c0e0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SecurityQuestionITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSecurityQuestionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSecurityQuestionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSecurityQuestionITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,11 +30,8 @@\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class SecurityQuestionITCase extends AbstractITCase {\n \n     @Test"},{"sha":"78c219b9a50868dba65d6ecda4d6b590886f0c53","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SwaggerITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSwaggerITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSwaggerITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSwaggerITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -31,11 +31,8 @@\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.Assume;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class SwaggerITCase extends AbstractITCase {\n \n     @Test"},{"sha":"f5f73a590b0d844fac8b4a421979de8df67b847c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -84,11 +84,8 @@\n import org.apache.syncope.fit.ActivitiDetector;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.junit.Assume;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class UserITCase extends AbstractITCase {\n \n     private static final FastDateFormat DATE_FORMAT = DateFormatUtils.ISO_DATE_FORMAT;"},{"sha":"f1432903b1fac803e9af1328f63b643adcbc5f87","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -33,6 +33,7 @@\n import java.util.Map;\n import java.util.Set;\n import javax.naming.NamingException;\n+import javax.sql.DataSource;\n import javax.ws.rs.core.GenericType;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.common.util.Base64Utility;\n@@ -70,15 +71,21 @@\n import org.apache.syncope.fit.core.reference.DoubleValueLogicActions;\n import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.dao.EmptyResultDataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:testJDBCEnv.xml\" })\n public class UserIssuesITCase extends AbstractITCase {\n \n+    @Autowired\n+    private DataSource testDataSource;\n+\n     @Test\n     public void issue186() {\n         // 1. create an user with strict mandatory attributes only"},{"sha":"15a4bbe277e342bdcf2f0e34c787a4082e65c83d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserSelfITCase.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -31,6 +31,7 @@\n import java.security.AccessControlException;\n import java.util.Map;\n import java.util.Set;\n+import javax.sql.DataSource;\n import javax.ws.rs.core.GenericType;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -55,14 +56,20 @@\n import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.Assume;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:testJDBCEnv.xml\" })\n public class UserSelfITCase extends AbstractITCase {\n \n+    @Autowired\n+    private DataSource testDataSource;\n+\n     @Test\n     public void selfRegistrationAllowed() {\n         assertTrue(syncopeService.platform().isSelfRegAllowed());"},{"sha":"53b9303ae2f59f70156c5114366929be61260028","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserWorkflowITCase.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserWorkflowITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -30,6 +30,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import javax.sql.DataSource;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.StringPatchItem;\n@@ -44,15 +45,21 @@\n import org.apache.syncope.common.rest.api.service.UserWorkflowService;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.Assume;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.dao.EmptyResultDataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:testJDBCEnv.xml\" })\n public class UserWorkflowITCase extends AbstractITCase {\n \n+    @Autowired\n+    private DataSource testDataSource;\n+\n     @Test\n     public void createWithReject() {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers(syncopeService));"},{"sha":"accf2a78e7d1722b42403eef8aef7f5bad12662b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -25,6 +25,7 @@\n \n import java.util.Locale;\n import java.util.Map;\n+import javax.sql.DataSource;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -59,14 +60,20 @@\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.fit.AbstractITCase;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n-@FixMethodOrder(MethodSorters.JVM)\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = { \"classpath:testJDBCEnv.xml\" })\n public class VirAttrITCase extends AbstractITCase {\n \n+    @Autowired\n+    private DataSource testDataSource;\n+\n     @Test\n     public void issueSYNCOPE16() {\n         UserTO userTO = UserITCase.getUniqueSampleTO(\"issue16@apache.org\");"},{"sha":"15faa018e823002d78c096d5bdbcda99bb542351","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirSchemaITCase.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java?ref=f19e261cf768ddab0aa85c194cf9452852142808","patch":"@@ -36,11 +36,8 @@\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.FixMethodOrder;\n import org.junit.Test;\n-import org.junit.runners.MethodSorters;\n \n-@FixMethodOrder(MethodSorters.JVM)\n public class VirSchemaITCase extends AbstractITCase {\n \n     @Test"},{"sha":"bd83dcaba129b355609638121ca246479eda178c","filename":"fit/core-reference/src/test/resources/migrationEnv.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FmigrationEnv.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FmigrationEnv.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FmigrationEnv.xml?ref=f19e261cf768ddab0aa85c194cf9452852142808","previous_filename":"fit/core-reference/src/test/resources/migrationContext.xml"},{"sha":"d89e067703708da344daac5c0f527fbd16661360","filename":"fit/core-reference/src/test/resources/testJDBCEnv.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f19e261cf768ddab0aa85c194cf9452852142808/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FtestJDBCEnv.xml?ref=f19e261cf768ddab0aa85c194cf9452852142808","previous_filename":"fit/core-reference/src/test/resources/testJDBCContext.xml"}]}