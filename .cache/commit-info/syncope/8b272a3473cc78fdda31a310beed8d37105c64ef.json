{"sha":"8b272a3473cc78fdda31a310beed8d37105c64ef","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhiMjcyYTM0NzNjYzc4ZmRkYTMxYTMxMGJlZWQ4ZDM3MTA1YzY0ZWY=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-17T12:13:11Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-17T12:13:11Z"},"message":"SYNCOPE-241 Moving PropagationActions back into core.propagation. Created impl package to avoid cycles\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1434636 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"21c973be432a8695dba7c852b29e0b0f3e299f3f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/21c973be432a8695dba7c852b29e0b0f3e299f3f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8b272a3473cc78fdda31a310beed8d37105c64ef","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b272a3473cc78fdda31a310beed8d37105c64ef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8b272a3473cc78fdda31a310beed8d37105c64ef","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b272a3473cc78fdda31a310beed8d37105c64ef/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"5630e4eb3052d1f743363b16549574e7624dc6de","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5630e4eb3052d1f743363b16549574e7624dc6de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5630e4eb3052d1f743363b16549574e7624dc6de"}],"stats":{"total":452,"additions":312,"deletions":140},"files":[{"sha":"d8fd2cc1fe2fa7b89c6c8faea308a16603df6f54","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -47,8 +47,8 @@\n import org.apache.syncope.core.persistence.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n-import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n@@ -469,7 +469,7 @@ public void retrieveVirAttrValues(final AbstractAttributable owner, final Attrib\n                     final OperationOptionsBuilder oob = new OperationOptionsBuilder();\n                     oob.setAttributesToGet(extAttrNames);\n \n-                    final ConnectorFacadeProxy connector = connInstanceLoader.getConnector(resource);\n+                    final SyncopeConnector connector = connInstanceLoader.getConnector(resource);\n                     final ConnectorObject connObj =\n                             connector.getObject(fromAttributable(owner), new Uid(accountId), oob.build());\n                     if (connObj != null) {"},{"sha":"9ad3c9eb58e968941adf23fca787a96841047129","filename":"core/src/main/java/org/apache/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -25,8 +25,9 @@\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.dao.ConnectorRegistry;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n-import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n+import org.apache.syncope.core.propagation.impl.ConnectorFacadeProxy;\n import org.apache.syncope.core.rest.data.ResourceDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.util.ConnBundleManager;\n@@ -65,18 +66,18 @@ private String getBeanName(final ExternalResource resource) {\n      * @see ConnectorFactory#getConnector(org.apache.syncope.core.persistence.beans.ExternalResource)\n      */\n     @Override\n-    public ConnectorFacadeProxy getConnector(final ExternalResource resource)\n+    public SyncopeConnector getConnector(final ExternalResource resource)\n             throws BeansException, NotFoundException {\n \n         // Try to re-create connector bean from underlying resource (useful for managing failover scenarios)\n         if (!ApplicationContextProvider.getBeanFactory().containsBean(getBeanName(resource))) {\n             registerConnector(resource);\n         }\n \n-        return (ConnectorFacadeProxy) ApplicationContextProvider.getBeanFactory().getBean(getBeanName(resource));\n+        return (SyncopeConnector) ApplicationContextProvider.getBeanFactory().getBean(getBeanName(resource));\n     }\n \n-    public ConnectorFacadeProxy createConnectorBean(final ExternalResource resource)\n+    public SyncopeConnector createConnectorBean(final ExternalResource resource)\n             throws NotFoundException {\n \n         final ConnInstance connInstanceClone = resourceDataBinder.getConnInstance(resource);\n@@ -93,7 +94,7 @@ public ConnectorFacadeProxy createConnectorBean(final ExternalResource resource)\n      * @throws NotFoundException when not able to fetch all the required data.\n      */\n     @Override\n-    public ConnectorFacadeProxy createConnectorBean(final ConnInstance connInstance,\n+    public SyncopeConnector createConnectorBean(final ConnInstance connInstance,\n             final Set<ConnConfProperty> configuration)\n             throws NotFoundException {\n \n@@ -111,7 +112,7 @@ public ConnectorFacadeProxy createConnectorBean(final ConnInstance connInstance,\n     public void registerConnector(final ExternalResource resource)\n             throws NotFoundException {\n \n-        final ConnectorFacadeProxy connector = createConnectorBean(resource);\n+        final SyncopeConnector connector = createConnectorBean(resource);\n         LOG.debug(\"Connector to be registered: {}\", connector);\n \n         final String beanName = getBeanName(resource);"},{"sha":"b5a964c8b9e5bbf59502bbeaec8f63b7b9fb6c18","filename":"core/src/main/java/org/apache/syncope/core/init/ImplementationClassNamesLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FImplementationClassNamesLoader.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -25,9 +25,9 @@\n import java.util.Map;\n import java.util.Set;\n \n-import org.apache.syncope.core.persistence.beans.PropagationActions;\n import org.apache.syncope.core.persistence.beans.SyncActions;\n import org.apache.syncope.core.persistence.validation.attrvalue.Validator;\n+import org.apache.syncope.core.propagation.PropagationActions;\n import org.apache.syncope.core.report.Reportlet;\n import org.apache.syncope.core.notification.NotificationJob;\n import org.apache.syncope.core.report.ReportJob;"},{"sha":"0b9abd016428af1d6f7dfa000369d5f93486aadc","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/ExternalResourceValidator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractMapping;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n-import org.apache.syncope.core.persistence.beans.PropagationActions;\n+import org.apache.syncope.core.propagation.PropagationActions;\n import org.apache.syncope.types.EntityViolationType;\n \n public class ExternalResourceValidator extends AbstractValidator implements"},{"sha":"5cee1e917efe73652c95b05ee268771c88b295c0","filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFactory.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFactory.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -27,7 +27,7 @@\n \n public interface ConnectorFactory {\n \n-    ConnectorFacadeProxy createConnectorBean(ConnInstance connInstance, Set<ConnConfProperty> configuration)\n+    SyncopeConnector createConnectorBean(ConnInstance connInstance, Set<ConnConfProperty> configuration)\n             throws NotFoundException;\n \n     /**\n@@ -38,7 +38,7 @@ ConnectorFacadeProxy createConnectorBean(ConnInstance connInstance, Set<ConnConf\n      * @throws BeansException if there is any problem with Spring\n      * @throws NotFoundException if the connector is not registered in the context\n      */\n-    ConnectorFacadeProxy getConnector(ExternalResource resource)\n+    SyncopeConnector getConnector(ExternalResource resource)\n             throws BeansException, NotFoundException;\n \n     void load();"},{"sha":"bdc72d2539353df41408e867538eb08b53b1bc23","filename":"core/src/main/java/org/apache/syncope/core/propagation/DefaultPropagationActions.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FDefaultPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FDefaultPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FDefaultPropagationActions.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.propagation;\n \n-import org.apache.syncope.core.persistence.beans.PropagationActions;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n import org.identityconnectors.framework.common.objects.ConnectorObject;"},{"sha":"8640b2aa8c553dcfe0b44f71180893bcc049e750","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationActions.java","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationActions.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -16,8 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.beans;\n+package org.apache.syncope.core.propagation;\n \n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.TaskExec;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n \n public interface PropagationActions {","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/PropagationActions.java"},{"sha":"8305545a9146fdef333335e8232251c331315c8b","filename":"core/src/main/java/org/apache/syncope/core/propagation/SyncopeConnector.java","status":"added","additions":191,"deletions":0,"changes":191,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FSyncopeConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FSyncopeConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FSyncopeConnector.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -0,0 +1,191 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.propagation;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n+import org.apache.syncope.core.persistence.beans.ConnInstance;\n+import org.apache.syncope.types.PropagationMode;\n+import org.apache.syncope.types.ResourceOperation;\n+import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.identityconnectors.framework.common.objects.OperationOptions;\n+import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n+import org.identityconnectors.framework.common.objects.SyncToken;\n+import org.identityconnectors.framework.common.objects.Uid;\n+import org.identityconnectors.framework.common.objects.filter.Filter;\n+\n+public interface SyncopeConnector {\n+\n+    /**\n+     * Create user on a connector instance.\n+     *\n+     * @param propagationMode propagation mode\n+     * @param objectClass ConnId's object class\n+     * @param attrs attributes for creation\n+     * @param options ConnId's OperationOptions\n+     * @param propagationAttempted if creation is actually performed (based on connector instance's capabilities)\n+     * @return Uid for created user\n+     */\n+    Uid create(PropagationMode propagationMode, ObjectClass objectClass,\n+            Set<Attribute> attrs, OperationOptions options,\n+            Set<String> propagationAttempted);\n+\n+    /**\n+     * Update user on a connector instance.\n+     *\n+     * @param propagationMode propagation mode\n+     * @param objectClass ConnId's object class\n+     * @param uid user to be updated\n+     * @param attrs attributes for update\n+     * @param options ConnId's OperationOptions\n+     * @param propagationAttempted if update is actually performed (based on connector instance's capabilities)\n+     * @return Uid for created user\n+     */\n+    Uid update(PropagationMode propagationMode, ObjectClass objectClass,\n+            Uid uid, Set<Attribute> attrs, OperationOptions options,\n+            Set<String> propagationAttempted);\n+\n+    /**\n+     * Delete user on a connector instance.\n+     *\n+     * @param propagationMode propagation mode\n+     * @param objectClass ConnId's object class\n+     * @param uid user to be deleted\n+     * @param options ConnId's OperationOptions\n+     * @param propagationAttempted if deletion is actually performed (based on connector instance's capabilities)\n+     */\n+    void delete(PropagationMode propagationMode, ObjectClass objectClass,\n+            Uid uid, OperationOptions options, Set<String> propagationAttempted);\n+\n+    /**\n+     * Sync users from a connector instance.\n+     *\n+     * @param objectClass ConnId's object class.\n+     * @param token to be passed to the underlying connector\n+     * @param handler to be used to handle deltas.\n+     */\n+    void sync(ObjectClass objectClass, SyncToken token,\n+            SyncResultsHandler handler, OperationOptions options);\n+\n+    /**\n+     * Read latest sync token from a connector instance.\n+     *\n+     * @param objectClass ConnId's object class.\n+     * @return latest sync token\n+     */\n+    SyncToken getLatestSyncToken(ObjectClass objectClass);\n+\n+    /**\n+     * Get remote object.\n+     *\n+     * @param objectClass ConnId's object class\n+     * @param uid ConnId's Uid\n+     * @param options ConnId's OperationOptions\n+     * @return ConnId's connector object for given uid\n+     */\n+    ConnectorObject getObject(ObjectClass objectClass, Uid uid,\n+            OperationOptions options);\n+\n+    /**\n+     * Get remote object used by the propagation manager in order to choose for a create (object doesn't exist) or an\n+     * update (object exists).\n+     *\n+     * @param propagationMode propagation mode\n+     * @param operationType resource operation type\n+     * @param objectClass ConnId's object class\n+     * @param uid ConnId's Uid\n+     * @param options ConnId's OperationOptions\n+     * @return ConnId's connector object for given uid\n+     */\n+    ConnectorObject getObject(PropagationMode propagationMode,\n+            ResourceOperation operationType, ObjectClass objectClass, Uid uid,\n+            OperationOptions options);\n+\n+    List<ConnectorObject> search(ObjectClass objectClass, Filter filter,\n+            OperationOptions options);\n+\n+    /**\n+     * Get remote object used by the propagation manager in order to choose for a create (object doesn't exist) or an\n+     * update (object exists).\n+     *\n+     * @param objectClass ConnId's object class.\n+     * @param handler to be used to handle deltas.\n+     * @param options ConnId's OperationOptions.\n+     */\n+    void getAllObjects(ObjectClass objectClass, SyncResultsHandler handler,\n+            OperationOptions options);\n+\n+    /**\n+     * Read attribute for a given connector object.\n+     *\n+     * @param objectClass ConnId's object class\n+     * @param uid ConnId's Uid\n+     * @param options ConnId's OperationOptions\n+     * @param attributeName attribute to read\n+     * @return attribute (if present)\n+     */\n+    Attribute getObjectAttribute(ObjectClass objectClass, Uid uid,\n+            OperationOptions options, String attributeName);\n+\n+    /**\n+     *\n+     * @param objectClass ConnId's object class\n+     * @param uid ConnId's Uid\n+     * @param options ConnId's OperationOptions\n+     * @return attributes (if present)\n+     */\n+    Set<Attribute> getObjectAttributes(ObjectClass objectClass, Uid uid,\n+            OperationOptions options);\n+\n+    /**\n+     * Return resource schema names.\n+     *\n+     * @param showall return special attributes (like as __NAME__ or __PASSWORD__) if true\n+     * @return a list of schema names\n+     */\n+    Set<String> getSchema(boolean showall);\n+\n+    /**\n+     * Validate a connector instance.\n+     */\n+    void validate();\n+\n+    /**\n+     * Check connection to resource.\n+     */\n+    void test();\n+\n+    /**\n+     * Getter for active connector instance.\n+     *\n+     * @return active connector instance.\n+     */\n+    ConnInstance getActiveConnInstance();\n+\n+    OperationOptions getOperationOptions(\n+            Collection<AbstractMappingItem> mapItems);\n+\n+    String toString();\n+\n+}\n\\ No newline at end of file"},{"sha":"f0a5eeceaf6fc7098181ee3124954d563a50d600","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/AbstractPropagationTaskExecutor.java","status":"renamed","additions":12,"deletions":6,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.propagation;\n+package org.apache.syncope.core.propagation.impl;\n \n import java.io.PrintWriter;\n import java.io.StringWriter;\n@@ -30,10 +30,16 @@\n import org.apache.syncope.core.connid.ConnObjectUtil;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n-import org.apache.syncope.core.persistence.beans.PropagationActions;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n+import org.apache.syncope.core.propagation.ConnectorFactory;\n+import org.apache.syncope.core.propagation.DefaultPropagationActions;\n+import org.apache.syncope.core.propagation.PropagationActions;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationHandler;\n+import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n@@ -114,7 +120,7 @@ protected PropagationActions getPropagationActions(final ExternalResource resour\n     }\n \n     protected void createOrUpdate(final PropagationTask task, final ConnectorObject beforeObj,\n-            final ConnectorFacadeProxy connector, final Set<String> propagationAttempted) {\n+            final SyncopeConnector connector, final Set<String> propagationAttempted) {\n \n         // set of attributes to be propagated\n         final Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n@@ -222,7 +228,7 @@ protected AbstractAttributable getSubject(final PropagationTask task) {\n     }\n \n     protected void delete(final PropagationTask task, final ConnectorObject beforeObj,\n-            final ConnectorFacadeProxy connector, final Set<String> propagationAttempted) {\n+            final SyncopeConnector connector, final Set<String> propagationAttempted) {\n \n         if (beforeObj == null) {\n             LOG.debug(\"{} not found on external resource: ignoring delete\", task.getAccountId());\n@@ -275,7 +281,7 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n         ConnectorObject beforeObj = null;\n         ConnectorObject afterObj = null;\n \n-        ConnectorFacadeProxy connector = null;\n+        SyncopeConnector connector = null;\n         try {\n             connector = connLoader.getConnector(task.getResource());\n \n@@ -421,7 +427,7 @@ protected boolean hasToBeregistered(final PropagationTask task, final TaskExec e\n      * @param latest 'FALSE' to retrieve object using old accountId if not null.\n      * @return remote connector object.\n      */\n-    protected ConnectorObject getRemoteObject(final PropagationTask task, final ConnectorFacadeProxy connector,\n+    protected ConnectorObject getRemoteObject(final PropagationTask task, final SyncopeConnector connector,\n             final boolean latest) {\n \n         String accountId = latest || task.getOldAccountId() == null","previous_filename":"core/src/main/java/org/apache/syncope/core/propagation/AbstractPropagationTaskExecutor.java"},{"sha":"3f4622fc931dbdd9de583ca1857e5c7cbc9c7d33","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/ConnectorFacadeProxy.java","status":"renamed","additions":57,"deletions":91,"changes":148,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.propagation;\n+package org.apache.syncope.core.propagation.impl;\n \n import java.io.File;\n import java.net.URI;\n@@ -28,6 +28,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.util.ConnBundleManager;\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.types.ConnConfProperty;\n@@ -67,7 +68,7 @@\n  * Intercept calls to ConnectorFacade's methods and check if the corresponding connector instance has been configured to\n  * allow every single operation: if not, simply do nothing.\n  */\n-public class ConnectorFacadeProxy {\n+public class ConnectorFacadeProxy implements SyncopeConnector {\n \n     /**\n      * Logger.\n@@ -161,16 +162,10 @@ public ConnectorFacadeProxy(final ConnInstance connInstance, final ConnBundleMan\n         connector.validate();\n     }\n \n-    /**\n-     * Create user on a connector instance.\n-     *\n-     * @param propagationMode propagation mode\n-     * @param objectClass ConnId's object class\n-     * @param attrs attributes for creation\n-     * @param options ConnId's OperationOptions\n-     * @param propagationAttempted if creation is actually performed (based on connector instance's capabilities)\n-     * @return Uid for created user\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#create(org.apache.syncope.types.PropagationMode, org.identityconnectors.framework.common.objects.ObjectClass, java.util.Set, org.identityconnectors.framework.common.objects.OperationOptions, java.util.Set)\n      */\n+    @Override\n     public Uid create(final PropagationMode propagationMode, final ObjectClass objectClass, final Set<Attribute> attrs,\n             final OperationOptions options, final Set<String> propagationAttempted) {\n \n@@ -191,17 +186,10 @@ public Uid create(final PropagationMode propagationMode, final ObjectClass objec\n         return result;\n     }\n \n-    /**\n-     * Update user on a connector instance.\n-     *\n-     * @param propagationMode propagation mode\n-     * @param objectClass ConnId's object class\n-     * @param uid user to be updated\n-     * @param attrs attributes for update\n-     * @param options ConnId's OperationOptions\n-     * @param propagationAttempted if update is actually performed (based on connector instance's capabilities)\n-     * @return Uid for created user\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#update(org.apache.syncope.types.PropagationMode, org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, java.util.Set, org.identityconnectors.framework.common.objects.OperationOptions, java.util.Set)\n      */\n+    @Override\n     public Uid update(final PropagationMode propagationMode, final ObjectClass objectClass, final Uid uid,\n             final Set<Attribute> attrs, final OperationOptions options, final Set<String> propagationAttempted) {\n \n@@ -223,15 +211,10 @@ public Uid update(final PropagationMode propagationMode, final ObjectClass objec\n         return result;\n     }\n \n-    /**\n-     * Delete user on a connector instance.\n-     *\n-     * @param propagationMode propagation mode\n-     * @param objectClass ConnId's object class\n-     * @param uid user to be deleted\n-     * @param options ConnId's OperationOptions\n-     * @param propagationAttempted if deletion is actually performed (based on connector instance's capabilities)\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#delete(org.apache.syncope.types.PropagationMode, org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions, java.util.Set)\n      */\n+    @Override\n     public void delete(final PropagationMode propagationMode, final ObjectClass objectClass, final Uid uid,\n             final OperationOptions options, final Set<String> propagationAttempted) {\n \n@@ -248,13 +231,10 @@ public void delete(final PropagationMode propagationMode, final ObjectClass obje\n         }\n     }\n \n-    /**\n-     * Sync users from a connector instance.\n-     *\n-     * @param objectClass ConnId's object class.\n-     * @param token to be passed to the underlying connector\n-     * @param handler to be used to handle deltas.\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#sync(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.SyncToken, org.identityconnectors.framework.common.objects.SyncResultsHandler, org.identityconnectors.framework.common.objects.OperationOptions)\n      */\n+    @Override\n     public void sync(final ObjectClass objectClass, final SyncToken token, final SyncResultsHandler handler,\n             final OperationOptions options) {\n \n@@ -266,12 +246,10 @@ public void sync(final ObjectClass objectClass, final SyncToken token, final Syn\n         }\n     }\n \n-    /**\n-     * Read latest sync token from a connector instance.\n-     *\n-     * @param objectClass ConnId's object class.\n-     * @return latest sync token\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getLatestSyncToken(org.identityconnectors.framework.common.objects.ObjectClass)\n      */\n+    @Override\n     public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n         SyncToken result = null;\n \n@@ -285,29 +263,18 @@ public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n         return result;\n     }\n \n-    /**\n-     * Get remote object.\n-     *\n-     * @param objectClass ConnId's object class\n-     * @param uid ConnId's Uid\n-     * @param options ConnId's OperationOptions\n-     * @return ConnId's connector object for given uid\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getObject(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions)\n      */\n+    @Override\n     public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n         return getObject(null, null, objectClass, uid, options);\n     }\n \n-    /**\n-     * Get remote object used by the propagation manager in order to choose for a create (object doesn't exist) or an\n-     * update (object exists).\n-     *\n-     * @param propagationMode propagation mode\n-     * @param operationType resource operation type\n-     * @param objectClass ConnId's object class\n-     * @param uid ConnId's Uid\n-     * @param options ConnId's OperationOptions\n-     * @return ConnId's connector object for given uid\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getObject(org.apache.syncope.types.PropagationMode, org.apache.syncope.types.ResourceOperation, org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions)\n      */\n+    @Override\n     public ConnectorObject getObject(final PropagationMode propagationMode, final ResourceOperation operationType,\n             final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n \n@@ -350,6 +317,10 @@ public ConnectorObject getObject(final PropagationMode propagationMode, final Re\n         return result;\n     }\n \n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#search(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.filter.Filter, org.identityconnectors.framework.common.objects.OperationOptions)\n+     */\n+    @Override\n     public List<ConnectorObject> search(final ObjectClass objectClass, final Filter filter,\n             final OperationOptions options) {\n \n@@ -371,14 +342,10 @@ public boolean handle(final ConnectorObject obj) {\n         return result;\n     }\n \n-    /**\n-     * Get remote object used by the propagation manager in order to choose for a create (object doesn't exist) or an\n-     * update (object exists).\n-     *\n-     * @param objectClass ConnId's object class.\n-     * @param handler to be used to handle deltas.\n-     * @param options ConnId's OperationOptions.\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getAllObjects(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.SyncResultsHandler, org.identityconnectors.framework.common.objects.OperationOptions)\n      */\n+    @Override\n     public void getAllObjects(final ObjectClass objectClass, final SyncResultsHandler handler,\n             final OperationOptions options) {\n \n@@ -403,15 +370,10 @@ public boolean handle(final ConnectorObject obj) {\n         }\n     }\n \n-    /**\n-     * Read attribute for a given connector object.\n-     *\n-     * @param objectClass ConnId's object class\n-     * @param uid ConnId's Uid\n-     * @param options ConnId's OperationOptions\n-     * @param attributeName attribute to read\n-     * @return attribute (if present)\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getObjectAttribute(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions, java.lang.String)\n      */\n+    @Override\n     public Attribute getObjectAttribute(final ObjectClass objectClass, final Uid uid, final OperationOptions options,\n             final String attributeName) {\n \n@@ -427,13 +389,10 @@ public Attribute getObjectAttribute(final ObjectClass objectClass, final Uid uid\n         return attribute;\n     }\n \n-    /**\n-     *\n-     * @param objectClass ConnId's object class\n-     * @param uid ConnId's Uid\n-     * @param options ConnId's OperationOptions\n-     * @return attributes (if present)\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getObjectAttributes(org.identityconnectors.framework.common.objects.ObjectClass, org.identityconnectors.framework.common.objects.Uid, org.identityconnectors.framework.common.objects.OperationOptions)\n      */\n+    @Override\n     public Set<Attribute> getObjectAttributes(final ObjectClass objectClass, final Uid uid,\n             final OperationOptions options) {\n \n@@ -451,12 +410,10 @@ public Set<Attribute> getObjectAttributes(final ObjectClass objectClass, final U\n         return attributes;\n     }\n \n-    /**\n-     * Return resource schema names.\n-     *\n-     * @param showall return special attributes (like as __NAME__ or __PASSWORD__) if true\n-     * @return a list of schema names\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getSchema(boolean)\n      */\n+    @Override\n     public Set<String> getSchema(final boolean showall) {\n         final Set<String> resourceSchemaNames = new HashSet<String>();\n \n@@ -478,29 +435,34 @@ public Set<String> getSchema(final boolean showall) {\n         return resourceSchemaNames;\n     }\n \n-    /**\n-     * Validate a connector instance.\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#validate()\n      */\n+    @Override\n     public void validate() {\n         connector.validate();\n     }\n \n-    /**\n-     * Check connection to resource.\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#test()\n      */\n+    @Override\n     public void test() {\n         connector.test();\n     }\n \n-    /**\n-     * Getter for active connector instance.\n-     *\n-     * @return active connector instance.\n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getActiveConnInstance()\n      */\n+    @Override\n     public ConnInstance getActiveConnInstance() {\n         return activeConnInstance;\n     }\n \n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#getOperationOptions(java.util.Collection)\n+     */\n+    @Override\n     public OperationOptions getOperationOptions(final Collection<AbstractMappingItem> mapItems) {\n         // -------------------------------------\n         // Ask just for mapped attributes\n@@ -565,9 +527,13 @@ private boolean isSpecialName(final String name) {\n         return (name.startsWith(\"__\") && name.endsWith(\"__\"));\n     }\n \n+    /* (non-Javadoc)\n+     * @see org.apache.syncope.core.propagation.impl.SyncopeConnector#toString()\n+     */\n     @Override\n     public String toString() {\n         return \"ConnectorFacadeProxy{\"\n                 + \"connector=\" + connector + \"\\n\" + \"capabitilies=\" + activeConnInstance.getCapabilities() + '}';\n     }\n+\n }","previous_filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFacadeProxy.java"},{"sha":"9a9d0b2abbcc56abadd6b48a3ef35d3d43a6715b","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/DefaultPropagationHandler.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -16,11 +16,12 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.propagation;\n+package org.apache.syncope.core.propagation.impl;\n \n import java.util.List;\n import org.apache.syncope.client.to.PropagationTO;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n+import org.apache.syncope.core.propagation.PropagationHandler;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n ","previous_filename":"core/src/main/java/org/apache/syncope/core/propagation/DefaultPropagationHandler.java"},{"sha":"cf7bafba617cbc13eed1a7068cc4674b73c7ca81","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/LDAPMembershipPropagationActions.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPMembershipPropagationActions.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.propagation;\n+package org.apache.syncope.core.propagation.impl;\n \n import java.util.ArrayList;\n import java.util.HashSet;\n@@ -29,6 +29,7 @@\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.propagation.DefaultPropagationActions;\n import org.apache.syncope.core.util.JexlUtil;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.ResourceOperation;","previous_filename":"core/src/main/java/org/apache/syncope/core/propagation/LDAPMembershipPropagationActions.java"},{"sha":"e754a36839b935f26941a22a8d55b62543b90252","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PriorityPropagationTaskExecutor.java","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.propagation;\n+package org.apache.syncope.core.propagation.impl;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -25,6 +25,8 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n+import org.apache.syncope.core.propagation.PropagationException;\n+import org.apache.syncope.core.propagation.PropagationHandler;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n \n public class PriorityPropagationTaskExecutor extends AbstractPropagationTaskExecutor {","previous_filename":"core/src/main/java/org/apache/syncope/core/propagation/PriorityPropagationTaskExecutor.java"},{"sha":"85a3a846d7b9887cdb1df84dd682c9a5bbb4b712","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.propagation;\n+package org.apache.syncope.core.propagation.impl;\n \n import java.util.AbstractMap.SimpleEntry;\n import java.util.ArrayList;\n@@ -42,6 +42,7 @@\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n+import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.rest.data.AbstractAttributableDataBinder;\n import org.apache.syncope.core.rest.data.RoleDataBinder;","previous_filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationManager.java"},{"sha":"46954ec2cd3ccc67b4953f370e31c1d606918d57","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -36,8 +36,9 @@\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n-import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n+import org.apache.syncope.core.propagation.impl.ConnectorFacadeProxy;\n import org.apache.syncope.core.rest.data.ConnInstanceDataBinder;\n import org.apache.syncope.core.util.ConnBundleManager;\n import org.apache.syncope.core.util.NotFoundException;\n@@ -365,7 +366,7 @@ public List<ConnConfProperty> getConfigurationProperties(@PathVariable(\"connecto\n     public ModelAndView check(final HttpServletResponse response, @RequestBody final ConnInstanceTO connectorTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException {\n \n-        final ConnectorFacadeProxy connector = new ConnectorFacadeProxy(binder.getConnInstance(connectorTO),\n+        final SyncopeConnector connector = new ConnectorFacadeProxy(binder.getConnInstance(connectorTO),\n                 bundleManager);\n \n         boolean result;\n@@ -431,7 +432,7 @@ public ConnInstanceTO readConnectorBean(@PathVariable(\"resourceName\") String res\n             throw new NotFoundException(\"Resource '\" + resourceName + \"'\");\n         }\n \n-        final ConnectorFacadeProxy connector = connLoader.getConnector(resource);\n+        final SyncopeConnector connector = connLoader.getConnector(resource);\n \n         auditManager.audit(Category.connector, ConnectorSubCategory.readConnectorBean, Result.success,\n                 \"Successfully read connector for resource: \" + resourceName);"},{"sha":"ffcf69dd542a938b7ac1587cada7963de1dccff6","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -31,8 +31,9 @@\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n-import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n+import org.apache.syncope.core.propagation.impl.ConnectorFacadeProxy;\n import org.apache.syncope.core.rest.data.ResourceDataBinder;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.ConnBundleManager;\n@@ -218,7 +219,7 @@ public ConnObjectTO getObject(@PathVariable(\"resourceName\") final String resourc\n         AttributableUtil attrUtil = AttributableUtil.getInstance(type);\n         ObjectClass objectClass = AttributableType.USER == type ? ObjectClass.ACCOUNT : ObjectClass.GROUP;\n \n-        final ConnectorFacadeProxy connector = connLoader.getConnector(resource);\n+        final SyncopeConnector connector = connLoader.getConnector(resource);\n \n         final ConnectorObject connectorObject = connector.getObject(objectClass, new Uid(objectId),\n                 connector.getOperationOptions(attrUtil.getMappingItems(resource)));\n@@ -251,7 +252,7 @@ public ModelAndView check(final HttpServletResponse response, @RequestBody final\n \n         final ConnInstance connInstance = binder.getConnInstance(resourceTO);\n \n-        final ConnectorFacadeProxy connector = new ConnectorFacadeProxy(connInstance, bundleManager);\n+        final SyncopeConnector connector = new ConnectorFacadeProxy(connInstance, bundleManager);\n \n         boolean result;\n         try {"},{"sha":"f1541282ee7eeb76b93de4565fe911d37a0e120e","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -36,10 +36,10 @@\n import org.apache.syncope.core.persistence.dao.InvalidSearchConditionException;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.propagation.DefaultPropagationHandler;\n import org.apache.syncope.core.propagation.PropagationException;\n-import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.DefaultPropagationHandler;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;"},{"sha":"d85b75cdd602c1ee3f92ba94d5d6c3952246631e","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -40,10 +40,10 @@\n import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.InvalidSearchConditionException;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.propagation.DefaultPropagationHandler;\n import org.apache.syncope.core.propagation.PropagationException;\n-import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.DefaultPropagationHandler;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;"},{"sha":"58227f57436db76ba9941461fd3a6976e03df13d","filename":"core/src/main/java/org/apache/syncope/core/sync/LDAPMembershipSyncActions.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FLDAPMembershipSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FLDAPMembershipSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FLDAPMembershipSyncActions.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -35,11 +35,11 @@\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n-import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n import org.apache.syncope.core.propagation.PropagationException;\n-import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n@@ -62,7 +62,7 @@\n  * Simple action for synchronizing LDAP groups memberships to Syncope role memberships, when the same resource is\n  * configured for both users and roles.\n  *\n- * @see org.apache.syncope.core.propagation.LDAPMembershipPropagationActions\n+ * @see org.apache.syncope.core.propagation.impl.LDAPMembershipPropagationActions\n  */\n public class LDAPMembershipSyncActions extends DefaultSyncActions {\n \n@@ -158,7 +158,7 @@ protected UserMod getUserMod(final Long userId, final RoleTO roleTO) {\n      * @return value of attribute returned by getGroupMembershipAttrName()\n      * @see getGroupMembershipAttrName()\n      */\n-    protected List<Object> getMembAttrValues(final SyncDelta delta, final ConnectorFacadeProxy connector) {\n+    protected List<Object> getMembAttrValues(final SyncDelta delta, final SyncopeConnector connector) {\n         List<Object> result = Collections.<Object>emptyList();\n \n         // first, try to read the configured attribute from delta, returned by the ongoing synchronization\n@@ -220,7 +220,7 @@ protected void synchronizeMemberships(final SyncopeSyncResultHandler handler, fi\n         final SyncTask task = handler.getSyncTask();\n         final ExternalResource resource = task.getResource();\n \n-        ConnectorFacadeProxy connector;\n+        SyncopeConnector connector;\n         try {\n             connector = connInstanceLoader.getConnector(resource);\n         } catch (Exception e) {"},{"sha":"9b3635d6c5134af2ec7035a667aafeaba2b9e41e","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncJob.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -31,8 +31,8 @@\n import org.apache.syncope.core.persistence.beans.user.UMapping;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n-import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.quartz.AbstractTaskJob;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.util.EntitlementUtil;\n@@ -313,7 +313,7 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         }\n         final SyncTask syncTask = (SyncTask) this.task;\n \n-        ConnectorFacadeProxy connector;\n+        SyncopeConnector connector;\n         try {\n             connector = connInstanceLoader.getConnector(syncTask.getResource());\n         } catch (Exception e) {"},{"sha":"60361c57c766957765d8d20a33655fc935b518cf","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -53,8 +53,8 @@\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.validation.attrvalue.ParsingValidationException;\n import org.apache.syncope.core.propagation.PropagationException;\n-import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.rest.data.UserDataBinder;"},{"sha":"a4f94abf5be070795be9cba4aaaf30c51ce61d27","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowUserSuspender.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -25,8 +25,8 @@\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.policy.UserSuspender;\n-import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n+import org.apache.syncope.core.propagation.impl.PropagationManager;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.slf4j.Logger;"},{"sha":"6e19b27346fafe23961eb3b0cb25ec0776fb3c6e","filename":"core/src/main/resources/syncopeContext.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -67,8 +67,8 @@ under the License.\n     </property>\n   </bean>\n   \n-  <bean id=\"propagationManager\" class=\"org.apache.syncope.core.propagation.PropagationManager\"/>\n-  <bean id=\"propagationTaskExecutor\" class=\"org.apache.syncope.core.propagation.PriorityPropagationTaskExecutor\"/>\n+  <bean id=\"propagationManager\" class=\"org.apache.syncope.core.propagation.impl.PropagationManager\"/>\n+  <bean id=\"propagationTaskExecutor\" class=\"org.apache.syncope.core.propagation.impl.PriorityPropagationTaskExecutor\"/>\n     \n   <bean id=\"notificationManager\" class=\"org.apache.syncope.core.notification.NotificationManager\"/>\n   "},{"sha":"c80ce81ad4bbcc93ae20d39b5675c2fcda26eb00","filename":"core/src/test/java/org/apache/syncope/core/init/ConnInstanceLoaderTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -27,7 +27,7 @@\n import org.springframework.transaction.annotation.Transactional;\n import org.apache.syncope.core.AbstractTest;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n-import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n+import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.rest.data.ResourceDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.apache.syncope.core.util.ConnBundleManager;\n@@ -56,7 +56,7 @@ public void before() {\n         // Remove any other connector instance bean set up by\n         // standard ConnInstanceLoader.load()\n         for (String bean : ApplicationContextProvider.getApplicationContext().\n-                getBeanNamesForType(ConnectorFacadeProxy.class)) {\n+                getBeanNamesForType(SyncopeConnector.class)) {\n \n             cil.unregisterConnector(bean);\n         }\n@@ -68,6 +68,6 @@ public void load() {\n \n         assertEquals(resourceDAO.findAll().size(),\n                 ApplicationContextProvider.getApplicationContext().\n-                getBeanNamesForType(ConnectorFacadeProxy.class).length);\n+                getBeanNamesForType(SyncopeConnector.class).length);\n     }\n }"},{"sha":"ab95ccbb6f0f71558479f5555e8060f555f1f052","filename":"core/src/test/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b272a3473cc78fdda31a310beed8d37105c64ef/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=8b272a3473cc78fdda31a310beed8d37105c64ef","patch":"@@ -373,7 +373,7 @@ under the License.\n   <ExternalResource name=\"resource-ldap\" connector_id=\"105\"\n                     enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\"\n-                    propagationActionsClassName=\"org.apache.syncope.core.propagation.LDAPMembershipPropagationActions\"\n+                    propagationActionsClassName=\"org.apache.syncope.core.propagation.impl.LDAPMembershipPropagationActions\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n   <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\"\n                     enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\""}]}