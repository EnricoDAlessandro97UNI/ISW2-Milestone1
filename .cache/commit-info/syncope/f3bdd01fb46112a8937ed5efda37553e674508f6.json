{"sha":"f3bdd01fb46112a8937ed5efda37553e674508f6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYzYmRkMDFmYjQ2MTEyYTg5MzdlZDVlZmRhMzc1NTNlNjc0NTA4ZjY=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-08T08:37:35Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-08T08:37:35Z"},"message":"[SYNCOPE-259]\nIntroduces Notification Service.\nRefactoring proxy services into proxy sub-package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1430170 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e49e1964ede6ce3d654c22cca1df32ff3ecfdd52","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e49e1964ede6ce3d654c22cca1df32ff3ecfdd52"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f3bdd01fb46112a8937ed5efda37553e674508f6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f3bdd01fb46112a8937ed5efda37553e674508f6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f3bdd01fb46112a8937ed5efda37553e674508f6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f3bdd01fb46112a8937ed5efda37553e674508f6/comments","author":null,"committer":null,"parents":[{"sha":"49dc1198c9944da6d4f9510fc21f44fc180a96ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/49dc1198c9944da6d4f9510fc21f44fc180a96ad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/49dc1198c9944da6d4f9510fc21f44fc180a96ad"}],"stats":{"total":236,"additions":184,"deletions":52},"files":[{"sha":"b8ad95f025c93f39676e434e4bd29172d94518cd","filename":"client/src/main/java/org/apache/syncope/services/NotificationService.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2FNotificationService.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -0,0 +1,58 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.services;\r\n+\r\n+import java.util.List;\r\n+\r\n+import javax.ws.rs.DELETE;\r\n+import javax.ws.rs.GET;\r\n+import javax.ws.rs.POST;\r\n+import javax.ws.rs.PUT;\r\n+import javax.ws.rs.Path;\r\n+import javax.ws.rs.PathParam;\r\n+\r\n+import org.apache.syncope.client.to.NotificationTO;\r\n+\r\n+@Path(\"notifications\")\r\n+public interface NotificationService {\r\n+\r\n+    @GET\r\n+    @Path(\"{notificationId}\")\r\n+//    @RequestMapping(method = RequestMethod.GET, value = \"/read/{notificationId}\")\r\n+    NotificationTO read(@PathParam(\"notificationId\") final Long notificationId);\r\n+\r\n+    @GET\r\n+//    @RequestMapping(method = RequestMethod.GET, value = \"/list\")\r\n+    List<NotificationTO> list();\r\n+\r\n+    @POST\r\n+//    @RequestMapping(method = RequestMethod.POST, value = \"/create\")\r\n+    NotificationTO create(final NotificationTO notificationTO);\r\n+\r\n+    @PUT\r\n+    @Path(\"{notificationId}\")\r\n+//    @RequestMapping(method = RequestMethod.POST, value = \"/update\")\r\n+    NotificationTO update(@PathParam(\"notificationId\") final Long notificationId, final NotificationTO notificationTO);\r\n+\r\n+    @DELETE\r\n+    @Path(\"{notificationId}\")\r\n+//    @RequestMapping(method = RequestMethod.GET, value = \"/delete/{notificationId}\")\r\n+    NotificationTO delete(@PathParam(\"notificationId\") final Long notificationId);\r\n+\r\n+}\n\\ No newline at end of file"},{"sha":"424f11b64311d67bd5bef84d1fe34be0222b595d","filename":"client/src/main/java/org/apache/syncope/services/WorkflowService.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2FWorkflowService.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -31,21 +31,21 @@\n public interface WorkflowService {\r\n \r\n     @GET\r\n-    @Path(\"{type}\")\r\n+    @Path(\"{kind}\")\r\n     //    @RequestMapping(method = RequestMethod.GET, value = \"/definition/user\")\r\n     //    @RequestMapping(method = RequestMethod.GET, value = \"/definition/role\")\r\n-    WorkflowDefinitionTO getDefinition(@PathParam(\"type\") final String type);\r\n+    WorkflowDefinitionTO getDefinition(@PathParam(\"kind\") final String kind);\r\n \r\n \r\n \r\n     @PUT\r\n-    @Path(\"{type}\")\r\n+    @Path(\"{kind}\")\r\n //    @RequestMapping(method = RequestMethod.PUT, value = \"/definition/user\")\r\n //    @RequestMapping(method = RequestMethod.PUT, value = \"/definition/role\")\r\n-    void updateDefinition(@PathParam(\"type\") final String type, final WorkflowDefinitionTO definition);\r\n+    void updateDefinition(@PathParam(\"kind\") final String kind, final WorkflowDefinitionTO definition);\r\n \r\n     @GET\r\n-    @Path(\"{type}/tasks\")\r\n+    @Path(\"{kind}/tasks\")\r\n //    @RequestMapping(method = RequestMethod.GET, value = \"/tasks/user\")\r\n-    List<String> getDefinedTasks(@PathParam(\"type\") final String type);\r\n+    List<String> getDefinedTasks(@PathParam(\"kind\") final String kind);\r\n }\n\\ No newline at end of file"},{"sha":"1e12ad4a4e8d6eae7dbc708221cff7d3e41f8910","filename":"client/src/main/java/org/apache/syncope/services/proxy/ConfigurationServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FConfigurationServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FConfigurationServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FConfigurationServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.List;\r\n@@ -25,6 +25,7 @@\n import javax.ws.rs.core.Response;\r\n \r\n import org.apache.syncope.client.to.ConfigurationTO;\r\n+import org.apache.syncope.services.ConfigurationService;\r\n import org.springframework.web.client.RestTemplate;\r\n \r\n public class ConfigurationServiceProxy extends SpringServiceProxy implements\r","previous_filename":"client/src/main/java/org/apache/syncope/services/ConfigurationServiceProxy.java"},{"sha":"28b93963f8d9f55ee12e32bd24e188416a342b80","filename":"client/src/main/java/org/apache/syncope/services/proxy/ConnectorServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FConnectorServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FConnectorServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FConnectorServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,13 +16,14 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.List;\r\n \r\n import org.apache.syncope.client.to.ConnBundleTO;\r\n import org.apache.syncope.client.to.ConnInstanceTO;\r\n+import org.apache.syncope.services.ConnectorService;\r\n import org.apache.syncope.types.ConnConfProperty;\r\n import org.springframework.web.client.RestTemplate;\r\n \r","previous_filename":"client/src/main/java/org/apache/syncope/services/ConnectorServiceProxy.java"},{"sha":"6312ffca8416af5ccf4dee1658a28c25568de67d","filename":"client/src/main/java/org/apache/syncope/services/proxy/EntitlementServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FEntitlementServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FEntitlementServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FEntitlementServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,12 +16,13 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.HashSet;\r\n import java.util.Set;\r\n \r\n+import org.apache.syncope.services.EntitlementService;\r\n import org.springframework.web.client.RestTemplate;\r\n \r\n public class EntitlementServiceProxy extends SpringServiceProxy implements EntitlementService {\r","previous_filename":"client/src/main/java/org/apache/syncope/services/EntitlementServiceProxy.java"},{"sha":"95741ad26f59cb7bfd6f4881371f3ead4cd743ee","filename":"client/src/main/java/org/apache/syncope/services/proxy/LoggerServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FLoggerServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FLoggerServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FLoggerServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,12 +16,13 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.List;\r\n \r\n import org.apache.syncope.client.to.LoggerTO;\r\n+import org.apache.syncope.services.LoggerService;\r\n import org.apache.syncope.types.AuditLoggerName;\r\n import org.springframework.web.client.RestTemplate;\r\n \r","previous_filename":"client/src/main/java/org/apache/syncope/services/LoggerServiceProxy.java"},{"sha":"934cee8e5f9b0d05fa7de641d8223d8735e7831f","filename":"client/src/main/java/org/apache/syncope/services/proxy/NotificationServiceProxy.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FNotificationServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FNotificationServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FNotificationServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -0,0 +1,64 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.services.proxy;\r\n+\r\n+import java.util.Arrays;\r\n+import java.util.List;\r\n+\r\n+import org.apache.syncope.client.to.NotificationTO;\r\n+import org.apache.syncope.services.NotificationService;\r\n+import org.springframework.web.client.RestTemplate;\r\n+\r\n+public class NotificationServiceProxy extends SpringServiceProxy implements NotificationService {\r\n+\r\n+    public NotificationServiceProxy(String baseUrl, RestTemplate restTemplate) {\r\n+        super(baseUrl, restTemplate);\r\n+    }\r\n+\r\n+    @Override\r\n+    public NotificationTO read(Long notificationId) {\r\n+        return restTemplate.getForObject(BASE_URL + \"notification/read/{notificationId}.json\",\r\n+                NotificationTO.class, notificationId);\r\n+    }\r\n+\r\n+    @Override\r\n+    public List<NotificationTO> list() {\r\n+        return Arrays.asList(restTemplate.getForObject(BASE_URL + \"notification/list.json\",\r\n+                NotificationTO[].class));\r\n+    }\r\n+\r\n+    @Override\r\n+    public NotificationTO create(NotificationTO notificationTO) {\r\n+        return restTemplate.postForObject(BASE_URL + \"notification/create.json\", notificationTO,\r\n+                NotificationTO.class);\r\n+    }\r\n+\r\n+    @Override\r\n+    public NotificationTO update(Long notificationId, NotificationTO notificationTO) {\r\n+        return restTemplate.postForObject(BASE_URL + \"notification/update.json\", notificationTO,\r\n+                NotificationTO.class);\r\n+    }\r\n+\r\n+    @Override\r\n+    public NotificationTO delete(Long notificationId) {\r\n+        return restTemplate.getForObject(BASE_URL + \"notification/delete/{notificationId}.json\",\r\n+                NotificationTO.class, notificationId);\r\n+    }\r\n+\r\n+}\r"},{"sha":"bb89791df57d4418451ff7c79c290d52ef555c23","filename":"client/src/main/java/org/apache/syncope/services/proxy/PolicyServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FPolicyServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FPolicyServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FPolicyServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,11 +16,12 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.List;\r\n \r\n import org.apache.syncope.client.to.PolicyTO;\r\n+import org.apache.syncope.services.PolicyService;\r\n import org.apache.syncope.types.PolicyType;\r\n import org.springframework.web.client.RestTemplate;\r\n \r","previous_filename":"client/src/main/java/org/apache/syncope/services/PolicyServiceProxy.java"},{"sha":"adfea6484e1a84a5cad617cd6ddf70bd625f6b1c","filename":"client/src/main/java/org/apache/syncope/services/proxy/ReportServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FReportServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FReportServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FReportServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,13 +16,14 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.List;\r\n \r\n import org.apache.syncope.client.to.ReportExecTO;\r\n import org.apache.syncope.client.to.ReportTO;\r\n+import org.apache.syncope.services.ReportService;\r\n import org.apache.syncope.types.ReportExecExportFormat;\r\n import org.springframework.web.client.RestTemplate;\r\n \r","previous_filename":"client/src/main/java/org/apache/syncope/services/ReportServiceProxy.java"},{"sha":"3fe8170cb174b4845a90454d99c090542c2285ba","filename":"client/src/main/java/org/apache/syncope/services/proxy/ResourceServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FResourceServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FResourceServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FResourceServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -17,7 +17,7 @@\n  * under the License.\r\n  */\r\n \r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.HashSet;\r\n@@ -26,6 +26,7 @@\n \r\n import org.apache.syncope.client.to.ConnObjectTO;\r\n import org.apache.syncope.client.to.ResourceTO;\r\n+import org.apache.syncope.services.ResourceService;\r\n import org.apache.syncope.types.AttributableType;\r\n import org.springframework.web.client.RestTemplate;\r\n \r","previous_filename":"client/src/main/java/org/apache/syncope/services/ResourceServiceProxy.java"},{"sha":"2122f9035e7a72854f799289223190fc5f13d718","filename":"client/src/main/java/org/apache/syncope/services/proxy/RoleServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FRoleServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FRoleServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FRoleServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,14 +16,15 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.List;\r\n \r\n import org.apache.syncope.client.mod.RoleMod;\r\n import org.apache.syncope.client.search.NodeCond;\r\n import org.apache.syncope.client.to.RoleTO;\r\n+import org.apache.syncope.services.RoleService;\r\n import org.springframework.web.client.RestTemplate;\r\n \r\n public class RoleServiceProxy extends SpringServiceProxy implements RoleService {\r","previous_filename":"client/src/main/java/org/apache/syncope/services/RoleServiceProxy.java"},{"sha":"9e3f07408558d5efd4c3d44022e268aff82cfcfa","filename":"client/src/main/java/org/apache/syncope/services/proxy/SpringServiceProxy.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FSpringServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FSpringServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FSpringServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import org.springframework.web.client.RestTemplate;\r\n \r","previous_filename":"client/src/main/java/org/apache/syncope/services/SpringServiceProxy.java"},{"sha":"028431239e9fbf104c0c838db23111dcb6b1fa0f","filename":"client/src/main/java/org/apache/syncope/services/proxy/TaskServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FTaskServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FTaskServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FTaskServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.HashSet;\r\n@@ -27,6 +27,7 @@\n import org.apache.syncope.client.to.SyncTaskTO;\r\n import org.apache.syncope.client.to.TaskExecTO;\r\n import org.apache.syncope.client.to.TaskTO;\r\n+import org.apache.syncope.services.TaskService;\r\n import org.apache.syncope.types.PropagationTaskExecStatus;\r\n import org.springframework.web.client.RestTemplate;\r\n \r","previous_filename":"client/src/main/java/org/apache/syncope/services/TaskServiceProxy.java"},{"sha":"92e1ae353d1626b5ba4aa2a500fda94720fcda79","filename":"client/src/main/java/org/apache/syncope/services/proxy/UserServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FUserServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FUserServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FUserServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.services;\n+package org.apache.syncope.services.proxy;\n \n import java.util.Arrays;\n import java.util.List;\n@@ -26,6 +26,7 @@\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.to.WorkflowFormTO;\n+import org.apache.syncope.services.UserService;\n import org.springframework.web.client.RestTemplate;\n \n public class UserServiceProxy extends SpringServiceProxy implements UserService {","previous_filename":"client/src/main/java/org/apache/syncope/services/UserServiceProxy.java"},{"sha":"5e574bc31404e9d0264504e6cac869cfb0180c10","filename":"client/src/main/java/org/apache/syncope/services/proxy/WorkflowServiceProxy.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FWorkflowServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FWorkflowServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FWorkflowServiceProxy.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -16,12 +16,13 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-package org.apache.syncope.services;\r\n+package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.List;\r\n \r\n import org.apache.syncope.client.to.WorkflowDefinitionTO;\r\n+import org.apache.syncope.services.WorkflowService;\r\n import org.springframework.web.client.RestTemplate;\r\n \r\n public class WorkflowServiceProxy extends SpringServiceProxy implements WorkflowService {\r","previous_filename":"client/src/main/java/org/apache/syncope/services/WorkflowServiceProxy.java"},{"sha":"972523b86b7159dd283fb3cffa8a2ce4bc9e8822","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":15,"deletions":11,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -25,17 +25,18 @@\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.apache.syncope.client.mod.AttributeMod;\n import org.apache.syncope.client.to.AttributeTO;\n-import org.apache.syncope.services.ConfigurationServiceProxy;\n-import org.apache.syncope.services.ConnectorServiceProxy;\n-import org.apache.syncope.services.EntitlementServiceProxy;\n-import org.apache.syncope.services.LoggerServiceProxy;\n-import org.apache.syncope.services.ReportServiceProxy;\n-import org.apache.syncope.services.ResourceServiceProxy;\n-import org.apache.syncope.services.RoleServiceProxy;\n-import org.apache.syncope.services.TaskServiceProxy;\n-import org.apache.syncope.services.UserServiceProxy;\n-import org.apache.syncope.services.PolicyServiceProxy;\n-import org.apache.syncope.services.WorkflowServiceProxy;\n+import org.apache.syncope.services.proxy.ConfigurationServiceProxy;\n+import org.apache.syncope.services.proxy.ConnectorServiceProxy;\n+import org.apache.syncope.services.proxy.EntitlementServiceProxy;\n+import org.apache.syncope.services.proxy.LoggerServiceProxy;\n+import org.apache.syncope.services.proxy.NotificationServiceProxy;\n+import org.apache.syncope.services.proxy.PolicyServiceProxy;\n+import org.apache.syncope.services.proxy.ReportServiceProxy;\n+import org.apache.syncope.services.proxy.ResourceServiceProxy;\n+import org.apache.syncope.services.proxy.RoleServiceProxy;\n+import org.apache.syncope.services.proxy.TaskServiceProxy;\n+import org.apache.syncope.services.proxy.UserServiceProxy;\n+import org.apache.syncope.services.proxy.WorkflowServiceProxy;\n import org.junit.Before;\n import org.junit.runner.RunWith;\n import org.slf4j.Logger;\n@@ -99,6 +100,8 @@ protected static AttributeMod attributeMod(final String schema, final String val\n \n     protected WorkflowServiceProxy workflowService;\n \n+    protected NotificationServiceProxy notificationService;\n+\n     @Autowired\n     protected DataSource testDataSource;\n \n@@ -128,5 +131,6 @@ public void resetRestTemplate() {\n         taskService = new TaskServiceProxy(BASE_URL, restTemplate);\n         policyService = new PolicyServiceProxy(BASE_URL, restTemplate);\n         workflowService = new WorkflowServiceProxy(BASE_URL, restTemplate);\n+        notificationService = new NotificationServiceProxy(BASE_URL, restTemplate);\n     }\n }"},{"sha":"4d26620d8fb746adb6842586898413de710524b5","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":18,"deletions":23,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3bdd01fb46112a8937ed5efda37553e674508f6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3bdd01fb46112a8937ed5efda37553e674508f6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=f3bdd01fb46112a8937ed5efda37553e674508f6","patch":"@@ -18,10 +18,13 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n \n-import java.util.Arrays;\n import java.util.List;\n+\n import org.apache.syncope.client.search.AttributeCond;\n import org.apache.syncope.client.search.MembershipCond;\n import org.apache.syncope.client.search.NodeCond;\n@@ -40,16 +43,13 @@ public class NotificationTestITCase extends AbstractTest {\n \n     @Test\n     public void read() {\n-        NotificationTO notificationTO = restTemplate.getForObject(BASE_URL + \"notification/read/{notificationId}.json\",\n-                NotificationTO.class, \"100\");\n-\n+        NotificationTO notificationTO = notificationService.read(100L);\n         assertNotNull(notificationTO);\n     }\n \n     @Test\n     public void list() {\n-        List<NotificationTO> notificationTOs = Arrays.asList(restTemplate.getForObject(BASE_URL\n-                + \"notification/list.json\", NotificationTO[].class));\n+        List<NotificationTO> notificationTOs = notificationService.list();\n         assertNotNull(notificationTOs);\n         assertFalse(notificationTOs.isEmpty());\n         for (NotificationTO instance : notificationTOs) {\n@@ -69,8 +69,8 @@ public void create() {\n         AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n         fullnameLeafCond2.setSchema(\"fullname\");\n         fullnameLeafCond2.setExpression(\"%i%\");\n-        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n-                fullnameLeafCond2));\n+        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1),\n+                NodeCond.getLeafCond(fullnameLeafCond2));\n \n         notificationTO.setAbout(about);\n \n@@ -87,8 +87,7 @@ public void create() {\n         notificationTO.setSubject(\"Test notification\");\n         notificationTO.setTemplate(\"test\");\n \n-        NotificationTO actual =\n-                restTemplate.postForObject(BASE_URL + \"notification/create.json\", notificationTO, NotificationTO.class);\n+        NotificationTO actual = notificationService.create(notificationTO);\n \n         assertNotNull(actual);\n         assertNotNull(actual.getId());\n@@ -98,15 +97,14 @@ public void create() {\n \n     @Test\n     public void update() {\n-        NotificationTO notificationTO = restTemplate.getForObject(BASE_URL + \"notification/read/{notificationId}.json\",\n-                NotificationTO.class, \"100\");\n+        NotificationTO notificationTO = notificationService.read(100L);\n         assertNotNull(notificationTO);\n \n         notificationTO.setRecipients(NodeCond.getLeafCond(new MembershipCond()));\n \n         SyncopeClientException exception = null;\n         try {\n-            restTemplate.postForObject(BASE_URL + \"notification/update.json\", notificationTO, NotificationTO.class);\n+            notificationService.update(notificationTO.getId(), notificationTO);\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.InvalidNotification);\n         }\n@@ -118,21 +116,19 @@ public void update() {\n \n         notificationTO.setRecipients(recipients);\n \n-        NotificationTO actual = restTemplate.postForObject(BASE_URL + \"notification/update.json\", notificationTO,\n-                NotificationTO.class);\n+        NotificationTO actual = notificationService.update(notificationTO.getId(), notificationTO);\n         assertNotNull(actual);\n         assertEquals(actual, notificationTO);\n     }\n \n     @Test\n     public void delete() {\n-        NotificationTO deletedNotification = restTemplate.getForObject(\n-                BASE_URL + \"notification/delete/{notificationId}.json\", NotificationTO.class, \"101\");\n+        NotificationTO deletedNotification = notificationService.delete(101L);\n         assertNotNull(deletedNotification);\n \n         SyncopeClientException exception = null;\n         try {\n-            restTemplate.getForObject(BASE_URL + \"notification/read/{notificationId}.json\", NotificationTO.class, \"101\");\n+            notificationService.read(101L);\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.NotFound);\n         }\n@@ -151,8 +147,8 @@ public void issueSYNCOPE83() {\n         AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n         fullnameLeafCond2.setSchema(\"fullname\");\n         fullnameLeafCond2.setExpression(\"%i%\");\n-        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n-                fullnameLeafCond2));\n+        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1),\n+                NodeCond.getLeafCond(fullnameLeafCond2));\n \n         notificationTO.setAbout(about);\n \n@@ -168,8 +164,7 @@ public void issueSYNCOPE83() {\n         NotificationTO actual = null;\n         SyncopeClientException exception = null;\n         try {\n-            actual = restTemplate.postForObject(\n-                    BASE_URL + \"notification/create.json\", notificationTO, NotificationTO.class);\n+            actual = notificationService.create(notificationTO);\n \n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.InvalidNotification);"}]}