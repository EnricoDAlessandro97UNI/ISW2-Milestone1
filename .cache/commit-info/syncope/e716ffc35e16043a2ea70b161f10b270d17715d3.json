{"sha":"e716ffc35e16043a2ea70b161f10b270d17715d3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU3MTZmZmMzNWUxNjA0M2EyZWE3MGIxNjFmMTBiMjcwZDE3NzE1ZDM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-12T11:50:58Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-12T11:50:58Z"},"message":"Improving, improving, improving...\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246725 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"737936e4e2feaf2b670f71f64ed5c30da1ef5222","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/737936e4e2feaf2b670f71f64ed5c30da1ef5222"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e716ffc35e16043a2ea70b161f10b270d17715d3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e716ffc35e16043a2ea70b161f10b270d17715d3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e716ffc35e16043a2ea70b161f10b270d17715d3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e716ffc35e16043a2ea70b161f10b270d17715d3/comments","author":null,"committer":null,"parents":[{"sha":"e83c7c738f7bafa28305a5279f9098c86071607c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e83c7c738f7bafa28305a5279f9098c86071607c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e83c7c738f7bafa28305a5279f9098c86071607c"}],"stats":{"total":37,"additions":23,"deletions":14},"files":[{"sha":"dc2e28706be6f846297fb028d298b91890637d93","filename":"core/src/main/java/org/syncope/core/persistence/dao/SyncopeUserDAO.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e716ffc35e16043a2ea70b161f10b270d17715d3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSyncopeUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e716ffc35e16043a2ea70b161f10b270d17715d3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSyncopeUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSyncopeUserDAO.java?ref=e716ffc35e16043a2ea70b161f10b270d17715d3","patch":"@@ -27,9 +27,10 @@ public interface SyncopeUserDAO extends DAO {\n \n     SyncopeUser findByWorkflowId(Long workflowId);\n \n-    List<SyncopeUser> findByAttrValue(UAttrValue attrValue);\n+    List<SyncopeUser> findByAttrValue(String schemaName, UAttrValue attrValue);\n \n-    List<SyncopeUser> findByAttrUniqueValue(UAttrValue attrUniqueValue);\n+    SyncopeUser findByAttrUniqueValue(String schemaName,\n+            UAttrValue attrUniqueValue);\n \n     List<SyncopeUser> findAll();\n "},{"sha":"003600fe69d29e29260e0743dd866258c3bdd9a5","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SyncopeUserDAOImpl.java","status":"modified","additions":18,"deletions":10,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e716ffc35e16043a2ea70b161f10b270d17715d3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e716ffc35e16043a2ea70b161f10b270d17715d3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java?ref=e716ffc35e16043a2ea70b161f10b270d17715d3","patch":"@@ -76,15 +76,17 @@ public SyncopeUser findByWorkflowId(final Long workflowId) {\n     }\n \n     @Override\n-    public List<SyncopeUser> findByAttrValue(final UAttrValue attrValue) {\n+    public List<SyncopeUser> findByAttrValue(final String schemaName,\n+            final UAttrValue attrValue) {\n \n         StringBuilder queryHead1 = new StringBuilder(\n                 \"SELECT e FROM \" + UAttrValue.class.getName() + \" e\");\n         StringBuilder queryHead2 = new StringBuilder(\n                 \"SELECT e FROM \" + UAttrUniqueValue.class.getName() + \" e\");\n \n         StringBuilder whereCondition = new StringBuilder().append(\n-                \" WHERE (e.stringValue IS NOT NULL\").\n+                \" WHERE e.attribute.schema.name = :schemaName \").\n+                append(\" AND (e.stringValue IS NOT NULL\").\n                 append(\" AND e.stringValue = :stringValue)\").\n                 append(\" OR (e.booleanValue IS NOT NULL\").\n                 append(\" AND e.booleanValue = :booleanValue)\").\n@@ -98,6 +100,7 @@ public List<SyncopeUser> findByAttrValue(final UAttrValue attrValue) {\n         Query query = entityManager.createQuery(\n                 queryHead1.append(whereCondition).toString());\n \n+        query.setParameter(\"schemaName\", schemaName);\n         query.setParameter(\"stringValue\", attrValue.getStringValue());\n         query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n                 ? null\n@@ -111,6 +114,7 @@ public List<SyncopeUser> findByAttrValue(final UAttrValue attrValue) {\n         query = entityManager.createQuery(\n                 queryHead2.append(whereCondition).toString());\n \n+        query.setParameter(\"schemaName\", schemaName);\n         query.setParameter(\"stringValue\", attrValue.getStringValue());\n         query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n                 ? null\n@@ -135,12 +139,13 @@ public List<SyncopeUser> findByAttrValue(final UAttrValue attrValue) {\n     }\n \n     @Override\n-    public List<SyncopeUser> findByAttrUniqueValue(\n+    public SyncopeUser findByAttrUniqueValue(final String schemaName,\n             final UAttrValue attrUniqueValue) {\n \n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM \" + UAttrUniqueValue.class.getSimpleName() + \" e\"\n-                + \" WHERE (e.stringValue IS NOT NULL\"\n+                + \" WHERE e.attribute.schema.name = :schemaName \"\n+                + \" AND (e.stringValue IS NOT NULL\"\n                 + \" AND e.stringValue = :stringValue)\"\n                 + \" OR (e.booleanValue IS NOT NULL\"\n                 + \" AND e.booleanValue = :booleanValue)\"\n@@ -151,6 +156,7 @@ public List<SyncopeUser> findByAttrUniqueValue(\n                 + \" OR (e.doubleValue IS NOT NULL\"\n                 + \" AND e.doubleValue = :doubleValue)\");\n \n+        query.setParameter(\"schemaName\", schemaName);\n         query.setParameter(\"stringValue\", attrUniqueValue.getStringValue());\n         query.setParameter(\"booleanValue\",\n                 attrUniqueValue.getBooleanValue() == null\n@@ -161,14 +167,16 @@ public List<SyncopeUser> findByAttrUniqueValue(\n         query.setParameter(\"longValue\", attrUniqueValue.getLongValue());\n         query.setParameter(\"doubleValue\", attrUniqueValue.getDoubleValue());\n \n-        List<SyncopeUser> result = new ArrayList<SyncopeUser>();\n-        for (UAttrUniqueValue value :\n-                (List<UAttrUniqueValue>) query.getResultList()) {\n-\n-            result.add((SyncopeUser) value.getAttribute().getOwner());\n+        UAttrUniqueValue result = null;\n+        try {\n+            result = (UAttrUniqueValue) query.getSingleResult();\n+        } catch (Exception e) {\n+            LOG.debug(\"While finding by attribute unique value: \" + schemaName\n+                    + \" {}\", attrUniqueValue, e);\n         }\n \n-        return result;\n+        return result == null\n+                ? null : (SyncopeUser) result.getAttribute().getOwner();\n     }\n \n     @Override"},{"sha":"69eece7d2933e5bf743623d9e824ea2e73de7f6e","filename":"core/src/test/java/org/syncope/core/persistence/dao/UserTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e716ffc35e16043a2ea70b161f10b270d17715d3/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e716ffc35e16043a2ea70b161f10b270d17715d3/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java?ref=e716ffc35e16043a2ea70b161f10b270d17715d3","patch":"@@ -73,7 +73,7 @@ public final void findByAttributeValue() {\n         usernameValue.setStringValue(\"chicchiricco\");\n \n         final List<SyncopeUser> list = syncopeUserDAO.findByAttrValue(\n-                usernameValue);\n+                \"username\", usernameValue);\n         assertEquals(\"did not get expected number of users \", 1, list.size());\n     }\n \n@@ -83,7 +83,7 @@ public final void findByAttributeBooleanValue() {\n         coolValue.setBooleanValue(true);\n \n         final List<SyncopeUser> list = syncopeUserDAO.findByAttrValue(\n-                coolValue);\n+                \"cool\", coolValue);\n         assertEquals(\"did not get expected number of users \", 1, list.size());\n     }\n "}]}