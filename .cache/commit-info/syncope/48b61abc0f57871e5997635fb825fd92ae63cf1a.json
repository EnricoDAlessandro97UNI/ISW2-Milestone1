{"sha":"48b61abc0f57871e5997635fb825fd92ae63cf1a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ4YjYxYWJjMGY1Nzg3MWU1OTk3NjM1ZmI4MjVmZDkyYWU2M2NmMWE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-29T14:35:58Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-29T14:35:58Z"},"message":"(Fixes issue 52)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246612 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fa7bbfe62f3a76e017284015858c55c1631066be","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fa7bbfe62f3a76e017284015858c55c1631066be"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/48b61abc0f57871e5997635fb825fd92ae63cf1a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/48b61abc0f57871e5997635fb825fd92ae63cf1a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/48b61abc0f57871e5997635fb825fd92ae63cf1a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/48b61abc0f57871e5997635fb825fd92ae63cf1a/comments","author":null,"committer":null,"parents":[{"sha":"04805239e551bb6ee621ea933160f5e99a34c17d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/04805239e551bb6ee621ea933160f5e99a34c17d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/04805239e551bb6ee621ea933160f5e99a34c17d"}],"stats":{"total":457,"additions":348,"deletions":109},"files":[{"sha":"5a314f3c84ab9f8739ae0afd3566dcbbdc5c5a4b","filename":"console/src/main/java/org/syncope/console/SyncopeApplication.java","status":"modified","additions":17,"deletions":5,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -16,9 +16,12 @@\n \n import java.io.InputStream;\n import org.apache.wicket.Request;\n+import org.apache.wicket.RequestCycle;\n import org.apache.wicket.Response;\n import org.apache.wicket.Session;\n import org.apache.wicket.protocol.http.WebApplication;\n+import org.apache.wicket.protocol.http.WebRequest;\n+import org.apache.wicket.protocol.http.WebResponse;\n import org.apache.wicket.spring.injection.annot.SpringComponentInjector;\n import org.springframework.beans.BeansException;\n import org.springframework.context.ApplicationContext;\n@@ -29,8 +32,8 @@\n /**\n  * SyncopeApplication class.\n  */\n-public class SyncopeApplication extends WebApplication implements ApplicationContextAware\n-{\n+public class SyncopeApplication extends WebApplication \n+        implements ApplicationContextAware {\n     SyncopeUser user = null;\n \n     String file;\n@@ -48,6 +51,9 @@ protected void init()\n         file = getServletContext().getInitParameter(\"authenticationFile\");\n         addComponentInstantiationListener(new SpringComponentInjector(this));\n         getResourceSettings().setThrowExceptionOnMissingResource( true );\n+\n+        /*getExceptionSettings().setUnexpectedExceptionDisplay(IExceptionSettings.\n+                SHOW_INTERNAL_ERROR_PAGE);*/\n     }\n \n     /**\n@@ -59,7 +65,6 @@ protected void init()\n     @Override\n     public Session newSession( Request request, Response response )\n     {\n-\n         SyncopeSession session = new SyncopeSession( request );\n         \n         if ( user != null )\n@@ -78,9 +83,9 @@ public Class getHomePage()\n         return (user == null) ? Login.class :  WelcomePage.class;\n     }\n \n-\n     @Override\n-    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n+    public void setApplicationContext(ApplicationContext applicationContext)\n+            throws BeansException {\n           this.applicationContext = applicationContext;\n     }\n \n@@ -91,6 +96,13 @@ public ApplicationContext getApplicationContext() {\n     public InputStream getAuthenticationFile(){\n     return getServletContext().getResourceAsStream(file);\n     }\n+\n+    @Override\n+    public final RequestCycle newRequestCycle(final Request request,\n+            final Response response) {\n+        return new SyncopeRequestCycle(this, (WebRequest) request,\n+                (WebResponse) response);\n+    }\n }\n \n "},{"sha":"ae3b233d2c37285c2b24392a31230eaab5a15344","filename":"console/src/main/java/org/syncope/console/SyncopeRequestCycle.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -0,0 +1,69 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+\n+package org.syncope.console;\n+\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageParameters;\n+import org.apache.wicket.Response;\n+import org.apache.wicket.markup.html.pages.ExceptionErrorPage;\n+import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.protocol.http.WebApplication;\n+import org.apache.wicket.protocol.http.WebRequest;\n+import org.apache.wicket.protocol.http.WebRequestCycle;\n+import org.springframework.web.client.RestClientException;\n+import org.syncope.console.pages.ErrorPage;\n+\n+/**\n+ * SyncopeRequestCycle\n+ */\n+public class SyncopeRequestCycle extends WebRequestCycle {\n+\n+        /**\n+\t * SyncopeRequestCycle constructor\n+\t *\n+\t * @param application the web application\n+\t * @param request the web request\n+\t * @param response the web response\n+\t */\n+\tpublic SyncopeRequestCycle(final WebApplication application,\n+                final WebRequest request, final Response response) {\n+\t\tsuper(application, request, response);\n+\t}\n+\n+\t/**\n+\t * Syncope RestClientException handler.\n+\t */\n+\t@Override\n+\tpublic final Page onRuntimeException(final Page cause,\n+                final RuntimeException e) {\n+            //TODO : Log the exception\n+\n+            if(e.getCause().getCause() instanceof RestClientException) {\n+                PageParameters errorParameters = new PageParameters();\n+\n+                errorParameters.add(\"errorTitle\",\n+                        new StringResourceModel(\"alert\", null).getString());\n+\n+                errorParameters.add(\"errorMessage\", \n+                        new StringResourceModel(\"restClientException\", null)\n+                        .getString());\n+\n+                return new ErrorPage(errorParameters);\n+            }\n+            //Default Wicket error page\n+            else return new ExceptionErrorPage(e, cause);\n+\t}\n+}"},{"sha":"363f9793f3ed4cd5ae22707d4268034731ed4fcf","filename":"console/src/main/java/org/syncope/console/commons/SchemaWrapper.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -15,6 +15,7 @@\n \n package org.syncope.console.commons;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Set;\n@@ -23,7 +24,7 @@\n /**\n  * Wrapper for User's Schema - Attribute.\n  */\n-public class SchemaWrapper {\n+public class SchemaWrapper implements Serializable {\n \n     SchemaTO schemaTO;\n     List<String> values;"},{"sha":"642694bf0b45e9ebd08e8d85cd82b414afeb6adb","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -46,6 +46,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n@@ -93,7 +94,7 @@ public Configuration(PageParameters parameters) {\n         add(editConfigWin = new ModalWindow(\"editConfigurationWin\"));\n \n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_CONFIGURATION_PAGINATOR_ROWS);\n+                    .CONF_CONFIGURATION_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n \n@@ -311,9 +312,15 @@ public ConfigurationTO getObject() {\n         }\n \n         public List<ConfigurationTO> getConfigurationsListDB(){\n-        List<ConfigurationTO> list = restClient.getAllConfigurations();\n-        \n-        return list;\n+        List<ConfigurationTO> list = null;\n+\n+            try {\n+                list = restClient.getAllConfigurations();\n+        }\n+        catch(RestClientException rce) {\n+            throw rce;\n+        }\n+            return list;\n         }\n \n         class SortableDataProviderComparator implements"},{"sha":"c890fdd6b2a07e02bbce88d1ce48c0e99a80f7ea","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -86,12 +86,12 @@ public Connectors(PageParameters parameters) {\n         feedbackPanel = new FeedbackPanel(\"feedback\");\n         feedbackPanel.setOutputMarkupId( true );\n \n-        add(feedbackPanel);       \n+        add(feedbackPanel);\n \n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_CONNECTORS_PAGINATOR_ROWS);\n+                    .CONF_CONNECTORS_PAGINATOR_ROWS);\n \n-         List<IColumn> columns = new ArrayList<IColumn>();\n+        List<IColumn> columns = new ArrayList<IColumn>();\n \n         columns.add(new PropertyColumn(new Model(getString(\"id\")),\n                 \"id\", \"id\"));"},{"sha":"52778e060538246a346e2d14cec9d18184503ac9","filename":"console/src/main/java/org/syncope/console/pages/ErrorPage.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -0,0 +1,39 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import org.apache.wicket.PageParameters;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.model.Model;\n+\n+/**\n+ * Error WebPage.\n+ */\n+public class ErrorPage extends BasePage {\n+\n+    \n+\n+    public ErrorPage(PageParameters parameters) {\n+        super(parameters);\n+        \n+        add(new Label(\"errorTitle\",new Model<String>(\n+                parameters.getString(\"errorTitle\"))));\n+        add(new Label(\"errorMessage\",new Model<String>(\n+                parameters.getString(\"errorMessage\"))));\n+\n+        add(new BookmarkablePageLink(\"home\", WelcomePage.class));\n+    }\n+}"},{"sha":"c77a52da0ce500724c38805147621de4a111be3c","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -43,6 +43,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n@@ -90,7 +91,7 @@ public Resources(PageParameters parameters) {\n         add(feedbackPanel);\n \n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_RESOURCES_PAGINATOR_ROWS);\n+                    .CONF_RESOURCES_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n "},{"sha":"9d31f0f7e4cd41b512582a42c6e6312b808e74e7","filename":"console/src/main/java/org/syncope/console/pages/Roles.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -22,13 +22,16 @@\n import org.apache.wicket.extensions.markup.html.tree.table.IColumn;\n import org.apache.wicket.extensions.markup.html.tree.table.PropertyTreeColumn;\n import org.apache.wicket.extensions.markup.html.tree.table.TreeTable;\n-import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation.Alignment;\n-import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation.Unit;\n+import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation\n+        .Alignment;\n+import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation\n+        .Unit;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n import org.apache.wicket.markup.html.tree.AbstractTree;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.web.client.RestClientException;\n import org.syncope.console.rest.RolesRestClient;\n import org.syncope.console.wicket.markup.html.tree.SyncopeRoleTree;\n \n@@ -48,7 +51,9 @@ public class Roles extends BasePage {\n \n     WebMarkupContainer container;\n \n-    /** Response flag set by the Modal Window after the operation is completed  */\n+    /*\n+     Response flag set by the Modal Window after the operation is completed\n+     */\n     boolean operationResult = false;\n     FeedbackPanel feedbackPanel;\n     \n@@ -69,9 +74,8 @@ public Roles(PageParameters parameters) {\n         new PropertyTreeColumn(new ColumnLocation(Alignment.LEFT, 30,\n             Unit.EM), getString(\"column1\"), \"userObject.treeNode.name\"),\n             new PropertyEditableColumn(new ColumnLocation(Alignment.LEFT, 20,\n-            Unit.EM), getString(\"column2\"), \"userObject.title\",createRoleWin,Roles.this),\n-//            new PropertyRenderableColumn(new ColumnLocation(Alignment.MIDDLE, 3,\n-//                        Unit.PROPORTIONAL), \"Name\", \"userObject.treeNode.name\")\n+            Unit.EM), getString(\"column2\"), \"userObject.title\",createRoleWin,\n+            Roles.this),\n             };\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n@@ -84,13 +88,13 @@ public Roles(PageParameters parameters) {\n \n         SyncopeRoleTree roleTree = new SyncopeRoleTree(restClient);\n \n-        tree = new TreeTable(\"treeTable\", roleTree.createTreeModel(), columns);\n+        tree = new TreeTable(\"treeTable\", roleTree.createTreeModel(),\n+                   columns);\n         \n         form.add(tree);\n         tree.getTreeState().expandAll();\n         tree.updateTree();\n \n-\n         container.add(tree);\n         container.setOutputMarkupId(true);\n         "},{"sha":"15ad7f130df560db2ada95384b9ffd35c5b8aad8","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -45,6 +45,7 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n+import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.DerivedSchemaTO;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.console.commons.Constants;\n@@ -164,7 +165,7 @@ public Schema(PageParameters parameters)\n \n         membershipDerPageRows = utility.getPaginatorRowsToDisplay(Constants\n                 .CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n-\n+        \n         List<IColumn> rolesColumns = new ArrayList<IColumn>();\n \n         rolesColumns.add(new PropertyColumn(new Model(getString(\"name\")),"},{"sha":"2a60e8b9870358315b9942c7331ffdbbea85c979","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -45,6 +45,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.TaskExecutionTO;\n import org.syncope.client.to.TaskTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -91,8 +92,8 @@ public Tasks(PageParameters parameters) {\n         add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n \n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_TASKS_PAGINATOR_ROWS);\n-\n+                    .CONF_TASKS_PAGINATOR_ROWS);\n+        \n         List<IColumn> columns = new ArrayList<IColumn>();\n \n         columns.add(new PropertyColumn(new Model(getString(\"id\")),"},{"sha":"2780bf5c99d231388f685e5e632e0208872ebbf2","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -66,6 +66,7 @@\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.to.UserTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.SyncopeApplication;\n import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.rest.ResourcesRestClient;\n@@ -359,7 +360,8 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n             window.close(target);\n \n-        } catch (Exception e) {\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            e.printStackTrace();\n             error(getString(\"error\") + \":\" + e.getMessage());\n         }\n     }\n@@ -446,10 +448,10 @@ public void onClick(AjaxRequestTarget target) {\n \n                     public Page createPage() {\n \n-                        MembershipModalPage form = new MembershipModalPage(\n+                        MembershipModalPage window = new MembershipModalPage(\n                                 getPage(), createUserWin, membershipTO, false);\n \n-                        return form;\n+                        return window;\n \n                     }\n                 });"},{"sha":"d7ea15a3e27dd2c7c90b29cc1e64a554a32f8943","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":22,"deletions":4,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -30,7 +30,8 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n+        .AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -50,6 +51,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.web.client.HttpServerErrorException;\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n@@ -130,8 +132,23 @@ public Users(PageParameters parameters) {\n \n         add(feedbackPanel);\n \n+        /*try {\n+            paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n+                    .CONF_USERS_PAGINATOR_ROWS);\n+        }\n+        catch(RestClientException e){\n+           PageParameters errorParameters = new PageParameters();\n+\n+           errorParameters.add(\"errorTitle\", getString(\"alert\"));\n+           errorParameters.add(\"errorMessage\", getString(\"connectionError\"));\n+\n+           setResponsePage(new ErrorPage(errorParameters));\n+\n+           return;\n+        }*/\n+        \n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_USERS_PAGINATOR_ROWS);\n+                    .CONF_USERS_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n \n@@ -600,7 +617,8 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n                         //Clean the feedback panel if the operation succedes\n                         target.addComponent(form.get(\"feedback\"));\n-                    } catch (Exception e) {\n+                    } catch (HttpServerErrorException e) {\n+                        e.printStackTrace();\n                         error(e.getMessage());\n                         return;\n                     }\n@@ -806,7 +824,7 @@ private List<IColumn> addCustomizedUserProperties(List<IColumn> columns) {\n     /**\n      * Wrapper class for displaying attribute\n      */\n-    public class AttributeWrapper {\n+    public class AttributeWrapper implements Serializable {\n \n         private String key;\n         private String value;"},{"sha":"9b5796d80a799098425ea31396036d7edcdbc668","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationsRestClient.java","status":"modified","additions":20,"deletions":26,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -18,6 +18,7 @@\n import java.util.Arrays;\n import java.util.List;\n import org.springframework.web.client.HttpStatusCodeException;\n+import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n@@ -32,32 +33,30 @@ public class ConfigurationsRestClient {\n      * Get all stored configurations.\n      * @return ConfigurationTOs\n      */\n-    public List<ConfigurationTO> getAllConfigurations() {\n+    public List<ConfigurationTO> getAllConfigurations() throws\n+            RestClientException {\n+        List<ConfigurationTO> configurations = null;\n \n-        List<ConfigurationTO> configurations = Arrays.asList(\n-                restClient.getRestTemplate().getForObject(\n-                restClient.getBaseURL() + \"configuration/list.json\",\n-                ConfigurationTO[].class));\n+        configurations = Arrays.asList(restClient.getRestTemplate()\n+                .getForObject(restClient.getBaseURL() +\n+                \"configuration/list.json\",ConfigurationTO[].class));\n \n         return configurations;\n-\n     }\n \n    /**\n      * Load an existent configuration.\n-     * @return ConfigurationTO object if the configuration exists, null otherwise\n+     * @return ConfigurationTO object if the configuration exists,\n+     * null otherwise\n      */\n-    public ConfigurationTO readConfiguration(String confKey) {\n-\n-        ConfigurationTO configurationTO;\n-        try {\n-            configurationTO = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"configuration/read/{confKey}.json\",\n-                    ConfigurationTO.class, confKey);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-            return null;\n-        }\n+    public ConfigurationTO readConfiguration(String confKey) throws\n+            SyncopeClientCompositeErrorException, RestClientException {\n+\n+        ConfigurationTO configurationTO = restClient.getRestTemplate()\n+                .getForObject(restClient.getBaseURL() +\n+                \"configuration/read/{confKey}.json\", ConfigurationTO.class,\n+                confKey);\n+\n \n         return configurationTO;\n     }\n@@ -96,17 +95,12 @@ public boolean updateConfiguration(ConfigurationTO configurationTO) {\n      * Deelete a configuration by confKey\n      * @throws UnsupportedEncodingException\n      */\n-    public void deleteConfiguration(String confKey)\n-                                        throws UnsupportedEncodingException {\n-        try {\n+    public void deleteConfiguration(String confKey) throws\n+            UnsupportedEncodingException, HttpStatusCodeException {\n+\n             restClient.getRestTemplate().delete( restClient.getBaseURL()\n                     + \"configuration/delete/{confKey}.json\",\n                     confKey);\n-        } catch (HttpStatusCodeException e) {\n-            //assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n-            throw e;\n-        }\n-\n     }\n \n     /**"},{"sha":"90eb8c60cbb1ea8c57fc26620207758731778775","filename":"console/src/main/java/org/syncope/console/rest/RolesRestClient.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRolesRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRolesRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRolesRestClient.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -16,6 +16,7 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.springframework.web.client.RestClientException;\n import org.syncope.client.mod.RoleMod;\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -31,16 +32,12 @@ public class RolesRestClient {\n      * Get all Roles.\n      * @return SchemaTOs\n      */\n-    public List<RoleTO> getAllRoles() {\n+    public List<RoleTO> getAllRoles()\n+            throws SyncopeClientCompositeErrorException, RestClientException {\n         List<RoleTO> roles = null;\n \n-        try{\n         roles =  Arrays.asList(restClient.getRestTemplate().getForObject(\n                 restClient.getBaseURL() + \"role/list.json\", RoleTO[].class));\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-        }\n         \n         return roles;\n     }"},{"sha":"4348704f737d3bd9459c5b28ecb28a00a2d439d7","filename":"console/src/main/java/org/syncope/console/rest/UsersRestClient.java","status":"modified","additions":13,"deletions":36,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -47,44 +47,26 @@ public List<UserTO> getAllUsers() {\n      * Create a new user and start off the workflow.\n      * @param userTO instance\n      */\n-    public void createUser(UserTO userTO) {\n+    public void createUser(UserTO userTO)\n+            throws SyncopeClientCompositeErrorException {\n         UserTO newUserTO;\n \n-        try {\n-            // 1. create user\n-            newUserTO = restClient.getRestTemplate().postForObject(\n+        // Create user\n+        newUserTO = restClient.getRestTemplate().postForObject(\n             restClient.getBaseURL() + \"user/create\", userTO, UserTO.class);\n-\n-            //userTO.setId(newUserTO.getId());\n-            //userTO.setToken(newUserTO.getToken());\n-            //userTO.setTokenExpireTime(newUserTO.getTokenExpireTime());\n-            \n-//            newUserTO = restClient.getRestTemplate().postForObject(\n-//                    restClient.getBaseURL()\n-//                    + \"user/activate\", newUserTO, UserTO.class);\n-\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-            throw e;\n-        }\n     }\n \n     /**\n      * Update existing user.\n      * @param userTO\n      * @return true is the opertion ends succesfully, false otherwise\n      */\n-    public boolean updateUser(final UserMod userModTO) {\n+    public boolean updateUser(UserMod userModTO) throws\n+            SyncopeClientCompositeErrorException{\n         UserTO newUserTO = null;\n \n-        try {\n-\n-            newUserTO = restClient.getRestTemplate().postForObject(\n-            restClient.getBaseURL() + \"user/update\", userModTO, UserTO.class);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-            throw e;\n-        }\n+        newUserTO = restClient.getRestTemplate().postForObject(\n+        restClient.getBaseURL() + \"user/update\", userModTO, UserTO.class);\n \n         return userModTO.getId() == newUserTO.getId();\n     }\n@@ -135,9 +117,8 @@ public boolean createConfigurationAttributes(\n     public boolean updateConfigurationAttributes(\n             ConfigurationTO configurationTO) {\n \n-        ConfigurationTO newConfigurationTO =\n-                restClient.getRestTemplate().postForObject(\n-                restClient.getBaseURL() + \"configuration/update\",\n+        ConfigurationTO newConfigurationTO =  restClient.getRestTemplate()\n+                .postForObject(restClient.getBaseURL() + \"configuration/update\",\n                 configurationTO, ConfigurationTO.class);\n \n         return configurationTO.equals(newConfigurationTO);\n@@ -169,17 +150,13 @@ public ConfigurationTO readConfigurationDisplayAttributes() {\n      * @param userTO\n      * @return UserTOs\n      */\n-    public List<UserTO> searchUsers(NodeCond nodeSearchCondition) {\n+    public List<UserTO> searchUsers(NodeCond nodeSearchCondition) \n+            throws HttpServerErrorException {\n         List<UserTO> matchedUsers = null;\n \n-        try {\n-            matchedUsers = restClient.getRestTemplate().postForObject(\n+        matchedUsers = restClient.getRestTemplate().postForObject(\n                     restClient.getBaseURL() + \"user/search\",\n                     nodeSearchCondition, List.class);\n-        } catch (HttpServerErrorException e) {\n-            e.printStackTrace();\n-            throw e;\n-        }\n \n         return matchedUsers;\n     }"},{"sha":"2af86de803965dcf5aa0300c35addba54fe5debc","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/SyncopeRoleTree.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -22,6 +22,7 @@\n import javax.swing.tree.DefaultMutableTreeNode;\n import javax.swing.tree.DefaultTreeModel;\n import javax.swing.tree.TreeModel;\n+import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.RoleTO;\n import org.syncope.console.rest.RolesRestClient;\n \n@@ -42,7 +43,7 @@ public SyncopeRoleTree(RolesRestClient restClient) {\n      *\n      * @return New instance of tree model.\n      */\n-    public TreeModel createTreeModel() {\n+    public TreeModel createTreeModel() throws RestClientException {\n \n         List<RoleTO> roles = restClient.getAllRoles();\n \n@@ -121,7 +122,8 @@ public boolean parentExists(Long parentId, List<Long> list) {\n      * @param child to be added to list\n      * @return List<SyncopeTreeNode>\n      */\n-    public List<SyncopeTreeNode> addChildToParent(List<SyncopeTreeNode> nodes, SyncopeTreeNode child) {\n+    public List<SyncopeTreeNode> addChildToParent(List<SyncopeTreeNode> nodes,\n+            SyncopeTreeNode child) {\n         if (nodes.size() == 0) {\n             nodes.add(child);\n             return nodes;\n@@ -146,7 +148,8 @@ public List<SyncopeTreeNode> addChildToParent(List<SyncopeTreeNode> nodes, Synco\n \n     public TreeModel convertToTreeModel(List<SyncopeTreeNode> list) {\n         TreeModel model = null;\n-        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(new TreeModelBean(\"Root\"));\n+        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(\n+                new TreeModelBean(\"Root\"));\n         add(rootNode, list);\n         model = new DefaultTreeModel(rootNode);\n         return model;\n@@ -156,11 +159,13 @@ public void add(DefaultMutableTreeNode parent, List<SyncopeTreeNode> sub) {\n         for (Iterator<SyncopeTreeNode> i = sub.iterator(); i.hasNext();) {\n             SyncopeTreeNode node = i.next();\n             if (node.getChildren().size() > 0) {\n-                DefaultMutableTreeNode child = new DefaultMutableTreeNode(new TreeModelBean(node));\n+                DefaultMutableTreeNode child = new DefaultMutableTreeNode(\n+                        new TreeModelBean(node));\n                 parent.add(child);\n                 add(child, node.getChildren());\n             } else {\n-                DefaultMutableTreeNode child = new DefaultMutableTreeNode(new TreeModelBean(node));\n+                DefaultMutableTreeNode child = new DefaultMutableTreeNode(\n+                        new TreeModelBean(node));\n                 parent.add(child);\n             }\n         }"},{"sha":"d7a04f985facd7d3ca2adfe02fde39daa13c3ee8","filename":"console/src/main/resources/org/syncope/console/SyncopeApplication.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.properties?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -9,4 +9,6 @@ task=Task\n logout=Logout\n schema=Schema\n operation_succeded=Operation executed successfully\n-operation_error=Error occurred during the requested operation\n\\ No newline at end of file\n+operation_error=Error occurred during the requested operation\n+restClientException=Services connection error.\n+alert=Alert:"},{"sha":"10f045ed984bd3880d4478926c68df08d1f73936","filename":"console/src/main/resources/org/syncope/console/SyncopeApplication_it.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -9,4 +9,6 @@ logout=Logout\n schema=Schema\n task=Task\n operation_succeded=Operazione eseguita con successo\n-operation_error=Attenzione si \\u00E8 verificato un errore durante l'esecizione dell'operazione richiesta\n\\ No newline at end of file\n+operation_error=Attenzione si \\u00E8 verificato un errore durante l'esecizione dell'operazione richiesta\n+restClientException=Errore di connessione ai servizi di Syncope.\n+alert=Attenzione:"},{"sha":"dac1357d01db3998d4b3465326d5c0e9ab4f8668","filename":"console/src/main/resources/org/syncope/console/pages/BasePage.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.properties?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -1 +1,2 @@\n-displayRows=Rows to display:\n\\ No newline at end of file\n+displayRows=Rows to display:\n+home=Home"},{"sha":"10a6eff31b9f3730c5051f1c6bbb9ba6d3206893","filename":"console/src/main/resources/org/syncope/console/pages/BasePage_it.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage_it.properties?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -1 +1,2 @@\n-displayRows=Righe per pagina:\n\\ No newline at end of file\n+displayRows=Righe per pagina:\n+home=Home"},{"sha":"c35435b944d771ff35164b2a6fbed50961abe378","filename":"console/src/main/resources/org/syncope/console/pages/ErrorPage.html","status":"added","additions":105,"deletions":0,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.html?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a","patch":"@@ -0,0 +1,105 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:head>\n+    <style type=\"text/css\">\n+        .ui-state-error, .ui-widget-content .ui-state-error, .ui-widget-header .ui-state-error  {\n+            background:url(\"images/ui-bg_glass_95_fef1ec_1x400.png\") repeat-x scroll 50% 50% #FEF1EC;\n+            border:1px solid #CD0A0A;\n+            color:#CD0A0A;\n+            width: 400px;\n+            padding: 0px;\n+            margin-top: 200px;\n+            margin-left: auto;\n+            margin-right: auto;\n+        }\n+        body {\n+        background: url(\"css/images/ui-bg_diagonals-thick_20_666666_40x40.png\") \n+            repeat scroll 50% 50% #666666;\n+        }\n+    </style>\n+</wicket:head>\n+<wicket:extend>\n+    <div id=\"testa\">\n+        <img src=\"img/logo.png\" alt=\"syncope\" title=\"syncope\" id=\"logo\" />\n+        <ul>\n+            <li><span>\n+                    <a href=#\" wicket:id=\"schema\"><img src=\"img/menu/notsel/schema.png\" alt=\"Schema\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"schema\"/>\n+                    </a></span>\n+            </li>\n+            <li><span>\n+                    <a href=#\" wicket:id=\"users\"><img src=\"img/menu/notsel/users.png\" alt=\"Users\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"users\"/>\n+                    </a>\n+                </span>\n+            </li>\n+            <li><span>\n+                    <a href=#\" wicket:id=\"roles\"><img src=\"img/menu/notsel/roles.png\" alt=\"Roles\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"roles\"/>\n+                    </a>\n+                </span>\n+            </li>\n+            <li><span>\n+                    <a href=\"#\" wicket:id=\"resources\"><img src=\"img/menu/notsel/resources.png\" alt=\"Resources\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"resources\"/>\n+                    </a></span>\n+            </li>\n+            <li><span>\n+                    <a href=\"#\" wicket:id=\"connectors\"><img src=\"img/menu/notsel/connectors.png\" alt=\"Connectors\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"connectors\"/>\n+                    </a></span>\n+            </li>\n+            <li><span>\n+                    <a href=\"#\" wicket:id=\"report\"><img src=\"img/menu/notsel/reports.png\" alt=\"Report\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"report\"/>\n+                    </a>\n+                </span>\n+            </li>\n+            <li><span>\n+                    <a href=\"#\" wicket:id=\"configuration\"><img src=\"img/menu/notsel/configuration.png\" alt=\"Configuration\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"configuration\"/>\n+                    </a></span>\n+            </li>\n+            <li><span>\n+                    <a href=\"#\" wicket:id=\"task\"><img src=\"img/menu/notsel/task.png\" alt=\"Task\" width=\"80\" height=\"80\" /><br />\n+                        <wicket:message key=\"task\"/>\n+                    </a>\n+                </span>\n+            </li>\n+            <li style=\"float:right\">\n+                <a href=\"#\" wicket:id=\"logout\">\n+                    <img src=\"img/menu/logout.png\" alt=\"Roles\" width=\"80\"\n+                         height=\"80\" /><br />\n+                    <wicket:message key=\"logout\"/>\n+                </a>\n+            </li>\n+        </ul>\n+    </div>\n+\n+    <div class=\"ui-widget\">\n+        <div style=\"padding: 0pt 0.7em;\" class=\"ui-state-error ui-corner-all\">\n+            <p><span style=\"float: left; margin-right: 0.3em;\"\n+                     class=\"ui-icon ui-icon-alert\"></span>\n+                <strong><span wicket:id=\"errorTitle\"/></strong>\n+                <div><span wicket:id=\"errorMessage\"/></div>\n+                <p>\n+                    <a href=\"\" wicket:id=\"home\">\n+                        <wicket:message key=\"home\"/>\n+                    </a>\n+                </p>\n+            </p>\n+        </div>\n+    </div>\n+</wicket:extend>\n\\ No newline at end of file"},{"sha":"64ece5707d91a6edf9fad4bfcce0c4dbcafcf58d","filename":"console/src/main/webapp/css/images/ui-bg_diagonals-thick_20_666666_40x40.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fimages%2Fui-bg_diagonals-thick_20_666666_40x40.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48b61abc0f57871e5997635fb825fd92ae63cf1a/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fimages%2Fui-bg_diagonals-thick_20_666666_40x40.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Fimages%2Fui-bg_diagonals-thick_20_666666_40x40.png?ref=48b61abc0f57871e5997635fb825fd92ae63cf1a"}]}