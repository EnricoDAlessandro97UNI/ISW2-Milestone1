{"sha":"2c3754b2c195e414dd1c6c28604a6a94b635fed2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJjMzc1NGIyYzE5NWU0MTRkZDFjNmMyODYwNGE2YTk0YjYzNWZlZDI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2018-07-10T10:23:52Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2018-07-10T10:24:28Z"},"message":"[SYNCOPE-1333] same fix on Derived and Plain + code improving","tree":{"sha":"8216cc761525c479979e82107b5055130c14fbc0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8216cc761525c479979e82107b5055130c14fbc0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2c3754b2c195e414dd1c6c28604a6a94b635fed2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2c3754b2c195e414dd1c6c28604a6a94b635fed2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2c3754b2c195e414dd1c6c28604a6a94b635fed2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2c3754b2c195e414dd1c6c28604a6a94b635fed2/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"2d233d197ce9e5bac10b2c0f422221c6c36ed343","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2d233d197ce9e5bac10b2c0f422221c6c36ed343","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2d233d197ce9e5bac10b2c0f422221c6c36ed343"}],"stats":{"total":32,"additions":27,"deletions":5},"files":[{"sha":"dd94bc2da14bc17d2509380b600079ab891f9284","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c3754b2c195e414dd1c6c28604a6a94b635fed2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c3754b2c195e414dd1c6c28604a6a94b635fed2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=2c3754b2c195e414dd1c6c28604a6a94b635fed2","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n@@ -31,6 +32,7 @@\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n@@ -135,7 +137,13 @@ protected void setAttrs() {\n     protected void setAttrs(final MembershipTO membershipTO) {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(anyTO.getDerAttrs());\n+        final Map<String, AttrTO> attrMap;\n+        if (GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).isPresent()) {\n+            attrMap = EntityTOUtils.buildAttrMap(GroupableRelatableTO.class.cast(anyTO)\n+                    .getMembership(membershipTO.getGroupKey()).get().getDerAttrs());\n+        } else {\n+            attrMap = new HashMap<>();\n+        }\n \n         membershipSchemas.get(membershipTO.getGroupKey()).values().forEach(schema -> {\n             AttrTO attrTO = new AttrTO();"},{"sha":"722adc945bdb8ebdb815b43c256ef9101795afca","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c3754b2c195e414dd1c6c28604a6a94b635fed2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c3754b2c195e414dd1c6c28604a6a94b635fed2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=2c3754b2c195e414dd1c6c28604a6a94b635fed2","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n@@ -47,6 +48,7 @@\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -189,14 +191,20 @@ protected void setAttrs() {\n     protected void setAttrs(final MembershipTO membershipTO) {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(membershipTO.getPlainAttrs());\n+        final Map<String, AttrTO> attrMap;\n+        if (GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).isPresent()) {\n+            attrMap = EntityTOUtils.buildAttrMap(GroupableRelatableTO.class.cast(anyTO)\n+                    .getMembership(membershipTO.getGroupKey()).get().getPlainAttrs());\n+        } else {\n+            attrMap = new HashMap<>();\n+        }\n \n         attrs.addAll(membershipSchemas.get(membershipTO.getGroupKey()).values().stream().\n                 map(schema -> {\n                     AttrTO attrTO = new AttrTO();\n                     attrTO.setSchema(schema.getKey());\n                     if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n-                        attrTO.getValues().add(\"\");\n+                        attrTO.getValues().add(StringUtils.EMPTY);\n \n                         // is important to set the schema info only after values setting\n                         attrTO.setSchemaInfo(schema);"},{"sha":"d2ceaefaf002bbd9cedd1a8207559ebbdc859e48","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2c3754b2c195e414dd1c6c28604a6a94b635fed2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2c3754b2c195e414dd1c6c28604a6a94b635fed2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=2c3754b2c195e414dd1c6c28604a6a94b635fed2","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n@@ -146,8 +147,13 @@ protected void setAttrs() {\n     protected void setAttrs(final MembershipTO membershipTO) {\n         List<AttrTO> attrs = new ArrayList<>();\n \n-        Map<String, AttrTO> attrMap = EntityTOUtils.buildAttrMap(\n-                GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).get().getVirAttrs());\n+        final Map<String, AttrTO> attrMap;\n+        if (GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).isPresent()) {\n+            attrMap = EntityTOUtils.buildAttrMap(GroupableRelatableTO.class.cast(anyTO)\n+                    .getMembership(membershipTO.getGroupKey()).get().getVirAttrs());\n+        } else {\n+            attrMap = new HashMap<>();\n+        }\n \n         attrs.addAll(membershipSchemas.get(membershipTO.getGroupKey()).values().stream().map(schema -> {\n             AttrTO attrTO = new AttrTO();"}]}