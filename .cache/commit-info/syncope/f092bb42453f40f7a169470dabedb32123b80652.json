{"sha":"f092bb42453f40f7a169470dabedb32123b80652","node_id":"C_kwDOJfYA1toAKGYwOTJiYjQyNDUzZjQwZjdhMTY5NDcwZGFiZWRiMzIxMjNiODA2NTI","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-08-03T11:46:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-08-03T11:46:23Z"},"message":"[SYNCOPE-1691] Showing schema labels as column headers, when available","tree":{"sha":"64cf46881b57be14f1abef69d28ef7320eeaf4cc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/64cf46881b57be14f1abef69d28ef7320eeaf4cc"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f092bb42453f40f7a169470dabedb32123b80652","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f092bb42453f40f7a169470dabedb32123b80652","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f092bb42453f40f7a169470dabedb32123b80652","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f092bb42453f40f7a169470dabedb32123b80652/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d95f77d917eb80e51d8b7b32c78470f056d83014","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d95f77d917eb80e51d8b7b32c78470f056d83014","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d95f77d917eb80e51d8b7b32c78470f056d83014"}],"stats":{"total":194,"additions":108,"deletions":86},"files":[{"sha":"9544671024447bd0574f9b27b9d1883b88407318","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":55,"deletions":15,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -26,13 +26,16 @@\n import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.console.PreferenceManager;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.commons.AnyDataProvider;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n@@ -44,10 +47,13 @@\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.status.ConnObjectWrapper;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.ConnObject;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.PageReference;\n@@ -65,9 +71,9 @@\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    protected final List<String> pSchemaNames;\n+    protected final List<PlainSchemaTO> plainSchemas;\n \n-    protected final List<String> dSchemaNames;\n+    protected final List<DerSchemaTO> derSchemas;\n \n     /**\n      * Filter used in case of filtered search.\n@@ -104,9 +110,9 @@ protected AnyDirectoryPanel(final String id, final Builder<A, E> builder, final\n             setReadOnly(!SyncopeConsoleSession.get().owns(String.format(\"%s_UPDATE\", builder.type), builder.dynRealm));\n         }\n \n-        this.realm = builder.realm;\n-        this.type = builder.type;\n-        this.fiql = builder.fiql;\n+        realm = builder.realm;\n+        type = builder.type;\n+        fiql = builder.fiql;\n \n         utilityModal.size(Modal.Size.Large);\n         addOuterObject(utilityModal);\n@@ -116,16 +122,46 @@ protected AnyDirectoryPanel(final String id, final Builder<A, E> builder, final\n \n         altDefaultModal.size(Modal.Size.Large);\n \n-        this.pSchemaNames = AnyDirectoryPanelBuilder.class.cast(builder).getAnyTypeClassTOs().stream().\n-                flatMap(anyTypeClassTO -> anyTypeClassTO.getPlainSchemas().stream()).collect(Collectors.toList());\n-\n-        this.dSchemaNames = AnyDirectoryPanelBuilder.class.cast(builder).getAnyTypeClassTOs().stream().\n-                flatMap(anyTypeClassTO -> anyTypeClassTO.getDerSchemas().stream()).collect(Collectors.toList());\n+        plainSchemas = AnyDirectoryPanelBuilder.class.cast(builder).getAnyTypeClassTOs().stream().\n+                flatMap(anyTypeClassTO -> anyTypeClassTO.getPlainSchemas().stream()).\n+                map(schema -> {\n+                    try {\n+                        return SchemaRestClient.<PlainSchemaTO>read(SchemaType.PLAIN, schema);\n+                    } catch (SyncopeClientException e) {\n+                        LOG.warn(\"Could not read plain schema {}, ignoring\", e);\n+                        return null;\n+                    }\n+                }).\n+                filter(Objects::nonNull).\n+                collect(Collectors.toList());\n+\n+        derSchemas = AnyDirectoryPanelBuilder.class.cast(builder).getAnyTypeClassTOs().stream().\n+                flatMap(anyTypeClassTO -> anyTypeClassTO.getDerSchemas().stream()).\n+                map(schema -> {\n+                    try {\n+                        return SchemaRestClient.<DerSchemaTO>read(SchemaType.DERIVED, schema);\n+                    } catch (SyncopeClientException e) {\n+                        LOG.warn(\"Could not read derived schema {}, ignoring\", e);\n+                        return null;\n+                    }\n+                }).\n+                filter(Objects::nonNull).\n+                collect(Collectors.toList());\n \n         initResultTable();\n \n         SyncopeWebApplication.get().getAnyDirectoryPanelAdditionalActionsProvider().add(\n-                this, modal, wizardInModal, container, type, realm, fiql, rows, pSchemaNames, dSchemaNames, pageRef);\n+                this,\n+                modal,\n+                wizardInModal,\n+                container,\n+                type,\n+                realm,\n+                fiql,\n+                rows,\n+                plainSchemas.stream().map(PlainSchemaTO::getKey).collect(Collectors.toList()),\n+                derSchemas.stream().map(DerSchemaTO::getKey).collect(Collectors.toList()),\n+                pageRef);\n     }\n \n     @Override\n@@ -143,12 +179,16 @@ protected List<IColumn<A, String>> getColumns() {\n                 prefcolumns));\n \n         PreferenceManager.getList(DisplayAttributesModalPanel.getPrefPlainAttributeView(type)).stream().\n-                filter(pSchemaNames::contains).\n-                forEach(name -> prefcolumns.add(new AttrColumn<>(name, SchemaType.PLAIN)));\n+                map(a -> plainSchemas.stream().filter(p -> p.getKey().equals(a)).findFirst()).\n+                filter(Optional::isPresent).map(Optional::get).\n+                forEach(s -> prefcolumns.add(new AttrColumn<>(\n+                s.getKey(), s.getLabel(SyncopeConsoleSession.get().getLocale()), SchemaType.PLAIN)));\n \n         PreferenceManager.getList(DisplayAttributesModalPanel.getPrefDerivedAttributeView(type)).stream().\n-                filter(dSchemaNames::contains).\n-                forEach(name -> prefcolumns.add(new AttrColumn<>(name, SchemaType.DERIVED)));\n+                map(a -> derSchemas.stream().filter(p -> p.getKey().equals(a)).findFirst()).\n+                filter(Optional::isPresent).map(Optional::get).\n+                forEach(s -> prefcolumns.add(new AttrColumn<>(\n+                s.getKey(), s.getLabel(SyncopeConsoleSession.get().getLocale()), SchemaType.DERIVED)));\n \n         // Add defaults in case of no selection\n         if (prefcolumns.isEmpty()) {"},{"sha":"62146a47e796e45dc2eb9262370717de7cb3c08d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n@@ -42,6 +43,8 @@\n import org.apache.syncope.common.lib.request.AnyObjectUR;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -84,7 +87,11 @@ public ActionsPanel<Serializable> getHeader(final String componentId) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.add(displayAttributeModal.setContent(new AnyObjectDisplayAttributesModalPanel<>(\n-                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n+                        displayAttributeModal,\n+                        page.getPageReference(),\n+                        plainSchemas.stream().map(PlainSchemaTO::getKey).collect(Collectors.toList()),\n+                        derSchemas.stream().map(DerSchemaTO::getKey).collect(Collectors.toList()),\n+                        type)));\n                 displayAttributeModal.addSubmitButton();\n                 displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                 displayAttributeModal.show(true);"},{"sha":"1723d809500a447cdb20d9edc4c31b505eac1d97","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassDetailsPanel.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassDetailsPanel.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -38,11 +39,11 @@ public class AnyTypeClassDetailsPanel extends Panel {\n \n     private final AnyTypeClassTO anyTypeClassTO;\n \n-    private final List<String> availablePlainSchemas = SchemaRestClient.getPlainSchemaNames();\n+    private final List<String> availablePlainSchemas = SchemaRestClient.getSchemaNames(SchemaType.PLAIN);\n \n-    private final List<String> availableDerSchemas = SchemaRestClient.getDerSchemaNames();\n+    private final List<String> availableDerSchemas = SchemaRestClient.getSchemaNames(SchemaType.DERIVED);\n \n-    private final List<String> availableVirSchemas = SchemaRestClient.getVirSchemaNames();\n+    private final List<String> availableVirSchemas = SchemaRestClient.getSchemaNames(SchemaType.VIRTUAL);\n \n     private static final List<String> LAYOUT_PARAMETERS = List.of(Constants.ENDUSER_ANYLAYOUT);\n \n@@ -52,20 +53,20 @@ public AnyTypeClassDetailsPanel(final String id, final AnyTypeClassTO anyTypeCla\n         this.anyTypeClassTO = anyTypeClassTO;\n         buildAvailableSchemas(anyTypeClassTO.getKey());\n \n-        final Form<AnyTypeClassTO> antTypeClassForm = new Form<>(\"form\");\n+        Form<AnyTypeClassTO> antTypeClassForm = new Form<>(\"form\");\n         antTypeClassForm.setModel(new CompoundPropertyModel<>(anyTypeClassTO));\n         antTypeClassForm.setOutputMarkupId(true);\n         add(antTypeClassForm);\n \n-        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\n+        AjaxTextFieldPanel key = new AjaxTextFieldPanel(\n                 Constants.KEY_FIELD_NAME,\n                 getString(Constants.KEY_FIELD_NAME),\n                 new PropertyModel<>(this.anyTypeClassTO, Constants.KEY_FIELD_NAME));\n         key.addRequiredLabel();\n         key.setEnabled(anyTypeClassTO.getKey() == null || this.anyTypeClassTO.getKey().isEmpty());\n         antTypeClassForm.add(key);\n \n-        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+        WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         antTypeClassForm.add(container);\n "},{"sha":"087391155f5713e3f36058a4a8e701fc2f3e9629","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -21,6 +21,7 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -52,7 +53,9 @@\n import org.apache.syncope.common.lib.request.GroupUR;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n@@ -195,7 +198,10 @@ public ActionsPanel<Serializable> getHeader(final String componentId) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.add(displayAttributeModal.setContent(new GroupDisplayAttributesModalPanel<>(\n-                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n+                        displayAttributeModal,\n+                        page.getPageReference(),\n+                        plainSchemas.stream().map(PlainSchemaTO::getKey).collect(Collectors.toList()),\n+                        derSchemas.stream().map(DerSchemaTO::getKey).collect(Collectors.toList()))));\n                 displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                 displayAttributeModal.show(true);\n             }"},{"sha":"f087da2afa4b92339b0fe1a51ef25e5ff7d9ab37","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":5,"deletions":17,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -126,7 +126,7 @@ protected List<IColumn<SchemaTO, String>> getColumns() {\n                     columns.add(new BooleanPropertyColumn<>(new ResourceModel(field), field, field));\n                 } else {\n                     IColumn<SchemaTO, String> column = new PropertyColumn<>(\n-                        new ResourceModel(field), field, field) {\n+                            new ResourceModel(field), field, field) {\n \n                         private static final long serialVersionUID = 3282547854226892169L;\n \n@@ -135,8 +135,8 @@ public String getCssClass() {\n                             String css = super.getCssClass();\n                             if (Constants.KEY_FIELD_NAME.equals(field)) {\n                                 css = StringUtils.isBlank(css)\n-                                    ? \"col-xs-1\"\n-                                    : css + \" col-xs-1\";\n+                                        ? \"col-xs-1\"\n+                                        : css + \" col-xs-1\";\n                             }\n                             return css;\n                         }\n@@ -159,7 +159,7 @@ public ActionsPanel<SchemaTO> getActions(final IModel<SchemaTO> model) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final SchemaTO ignore) {\n                 send(SchemaTypePanel.this, Broadcast.EXACT, new AjaxWizard.EditItemActionEvent<>(\n-                    SchemaRestClient.read(schemaType, model.getObject().getKey()), target));\n+                        SchemaRestClient.read(schemaType, model.getObject().getKey()), target));\n             }\n         }, ActionLink.ActionType.EDIT, IdRepoEntitlement.SCHEMA_UPDATE);\n         panel.add(new ActionLink<>() {\n@@ -169,19 +169,7 @@ public void onClick(final AjaxRequestTarget target, final SchemaTO ignore) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final SchemaTO ignore) {\n                 try {\n-                    switch (schemaType) {\n-                        case DERIVED:\n-                            SchemaRestClient.deleteDerSchema(model.getObject().getKey());\n-                            break;\n-\n-                        case VIRTUAL:\n-                            SchemaRestClient.deleteVirSchema(model.getObject().getKey());\n-                            break;\n-\n-                        default:\n-                            SchemaRestClient.deletePlainSchema(model.getObject().getKey());\n-                            break;\n-                    }\n+                    SchemaRestClient.delete(schemaType, model.getObject().getKey());\n \n                     SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                     target.add(container);"},{"sha":"7f9d2ecd6ffabb6680d57634dd9890e0b769b524","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -23,6 +23,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n@@ -46,6 +47,8 @@\n import org.apache.syncope.common.lib.info.PlatformInfo;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -109,7 +112,10 @@ public ActionsPanel<Serializable> getHeader(final String componentId) {\n             @Override\n             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.add(displayAttributeModal.setContent(new UserDisplayAttributesModalPanel<>(\n-                        displayAttributeModal, page.getPageReference(), pSchemaNames, dSchemaNames)));\n+                        displayAttributeModal,\n+                        page.getPageReference(),\n+                        plainSchemas.stream().map(PlainSchemaTO::getKey).collect(Collectors.toList()),\n+                        derSchemas.stream().map(DerSchemaTO::getKey).collect(Collectors.toList()))));\n \n                 displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                 displayAttributeModal.addSubmitButton();"},{"sha":"77cf665f88abe9ed45f891b8e02f594761e62a1f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":10,"deletions":40,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -24,11 +24,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.DerSchemaTO;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.SchemaTO;\n-import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n@@ -43,30 +39,30 @@ public class SchemaRestClient extends BaseRestClient {\n     private static final long serialVersionUID = -2479730152700312373L;\n \n     public static <T extends SchemaTO> List<T> getSchemas(final SchemaType schemaType, final AnyTypeKind kind) {\n-        final AnyTypeService client = getService(AnyTypeService.class);\n+        AnyTypeService client = getService(AnyTypeService.class);\n \n-        final List<String> classes = new ArrayList<>();\n+        List<String> classes = new ArrayList<>();\n \n         switch (kind) {\n             case USER:\n             case GROUP:\n-                final AnyTypeTO type = client.read(kind.name());\n+                AnyTypeTO type = client.read(kind.name());\n                 if (type != null) {\n                     classes.addAll(type.getClasses());\n                 }\n                 break;\n \n             default:\n                 AnyTypeRestClient.listAnyTypes().stream().filter(\n-                        anyTypeTO -> (anyTypeTO.getKind() != AnyTypeKind.USER\n-                        && anyTypeTO.getKind() != AnyTypeKind.GROUP)).\n-                        forEach((anyTypeTO) -> classes.addAll(anyTypeTO.getClasses()));\n+                        anyType -> anyType.getKind() != AnyTypeKind.USER && anyType.getKind() != AnyTypeKind.GROUP).\n+                        forEach(anyType -> classes.addAll(anyType.getClasses()));\n         }\n+\n         return getSchemas(schemaType, null, classes.toArray(String[]::new));\n     }\n \n     public static <T extends SchemaTO> List<T> getSchemas(\n-        final SchemaType schemaType, final String keyword, final String... anyTypeClasses) {\n+            final SchemaType schemaType, final String keyword, final String... anyTypeClasses) {\n \n         SchemaQuery.Builder builder = new SchemaQuery.Builder().type(schemaType);\n         if (StringUtils.isNotBlank(keyword)) {\n@@ -90,26 +86,14 @@ public static List<String> getSchemaNames(final SchemaType schemaType) {\n \n         try {\n             schemaNames = getSchemas(schemaType, null, new String[0]).stream().\n-                    map(EntityTO::getKey).collect(Collectors.toList());\n+                    map(SchemaTO::getKey).collect(Collectors.toList());\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user schema names\", e);\n         }\n \n         return schemaNames;\n     }\n \n-    public static List<String> getPlainSchemaNames() {\n-        return getSchemaNames(SchemaType.PLAIN);\n-    }\n-\n-    public static List<String> getDerSchemaNames() {\n-        return getSchemaNames(SchemaType.DERIVED);\n-    }\n-\n-    public static List<String> getVirSchemaNames() {\n-        return getSchemaNames(SchemaType.VIRTUAL);\n-    }\n-\n     public static <T extends SchemaTO> T read(final SchemaType schemaType, final String key) {\n         return getService(SchemaService.class).read(schemaType, key);\n     }\n@@ -122,21 +106,7 @@ public static void update(final SchemaType schemaType, final SchemaTO modelObjec\n         getService(SchemaService.class).update(schemaType, modelObject);\n     }\n \n-    public static PlainSchemaTO deletePlainSchema(final String name) {\n-        PlainSchemaTO response = getService(SchemaService.class).read(SchemaType.PLAIN, name);\n-        getService(SchemaService.class).delete(SchemaType.PLAIN, name);\n-        return response;\n-    }\n-\n-    public static DerSchemaTO deleteDerSchema(final String name) {\n-        DerSchemaTO schemaTO = getService(SchemaService.class).read(SchemaType.DERIVED, name);\n-        getService(SchemaService.class).delete(SchemaType.DERIVED, name);\n-        return schemaTO;\n-    }\n-\n-    public static VirSchemaTO deleteVirSchema(final String name) {\n-        VirSchemaTO schemaTO = getService(SchemaService.class).read(SchemaType.VIRTUAL, name);\n-        getService(SchemaService.class).delete(SchemaType.VIRTUAL, name);\n-        return schemaTO;\n+    public static void delete(final SchemaType schemaType, final String key) {\n+        getService(SchemaService.class).delete(schemaType, key);\n     }\n }"},{"sha":"986672a437a1d023863909caecbb442e686e3caf","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AttrColumn.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAttrColumn.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -37,10 +37,10 @@\n \n     private final SchemaType schemaType;\n \n-    public AttrColumn(final String name, final SchemaType schemaType) {\n+    public AttrColumn(final String name, final String label, final SchemaType schemaType) {\n         // set sortProperty to schematype#name (e.g. derivedSchema#cn, \n         // for use with SortableUserProviderComparator.AttrModel#getObject)\n-        super(new ResourceModel(name, name), schemaType.name() + '#' + name);\n+        super(new ResourceModel(name, label), schemaType.name() + '#' + name);\n         this.name = name;\n         this.schemaType = schemaType;\n     }"},{"sha":"19deec2e6d18123d5c51cf6029905fef07558d84","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ConfirmBehavior.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FConfirmBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FConfirmBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FConfirmBehavior.java?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -22,6 +22,7 @@\n \n import de.agilecoders.wicket.jquery.function.JavaScriptInlineFunction;\n import java.util.ArrayList;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.wicket.Component;\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.markup.head.IHeaderResponse;\n@@ -52,15 +53,18 @@ public void renderHead(final Component component, final IHeaderResponse response\n                         + \"evt.preventDefault();\"\n                         + \"if (proceed == false) {\"\n                         + \"  evt.stopImmediatePropagation();\"\n-                        + \"  bootbox.confirm('\" + new ResourceModel(msg).getObject() + \"', function(result) {\"\n+                        + \"  bootbox.confirm({\"\n+                        + \"message:'\" + new ResourceModel(msg).getObject() + \"', \"\n+                        + \"locale: '\" + SyncopeConsoleSession.get().getLocale().getLanguage() + \"',\"\n+                        + \"callback: function(result) {\"\n                         + \"    if (result == true) {\"\n                         + \"      proceed = true;\"\n                         + \"      element.click();\"\n                         + \"    } else {\"\n                         + \"      proceed = false;\"\n                         + \"    }\"\n                         + \"  return true;\"\n-                        + \"  })\"\n+                        + \"  }})\"\n                         + \"} else {\"\n                         + \"  proceed = false;\"\n                         + \"};\", new ArrayList<>()"},{"sha":"505bbf2ee4d6efc33cffae793475b9023253d283","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f092bb42453f40f7a169470dabedb32123b80652/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=f092bb42453f40f7a169470dabedb32123b80652","patch":"@@ -39,7 +39,7 @@\n     <link href=\"ui-commons/css/accessibility.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <script type=\"text/javascript\" src=\"ui-commons/js/accessibility.js\"></script>\n \n-    <script type=\"text/javascript\" src=\"webjars/bootbox/${bootbox.version}/bootbox.js\"></script>\n+    <script type=\"text/javascript\" src=\"webjars/bootbox/${bootbox.version}/bootbox.all.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/jQuery-slimScroll/${jquery-slimscroll.version}/jquery.slimscroll.min.js\"></script>\n     <script type=\"text/javascript\">\n       // global variable for IndicatingOnConfirmAjaxLink"}]}