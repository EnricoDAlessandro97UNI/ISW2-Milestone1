{"sha":"6a0a6ffb3dae2cae57679f278d965be0d65d0e30","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZhMGE2ZmZiM2RhZTJjYWU1NzY3OWYyNzhkOTY1YmUwZDY1ZDBlMzA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-24T14:34:35Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-24T14:34:35Z"},"message":"[SYNCOPE-855] SyncToken management now more in line with ConnId's semantics","tree":{"sha":"4b33f49c5f0e87f4fe4c9b02ef461af9d8d6361b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4b33f49c5f0e87f4fe4c9b02ef461af9d8d6361b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6a0a6ffb3dae2cae57679f278d965be0d65d0e30","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a0a6ffb3dae2cae57679f278d965be0d65d0e30","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6a0a6ffb3dae2cae57679f278d965be0d65d0e30","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c0a95664bd1f0a95d21a5e12c693f1192b3148f4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c0a95664bd1f0a95d21a5e12c693f1192b3148f4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c0a95664bd1f0a95d21a5e12c693f1192b3148f4"}],"stats":{"total":666,"additions":495,"deletions":171},"files":[{"sha":"5183dcb9f80a507bcc644c580ac4a3273f6a4870","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":23,"deletions":6,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -141,9 +141,28 @@ private Fragment getEmptyFragment() {\n     }\n \n     private Fragment getSyncopeFragment(final PageReference pageRef) {\n-        final Fragment fragment = new Fragment(\"actions\", \"syncopeActions\", this);\n+        Fragment fragment = new Fragment(\"actions\", \"syncopeActions\", this);\n \n-        final AjaxLink<String> tasks = new IndicatingAjaxLink<String>(\"tasks\") {\n+        AjaxLink<String> reload = new IndicatingOnConfirmAjaxLink<String>(\"reload\", \"connectors.confirm.reload\", true) {\n+\n+            private static final long serialVersionUID = -2075933173666007020L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                try {\n+                    connectorRestClient.reload();\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                } catch (Exception e) {\n+                    LOG.error(\"While reloading all connectors\", e);\n+                    error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                }\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+        };\n+        fragment.add(reload);\n+        MetaDataRoleAuthorizationStrategy.authorize(reload, ENABLE, StandardEntitlement.CONNECTOR_RELOAD);\n+\n+        AjaxLink<String> tasks = new IndicatingAjaxLink<String>(\"tasks\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -155,16 +174,15 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n         fragment.add(tasks);\n-\n         MetaDataRoleAuthorizationStrategy.authorize(tasks, ENABLE, StandardEntitlement.TASK_LIST);\n \n         return fragment;\n     }\n \n     private Fragment getLocationFragment(final TopologyNode node, final PageReference pageRef) {\n-        final Fragment fragment = new Fragment(\"actions\", \"locationActions\", this);\n+        Fragment fragment = new Fragment(\"actions\", \"locationActions\", this);\n \n-        final AjaxLink<String> create = new IndicatingAjaxLink<String>(\"create\") {\n+        AjaxLink<String> create = new IndicatingAjaxLink<String>(\"create\") {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n@@ -188,7 +206,6 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n         fragment.add(create);\n-\n         MetaDataRoleAuthorizationStrategy.authorize(create, ENABLE, StandardEntitlement.CONNECTOR_CREATE);\n \n         return fragment;"},{"sha":"528fa0366a11f1ec2cfa4d8eac14adb3f6060f0f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -42,7 +42,8 @@ public enum ActionType {\n \n         MAPPING(\"update\"),\n         MUSTCHANGEPASSWORD(\"update\"),\n-        RESET_TIME(\"update\"),\n+        SET_LATEST_SYNC_TOKEN(\"update\"),\n+        REMOVE_SYNC_TOKEN(\"update\"),\n         CLONE(\"create\"),\n         CREATE(\"create\"),\n         TEMPLATE(\"read\"),"},{"sha":"1e153d82d85d03826919f2b7979165a53337802d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":30,"deletions":6,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -57,7 +57,8 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelMapping\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelMustChangePassword\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelResetTime\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelSetLatestSyncToken\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelRemoveSyncToken\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelClone\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelTemplate\", \"emptyFragment\", this));\n@@ -224,10 +225,29 @@ public String getAjaxIndicatorMarkupId() {\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n-            case RESET_TIME:\n-                fragment = new Fragment(\"panelResetTime\", \"fragmentResetTime\", this);\n+            case SET_LATEST_SYNC_TOKEN:\n+                fragment = new Fragment(\"panelSetLatestSyncToken\", \"fragmentSetLatestSyncToken\", this);\n \n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"resetTimeLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"setLatestSyncTokenLink\") {\n+\n+                    private static final long serialVersionUID = -1876519166660008562L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n+            case REMOVE_SYNC_TOKEN:\n+                fragment = new Fragment(\"panelRemoveSyncToken\", \"fragmentRemoveSyncToken\", this);\n+\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"removeSyncTokenLink\") {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -1032,8 +1052,12 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelMustChangePassword\", \"emptyFragment\", this));\n                 break;\n \n-            case RESET_TIME:\n-                super.addOrReplace(new Fragment(\"panelResetTime\", \"emptyFragment\", this));\n+            case SET_LATEST_SYNC_TOKEN:\n+                super.addOrReplace(new Fragment(\"panelSetLatestSyncToken\", \"emptyFragment\", this));\n+                break;\n+\n+            case REMOVE_SYNC_TOKEN:\n+                super.addOrReplace(new Fragment(\"panelRemoveSyncToken\", \"emptyFragment\", this));\n                 break;\n \n             case CLONE:"},{"sha":"4456d57330731a00066c9147b91a5ab06496bd0c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":31,"deletions":4,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n@@ -106,14 +107,40 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n                 }, ActionLink.ActionType.MAPPING, StandardEntitlement.RESOURCE_UPDATE).\n                 addAction(new ActionLink<ProvisionTO>() {\n \n-                    private static final long serialVersionUID = -3722207913631435524L;\n+                    private static final long serialVersionUID = -7780999687733432439L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-                        provisionTO.setSyncToken(null);\n-                        send(ResourceProvisionPanel.this, Broadcast.DEPTH, new ListViewPanel.ListViewReload(target));\n+                        try {\n+                            SyncopeConsoleSession.get().getService(ResourceService.class).\n+                                    setLatestSyncToken(resourceTO.getKey(), provisionTO.getAnyType());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                        } catch (Exception e) {\n+                            LOG.error(\"While setting latest sync token for {}/{}\",\n+                                    resourceTO.getKey(), provisionTO.getAnyType(), e);\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                    }\n+                }, ActionLink.ActionType.SET_LATEST_SYNC_TOKEN, StandardEntitlement.RESOURCE_UPDATE).\n+                addAction(new ActionLink<ProvisionTO>() {\n+\n+                    private static final long serialVersionUID = -7780999687733432439L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+                        try {\n+                            SyncopeConsoleSession.get().getService(ResourceService.class).\n+                                    removeSyncToken(resourceTO.getKey(), provisionTO.getAnyType());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                        } catch (Exception e) {\n+                            LOG.error(\"While removing sync token for {}/{}\",\n+                                    resourceTO.getKey(), provisionTO.getAnyType(), e);\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.RESET_TIME, StandardEntitlement.RESOURCE_UPDATE).\n+                }, ActionLink.ActionType.REMOVE_SYNC_TOKEN, StandardEntitlement.RESOURCE_UPDATE).\n                 addAction(new ActionLink<ProvisionTO>() {\n \n                     private static final long serialVersionUID = -3722207913631435534L;"},{"sha":"0214cf6b5c729349cc01706c444023d66ff5a815","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -72,3 +72,4 @@ OrderByLink.CSS.descending=sorting_desc\n OrderByLink.CSS.none=sorting\n entitlements=Entitlements\n audit=Audit\n+connectors.confirm.reload=This request is potentially dangerous for running operations, continue?"},{"sha":"abc078259350ed1ca97736a79fa1409d6535a4db","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -71,3 +71,4 @@ OrderByLink.CSS.descending=sorting_desc\n OrderByLink.CSS.none=sorting\n entitlements=Entitlement\n audit=Audit\n+connectors.confirm.reload=Questa richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?"},{"sha":"92144544c68bb72b5c933bf0f85f32bcf3cc453b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -71,3 +71,4 @@ OrderByLink.CSS.descending=sorting_desc\n OrderByLink.CSS.none=sorting\n entitlements=Entitlement\n audit=Audit\n+connectors.confirm.reload=Esta requis\\u00e7\\u00e3o \\u00e9 potencialmente perigosa para opera\\u00e7\\u00f5es em execu\\u00e7\\u00e3o, prosseguir?"},{"sha":"0b76c8a54f90ce55b6af7cee651c1f6b124fff24","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -122,3 +122,4 @@ OrderByLink.CSS.none=\\u0441\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u043a\\u043\n # entitlements=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00be\\u00d1\\u0087\\u00d0\\u00b8\\u00d1\\u008f\n entitlements=\\u041f\\u043e\\u043b\\u043d\\u043e\\u043c\\u043e\\u0447\\u0438\\u044f\n audit=Audit\n+connectors.confirm.reload=This request is potentially dangerous for running operations, continue?"},{"sha":"c295894f2869bb610b3c463583e27053bdbeaefe","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -50,6 +50,7 @@\n \n     <wicket:fragment wicket:id=\"syncopeActions\">\n       <ul class=\"menu\">\n+        <li><i class=\"fa fa-refresh\"></i><a href=\"#\" wicket:id=\"reload\"><wicket:message key=\"connectors.reload\"/></a></li>\n         <li><i class=\"fa fa-tasks\"></i><a href=\"#\" wicket:id=\"tasks\"><wicket:message key=\"task.custom.list\"/></a></li>\n       </ul>\n     </wicket:fragment>"},{"sha":"e46c1ce2a4e3ed470c1acaddaae072d110b23519","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.properties?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -33,3 +33,4 @@ task.propagation.list=Propagation tasks\n task.pull.list=Pull tasks\n task.push.list=Push tasks\n resource.explore.list=Explore ${key}\n+connectors.reload=Reload all connectors"},{"sha":"0482bd4ade33b8d0aa74a903cdd0495c6aa9b229","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -33,3 +33,4 @@ task.propagation.list=Task di propagazione\n task.pull.list=Pull task\n task.push.list=Push task\n resource.explore.list=Esplora ${key}\n+connectors.reload=Ricarica tutti i connettori"},{"sha":"753e2303d6280d148b59fcee12673b176a724e4e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_pt_BR.properties?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -33,3 +33,4 @@ task.propagation.list=Propagation tasks\n task.pull.list=Pull tasks\n task.push.list=Push tasks\n resource.explore.list=Explorar ${key}\n+connectors.reload=Reload all connectors"},{"sha":"e400313c1d8261f37c1f367c48ae7b53add7c664","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_ru.properties?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -52,3 +52,4 @@ task.pull.list=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043f\\u043e\\u043b\\u0443\\u04\n task.push.list=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043f\\u0435\\u0440\\u0435\\u0434\\u0430\\u0447\\u0438 \\u0434\\u0430\\u043d\\u043d\\u044b\\u0445\n # resource.explore.list=\\u00d0\\u009f\\u00d1\\u0080\\u00d0\\u00be\\u00d1\\u0081\\u00d0\\u00bc\\u00d0\\u00be\\u00d1\\u0082\\u00d1\\u0080 ${key}\n resource.explore.list=\\u041f\\u0440\\u043e\\u0441\\u043c\\u043e\\u0442\\u0440 ${key}\n+connectors.reload=Reload all connectors"},{"sha":"c9a8aa7ea86fb91271faa5b774daf17d27108357","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -38,7 +38,8 @@\n     <span wicket:id=\"panelNotFound\">[plus]</span>\n     <span wicket:id=\"panelView\">[plus]</span>\n     <span wicket:id=\"panelMapping\">[plus]</span>\n-    <span wicket:id=\"panelResetTime\">[plus]</span>\n+    <span wicket:id=\"panelSetLatestSyncToken\">[plus]</span>\n+    <span wicket:id=\"panelRemoveSyncToken\">[plus]</span>\n     <span wicket:id=\"panelClone\">[plus]</span>\n     <span wicket:id=\"panelCreate\">[plus]</span>\n     <span wicket:id=\"panelReset\">[plus]</span>\n@@ -98,8 +99,12 @@\n       <a href=\"#\" wicket:id=\"mappingLink\" class=\"btn\"><i class=\"fa fa-exchange\" alt=\"mapping icon\" title=\"Mapping\"></i></a>\n     </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"fragmentResetTime\">\n-      <a href=\"#\" wicket:id=\"resetTimeLink\" class=\"btn\"><i class=\"fa fa-hourglass-start\" alt=\"reset time icon\" title=\"Reset Time\"></i></a>\n+    <wicket:fragment wicket:id=\"fragmentSetLatestSyncToken\">\n+      <a href=\"#\" wicket:id=\"setLatestSyncTokenLink\" class=\"btn\"><i class=\"fa fa-hourglass-start\" alt=\"reset time icon\" title=\"Set latest Sync Token\"></i></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentRemoveSyncToken\">\n+      <a href=\"#\" wicket:id=\"removeSyncTokenLink\" class=\"btn\"><i class=\"fa fa-hourglass-o\" alt=\"reset time icon\" title=\"Remove Sync Token\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentClone\">"},{"sha":"90748ec3993eec803c58cfae95e2d9112e5157ea","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SchedTaskTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -45,7 +45,7 @@ public class SchedTaskTO extends AbstractTaskTO {\n \n     private Date nextExec;\n \n-    private boolean active;\n+    private boolean active = true;\n \n     public Date getStartAt() {\n         return startAt == null ? null : new Date(startAt.getTime());"},{"sha":"0de2619a832b9051b0154713bedfdfec99d321ff","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -118,6 +118,27 @@ PagedConnObjectTOResult listConnObjects(\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     void update(@NotNull ResourceTO resourceTO);\n \n+    /**\n+     * Queries the connector underlying the given resource for the latest sync token value associated to the given any\n+     * type and stores the value internally, for later usage.\n+     *\n+     * @param key resource\n+     * @param anyTypeKey any type\n+     */\n+    @POST\n+    @Path(\"{key}/{anyTypeKey}\")\n+    void setLatestSyncToken(@NotNull @PathParam(\"key\") String key, @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n+\n+    /**\n+     * Removes the sync token value associated to the given any type from the given resource.\n+     *\n+     * @param key resource\n+     * @param anyTypeKey any type\n+     */\n+    @DELETE\n+    @Path(\"{key}/{anyTypeKey}\")\n+    void removeSyncToken(@NotNull @PathParam(\"key\") String key, @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n+\n     /**\n      * Deletes the resource matching the given name.\n      *"},{"sha":"e95e0b90a3daf9daa2ba454ac78fd2aa75ef2082","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -157,6 +157,53 @@ public ResourceTO update(final ResourceTO resourceTO) {\n         return binder.getResourceTO(resource);\n     }\n \n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.RESOURCE_UPDATE + \"')\")\n+    public void setLatestSyncToken(final String key, final String anyTypeKey) {\n+        ExternalResource resource = resourceDAO.find(key);\n+        if (resource == null) {\n+            throw new NotFoundException(\"Resource '\" + key + \"'\");\n+        }\n+        AnyType anyType = anyTypeDAO.find(anyTypeKey);\n+        if (anyType == null) {\n+            throw new NotFoundException(\"AnyType '\" + anyTypeKey + \"'\");\n+        }\n+        Provision provision = resource.getProvision(anyType);\n+        if (provision == null) {\n+            throw new NotFoundException(\"Provision for AnyType '\" + anyTypeKey + \"' in Resource '\" + key + \"'\");\n+        }\n+\n+        Connector connector;\n+        try {\n+            connector = connFactory.getConnector(resource);\n+        } catch (Exception e) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidConnInstance);\n+            sce.getElements().add(e.getMessage());\n+            throw sce;\n+        }\n+\n+        provision.setSyncToken(connector.getLatestSyncToken(provision.getObjectClass()));\n+        resourceDAO.save(resource);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.RESOURCE_UPDATE + \"')\")\n+    public void removeSyncToken(final String key, final String anyTypeKey) {\n+        ExternalResource resource = resourceDAO.find(key);\n+        if (resource == null) {\n+            throw new NotFoundException(\"Resource '\" + key + \"'\");\n+        }\n+        AnyType anyType = anyTypeDAO.find(anyTypeKey);\n+        if (anyType == null) {\n+            throw new NotFoundException(\"AnyType '\" + anyTypeKey + \"'\");\n+        }\n+        Provision provision = resource.getProvision(anyType);\n+        if (provision == null) {\n+            throw new NotFoundException(\"Provision for AnyType '\" + anyTypeKey + \"' in Resource '\" + key + \"'\");\n+        }\n+\n+        provision.setSyncToken(null);\n+        resourceDAO.save(resource);\n+    }\n+\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.RESOURCE_DELETE + \"')\")\n     public ResourceTO delete(final String resourceName) {\n         ExternalResource resource = resourceDAO.find(resourceName);"},{"sha":"0f8536ced3cbdf7452937a4ed77c0456c6256e6f","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -1082,10 +1082,10 @@ under the License.\n   <AnyTemplatePullTask id=\"9af0e343-8a37-42d2-9bc7-6e2e3b103219\" pullTask_id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" anyType_id=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":null,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"PullTask\" id=\"feae4e57-15ca-40d9-b973-8b9015efca49\" name=\"CSV (unlink matching; ignore unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\" pullMode=\"INCREMENTAL\"\n+        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\"/>\n   <Task DTYPE=\"PullTask\" id=\"55d5e74b-497e-4bc0-9156-73abef4b9adc\" name=\"CSV (ignore matching; assign unmatching)\" resource_id=\"resource-csv\"\n-        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\" pullMode=\"INCREMENTAL\"\n+        destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" pullStatus=\"1\" pullMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"0f618183-17ce-48bc-80bc-cc535f38983a\" operation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_id=\"resource-testdb\" anyTypeKind=\"USER\" anyKey=\"1417acbe-cbf6-4277-9372-e75e04f97000\""},{"sha":"83eb098bc6f1fcb3ab9ca89e0fad11feee7d19b9","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningProfile.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -27,9 +27,6 @@\n \n public class ProvisioningProfile<T extends ProvisioningTask, A extends ProvisioningActions> {\n \n-    /**\n-     * Syncing connector.\n-     */\n     private final Connector connector;\n \n     private final T task;"},{"sha":"bb145c51340b701a0f377c12c74402e9a3d9f22a","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullActions.java","status":"modified","additions":13,"deletions":14,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -169,35 +169,34 @@ <A extends AnyTO> SyncDelta beforeDelete(\n             A any) throws JobExecutionException;\n \n     /**\n-     * Action to be executed when user / group pull goes on error.\n+     * Action to be executed after each local user / group pull.\n      *\n+     * @param <A> concrete any object\n      * @param profile profile of the pull being executed.\n-     * @param delta retrieved pull information (may be modified by\n-     * 'beforeProvision/beforeUpdate/beforeDelete')\n+     * @param delta retrieved pull information (may be modified by beforeProvision / beforeUpdate /\n+     * beforeDelete)\n+     * @param any any object\n      * @param result global pull results at the current pull step\n-     * @param error error being reported\n      * @throws JobExecutionException in case of generic failure\n      */\n-    void onError(\n+    <A extends AnyTO> void after(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            ProvisioningReport result,\n-            Exception error) throws JobExecutionException;\n+            A any,\n+            ProvisioningReport result) throws JobExecutionException;\n \n     /**\n-     * Action to be executed after each local user / group pull.\n+     * Action to be executed in case an exception is thrown during pull.\n      *\n-     * @param <A> concrete any object\n      * @param profile profile of the pull being executed.\n      * @param delta retrieved pull information (may be modified by beforeProvision / beforeUpdate /\n      * beforeDelete)\n-     * @param any any object\n-     * @param result global pull results at the current pull step\n+     * @param e the exception thrown\n+     * @return an instance of the given exception type is that is to be thrown; {@code NULL} otherwise\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <A extends AnyTO> void after(\n+    IgnoreProvisionException onError(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            A any,\n-            ProvisioningReport result) throws JobExecutionException;\n+            Exception e) throws JobExecutionException;\n }"},{"sha":"ab02282e59f16d2690545efe9d4ca5389acec597","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopePullExecutor.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullExecutor.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.pushpull;\n+\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.identityconnectors.framework.common.objects.SyncToken;\n+\n+public interface SyncopePullExecutor {\n+\n+    void setLatestSyncToken(ObjectClass objectClass, SyncToken latestSyncToken);\n+}"},{"sha":"8d8efc46aa8b0a84140c8c41f15811cbee9c013d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopePullResultHandler.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -24,6 +24,8 @@\n \n public interface SyncopePullResultHandler extends SyncopeResultHandler<PullTask, PullActions>, SyncResultsHandler {\n \n+    void setPullExecutor(SyncopePullExecutor executor);\n+\n     @Override\n     boolean handle(SyncDelta delta);\n }"},{"sha":"e09972fb15588c0a64c9f79ad489579182797938","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -153,10 +153,6 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n                     }\n                 }\n \n-                if (provisionTO.getSyncToken() == null) {\n-                    provision.setSyncToken(null);\n-                }\n-\n                 if (provisionTO.getMapping() == null) {\n                     provision.setMapping(null);\n                 } else {"},{"sha":"e8aaacf60d23617acfa95049ff0d8009ab37bf59","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":103,"deletions":82,"changes":185,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.common.lib.types.PropagationByResource;\n+import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -40,20 +41,21 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.provisioning.api.ProvisioningManager;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncDeltaType;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n-import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n-import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n-import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n \n @Transactional(rollbackFor = Throwable.class)\n public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHandler<PullTask, PullActions>\n@@ -68,6 +70,10 @@ public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHan\n     @Autowired\n     protected VirAttrCache virAttrCache;\n \n+    protected SyncopePullExecutor executor;\n+\n+    protected Result latestResult = null;\n+\n     protected abstract String getName(AnyTO anyTO);\n \n     protected abstract ProvisioningManager<?, ?> getProvisioningManager();\n@@ -121,6 +127,11 @@ protected void doDelete(final AnyTypeKind kind, final String key) {\n         getProvisioningManager().delete(key, true);\n     }\n \n+    @Override\n+    public void setPullExecutor(final SyncopePullExecutor executor) {\n+        this.executor = executor;\n+    }\n+\n     @Override\n     public boolean handle(final SyncDelta delta) {\n         Provision provision = null;\n@@ -132,21 +143,40 @@ public boolean handle(final SyncDelta delta) {\n             }\n \n             doHandle(delta, provision);\n-            return true;\n+\n+            LOG.debug(\"Successfully handled {}\", delta);\n+\n+            if (profile.getTask().getPullMode() != PullMode.INCREMENTAL) {\n+                return true;\n+            }\n+\n+            boolean shouldContinue;\n+            synchronized (this) {\n+                shouldContinue = latestResult == Result.SUCCESS;\n+                this.latestResult = null;\n+            }\n+            if (shouldContinue) {\n+                executor.setLatestSyncToken(delta.getObjectClass(), delta.getToken());\n+            }\n+            return shouldContinue;\n         } catch (IgnoreProvisionException e) {\n-            ProvisioningReport result = new ProvisioningReport();\n-            result.setOperation(ResourceOperation.NONE);\n-            result.setAnyType(provision == null\n+            ProvisioningReport ignoreResult = new ProvisioningReport();\n+            ignoreResult.setOperation(ResourceOperation.NONE);\n+            ignoreResult.setAnyType(provision == null\n                     ? getAnyUtils().getAnyTypeKind().name() : provision.getAnyType().getKey());\n-            result.setStatus(ProvisioningReport.Status.IGNORE);\n-            result.setKey(null);\n-            result.setName(delta.getObject().getName().getNameValue());\n-            profile.getResults().add(result);\n+            ignoreResult.setStatus(ProvisioningReport.Status.IGNORE);\n+            ignoreResult.setKey(null);\n+            ignoreResult.setName(delta.getObject().getName().getNameValue());\n+            profile.getResults().add(ignoreResult);\n \n             LOG.warn(\"Ignoring during pull\", e);\n+\n+            executor.setLatestSyncToken(delta.getObjectClass(), delta.getToken());\n+\n             return true;\n         } catch (JobExecutionException e) {\n             LOG.error(\"Pull failed\", e);\n+\n             return false;\n         }\n     }\n@@ -175,7 +205,7 @@ protected List<ProvisioningReport> assign(\n         } else {\n             SyncDelta actionedDelta = delta;\n             for (PullActions action : profile.getActions()) {\n-                actionedDelta = action.beforeAssign(this.getProfile(), actionedDelta, anyTO);\n+                actionedDelta = action.beforeAssign(profile, actionedDelta, anyTO);\n             }\n \n             create(anyTO, actionedDelta, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n@@ -206,7 +236,7 @@ protected List<ProvisioningReport> provision(\n         } else {\n             SyncDelta actionedDelta = delta;\n             for (PullActions action : profile.getActions()) {\n-                actionedDelta = action.beforeProvision(this.getProfile(), actionedDelta, anyTO);\n+                actionedDelta = action.beforeProvision(profile, actionedDelta, anyTO);\n             }\n \n             create(anyTO, actionedDelta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n@@ -215,7 +245,25 @@ protected List<ProvisioningReport> provision(\n         return Collections.singletonList(result);\n     }\n \n-    private void create(\n+    protected void throwIgnoreProvisionException(final SyncDelta delta, final Exception exception)\n+            throws JobExecutionException {\n+\n+        if (exception instanceof IgnoreProvisionException) {\n+            throw IgnoreProvisionException.class.cast(exception);\n+        }\n+\n+        IgnoreProvisionException ipe = null;\n+        for (PullActions action : profile.getActions()) {\n+            if (ipe == null) {\n+                ipe = action.onError(profile, delta, exception);\n+            }\n+        }\n+        if (ipe != null) {\n+            throw ipe;\n+        }\n+    }\n+\n+    protected void create(\n             final AnyTO anyTO,\n             final SyncDelta delta,\n             final String operation,\n@@ -232,33 +280,27 @@ private void create(\n             resultStatus = Result.SUCCESS;\n \n             for (PullActions action : profile.getActions()) {\n-                action.after(this.getProfile(), delta, actual, result);\n+                action.after(profile, delta, actual, result);\n             }\n-        } catch (IgnoreProvisionException e) {\n-            throw e;\n+\n+            LOG.debug(\"{} {} successfully created\", actual.getType(), actual.getKey());\n         } catch (PropagationException e) {\n             // A propagation failure doesn't imply a pull failure.\n             // The propagation exception status will be reported into the propagation task execution.\n             LOG.error(\"Could not propagate {} {}\", anyTO.getType(), delta.getUid().getUidValue(), e);\n             output = e;\n             resultStatus = Result.FAILURE;\n-\n-            for (PullActions action : profile.getActions()) {\n-                action.onError(this.getProfile(), delta, result, e);\n-            }\n         } catch (Exception e) {\n+            throwIgnoreProvisionException(delta, e);\n+\n             result.setStatus(ProvisioningReport.Status.FAILURE);\n             result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n             LOG.error(\"Could not create {} {} \", anyTO.getType(), delta.getUid().getUidValue(), e);\n             output = e;\n             resultStatus = Result.FAILURE;\n-\n-            for (PullActions action : profile.getActions()) {\n-                action.onError(this.getProfile(), delta, result, e);\n-            }\n         }\n \n-        audit(operation, resultStatus, null, output, delta);\n+        finalize(operation, resultStatus, null, output, delta);\n     }\n \n     protected List<ProvisioningReport> update(\n@@ -308,46 +350,39 @@ protected List<ProvisioningReport> update(\n                                 getAnyUtils());\n \n                         for (PullActions action : profile.getActions()) {\n-                            workingDelta = action.beforeUpdate(this.getProfile(), workingDelta, before, anyPatch);\n+                            workingDelta = action.beforeUpdate(profile, workingDelta, before, anyPatch);\n                         }\n \n                         AnyTO updated = doUpdate(before, anyPatch, workingDelta, result);\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(this.getProfile(), workingDelta, updated, result);\n+                            action.after(profile, workingDelta, updated, result);\n                         }\n \n                         output = updated;\n                         resultStatus = Result.SUCCESS;\n                         result.setName(getName(updated));\n+\n                         LOG.debug(\"{} {} successfully updated\", provision.getAnyType().getKey(), key);\n-                    } catch (IgnoreProvisionException e) {\n-                        throw e;\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\",\n                                 provision.getAnyType().getKey(), workingDelta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-\n-                        for (PullActions action : profile.getActions()) {\n-                            action.onError(this.getProfile(), workingDelta, result, e);\n-                        }\n                     } catch (Exception e) {\n+                        throwIgnoreProvisionException(delta, e);\n+\n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not update {} {}\",\n                                 provision.getAnyType().getKey(), workingDelta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-\n-                        for (PullActions action : profile.getActions()) {\n-                            action.onError(this.getProfile(), workingDelta, result, e);\n-                        }\n                     }\n                 }\n-                audit(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, workingDelta);\n+                finalize(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, workingDelta);\n             }\n             results.add(result);\n         }\n@@ -399,50 +434,43 @@ protected List<ProvisioningReport> deprovision(\n                     try {\n                         if (unlink) {\n                             for (PullActions action : profile.getActions()) {\n-                                action.beforeUnassign(this.getProfile(), delta, before);\n+                                action.beforeUnassign(profile, delta, before);\n                             }\n                         } else {\n                             for (PullActions action : profile.getActions()) {\n-                                action.beforeDeprovision(this.getProfile(), delta, before);\n+                                action.beforeDeprovision(profile, delta, before);\n                             }\n                         }\n \n                         doDeprovision(provision.getAnyType().getKind(), key, unlink);\n                         output = getAnyTO(key);\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(this.getProfile(), delta, AnyTO.class.cast(output), result);\n+                            action.after(profile, delta, AnyTO.class.cast(output), result);\n                         }\n \n                         resultStatus = Result.SUCCESS;\n+\n                         LOG.debug(\"{} {} successfully updated\", provision.getAnyType().getKey(), key);\n-                    } catch (IgnoreProvisionException e) {\n-                        throw e;\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\",\n                                 provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-\n-                        for (PullActions action : profile.getActions()) {\n-                            action.onError(this.getProfile(), delta, result, e);\n-                        }\n                     } catch (Exception e) {\n+                        throwIgnoreProvisionException(delta, e);\n+\n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not update {} {}\",\n                                 provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-\n-                        for (PullActions action : profile.getActions()) {\n-                            action.onError(this.getProfile(), delta, result, e);\n-                        }\n                     }\n                 }\n-                audit(unlink\n+                finalize(unlink\n                         ? MatchingRule.toEventName(MatchingRule.UNASSIGN)\n                         : MatchingRule.toEventName(MatchingRule.DEPROVISION), resultStatus, before, output, delta);\n             }\n@@ -497,49 +525,42 @@ protected List<ProvisioningReport> link(\n                     try {\n                         if (unlink) {\n                             for (PullActions action : profile.getActions()) {\n-                                action.beforeUnlink(this.getProfile(), delta, before);\n+                                action.beforeUnlink(profile, delta, before);\n                             }\n                         } else {\n                             for (PullActions action : profile.getActions()) {\n-                                action.beforeLink(this.getProfile(), delta, before);\n+                                action.beforeLink(profile, delta, before);\n                             }\n                         }\n \n                         output = doLink(before, unlink);\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(this.getProfile(), delta, AnyTO.class.cast(output), result);\n+                            action.after(profile, delta, AnyTO.class.cast(output), result);\n                         }\n \n                         resultStatus = Result.SUCCESS;\n+\n                         LOG.debug(\"{} {} successfully updated\", provision.getAnyType().getKey(), key);\n-                    } catch (IgnoreProvisionException e) {\n-                        throw e;\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a pull failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\",\n                                 provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-\n-                        for (PullActions action : profile.getActions()) {\n-                            action.onError(this.getProfile(), delta, result, e);\n-                        }\n                     } catch (Exception e) {\n+                        throwIgnoreProvisionException(delta, e);\n+\n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not update {} {}\",\n                                 provision.getAnyType().getKey(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-\n-                        for (PullActions action : profile.getActions()) {\n-                            action.onError(this.getProfile(), delta, result, e);\n-                        }\n                     }\n                 }\n-                audit(unlink ? MatchingRule.toEventName(MatchingRule.UNLINK)\n+                finalize(unlink ? MatchingRule.toEventName(MatchingRule.UNLINK)\n                         : MatchingRule.toEventName(MatchingRule.LINK), resultStatus, before, output, delta);\n             }\n             updResults.add(result);\n@@ -581,7 +602,7 @@ protected List<ProvisioningReport> delete(\n \n                 if (!profile.isDryRun()) {\n                     for (PullActions action : profile.getActions()) {\n-                        workingDelta = action.beforeDelete(this.getProfile(), workingDelta, before);\n+                        workingDelta = action.beforeDelete(profile, workingDelta, before);\n                     }\n \n                     try {\n@@ -590,22 +611,18 @@ protected List<ProvisioningReport> delete(\n                         resultStatus = Result.SUCCESS;\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(this.getProfile(), workingDelta, before, result);\n+                            action.after(profile, workingDelta, before, result);\n                         }\n-                    } catch (IgnoreProvisionException e) {\n-                        throw e;\n                     } catch (Exception e) {\n+                        throwIgnoreProvisionException(delta, e);\n+\n                         result.setStatus(ProvisioningReport.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not delete {} {}\", provision.getAnyType().getKey(), key, e);\n                         output = e;\n-\n-                        for (PullActions action : profile.getActions()) {\n-                            action.onError(this.getProfile(), workingDelta, result, e);\n-                        }\n                     }\n \n-                    audit(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, workingDelta);\n+                    finalize(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, workingDelta);\n                 }\n \n                 delResults.add(result);\n@@ -621,7 +638,7 @@ protected List<ProvisioningReport> delete(\n         return delResults;\n     }\n \n-    private List<ProvisioningReport> ignore(\n+    protected List<ProvisioningReport> ignore(\n             final SyncDelta delta,\n             final Provision provision,\n             final boolean matching)\n@@ -640,7 +657,7 @@ private List<ProvisioningReport> ignore(\n         ignoreResults.add(result);\n \n         if (!profile.isDryRun()) {\n-            audit(matching\n+            finalize(matching\n                     ? MatchingRule.toEventName(MatchingRule.IGNORE)\n                     : UnmatchingRule.toEventName(UnmatchingRule.IGNORE), Result.SUCCESS, null, null, delta);\n         }\n@@ -769,12 +786,16 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n         }\n     }\n \n-    private void audit(\n+    protected void finalize(\n             final String event,\n             final Result result,\n             final Object before,\n             final Object output,\n-            final Object... input) {\n+            final SyncDelta delta) {\n+\n+        synchronized (this) {\n+            this.latestResult = result;\n+        }\n \n         notificationManager.createTasks(AuditElements.EventCategoryType.PULL,\n                 getAnyUtils().getAnyTypeKind().name().toLowerCase(),\n@@ -783,7 +804,7 @@ private void audit(\n                 result,\n                 before,\n                 output,\n-                input);\n+                delta);\n \n         auditManager.audit(AuditElements.EventCategoryType.PULL,\n                 getAnyUtils().getAnyTypeKind().name().toLowerCase(),\n@@ -792,6 +813,6 @@ private void audit(\n                 result,\n                 before,\n                 output,\n-                input);\n+                delta);\n     }\n }"},{"sha":"a1d58789e660614768a336eba759650e4c206847","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultPullActions.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n@@ -101,19 +102,22 @@ public <A extends AnyTO> SyncDelta beforeUnlink(\n         return delta;\n     }\n \n-    @Override\n-    public void onError(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final ProvisioningReport result,\n-            final Exception error) throws JobExecutionException {\n-    }\n-\n     @Override\n     public <A extends AnyTO> void after(\n             final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final A any,\n             final ProvisioningReport result)\n             throws JobExecutionException {\n     }\n \n+    @Override\n+    public IgnoreProvisionException onError(\n+            final ProvisioningProfile<?, ?> profile,\n+            final SyncDelta delta,\n+            final Exception e) throws JobExecutionException {\n+\n+        return null;\n+    }\n+\n     @Override\n     public void afterAll(final ProvisioningProfile<?, ?> profile)\n             throws JobExecutionException {"},{"sha":"4c1b3cbb07171cb8194a3267a48c30d669d5b51d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":23,"deletions":8,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n@@ -40,8 +41,6 @@\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n-import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n-import org.identityconnectors.framework.common.objects.SyncToken;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n@@ -50,9 +49,13 @@\n import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.apache.syncope.core.provisioning.api.pushpull.GroupPullResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.UserPullResultHandler;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.identityconnectors.framework.common.objects.SyncToken;\n \n-public class PullJobDelegate extends AbstractProvisioningJobDelegate<PullTask> {\n+public class PullJobDelegate extends AbstractProvisioningJobDelegate<PullTask> implements SyncopePullExecutor {\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -64,7 +67,14 @@ public class PullJobDelegate extends AbstractProvisioningJobDelegate<PullTask> {\n     private VirSchemaDAO virSchemaDAO;\n \n     @Autowired\n-    protected PullUtils pullUtils;\n+    private PullUtils pullUtils;\n+\n+    private final Map<ObjectClass, SyncToken> latestSyncTokens = new HashMap<>();\n+\n+    @Override\n+    public void setLatestSyncToken(final ObjectClass objectClass, final SyncToken latestSyncToken) {\n+        latestSyncTokens.put(objectClass, latestSyncToken);\n+    }\n \n     protected void setGroupOwners(final GroupPullResultHandler ghandler) {\n         for (Map.Entry<String, String> entry : ghandler.getGroupOwnerMap().entrySet()) {\n@@ -132,17 +142,22 @@ protected String doExecuteProvisioning(\n         AnyObjectPullResultHandler ahandler = (AnyObjectPullResultHandler) ApplicationContextProvider.getBeanFactory().\n                 createBean(AnyObjectPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         ahandler.setProfile(profile);\n+        ahandler.setPullExecutor(this);\n \n         // Prepare handler for SyncDelta objects (users)\n         UserPullResultHandler uhandler = (UserPullResultHandler) ApplicationContextProvider.getBeanFactory().\n                 createBean(UserPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         uhandler.setProfile(profile);\n+        uhandler.setPullExecutor(this);\n \n         // Prepare handler for SyncDelta objects (groups)\n         GroupPullResultHandler ghandler = (GroupPullResultHandler) ApplicationContextProvider.getBeanFactory().\n                 createBean(GroupPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         ghandler.setProfile(profile);\n+        ghandler.setPullExecutor(this);\n \n+        latestSyncTokens.clear();\n+        \n         if (!profile.isDryRun()) {\n             for (PullActions action : actions) {\n                 action.beforeAll(profile);\n@@ -151,7 +166,7 @@ protected String doExecuteProvisioning(\n \n         for (Provision provision : pullTask.getResource().getProvisions()) {\n             if (provision.getMapping() != null) {\n-                SyncResultsHandler handler;\n+                SyncopePullResultHandler handler;\n                 switch (provision.getAnyType().getKind()) {\n                     case USER:\n                         handler = uhandler;\n@@ -177,13 +192,13 @@ protected String doExecuteProvisioning(\n \n                     switch (pullTask.getPullMode()) {\n                         case INCREMENTAL:\n-                            SyncToken latestSyncToken = connector.getLatestSyncToken(provision.getObjectClass());\n-                            connector.sync(provision.getObjectClass(),\n+                            connector.sync(\n+                                    provision.getObjectClass(),\n                                     provision.getSyncToken(),\n                                     handler,\n                                     MappingManagerImpl.buildOperationOptions(mapItems));\n                             if (!dryRun) {\n-                                provision.setSyncToken(latestSyncToken);\n+                                provision.setSyncToken(latestSyncTokens.get(provision.getObjectClass()));\n                                 resourceDAO.save(provision.getResource());\n                             }\n                             break;"},{"sha":"2bfba5a1e0d5567d92d197a35bf09c6661e6c703","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceServiceImpl.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -77,6 +77,16 @@ public void update(final ResourceTO resourceTO) {\n         logic.update(resourceTO);\n     }\n \n+    @Override\n+    public void setLatestSyncToken(final String key, final String anyTypeKey) {\n+        logic.setLatestSyncToken(key, anyTypeKey);\n+    }\n+\n+    @Override\n+    public void removeSyncToken(final String key, final String anyTypeKey) {\n+        logic.removeSyncToken(key, anyTypeKey);\n+    }\n+\n     @Override\n     public void delete(final String key) {\n         logic.delete(key);"},{"sha":"df929da1038dd251031309f12a48699fce0d1c54","filename":"fit/build-tools/src/main/resources/testdb.sql","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -24,7 +24,6 @@ status VARCHAR(5));\n \n INSERT INTO test VALUES ('testuser1', 'password', 'false');\n \n--- this table must be created in order to provide a specific test for issueSYNCOPE68\n DROP TABLE test2 IF EXISTS;\n CREATE TABLE test2 (\n id VARCHAR(50) PRIMARY KEY,\n@@ -35,15 +34,13 @@ INSERT INTO test2 VALUES ('testuser2', 'password321', 'false');\n INSERT INTO test2 VALUES ('rossini', 'password321', 'true');\n INSERT INTO test2 VALUES ('verdi', 'password321', 'true');\n \n--- this table is for issueSYNCOPE230\n DROP TABLE testpull IF EXISTS;\n CREATE TABLE testpull (\n id CHAR(36) PRIMARY KEY,\n username VARCHAR(80),\n surname VARCHAR(80),\n-email VARCHAR(80));\n-\n-INSERT INTO testpull VALUES ('a54b3794-b231-47be-b24a-11e1a42949f6', 'issuesyncope230', 'Surname', 'syncope230@syncope.apache.org');\n+email VARCHAR(80),\n+lastModification TIMESTAMP);\n \n DROP TABLE testPRINTER IF EXISTS;\n CREATE TABLE testPRINTER ("},{"sha":"2a7cf78961bdf80a50637a1201875804b6dcfa8b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":98,"deletions":13,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -61,12 +61,14 @@\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n+import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.core.spring.security.Encryptor;\n import org.apache.syncope.core.provisioning.java.pushpull.DBPasswordPullActions;\n@@ -208,8 +210,8 @@ public void pull() throws Exception {\n             assertEquals(1, IterableUtils.countMatches(userTO.getDerAttrs(), new Predicate<AttrTO>() {\n \n                 @Override\n-                public boolean evaluate(final AttrTO attributeTO) {\n-                    return \"csvuserid\".equals(attributeTO.getSchema());\n+                public boolean evaluate(final AttrTO attrTO) {\n+                    return \"csvuserid\".equals(attrTO.getSchema());\n                 }\n             }));\n \n@@ -271,7 +273,6 @@ public void reconcileFromDB() {\n         try {\n             ExecTO execution = execProvisioningTask(\n                     taskService, \"83f7e85d-9774-43fe-adba-ccd856312994\", 50, false);\n-            assertNotNull(execution.getStatus());\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n             userTO = userService.read(\"testuser1\");\n@@ -285,7 +286,6 @@ public void reconcileFromDB() {\n             // re-execute the same PullTask: now user must be active\n             execution = execProvisioningTask(\n                     taskService, \"83f7e85d-9774-43fe-adba-ccd856312994\", 50, false);\n-            assertNotNull(execution.getStatus());\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n             userTO = userService.read(\"testuser1\");\n@@ -339,8 +339,7 @@ public void reconcileFromLDAP() {\n         ldapCleanup();\n \n         // 0. pull\n-        ExecTO execution = execProvisioningTask(\n-                taskService, \"1e419ca4-ea81-4493-a14f-28b90113686d\", 50, false);\n+        ExecTO execution = execProvisioningTask(taskService, \"1e419ca4-ea81-4493-a14f-28b90113686d\", 50, false);\n \n         // 1. verify execution status\n         assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n@@ -396,8 +395,6 @@ public void reconcileFromScriptedSQL() {\n         ProvisionTO provision = resource.getProvision(\"PRINTER\");\n         assertNotNull(provision);\n \n-        provision.setSyncToken(null);\n-\n         MappingItemTO mappingItem = IterableUtils.find(\n                 provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n \n@@ -412,6 +409,7 @@ public boolean evaluate(final MappingItemTO object) {\n \n         try {\n             resourceService.update(resource);\n+            resourceService.removeSyncToken(resource.getKey(), provision.getAnyType());\n \n             // 1. create printer on external resource\n             AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"pull\");\n@@ -475,9 +473,9 @@ public void filteredReconciliation() {\n         try {\n             // 1. create 2 users on testpull\n             jdbcTemplate.execute(\"INSERT INTO testpull VALUES (\"\n-                    + \"'\" + user1OnTestPull + \"', 'user1', 'Doe', 'mail1@apache.org')\");\n+                    + \"'\" + user1OnTestPull + \"', 'user1', 'Doe', 'mail1@apache.org', NULL)\");\n             jdbcTemplate.execute(\"INSERT INTO testpull VALUES (\"\n-                    + \"'\" + user2OnTestPull + \"', 'user2', 'Rossi', 'mail2@apache.org')\");\n+                    + \"'\" + user2OnTestPull + \"', 'user2', 'Rossi', 'mail2@apache.org', NULL)\");\n \n             // 2. create new pull task for test-db, with reconciliation filter (surname 'Rossi') \n             task = taskService.read(\"7c2242f4-14af-4ab5-af31-cdae23783655\", true);\n@@ -492,7 +490,6 @@ public void filteredReconciliation() {\n \n             // 3. exec task\n             ExecTO execution = execProvisioningTask(taskService, task.getKey(), 50, false);\n-            assertNotNull(execution.getStatus());\n             assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n             // 4. verify that only enabled user was pulled\n@@ -517,6 +514,89 @@ public void filteredReconciliation() {\n         }\n     }\n \n+    @Test\n+    public void syncTokenWithErrors() {\n+        ResourceTO origResource = resourceService.read(RESOURCE_NAME_DBPULL);\n+        ConnInstanceTO origConnector = connectorService.read(origResource.getConnector(), null);\n+\n+        ResourceTO resForTest = SerializationUtils.clone(origResource);\n+        resForTest.setKey(\"syncTokenWithErrors\");\n+        resForTest.setConnector(null);\n+        ConnInstanceTO connForTest = SerializationUtils.clone(origConnector);\n+        connForTest.setKey(null);\n+        connForTest.setDisplayName(\"For syncTokenWithErrors\");\n+\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        try {\n+            connForTest.getCapabilities().add(ConnectorCapability.SYNC);\n+\n+            ConnConfProperty changeLogColumn = connForTest.getConfMap().get(\"changeLogColumn\");\n+            assertNotNull(changeLogColumn);\n+            assertTrue(changeLogColumn.getValues().isEmpty());\n+            changeLogColumn.getValues().add(\"lastModification\");\n+\n+            Response response = connectorService.create(connForTest);\n+            if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n+                throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n+            }\n+            connForTest = getObject(response.getLocation(), ConnectorService.class, ConnInstanceTO.class);\n+            assertNotNull(connForTest);\n+\n+            resForTest.setConnector(connForTest.getKey());\n+            resForTest = createResource(resForTest);\n+            assertNotNull(resForTest);\n+\n+            PullTaskTO pullTask = new PullTaskTO();\n+            pullTask.setActive(true);\n+            pullTask.setName(\"For syncTokenWithErrors\");\n+            pullTask.setResource(resForTest.getKey());\n+            pullTask.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n+            pullTask.setPullMode(PullMode.INCREMENTAL);\n+            pullTask.setPerformCreate(true);\n+            pullTask.setPerformUpdate(true);\n+            pullTask.setPerformDelete(true);\n+\n+            response = taskService.create(pullTask);\n+            if (response.getStatusInfo().getStatusCode() != Response.Status.CREATED.getStatusCode()) {\n+                throw (RuntimeException) clientFactory.getExceptionMapper().fromResponse(response);\n+            }\n+            pullTask = getObject(response.getLocation(), TaskService.class, PullTaskTO.class);\n+            assertNotNull(pullTask);\n+\n+            jdbcTemplate.execute(\"DELETE FROM testpull\");\n+            jdbcTemplate.execute(\"INSERT INTO testpull VALUES \"\n+                    + \"(1040, 'syncTokenWithErrors1', 'Surname1', \"\n+                    + \"'syncTokenWithErrors1@syncope.apache.org', '2014-05-23 13:53:24.293')\");\n+            jdbcTemplate.execute(\"INSERT INTO testpull VALUES \"\n+                    + \"(1041, 'syncTokenWithErrors2', 'Surname2', \"\n+                    + \"'syncTokenWithErrors1@syncope.apache.org', '2015-05-23 13:53:24.293')\");\n+\n+            ExecTO exec = execProvisioningTask(taskService, pullTask.getKey(), 50, false);\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(exec.getStatus()));\n+\n+            resForTest = resourceService.read(resForTest.getKey());\n+            assertTrue(resForTest.getProvision(AnyTypeKind.USER.name()).getSyncToken().contains(\"2014-05-23\"));\n+\n+            jdbcTemplate.execute(\"UPDATE testpull \"\n+                    + \"SET email='syncTokenWithErrors2@syncope.apache.org', lastModification='2016-05-23 13:53:24.293' \"\n+                    + \"WHERE ID=1041\");\n+\n+            exec = execProvisioningTask(taskService, pullTask.getKey(), 50, false);\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(exec.getStatus()));\n+\n+            resForTest = resourceService.read(resForTest.getKey());\n+            assertTrue(resForTest.getProvision(AnyTypeKind.USER.name()).getSyncToken().contains(\"2016-05-23\"));\n+        } finally {\n+            if (resForTest.getConnector() != null) {\n+                resourceService.delete(resForTest.getKey());\n+                connectorService.delete(connForTest.getKey());\n+            }\n+\n+            jdbcTemplate.execute(\"DELETE FROM testpull WHERE ID=1040\");\n+            jdbcTemplate.execute(\"DELETE FROM testpull WHERE ID=1041\");\n+        }\n+    }\n+\n     @Test\n     public void issueSYNCOPE68() {\n         //-----------------------------\n@@ -588,7 +668,13 @@ public void issueSYNCOPE68() {\n \n     @Test\n     public void issueSYNCOPE230() {\n-        // 1. read PullTask for resource-db-pull (table TESTPULL on external H2)\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+\n+        // 1. populate the external table\n+        jdbcTemplate.execute(\"INSERT INTO testpull VALUES\"\n+                + \"('a54b3794-b231-47be-b24a-11e1a42949f6', 'issuesyncope230', 'Surname', 'syncope230@syncope.apache.org', NULL)\");\n+\n+        // 2. execute PullTask for resource-db-pull (table TESTPULL on external H2)\n         execProvisioningTask(taskService, \"7c2242f4-14af-4ab5-af31-cdae23783655\", 50, false);\n \n         // 3. read e-mail address for user created by the PullTask first execution\n@@ -598,7 +684,6 @@ public void issueSYNCOPE230() {\n         assertNotNull(email);\n \n         // 4. update TESTPULL on external H2 by changing e-mail address\n-        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n         jdbcTemplate.execute(\"UPDATE TESTPULL SET email='updatedSYNCOPE230@syncope.apache.org'\");\n \n         // 5. re-execute the PullTask"},{"sha":"ffd2a4f308385714d4949174e396266b4cad68a0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ResourceITCase.java","status":"modified","additions":33,"deletions":13,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a0a6ffb3dae2cae57679f278d965be0d65d0e30/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java?ref=6a0a6ffb3dae2cae57679f278d965be0d65d0e30","patch":"@@ -36,6 +36,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -409,19 +410,38 @@ public void deleteWithException() {\n     }\n \n     @Test\n-    public void updateResetSyncToken() {\n-        // create resource with sync token\n-        String resourceName = RESOURCE_NAME_RESETSYNCTOKEN + getUUIDString();\n-        ResourceTO pre = buildResourceTO(resourceName);\n-\n-        pre.getProvision(AnyTypeKind.USER.name()).setSyncToken(\"test\");\n-        resourceService.create(pre);\n-\n-        pre.getProvision(AnyTypeKind.USER.name()).setSyncToken(null);\n-        resourceService.update(pre);\n-        ResourceTO actual = resourceService.read(pre.getKey());\n-        // check that the synctoken has been reset\n-        assertNull(actual.getProvision(AnyTypeKind.USER.name()).getSyncToken());\n+    public void syncToken() {\n+        ResourceTO resource = resourceService.read(RESOURCE_NAME_DBSCRIPTED);\n+        resource.setKey(resource.getKey() + getUUIDString());\n+\n+        AnyObjectTO anyObject = AnyObjectITCase.getSampleTO(\"syncToken\");\n+        anyObject.getResources().clear();\n+        anyObject.getResources().add(resource.getKey());\n+        try {\n+            // create a new resource\n+            resource = createResource(resource);\n+            assertNull(resource.getProvision(\"PRINTER\").getSyncToken());\n+\n+            // create some object on the new resource\n+            anyObject = createAnyObject(anyObject).getAny();\n+\n+            // update sync token\n+            resourceService.setLatestSyncToken(resource.getKey(), \"PRINTER\");\n+\n+            resource = resourceService.read(resource.getKey());\n+            assertNotNull(resource.getProvision(\"PRINTER\").getSyncToken());\n+\n+            // remove sync token\n+            resourceService.removeSyncToken(resource.getKey(), \"PRINTER\");\n+\n+            resource = resourceService.read(resource.getKey());\n+            assertNull(resource.getProvision(\"PRINTER\").getSyncToken());\n+        } finally {\n+            if (anyObject.getKey() != null) {\n+                anyObjectService.delete(anyObject.getKey());\n+            }\n+            resourceService.delete(resource.getKey());\n+        }\n     }\n \n     @Test"}]}