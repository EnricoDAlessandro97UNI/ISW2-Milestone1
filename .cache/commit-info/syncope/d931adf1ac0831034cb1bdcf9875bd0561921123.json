{"sha":"d931adf1ac0831034cb1bdcf9875bd0561921123","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ5MzFhZGYxYWMwODMxMDM0Y2IxYmRjZjk4NzViZDA1NjE5MjExMjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-19T09:05:44Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-19T09:05:44Z"},"message":"Non-functional change: this class is not in default test classpath, so it wasn't catched in last java-formatter:format run\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1302331 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"71ebd3460166508927523108b3d07a6ca3709fc7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/71ebd3460166508927523108b3d07a6ca3709fc7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d931adf1ac0831034cb1bdcf9875bd0561921123","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d931adf1ac0831034cb1bdcf9875bd0561921123","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d931adf1ac0831034cb1bdcf9875bd0561921123","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d931adf1ac0831034cb1bdcf9875bd0561921123/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"976dde24a8f1f5ff50ed2f2b30a1ad41dbaa54e3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/976dde24a8f1f5ff50ed2f2b30a1ad41dbaa54e3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/976dde24a8f1f5ff50ed2f2b30a1ad41dbaa54e3"}],"stats":{"total":28,"additions":9,"deletions":19},"files":[{"sha":"1a84bad875516c368a83ef060f87a2578b655fe4","filename":"core/src/test/notifications/java/org/syncope/core/notification/NotificationTest.java","status":"modified","additions":9,"deletions":19,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d931adf1ac0831034cb1bdcf9875bd0561921123/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d931adf1ac0831034cb1bdcf9875bd0561921123/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fnotifications%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=d931adf1ac0831034cb1bdcf9875bd0561921123","patch":"@@ -126,8 +126,7 @@ public static void loadProperties() {\n         Properties props = new Properties();\n \n         try {\n-            props.load(NotificationTest.class.getResourceAsStream(\n-                    \"/test.properties\"));\n+            props.load(NotificationTest.class.getResourceAsStream(\"/test.properties\"));\n         } catch (IOException e) {\n             LOG.error(\"Could not load properties\", e);\n             fail(\"Could not load test properties\");\n@@ -138,24 +137,19 @@ public static void loadProperties() {\n         mailAddress = props.getProperty(\"mail.address\");\n         mailPassword = props.getProperty(\"mail.password\");\n         if (StringUtils.isBlank(mailPassword)) {\n-            throw new IllegalArgumentException(\n-                    \"Empty POP3 password: did you pass -Dmail.password=XXXX?\");\n+            throw new IllegalArgumentException(\"Empty POP3 password: did you pass -Dmail.password=XXXX?\");\n         }\n     }\n \n     @Before\n     public void setupSecurity() {\n-        List<GrantedAuthority> authorities =\n-                new ArrayList<GrantedAuthority>();\n+        List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();\n         for (Entitlement entitlement : entitlementDAO.findAll()) {\n-            authorities.add(\n-                    new SimpleGrantedAuthority(entitlement.getName()));\n+            authorities.add(new SimpleGrantedAuthority(entitlement.getName()));\n         }\n \n-        UserDetails userDetails = new User(adminUser, \"FAKE_PASSWORD\",\n-                true, true, true, true, authorities);\n-        Authentication authentication = new TestingAuthenticationToken(\n-                userDetails, \"FAKE_PASSWORD\", authorities);\n+        UserDetails userDetails = new User(adminUser, \"FAKE_PASSWORD\", true, true, true, true, authorities);\n+        Authentication authentication = new TestingAuthenticationToken(userDetails, \"FAKE_PASSWORD\", authorities);\n         SecurityContextHolder.getContext().setAuthentication(authentication);\n     }\n \n@@ -223,8 +217,7 @@ private boolean verifyMail(final String sender, final String subject) {\n \n         boolean found = false;\n         try {\n-            Session session = Session.getDefaultInstance(\n-                    System.getProperties());\n+            Session session = Session.getDefaultInstance(System.getProperties());\n             Store store = session.getStore(\"pop3\");\n             store.connect(pop3Host, mailAddress, mailPassword);\n \n@@ -234,9 +227,7 @@ private boolean verifyMail(final String sender, final String subject) {\n \n             Message[] messages = inbox.getMessages();\n             for (int i = 0; i < messages.length; i++) {\n-                if (sender.equals(messages[i].getFrom()[0].toString())\n-                        && subject.equals(messages[i].getSubject())) {\n-\n+                if (sender.equals(messages[i].getFrom()[0].toString()) && subject.equals(messages[i].getSubject())) {\n                     found = true;\n                     messages[i].setFlag(Flag.DELETED, true);\n                 }\n@@ -267,8 +258,7 @@ public void notifyByMail() {\n         notification.setSelfAsRecipient(true);\n \n         Random random = new Random(System.currentTimeMillis());\n-        String sender = \"syncopetest-\" + String.valueOf(random.nextLong())\n-                + \"@syncope-idm.org\";\n+        String sender = \"syncopetest-\" + random.nextLong() + \"@syncope-idm.org\";\n         notification.setSender(sender);\n         String subject = \"Test notification \" + random.nextLong();\n         notification.setSubject(subject);"}]}