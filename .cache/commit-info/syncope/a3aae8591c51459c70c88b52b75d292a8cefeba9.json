{"sha":"a3aae8591c51459c70c88b52b75d292a8cefeba9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEzYWFlODU5MWM1MTQ1OWM3MGM4OGI1MmI3NWQyOTJhOGNlZmViYTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-16T07:43:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-16T07:43:39Z"},"message":"[SYNCOPE-1392] Small reflection avoidance","tree":{"sha":"7fc61e0c2b01395b4d7660bddf19d44e9d4569ae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7fc61e0c2b01395b4d7660bddf19d44e9d4569ae"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a3aae8591c51459c70c88b52b75d292a8cefeba9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a3aae8591c51459c70c88b52b75d292a8cefeba9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a3aae8591c51459c70c88b52b75d292a8cefeba9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a3aae8591c51459c70c88b52b75d292a8cefeba9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7cf7ec1ae7f1e4129b7d1ae481a9e4376e6d1936","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cf7ec1ae7f1e4129b7d1ae481a9e4376e6d1936","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7cf7ec1ae7f1e4129b7d1ae481a9e4376e6d1936"}],"stats":{"total":22,"additions":5,"deletions":17},"files":[{"sha":"43800e2a6b7a2793ff3c072eb4190aceb4c083a2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnySearchDAO.java","status":"modified","additions":5,"deletions":15,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a3aae8591c51459c70c88b52b75d292a8cefeba9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a3aae8591c51459c70c88b52b75d292a8cefeba9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java?ref=a3aae8591c51459c70c88b52b75d292a8cefeba9","patch":"@@ -20,7 +20,6 @@\n \n import java.lang.annotation.Annotation;\n import java.lang.reflect.Field;\n-import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -30,7 +29,6 @@\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n import org.apache.commons.lang3.ArrayUtils;\n-import org.apache.commons.lang3.ClassUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -55,7 +53,6 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n-import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n@@ -71,6 +68,8 @@ public abstract class AbstractAnySearchDAO extends AbstractDAO<Any<?>> implement\n         \"serialVersionUID\", \"password\", \"securityQuestion\", \"securityAnswer\", \"token\", \"tokenExpireTime\"\n     };\n \n+    protected static final String[] RELATIONSHIP_FIELDS = new String[] { \"realm\", \"userOwner\", \"groupOwner\" };\n+\n     @Autowired\n     protected RealmDAO realmDAO;\n \n@@ -214,18 +213,9 @@ protected Triple<PlainSchema, PlainAttrValue, AnyCond> check(final AnyCond cond,\n         }\n \n         // Deal with any fields representing relationships to other entities\n-        if (Entity.class.isAssignableFrom(anyField.getType())) {\n-            Method relMethod = null;\n-            try {\n-                relMethod = ClassUtils.getPublicMethod(anyField.getType(), \"getKey\", new Class<?>[0]);\n-            } catch (Exception e) {\n-                LOG.error(\"Could not find {}#getKey\", anyField.getType(), e);\n-            }\n-\n-            if (relMethod != null && String.class.isAssignableFrom(relMethod.getReturnType())) {\n-                computed.setSchema(computed.getSchema() + \"_id\");\n-                schema.setType(AttrSchemaType.String);\n-            }\n+        if (ArrayUtils.contains(RELATIONSHIP_FIELDS, computed.getSchema())) {\n+            computed.setSchema(computed.getSchema() + \"_id\");\n+            schema.setType(AttrSchemaType.String);\n         }\n \n         PlainAttrValue attrValue = anyUtils.newPlainAttrValue();"},{"sha":"02e2535cf7fcb89f51837cebc5ee4e1244d59489","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a3aae8591c51459c70c88b52b75d292a8cefeba9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a3aae8591c51459c70c88b52b75d292a8cefeba9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=a3aae8591c51459c70c88b52b75d292a8cefeba9","patch":"@@ -65,8 +65,6 @@ public class JPAAnySearchDAO extends AbstractAnySearchDAO {\n \n     protected static final String EMPTY_QUERY = \"SELECT any_id FROM user_search WHERE 1=2\";\n \n-    protected static final String[] RELATIONSHIP_FIELDS = new String[] { \"realm\", \"userOwner\", \"groupOwner\" };\n-\n     private Pair<String, Set<String>> getAdminRealmsFilter(\n             final Set<String> adminRealms,\n             final SearchSupport svs,"}]}