{"sha":"4939b627e0b145af811937248eb9407132d625ad","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ5MzliNjI3ZTBiMTQ1YWY4MTE5MzcyNDhlYjk0MDcxMzJkNjI1YWQ=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-14T15:48:22Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-14T15:48:22Z"},"message":"Extended password policy evaluation to the policies defined on resources and roles\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247140 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1c5ccde0e7dd32cc7c82fb5876398dd4ffb707c1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1c5ccde0e7dd32cc7c82fb5876398dd4ffb707c1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4939b627e0b145af811937248eb9407132d625ad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4939b627e0b145af811937248eb9407132d625ad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4939b627e0b145af811937248eb9407132d625ad","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4939b627e0b145af811937248eb9407132d625ad/comments","author":null,"committer":null,"parents":[{"sha":"baf22db698f0308c1d4f14352326014b85564eef","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/baf22db698f0308c1d4f14352326014b85564eef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/baf22db698f0308c1d4f14352326014b85564eef"}],"stats":{"total":144,"additions":104,"deletions":40},"files":[{"sha":"2dca3eefcd98f269802681d5dea98f18b924caa9","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttributableValidator.java","status":"modified","additions":57,"deletions":24,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4939b627e0b145af811937248eb9407132d625ad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4939b627e0b145af811937248eb9407132d625ad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java?ref=4939b627e0b145af811937248eb9407132d625ad","patch":"@@ -14,11 +14,15 @@\n  */\n package org.syncope.core.persistence.validation.entity;\n \n+import java.util.ArrayList;\n+import java.util.List;\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.Policy;\n+import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.PolicyDAO;\n import org.syncope.core.policy.PasswordPolicyEnforcer;\n@@ -56,44 +60,73 @@ public boolean isValid(\n             // ------------------------------\n             LOG.debug(\"Password Policy enforcement\");\n \n-            final Policy policy = policyDAO.getGlobalPasswordPolicy();\n+            LOG.error(\"AAAA\");\n+            final List<Policy> policies =\n+                    getPasswordPolicies((SyncopeUser) object);\n \n-            if (policy != null) {\n-                // evaluate policy\n-                PasswordPolicy passwordPolicy =\n-                        evaluator.evaluate(policy, object);\n-\n-                try {\n-                    // clear password will exist just during creation or\n-                    // during password update\n+            try {\n+                for (Policy policy : policies) {\n+                    // clearPassword must exist during creation/password update\n                     final String password =\n                             ((SyncopeUser) object).getClearPassword();\n \n+                    // evaluate/enforce only during creation or password update\n                     if (password != null) {\n-                        // enforcement will be performed only during creation\n-                        // or during password update\n+                        // evaluate policy\n+                        final PasswordPolicy passwordPolicy =\n+                                evaluator.evaluate(policy, object);\n+\n+                        // enforce policy\n                         enforcer.enforce(\n                                 passwordPolicy, policy.getType(), password);\n-\n-                        // password has been validated, let's remove its\n-                        // clear version\n-                        ((SyncopeUser) object).removeClearPassword();\n                     }\n-                } catch (Exception e) {\n-                    LOG.debug(\"Invalid password\");\n-\n-                    context.buildConstraintViolationWithTemplate(\n-                            e.getMessage()).addNode(\n-                            EntityViolationType.InvalidPassword.toString()).\n-                            addConstraintViolation();\n-                    isValid = false;\n                 }\n+            } catch (Exception e) {\n+                LOG.debug(\"Invalid password\");\n+\n+                context.buildConstraintViolationWithTemplate(\n+                        e.getMessage()).addNode(\n+                        EntityViolationType.InvalidPassword.toString()).\n+                        addConstraintViolation();\n+                isValid = false;\n+            } finally {\n+                // password has been validated, let's remove its\n+                // clear version\n+                ((SyncopeUser) object).removeClearPassword();\n             }\n             // ------------------------------\n         }\n \n         // Let's verify other policies ....\n-\n         return isValid;\n     }\n+\n+    private List<Policy> getPasswordPolicies(final SyncopeUser user) {\n+        final List<Policy> policies = new ArrayList<Policy>();\n+\n+        // Add global policy\n+        Policy policy = policyDAO.getGlobalPasswordPolicy();\n+\n+        if (policy != null) {\n+            policies.add(policy);\n+        }\n+\n+        // add resource policies\n+        for (TargetResource resource : user.getTargetResources()) {\n+            policy = resource.getPasswordPolicy();\n+            if (policy != null) {\n+                policies.add(policy);\n+            }\n+        }\n+\n+        // add role policies\n+        for (SyncopeRole role : user.getRoles()) {\n+            policy = role.getPasswordPolicy();\n+            if (policy != null) {\n+                policies.add(policy);\n+            }\n+        }\n+\n+        return policies;\n+    }\n }"},{"sha":"01f07226accd8f6bd4f2aff0f65f4ae3a27462d4","filename":"core/src/main/java/org/syncope/core/policy/PolicyEvaluator.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4939b627e0b145af811937248eb9407132d625ad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4939b627e0b145af811937248eb9407132d625ad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpolicy%2FPolicyEvaluator.java?ref=4939b627e0b145af811937248eb9407132d625ad","patch":"@@ -42,6 +42,7 @@ public <T extends AbstractPolicy> T evaluate(\n \n         if (policy != null) {\n             switch (policy.getType()) {\n+                case PASSWORD:\n                 case GLOBAL_PASSWORD:\n                     final PasswordPolicy spec = policy.getSpecification();\n                     final PasswordPolicy passwordPolicy = new PasswordPolicy();\n@@ -92,13 +93,10 @@ public <T extends AbstractPolicy> T evaluate(\n \n                     result = (T) passwordPolicy;\n                     break;\n-                case PASSWORD:\n-                    break;\n+                case ACCOUNT:\n                 case GLOBAL_ACCOUNT:\n                     result = null;\n                     break;\n-                case ACCOUNT:\n-                    break;\n                 case SYNC:\n                     break;\n                 default:"},{"sha":"8a2d00a3c9804d8d9f3159080e78434fd42425bc","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":36,"deletions":4,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4939b627e0b145af811937248eb9407132d625ad/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4939b627e0b145af811937248eb9407132d625ad/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=4939b627e0b145af811937248eb9407132d625ad","patch":"@@ -50,7 +50,7 @@ public class UserTestITCase extends AbstractTest {\n \n     public static UserTO getSampleTO(final String email) {\n         UserTO userTO = new UserTO();\n-        userTO.setPassword(\"password\");\n+        userTO.setPassword(\"password123\");\n \n         AttributeTO usernameTO = new AttributeTO();\n         usernameTO.setSchema(\"username\");\n@@ -143,7 +143,7 @@ public final void createUserWithNoPropagation() {\n         attributeTO.addValue(\"xxx\");\n         userTO.addAttribute(attributeTO);\n \n-        userTO.setPassword(\"password\");\n+        userTO.setPassword(\"password123\");\n         userTO.addResource(\"ws-target-resource-nopropagation\");\n \n         restTemplate.postForObject(BASE_URL + \"user/create\"\n@@ -268,6 +268,38 @@ public final void createWithInvalidPassword() {\n                 BASE_URL + \"user/create\", userTO, UserTO.class);\n     }\n \n+    @Test\n+    @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n+    public final void createWithInvalidPasswordByRes() {\n+        UserTO userTO = getSampleTO(\"invalidPwdByRes@passwd.com\");\n+\n+        // configured to be minLength=16\n+        userTO.setPassword(\"password1\");\n+\n+        userTO.setResources(\n+                Collections.singleton(\"ws-target-resource-nopropagation\"));\n+\n+        restTemplate.postForObject(\n+                BASE_URL + \"user/create\", userTO, UserTO.class);\n+    }\n+\n+    @Test\n+    @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n+    public final void createWithInvalidPasswordByRol() {\n+        UserTO userTO = getSampleTO(\"invalidPwdByRol@passwd.com\");\n+\n+        // configured to be minLength=16\n+        userTO.setPassword(\"password1\");\n+\n+        final MembershipTO membership = new MembershipTO();\n+        membership.setRoleId(8L);\n+\n+        userTO.addMembership(membership);\n+\n+        restTemplate.postForObject(\n+                BASE_URL + \"user/create\", userTO, UserTO.class);\n+    }\n+\n     @Test\n     @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n     public final void createWithException() {\n@@ -385,7 +417,7 @@ public final void create() {\n \n         // 3. verify password\n         Boolean verify = restTemplate.getForObject(\n-                BASE_URL + \"user/verifyPassword/{userId}?password=password\",\n+                BASE_URL + \"user/verifyPassword/{userId}?password=password123\",\n                 Boolean.class, newUserTO.getId());\n         assertTrue(verify);\n         verify = restTemplate.getForObject(\n@@ -738,7 +770,7 @@ public final void updateSamePassword() {\n \n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n-        userMod.setPassword(\"password\");\n+        userMod.setPassword(\"password123\");\n \n         restTemplate.postForObject(\n                 BASE_URL + \"user/update\", userMod, UserTO.class);"},{"sha":"70d5cf395651b38b1a53924152c5d36e50a95620","filename":"core/src/test/resources/content.xml","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4939b627e0b145af811937248eb9407132d625ad/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4939b627e0b145af811937248eb9407132d625ad/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=4939b627e0b145af811937248eb9407132d625ad","patch":"@@ -21,6 +21,13 @@\n     <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n     <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>\n     <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n+\n+    <!-- sample policies -->\n+    <Policy id=\"1\" description=\"sync policy 1\" type=\"SYNC\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.SyncPolicy%22/%3E%0A%3C/java%3E+%0A\"/>\n+    <Policy id=\"2\" description=\"global password policy\" type=\"GLOBAL_PASSWORD\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.PasswordPolicy%22%3E+%0A++%3Cvoid+property%3D%22historyLength%22%3E+%0A+++%3Cint%3E1%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22minLength%22%3E+%0A+++%3Cint%3E8%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22prefixesNotPermitted%22%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted1%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted2%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n+    <Policy id=\"3\" description=\"sync policy 2\" type=\"SYNC\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.SyncPolicy%22/%3E%0A%3C/java%3E+%0A\"/>\n+    <Policy id=\"4\" description=\"sample password policy\" type=\"PASSWORD\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.PasswordPolicy%22%3E+%0A++%3Cvoid+property%3D%22historyLength%22%3E+%0A+++%3Cint%3E0%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22minLength%22%3E+%0A+++%3Cint%3E10%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22prefixesNotPermitted%22%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted1%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted2%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n+\n                           \n     <SyncopeUser id=\"1\" workflowId=\"0\" status=\"active\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n     <SyncopeUser id=\"2\" workflowId=\"0\" status=\"active\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"/>\n@@ -34,7 +41,7 @@\n     <SyncopeRole id=\"5\" name=\"secretary\" parent_id=\"4\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\" inheritVirtualAttributes=\"0\"/>\n     <SyncopeRole id=\"6\" name=\"director\" parent_id=\"4\" inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"/>\n     <SyncopeRole id=\"7\" name=\"managingDirector\" parent_id=\"6\" inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"/>\n-    <SyncopeRole id=\"8\" name=\"otherchild\" parent_id=\"1\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\" inheritVirtualAttributes=\"1\"/>\n+    <SyncopeRole id=\"8\" name=\"otherchild\" parent_id=\"1\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\" inheritVirtualAttributes=\"1\" passwordPolicy_id=\"4\"/>\n \n     <Membership id=\"1\" syncopeUser_id=\"1\" syncopeRole_id=\"1\"/>\n     <Membership id=\"2\" syncopeUser_id=\"2\" syncopeRole_id=\"1\"/>\n@@ -233,7 +240,7 @@\n     <TargetResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n     <TargetResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n-                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n+                    createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" passwordPolicy_id=\"4\"/>\n     <TargetResource name=\"ws-target-resource-testdb\" connector_id=\"101\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"SYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n     <TargetResource name=\"resource-csv\" connector_id=\"104\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n@@ -384,12 +391,6 @@\n     <RDerAttr id=\"1001\" derivedSchema_name=\"displayProperty\" owner_id=\"1\"/>\n     <RDerAttr id=\"1002\" derivedSchema_name=\"displayProperty\" owner_id=\"4\"/>\n \n-    <!-- sample policies -->\n-    <Policy id=\"1\" description=\"sync policy 1\" type=\"SYNC\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.SyncPolicy%22/%3E%0A%3C/java%3E+%0A\"/>\n-    <Policy id=\"2\" description=\"global password policy\" type=\"GLOBAL_PASSWORD\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.PasswordPolicy%22%3E+%0A++%3Cvoid+property%3D%22historyLength%22%3E+%0A+++%3Cint%3E1%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22minLength%22%3E+%0A+++%3Cint%3E8%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22prefixesNotPermitted%22%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted1%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted2%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n-    <Policy id=\"3\" description=\"sync policy 2\" type=\"SYNC\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.SyncPolicy%22/%3E%0A%3C/java%3E+%0A\"/>\n-    <Policy id=\"4\" description=\"sample password policy\" type=\"PASSWORD\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.PasswordPolicy%22%3E+%0A++%3Cvoid+property%3D%22historyLength%22%3E+%0A+++%3Cint%3E1%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22minLength%22%3E+%0A+++%3Cint%3E8%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22prefixesNotPermitted%22%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted1%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted2%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n-\n     <!-- Authentication and authorization -->\n     <Entitlement name=\"base\"/>\n     <Entitlement name=\"advanced\" description=\"Advanced entitlement\"/>"}]}