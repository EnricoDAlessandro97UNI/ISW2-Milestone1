{"sha":"15ac9a5c72788335d4079ea5302fcaf7be8345bf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE1YWM5YTVjNzI3ODgzMzVkNDA3OWVhNTMwMmZjYWY3YmU4MzQ1YmY=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2014-10-29T17:06:26Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2014-10-29T17:06:26Z"},"message":"[SYNCOPE-597] SyncToken serialization","tree":{"sha":"8aef4bf588e90ab1c90f5f43c7e25e647cc07aea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8aef4bf588e90ab1c90f5f43c7e25e647cc07aea"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/15ac9a5c72788335d4079ea5302fcaf7be8345bf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/15ac9a5c72788335d4079ea5302fcaf7be8345bf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/15ac9a5c72788335d4079ea5302fcaf7be8345bf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/15ac9a5c72788335d4079ea5302fcaf7be8345bf/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"79ddbdc3aca57e2b53a75878d8be5943dea00d54","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/79ddbdc3aca57e2b53a75878d8be5943dea00d54","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/79ddbdc3aca57e2b53a75878d8be5943dea00d54"}],"stats":{"total":69,"additions":68,"deletions":1},"files":[{"sha":"15b4c05da7ba545299fd3ad676b62aae96d78a2d","filename":"core/src/main/java/org/apache/syncope/core/util/POJOHelper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/15ac9a5c72788335d4079ea5302fcaf7be8345bf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FPOJOHelper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/15ac9a5c72788335d4079ea5302fcaf7be8345bf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FPOJOHelper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FPOJOHelper.java?ref=15ac9a5c72788335d4079ea5302fcaf7be8345bf","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.util;\n \n-import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.core.Version;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.module.SimpleModule;\n@@ -42,6 +41,7 @@ public final class POJOHelper {\n         SimpleModule pojoModule = new SimpleModule(\"POJOModule\", new Version(1, 0, 0, null, null, null));\n         pojoModule.addSerializer(GuardedString.class, new GuardedStringSerializer());\n         pojoModule.addSerializer(Attribute.class, new AttributeSerializer());\n+        pojoModule.addSerializer(SyncToken.class, new SyncTokenSerializer());\n         pojoModule.addDeserializer(GuardedString.class, new GuardedStringDeserializer());\n         pojoModule.addDeserializer(Attribute.class, new AttributeDeserializer());\n         pojoModule.addDeserializer(SyncToken.class, new SyncTokenDeserializer());"},{"sha":"4e82401d2f360d4a1736ac56148991ee6c2639cd","filename":"core/src/main/java/org/apache/syncope/core/util/SyncTokenDeserializer.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/15ac9a5c72788335d4079ea5302fcaf7be8345bf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/15ac9a5c72788335d4079ea5302fcaf7be8345bf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenDeserializer.java?ref=15ac9a5c72788335d4079ea5302fcaf7be8345bf","patch":"@@ -26,6 +26,7 @@\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import java.io.IOException;\n import org.identityconnectors.framework.common.objects.SyncToken;\n+import org.springframework.security.crypto.codec.Base64;\n \n class SyncTokenDeserializer extends JsonDeserializer<SyncToken> {\n \n@@ -49,6 +50,13 @@ public SyncToken deserialize(final JsonParser jp, final DeserializationContext c\n                     : node.isInt()\n                     ? node.asInt()\n                     : node.asText();\n+            \n+            if (value instanceof String) {\n+                byte[] bytes = ((String)value).getBytes();\n+                if (Base64.isBase64(bytes)) {\n+                   value = Base64.decode(bytes);\n+                }\n+            }\n         }\n \n         return new SyncToken(value);"},{"sha":"48887661aefae55bcdd893699d56a5627555cc23","filename":"core/src/main/java/org/apache/syncope/core/util/SyncTokenSerializer.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/15ac9a5c72788335d4079ea5302fcaf7be8345bf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/15ac9a5c72788335d4079ea5302fcaf7be8345bf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSyncTokenSerializer.java?ref=15ac9a5c72788335d4079ea5302fcaf7be8345bf","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.util;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n+import java.io.IOException;\n+import org.apache.syncope.common.SyncopeConstants;\n+import org.identityconnectors.framework.common.objects.SyncToken;\n+import org.springframework.security.crypto.codec.Base64;\n+\n+class SyncTokenSerializer extends JsonSerializer<SyncToken> {\n+\n+    @Override\n+    public void serialize(final SyncToken source, final JsonGenerator jgen, final SerializerProvider sp)\n+            throws IOException, JsonProcessingException {\n+\n+        jgen.writeStartObject();\n+\n+        jgen.writeFieldName(\"value\");\n+\n+        if (source.getValue() == null) {\n+            jgen.writeNull();\n+        } else if (source.getValue() instanceof Boolean) {\n+            jgen.writeBoolean((Boolean) source.getValue());\n+        } else if (source.getValue() instanceof Double) {\n+            jgen.writeNumber((Double) source.getValue());\n+        } else if (source.getValue() instanceof Long) {\n+            jgen.writeNumber((Long) source.getValue());\n+        } else if (source.getValue() instanceof Integer) {\n+            jgen.writeNumber((Integer) source.getValue());\n+        } else if (source.getValue() instanceof byte[]) {\n+            jgen.writeString(new String(Base64.encode((byte[]) source.getValue()), SyncopeConstants.DEFAULT_ENCODING));\n+        } else {\n+            jgen.writeString(source.getValue().toString());\n+        }\n+\n+        jgen.writeEndObject();\n+    }\n+\n+}"}]}