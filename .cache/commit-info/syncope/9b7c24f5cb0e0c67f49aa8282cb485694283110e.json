{"sha":"9b7c24f5cb0e0c67f49aa8282cb485694283110e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjliN2MyNGY1Y2IwZTBjNjdmNDlhYTgyODJjYjQ4NTY5NDI4MzExMGU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-09T00:09:29Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-09T00:09:29Z"},"message":"parse date in non lenient mode\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246621 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f0a31876a2a17aea9d15e2da14749a6d76ca2911","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f0a31876a2a17aea9d15e2da14749a6d76ca2911"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9b7c24f5cb0e0c67f49aa8282cb485694283110e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9b7c24f5cb0e0c67f49aa8282cb485694283110e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9b7c24f5cb0e0c67f49aa8282cb485694283110e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9b7c24f5cb0e0c67f49aa8282cb485694283110e/comments","author":null,"committer":null,"parents":[{"sha":"0c5f6f877f921ee220f2da3f49a5d17e68652fb0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0c5f6f877f921ee220f2da3f49a5d17e68652fb0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0c5f6f877f921ee220f2da3f49a5d17e68652fb0"}],"stats":{"total":20,"additions":13,"deletions":7},"files":[{"sha":"8ea8c9b6faedaef67da0f044ee988f0c07c79f60","filename":"core/src/main/java/org/syncope/core/persistence/validation/AbstractAttributeValidator.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b7c24f5cb0e0c67f49aa8282cb485694283110e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAbstractAttributeValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b7c24f5cb0e0c67f49aa8282cb485694283110e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAbstractAttributeValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAbstractAttributeValidator.java?ref=9b7c24f5cb0e0c67f49aa8282cb485694283110e","patch":"@@ -76,8 +76,11 @@ private <T extends AbstractAttributeValue> T parseValue(String value,\n \n             case Date:\n                 try {\n-                    attributeValue.setDateValue(new Date(schema.getFormatter(\n-                            SimpleDateFormat.class).parse(value).getTime()));\n+                    final SimpleDateFormat formatter =\n+                            schema.getFormatter(SimpleDateFormat.class);\n+                    formatter.setLenient(false);\n+                    attributeValue.setDateValue(\n+                            new Date(formatter.parse(value).getTime()));\n                 } catch (java.text.ParseException pe) {\n                     exception = pe;\n                 }"},{"sha":"94efbe24296c76dd1ded6dba4b4838cc457981fb","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b7c24f5cb0e0c67f49aa8282cb485694283110e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b7c24f5cb0e0c67f49aa8282cb485694283110e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=9b7c24f5cb0e0c67f49aa8282cb485694283110e","patch":"@@ -114,12 +114,12 @@ private <T extends AbstractSchema> T getSchema(\n                 LOG.debug(\"Ignoring invalid schema \" + schemaName);\n             }\n         } else if (schema.isVirtual() || schema.isReadonly()) {\n-            schema = null;\n+                schema = null;\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Ignoring virtual or readonly schema \" + schemaName);\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Ignoring virtual or readonly schema \" + schemaName);\n+                }\n             }\n-        }\n \n         return schema;\n     }\n@@ -601,7 +601,10 @@ protected void fill(AbstractAttributable attributable,\n                     }\n \n                     fillAttribute(attributeTO.getValues(),\n-                            attributableUtil, schema, attribute, invalidValues);\n+                            attributableUtil,\n+                            schema,\n+                            attribute,\n+                            invalidValues);\n \n                     if (!attribute.getValues().isEmpty()) {\n                         attributable.addAttribute(attribute);"}]}