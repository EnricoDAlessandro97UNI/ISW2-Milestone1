{"sha":"0f25d712ae3ca8a714559058296feedae043354e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBmMjVkNzEyYWUzY2E4YTcxNDU1OTA1ODI5NmZlZWRhZTA0MzM1NGU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-17T14:47:32Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-17T14:47:32Z"},"message":"Fixes issue 208\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247205 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2e2c04a4ee745f14480b7194a594d69366593ee7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2e2c04a4ee745f14480b7194a594d69366593ee7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0f25d712ae3ca8a714559058296feedae043354e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f25d712ae3ca8a714559058296feedae043354e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f25d712ae3ca8a714559058296feedae043354e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f25d712ae3ca8a714559058296feedae043354e/comments","author":null,"committer":null,"parents":[{"sha":"cc05d58cf845cd2f1075882fab98ce4df6be5eb6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc05d58cf845cd2f1075882fab98ce4df6be5eb6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cc05d58cf845cd2f1075882fab98ce4df6be5eb6"}],"stats":{"total":133,"additions":103,"deletions":30},"files":[{"sha":"078c11926dbac996120298094ec7266f7c163a41","filename":"client/src/main/java/org/syncope/client/to/WorkflowFormTO.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f25d712ae3ca8a714559058296feedae043354e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f25d712ae3ca8a714559058296feedae043354e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java?ref=0f25d712ae3ca8a714559058296feedae043354e","patch":"@@ -14,6 +14,7 @@\n package org.syncope.client.to;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Date;\n import java.util.HashMap;\n import java.util.List;\n@@ -104,11 +105,12 @@ public boolean removeProperty(final WorkflowFormPropertyTO property) {\n         return properties.remove(property);\n     }\n \n-    public void setProperties(final List<WorkflowFormPropertyTO> properties) {\n-        if (properties == null) {\n-            this.properties.clear();\n-        } else {\n-            this.properties = properties;\n+    public void setProperties(\n+            final Collection<WorkflowFormPropertyTO> properties) {\n+\n+        this.properties.clear();\n+        if (properties != null) {\n+            this.properties.addAll(properties);\n         }\n     }\n "},{"sha":"47849b12d25c8c1b0f20a360830cad2bf7a05898","filename":"console/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f25d712ae3ca8a714559058296feedae043354e/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f25d712ae3ca8a714559058296feedae043354e/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=0f25d712ae3ca8a714559058296feedae043354e","patch":"@@ -357,7 +357,7 @@\n                             <cargo.rmi.port>8805</cargo.rmi.port>\n                             \n <!--                            <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</cargo.jvmargs>-->\n-                            <cargo.jvmargs>-noverify ${javaagent}</cargo.jvmargs>\n+                            <cargo.jvmargs>-noverify ${javaagent} -Xms512m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m</cargo.jvmargs>\n                         </properties>\n                         <configfiles>\n                             <configfile>"},{"sha":"a06fa02e0c1d46c029ad47d87c0621256f879ee0","filename":"console/src/main/java/org/syncope/console/pages/ApprovalModalPage.java","status":"modified","additions":30,"deletions":17,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f25d712ae3ca8a714559058296feedae043354e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f25d712ae3ca8a714559058296feedae043354e/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java?ref=0f25d712ae3ca8a714559058296feedae043354e","patch":"@@ -21,6 +21,7 @@\n import java.util.Arrays;\n import java.util.Date;\n import java.util.List;\n+import java.util.Map;\n import org.apache.commons.lang.StringUtils;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -179,29 +180,41 @@ public Serializable getObject() {\n             protected void onSubmit(final AjaxRequestTarget target,\n                     final Form<?> form) {\n \n-                ListItem<WorkflowFormPropertyTO> item;\n-                String input;\n+                Map<String, WorkflowFormPropertyTO> props =\n+                        formTO.getPropertiesAsMap();\n+\n                 for (int i = 0; i < propView.size(); i++) {\n-                    item = (ListItem<WorkflowFormPropertyTO>) propView.get(i);\n-                    input = ((FieldPanel) item.get(\"value\")).getField().\n+                    ListItem<WorkflowFormPropertyTO> item =\n+                            (ListItem<WorkflowFormPropertyTO>) propView.get(i);\n+                    String input = ((FieldPanel) item.get(\"value\")).getField().\n                             getInput();\n \n-                    switch (item.getModelObject().getType()) {\n-                        case Boolean:\n-                            item.getModelObject().setValue(\n-                                    String.valueOf(input.equals(\"Yes\")));\n-                            break;\n-\n-                        case Date:\n-                        case Enum:\n-                        case String:\n-                        case Long:\n-                        default:\n-                            item.getModelObject().setValue(input);\n-                            break;\n+                    if (!props.containsKey(item.getModelObject().getId())) {\n+                        props.put(item.getModelObject().getId(),\n+                                new WorkflowFormPropertyTO());\n+                    }\n+\n+                    if (item.getModelObject().isWritable()) {\n+                        switch (item.getModelObject().getType()) {\n+                            case Boolean:\n+                                props.get(item.getModelObject().getId()).\n+                                        setValue(\n+                                        String.valueOf(input.equals(\"0\")));\n+                                break;\n+\n+                            case Date:\n+                            case Enum:\n+                            case String:\n+                            case Long:\n+                            default:\n+                                props.get(item.getModelObject().getId()).\n+                                        setValue(input);\n+                                break;\n+                        }\n                     }\n                 }\n \n+                formTO.setProperties(props.values());\n                 try {\n                     restClient.submitForm(formTO);\n "},{"sha":"07380169bd469c0b86ef5e73b5ef947cfc6a06e3","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f25d712ae3ca8a714559058296feedae043354e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f25d712ae3ca8a714559058296feedae043354e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=0f25d712ae3ca8a714559058296feedae043354e","patch":"@@ -229,9 +229,13 @@ protected WorkflowResult<Map.Entry<Long, PropagationByResource>> doUpdate(\n         updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n-        PropagationByResource propByRes =\n-                (PropagationByResource) runtimeService.getVariable(\n-                user.getWorkflowId(), PROP_BY_RESOURCE);\n+        PropagationByResource propByRes;\n+        try {\n+            propByRes = (PropagationByResource) runtimeService.getVariable(\n+                    user.getWorkflowId(), PROP_BY_RESOURCE);\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(e);\n+        }\n \n         return new WorkflowResult<Map.Entry<Long, PropagationByResource>>(\n                 new DefaultMapEntry(updated.getId(), propByRes),"},{"sha":"4b849a715fcd19827a1de09e491bed0cde670732","filename":"core/src/test/java/org/syncope/core/rest/LogTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f25d712ae3ca8a714559058296feedae043354e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLogTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f25d712ae3ca8a714559058296feedae043354e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLogTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLogTestITCase.java?ref=0f25d712ae3ca8a714559058296feedae043354e","patch":"@@ -14,10 +14,10 @@\n  */\n package org.syncope.core.rest;\n \n-import ch.qos.logback.classic.Level;\n-import java.util.Arrays;\n import static org.junit.Assert.*;\n \n+import ch.qos.logback.classic.Level;\n+import java.util.Arrays;\n import java.util.List;\n import org.junit.Test;\n import org.syncope.client.to.LoggerTO;"},{"sha":"5fa56152a808c983c16020d0163808ed2af95df2","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":56,"deletions":2,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f25d712ae3ca8a714559058296feedae043354e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f25d712ae3ca8a714559058296feedae043354e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=0f25d712ae3ca8a714559058296feedae043354e","patch":"@@ -637,8 +637,8 @@ public final void createWithRequiredValueMissing() {\n     }\n \n     @Test\n-    public final void createWithApproval() {\n-        UserTO userTO = getSampleTO(\"createWithApproval@syncope-idm.org\");\n+    public final void createWithReject() {\n+        UserTO userTO = getSampleTO(\"createWithReject@syncope-idm.org\");\n \n         // User with role 9 are defined in workflow as subject to approval\n         MembershipTO membershipTO = new MembershipTO();\n@@ -695,6 +695,7 @@ public final void createWithApproval() {\n         Map<String, WorkflowFormPropertyTO> props = form.getPropertiesAsMap();\n         props.get(\"approve\").setValue(Boolean.FALSE.toString());\n         props.get(\"rejectReason\").setValue(\"I don't like him.\");\n+        form.setProperties(props.values());\n         userTO = restTemplate.postForObject(\n                 BASE_URL + \"user/workflow/form/submit\",\n                 form, UserTO.class);\n@@ -705,6 +706,59 @@ public final void createWithApproval() {\n         super.setupRestTemplate();\n     }\n \n+    @Test\n+    public final void createWithApproval() {\n+        UserTO userTO = getSampleTO(\"createWithApproval@syncope-idm.org\");\n+\n+        // User with role 9 are defined in workflow as subject to approval\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(9);\n+        userTO.addMembership(membershipTO);\n+\n+        // 1. create user with role 9\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n+                userTO, UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(1, userTO.getMemberships().size());\n+        assertEquals(9, userTO.getMemberships().get(0).getRoleId());\n+        assertEquals(\"createApproval\", userTO.getStatus());\n+\n+        // 2. request if there is any pending task for user just created\n+        WorkflowFormTO form = restTemplate.getForObject(\n+                BASE_URL + \"user/workflow/form/{userId}\",\n+                WorkflowFormTO.class, userTO.getId());\n+        assertNotNull(form);\n+        assertNotNull(form.getTaskId());\n+        assertNull(form.getOwner());\n+\n+        // 4. claim task (from admin)\n+        form = restTemplate.getForObject(\n+                BASE_URL + \"user/workflow/form/claim/{taskId}\",\n+                WorkflowFormTO.class, form.getTaskId());\n+        assertNotNull(form);\n+        assertNotNull(form.getTaskId());\n+        assertNotNull(form.getOwner());\n+\n+        // 5. approve user\n+        Map<String, WorkflowFormPropertyTO> props = form.getPropertiesAsMap();\n+        props.get(\"approve\").setValue(Boolean.TRUE.toString());\n+        form.setProperties(props.values());\n+        userTO = restTemplate.postForObject(\n+                BASE_URL + \"user/workflow/form/submit\",\n+                form, UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(\"active\", userTO.getStatus());\n+\n+        // 6. update user\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+        userMod.setPassword(\"anotherPassword123\");\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/update\",\n+                userMod, UserTO.class);\n+        assertNotNull(userTO);\n+    }\n+\n     @Test\n     public final void delete() {\n         try {"}]}