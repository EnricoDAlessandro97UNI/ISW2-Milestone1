{"sha":"427db760a32c9989b7fd2248608286fc43037c9b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQyN2RiNzYwYTMyYzk5ODliN2ZkMjI0ODYwODI4NmZjNDMwMzdjOWI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2018-12-14T09:09:16Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2018-12-14T15:04:01Z"},"message":"[SYNCOPE-1416] removes null attr views","tree":{"sha":"dc1f19f42f90c5eee9558120ac48e1e80ff8e562","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dc1f19f42f90c5eee9558120ac48e1e80ff8e562"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/427db760a32c9989b7fd2248608286fc43037c9b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/427db760a32c9989b7fd2248608286fc43037c9b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/427db760a32c9989b7fd2248608286fc43037c9b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/427db760a32c9989b7fd2248608286fc43037c9b/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"6583c746d7418b992c0615d57f1228d37fece5ce","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6583c746d7418b992c0615d57f1228d37fece5ce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6583c746d7418b992c0615d57f1228d37fece5ce"}],"stats":{"total":251,"additions":110,"deletions":141},"files":[{"sha":"11ace3aa4a1e036354159ca38d35429842feb5ba","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":75,"deletions":14,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/427db760a32c9989b7fd2248608286fc43037c9b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/427db760a32c9989b7fd2248608286fc43037c9b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=427db760a32c9989b7fd2248608286fc43037c9b","patch":"@@ -130,7 +130,10 @@ protected int doCount(final Set<String> adminRealms, final SearchCond cond, fina\n         Pair<String, Set<String>> filter = getAdminRealmsFilter(adminRealms, svs, parameters);\n \n         // 1. get the query string from the search condition\n-        StringBuilder queryString = getQuery(buildEffectiveCond(cond, filter.getRight()), parameters, svs);\n+        Pair<StringBuilder, Set<String>> queryInfo = \n+                getQuery(buildEffectiveCond(cond, filter.getRight()), parameters, svs);\n+\n+        StringBuilder queryString = queryInfo.getLeft();\n \n         // 2. take into account administrative realms\n         queryString.insert(0, \"SELECT u.any_id FROM (\");\n@@ -164,16 +167,19 @@ protected <T extends Any<?>> List<T> doSearch(\n             Pair<String, Set<String>> filter = getAdminRealmsFilter(adminRealms, svs, parameters);\n \n             // 1. get the query string from the search condition\n-            StringBuilder queryString = getQuery(buildEffectiveCond(cond, filter.getRight()), parameters, svs);\n+            Pair<StringBuilder, Set<String>> queryInfo = getQuery(buildEffectiveCond(cond, filter.getRight()),\n+                    parameters, svs);\n+\n+            StringBuilder queryString = queryInfo.getLeft();\n \n             // 2. take into account realms and ordering\n             OrderBySupport obs = parseOrderBy(kind, svs, orderBy);\n             if (queryString.charAt(0) == '(') {\n                 queryString.insert(0, buildSelect(obs));\n-                queryString.append(buildWhere(svs, obs));\n+                queryString.append(buildWhere(svs, queryInfo.getRight(), obs));\n             } else {\n                 queryString.insert(0, buildSelect(obs).append('('));\n-                queryString.append(')').append(buildWhere(svs, obs));\n+                queryString.append(')').append(buildWhere(svs, queryInfo.getRight(), obs));\n             }\n             queryString.\n                     append(filter.getLeft()).\n@@ -233,14 +239,49 @@ private StringBuilder buildSelect(final OrderBySupport obs) {\n         return select;\n     }\n \n-    protected void processOBS(final SearchSupport svs, final OrderBySupport obs, final StringBuilder where) {\n+    protected void processOBS(\n+            final SearchSupport svs,\n+            final Set<String> involvedPlainAttrs,\n+            final OrderBySupport obs,\n+            final StringBuilder where) {\n+\n+        Set<String> attrs = new HashSet<>(involvedPlainAttrs);\n+        for (OrderBySupport.Item item : obs.items) {\n+            attrs.add(item.orderBy.substring(0, item.orderBy.indexOf(\" \")));\n+        }\n+\n         obs.views.forEach(searchView -> {\n             where.append(',');\n             if (searchView.name.equals(svs.asSearchViewSupport().attr().name)) {\n+                StringBuilder attrWhere = new StringBuilder();\n+                StringBuilder nullAttrWhere = new StringBuilder();\n+\n                 where.append(\" (SELECT * FROM \").append(searchView.name);\n \n                 if (svs.nonMandatorySchemas || obs.nonMandatorySchemas) {\n-                    where.append(\" UNION SELECT * FROM \").append(svs.asSearchViewSupport().nullAttr().name);\n+                    attrs.forEach(field -> {\n+                        if (attrWhere.length() == 0) {\n+                            attrWhere.append(\" WHERE schema_id='\").append(field).append(\"'\");\n+                        } else {\n+                            attrWhere.append(\" OR \").append(\"schema_id='\").append(field).append(\"'\");\n+                        }\n+\n+                        nullAttrWhere.append(\" UNION SELECT any_id, \").\n+                                append(\"'\").\n+                                append(field).\n+                                append(\"' AS schema_id, \").\n+                                append(\"null AS booleanvalue, \").\n+                                append(\"null AS datevalue, \").\n+                                append(\"null AS doublevalue, \").\n+                                append(\"null AS longvalue, \").\n+                                append(\"null AS stringvalue FROM \").append(svs.field().name).\n+                                append(\" WHERE \").\n+                                append(\"any_id NOT IN (\").\n+                                append(\"SELECT any_id FROM \").\n+                                append(svs.asSearchViewSupport().attr().name).append(' ').append(searchView.alias).\n+                                append(\" WHERE \").append(\"schema_id='\").append(field).append(\"')\");\n+                    });\n+                    where.append(attrWhere).append(nullAttrWhere);\n                 }\n \n                 where.append(')');\n@@ -251,9 +292,10 @@ protected void processOBS(final SearchSupport svs, final OrderBySupport obs, fin\n         });\n     }\n \n-    private StringBuilder buildWhere(final SearchSupport svs, final OrderBySupport obs) {\n+    private StringBuilder buildWhere(\n+            final SearchSupport svs, final Set<String> involvedPlainAttrs, final OrderBySupport obs) {\n         StringBuilder where = new StringBuilder(\" u\");\n-        processOBS(svs, obs, where);\n+        processOBS(svs, involvedPlainAttrs, obs, where);\n         where.append(\" WHERE \");\n         obs.views.forEach(searchView -> {\n             where.append(\"u.any_id=\").append(searchView.alias).append(\".any_id AND \");\n@@ -375,8 +417,10 @@ private OrderBySupport parseOrderBy(\n         return obs;\n     }\n \n-    private StringBuilder getQuery(final SearchCond cond, final List<Object> parameters, final SearchSupport svs) {\n+    private Pair<StringBuilder, Set<String>> getQuery(\n+            final SearchCond cond, final List<Object> parameters, final SearchSupport svs) {\n         StringBuilder query = new StringBuilder();\n+        Set<String> involvedAttributes = new HashSet<>();\n \n         switch (cond.getType()) {\n             case LEAF:\n@@ -419,36 +463,53 @@ private StringBuilder getQuery(final SearchCond cond, final List<Object> paramet\n                 } else if (cond.getAttributeCond() != null) {\n                     query.append(getQuery(cond.getAttributeCond(),\n                             cond.getType() == SearchCond.Type.NOT_LEAF, parameters, svs));\n+                    try {\n+                        involvedAttributes.add(check(cond.getAttributeCond(), svs.anyTypeKind).getLeft().getKey());\n+                    } catch (IllegalArgumentException e) {\n+                        // ignore\n+                    }\n                 } else if (cond.getAnyCond() != null) {\n                     query.append(getQuery(cond.getAnyCond(),\n                             cond.getType() == SearchCond.Type.NOT_LEAF, parameters, svs));\n                 }\n                 break;\n \n             case AND:\n-                String andSubQuery = getQuery(cond.getLeftSearchCond(), parameters, svs).toString();\n+                Pair<StringBuilder, Set<String>> leftAndInfo = getQuery(cond.getLeftSearchCond(), parameters, svs);\n+                involvedAttributes.addAll(leftAndInfo.getRight());\n+\n+                Pair<StringBuilder, Set<String>> rigthAndInfo = getQuery(cond.getRightSearchCond(), parameters, svs);\n+                involvedAttributes.addAll(rigthAndInfo.getRight());\n+\n+                String andSubQuery = leftAndInfo.getKey().toString();\n                 // Add extra parentheses\n                 andSubQuery = andSubQuery.replaceFirst(\"WHERE \", \"WHERE (\");\n                 query.append(andSubQuery).\n                         append(\" AND any_id IN ( \").\n-                        append(getQuery(cond.getRightSearchCond(), parameters, svs)).\n+                        append(rigthAndInfo.getKey()).\n                         append(\"))\");\n                 break;\n \n             case OR:\n-                String orSubQuery = getQuery(cond.getLeftSearchCond(), parameters, svs).toString();\n+                Pair<StringBuilder, Set<String>> leftOrInfo = getQuery(cond.getLeftSearchCond(), parameters, svs);\n+                involvedAttributes.addAll(leftOrInfo.getRight());\n+\n+                Pair<StringBuilder, Set<String>> rigthOrInfo = getQuery(cond.getRightSearchCond(), parameters, svs);\n+                involvedAttributes.addAll(rigthOrInfo.getRight());\n+\n+                String orSubQuery = leftOrInfo.getKey().toString();\n                 // Add extra parentheses\n                 orSubQuery = orSubQuery.replaceFirst(\"WHERE \", \"WHERE (\");\n                 query.append(orSubQuery).\n                         append(\" OR any_id IN ( \").\n-                        append(getQuery(cond.getRightSearchCond(), parameters, svs)).\n+                        append(rigthOrInfo.getKey()).\n                         append(\"))\");\n                 break;\n \n             default:\n         }\n \n-        return query;\n+        return Pair.of(query, involvedAttributes);\n     }\n \n     protected String getQuery("},{"sha":"f1e8a603d6beec3b5f005d7998521fe6a3880e2a","filename":"core/persistence-jpa/src/main/resources/views.xml","status":"modified","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/427db760a32c9989b7fd2248608286fc43037c9b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/427db760a32c9989b7fd2248608286fc43037c9b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fviews.xml?ref=427db760a32c9989b7fd2248608286fc43037c9b","patch":"@@ -78,20 +78,6 @@ under the License.\n     FROM UPlainAttrValue uav, UPlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"user_search_null_attr\">\n-    CREATE VIEW user_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeUser u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"user_search_urelationship\">\n     CREATE VIEW user_search_urelationship AS\n \n@@ -171,20 +157,6 @@ under the License.\n     FROM APlainAttrValue uav, APlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"anyObject_search_null_attr\">\n-    CREATE VIEW anyObject_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM AnyObject u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"anyObject_search_arelationship\">\n     CREATE VIEW anyObject_search_arelationship AS\n \n@@ -244,20 +216,6 @@ under the License.\n     FROM GPlainAttrValue uav, GPlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"group_search_null_attr\">\n-    CREATE VIEW group_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    NULL AS datevalue,\n-    NULL AS doublevalue,\n-    NULL AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeGroup u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"group_search_resource\">\n     CREATE VIEW group_search_resource AS\n "},{"sha":"43cc944920e1ed1431d4d8ca07d080ba292fa49d","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/427db760a32c9989b7fd2248608286fc43037c9b/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/427db760a32c9989b7fd2248608286fc43037c9b/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=427db760a32c9989b7fd2248608286fc43037c9b","patch":"@@ -747,4 +747,27 @@ public void issueSYNCOPE983() {\n                 AnyTypeKind.USER);\n         assertFalse(users.isEmpty());\n     }\n+    \n+    @Test\n+    public void issueSYNCOPE1416() {\n+        AttributeCond idLeftCond = new AttributeCond(AttributeCond.Type.ISNOTNULL);\n+        idLeftCond.setSchema(\"surname\");\n+        \n+        AttributeCond idRightCond = new AttributeCond(AttributeCond.Type.ISNOTNULL);\n+        idRightCond.setSchema(\"firstname\");\n+        \n+        SearchCond searchCondition = SearchCond.getAndCond(\n+                SearchCond.getLeafCond(idLeftCond), SearchCond.getLeafCond(idRightCond));\n+\n+        List<OrderByClause> orderByClauses = new ArrayList<>();\n+        OrderByClause orderByClause = new OrderByClause();\n+        orderByClause.setField(\"ctype\");\n+        orderByClause.setDirection(OrderByClause.Direction.ASC);\n+        orderByClauses.add(orderByClause);\n+\n+        List<User> users = searchDAO.search(searchCondition, orderByClauses, AnyTypeKind.USER);\n+        assertEquals(\n+                searchDAO.count(SyncopeConstants.FULL_ADMIN_REALMS, searchCondition, AnyTypeKind.USER),\n+                users.size());\n+    }\n }"},{"sha":"529901ece9ce225937e2657195a5e1661358f693","filename":"fit/core-reference/src/main/resources/postgres/views.xml","status":"modified","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/427db760a32c9989b7fd2248608286fc43037c9b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/427db760a32c9989b7fd2248608286fc43037c9b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fviews.xml?ref=427db760a32c9989b7fd2248608286fc43037c9b","patch":"@@ -78,20 +78,6 @@ under the License.\n     FROM UPlainAttrValue uav, UPlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"user_search_null_attr\">\n-    CREATE VIEW user_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL::int4 AS booleanvalue,\n-    NULL::timestamp AS datevalue,\n-    NULL::float8 AS doublevalue,\n-    NULL::int8 AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeUser u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"user_search_urelationship\">\n     CREATE VIEW user_search_urelationship AS\n \n@@ -171,20 +157,6 @@ under the License.\n     FROM APlainAttrValue uav, APlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"anyObject_search_null_attr\">\n-    CREATE VIEW anyObject_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL::int4 AS booleanvalue,\n-    NULL::timestamp AS datevalue,\n-    NULL::float8 AS doublevalue,\n-    NULL::int8 AS longvalue,\n-    NULL AS stringvalue\n-    FROM AnyObject u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"anyObject_search_arelationship\">\n     CREATE VIEW anyObject_search_arelationship AS\n \n@@ -244,20 +216,6 @@ under the License.\n     FROM GPlainAttrValue uav, GPlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"group_search_null_attr\">\n-    CREATE VIEW group_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL::int4 AS booleanvalue,\n-    NULL::timestamp AS datevalue,\n-    NULL::float8 AS doublevalue,\n-    NULL::int8 AS longvalue,\n-    NULL AS stringvalue\n-    FROM SyncopeGroup u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"group_search_resource\">\n     CREATE VIEW group_search_resource AS\n "},{"sha":"529901ece9ce225937e2657195a5e1661358f693","filename":"fit/core-reference/src/main/resources/sqlserver/views.xml","status":"modified","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/427db760a32c9989b7fd2248608286fc43037c9b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/427db760a32c9989b7fd2248608286fc43037c9b/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fviews.xml?ref=427db760a32c9989b7fd2248608286fc43037c9b","patch":"@@ -78,20 +78,6 @@ under the License.\n     FROM UPlainAttrValue uav, UPlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"user_search_null_attr\">\n-    CREATE VIEW user_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    CAST (NULL AS DATETIME2) datevalue,\n-    CAST (NULL AS FLOAT) doublevalue,\n-    CAST (NULL AS BIGINT) longvalue,\n-    CAST (NULL AS VARCHAR(255)) AS stringvalue\n-    FROM SyncopeUser u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"user_search_urelationship\">\n     CREATE VIEW user_search_urelationship AS\n \n@@ -171,20 +157,6 @@ under the License.\n     FROM APlainAttrValue uav, APlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"anyObject_search_null_attr\">\n-    CREATE VIEW anyObject_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    CAST (NULL AS DATETIME2) datevalue,\n-    CAST (NULL AS FLOAT) doublevalue,\n-    CAST (NULL AS BIGINT) longvalue,\n-    CAST (NULL AS VARCHAR(255)) AS stringvalue\n-    FROM AnyObject u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"anyObject_search_arelationship\">\n     CREATE VIEW anyObject_search_arelationship AS\n \n@@ -244,20 +216,6 @@ under the License.\n     FROM GPlainAttrValue uav, GPlainAttr ua\n     WHERE uav.attribute_id = ua.id\n   </entry>\n-  <entry key=\"group_search_null_attr\">\n-    CREATE VIEW group_search_null_attr AS\n-\n-    SELECT u.id AS any_id,\n-    PlainSchema.id AS schema_id,\n-    NULL AS booleanvalue,\n-    CAST (NULL AS DATETIME2) datevalue,\n-    CAST (NULL AS FLOAT) doublevalue,\n-    CAST (NULL AS BIGINT) longvalue,\n-    CAST (NULL AS VARCHAR(255)) AS stringvalue\n-    FROM SyncopeGroup u CROSS JOIN PlainSchema\n-    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n-    WHERE ua.id IS NULL\n-  </entry>\n   <entry key=\"group_search_resource\">\n     CREATE VIEW group_search_resource AS\n "},{"sha":"449c24d329635cb13d584e8748e70f4b3e22ebe0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/427db760a32c9989b7fd2248608286fc43037c9b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/427db760a32c9989b7fd2248608286fc43037c9b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=427db760a32c9989b7fd2248608286fc43037c9b","patch":"@@ -32,11 +32,11 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.request.AnyObjectCR;\n import org.apache.syncope.common.lib.request.AnyObjectUR;\n-import org.apache.syncope.common.lib.request.AttrPatch;\n import org.apache.syncope.common.lib.request.GroupCR;\n import org.apache.syncope.common.lib.request.MembershipUR;\n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n+import org.apache.syncope.common.lib.patch.AttrPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n@@ -290,6 +290,17 @@ public void searchByDate() {\n                         and(\"username\").equalTo(\"bellini\").query()).\n                 build());\n         assertEquals(users, issueSYNCOPE1321);\n+        \n+        // SYNCOPE-1416 (check the search for attributes of type different from stringvalue)\n+        PagedResult<UserTO> issueSYNCOPE1416 = userService.search(new AnyQuery.Builder().\n+                realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().\n+                        is(\"loginDate\").lexicalNotBefore(\"2009-05-26\").\n+                        and(\"username\").equalTo(\"rossini\").query()).\n+                orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"loginDate\").build()).\n+                build());\n+        assertEquals(1, issueSYNCOPE1416.getSize());\n+        assertEquals(\"rossini\", issueSYNCOPE1416.getResult().get(0).getUsername());\n     }\n \n     @Test"}]}