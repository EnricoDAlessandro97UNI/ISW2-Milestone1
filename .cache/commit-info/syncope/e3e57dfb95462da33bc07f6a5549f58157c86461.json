{"sha":"e3e57dfb95462da33bc07f6a5549f58157c86461","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUzZTU3ZGZiOTU0NjJkYTMzYmMwN2Y2YTU1NDlmNTgxNTdjODY0NjE=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-05-21T07:14:29Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-05-21T07:14:29Z"},"message":"Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/syncope","tree":{"sha":"73aed1346a69005a00ab33c097685f46cb9eeb9a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/73aed1346a69005a00ab33c097685f46cb9eeb9a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e3e57dfb95462da33bc07f6a5549f58157c86461","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3e57dfb95462da33bc07f6a5549f58157c86461","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e3e57dfb95462da33bc07f6a5549f58157c86461","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3e57dfb95462da33bc07f6a5549f58157c86461/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"4759d035f7ff8cb176493d292031429a9ef2afad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4759d035f7ff8cb176493d292031429a9ef2afad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4759d035f7ff8cb176493d292031429a9ef2afad"},{"sha":"eb99e243bb4d574fb562920f75665c6c4578b800","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb99e243bb4d574fb562920f75665c6c4578b800","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eb99e243bb4d574fb562920f75665c6c4578b800"}],"stats":{"total":124,"additions":62,"deletions":62},"files":[{"sha":"4dcb32484475315a9c70e65849b5c69a1d3b2b2e","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractSubjectLogic.java","status":"modified","additions":27,"deletions":13,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSubjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSubjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSubjectLogic.java?ref=e3e57dfb95462da33bc07f6a5549f58157c86461","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.logic;\n \n import java.util.Collection;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -32,23 +33,36 @@\n public abstract class AbstractSubjectLogic<T extends AbstractSubjectTO, V extends AbstractSubjectMod>\n         extends AbstractResourceAssociator<T> {\n \n+    private static class StartsWithPredicate implements Predicate<String> {\n+\n+        private final Collection<String> targets;\n+\n+        public StartsWithPredicate(final Collection<String> targets) {\n+            this.targets = targets;\n+        }\n+\n+        @Override\n+        public boolean evaluate(final String realm) {\n+            return CollectionUtils.exists(targets, new Predicate<String>() {\n+\n+                @Override\n+                public boolean evaluate(final String target) {\n+                    return realm.startsWith(target);\n+                }\n+            });\n+        }\n+\n+    }\n+\n     protected Set<String> getEffectiveRealms(\n             final Set<String> allowedRealms, final Collection<String> requestedRealms) {\n \n-        Set<String> effective = RealmUtils.normalize(requestedRealms);\n-        CollectionUtils.filter(effective, new Predicate<String>() {\n-\n-            @Override\n-            public boolean evaluate(final String requestedRealm) {\n-                return CollectionUtils.exists(allowedRealms, new Predicate<String>() {\n+        final Set<String> allowed = RealmUtils.normalize(allowedRealms);\n+        final Set<String> requested = RealmUtils.normalize(requestedRealms);\n \n-                    @Override\n-                    public boolean evaluate(final String allowedRealm) {\n-                        return requestedRealm.startsWith(allowedRealm);\n-                    }\n-                });\n-            }\n-        });\n+        Set<String> effective = new HashSet<>();\n+        CollectionUtils.select(requested, new StartsWithPredicate(allowed), effective);\n+        CollectionUtils.select(allowed, new StartsWithPredicate(requested), effective);\n \n         return effective;\n     }"},{"sha":"abad867eb6ada5ae342a5d338019a1623e327940","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=e3e57dfb95462da33bc07f6a5549f58157c86461","patch":"@@ -166,7 +166,7 @@ public int searchCount(final SearchCond searchCondition, final List<String> real\n     public List<UserTO> search(final SearchCond searchCondition, final int page, final int size,\n             final List<OrderByClause> orderBy, final List<String> realms) {\n \n-        final List<User> matchingUsers = searchDAO.search(\n+        List<User> matchingUsers = searchDAO.search(\n                 getEffectiveRealms(AuthContextUtils.getAuthorizations().get(Entitlement.USER_SEARCH), realms),\n                 searchCondition, page, size, orderBy, SubjectType.USER);\n         return CollectionUtils.collect(matchingUsers, new Transformer<User, UserTO>() {"},{"sha":"df768351ea8819decd412d302d14a662d0432c09","filename":"core/persistence-jpa/src/test/resources/content.xml","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=e3e57dfb95462da33bc07f6a5549f58157c86461","patch":"@@ -138,16 +138,20 @@ under the License.\n   <SyncopeRole_entitlements entitlement=\"WORKFLOW_FORM_CLAIM\" role_id=\"3\"/>\n   <SyncopeRole_Realm role_id=\"3\" realm_id=\"2\"/>\n   \n+  <SyncopeRole id=\"4\" name=\"Search for /even/two\"/>\n+  <SyncopeRole_entitlements entitlement=\"USER_READ\" role_id=\"4\"/>\n+  <SyncopeRole_entitlements entitlement=\"USER_SEARCH\" role_id=\"4\"/>\n+  <SyncopeRole_Realm role_id=\"4\" realm_id=\"4\"/>\n+\n   <SyncopeUser id=\"1\" workflowId=\"4\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n-               realm_id=\"1\"\n+               realm_id=\"3\"\n                username=\"rossini\" creator=\"admin\" lastModifier=\"admin\"\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n   <SyncopeUser_SyncopeRole user_id=\"1\" role_id=\"3\"/>\n   <SyncopeUser id=\"2\" workflowId=\"6\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n                realm_id=\"1\"\n                username=\"verdi\" creator=\"admin\" lastModifier=\"admin\"\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n-  <SyncopeUser_SyncopeRole user_id=\"2\" role_id=\"1\"/>\n   <SyncopeUser id=\"3\" workflowId=\"8\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n                realm_id=\"1\"\n                username=\"vivaldi\" creator=\"admin\" lastModifier=\"admin\"\n@@ -156,11 +160,13 @@ under the License.\n                realm_id=\"1\"\n                username=\"bellini\" creator=\"admin\" lastModifier=\"admin\"\n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n+  <SyncopeUser_SyncopeRole user_id=\"4\" role_id=\"1\"/>\n   <SyncopeUser_SyncopeRole user_id=\"4\" role_id=\"2\"/>\n   <SyncopeUser id=\"5\" workflowId=\"12\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n                realm_id=\"1\"\n                username=\"puccini\" creator=\"admin\" lastModifier=\"admin\" \n                creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n+  <SyncopeUser_SyncopeRole user_id=\"5\" role_id=\"4\"/>\n   \n   <SyncopeGroup id=\"1\" name=\"root\"\n                 realm_id=\"1\""},{"sha":"fe64a7bfd52d0008bfa894325b1515150e8d3e2c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/job/JobNamer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjob%2FJobNamer.java?ref=e3e57dfb95462da33bc07f6a5549f58157c86461","patch":"@@ -45,11 +45,11 @@ private static Long getIdFromJobName(final String name, final String pattern, fi\n     }\n \n     public static Long getTaskIdFromJobName(final String name) {\n-        return getIdFromJobName(\"taskJob[0-9]+\", name, 7);\n+        return getIdFromJobName(name, \"taskJob[0-9]+\", 7);\n     }\n \n     public static Long getReportIdFromJobName(final String name) {\n-        return getIdFromJobName(\"reportJob[0-9]+\", name, 9);\n+        return getIdFromJobName(name, \"reportJob[0-9]+\", 9);\n     }\n \n     public static String getJobName(final Task task) {"},{"sha":"fc3938e4932628c788360d6d88f2ee0a42aa2688","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SpringBeanJobFactory.java","status":"modified","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSpringBeanJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3e57dfb95462da33bc07f6a5549f58157c86461/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSpringBeanJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSpringBeanJobFactory.java?ref=e3e57dfb95462da33bc07f6a5549f58157c86461","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.provisioning.java.job;\n \n-import org.apache.syncope.core.provisioning.api.job.JobNamer;\n-import org.apache.syncope.core.provisioning.api.job.JobInstanceLoader;\n import org.quartz.SchedulerContext;\n import org.quartz.spi.TriggerFiredBundle;\n import org.springframework.beans.BeanWrapper;\n@@ -57,21 +55,6 @@ public void setSchedulerContext(final SchedulerContext schedulerContext) {\n     protected Object createJobInstance(final TriggerFiredBundle bundle) throws Exception {\n         final ApplicationContext ctx = ((ConfigurableApplicationContext) schedulerContext.get(\"applicationContext\"));\n \n-        // Try to re-create job bean from underlying task (useful for managing failover scenarios)\n-        if (!ctx.containsBean(bundle.getJobDetail().getKey().getName())) {\n-            Long taskId = JobNamer.getTaskIdFromJobName(bundle.getJobDetail().getKey().getName());\n-            if (taskId != null) {\n-                JobInstanceLoader jobInstanceLoader = ctx.getBean(JobInstanceLoader.class);\n-                jobInstanceLoader.registerTaskJob(taskId);\n-            }\n-\n-            Long reportId = JobNamer.getReportIdFromJobName(bundle.getJobDetail().getKey().getName());\n-            if (reportId != null) {\n-                JobInstanceLoader jobInstanceLoader = ctx.getBean(JobInstanceLoader.class);\n-                jobInstanceLoader.registerReportJob(reportId);\n-            }\n-        }\n-\n         final Object job = ctx.getBean(bundle.getJobDetail().getKey().getName());\n         final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(job);\n         if (isEligibleForPropertyPopulation(wrapper.getWrappedInstance())) {"},{"sha":"953d4371e9f27c7ac4df6c57eec6f782d8e26264","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AuthenticationITCase.java","status":"modified","additions":22,"deletions":25,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3e57dfb95462da33bc07f6a5549f58157c86461/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3e57dfb95462da33bc07f6a5549f58157c86461/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAuthenticationITCase.java?ref=e3e57dfb95462da33bc07f6a5549f58157c86461","patch":"@@ -25,11 +25,12 @@\n import static org.junit.Assert.fail;\n \n import java.security.AccessControlException;\n+import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n \n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -104,10 +105,10 @@ public void testReadEntitlements() {\n         assertEquals(ADMIN_UNAME, self.getValue().getUsername());\n \n         // 4. as user\n-        self = clientFactory.create(\"verdi\", ADMIN_PWD).self();\n+        self = clientFactory.create(\"bellini\", ADMIN_PWD).self();\n         assertFalse(self.getKey().isEmpty());\n         assertFalse(self.getKey().keySet().contains(Entitlement.ANONYMOUS));\n-        assertEquals(\"verdi\", self.getValue().getUsername());\n+        assertEquals(\"bellini\", self.getValue().getUsername());\n     }\n \n     @Test\n@@ -175,23 +176,21 @@ public void testUserRead() {\n         UserTO readUserTO = userService2.read(1L);\n         assertNotNull(readUserTO);\n \n-        UserService userService3 = clientFactory.create(\"verdi\", ADMIN_PWD).getService(UserService.class);\n+        UserService userService3 = clientFactory.create(\"puccini\", ADMIN_PWD).getService(UserService.class);\n \n-        SyncopeClientException exception = null;\n         try {\n-            userService3.read(1L);\n+            userService3.read(3L);\n             fail();\n         } catch (SyncopeClientException e) {\n-            exception = e;\n+            assertNotNull(e);\n+            assertEquals(ClientExceptionType.Unauthorized, e.getType());\n         }\n-        assertNotNull(exception);\n-        assertEquals(ClientExceptionType.Unauthorized, exception.getType());\n     }\n \n     @Test\n     public void testUserSearch() {\n         UserTO userTO = UserITCase.getUniqueSampleTO(\"testusersearch@test.org\");\n-        userTO.getRoles().add(2L);\n+        userTO.getRoles().add(1L);\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n@@ -201,30 +200,28 @@ public void testUserSearch() {\n \n         PagedResult<UserTO> matchedUsers = userService2.search(\n                 SyncopeClient.getSubjectSearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"loginDate\").query()).build());\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"key\").query()).build());\n         assertNotNull(matchedUsers);\n         assertFalse(matchedUsers.getResult().isEmpty());\n-        assertTrue(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n+        Set<Long> matchedUserKeys = CollectionUtils.collect(matchedUsers.getResult(),\n+                new Transformer<UserTO, Long>() {\n \n-            @Override\n-            public boolean evaluate(final UserTO user) {\n-                return user.getKey() == 1;\n-            }\n-        }));\n+                    @Override\n+                    public Long transform(final UserTO input) {\n+                        return input.getKey();\n+                    }\n+                }, new HashSet<Long>());\n+        assertTrue(matchedUserKeys.contains(1L));\n+        assertFalse(matchedUserKeys.contains(2L));\n+        assertFalse(matchedUserKeys.contains(5L));\n \n-        UserService userService3 = clientFactory.create(\"verdi\", \"password\").getService(UserService.class);\n+        UserService userService3 = clientFactory.create(\"puccini\", ADMIN_PWD).getService(UserService.class);\n \n         matchedUsers = userService3.search(\n                 SyncopeClient.getSubjectSearchQueryBuilder().realm(\"/even/two\").\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNotNull(\"loginDate\").query()).build());\n         assertNotNull(matchedUsers);\n-        assertFalse(CollectionUtils.exists(matchedUsers.getResult(), new Predicate<UserTO>() {\n-\n-            @Override\n-            public boolean evaluate(final UserTO user) {\n-                return user.getKey() == 1;\n-            }\n-        }));\n+        assertTrue(matchedUsers.getResult().isEmpty());\n     }\n \n     @Test"},{"sha":"24329179eca8bfc1eea9d096966ca84b50b783e8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserWorkflowITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3e57dfb95462da33bc07f6a5549f58157c86461/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3e57dfb95462da33bc07f6a5549f58157c86461/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserWorkflowITCase.java?ref=e3e57dfb95462da33bc07f6a5549f58157c86461","patch":"@@ -85,7 +85,7 @@ public void createWithReject() {\n             assertEquals(ClientExceptionType.Workflow, e.getType());\n         }\n \n-        // 4. claim task from bellini, in group 7\n+        // 4. claim task from bellini, in role 2\n         UserWorkflowService userService3 = clientFactory.create(\n                 \"bellini\", ADMIN_PWD).getService(UserWorkflowService.class);\n "},{"sha":"5253fd0ffc2947a415a5c0176c3741048d4fdb7d","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3e57dfb95462da33bc07f6a5549f58157c86461/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3e57dfb95462da33bc07f6a5549f58157c86461/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=e3e57dfb95462da33bc07f6a5549f58157c86461","patch":"@@ -350,7 +350,7 @@ under the License.\n     <activiti.version>5.17.0</activiti.version>\n \n     <slf4j.version>1.7.12</slf4j.version>\n-    <log4j.version>2.2</log4j.version>\n+    <log4j.version>2.3</log4j.version>\n     <disruptor.version>3.3.2</disruptor.version>\n \n     <commons-io.version>2.4</commons-io.version>"}]}