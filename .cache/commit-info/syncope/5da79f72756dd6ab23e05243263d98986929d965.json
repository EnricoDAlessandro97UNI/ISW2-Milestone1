{"sha":"5da79f72756dd6ab23e05243263d98986929d965","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVkYTc5ZjcyNzU2ZGQ2YWIyM2UwNTI0MzI2M2Q5ODk4NjkyOWQ5NjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-28T10:53:28Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-28T10:53:28Z"},"message":"[SYNCOPE-494] Only Wicket 7 was missing","tree":{"sha":"b26ab15191077e68d8ec0d6f63d16674aa51f244","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b26ab15191077e68d8ec0d6f63d16674aa51f244"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5da79f72756dd6ab23e05243263d98986929d965","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5da79f72756dd6ab23e05243263d98986929d965","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5da79f72756dd6ab23e05243263d98986929d965","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5da79f72756dd6ab23e05243263d98986929d965/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6cdae68327a00e8cbc435aeef77a71f7da023756","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6cdae68327a00e8cbc435aeef77a71f7da023756","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6cdae68327a00e8cbc435aeef77a71f7da023756"}],"stats":{"total":63,"additions":35,"deletions":28},"files":[{"sha":"3a923d5b133608ce27b0ec2feb2e8621f275d922","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/NonI18nPalette.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5da79f72756dd6ab23e05243263d98986929d965/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5da79f72756dd6ab23e05243263d98986929d965/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java?ref=5da79f72756dd6ab23e05243263d98986929d965","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import java.util.Collection;\n-import java.util.List;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n@@ -29,9 +28,9 @@\n     private static final long serialVersionUID = 2659070187837941889L;\n \n     public NonI18nPalette(final String id,\n-            final IModel<? extends List<? extends T>> model,\n+            final IModel<? extends Collection<T>> model,\n             final IModel<? extends Collection<? extends T>> choicesModel,\n-            final IChoiceRenderer<T> choiceRenderer, final int rows,\n+            final IChoiceRenderer<? super T> choiceRenderer, final int rows,\n             final boolean allowOrder, final boolean allowMoveAll) {\n \n         super(id, model, choicesModel, choiceRenderer, rows, allowOrder, allowMoveAll);"},{"sha":"250ce1905f4addb5a6fbbf953012f7bbcda3597c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SelectChoiceRenderer.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5da79f72756dd6ab23e05243263d98986929d965/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5da79f72756dd6ab23e05243263d98986929d965/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectChoiceRenderer.java?ref=5da79f72756dd6ab23e05243263d98986929d965","patch":"@@ -18,14 +18,18 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.IModel;\n \n public class SelectChoiceRenderer<T> implements IChoiceRenderer<T> {\n \n     private static final long serialVersionUID = -3242441544405909243L;\n \n     @Override\n-    public Object getDisplayValue(T obj) {\n+    public Object getDisplayValue(final T obj) {\n         if (obj instanceof SelectOption) {\n             return ((SelectOption) obj).getDisplayValue();\n         } else {\n@@ -34,7 +38,18 @@ public Object getDisplayValue(T obj) {\n     }\n \n     @Override\n-    public String getIdValue(T obj, int i) {\n+    public String getIdValue(final T obj, final int i) {\n         return obj.toString();\n     }\n+\n+    @Override\n+    public T getObject(final String id, final IModel<? extends List<? extends T>> choices) {\n+        return CollectionUtils.find(choices.getObject(), new Predicate<T>() {\n+\n+            @Override\n+            public boolean evaluate(final T object) {\n+                return id.equals(getIdValue(object, 0));\n+            }\n+        });\n+    }\n }"},{"sha":"3cd4557010961b5adce434d3823ee0365296a869","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SelectableRecorder.java","status":"modified","additions":14,"deletions":21,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5da79f72756dd6ab23e05243263d98986929d965/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5da79f72756dd6ab23e05243263d98986929d965/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java?ref=5da79f72756dd6ab23e05243263d98986929d965","patch":"@@ -74,7 +74,7 @@ protected void onBeforeRender() {\n      */\n     private void initIds() {\n         // construct the model string based on selection collection\n-        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+        IChoiceRenderer<? super T> renderer = getPalette().getChoiceRenderer();\n         StringBuilder modelStringBuffer = new StringBuilder();\n         Collection<T> modelCollection = getPalette().getModelCollection();\n         if (modelCollection == null) {\n@@ -93,7 +93,7 @@ private void initIds() {\n \n         // set model and update ids array\n         String modelString = modelStringBuffer.toString();\n-        setDefaultModel(new Model<String>(modelString));\n+        setDefaultModel(new Model<>(modelString));\n         updateIds(modelString);\n     }\n \n@@ -102,7 +102,7 @@ public T getSelectedItem() {\n             return null;\n         }\n \n-        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+        IChoiceRenderer<? super T> renderer = getPalette().getChoiceRenderer();\n \n         T selected = null;\n         for (T choice : getPalette().getChoices()) {\n@@ -115,17 +115,14 @@ public T getSelectedItem() {\n         return selected;\n     }\n \n-    /**\n-     * @return iterator over selected choices\n-     */\n     @Override\n-    public Iterator<T> getSelectedChoices() {\n-        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+    public List<T> getSelectedList() {\n+        IChoiceRenderer<? super T> renderer = getPalette().getChoiceRenderer();\n         if (ids.length == 0) {\n-            return Collections.<T>emptyList().iterator();\n+            return Collections.<T>emptyList();\n         }\n \n-        List<T> selected = new ArrayList<T>(ids.length);\n+        List<T> selected = new ArrayList<>(ids.length);\n         for (String id : ids) {\n             for (T choice : getPalette().getChoices()) {\n                 if (renderer.getIdValue(choice, 0).equals(id)) {\n@@ -134,22 +131,19 @@ public Iterator<T> getSelectedChoices() {\n                 }\n             }\n         }\n-        return selected.iterator();\n+        return selected;\n     }\n \n-    /**\n-     * @return iterator over unselected choices\n-     */\n     @Override\n-    public Iterator<T> getUnselectedChoices() {\n-        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+    public List<T> getUnselectedList() {\n+        IChoiceRenderer<? super T> renderer = getPalette().getChoiceRenderer();\n         Collection<? extends T> choices = getPalette().getChoices();\n \n         if (choices.size() - ids.length == 0) {\n-            return Collections.<T>emptyList().iterator();\n+            return Collections.<T>emptyList();\n         }\n \n-        List<T> unselected = new ArrayList<T>(Math.max(1, choices.size() - ids.length));\n+        List<T> unselected = new ArrayList<>(Math.max(1, choices.size() - ids.length));\n         for (T choice : choices) {\n             final String choiceId = renderer.getIdValue(choice, 0);\n             boolean selected = false;\n@@ -163,7 +157,7 @@ public Iterator<T> getUnselectedChoices() {\n                 unselected.add(choice);\n             }\n         }\n-        return unselected.iterator();\n+        return unselected;\n     }\n \n     @Override\n@@ -186,8 +180,7 @@ private void updateIds() {\n         updateIds(getValue());\n     }\n \n-    @Override\n-    protected void updateIds(final String value) {\n+    private void updateIds(final String value) {\n         if (Strings.isEmpty(value)) {\n             ids = EMPTY_IDS;\n         } else {"},{"sha":"ccb53f7302576bb0b76bf37bdf02890764635a15","filename":"pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5da79f72756dd6ab23e05243263d98986929d965/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5da79f72756dd6ab23e05243263d98986929d965/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=5da79f72756dd6ab23e05243263d98986929d965","patch":"@@ -378,8 +378,8 @@ under the License.\n     <highlightjs.version>8.4-4</highlightjs.version>\n     <codemirror.version>5.1</codemirror.version>\n     \n-    <wicket.version>6.19.0</wicket.version>\n-    <wicket-jqueryui.version>6.19.1</wicket-jqueryui.version>\n+    <wicket.version>7.0.0-M5</wicket.version>\n+    <wicket-jqueryui.version>7.0.0-M5</wicket-jqueryui.version>\n \n     <izpack.version>5.0.0-rc4</izpack.version>\n     <httpclient.version>4.3.6</httpclient.version>"}]}