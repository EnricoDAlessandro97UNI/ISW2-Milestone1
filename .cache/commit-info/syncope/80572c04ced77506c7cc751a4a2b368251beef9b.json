{"sha":"80572c04ced77506c7cc751a4a2b368251beef9b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgwNTcyYzA0Y2VkNzc1MDZjN2NjNzUxYTRhMmIzNjgyNTFiZWVmOWI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-13T11:43:01Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-13T11:43:01Z"},"message":"JPA PropertySet implementation for OSWorkflow\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246382 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"02658c1b8281ccf1fa011ea79307e77b499ccc9b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/02658c1b8281ccf1fa011ea79307e77b499ccc9b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/80572c04ced77506c7cc751a4a2b368251beef9b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80572c04ced77506c7cc751a4a2b368251beef9b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/80572c04ced77506c7cc751a4a2b368251beef9b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80572c04ced77506c7cc751a4a2b368251beef9b/comments","author":null,"committer":null,"parents":[{"sha":"5ebf611f10e09701f65fb82fa0d3ec580b97c1c5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ebf611f10e09701f65fb82fa0d3ec580b97c1c5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ebf611f10e09701f65fb82fa0d3ec580b97c1c5"}],"stats":{"total":822,"additions":777,"deletions":45},"files":[{"sha":"212f9712f9588a4f9c68239440e1bb0f693a4a0d","filename":"core/src/main/java/org/syncope/core/persistence/beans/OSWorkflowProperty.java","status":"added","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FOSWorkflowProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FOSWorkflowProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FOSWorkflowProperty.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,126 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.beans;\n+\n+import java.util.Date;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Lob;\n+import javax.persistence.Table;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n+import javax.persistence.UniqueConstraint;\n+\n+@Entity\n+@Table(name = \"os_propertyset\", uniqueConstraints =\n+@UniqueConstraint(columnNames = {\"workflowEntryId\", \"propertyKey\"}))\n+public class OSWorkflowProperty extends AbstractBaseBean {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+    @Column(nullable = false)\n+    private Long workflowEntryId;\n+    @Column(nullable = false)\n+    private String propertyKey;\n+    private Boolean booleanValue;\n+    private Integer intValue;\n+    private Long longValue;\n+    private Double doubleValue;\n+    private String stringValue;\n+    @Lob\n+    private String textValue;\n+    @Temporal(TemporalType.TIMESTAMP)\n+    private Date dateValue;\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public String getPropertyKey() {\n+        return propertyKey;\n+    }\n+\n+    public void setPropertyKey(String propertyKey) {\n+        this.propertyKey = propertyKey;\n+    }\n+\n+    public String getStringValue() {\n+        return stringValue;\n+    }\n+\n+    public void setStringValue(String stringValue) {\n+        this.stringValue = stringValue;\n+    }\n+\n+    public Long getWorkflowEntryId() {\n+        return workflowEntryId;\n+    }\n+\n+    public void setWorkflowEntryId(Long workflowEntryId) {\n+        this.workflowEntryId = workflowEntryId;\n+    }\n+\n+    public Date getDateValue() {\n+        return dateValue;\n+    }\n+\n+    public void setDateValue(Date dateValue) {\n+        this.dateValue = dateValue;\n+    }\n+\n+    public Boolean getBooleanValue() {\n+        return booleanValue;\n+    }\n+\n+    public void setBooleanValue(Boolean booleanValue) {\n+        this.booleanValue = booleanValue;\n+    }\n+\n+    public Double getDoubleValue() {\n+        return doubleValue;\n+    }\n+\n+    public void setDoubleValue(Double doubleValue) {\n+        this.doubleValue = doubleValue;\n+    }\n+\n+    public Integer getIntValue() {\n+        return intValue;\n+    }\n+\n+    public void setIntValue(Integer intValue) {\n+        this.intValue = intValue;\n+    }\n+\n+    public Long getLongValue() {\n+        return longValue;\n+    }\n+\n+    public void setLongValue(Long longValue) {\n+        this.longValue = longValue;\n+    }\n+\n+    public String getTextValue() {\n+        return textValue;\n+    }\n+\n+    public void setTextValue(String textValue) {\n+        this.textValue = textValue;\n+    }\n+}"},{"sha":"1ad05a37db355bddfc16fb2117096a102d185242","filename":"core/src/main/java/org/syncope/core/persistence/beans/SchemaMapping.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -87,10 +87,6 @@ public Long getId() {\n         return id;\n     }\n \n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-\n     public boolean isAccountid() {\n         return accountid;\n     }"},{"sha":"6476eb4d71715e8a380a527730799564883114fd","filename":"core/src/main/java/org/syncope/core/persistence/dao/OSWorkflowPropertyDAO.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FOSWorkflowPropertyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FOSWorkflowPropertyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FOSWorkflowPropertyDAO.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,35 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.dao;\n+\n+import java.util.List;\n+import org.syncope.core.persistence.beans.OSWorkflowProperty;\n+\n+public interface OSWorkflowPropertyDAO extends DAO {\n+\n+    OSWorkflowProperty find(Long id);\n+\n+    OSWorkflowProperty find(Long workflowEntryId, String propertyKey);\n+\n+    List<OSWorkflowProperty> findAll();\n+\n+    List<OSWorkflowProperty> findAll(Long workflowEntryId);\n+\n+    OSWorkflowProperty save(OSWorkflowProperty property);\n+\n+    void delete(Long id);\n+\n+    void delete(Long workflowEntryId, String propertyKey);\n+}"},{"sha":"0843e0c725423ec0a047a318839f82292e425485","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AbstractDAOImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -17,12 +17,17 @@\n import javax.persistence.EntityManager;\n import javax.persistence.PersistenceContext;\n import javax.persistence.PersistenceContextType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Configurable;\n import org.syncope.core.persistence.dao.DAO;\n+import org.syncope.core.workflow.JPAPropertySet;\n \n @Configurable\n public abstract class AbstractDAOImpl implements DAO {\n \n+    protected static final Logger log =\n+            LoggerFactory.getLogger(JPAPropertySet.class);\n     @PersistenceContext(type = PersistenceContextType.EXTENDED)\n     protected EntityManager entityManager;\n "},{"sha":"fbb74cd2d6a37f2f4e8f43ac754389a5ae4d7683","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/OSWorkflowPropertyDAOImpl.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FOSWorkflowPropertyDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FOSWorkflowPropertyDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FOSWorkflowPropertyDAOImpl.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,98 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.dao.impl;\n+\n+import java.util.List;\n+import javax.persistence.NoResultException;\n+import javax.persistence.Query;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.beans.OSWorkflowProperty;\n+import org.syncope.core.persistence.dao.OSWorkflowPropertyDAO;\n+\n+@Repository\n+public class OSWorkflowPropertyDAOImpl extends AbstractDAOImpl\n+        implements OSWorkflowPropertyDAO {\n+\n+    @Override\n+    public OSWorkflowProperty find(Long id) {\n+        return entityManager.find(OSWorkflowProperty.class, id);\n+    }\n+\n+    @Override\n+    public OSWorkflowProperty find(Long workflowEntryId, String propertyKey) {\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM OSWorkflowProperty e \"\n+                + \"WHERE e.workflowEntryId=:workflowEntryId \"\n+                + \"AND e.propertyKey=:propertyKey\");\n+        query.setParameter(\"workflowEntryId\", workflowEntryId);\n+        query.setParameter(\"propertyKey\", propertyKey);\n+\n+        OSWorkflowProperty result = null;\n+        try {\n+            result = (OSWorkflowProperty) query.getSingleResult();\n+        } catch (NoResultException e) {\n+        } catch (Throwable t) {\n+            log.error(\"Unexpected exception\", t);\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public List<OSWorkflowProperty> findAll() {\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM OSWorkflowProperty e\");\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public List<OSWorkflowProperty> findAll(Long workflowEntryId) {\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM OSWorkflowProperty e \"\n+                + \"WHERE e.workflowEntryId=:workflowEntryId\");\n+        query.setParameter(\"workflowEntryId\", workflowEntryId);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    @Transactional\n+    public OSWorkflowProperty save(OSWorkflowProperty property) {\n+        return entityManager.merge(property);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void delete(Long id) {\n+        OSWorkflowProperty osWorkflowProperty = find(id);\n+        if (osWorkflowProperty == null) {\n+            return;\n+        }\n+\n+        entityManager.remove(osWorkflowProperty);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void delete(Long workflowEntryId, String propertyKey) {\n+        OSWorkflowProperty osWorkflowProperty =\n+                find(workflowEntryId, propertyKey);\n+        if (osWorkflowProperty == null) {\n+            return;\n+        }\n+\n+        entityManager.remove(osWorkflowProperty);\n+    }\n+}"},{"sha":"b0b318680db4abb52e942c4e6ceca12276a162e7","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -183,23 +183,16 @@ public UserTO create(HttpServletRequest request,\n         }\n         syncopeUser.setWorkflowEntryId(workflowId);\n         syncopeUser.setCreationTime(new Date());\n-        syncopeUser.generateToken(\n-                Integer.parseInt(syncopeConfigurationDAO.find(\n-                \"token.length\").getConfValue()),\n-                Integer.parseInt(syncopeConfigurationDAO.find(\n-                \"token.expireTime\").getConfValue()));\n         syncopeUser = syncopeUserDAO.save(syncopeUser);\n-        userTO = userDataBinder.getUserTO(syncopeUser);\n \n         Map<String, Object> inputs = new HashMap<String, Object>();\n         inputs.put(Constants.SYNCOPE_USER, syncopeUser);\n-        inputs.put(Constants.TOKEN, userTO.getToken());\n         inputs.put(Constants.MAIL_FROM,\n                 syncopeConfigurationDAO.find(\n                 \"activate.email.from\").getConfValue());\n         inputs.put(Constants.MAIL_SUBJECT,\n                 syncopeConfigurationDAO.find(\n-                \"activate.email.from\").getConfValue());\n+                \"activate.email.subject\").getConfValue());\n         StringBuffer baseRequestURL = request.getRequestURL();\n         inputs.put(Constants.BASE_REQUEST_URL,\n                 baseRequestURL.substring(0,\n@@ -223,9 +216,10 @@ public UserTO create(HttpServletRequest request,\n                 return throwWorkflowException(e, response);\n             }\n         }\n+        syncopeUser = syncopeUserDAO.save(syncopeUser);\n \n         response.setStatus(HttpServletResponse.SC_CREATED);\n-        return userTO;\n+        return userDataBinder.getUserTO(syncopeUser);\n     }\n \n     @Transactional"},{"sha":"5914e62e467ec493199b3b57da11a8f59fb0cf48","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -106,6 +106,8 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n         // 0. password\n         // TODO: check password policies\n         if (userTO.getPassword() == null || userTO.getPassword().length() == 0) {\n+            log.error(\"No password provided\");\n+\n             invalidPassword.addElement(\"Null password\");\n             compositeErrorException.addException(invalidPassword);\n         } else {"},{"sha":"9cdba8688318442dad067787f4cc143cd2417a50","filename":"core/src/main/java/org/syncope/core/workflow/BaseCleanupAfterEmail.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseCleanupAfterEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseCleanupAfterEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseCleanupAfterEmail.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,35 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.util.Map;\n+\n+public class BaseCleanupAfterEmail extends OSWorkflowComponent\n+        implements FunctionProvider {\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        ps.remove(Constants.MAIL_TO);\n+        ps.remove(Constants.MAIL_FROM);\n+        ps.remove(Constants.MAIL_SUBJECT);\n+        ps.remove(Constants.MAIL_TEMPLATE_HTML);\n+        ps.remove(Constants.MAIL_TEMPLATE_TXT);\n+    }\n+}"},{"sha":"c9d75b6792a601cae797359fb298499fcd1d132f","filename":"core/src/main/java/org/syncope/core/workflow/BaseSendEmail.java","status":"modified","additions":32,"deletions":7,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FBaseSendEmail.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -24,6 +24,7 @@\n import org.apache.commons.mail.Email;\n import org.apache.commons.mail.EmailException;\n import org.apache.commons.mail.HtmlEmail;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.SyncopeConfigurationDAO;\n \n public class BaseSendEmail extends OSWorkflowComponent\n@@ -54,7 +55,7 @@ protected String getEmailBody(String urlPrefix, String template,\n             while ((data = reader.readLine()) != null) {\n                 templateContent.append(data);\n             }\n-            \n+\n             reader.close();\n         } catch (Exception e) {\n             log.error(\"While reading mail template \" + template, e);\n@@ -64,17 +65,17 @@ protected String getEmailBody(String urlPrefix, String template,\n                 ? fallback : templateContent.toString();\n     }\n \n-    protected HtmlEmail getHtmlEmail(Map transientVars)\n+    protected HtmlEmail getHtmlEmail(PropertySet ps, String token)\n             throws EmailException, WorkflowException {\n \n         HtmlEmail email = new HtmlEmail();\n         email.setHostName(\n                 syncopeConfigurationDAO.find(\"smtp.host\").getConfValue());\n-        if (transientVars.get(Constants.MAIL_TO) != null) {\n-            email.addTo((String) transientVars.get(Constants.MAIL_TO));\n+        if (ps.getString(Constants.MAIL_TO) != null) {\n+            email.addTo(ps.getString(Constants.MAIL_TO));\n         }\n-        email.setFrom((String) transientVars.get(Constants.MAIL_FROM));\n-        email.setSubject((String) transientVars.get(Constants.MAIL_SUBJECT));\n+        email.setFrom(ps.getString(Constants.MAIL_FROM));\n+        email.setSubject(ps.getString(Constants.MAIL_SUBJECT));\n \n         return email;\n     }\n@@ -83,9 +84,33 @@ protected HtmlEmail getHtmlEmail(Map transientVars)\n     public void execute(Map transientVars, Map args, PropertySet ps)\n             throws WorkflowException {\n \n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+\n+        if (transientVars.get(Constants.MAIL_TO) != null) {\n+            ps.setString(Constants.MAIL_TO,\n+                    (String) transientVars.get(Constants.MAIL_TO));\n+        }\n+        if (transientVars.get(Constants.MAIL_FROM) != null) {\n+            ps.setString(Constants.MAIL_FROM,\n+                    (String) transientVars.get(Constants.MAIL_FROM));\n+        }\n+        if (transientVars.get(Constants.MAIL_SUBJECT) != null) {\n+            ps.setString(Constants.MAIL_SUBJECT,\n+                    (String) transientVars.get(Constants.MAIL_SUBJECT));\n+        }\n+        if (transientVars.get(Constants.MAIL_TEMPLATE_HTML) != null) {\n+            ps.setString(Constants.MAIL_TEMPLATE_HTML,\n+                    (String) transientVars.get(Constants.MAIL_TEMPLATE_HTML));\n+        }\n+        if (transientVars.get(Constants.MAIL_TEMPLATE_TXT) != null) {\n+            ps.setString(Constants.MAIL_TEMPLATE_TXT,\n+                    (String) transientVars.get(Constants.MAIL_TEMPLATE_TXT));\n+        }\n+\n         Email email = null;\n         try {\n-            email = getHtmlEmail(transientVars);\n+            email = getHtmlEmail(ps, syncopeUser.getToken());\n             email.send();\n         } catch (EmailException e) {\n             log.error(\"Could not send e-mail \" + email, e);"},{"sha":"aa5b6b3627aa954328bdba82400080c787b35324","filename":"core/src/main/java/org/syncope/core/workflow/GenerateToken.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,52 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.util.Map;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.dao.SyncopeConfigurationDAO;\n+\n+public class GenerateToken extends OSWorkflowComponent\n+        implements FunctionProvider {\n+\n+    protected SyncopeConfigurationDAO syncopeConfigurationDAO;\n+\n+    public GenerateToken() {\n+        syncopeConfigurationDAO =\n+                (SyncopeConfigurationDAO) context.getBean(\n+                \"syncopeConfigurationDAOImpl\");\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+\n+        syncopeUser.generateToken(\n+                Integer.parseInt(syncopeConfigurationDAO.find(\n+                \"token.length\").getConfValue()),\n+                Integer.parseInt(syncopeConfigurationDAO.find(\n+                \"token.expireTime\").getConfValue()));\n+\n+        transientVars.put(Constants.SYNCOPE_USER, syncopeUser);\n+    }\n+}"},{"sha":"07b21cc0796b1214d0f3e3a928969201f3aa3ba8","filename":"core/src/main/java/org/syncope/core/workflow/IsNotValidToken.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FIsNotValidToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FIsNotValidToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FIsNotValidToken.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,31 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.Condition;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.util.Map;\n+\n+public class IsNotValidToken extends IsValidToken\n+        implements Condition {\n+\n+    @Override\n+    public boolean passesCondition(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        return !super.passesCondition(transientVars, args, ps);\n+    }\n+}"},{"sha":"d5a6b22a38e26c2f633785b82691d46c3738635a","filename":"core/src/main/java/org/syncope/core/workflow/JPAPropertySet.java","status":"added","additions":206,"deletions":0,"changes":206,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FJPAPropertySet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FJPAPropertySet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FJPAPropertySet.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,206 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.module.propertyset.AbstractPropertySet;\n+import com.opensymphony.module.propertyset.PropertyException;\n+import com.opensymphony.module.propertyset.PropertySet;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.Set;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.beans.OSWorkflowProperty;\n+import org.syncope.core.persistence.dao.OSWorkflowPropertyDAO;\n+import org.w3c.dom.Document;\n+\n+/**\n+ * The JPAPropertySet is a PropertySet implementation that\n+ * will store any primitive or object via JPA.\n+ *\n+ * @see com.opensymphony.module.propertyset.PropertySet\n+ */\n+public class JPAPropertySet extends AbstractPropertySet {\n+\n+    protected static final Logger log =\n+            LoggerFactory.getLogger(JPAPropertySet.class);\n+    private OSWorkflowPropertyDAO osWorkflowPropertyDAO;\n+    private long workflowEntryId;\n+\n+    @Override\n+    public void init(Map config, Map args) {\n+        super.init(config, args);\n+\n+        workflowEntryId = (Long) args.get(\"entryId\");\n+        osWorkflowPropertyDAO =\n+                (OSWorkflowPropertyDAO) args.get(\"osWorkflowPropertyDAO\");\n+    }\n+\n+    @Override\n+    public Collection getKeys(String prefix, int i)\n+            throws PropertyException {\n+\n+        List<OSWorkflowProperty> properties =\n+                osWorkflowPropertyDAO.findAll(workflowEntryId);\n+        Set<String> keys = new HashSet<String>();\n+        for (OSWorkflowProperty property : properties) {\n+            if (prefix != null\n+                    && property.getPropertyKey().startsWith(prefix)) {\n+\n+                keys.add(property.getPropertyKey());\n+            }\n+        }\n+        return keys;\n+    }\n+\n+    @Override\n+    public boolean exists(String key) throws PropertyException {\n+        return osWorkflowPropertyDAO.find(workflowEntryId, key) != null;\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void remove(String string) throws PropertyException {\n+        osWorkflowPropertyDAO.delete(workflowEntryId, string);\n+    }\n+\n+    @Override\n+    protected void setImpl(int type, String key, Object value)\n+            throws PropertyException {\n+\n+        OSWorkflowProperty property = new OSWorkflowProperty();\n+        property.setPropertyKey(key);\n+        property.setWorkflowEntryId(workflowEntryId);\n+\n+        try {\n+            switch (type) {\n+                case BOOLEAN:\n+                    property.setBooleanValue((Boolean) value);\n+                    break;\n+\n+                case INT:\n+                    property.setIntValue((Integer) value);\n+                    break;\n+\n+                case LONG:\n+                    property.setLongValue((Long) value);\n+                    break;\n+\n+                case DOUBLE:\n+                    property.setDoubleValue((Double) value);\n+                    break;\n+\n+                case STRING:\n+                    property.setStringValue((String) value);\n+                    break;\n+\n+                case TEXT:\n+                    property.setTextValue((String) value);\n+                    break;\n+\n+                case DATE:\n+                    property.setDateValue((Date) value);\n+                    break;\n+\n+                case XML:\n+                    break;\n+                case DATA:\n+                    break;\n+                case PROPERTIES:\n+                    break;\n+                case OBJECT:\n+                    break;\n+            }\n+        } catch (Throwable t) {\n+            log.error(\"While setting property value\", t);\n+            throw new PropertyException(t.getMessage());\n+        }\n+\n+        osWorkflowPropertyDAO.save(property);\n+    }\n+\n+    @Override\n+    protected Object get(int type, String key) throws PropertyException {\n+        OSWorkflowProperty property =\n+                osWorkflowPropertyDAO.find(workflowEntryId, key);\n+\n+        Object result = null;\n+        switch (type) {\n+            case BOOLEAN:\n+                result = property.getBooleanValue();\n+                break;\n+\n+            case INT:\n+                result = property.getIntValue();\n+                break;\n+\n+            case LONG:\n+                result = property.getLongValue();\n+                break;\n+\n+            case DOUBLE:\n+                result = property.getDoubleValue();\n+                break;\n+\n+            case STRING:\n+                result = property.getStringValue();\n+                break;\n+\n+            case TEXT:\n+                result = property.getTextValue();\n+                break;\n+\n+            case DATE:\n+                result = property.getDateValue();\n+                break;\n+\n+            case XML:\n+                break;\n+            case DATA:\n+                break;\n+            case PROPERTIES:\n+                break;\n+            case OBJECT:\n+                break;\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public int getType(String key) throws PropertyException {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public Object getObject(String key) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public Properties getProperties(String key) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public Document getXML(String key) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+}"},{"sha":"1898916f8372007c45a81515bff0df9419c5c624","filename":"core/src/main/java/org/syncope/core/workflow/PropertySetDelegateImpl.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FPropertySetDelegateImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FPropertySetDelegateImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FPropertySetDelegateImpl.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,44 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.module.propertyset.PropertySetManager;\n+import com.opensymphony.workflow.util.PropertySetDelegate;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.syncope.core.persistence.dao.OSWorkflowPropertyDAO;\n+\n+public class PropertySetDelegateImpl implements PropertySetDelegate {\n+\n+    private OSWorkflowPropertyDAO osWorkflowPropertyDAO;\n+\n+    @Autowired\n+    public PropertySetDelegateImpl(\n+            OSWorkflowPropertyDAO osWorkflowPropertyDAO) {\n+\n+        this.osWorkflowPropertyDAO = osWorkflowPropertyDAO;\n+    }\n+\n+    @Override\n+    public PropertySet getPropertySet(long entryId) {\n+        Map<String, Object> args = new HashMap<String, Object>();\n+        args.put(\"entryId\", Long.valueOf(entryId));\n+        args.put(\"osWorkflowPropertyDAO\", osWorkflowPropertyDAO);\n+\n+        return PropertySetManager.getInstance(\"jpa\", args);\n+    }\n+}"},{"sha":"6b141927a8beec87b74e956f05a7584b60694f4e","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/CleanupAfterEmail.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCleanupAfterEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCleanupAfterEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCleanupAfterEmail.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,34 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.util.Map;\n+import org.syncope.core.workflow.BaseCleanupAfterEmail;\n+import org.syncope.core.workflow.Constants;\n+\n+public class CleanupAfterEmail extends BaseCleanupAfterEmail {\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        super.execute(transientVars, args, ps);\n+\n+        ps.remove(\"userId\");\n+        ps.remove(Constants.BASE_REQUEST_URL);\n+    }\n+}"},{"sha":"622c2adc3597e5ff719d356c1099cc593daae2c3","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/SendEmail.java","status":"modified","additions":32,"deletions":12,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendEmail.java?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -14,27 +14,25 @@\n  */\n package org.syncope.core.workflow.prcsiam;\n \n+import com.opensymphony.module.propertyset.PropertySet;\n import com.opensymphony.workflow.WorkflowException;\n import java.io.UnsupportedEncodingException;\n import java.net.URLEncoder;\n import java.util.Map;\n import org.apache.commons.mail.EmailException;\n import org.apache.commons.mail.HtmlEmail;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.SyncopeConfiguration;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.workflow.*;\n \n public class SendEmail extends BaseSendEmail {\n \n     @Override\n-    protected HtmlEmail getHtmlEmail(Map transientVars)\n+    protected HtmlEmail getHtmlEmail(PropertySet ps, String token)\n             throws EmailException, WorkflowException {\n \n-        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n-                Constants.SYNCOPE_USER);\n-\n-        String urlPrefix =\n-                (String) transientVars.get(Constants.BASE_REQUEST_URL)\n+        String urlPrefix = ps.getString(Constants.BASE_REQUEST_URL)\n                 + Constants.MAILTEMPLATES_URL;\n         String urlSuffix = \"\";\n         try {\n@@ -43,24 +41,46 @@ protected HtmlEmail getHtmlEmail(Map transientVars)\n             if (conf != null) {\n                 urlSuffix = \".jsp?confirmationLink=\"\n                         + conf.getConfValue()\n-                        + \"?token=\" + URLEncoder.encode(\n-                        syncopeUser.getToken(), \"UTF-8\");\n+                        + \"?token=\" + URLEncoder.encode(token, \"UTF-8\");\n             }\n         } catch (UnsupportedEncodingException e) {\n             log.error(\"Unexpected exception\", e);\n         }\n \n-        HtmlEmail email = super.getHtmlEmail(transientVars);\n-        email.addTo(Utils.getUserId(syncopeUser));\n+        HtmlEmail email = super.getHtmlEmail(ps, token);\n+        email.addTo(ps.getString(\"userId\"));\n         email.setHtmlMsg(getEmailBody(urlPrefix,\n-                (String) transientVars.get(Constants.MAIL_TEMPLATE_HTML),\n+                ps.getString(Constants.MAIL_TEMPLATE_HTML),\n                 urlSuffix,\n                 urlSuffix.substring(0, urlSuffix.indexOf('=') + 1)));\n         email.setTextMsg(getEmailBody(urlPrefix,\n-                (String) transientVars.get(Constants.MAIL_TEMPLATE_TXT),\n+                ps.getString(Constants.MAIL_TEMPLATE_TXT),\n                 urlSuffix,\n                 urlSuffix.substring(0, urlSuffix.indexOf('=') + 1)));\n \n         return email;\n     }\n+\n+    @Override\n+    @Transactional\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        if (transientVars.get(Constants.SYNCOPE_USER) != null\n+                && !ps.exists(\"userId\")) {\n+\n+            SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                    Constants.SYNCOPE_USER);\n+\n+            ps.setString(\"userId\", Utils.getUserId(syncopeUser));\n+        }\n+        if (transientVars.get(Constants.BASE_REQUEST_URL) != null\n+                && !ps.exists(Constants.BASE_REQUEST_URL)) {\n+\n+            ps.setString(Constants.BASE_REQUEST_URL,\n+                    (String) transientVars.get(Constants.BASE_REQUEST_URL));\n+        }\n+\n+        super.execute(transientVars, args, ps);\n+    }\n }"},{"sha":"4000faa128d410ca71d4c81c9116d4a3651b7ef6","filename":"core/src/main/resources/AMConfig.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2FAMConfig.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2FAMConfig.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FAMConfig.properties?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -20,11 +20,11 @@ com.iplanet.am.server.protocol=http\n com.iplanet.am.server.host=localhost\n com.iplanet.am.server.port=8080\n com.iplanet.am.services.deploymentDescriptor=openam\n-com.iplanet.am.naming.url=<%OPENAM_ADDRESS%>/openam/namingservice\n+com.iplanet.am.naming.url=http://localhost:8080/openam/namingservice\n com.sun.identity.agents.app.username=amadmin\n com.iplanet.am.service.password=password\n com.sun.identity.agents.notification.enabled=false\n-com.iplanet.am.notification.url=<%OPENAM_ADDRESS%>/openam/notificationservice\n+com.iplanet.am.notification.url=http://localhost:8080/openam/notificationservice\n \n am.encryption.pwd=\n com.sun.identity.client.encryptionKey="},{"sha":"3077c279fe7cd41f49859f1c7b392f6856a2f801","filename":"core/src/main/resources/META-INF/propertyset.xml","status":"added","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpropertyset.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpropertyset.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fpropertyset.xml?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<propertysets>\n+    <propertyset name=\"jpa\" class=\"org.syncope.core.workflow.JPAPropertySet\"/>\n+</propertysets>"},{"sha":"982f84af84a8902866595ef01501b8c7699c4e4d","filename":"core/src/main/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -45,7 +45,7 @@\n     <UserSchema name=\"promoThirdPartyAuth\" type=\"Boolean\" virtual=\"false\"\n                 mandatory=\"true\" multivalue=\"false\" uniquevalue=\"false\"/>\n     <UserSchema name=\"type\" type=\"String\" virtual=\"false\"\n-                mandatory=\"true\" multivalue=\"false\" uniquevalue=\"false\"/>\n+                mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"/>\n \n     <UserDerivedSchema name=\"username\" expression=\"firstname + '.' + surname\"/>\n "},{"sha":"c46d72b2d3cf90e2fca2c237fa4eefc83dedbd5d","filename":"core/src/main/resources/userWorkflow.xml","status":"modified","additions":34,"deletions":9,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -47,9 +47,14 @@\n             </pre-functions>\n             <actions>\n                 <action name=\"create\" id=\"1001\">\n+                    <pre-functions>\n+                        <function type=\"class\">\n+                            <arg name=\"class.name\">org.syncope.core.workflow.GenerateToken</arg>\n+                        </function>\n+                    </pre-functions>\n                     <results>\n                         <result old-status=\"creationRequest\" status=\"active\" step=\"3\">\n-                            <conditions type=\"AND\">\n+                            <conditions>\n                                 <condition type=\"class\">\n                                     <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.IsMobileApplication</arg>\n                                 </condition>\n@@ -89,7 +94,7 @@\n                 <action name=\"activate\" id=\"2001\">\n                     <results>\n                         <result old-status=\"doubleOptIn\" status=\"active\" step=\"3\">\n-                            <conditions type=\"AND\">\n+                            <conditions>\n                                 <condition type=\"class\">\n                                     <arg name=\"class.name\">org.syncope.core.workflow.IsValidToken</arg>\n                                 </condition>\n@@ -98,6 +103,26 @@\n                                 <function type=\"class\">\n                                     <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreActivationDate</arg>\n                                 </function>\n+                                <function type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.CleanupAfterEmail</arg>\n+                                </function>\n+                            </post-functions>\n+                        </result>\n+                        <result old-status=\"doubleOptIn\" status=\"doubleOptIn\" step=\"2\">\n+                            <conditions>\n+                                <condition type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.IsNotValidToken</arg>\n+                                </condition>\n+                            </conditions>\n+                            <pre-functions>\n+                                <function type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.GenerateToken</arg>\n+                                </function>\n+                            </pre-functions>\n+                            <post-functions>\n+                                <function type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.SendEmail</arg>\n+                                </function>\n                             </post-functions>\n                         </result>\n                         <unconditional-result old-status=\"doubleOptIn\" status=\"doubleOptIn\" step=\"2\"/>\n@@ -116,32 +141,32 @@\n                 </function>\n             </pre-functions>\n             <actions>\n-                <action name=\"subscribe\" id=\"301\">\n+                <action name=\"subscribe\" id=\"3001\">\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n                     </results>\n                 </action>\n-                <action name=\"unsubscribe\" id=\"302\">\n+                <action name=\"unsubscribe\" id=\"3002\">\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n                     </results>\n                 </action>\n-                <action name=\"update\" id=\"303\">\n+                <action name=\"update\" id=\"3003\">\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n                     </results>\n                 </action>\n-                <action name=\"passwordReset\" id=\"304\">\n+                <action name=\"passwordReset\" id=\"3004\">\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n                     </results>\n                 </action>\n-                <action name=\"suspend\" id=\"305\">\n+                <action name=\"suspend\" id=\"3005\">\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"suspended\" step=\"4\"/>\n                     </results>\n                 </action>\n-                <action name=\"delete\" id=\"306\">\n+                <action name=\"delete\" id=\"3006\">\n                     <results>\n                         <unconditional-result old-status=\"active\" status=\"deleted\" step=\"5\"/>\n                     </results>\n@@ -155,7 +180,7 @@\n                 </function>\n             </pre-functions>\n             <actions>\n-                <action name=\"reactivate\" id=\"401\">\n+                <action name=\"reactivate\" id=\"4001\">\n                     <results>\n                         <unconditional-result old-status=\"suspended\" status=\"active\" step=\"3\"/>\n                     </results>"},{"sha":"d658ee0cf70955dcdf7e734a99a35427fcb41e52","filename":"core/src/main/resources/workflowContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80572c04ced77506c7cc751a4a2b368251beef9b/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=80572c04ced77506c7cc751a4a2b368251beef9b","patch":"@@ -20,7 +20,7 @@\n     <bean id=\"workflowStore\" class=\"org.syncope.core.workflow.SpringHibernateJPAWorkflowStore\">\n         <property name=\"propertySetDelegate\">\n             <bean id=\"propertySetDelegate\"\n-                  class=\"com.opensymphony.workflow.util.PropertySetDelegateImpl\"/>\n+                  class=\"org.syncope.core.workflow.PropertySetDelegateImpl\"/>\n         </property>\n     </bean>\n "}]}