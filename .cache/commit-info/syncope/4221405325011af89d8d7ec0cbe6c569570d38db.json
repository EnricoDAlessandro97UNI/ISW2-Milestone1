{"sha":"4221405325011af89d8d7ec0cbe6c569570d38db","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQyMjE0MDUzMjUwMTFhZjg5ZDhkN2VjMGNiZTZjNTY5NTcwZDM4ZGI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-02T11:11:46Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-02T11:11:54Z"},"message":"[SYNCOPE-962] Upgrade to Wicket 7.6.0","tree":{"sha":"9acfa490f1b10d68dc3f60513dafa82ce0ede4bd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9acfa490f1b10d68dc3f60513dafa82ce0ede4bd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4221405325011af89d8d7ec0cbe6c569570d38db","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4221405325011af89d8d7ec0cbe6c569570d38db","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4221405325011af89d8d7ec0cbe6c569570d38db","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4221405325011af89d8d7ec0cbe6c569570d38db/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4ccc1c404c4492084fecd3fe03e46feb8c56ec8e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ccc1c404c4492084fecd3fe03e46feb8c56ec8e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4ccc1c404c4492084fecd3fe03e46feb8c56ec8e"}],"stats":{"total":167,"additions":33,"deletions":134},"files":[{"sha":"2335b23deace7c9216330c0dc0573668469630f1","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4221405325011af89d8d7ec0cbe6c569570d38db/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4221405325011af89d8d7ec0cbe6c569570d38db/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=4221405325011af89d8d7ec0cbe6c569570d38db","patch":"@@ -34,7 +34,6 @@\n import org.apache.syncope.client.console.topology.Topology;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.protocol.ws.api.SyncopeWebSocketBehavior;\n import org.apache.syncope.client.console.widgets.ApprovalsWidget;\n import org.apache.syncope.client.console.widgets.JobWidget;\n import org.apache.syncope.client.console.widgets.ReconciliationWidget;\n@@ -61,6 +60,7 @@\n import org.apache.wicket.markup.html.link.Link;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n import org.apache.wicket.protocol.ws.api.message.ConnectedMessage;\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -88,7 +88,7 @@ public BasePage(final PageParameters parameters) {\n         super(parameters);\n \n         // Native WebSocket\n-        add(new SyncopeWebSocketBehavior() {\n+        add(new WebSocketBehavior() {\n \n             private static final long serialVersionUID = 3109256773218160485L;\n "},{"sha":"634633238c0b8555e398bccf7a6c964b9a243a50","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyWebSocketBehavior.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4221405325011af89d8d7ec0cbe6c569570d38db/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4221405325011af89d8d7ec0cbe6c569570d38db/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java?ref=4221405325011af89d8d7ec0cbe6c569570d38db","patch":"@@ -28,18 +28,18 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.wicket.protocol.ws.api.SyncopeWebSocketBehavior;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.wicket.Application;\n import org.apache.wicket.Session;\n import org.apache.wicket.ThreadContext;\n+import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n import org.apache.wicket.protocol.ws.api.WebSocketRequestHandler;\n import org.apache.wicket.protocol.ws.api.message.TextMessage;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class TopologyWebSocketBehavior extends SyncopeWebSocketBehavior {\n+public class TopologyWebSocketBehavior extends WebSocketBehavior {\n \n     private static final long serialVersionUID = -1653665542635275551L;\n "},{"sha":"b104c77fb224c9e4d8e220c11d0878ea5ef13af3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/protocol/ws/api/SyncopeWebSocketBehavior.java","status":"removed","additions":0,"deletions":93,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4ccc1c404c4492084fecd3fe03e46feb8c56ec8e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fprotocol%2Fws%2Fapi%2FSyncopeWebSocketBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4ccc1c404c4492084fecd3fe03e46feb8c56ec8e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fprotocol%2Fws%2Fapi%2FSyncopeWebSocketBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fprotocol%2Fws%2Fapi%2FSyncopeWebSocketBehavior.java?ref=4ccc1c404c4492084fecd3fe03e46feb8c56ec8e","patch":"@@ -1,93 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.protocol.ws.api;\n-\n-import java.util.Map;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.MetaDataKey;\n-import org.apache.wicket.core.request.handler.IPartialPageRequestHandler;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.JavaScriptHeaderItem;\n-import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n-import org.apache.wicket.protocol.ws.WebSocketSettings;\n-import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n-import org.apache.wicket.protocol.ws.api.WicketWebSocketJQueryResourceReference;\n-import org.apache.wicket.request.cycle.RequestCycle;\n-import org.apache.wicket.util.lang.Args;\n-import org.apache.wicket.util.lang.Generics;\n-import org.apache.wicket.util.template.PackageTextTemplate;\n-\n-/**\n- * Temporary work-around class for WICKET-6262.\n- */\n-public abstract class SyncopeWebSocketBehavior extends WebSocketBehavior {\n-\n-    private static final long serialVersionUID = -2137694236966234985L;\n-\n-    private static final MetaDataKey<Object> IS_JAVA_SCRIPT_CONTRIBUTED = new MetaDataKey<Object>() {\n-\n-        private static final long serialVersionUID = 3109256773218160485L;\n-\n-    };\n-\n-    @Override\n-    public void renderHead(final Component component, final IHeaderResponse response) {\n-        RequestCycle cycle = component.getRequestCycle();\n-        if (cycle.find(IPartialPageRequestHandler.class) == null) {\n-            Object contributed = cycle.getMetaData(IS_JAVA_SCRIPT_CONTRIBUTED);\n-            if (contributed == null) {\n-                cycle.setMetaData(IS_JAVA_SCRIPT_CONTRIBUTED, new Object());\n-\n-                response.render(JavaScriptHeaderItem.forReference(WicketWebSocketJQueryResourceReference.get()));\n-\n-                PackageTextTemplate webSocketSetupTemplate =\n-                        new PackageTextTemplate(WicketWebSocketJQueryResourceReference.class,\n-                                \"res/js/wicket-websocket-setup.js.tmpl\");\n-\n-                Map<String, Object> variables = Generics.newHashMap();\n-\n-                // set falsy JS values for the non-used parameter\n-                int pageId = component.getPage().getPageId();\n-                variables.put(\"pageId\", pageId);\n-                variables.put(\"resourceName\", \"\");\n-\n-                WebSocketSettings webSocketSettings = WebSocketSettings.Holder.get(component.getApplication());\n-\n-                CharSequence baseUrl = getBaseUrl(webSocketSettings);\n-                Args.notNull(baseUrl, \"baseUrl\");\n-                variables.put(\"baseUrl\", baseUrl);\n-\n-                CharSequence contextPath = getContextPath(webSocketSettings);\n-                Args.notNull(contextPath, \"contextPath\");\n-                variables.put(\"contextPath\", contextPath);\n-\n-                // preserve the application name for JSR356 based impl\n-                variables.put(\"applicationName\", component.getApplication().getName());\n-\n-                CharSequence filterPrefix = getFilterPrefix(webSocketSettings);\n-                Args.notNull(filterPrefix, \"filterPrefix\");\n-                variables.put(\"filterPrefix\", filterPrefix);\n-\n-                String webSocketSetupScript = webSocketSetupTemplate.asString(variables);\n-\n-                response.render(OnDomReadyHeaderItem.forScript(webSocketSetupScript));\n-            }\n-        }\n-    }\n-}"},{"sha":"ab245c744e8da8d41501d78d9b2a2e6b2ed64bbd","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobActionPanel.java","status":"modified","additions":28,"deletions":36,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4221405325011af89d8d7ec0cbe6c569570d38db/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4221405325011af89d8d7ec0cbe6c569570d38db/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java?ref=4221405325011af89d8d7ec0cbe6c569570d38db","patch":"@@ -70,53 +70,45 @@ public JobActionPanel(final String id, final JobTO jobTO, final JobWidget widget\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n+                switch (jobTO.getType()) {\n+                    case NOTIFICATION:\n+                        break;\n \n-                if (null != jobTO.getType()) {\n-                    switch (jobTO.getType()) {\n+                    case REPORT:\n+                        ReportTO reportTO = new ReportRestClient().read(jobTO.getRefKey());\n \n-                        case NOTIFICATION:\n-                            break;\n+                        ReportWizardBuilder rwb = new ReportWizardBuilder(reportTO, pageRef);\n+                        rwb.setEventSink(JobActionPanel.this);\n \n-                        case REPORT:\n+                        target.add(jobModal.setContent(rwb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n \n-                            final ReportTO reportTO = new ReportRestClient().read(jobTO.getRefKey());\n+                        jobModal.header(new StringResourceModel(\n+                                \"any.edit\",\n+                                this,\n+                                new Model<>(reportTO)));\n \n-                            final ReportWizardBuilder rwb = new ReportWizardBuilder(reportTO, pageRef);\n-                            rwb.setEventSink(JobActionPanel.this);\n+                        jobModal.show(true);\n+                        break;\n \n-                            target.add(jobModal.setContent(rwb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n+                    case TASK:\n+                        SchedTaskTO schedTaskTO = new TaskRestClient().\n+                                readSchedTask(SchedTaskTO.class, jobTO.getRefKey());\n \n-                            jobModal.header(new StringResourceModel(\n-                                    \"any.edit\",\n-                                    this,\n-                                    new Model<>(reportTO)));\n+                        SchedTaskWizardBuilder<SchedTaskTO> swb = new SchedTaskWizardBuilder<>(schedTaskTO, pageRef);\n+                        swb.setEventSink(JobActionPanel.this);\n \n-                            jobModal.show(true);\n+                        target.add(jobModal.setContent(swb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n \n-                            break;\n+                        jobModal.header(new StringResourceModel(\n+                                \"any.edit\",\n+                                this,\n+                                new Model<>(schedTaskTO)));\n \n-                        case TASK:\n+                        jobModal.show(true);\n+                        break;\n \n-                            final SchedTaskTO schedTaskTO = new TaskRestClient().\n-                                    readSchedTask(SchedTaskTO.class, jobTO.getRefKey());\n-\n-                            final SchedTaskWizardBuilder swb = new SchedTaskWizardBuilder(schedTaskTO, pageRef);\n-                            swb.setEventSink(JobActionPanel.this);\n-\n-                            target.add(jobModal.setContent(swb.build(BaseModal.CONTENT_ID, AjaxWizard.Mode.EDIT)));\n-\n-                            jobModal.header(new StringResourceModel(\n-                                    \"any.edit\",\n-                                    this,\n-                                    new Model<>(schedTaskTO)));\n-\n-                            jobModal.show(true);\n-\n-                            break;\n-\n-                        default:\n-                            break;\n-                    }\n+                    default:\n+                        break;\n                 }\n             }\n         };"},{"sha":"28b1da23480e5f29d4d8362dd97fdf30f8d4c7eb","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4221405325011af89d8d7ec0cbe6c569570d38db/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4221405325011af89d8d7ec0cbe6c569570d38db/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=4221405325011af89d8d7ec0cbe6c569570d38db","patch":"@@ -420,7 +420,7 @@ under the License.\n     <codemirror.version>5.13.2</codemirror.version>\n     <jsplumb.version>2.0.7</jsplumb.version>\n     \n-    <wicket.version>7.5.0</wicket.version>\n+    <wicket.version>7.6.0</wicket.version>\n     <wicket-jqueryui.version>7.5.0</wicket-jqueryui.version>\n     <wicket-bootstrap.version>0.10.11</wicket-bootstrap.version>\n     <wicket-chartjs.version>7.0.1</wicket-chartjs.version>"}]}