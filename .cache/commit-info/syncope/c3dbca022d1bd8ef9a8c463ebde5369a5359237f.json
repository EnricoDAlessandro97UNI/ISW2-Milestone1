{"sha":"c3dbca022d1bd8ef9a8c463ebde5369a5359237f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMzZGJjYTAyMmQxYmQ4ZWY5YThjNDYzZWJkZTUzNjlhNTM1OTIzN2Y=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-10T07:47:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-10T07:48:39Z"},"message":"Better help message for JEXL mapping transformers, remarking that only 'value' shall be used","tree":{"sha":"589f5e0f4dad338170cc9ecc365919d14d6307b9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/589f5e0f4dad338170cc9ecc365919d14d6307b9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c3dbca022d1bd8ef9a8c463ebde5369a5359237f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c3dbca022d1bd8ef9a8c463ebde5369a5359237f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c3dbca022d1bd8ef9a8c463ebde5369a5359237f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3e106c244e355ac45996b7d408d5d8635cc1d5bc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3e106c244e355ac45996b7d408d5d8635cc1d5bc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3e106c244e355ac45996b7d408d5d8635cc1d5bc"}],"stats":{"total":40,"additions":28,"deletions":12},"files":[{"sha":"2fceb732f66373028df6aca5a24950d73ec7942d","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":19,"deletions":7,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=c3dbca022d1bd8ef9a8c463ebde5369a5359237f","patch":"@@ -200,15 +200,27 @@ public final class Constants {\n     public static final String GUARDED_BYTE_ARRAY = \"org.identityconnectors.common.security.GuardedByteArray\";\n \n     public static Component getJEXLPopover(final Component caller, final TooltipConfig.Placement placement) {\n+        return getJEXLPopover(caller, placement, caller.getString(\"jexl_ex1\"), caller.getString(\"jexl_ex2\"));\n+    }\n+\n+    public static Component getJEXLPopover(\n+            final Component caller,\n+            final TooltipConfig.Placement placement,\n+            final String... jexlExamples) {\n+\n+        StringBuilder body = new StringBuilder(caller.getString(\"jexl_info\")).\n+                append(\"<ul>\");\n+        for (String jexlExample : jexlExamples) {\n+            body.append(\"<li>\").append(jexlExample).append(\"</li>\");\n+        }\n+        body.append(\"</ul>\").\n+                append(\"<a href='https://commons.apache.org/proper/commons-jexl/reference/' target='_blank'>\").\n+                append(caller.getString(\"jexl_syntax_url\")).\n+                append(\"</a>\");\n+\n         return new Label(\"jexlInfo\", Model.of()).add(new PopoverBehavior(\n                 Model.<String>of(),\n-                Model.of(caller.getString(\"jexl_info\")\n-                        + \"<ul>\"\n-                        + \"<li>\" + caller.getString(\"jexl_ex1\") + \"</li>\"\n-                        + \"<li>\" + caller.getString(\"jexl_ex2\") + \"</li>\"\n-                        + \"</ul>\"\n-                        + \"<a href='https://commons.apache.org/proper/commons-jexl/reference/index.html' \"\n-                        + \"target='_blank'>\" + caller.getString(\"jexl_syntax_url\") + \"</a>\"),\n+                Model.of(body.toString()),\n                 new PopoverConfig().withHtml(true).withPlacement(placement)) {\n \n             private static final long serialVersionUID = -7867802555691605021L;"},{"sha":"4396a7ec89df7727dcb19c8922504699affa4c75","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=c3dbca022d1bd8ef9a8c463ebde5369a5359237f","patch":"@@ -40,7 +40,7 @@ public class AjaxTextFieldPanel extends FieldPanel<String> implements Cloneable\n \n     private static final long serialVersionUID = 238940918106696068L;\n \n-    private final Component questionMarkJexlHelp;\n+    private Component questionMarkJexlHelp;\n \n     private List<String> choices = Collections.emptyList();\n \n@@ -113,6 +113,12 @@ public FieldPanel<String> enableJexlHelp() {\n         return this;\n     }\n \n+    public FieldPanel<String> enableJexlHelp(final String... jexlExamples) {\n+        questionMarkJexlHelp = Constants.getJEXLPopover(this, TooltipConfig.Placement.bottom, jexlExamples);\n+        addOrReplace(questionMarkJexlHelp.setVisible(true));\n+        return this;\n+    }\n+\n     protected Iterator<String> getChoices(final String input) {\n         Pattern pattern = Pattern.compile(\".*\" + Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n         return choices.stream().filter(choice -> pattern.matcher(choice).matches()).iterator();"},{"sha":"f375a68f13cb57b06a1050fabf10d4f5cb94d747","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/JEXLTransformersTogglePanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java?ref=c3dbca022d1bd8ef9a8c463ebde5369a5359237f","patch":"@@ -49,13 +49,13 @@ public JEXLTransformersTogglePanel(final WebMarkupContainer container, final Pag\n                 \"propagationJEXLTransformer\",\n                 \"Propagation\",\n                 Model.of(\"\"));\n-        form.add(propagationJEXLTransformer.enableJexlHelp());\n+        form.add(propagationJEXLTransformer.enableJexlHelp(\"value.toLowecase()\", \"'PREFIX' + value\"));\n \n         pullJEXLTransformer = new AjaxTextFieldPanel(\n                 \"pullJEXLTransformer\",\n                 \"Pull\",\n                 Model.of(\"\"));\n-        form.add(pullJEXLTransformer.enableJexlHelp());\n+        form.add(pullJEXLTransformer.enableJexlHelp(\"value.toLowecase()\", \"'PREFIX' + value\"));\n \n         form.add(new AjaxSubmitLink(\"submit\", form) {\n "},{"sha":"4ed74773bd8dde524c06caf3abfe26387f08ff01","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/JEXLItemTransformerImpl.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c3dbca022d1bd8ef9a8c463ebde5369a5359237f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java?ref=c3dbca022d1bd8ef9a8c463ebde5369a5359237f","patch":"@@ -94,7 +94,6 @@ public List<Object> beforePull(\n                     JexlUtils.addAttrTOsToContext(((AnyTO) entityTO).getVirAttrs(), jexlContext);\n                 } else if (entityTO instanceof RealmTO) {\n                     JexlUtils.addFieldsToContext((RealmTO) entityTO, jexlContext);\n-                    newValues.add(JexlUtils.evaluate(pullJEXL, jexlContext));\n                 }\n \n                 newValues.add(JexlUtils.evaluate(pullJEXL, jexlContext));\n@@ -105,5 +104,4 @@ public List<Object> beforePull(\n \n         return JEXLItemTransformer.super.beforePull(item, entityTO, values);\n     }\n-\n }"}]}