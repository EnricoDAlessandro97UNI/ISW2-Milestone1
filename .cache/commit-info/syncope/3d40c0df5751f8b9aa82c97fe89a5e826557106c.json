{"sha":"3d40c0df5751f8b9aa82c97fe89a5e826557106c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNkNDBjMGRmNTc1MWY4YjlhYTgyYzk3ZmU4OWE1ZTgyNjU1NzEwNmM=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-02T16:10:28Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-02T16:10:28Z"},"message":"SYNCOPE-21 #comment org.apache.ibatis.exceptions.PersistenceException caught\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1296272 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6b9ad3e4619c2d30638380f5b215eac3fa8ba191","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6b9ad3e4619c2d30638380f5b215eac3fa8ba191"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3d40c0df5751f8b9aa82c97fe89a5e826557106c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d40c0df5751f8b9aa82c97fe89a5e826557106c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3d40c0df5751f8b9aa82c97fe89a5e826557106c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d40c0df5751f8b9aa82c97fe89a5e826557106c/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"da86f70159833936b09c5d0940414e519ac1d43a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/da86f70159833936b09c5d0940414e519ac1d43a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/da86f70159833936b09c5d0940414e519ac1d43a"}],"stats":{"total":32,"additions":16,"deletions":16},"files":[{"sha":"0721a1d61cdfa536faa9530b748f127af77400d0","filename":"core/src/main/webapp/syncopeClientError.jsp","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d40c0df5751f8b9aa82c97fe89a5e826557106c/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d40c0df5751f8b9aa82c97fe89a5e826557106c/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FsyncopeClientError.jsp?ref=3d40c0df5751f8b9aa82c97fe89a5e826557106c","patch":"@@ -1,5 +1,5 @@\n-<%@page import=\"org.springframework.orm.jpa.JpaSystemException\"%>\n <%@page isErrorPage=\"true\" session=\"false\" contentType=\"application/json\" pageEncoding=\"UTF-8\"%>\n+<%@page import=\"org.springframework.orm.jpa.JpaSystemException\"%>\n <%@page import=\"org.syncope.types.EntityViolationType\"%>\n <%@page import=\"java.util.Set\"%>\n <%@page import=\"java.util.Map\"%>\n@@ -69,6 +69,14 @@\n                 SyncopeClientExceptionType.Workflow.getElementHeaderName(),\n                 ex.getCause().getMessage());\n \n+        statusCode = HttpServletResponse.SC_BAD_REQUEST;\n+    } else if (ex instanceof org.apache.ibatis.exceptions.PersistenceException) {\n+        response.setHeader(\n+                SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n+                SyncopeClientExceptionType.Workflow.getHeaderValue());\n+        response.setHeader(\n+                SyncopeClientExceptionType.Workflow.getElementHeaderName(), \"Currently unavailable. Please try later.\");\n+\n         statusCode = HttpServletResponse.SC_BAD_REQUEST;\n     } else if (ex instanceof PropagationException) {\n         response.setHeader(\n@@ -84,22 +92,18 @@\n                 ((SyncopeClientCompositeErrorException) ex).getExceptions()) {\n \n             response.addHeader(\n-                    SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n-                    sce.getType().getHeaderValue());\n+                    SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER, sce.getType().getHeaderValue());\n \n             for (String attributeName : sce.getElements()) {\n-                response.addHeader(\n-                        sce.getType().getElementHeaderName(),\n-                        attributeName);\n+                response.addHeader(sce.getType().getElementHeaderName(), attributeName);\n             }\n         }\n \n         statusCode = ((SyncopeClientCompositeErrorException) ex).getStatusCode().\n                 value();\n     } else if (ex instanceof MissingConfKeyException) {\n         response.setHeader(\n-                SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n-                SyncopeClientExceptionType.NotFound.getHeaderValue());\n+                SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER, SyncopeClientExceptionType.NotFound.getHeaderValue());\n         response.setHeader(\n                 SyncopeClientExceptionType.NotFound.getElementHeaderName(),\n                 ((MissingConfKeyException) ex).getConfKey());\n@@ -127,8 +131,7 @@\n                 SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n                 SyncopeClientExceptionType.DataIntegrityViolation.getHeaderValue());\n         response.setHeader(\n-                SyncopeClientExceptionType.DataIntegrityViolation.\n-                getElementHeaderName(),\n+                SyncopeClientExceptionType.DataIntegrityViolation.getElementHeaderName(),\n                 ex.getCause() == null ? ex.getMessage() : ex.getCause().\n                 getMessage());\n \n@@ -138,19 +141,16 @@\n                 SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n                 SyncopeClientExceptionType.GenericPersistence.getHeaderValue());\n         response.setHeader(\n-                SyncopeClientExceptionType.GenericPersistence.\n-                getElementHeaderName(),\n-                ex.getCause() == null ? ex.getMessage() : ex.getCause().\n-                getMessage());\n+                SyncopeClientExceptionType.GenericPersistence.getElementHeaderName(),\n+                ex.getCause() == null ? ex.getMessage() : ex.getCause().getMessage());\n \n         statusCode = HttpServletResponse.SC_BAD_REQUEST;\n     } else if (ex instanceof ConfigurationException) {\n         response.setHeader(\n                 SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n                 SyncopeClientExceptionType.InvalidExternalResource.getHeaderValue());\n         response.setHeader(\n-                SyncopeClientExceptionType.InvalidExternalResource.\n-                getElementHeaderName(),\n+                SyncopeClientExceptionType.InvalidExternalResource.getElementHeaderName(),\n                 ex.getCause() == null ? ex.getMessage() : ex.getCause().\n                 getMessage());\n "}]}