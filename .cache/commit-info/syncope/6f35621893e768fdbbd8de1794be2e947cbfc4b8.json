{"sha":"6f35621893e768fdbbd8de1794be2e947cbfc4b8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZmMzU2MjE4OTNlNzY4ZmRiYmQ4ZGUxNzk0YmUyZTk0N2NiZmM0Yjg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-26T10:06:06Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-26T10:40:59Z"},"message":"Downgrading H2 to 1.4.190 since 1.4.191 seems to be slow","tree":{"sha":"bc942193cbfd7bee2babc12f95da978a34b7abc5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bc942193cbfd7bee2babc12f95da978a34b7abc5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6f35621893e768fdbbd8de1794be2e947cbfc4b8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f35621893e768fdbbd8de1794be2e947cbfc4b8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6f35621893e768fdbbd8de1794be2e947cbfc4b8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f35621893e768fdbbd8de1794be2e947cbfc4b8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6d56c7ed63f7701d3039e3fb57e38f5d9eb062a6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d56c7ed63f7701d3039e3fb57e38f5d9eb062a6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6d56c7ed63f7701d3039e3fb57e38f5d9eb062a6"}],"stats":{"total":57,"additions":11,"deletions":46},"files":[{"sha":"7ed12bd943dffaa00e608a9270ca2b60f3cadeda","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeClassTO.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f35621893e768fdbbd8de1794be2e947cbfc4b8/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f35621893e768fdbbd8de1794be2e947cbfc4b8/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java?ref=6f35621893e768fdbbd8de1794be2e947cbfc4b8","patch":"@@ -36,7 +36,7 @@ public class AnyTypeClassTO extends AbstractBaseBean implements EntityTO<String>\n \n     private String key;\n \n-    private final List<String> types = new ArrayList<>();\n+    private final List<String> inUseByTypes = new ArrayList<>();\n \n     private final List<String> plainSchemas = new ArrayList<>();\n \n@@ -55,11 +55,11 @@ public void setKey(final String key) {\n         this.key = key;\n     }\n \n-    @XmlElementWrapper(name = \"types\")\n-    @XmlElement(name = \"type\")\n-    @JsonProperty(\"types\")\n-    public List<String> getTypes() {\n-        return types;\n+    @XmlElementWrapper(name = \"inUseByTypes\")\n+    @XmlElement(name = \"anyTypeClass\")\n+    @JsonProperty(\"inUseByTypes\")\n+    public List<String> getInUseByTypes() {\n+        return inUseByTypes;\n     }\n \n     @XmlElementWrapper(name = \"plainSchemas\")"},{"sha":"dfc5fe20d475954d581f08c72f722158156bfd4d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ClientExceptionType.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f35621893e768fdbbd8de1794be2e947cbfc4b8/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f35621893e768fdbbd8de1794be2e947cbfc4b8/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java?ref=6f35621893e768fdbbd8de1794be2e947cbfc4b8","patch":"@@ -43,7 +43,6 @@ public enum ClientExceptionType {\n     InvalidRelationship(Response.Status.BAD_REQUEST),\n     InvalidRelationshipType(Response.Status.BAD_REQUEST),\n     InvalidAnyType(Response.Status.BAD_REQUEST),\n-    InvalidAnyTypeClass(Response.Status.BAD_REQUEST),\n     InvalidAnyObject(Response.Status.BAD_REQUEST),\n     InvalidGroup(Response.Status.BAD_REQUEST),\n     InvalidSchemaDefinition(Response.Status.BAD_REQUEST),"},{"sha":"1908b69b7a649f43f58c32c2f7209219754d9e11","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AnyTypeClass.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f35621893e768fdbbd8de1794be2e947cbfc4b8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTypeClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f35621893e768fdbbd8de1794be2e947cbfc4b8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTypeClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTypeClass.java?ref=6f35621893e768fdbbd8de1794be2e947cbfc4b8","patch":"@@ -24,8 +24,6 @@ public interface AnyTypeClass extends Entity<String> {\n \n     void setKey(String key);\n \n-    List<? extends AnyType> getTypes();\n-\n     boolean add(PlainSchema schema);\n \n     List<? extends PlainSchema> getPlainSchemas();"},{"sha":"58d5eb17d9e1fbe6ea50952b4e79dc90828f34e5","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyTypeClass.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f35621893e768fdbbd8de1794be2e947cbfc4b8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTypeClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f35621893e768fdbbd8de1794be2e947cbfc4b8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTypeClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTypeClass.java?ref=6f35621893e768fdbbd8de1794be2e947cbfc4b8","patch":"@@ -27,7 +27,6 @@\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import javax.persistence.Table;\n-import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n@@ -67,11 +66,6 @@ public void setKey(final String name) {\n         this.name = name;\n     }\n \n-    @Override\n-    public List<? extends AnyType> getTypes() {\n-        return types;\n-    }\n-\n     @Override\n     public boolean add(final PlainSchema schema) {\n         checkType(schema, JPAPlainSchema.class);"},{"sha":"e8ae6937318fa7b702d06160ef88995fb9abaa69","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyTypeClassDataBinderImpl.java","status":"modified","additions":1,"deletions":19,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f35621893e768fdbbd8de1794be2e947cbfc4b8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyTypeClassDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f35621893e768fdbbd8de1794be2e947cbfc4b8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyTypeClassDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyTypeClassDataBinderImpl.java?ref=6f35621893e768fdbbd8de1794be2e947cbfc4b8","patch":"@@ -19,11 +19,7 @@\n package org.apache.syncope.core.provisioning.java.data;\n \n import java.util.Collections;\n-import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.Transformer;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n-import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n@@ -73,20 +69,6 @@ public void update(final AnyTypeClass anyTypeClass, final AnyTypeClassTO anyType\n             anyTypeClass.setKey(anyTypeClassTO.getKey());\n         }\n \n-        if (!CollectionUtils.disjunction(\n-                CollectionUtils.collect(anyTypeClass.getTypes(), new Transformer<AnyType, String>() {\n-\n-                    @Override\n-                    public String transform(final AnyType anyType) {\n-                        return anyType.getKey();\n-                    }\n-                }), anyTypeClassTO.getTypes()).isEmpty()) {\n-\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidAnyTypeClass);\n-            sce.getElements().add(\"Cannot update types from classes, do the other way round\");\n-            throw sce;\n-        }\n-\n         for (PlainSchema schema : plainSchemaDAO.findByAnyTypeClasses(Collections.singletonList(anyTypeClass))) {\n             schema.setAnyTypeClass(null);\n         }\n@@ -140,7 +122,7 @@ public AnyTypeClassTO getAnyTypeClassTO(final AnyTypeClass anyTypeClass) {\n         anyTypeClassTO.setKey(anyTypeClass.getKey());\n \n         for (AnyType anyType : anyTypeDAO.findByTypeClass(anyTypeClass)) {\n-            anyTypeClassTO.getTypes().add(anyType.getKey());\n+            anyTypeClassTO.getInUseByTypes().add(anyType.getKey());\n         }\n \n         for (PlainSchema schema : anyTypeClass.getPlainSchemas()) {"},{"sha":"704370e789c03eff8b02b9cb1141a3c705cd7e03","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AnyTypeITCase.java","status":"modified","additions":3,"deletions":11,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f35621893e768fdbbd8de1794be2e947cbfc4b8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f35621893e768fdbbd8de1794be2e947cbfc4b8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAnyTypeITCase.java?ref=6f35621893e768fdbbd8de1794be2e947cbfc4b8","patch":"@@ -182,17 +182,9 @@ public void issueSYNCOPE754() {\n             assertTrue(group.getClasses().contains(\"other\"));\n \n             other = anyTypeClassService.read(\"other\");\n-            assertEquals(2, other.getTypes().size());\n-            assertTrue(other.getTypes().contains(AnyTypeKind.USER.name()));\n-            assertTrue(other.getTypes().contains(AnyTypeKind.GROUP.name()));\n-\n-            other.getTypes().remove(AnyTypeKind.GROUP.name());\n-            try {\n-                anyTypeClassService.update(other);\n-                fail();\n-            } catch (SyncopeClientException e) {\n-                assertEquals(ClientExceptionType.InvalidAnyTypeClass, e.getType());\n-            }\n+            assertEquals(2, other.getInUseByTypes().size());\n+            assertTrue(other.getInUseByTypes().contains(AnyTypeKind.USER.name()));\n+            assertTrue(other.getInUseByTypes().contains(AnyTypeKind.GROUP.name()));\n         } finally {\n             group.getClasses().remove(\"other\");\n             anyTypeService.update(group);"},{"sha":"98a2a7e221b97738d80b15356cc93d585e263be3","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f35621893e768fdbbd8de1794be2e947cbfc4b8/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f35621893e768fdbbd8de1794be2e947cbfc4b8/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=6f35621893e768fdbbd8de1794be2e947cbfc4b8","patch":"@@ -365,7 +365,7 @@ under the License.\n     <commons-collection.version>4.1</commons-collection.version>\n     <commons-logging.version>1.1.3</commons-logging.version>\n \n-    <h2.version>1.4.191</h2.version>\n+    <h2.version>1.4.190</h2.version>\n \n     <junit.version>4.12</junit.version>\n "}]}