{"sha":"d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ1YWMzNDY5NzZkZmJmYWNiMmQwZTVhYTRkNmM2MDRjMTFlOTA5OTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-09-05T13:28:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-09-05T13:28:47Z"},"message":"[SYNCOPE-1366] Picking the actual user at the right time","tree":{"sha":"110d36135ff3053bd26f9a5409ccb61e214713d7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/110d36135ff3053bd26f9a5409ccb61e214713d7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1068667e90c41cb75d5a508d43f953294646c1b6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1068667e90c41cb75d5a508d43f953294646c1b6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1068667e90c41cb75d5a508d43f953294646c1b6"}],"stats":{"total":91,"additions":68,"deletions":23},"files":[{"sha":"f7c5fce7b0ed52f570e14ffc1a662c2566cb96ee","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/LogicInvocationHandler.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicInvocationHandler.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n import org.apache.syncope.core.provisioning.java.job.AfterHandlingJob;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.aspectj.lang.ProceedingJoinPoint;\n import org.aspectj.lang.annotation.Around;\n import org.aspectj.lang.annotation.Aspect;\n@@ -67,7 +68,7 @@ public Object around(final ProceedingJoinPoint joinPoint) throws Throwable {\n         boolean notificationsAvailable = notificationManager.notificationsAvailable(\n                 AuditElements.EventCategoryType.LOGIC, category, null, event);\n         boolean auditRequested = auditManager.auditRequested(\n-                AuditElements.EventCategoryType.LOGIC, category, null, event);\n+                AuthContextUtils.getUsername(), AuditElements.EventCategoryType.LOGIC, category, null, event);\n \n         AuditElements.Result condition = null;\n         Object output = null;\n@@ -100,6 +101,7 @@ public Object around(final ProceedingJoinPoint joinPoint) throws Throwable {\n             if (notificationsAvailable || auditRequested) {\n                 Map<String, Object> jobMap = new HashMap<>();\n                 jobMap.put(AfterHandlingEvent.JOBMAP_KEY, new AfterHandlingEvent(\n+                        AuthContextUtils.getUsername(),\n                         AuditElements.EventCategoryType.LOGIC,\n                         category,\n                         null,"},{"sha":"a59d77dd78a802544939ef8243c22a06c6782540","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/AuditManager.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FAuditManager.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -26,28 +26,31 @@ public interface AuditManager {\n     /**\n      * Checks if audit is requested matching the provided conditions.\n      *\n+     * @param who user triggering the event\n      * @param type event category type\n      * @param category event category\n      * @param subcategory event subcategory\n      * @param event event\n      * @return created notification tasks\n      */\n     boolean auditRequested(\n+            String who,\n             AuditElements.EventCategoryType type,\n             String category,\n             String subcategory,\n             String event);\n \n     /**\n      * Create audit entries according to the provided event.\n-     * \n+     *\n      * @param event Spring event raised during Logic processing\n      */\n-    void audit(final AfterHandlingEvent event);\n+    void audit(AfterHandlingEvent event);\n \n     /**\n      * Create audit entries for each audit matching provided conditions.\n      *\n+     * @param who user triggering the event\n      * @param type event category type\n      * @param category event category\n      * @param subcategory event subcategory\n@@ -58,6 +61,7 @@ boolean auditRequested(\n      * @param input object(s) provided to the event\n      */\n     void audit(\n+            String who,\n             AuditElements.EventCategoryType type,\n             String category,\n             String subcategory,\n@@ -66,5 +70,4 @@ void audit(\n             Object before,\n             Object output,\n             Object... input);\n-\n }"},{"sha":"4e14ee20d5bbb27e7f4525a2eb3d8433623669c9","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/event/AfterHandlingEvent.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAfterHandlingEvent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAfterHandlingEvent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fevent%2FAfterHandlingEvent.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -27,6 +27,8 @@ public class AfterHandlingEvent implements Serializable {\n \n     public static final String JOBMAP_KEY = \"AfterHandlingEvent\";\n \n+    private final String who;\n+\n     private final AuditElements.EventCategoryType type;\n \n     private final String category;\n@@ -44,6 +46,7 @@ public class AfterHandlingEvent implements Serializable {\n     private final Object[] input;\n \n     public AfterHandlingEvent(\n+            final String who,\n             final AuditElements.EventCategoryType type,\n             final String category,\n             final String subcategory,\n@@ -53,6 +56,7 @@ public AfterHandlingEvent(\n             final Object output,\n             final Object... input) {\n \n+        this.who = who;\n         this.type = type;\n         this.category = category;\n         this.subcategory = subcategory;\n@@ -63,6 +67,10 @@ public AfterHandlingEvent(\n         this.input = input;\n     }\n \n+    public String getWho() {\n+        return who;\n+    }\n+\n     public AuditElements.EventCategoryType getType() {\n         return type;\n     }\n@@ -94,5 +102,4 @@ public Object getOutput() {\n     public Object[] getInput() {\n         return input;\n     }\n-\n }"},{"sha":"3a2877f1f676685bfce99ac4dfbdf2da59003f57","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/AuditManagerImpl.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditManagerImpl.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -23,10 +23,10 @@\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.dao.LoggerDAO;\n import org.apache.syncope.core.provisioning.api.event.AfterHandlingEvent;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -42,13 +42,14 @@ public class AuditManagerImpl implements AuditManager {\n \n     @Override\n     public boolean auditRequested(\n+            final String who,\n             final AuditElements.EventCategoryType type,\n             final String category,\n             final String subcategory,\n             final String event) {\n \n         AuditEntry auditEntry = new AuditEntry(\n-                AuthContextUtils.getUsername(),\n+                who,\n                 new AuditLoggerName(type, category, subcategory, event, Result.SUCCESS),\n                 null,\n                 null,\n@@ -62,7 +63,7 @@ public boolean auditRequested(\n         }\n \n         auditEntry = new AuditEntry(\n-                AuthContextUtils.getUsername(),\n+                who,\n                 new AuditLoggerName(type, category, subcategory, event, Result.FAILURE),\n                 null,\n                 null,\n@@ -76,6 +77,7 @@ public boolean auditRequested(\n     @Override\n     public void audit(final AfterHandlingEvent event) {\n         audit(\n+                event.getWho(),\n                 event.getType(),\n                 event.getCategory(),\n                 event.getSubcategory(),\n@@ -88,6 +90,7 @@ public void audit(final AfterHandlingEvent event) {\n \n     @Override\n     public void audit(\n+            final String who,\n             final AuditElements.EventCategoryType type,\n             final String category,\n             final String subcategory,\n@@ -103,7 +106,7 @@ public void audit(\n         }\n \n         AuditEntry auditEntry = new AuditEntry(\n-                AuthContextUtils.getUsername(),\n+                who,\n                 new AuditLoggerName(type, category, subcategory, event, condition),\n                 before,\n                 throwable == null ? output : throwable.getMessage(),"},{"sha":"91b9b2a79f3355ecb9f849c6ab76991034bde619","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractSchedTaskJobDelegate.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -146,6 +147,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n                 execution);\n \n         auditManager.audit(\n+                AuthContextUtils.getUsername(),\n                 AuditElements.EventCategoryType.TASK,\n                 task.getClass().getSimpleName(),\n                 null,"},{"sha":"4e530775a6e18df6761549588fc2d13a73bfeaa8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AfterHandlingJob.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAfterHandlingJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAfterHandlingJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAfterHandlingJob.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -98,5 +98,4 @@ public void execute(final JobExecutionContext context) throws JobExecutionExcept\n             throw new JobExecutionException(\"While handling notification / audit events\", e);\n         }\n     }\n-\n }"},{"sha":"f9a09c8e560af2248bf88075c89cc1e2b7ad6d32","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/DefaultNotificationJobDelegate.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -41,6 +41,7 @@\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.notification.NotificationJobDelegate;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.Encryptor;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -287,6 +288,7 @@ private void handleRetries(final TaskExec execution) {\n             notificationManager.setTaskExecuted(execution.getTask().getKey(), false);\n \n             auditManager.audit(\n+                    AuthContextUtils.getUsername(),\n                     AuditElements.EventCategoryType.TASK,\n                     \"notification\",\n                     null,\n@@ -300,6 +302,7 @@ private void handleRetries(final TaskExec execution) {\n             LOG.error(\"Maximum number of retries reached for task {} - giving up\", execution.getTask());\n \n             auditManager.audit(\n+                    AuthContextUtils.getUsername(),\n                     AuditElements.EventCategoryType.TASK,\n                     \"notification\",\n                     null,"},{"sha":"6a9e4c380f5637f3d33d6762ffbd9d753b974156","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -72,6 +72,7 @@\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.apache.syncope.core.spring.ImplementationManager;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.identityconnectors.framework.common.exceptions.ConnectorException;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -519,8 +520,12 @@ protected TaskExec execute(final PropagationTaskTO taskTO, final PropagationRepo\n         String operation = task.getOperation().name().toLowerCase();\n         boolean notificationsAvailable = notificationManager.notificationsAvailable(\n                 AuditElements.EventCategoryType.PROPAGATION, anyTypeKind, resource, operation);\n-        boolean auditRequested = auditManager.auditRequested(AuditElements.EventCategoryType.PROPAGATION, anyTypeKind,\n-                resource, operation);\n+        boolean auditRequested = auditManager.auditRequested(\n+                AuthContextUtils.getUsername(),\n+                AuditElements.EventCategoryType.PROPAGATION,\n+                anyTypeKind,\n+                resource,\n+                operation);\n \n         if (notificationsAvailable || auditRequested) {\n             ExecTO execTO = taskDataBinder.getExecTO(execution);\n@@ -531,7 +536,12 @@ protected TaskExec execute(final PropagationTaskTO taskTO, final PropagationRepo\n                     new Object[] { execTO, afterObj },\n                     taskTO);\n \n-            auditManager.audit(AuditElements.EventCategoryType.PROPAGATION, anyTypeKind, resource, operation,\n+            auditManager.audit(\n+                    AuthContextUtils.getUsername(),\n+                    AuditElements.EventCategoryType.PROPAGATION,\n+                    anyTypeKind,\n+                    resource,\n+                    operation,\n                     result,\n                     beforeObj,\n                     new Object[] { execTO, afterObj },"},{"sha":"2ea3da94b39d81b5991ce48a1b95d85b62d2e9b0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -57,6 +57,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncDeltaType;\n@@ -908,7 +909,9 @@ protected void finalize(\n                 delta,\n                 furtherInput);\n \n-        auditManager.audit(AuditElements.EventCategoryType.PULL,\n+        auditManager.audit(\n+                AuthContextUtils.getUsername(),\n+                AuditElements.EventCategoryType.PULL,\n                 anyUtils.anyTypeKind().name().toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n                 event,"},{"sha":"6c48702727f81abe9ade8be86f00cb73f3f228e3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -50,6 +50,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n import org.apache.syncope.core.provisioning.java.job.AfterHandlingJob;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -290,6 +291,7 @@ protected void doHandle(final Any<?> any, final Provision provision) throws JobE\n                     profile.getTask().getResource().getKey(),\n                     operation);\n             boolean auditRequested = auditManager.auditRequested(\n+                    AuthContextUtils.getUsername(),\n                     AuditElements.EventCategoryType.PUSH,\n                     any.getType().getKind().name().toLowerCase(),\n                     profile.getTask().getResource().getKey(),\n@@ -453,6 +455,7 @@ protected void doHandle(final Any<?> any, final Provision provision) throws JobE\n                 if (notificationsAvailable || auditRequested) {\n                     Map<String, Object> jobMap = new HashMap<>();\n                     jobMap.put(AfterHandlingEvent.JOBMAP_KEY, new AfterHandlingEvent(\n+                            AuthContextUtils.getUsername(),\n                             AuditElements.EventCategoryType.PUSH,\n                             any.getType().getKind().name().toLowerCase(),\n                             profile.getTask().getResource().getKey(),"},{"sha":"0c5bb6bec1d6615e40a3c40bbba81c6f82a26f08","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -49,6 +49,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.RealmPullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncDeltaType;\n@@ -783,7 +784,9 @@ private void finalize(\n                 output,\n                 delta);\n \n-        auditManager.audit(AuditElements.EventCategoryType.PULL,\n+        auditManager.audit(\n+                AuthContextUtils.getUsername(),\n+                AuditElements.EventCategoryType.PULL,\n                 REALM_TYPE.toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n                 event,"},{"sha":"711d49b02c3971ca72b8f1e6ba1cea69d23ee052","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPushResultHandler.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -48,6 +48,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.RealmPushResultHandler;\n import org.apache.syncope.core.provisioning.java.job.AfterHandlingJob;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n@@ -231,6 +232,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                     profile.getTask().getResource().getKey(),\n                     operation);\n             boolean auditRequested = auditManager.auditRequested(\n+                    AuthContextUtils.getUsername(),\n                     AuditElements.EventCategoryType.PUSH,\n                     REALM_TYPE.toLowerCase(),\n                     profile.getTask().getResource().getKey(),\n@@ -408,6 +410,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                 if (notificationsAvailable || auditRequested) {\n                     Map<String, Object> jobMap = new HashMap<>();\n                     jobMap.put(AfterHandlingEvent.JOBMAP_KEY, new AfterHandlingEvent(\n+                            AuthContextUtils.getUsername(),\n                             AuditElements.EventCategoryType.PUSH,\n                             REALM_TYPE.toLowerCase(),\n                             profile.getTask().getResource().getKey(),"},{"sha":"e7b90d652f4e820f6de7b975af90347f62c36cb5","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -425,6 +425,7 @@ public void removeExpired(final String tokenKey) {\n \n     @Transactional(readOnly = true)\n     public void audit(\n+            final String who,\n             final AuditElements.EventCategoryType type,\n             final String category,\n             final String subcategory,\n@@ -434,7 +435,7 @@ public void audit(\n             final Object output,\n             final Object... input) {\n \n-        auditManager.audit(type, category, subcategory, event, result, before, output, input);\n+        auditManager.audit(who, type, category, subcategory, event, result, before, output, input);\n     }\n \n }"},{"sha":"b127f46772a98430cde3ff2cf865133b48ce7355","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/UsernamePasswordAuthenticationProvider.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d5ac346976dfbfacb2d0e5aa4d6c604c11e90995/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java?ref=d5ac346976dfbfacb2d0e5aa4d6c604c11e90995","patch":"@@ -141,13 +141,14 @@ public Authentication authenticate(final Authentication authentication) {\n         UsernamePasswordAuthenticationToken token;\n         if (isAuthenticated) {\n             token = AuthContextUtils.execWithAuthContext(domainKey, () -> {\n-                UsernamePasswordAuthenticationToken token1 =\n-                        new UsernamePasswordAuthenticationToken(\n-                                username[0],\n-                                null,\n-                                dataAccessor.getAuthorities(username[0]));\n+                UsernamePasswordAuthenticationToken token1 = new UsernamePasswordAuthenticationToken(\n+                        username[0],\n+                        null,\n+                        dataAccessor.getAuthorities(username[0]));\n                 token1.setDetails(authentication.getDetails());\n-                dataAccessor.audit(AuditElements.EventCategoryType.LOGIC,\n+                dataAccessor.audit(\n+                        username[0],\n+                        AuditElements.EventCategoryType.LOGIC,\n                         AuditElements.AUTHENTICATION_CATEGORY, null,\n                         AuditElements.LOGIN_EVENT, Result.SUCCESS, null, isAuthenticated, authentication,\n                         \"Successfully authenticated, with entitlements: \" + token1.getAuthorities());\n@@ -158,7 +159,9 @@ public Authentication authenticate(final Authentication authentication) {\n                     username[0], token.getAuthorities());\n         } else {\n             AuthContextUtils.execWithAuthContext(domainKey, () -> {\n-                dataAccessor.audit(AuditElements.EventCategoryType.LOGIC,\n+                dataAccessor.audit(\n+                        username[0],\n+                        AuditElements.EventCategoryType.LOGIC,\n                         AuditElements.AUTHENTICATION_CATEGORY,\n                         null,\n                         AuditElements.LOGIN_EVENT,"}]}