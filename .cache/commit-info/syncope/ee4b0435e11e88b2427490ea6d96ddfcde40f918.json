{"sha":"ee4b0435e11e88b2427490ea6d96ddfcde40f918","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVlNGIwNDM1ZTExZTg4YjI0Mjc0OTBlYTZkOTZkZGZjZGU0MGY5MTg=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-30T14:16:17Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-30T14:16:17Z"},"message":"[SYNCOPE-231]\n* adding JAVA DOC for LoggerService\n* changing response type for update and delete NotificationService methods to void\n* Code cleanup\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440427 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a1058a0a479170a4ed10b56d4b5d276c4bef5dcd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a1058a0a479170a4ed10b56d4b5d276c4bef5dcd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ee4b0435e11e88b2427490ea6d96ddfcde40f918","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ee4b0435e11e88b2427490ea6d96ddfcde40f918","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ee4b0435e11e88b2427490ea6d96ddfcde40f918","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ee4b0435e11e88b2427490ea6d96ddfcde40f918/comments","author":null,"committer":null,"parents":[{"sha":"dfc0a39bfef5f671b27cf611bc2084e086252bb4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dfc0a39bfef5f671b27cf611bc2084e086252bb4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dfc0a39bfef5f671b27cf611bc2084e086252bb4"}],"stats":{"total":105,"additions":70,"deletions":35},"files":[{"sha":"7c79f480cfa3e0ec1cc127917e91b2f9813af34c","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/NotificationServiceProxy.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ee4b0435e11e88b2427490ea6d96ddfcde40f918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ee4b0435e11e88b2427490ea6d96ddfcde40f918/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java?ref=ee4b0435e11e88b2427490ea6d96ddfcde40f918","patch":"@@ -44,8 +44,8 @@ public Response create(final NotificationTO notificationTO) {\n     }\r\n \r\n     @Override\r\n-    public NotificationTO delete(final Long notificationId) {\r\n-        return getRestTemplate().getForObject(baseUrl + \"notification/delete/{notificationId}.json\",\r\n+    public void delete(final Long notificationId) {\r\n+        getRestTemplate().getForObject(baseUrl + \"notification/delete/{notificationId}.json\",\r\n                 NotificationTO.class, notificationId);\r\n     }\r\n \r\n@@ -62,8 +62,8 @@ public NotificationTO read(final Long notificationId) {\n     }\r\n \r\n     @Override\r\n-    public NotificationTO update(final Long notificationId, final NotificationTO notificationTO) {\r\n-        return getRestTemplate().postForObject(baseUrl + \"notification/update.json\", notificationTO,\r\n+    public void update(final Long notificationId, final NotificationTO notificationTO) {\r\n+        getRestTemplate().postForObject(baseUrl + \"notification/update.json\", notificationTO,\r\n                 NotificationTO.class);\r\n     }\r\n }\r"},{"sha":"36c7ddc8ce8137234998b6580e98be5276fe56a2","filename":"common/src/main/java/org/apache/syncope/common/services/LoggerService.java","status":"modified","additions":24,"deletions":6,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ee4b0435e11e88b2427490ea6d96ddfcde40f918/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ee4b0435e11e88b2427490ea6d96ddfcde40f918/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java?ref=ee4b0435e11e88b2427490ea6d96ddfcde40f918","patch":"@@ -32,19 +32,37 @@\n @Path(\"logger/{type}\")\r\n public interface LoggerService {\r\n \r\n-    @GET\r\n+    /**\r\n+     * @param type LoggerType to be selected.\r\n+     * @param name Logger name to be deleted.\r\n+     */\r\n+    @DELETE\r\n     @Path(\"{name}\")\r\n-    LoggerTO read(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") final String name);\r\n+    void delete(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") String name);\r\n \r\n+    /**\r\n+     * @param type LoggerType to be selected.\r\n+     * @return List of logger with matching type.\r\n+     */\r\n     @GET\r\n     List<LoggerTO> list(@PathParam(\"type\") LoggerType type);\r\n \r\n+    /**\r\n+     * @param type LoggerType to be selected.\r\n+     * @param name Logger name to be read.\r\n+     * @return Returns logger with matching type and name.\r\n+     */\r\n+    @GET\r\n+    @Path(\"{name}\")\r\n+    LoggerTO read(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") final String name);\r\n+\r\n+    /**\r\n+     * @param type LoggerType to be selected.\r\n+     * @param name Logger name to be updated.\r\n+     * @param logger Logger to be created or updated.\r\n+     */\r\n     @PUT\r\n     @Path(\"{name}/level\")\r\n     void update(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") String name, LoggerTO logger);\r\n \r\n-    @DELETE\r\n-    @Path(\"{name}\")\r\n-    void delete(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") String name);\r\n-\r\n }\r"},{"sha":"7644520da7635cb72df5587df667a504146df623","filename":"common/src/main/java/org/apache/syncope/common/services/NotificationService.java","status":"modified","additions":25,"deletions":6,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ee4b0435e11e88b2427490ea6d96ddfcde40f918/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ee4b0435e11e88b2427490ea6d96ddfcde40f918/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java?ref=ee4b0435e11e88b2427490ea6d96ddfcde40f918","patch":"@@ -33,21 +33,40 @@\n @Path(\"notifications\")\r\n public interface NotificationService {\r\n \r\n+    /**\r\n+     * @param notificationTO Creates a new notification.\r\n+     * @return Response containing URI location for created resource.\r\n+     */\r\n     @POST\r\n     Response create(NotificationTO notificationTO);\r\n \r\n-    @GET\r\n+    /**\r\n+     * @param notificationId ID for notification to be deleted.\r\n+     */\r\n+    @DELETE\r\n     @Path(\"{notificationId}\")\r\n-    NotificationTO read(@PathParam(\"notificationId\") Long notificationId) throws NotFoundException;\r\n+    void delete(@PathParam(\"notificationId\") Long notificationId);\r\n \r\n+    /**\r\n+     * @return Returns list of all notifications.\r\n+     */\r\n     @GET\r\n     List<NotificationTO> list();\r\n \r\n-    @PUT\r\n+    /**\r\n+     * @param notificationId ID of notification to be read.\r\n+     * @return Notification with matching id.\r\n+     */\r\n+    @GET\r\n     @Path(\"{notificationId}\")\r\n-    NotificationTO update(@PathParam(\"notificationId\") Long notificationId, NotificationTO notificationTO);\r\n+    NotificationTO read(@PathParam(\"notificationId\") Long notificationId);\r\n \r\n-    @DELETE\r\n+    /**\r\n+     * @param notificationId ID of notification to be updated.\r\n+     * @param notificationTO Notification to be stored.\r\n+     */\r\n+    @PUT\r\n     @Path(\"{notificationId}\")\r\n-    NotificationTO delete(@PathParam(\"notificationId\") Long notificationId);\r\n+    void update(@PathParam(\"notificationId\") Long notificationId, NotificationTO notificationTO);\r\n+\r\n }\r"},{"sha":"4f85f15dc07a1ff7db831b154427b38ef272bf92","filename":"console/src/main/java/org/apache/syncope/console/rest/NotificationRestClient.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ee4b0435e11e88b2427490ea6d96ddfcde40f918/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ee4b0435e11e88b2427490ea6d96ddfcde40f918/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java?ref=ee4b0435e11e88b2427490ea6d96ddfcde40f918","patch":"@@ -27,40 +27,39 @@\n import org.apache.syncope.common.to.MailTemplateTO;\n import org.apache.syncope.common.to.NotificationTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.springframework.stereotype.Component;\n \n @Component\n public class NotificationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 6328933265096511690L;\n \n-    public List<NotificationTO> getAllNotifications() throws SyncopeClientCompositeErrorException {\n+    public List<NotificationTO> getAllNotifications() {\n         return getService(NotificationService.class).list();\n     }\n \n-    public NotificationTO readNotification(final Long id) throws SyncopeClientCompositeErrorException {\n+    public NotificationTO readNotification(final Long id) {\n         return getService(NotificationService.class).read(id);\n     }\n \n-    public void createNotification(final NotificationTO notificationTO) throws SyncopeClientCompositeErrorException {\n+    public void createNotification(final NotificationTO notificationTO) {\n         getService(NotificationService.class).create(notificationTO);\n     }\n \n-    public void updateNotification(final NotificationTO notificationTO) throws SyncopeClientCompositeErrorException {\n+    public void updateNotification(final NotificationTO notificationTO) {\n         getService(NotificationService.class).update(notificationTO.getId(), notificationTO);\n     }\n \n-    public void deleteNotification(final Long id) throws SyncopeClientCompositeErrorException {\n+    public void deleteNotification(final Long id) {\n         getService(NotificationService.class).delete(id);\n     }\n \n-    public List<String> getMailTemplates() throws SyncopeClientCompositeErrorException {\n+    public List<String> getMailTemplates() {\n         return CollectionWrapper.unwrapMailTemplates(new ArrayList<MailTemplateTO>(getService(\n                 ConfigurationService.class).getMailTemplates()));\n     }\n \n-    public List<String> getEvents() throws SyncopeClientCompositeErrorException {\n+    public List<String> getEvents() {\n         return getService(WorkflowService.class).getDefinedTasks(\"user\");\n     }\n }"},{"sha":"9369f843b93777b10f8a9dbb9b538d8d79ede743","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ee4b0435e11e88b2427490ea6d96ddfcde40f918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ee4b0435e11e88b2427490ea6d96ddfcde40f918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=ee4b0435e11e88b2427490ea6d96ddfcde40f918","patch":"@@ -47,7 +47,6 @@\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.propagation.ConnectorFactory;\n import org.apache.syncope.core.propagation.SyncopeConnector;\n-import org.apache.syncope.core.propagation.impl.ConnectorFacadeProxy;\n import org.apache.syncope.core.rest.data.ConnInstanceDataBinder;\n import org.apache.syncope.core.util.ConnBundleManager;\n import org.identityconnectors.common.l10n.CurrentLocale;"},{"sha":"6dd13240c884bc9d71a36902a224a1f4be00ab83","filename":"core/src/main/java/org/apache/syncope/core/services/NotificationServiceImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ee4b0435e11e88b2427490ea6d96ddfcde40f918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ee4b0435e11e88b2427490ea6d96ddfcde40f918/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java?ref=ee4b0435e11e88b2427490ea6d96ddfcde40f918","patch":"@@ -59,13 +59,13 @@ public List<NotificationTO> list() {\n     }\n \n     @Override\n-    public NotificationTO update(final Long notificationId, final NotificationTO notificationTO) {\n-        return notificationController.update(notificationTO);\n+    public void update(final Long notificationId, final NotificationTO notificationTO) {\n+        notificationController.update(notificationTO);\n     }\n \n     @Override\n-    public NotificationTO delete(final Long notificationId) {\n-        return notificationController.delete(notificationId);\n+    public void delete(final Long notificationId) {\n+        notificationController.delete(notificationId);\n     }\n \n     @Override"},{"sha":"72b573cb9cc88f14ab6a25de560519295b016acc","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ee4b0435e11e88b2427490ea6d96ddfcde40f918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ee4b0435e11e88b2427490ea6d96ddfcde40f918/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=ee4b0435e11e88b2427490ea6d96ddfcde40f918","patch":"@@ -22,6 +22,7 @@\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.fail;\n \n import java.util.List;\n \n@@ -98,7 +99,8 @@ public void update() {\n \n         notificationTO.setRecipients(recipients);\n \n-        NotificationTO actual = notificationService.update(notificationTO.getId(), notificationTO);\n+        notificationService.update(notificationTO.getId(), notificationTO);\n+        NotificationTO actual = notificationService.read(notificationTO.getId());\n         assertNotNull(actual);\n         assertEquals(actual, notificationTO);\n     }\n@@ -110,16 +112,14 @@ public void delete() {\n         Response response = notificationService.create(notification);\n         notification = getObject(response, NotificationTO.class, notificationService);\n \n-        NotificationTO deletedNotification = notificationService.delete(notification.getId());\n-        assertNotNull(deletedNotification);\n+        notificationService.delete(notification.getId());\n \n-        SyncopeClientException exception = null;\n         try {\n             notificationService.read(notification.getId());\n+            fail();\n         } catch (SyncopeClientCompositeErrorException e) {\n-            exception = e.getException(SyncopeClientExceptionType.NotFound);\n+            assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n         }\n-        assertNotNull(exception);\n     }\n \n     @Test"}]}