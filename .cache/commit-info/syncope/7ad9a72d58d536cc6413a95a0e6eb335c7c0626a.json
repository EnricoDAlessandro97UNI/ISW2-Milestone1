{"sha":"7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","node_id":"C_kwDOJfYA1toAKDdhZDlhNzJkNThkNTM2Y2M2NDEzYTk1YTBlNmViMzM1YzdjMDYyNmE","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-12-17T18:18:49Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2022-12-17T18:18:49Z"},"message":"Replacing ApacheDS with UnboundID SDK as test LDAP server","tree":{"sha":"18aaaf47491e48fbc307e5ead78f884b97c3e894","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/18aaaf47491e48fbc307e5ead78f884b97c3e894"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0bc3ee08eca1217f546a2d00ab949e6840ec1071","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0bc3ee08eca1217f546a2d00ab949e6840ec1071","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0bc3ee08eca1217f546a2d00ab949e6840ec1071"}],"stats":{"total":1388,"additions":156,"deletions":1232},"files":[{"sha":"70326e7b3849844d96fb7b75d434ac11219f0e1a","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -63,7 +63,7 @@ under the License.\n       \n   <!-- Authentication modules -->\n   <AuthModule id=\"DefaultLDAPAuthModule\" authModuleState=\"ACTIVE\"\n-              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"uid=admin,ou=system\", \"bindCredential\":\"secret\",\"ldapUrl\":\"ldap://localhost:1389\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=People,o=isp\",\"subtreeSearch\":true,\"principalAttributeList\":[\"sn\",\"givenName\",\"mail\",\"cn\"]}'\n+              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"${testds.bindDn}\", \"bindCredential\":\"${testds.password}\",\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"subtreeSearch\":true,\"principalAttributeList\":[\"sn\",\"givenName\",\"mail\",\"cn\"]}'\n               items='[{\"intAttrName\":\"mail\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"givenName\",\"extAttrName\":\"givenName\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"sn\",\"extAttrName\":\"sn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"cn\",\"extAttrName\":\"cn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n   <AuthModule id=\"DefaultJDBCAuthModule\" authModuleState=\"ACTIVE\"\n               description=\"JDBC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JDBCAuthModuleConf\",\"sql\":\"SELECT * FROM users_table WHERE name=?\", \"fieldPassword\": \"password\"}'/>\n@@ -89,7 +89,7 @@ under the License.\n \n   <!-- Attribute repositories -->\n   <AttrRepo id=\"DefaultLDAPAttrRepo\" attrRepoState=\"ACTIVE\"\n-            description=\"LDAP attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.LDAPAttrRepoConf\",\"searchFilter\":\"cn={user}\",\"subtreeSearch\":true,\"ldapUrl\":\"ldap://localhost:1389\",\"bindDn\":\"uid=admin,ou=system\",\"bindCredential\":\"secret\",\"baseDn\":\"ou=People,o=isp\",\"attributes\":{},\"useAllQueryAttributes\":true,\"queryAttributes\":{}}'/>\n+            description=\"LDAP attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.LDAPAttrRepoConf\",\"searchFilter\":\"cn={user}\",\"subtreeSearch\":true,\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"bindDn\":\"${testds.bindDn}\",\"bindCredential\":\"${testds.password}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"attributes\":{},\"useAllQueryAttributes\":true,\"queryAttributes\":{}}'/>\n   <AttrRepo id=\"DefaultJDBCAttrRepo\" attrRepoState=\"ACTIVE\"\n             description=\"JDBC attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.JDBCAttrRepoConf\",\"sql\":\"SELECT * FROM table WHERE name=?\",\"dialect\":\"org.hibernate.dialect.H2Dialect\",\"driverClass\":\"org.h2.Driver\",\"url\":\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\",\"user\":\"username\",\"password\":\"password\",\"singleRow\":true,\"requireAllAttributes\":true,\"caseCanonicalization\":\"NONE\",\"queryType\":\"AND\",\"columnMappings\":{},\"username\":[],\"attributes\":{},\"caseInsensitiveQueryAttributes\":[],\"queryAttributes\":{}}'/>\n   <AttrRepo id=\"DefaultStubAttrRepo\" attrRepoState=\"ACTIVE\"\n@@ -505,12 +505,12 @@ under the License.\n                 capabilities='[\"CREATE\",\"UPDATE\",\"DELETE\",\"SEARCH\",\"SYNC\"]'/>\n     \n   <ConnInstance id=\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\"\n-                bundleName=\"net.tirasa.connid.bundles.ldap\" displayName=\"ApacheDS\"\n+                bundleName=\"net.tirasa.connid.bundles.ldap\" displayName=\"TestLDAP\"\n                 adminRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n                 location=\"${connid.location}\"\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n-                jsonConf='[{\"schema\":{\"name\":\"host\",\"type\":\"java.lang.String\",\"required\":true,\"order\":1,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"localhost\"],\"overridable\":false},{\"schema\":{\"name\":\"port\",\"type\":\"int\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":[389]},\"values\":[1389],\"overridable\":false},{\"schema\":{\"name\":\"ssl\",\"type\":\"boolean\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"failover\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"principal\",\"type\":\"java.lang.String\",\"required\":false,\"order\":5,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"uid=admin,ou=system\"],\"overridable\":false},{\"schema\":{\"name\":\"credentials\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":6,\"confidential\":true,\"defaultValues\":[]},\"values\":[\"secret\"],\"overridable\":false},{\"schema\":{\"name\":\"baseContexts\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"],\"overridable\":true},{\"schema\":{\"name\":\"passwordAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":8,\"confidential\":false,\"defaultValues\":[\"userPassword\"]},\"values\":[\"userpassword\"],\"overridable\":false},{\"schema\":{\"name\":\"accountObjectClasses\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":[\"top\",\"person\",\"organizationalPerson\",\"inetOrgPerson\"]},\"values\":[\"inetOrgPerson\"],\"overridable\":false},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":[\"uid\",\"cn\"]},\"values\":[\"uid\"],\"overridable\":false},{\"schema\":{\"name\":\"accountSearchFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"uid=*\"],\"overridable\":false},{\"schema\":{\"name\":\"groupObjectClasses\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":[\"top\",\"groupOfUniqueNames\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"groupNameAttributes\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":[\"cn\"]},\"values\":[\"cn\"],\"overridable\":false},{\"schema\":{\"name\":\"groupMemberAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":[\"uniqueMember\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"type\":\"boolean\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"addPrincipalToNewGroups\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"type\":\"java.lang.String\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"SHA\"],\"overridable\":false},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"useVlvControls\",\"type\":\"boolean\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":[false]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"vlvSortAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"uid\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"uidAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"values\":[\"cn\"],\"overridable\":true},{\"schema\":{\"name\":\"gidAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"values\":[\"cn\"],\"overridable\":true},{\"schema\":{\"name\":\"readSchema\",\"type\":\"boolean\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":[true]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"],\"overridable\":false},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":[\"inetOrgPerson\"]},\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"],\"overridable\":false},{\"schema\":{\"name\":\"attributesToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":27,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":28,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"changeLogBlockSize\",\"type\":\"int\",\"required\":false,\"order\":29,\"confidential\":false,\"defaultValues\":[100]},\"values\":[100],\"overridable\":false},{\"schema\":{\"name\":\"changeNumberAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":30,\"confidential\":false,\"defaultValues\":[\"changeNumber\"]},\"values\":[\"changeNumber\"],\"overridable\":false},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"type\":\"boolean\",\"required\":false,\"order\":31,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"type\":\"boolean\",\"required\":false,\"order\":32,\"confidential\":false,\"defaultValues\":[true]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"synchronizePasswords\",\"type\":\"boolean\",\"required\":false,\"order\":33,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"type\":\"java.lang.String\",\"required\":false,\"order\":34,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":35,\"confidential\":true,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":36,\"confidential\":true,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"statusManagementClass\",\"type\":\"java.lang.String\",\"required\":false,\"order\":37,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"],\"overridable\":false},{\"schema\":{\"name\":\"retrievePasswordsWithSearch\",\"type\":\"boolean\",\"required\":false,\"order\":38,\"confidential\":false,\"defaultValues\":[false]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"dnAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":39,\"confidential\":false,\"defaultValues\":[\"entryDN\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"groupSearchFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":40,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"readTimeout\",\"type\":\"long\",\"required\":false,\"order\":41,\"confidential\":false,\"defaultValues\":[0]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"connectTimeout\",\"type\":\"long\",\"required\":false,\"order\":42,\"confidential\":false,\"defaultValues\":[0]},\"values\":[],\"overridable\":false}]'\n+                jsonConf='[{\"schema\":{\"name\":\"host\",\"type\":\"java.lang.String\",\"required\":true,\"order\":1,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"localhost\"],\"overridable\":false},{\"schema\":{\"name\":\"port\",\"type\":\"int\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":[389]},\"values\":[${testds.port}],\"overridable\":false},{\"schema\":{\"name\":\"ssl\",\"type\":\"boolean\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"failover\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"principal\",\"type\":\"java.lang.String\",\"required\":false,\"order\":5,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"${testds.bindDn}\"],\"overridable\":false},{\"schema\":{\"name\":\"credentials\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":6,\"confidential\":true,\"defaultValues\":[]},\"values\":[\"${testds.password}\"],\"overridable\":false},{\"schema\":{\"name\":\"baseContexts\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"ou=people,${testds.rootDn}\",\"ou=groups,${testds.rootDn}\"],\"overridable\":true},{\"schema\":{\"name\":\"passwordAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":8,\"confidential\":false,\"defaultValues\":[\"userPassword\"]},\"values\":[\"userpassword\"],\"overridable\":false},{\"schema\":{\"name\":\"accountObjectClasses\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":[\"top\",\"person\",\"organizationalPerson\",\"inetOrgPerson\"]},\"values\":[\"inetOrgPerson\"],\"overridable\":false},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":[\"uid\",\"cn\"]},\"values\":[\"uid\"],\"overridable\":false},{\"schema\":{\"name\":\"accountSearchFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"uid=*\"],\"overridable\":false},{\"schema\":{\"name\":\"groupObjectClasses\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":[\"top\",\"groupOfUniqueNames\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"groupNameAttributes\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":[\"cn\"]},\"values\":[\"cn\"],\"overridable\":false},{\"schema\":{\"name\":\"groupMemberAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":[\"uniqueMember\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"type\":\"boolean\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"addPrincipalToNewGroups\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"type\":\"java.lang.String\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"SHA\"],\"overridable\":false},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"useVlvControls\",\"type\":\"boolean\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":[false]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"vlvSortAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"uid\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"uidAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"values\":[\"cn\"],\"overridable\":true},{\"schema\":{\"name\":\"gidAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"values\":[\"cn\"],\"overridable\":true},{\"schema\":{\"name\":\"readSchema\",\"type\":\"boolean\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":[true]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"ou=people,${testds.rootDn}\",\"ou=groups,${testds.rootDn}\"],\"overridable\":false},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":[\"inetOrgPerson\"]},\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"],\"overridable\":false},{\"schema\":{\"name\":\"attributesToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":27,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":28,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"changeLogBlockSize\",\"type\":\"int\",\"required\":false,\"order\":29,\"confidential\":false,\"defaultValues\":[100]},\"values\":[100],\"overridable\":false},{\"schema\":{\"name\":\"changeNumberAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":30,\"confidential\":false,\"defaultValues\":[\"changeNumber\"]},\"values\":[\"changeNumber\"],\"overridable\":false},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"type\":\"boolean\",\"required\":false,\"order\":31,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"type\":\"boolean\",\"required\":false,\"order\":32,\"confidential\":false,\"defaultValues\":[true]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"synchronizePasswords\",\"type\":\"boolean\",\"required\":false,\"order\":33,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"type\":\"java.lang.String\",\"required\":false,\"order\":34,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":35,\"confidential\":true,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":36,\"confidential\":true,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"statusManagementClass\",\"type\":\"java.lang.String\",\"required\":false,\"order\":37,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"],\"overridable\":false},{\"schema\":{\"name\":\"retrievePasswordsWithSearch\",\"type\":\"boolean\",\"required\":false,\"order\":38,\"confidential\":false,\"defaultValues\":[false]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"dnAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":39,\"confidential\":false,\"defaultValues\":[\"entryDN\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"groupSearchFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":40,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"readTimeout\",\"type\":\"long\",\"required\":false,\"order\":41,\"confidential\":false,\"defaultValues\":[0]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"connectTimeout\",\"type\":\"long\",\"required\":false,\"order\":42,\"confidential\":false,\"defaultValues\":[0]},\"values\":[],\"overridable\":false}]'\n                 capabilities='[\"CREATE\",\"UPDATE\",\"UPDATE_DELTA\",\"DELETE\",\"SEARCH\"]'/>\n   \n   <ConnInstance id=\"a28abd9b-9f4a-4ef6-a7a8-d19ad2a8f29d\" displayName=\"H2-test2\"\n@@ -596,16 +596,16 @@ under the License.\n                     randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n                     propagationPriority=\"1\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\"\n-                    provisions='[{\"anyType\":\"USER\",\"objectClass\":\"__ACCOUNT__\",\"auxClasses\":[\"generic membership\",\"minimal group\"],\"syncToken\":null,\"ignoreCaseMatch\":false,\"uidOnCreate\":null,\"mapping\":{\"connObjectLink\":\"&#39;uid=&#39; + username + &#39;,ou=people,o=isp&#39;\",\"items\":[{\"intAttrName\":\"username\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"password\",\"extAttrName\":\"__PASSWORD__\",\"connObjectKey\":false,\"password\":true,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"surname\",\"extAttrName\":\"sn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"fullname\",\"extAttrName\":\"cn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"email\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"title\",\"extAttrName\":\"title\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"postalAddress\",\"extAttrName\":\"postalAddress\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"userId\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"obscure\",\"extAttrName\":\"registeredAddress\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"photo\",\"extAttrName\":\"jpegPhoto\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"linkingItems\":[{\"intAttrName\":\"virtualReadOnly\",\"extAttrName\":\"givenname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"PULL\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"username\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}},\"virSchemas\":[\"virtualReadOnly\"]},{\"anyType\":\"GROUP\",\"objectClass\":\"__GROUP__\",\"auxClasses\":[],\"syncToken\":null,\"ignoreCaseMatch\":false,\"uidOnCreate\":null,\"mapping\":{\"connObjectLink\":\"&#39;cn=&#39; + name + &#39;,ou=groups,o=isp&#39;\",\"items\":[{\"intAttrName\":\"name\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"userOwner\",\"extAttrName\":\"owner\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"title\",\"extAttrName\":\"description\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"linkingItems\":[{\"intAttrName\":\"rvirtualdata\",\"extAttrName\":\"businessCategory\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"name\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}},\"virSchemas\":[\"rvirtualdata\"]}]'/>\n+                    provisions='[{\"anyType\":\"USER\",\"objectClass\":\"__ACCOUNT__\",\"auxClasses\":[\"generic membership\",\"minimal group\"],\"syncToken\":null,\"ignoreCaseMatch\":false,\"uidOnCreate\":null,\"mapping\":{\"connObjectLink\":\"&#39;uid=&#39; + username + &#39;,ou=people,${testds.rootDn}&#39;\",\"items\":[{\"intAttrName\":\"username\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"password\",\"extAttrName\":\"__PASSWORD__\",\"connObjectKey\":false,\"password\":true,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"surname\",\"extAttrName\":\"sn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"fullname\",\"extAttrName\":\"cn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"email\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"title\",\"extAttrName\":\"title\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"postalAddress\",\"extAttrName\":\"postalAddress\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"userId\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"obscure\",\"extAttrName\":\"registeredAddress\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"photo\",\"extAttrName\":\"jpegPhoto\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"linkingItems\":[{\"intAttrName\":\"virtualReadOnly\",\"extAttrName\":\"givenname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"PULL\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"username\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}},\"virSchemas\":[\"virtualReadOnly\"]},{\"anyType\":\"GROUP\",\"objectClass\":\"__GROUP__\",\"auxClasses\":[],\"syncToken\":null,\"ignoreCaseMatch\":false,\"uidOnCreate\":null,\"mapping\":{\"connObjectLink\":\"&#39;cn=&#39; + name + &#39;,ou=groups,${testds.rootDn}&#39;\",\"items\":[{\"intAttrName\":\"name\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"userOwner\",\"extAttrName\":\"owner\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"title\",\"extAttrName\":\"description\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"linkingItems\":[{\"intAttrName\":\"rvirtualdata\",\"extAttrName\":\"businessCategory\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"name\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}},\"virSchemas\":[\"rvirtualdata\"]}]'/>\n   <Implementation id=\"LDAPMembershipPropagationActions\" type=\"PROPAGATION_ACTIONS\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions\"/>\n   <ExternalResourcePropAction resource_id=\"resource-ldap\" implementation_id=\"LDAPMembershipPropagationActions\"/>\n   <ExternalResource id=\"resource-ldap-orgunit\" connector_id=\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\"\n                     randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n                     propagationPriority=\"1\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\"\n-                    jsonConf='[{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute. Default is \\\"entryUUID\\\".\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"overridable\":true,\"values\":[\"l\"]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"overridable\":true,\"values\":[\"o=isp\"]}]'\n-                    orgUnit='{\"objectClass\":\"organizationalUnit\",\"syncToken\":null,\"ignoreCaseMatch\":false,\"connObjectLink\":\"syncope:fullPath2Dn(fullPath, &#39;ou&#39;) + &#39;,o=isp&#39;\",\"items\":[{\"intAttrName\":\"fullpath\",\"extAttrName\":\"l\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"name\",\"extAttrName\":\"ou\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"fullpath\",\"extAttrName\":\"l\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}}'/>\n+                    jsonConf='[{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute. Default is \\\"entryUUID\\\".\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"overridable\":true,\"values\":[\"l\"]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"overridable\":true,\"values\":[\"${testds.rootDn}\"]}]'\n+                    orgUnit='{\"objectClass\":\"organizationalUnit\",\"syncToken\":null,\"ignoreCaseMatch\":false,\"connObjectLink\":\"syncope:fullPath2Dn(fullPath, &#39;ou&#39;) + &#39;,${testds.rootDn}&#39;\",\"items\":[{\"intAttrName\":\"fullpath\",\"extAttrName\":\"l\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"name\",\"extAttrName\":\"ou\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"fullpath\",\"extAttrName\":\"l\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}}'/>\n   \n   <ExternalResource id=\"ws-target-resource-nopropagation\" connector_id=\"fcf9f2b0-f7d6-42c9-84a6-61b28255a42b\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\""},{"sha":"9a0e075325bbc0e200f5af1f766c8651b08a36e8","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -63,7 +63,7 @@ under the License.\n \n   <!-- Authentication modules -->\n   <AuthModule id=\"DefaultLDAPAuthModule\" authModuleState=\"ACTIVE\"\n-              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"uid=admin,ou=system\", \"bindCredential\":\"secret\",\"ldapUrl\":\"ldap://localhost:1389\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=People,o=isp\",\"subtreeSearch\":true,\"principalAttributeList\":[\"sn\",\"givenName\",\"mail\",\"cn\"]}'\n+              description=\"LDAP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.LDAPAuthModuleConf\",\"userIdAttribute\":\"cn\",\"bindDn\": \"${testds.bindDn}\", \"bindCredential\":\"${testds.password}\",\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"searchFilter\":\"cn={user}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"subtreeSearch\":true,\"principalAttributeList\":[\"sn\",\"givenName\",\"mail\",\"cn\"]}'\n               items='[{\"intAttrName\":\"mail\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"givenName\",\"extAttrName\":\"givenName\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"sn\",\"extAttrName\":\"sn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"cn\",\"extAttrName\":\"cn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"NONE\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}]'/>\n   <AuthModule id=\"DefaultJDBCAuthModule\" authModuleState=\"ACTIVE\"\n               description=\"JDBC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JDBCAuthModuleConf\",\"sql\":\"SELECT * FROM users_table WHERE name=?\", \"fieldPassword\": \"password\"}'/>\n@@ -89,7 +89,7 @@ under the License.\n \n   <!-- Attribute repositories -->\n   <AttrRepo id=\"DefaultLDAPAttrRepo\" attrRepoState=\"ACTIVE\"\n-            description=\"LDAP attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.LDAPAttrRepoConf\",\"searchFilter\":\"cn={user}\",\"subtreeSearch\":true,\"ldapUrl\":\"ldap://localhost:1389\",\"bindDn\":\"uid=admin,ou=system\",\"bindCredential\":\"secret\",\"baseDn\":\"ou=People,o=isp\",\"attributes\":{},\"useAllQueryAttributes\":true,\"queryAttributes\":{}}'/>\n+            description=\"LDAP attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.LDAPAttrRepoConf\",\"searchFilter\":\"cn={user}\",\"subtreeSearch\":true,\"ldapUrl\":\"ldap://localhost:${testds.port}\",\"bindDn\":\"${testds.bindDn}\",\"bindCredential\":\"${testds.password}\",\"baseDn\":\"ou=People,${testds.rootDn}\",\"attributes\":{},\"useAllQueryAttributes\":true,\"queryAttributes\":{}}'/>\n   <AttrRepo id=\"DefaultJDBCAttrRepo\" attrRepoState=\"ACTIVE\"\n             description=\"JDBC attr repo\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.attr.JDBCAttrRepoConf\",\"sql\":\"SELECT * FROM table WHERE name=?\",\"dialect\":\"org.hibernate.dialect.H2Dialect\",\"driverClass\":\"org.h2.Driver\",\"url\":\"jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\",\"user\":\"username\",\"password\":\"password\",\"singleRow\":true,\"requireAllAttributes\":true,\"caseCanonicalization\":\"NONE\",\"queryType\":\"AND\",\"columnMappings\":{},\"username\":[],\"attributes\":{},\"caseInsensitiveQueryAttributes\":[],\"queryAttributes\":{}}'/>\n   <AttrRepo id=\"DefaultStubAttrRepo\" attrRepoState=\"ACTIVE\"\n@@ -591,12 +591,12 @@ under the License.\n                 capabilities='[\"CREATE\",\"UPDATE\",\"DELETE\",\"SEARCH\",\"SYNC\"]'/>\n     \n   <ConnInstance id=\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\"\n-                bundleName=\"net.tirasa.connid.bundles.ldap\" displayName=\"ApacheDS\"\n+                bundleName=\"net.tirasa.connid.bundles.ldap\" displayName=\"TestLDAP\"\n                 adminRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n                 location=\"${connid.location}\"\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n-                jsonConf='[{\"schema\":{\"name\":\"host\",\"type\":\"java.lang.String\",\"required\":true,\"order\":1,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"localhost\"],\"overridable\":false},{\"schema\":{\"name\":\"port\",\"type\":\"int\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":[389]},\"values\":[1389],\"overridable\":false},{\"schema\":{\"name\":\"ssl\",\"type\":\"boolean\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"failover\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"principal\",\"type\":\"java.lang.String\",\"required\":false,\"order\":5,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"uid=admin,ou=system\"],\"overridable\":false},{\"schema\":{\"name\":\"credentials\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":6,\"confidential\":true,\"defaultValues\":[]},\"values\":[\"secret\"],\"overridable\":false},{\"schema\":{\"name\":\"baseContexts\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"],\"overridable\":true},{\"schema\":{\"name\":\"passwordAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":8,\"confidential\":false,\"defaultValues\":[\"userPassword\"]},\"values\":[\"userpassword\"],\"overridable\":false},{\"schema\":{\"name\":\"accountObjectClasses\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":[\"top\",\"person\",\"organizationalPerson\",\"inetOrgPerson\"]},\"values\":[\"inetOrgPerson\"],\"overridable\":false},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":[\"uid\",\"cn\"]},\"values\":[\"uid\"],\"overridable\":false},{\"schema\":{\"name\":\"accountSearchFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"uid=*\"],\"overridable\":false},{\"schema\":{\"name\":\"groupObjectClasses\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":[\"top\",\"groupOfUniqueNames\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"groupNameAttributes\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":[\"cn\"]},\"values\":[\"cn\"],\"overridable\":false},{\"schema\":{\"name\":\"groupMemberAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":[\"uniqueMember\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"type\":\"boolean\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"addPrincipalToNewGroups\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"type\":\"java.lang.String\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"SHA\"],\"overridable\":false},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"useVlvControls\",\"type\":\"boolean\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":[false]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"vlvSortAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"uid\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"uidAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"values\":[\"cn\"],\"overridable\":true},{\"schema\":{\"name\":\"gidAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"values\":[\"cn\"],\"overridable\":true},{\"schema\":{\"name\":\"readSchema\",\"type\":\"boolean\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":[true]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"],\"overridable\":false},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":[\"inetOrgPerson\"]},\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"],\"overridable\":false},{\"schema\":{\"name\":\"attributesToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":27,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":28,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"changeLogBlockSize\",\"type\":\"int\",\"required\":false,\"order\":29,\"confidential\":false,\"defaultValues\":[100]},\"values\":[100],\"overridable\":false},{\"schema\":{\"name\":\"changeNumberAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":30,\"confidential\":false,\"defaultValues\":[\"changeNumber\"]},\"values\":[\"changeNumber\"],\"overridable\":false},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"type\":\"boolean\",\"required\":false,\"order\":31,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"type\":\"boolean\",\"required\":false,\"order\":32,\"confidential\":false,\"defaultValues\":[true]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"synchronizePasswords\",\"type\":\"boolean\",\"required\":false,\"order\":33,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"type\":\"java.lang.String\",\"required\":false,\"order\":34,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":35,\"confidential\":true,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":36,\"confidential\":true,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"statusManagementClass\",\"type\":\"java.lang.String\",\"required\":false,\"order\":37,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"],\"overridable\":false},{\"schema\":{\"name\":\"retrievePasswordsWithSearch\",\"type\":\"boolean\",\"required\":false,\"order\":38,\"confidential\":false,\"defaultValues\":[false]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"dnAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":39,\"confidential\":false,\"defaultValues\":[\"entryDN\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"groupSearchFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":40,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"readTimeout\",\"type\":\"long\",\"required\":false,\"order\":41,\"confidential\":false,\"defaultValues\":[0]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"connectTimeout\",\"type\":\"long\",\"required\":false,\"order\":42,\"confidential\":false,\"defaultValues\":[0]},\"values\":[],\"overridable\":false}]'\n+                jsonConf='[{\"schema\":{\"name\":\"host\",\"type\":\"java.lang.String\",\"required\":true,\"order\":1,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"localhost\"],\"overridable\":false},{\"schema\":{\"name\":\"port\",\"type\":\"int\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":[389]},\"values\":[${testds.port}],\"overridable\":false},{\"schema\":{\"name\":\"ssl\",\"type\":\"boolean\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"failover\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"principal\",\"type\":\"java.lang.String\",\"required\":false,\"order\":5,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"${testds.bindDn}\"],\"overridable\":false},{\"schema\":{\"name\":\"credentials\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":6,\"confidential\":true,\"defaultValues\":[]},\"values\":[\"${testds.password}\"],\"overridable\":false},{\"schema\":{\"name\":\"baseContexts\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"ou=people,${testds.rootDn}\",\"ou=groups,${testds.rootDn}\"],\"overridable\":true},{\"schema\":{\"name\":\"passwordAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":8,\"confidential\":false,\"defaultValues\":[\"userPassword\"]},\"values\":[\"userpassword\"],\"overridable\":false},{\"schema\":{\"name\":\"accountObjectClasses\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":[\"top\",\"person\",\"organizationalPerson\",\"inetOrgPerson\"]},\"values\":[\"inetOrgPerson\"],\"overridable\":false},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":[\"uid\",\"cn\"]},\"values\":[\"uid\"],\"overridable\":false},{\"schema\":{\"name\":\"accountSearchFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"uid=*\"],\"overridable\":false},{\"schema\":{\"name\":\"groupObjectClasses\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":[\"top\",\"groupOfUniqueNames\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"groupNameAttributes\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":[\"cn\"]},\"values\":[\"cn\"],\"overridable\":false},{\"schema\":{\"name\":\"groupMemberAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":[\"uniqueMember\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"type\":\"boolean\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"addPrincipalToNewGroups\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"type\":\"java.lang.String\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"SHA\"],\"overridable\":false},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"useVlvControls\",\"type\":\"boolean\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":[false]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"vlvSortAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"uid\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"uidAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"values\":[\"cn\"],\"overridable\":true},{\"schema\":{\"name\":\"gidAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"values\":[\"cn\"],\"overridable\":true},{\"schema\":{\"name\":\"readSchema\",\"type\":\"boolean\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":[true]},\"values\":[\"true\"],\"overridable\":false},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"ou=people,${testds.rootDn}\",\"ou=groups,${testds.rootDn}\"],\"overridable\":false},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":[\"inetOrgPerson\"]},\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"],\"overridable\":false},{\"schema\":{\"name\":\"attributesToSynchronize\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":27,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":28,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"changeLogBlockSize\",\"type\":\"int\",\"required\":false,\"order\":29,\"confidential\":false,\"defaultValues\":[100]},\"values\":[100],\"overridable\":false},{\"schema\":{\"name\":\"changeNumberAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":30,\"confidential\":false,\"defaultValues\":[\"changeNumber\"]},\"values\":[\"changeNumber\"],\"overridable\":false},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"type\":\"boolean\",\"required\":false,\"order\":31,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"type\":\"boolean\",\"required\":false,\"order\":32,\"confidential\":false,\"defaultValues\":[true]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"synchronizePasswords\",\"type\":\"boolean\",\"required\":false,\"order\":33,\"confidential\":false,\"defaultValues\":[false]},\"values\":[\"false\"],\"overridable\":false},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"type\":\"java.lang.String\",\"required\":false,\"order\":34,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":35,\"confidential\":true,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":36,\"confidential\":true,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"statusManagementClass\",\"type\":\"java.lang.String\",\"required\":false,\"order\":37,\"confidential\":false,\"defaultValues\":[]},\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"],\"overridable\":false},{\"schema\":{\"name\":\"retrievePasswordsWithSearch\",\"type\":\"boolean\",\"required\":false,\"order\":38,\"confidential\":false,\"defaultValues\":[false]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"dnAttribute\",\"type\":\"java.lang.String\",\"required\":false,\"order\":39,\"confidential\":false,\"defaultValues\":[\"entryDN\"]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"groupSearchFilter\",\"type\":\"java.lang.String\",\"required\":false,\"order\":40,\"confidential\":false,\"defaultValues\":[]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"readTimeout\",\"type\":\"long\",\"required\":false,\"order\":41,\"confidential\":false,\"defaultValues\":[0]},\"values\":[],\"overridable\":false},{\"schema\":{\"name\":\"connectTimeout\",\"type\":\"long\",\"required\":false,\"order\":42,\"confidential\":false,\"defaultValues\":[0]},\"values\":[],\"overridable\":false}]'\n                 capabilities='[\"CREATE\",\"UPDATE\",\"UPDATE_DELTA\",\"DELETE\",\"SEARCH\"]'/>\n   \n   <ConnInstance id=\"a28abd9b-9f4a-4ef6-a7a8-d19ad2a8f29d\" displayName=\"H2-test2\"\n@@ -682,16 +682,16 @@ under the License.\n                     randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n                     propagationPriority=\"1\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\"\n-                    provisions='[{\"anyType\":\"USER\",\"objectClass\":\"__ACCOUNT__\",\"auxClasses\":[\"generic membership\",\"minimal group\"],\"syncToken\":null,\"ignoreCaseMatch\":false,\"uidOnCreate\":null,\"mapping\":{\"connObjectLink\":\"&#39;uid=&#39; + username + &#39;,ou=people,o=isp&#39;\",\"items\":[{\"intAttrName\":\"username\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"password\",\"extAttrName\":\"__PASSWORD__\",\"connObjectKey\":false,\"password\":true,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"surname\",\"extAttrName\":\"sn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"fullname\",\"extAttrName\":\"cn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"email\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"title\",\"extAttrName\":\"title\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"postalAddress\",\"extAttrName\":\"postalAddress\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"userId\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"obscure\",\"extAttrName\":\"registeredAddress\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"photo\",\"extAttrName\":\"jpegPhoto\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"linkingItems\":[{\"intAttrName\":\"virtualReadOnly\",\"extAttrName\":\"givenname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"PULL\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"username\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}},\"virSchemas\":[\"virtualReadOnly\"]},{\"anyType\":\"GROUP\",\"objectClass\":\"__GROUP__\",\"auxClasses\":[],\"syncToken\":null,\"ignoreCaseMatch\":false,\"uidOnCreate\":null,\"mapping\":{\"connObjectLink\":\"&#39;cn=&#39; + name + &#39;,ou=groups,o=isp&#39;\",\"items\":[{\"intAttrName\":\"name\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"userOwner\",\"extAttrName\":\"owner\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"title\",\"extAttrName\":\"description\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"linkingItems\":[{\"intAttrName\":\"rvirtualdata\",\"extAttrName\":\"businessCategory\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"name\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}},\"virSchemas\":[\"rvirtualdata\"]}]'/>\n+                    provisions='[{\"anyType\":\"USER\",\"objectClass\":\"__ACCOUNT__\",\"auxClasses\":[\"generic membership\",\"minimal group\"],\"syncToken\":null,\"ignoreCaseMatch\":false,\"uidOnCreate\":null,\"mapping\":{\"connObjectLink\":\"&#39;uid=&#39; + username + &#39;,ou=people,${testds.rootDn}&#39;\",\"items\":[{\"intAttrName\":\"username\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"password\",\"extAttrName\":\"__PASSWORD__\",\"connObjectKey\":false,\"password\":true,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"surname\",\"extAttrName\":\"sn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"fullname\",\"extAttrName\":\"cn\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"email\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"title\",\"extAttrName\":\"title\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"postalAddress\",\"extAttrName\":\"postalAddress\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"userId\",\"extAttrName\":\"mail\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"obscure\",\"extAttrName\":\"registeredAddress\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"photo\",\"extAttrName\":\"jpegPhoto\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"linkingItems\":[{\"intAttrName\":\"virtualReadOnly\",\"extAttrName\":\"givenname\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"PULL\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"username\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}},\"virSchemas\":[\"virtualReadOnly\"]},{\"anyType\":\"GROUP\",\"objectClass\":\"__GROUP__\",\"auxClasses\":[],\"syncToken\":null,\"ignoreCaseMatch\":false,\"uidOnCreate\":null,\"mapping\":{\"connObjectLink\":\"&#39;cn=&#39; + name + &#39;,ou=groups,${testds.rootDn}&#39;\",\"items\":[{\"intAttrName\":\"name\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"userOwner\",\"extAttrName\":\"owner\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"title\",\"extAttrName\":\"description\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"linkingItems\":[{\"intAttrName\":\"rvirtualdata\",\"extAttrName\":\"businessCategory\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"false\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"name\",\"extAttrName\":\"cn\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}},\"virSchemas\":[\"rvirtualdata\"]}]'/>\n   <Implementation id=\"LDAPMembershipPropagationActions\" type=\"PROPAGATION_ACTIONS\" engine=\"JAVA\"\n                   body=\"org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions\"/>\n   <ExternalResourcePropAction resource_id=\"resource-ldap\" implementation_id=\"LDAPMembershipPropagationActions\"/>\n   <ExternalResource id=\"resource-ldap-orgunit\" connector_id=\"74141a3b-0762-4720-a4aa-fc3e374ef3ef\"\n                     randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\"\n                     propagationPriority=\"1\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" provisioningTraceLevel=\"ALL\"\n-                    jsonConf='[{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute. Default is \\\"entryUUID\\\".\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"overridable\":true,\"values\":[\"l\"]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"overridable\":true,\"values\":[\"o=isp\"]}]'\n-                    orgUnit='{\"objectClass\":\"organizationalUnit\",\"syncToken\":null,\"ignoreCaseMatch\":false,\"connObjectLink\":\"syncope:fullPath2Dn(fullPath, &#39;ou&#39;) + &#39;,o=isp&#39;\",\"items\":[{\"intAttrName\":\"fullpath\",\"extAttrName\":\"l\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"name\",\"extAttrName\":\"ou\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"fullpath\",\"extAttrName\":\"l\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}}'/>\n+                    jsonConf='[{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute. Default is \\\"entryUUID\\\".\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":[\"entryUUID\"]},\"overridable\":true,\"values\":[\"l\"]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":[]},\"overridable\":true,\"values\":[\"${testds.rootDn}\"]}]'\n+                    orgUnit='{\"objectClass\":\"organizationalUnit\",\"syncToken\":null,\"ignoreCaseMatch\":false,\"connObjectLink\":\"syncope:fullPath2Dn(fullPath, &#39;ou&#39;) + &#39;,${testds.rootDn}&#39;\",\"items\":[{\"intAttrName\":\"fullpath\",\"extAttrName\":\"l\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]},{\"intAttrName\":\"name\",\"extAttrName\":\"ou\",\"connObjectKey\":false,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}],\"connObjectKeyItem\":{\"intAttrName\":\"fullpath\",\"extAttrName\":\"l\",\"connObjectKey\":true,\"password\":false,\"mandatoryCondition\":\"true\",\"purpose\":\"BOTH\",\"propagationJEXLTransformer\":null,\"pullJEXLTransformer\":null,\"transformers\":[]}}'/>\n   \n   <ExternalResource id=\"ws-target-resource-nopropagation\" connector_id=\"fcf9f2b0-f7d6-42c9-84a6-61b28255a42b\"\n                     randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" overrideCapabilities=\"0\""},{"sha":"879a014b0a4af23cff12388b8c7d002dca5b1190","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPPasswordPropagationActions.java","status":"modified","additions":22,"deletions":26,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.core.provisioning.java.propagation;\n \n import java.util.Base64;\n+import java.util.Optional;\n import java.util.Set;\n import javax.xml.bind.DatatypeConverter;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n-import org.apache.syncope.core.persistence.api.entity.task.PropagationData;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n@@ -39,6 +39,7 @@\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.CollectionUtils;\n \n /**\n  * Propagate a non-cleartext password out to a resource, if the PropagationManager has not already\n@@ -48,50 +49,45 @@\n @SyncopeImplementation(scope = InstanceScope.PER_CONTEXT)\n public class LDAPPasswordPropagationActions implements PropagationActions {\n \n-    private static final String CLEARTEXT = \"CLEARTEXT\";\n+    protected static final String CLEARTEXT = \"CLEARTEXT\";\n \n     @Autowired\n-    private UserDAO userDAO;\n+    protected UserDAO userDAO;\n \n     @Transactional(readOnly = true)\n     @Override\n     public void before(final PropagationTaskInfo taskInfo) {\n         if (AnyTypeKind.USER == taskInfo.getAnyTypeKind()) {\n             User user = userDAO.find(taskInfo.getEntityKey());\n+            if (user == null || user.getPassword() == null) {\n+                return;\n+            }\n \n-            PropagationData data = taskInfo.getPropagationData();\n-            if (user != null && user.getPassword() != null && data.getAttributes() != null) {\n-                Set<Attribute> attrs = data.getAttributes();\n-\n-                Attribute missing = AttributeUtil.find(PropagationManager.MANDATORY_MISSING_ATTR_NAME, attrs);\n-\n-                ConnInstance connInstance = taskInfo.getResource().getConnector();\n-                String cipherAlgorithm = getCipherAlgorithm(connInstance);\n-                if (missing != null && missing.getValue() != null && missing.getValue().size() == 1\n-                        && missing.getValue().get(0).equals(OperationalAttributes.PASSWORD_NAME)\n-                        && cipherAlgorithmMatches(getCipherAlgorithm(connInstance), user.getCipherAlgorithm())) {\n+            Set<Attribute> attrs = taskInfo.getPropagationData().getAttributes();\n \n-                    String password = user.getPassword().toLowerCase();\n-                    byte[] decodedPassword = DatatypeConverter.parseHexBinary(password);\n-                    String base64EncodedPassword = Base64.getEncoder().encodeToString(decodedPassword);\n+            String cipherAlgorithm = getCipherAlgorithm(taskInfo.getResource().getConnector());\n+            Optional.ofNullable(AttributeUtil.find(PropagationManager.MANDATORY_MISSING_ATTR_NAME, attrs)).\n+                    filter(missing -> !CollectionUtils.isEmpty(missing.getValue())\n+                    && OperationalAttributes.PASSWORD_NAME.equals(missing.getValue().get(0))\n+                    && cipherAlgorithmMatches(cipherAlgorithm, user.getCipherAlgorithm())).\n+                    ifPresent(missing -> {\n+                        attrs.remove(missing);\n \n-                    String cipherPlusPassword = ('{' + cipherAlgorithm.toLowerCase() + '}' + base64EncodedPassword);\n+                        byte[] decodedPassword = DatatypeConverter.parseHexBinary(user.getPassword().toLowerCase());\n+                        String base64EncodedPassword = Base64.getEncoder().encodeToString(decodedPassword);\n \n-                    Attribute passwordAttribute = AttributeBuilder.buildPassword(\n-                            new GuardedString(cipherPlusPassword.toCharArray()));\n+                        String cipherPlusPassword = '{' + cipherAlgorithm + '}' + base64EncodedPassword;\n \n-                    attrs.add(passwordAttribute);\n-                    attrs.remove(missing);\n-                }\n-            }\n+                        attrs.add(AttributeBuilder.buildPassword(new GuardedString(cipherPlusPassword.toCharArray())));\n+                    });\n         }\n     }\n \n     protected String getCipherAlgorithm(final ConnInstance connInstance) {\n         return connInstance.getConf().stream().\n                 filter(property -> \"passwordHashAlgorithm\".equals(property.getSchema().getName())\n-                && property.getValues() != null && !property.getValues().isEmpty()).findFirst().\n-                map(cipherAlgorithm -> (String) cipherAlgorithm.getValues().get(0)).\n+                && !property.getValues().isEmpty()).findFirst().\n+                map(cipherAlgorithm -> cipherAlgorithm.getValues().get(0).toString()).\n                 orElse(CLEARTEXT);\n     }\n "},{"sha":"d99c1b4a76b4a784763d5829496c6de07842700f","filename":"fit/build-tools/pom.xml","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -70,20 +70,8 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.directory.server</groupId>\n-      <artifactId>apacheds-core-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.directory.server</groupId>\n-      <artifactId>apacheds-core-annotations</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.directory.server</groupId>\n-      <artifactId>apacheds-service-builder</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.directory.api</groupId>\n-      <artifactId>api-ldap-codec-standalone</artifactId>\n+      <groupId>com.unboundid</groupId>\n+      <artifactId>unboundid-ldapsdk</artifactId>\n     </dependency>\n \n     <dependency>"},{"sha":"3811dde6f855f90ed67534f36016e80197524764","filename":"fit/build-tools/src/main/java/org/apache/directory/server/core/normalization/NormalizationInterceptor.java","status":"removed","additions":0,"deletions":629,"changes":629,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0bc3ee08eca1217f546a2d00ab949e6840ec1071/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fdirectory%2Fserver%2Fcore%2Fnormalization%2FNormalizationInterceptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0bc3ee08eca1217f546a2d00ab949e6840ec1071/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fdirectory%2Fserver%2Fcore%2Fnormalization%2FNormalizationInterceptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fdirectory%2Fserver%2Fcore%2Fnormalization%2FNormalizationInterceptor.java?ref=0bc3ee08eca1217f546a2d00ab949e6840ec1071","patch":"@@ -1,629 +0,0 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- *\n- */\n-package org.apache.directory.server.core.normalization;\n-\n-// Remove this class as soon as upgrade to ApacheDS 2.0.0.AM27 is available\n-\n-// CHECKSTYLE:OFF\n-\n-import org.apache.directory.api.ldap.model.constants.SchemaConstants;\n-import org.apache.directory.api.ldap.model.cursor.EmptyCursor;\n-import org.apache.directory.api.ldap.model.entry.Entry;\n-import org.apache.directory.api.ldap.model.entry.Modification;\n-import org.apache.directory.api.ldap.model.entry.Value;\n-import org.apache.directory.api.ldap.model.exception.LdapException;\n-import org.apache.directory.api.ldap.model.exception.LdapInvalidAttributeTypeException;\n-import org.apache.directory.api.ldap.model.filter.AndNode;\n-import org.apache.directory.api.ldap.model.filter.BranchNode;\n-import org.apache.directory.api.ldap.model.filter.EqualityNode;\n-import org.apache.directory.api.ldap.model.filter.ExprNode;\n-import org.apache.directory.api.ldap.model.filter.LeafNode;\n-import org.apache.directory.api.ldap.model.filter.NotNode;\n-import org.apache.directory.api.ldap.model.filter.ObjectClassNode;\n-import org.apache.directory.api.ldap.model.filter.OrNode;\n-import org.apache.directory.api.ldap.model.filter.PresenceNode;\n-import org.apache.directory.api.ldap.model.filter.UndefinedNode;\n-import org.apache.directory.api.ldap.model.name.Ava;\n-import org.apache.directory.api.ldap.model.name.Dn;\n-import org.apache.directory.api.ldap.model.name.Rdn;\n-import org.apache.directory.api.ldap.model.schema.AttributeType;\n-import org.apache.directory.api.ldap.model.schema.normalizers.ConcreteNameComponentNormalizer;\n-import org.apache.directory.api.ldap.model.schema.normalizers.NameComponentNormalizer;\n-import org.apache.directory.server.core.api.DirectoryService;\n-import org.apache.directory.server.core.api.InterceptorEnum;\n-import org.apache.directory.server.core.api.filtering.EntryFilteringCursor;\n-import org.apache.directory.server.core.api.filtering.EntryFilteringCursorImpl;\n-import org.apache.directory.server.core.api.interceptor.BaseInterceptor;\n-import org.apache.directory.server.core.api.interceptor.context.AddOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.CompareOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.DeleteOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.HasEntryOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.LookupOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.ModifyOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.MoveAndRenameOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.MoveOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.RenameOperationContext;\n-import org.apache.directory.server.core.api.interceptor.context.SearchOperationContext;\n-import org.apache.directory.server.core.api.normalization.FilterNormalizingVisitor;\n-import org.apache.directory.server.i18n.I18n;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-\n-/**\n- * A name normalization service.  This service makes sure all relative and distinguished\n- * names are normalized before calls are made against the respective interface methods\n- * on DefaultPartitionNexus.\n- *\n- * The Filters are also normalized.\n- *\n- * If the Rdn AttributeTypes are not present in the entry for an Add request,\n- * they will be added.\n- *\n- * @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>\n- */\n-public class NormalizationInterceptor extends BaseInterceptor\n-{\n-    /** logger used by this class */\n-    private static final Logger LOG = LoggerFactory.getLogger( NormalizationInterceptor.class );\n-\n-    /** a filter node value normalizer and undefined node remover */\n-    private FilterNormalizingVisitor normVisitor;\n-\n-\n-    /**\n-     * Creates a new instance of a NormalizationInterceptor.\n-     */\n-    public NormalizationInterceptor()\n-    {\n-        super( InterceptorEnum.NORMALIZATION_INTERCEPTOR );\n-    }\n-\n-\n-    /**\n-     * Initialize the registries, normalizers.\n-     */\n-    @Override\n-    public void init( DirectoryService directoryService ) throws LdapException\n-    {\n-        LOG.debug( \"Initialiazing the NormalizationInterceptor\" );\n-\n-        super.init( directoryService );\n-\n-        NameComponentNormalizer ncn = new ConcreteNameComponentNormalizer( schemaManager );\n-        normVisitor = new FilterNormalizingVisitor( ncn, schemaManager );\n-    }\n-\n-\n-    /**\n-     * The destroy method does nothing\n-     */\n-    @Override\n-    public void destroy()\n-    {\n-    }\n-\n-\n-    // ------------------------------------------------------------------------\n-    // Normalize all Name based arguments for ContextPartition interface operations\n-    // ------------------------------------------------------------------------\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void add( AddOperationContext addContext ) throws LdapException\n-    {\n-        Dn addDn = addContext.getDn();\n-        \n-        if ( !addDn.isSchemaAware() )\n-        {\n-            addContext.setDn( new Dn( schemaManager, addDn ) );\n-        }\n-        \n-        Dn entryDn = addContext.getEntry().getDn();\n-        \n-        if ( !entryDn.isSchemaAware() )\n-        {\n-            addContext.getEntry().setDn( new Dn( schemaManager, entryDn ) );\n-        }\n-        \n-        addRdnAttributesToEntry( addContext.getDn(), addContext.getEntry() );\n-        \n-        next( addContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public boolean compare( CompareOperationContext compareContext ) throws LdapException\n-    {\n-        Dn dn = compareContext.getDn();\n-        \n-        if ( !dn.isSchemaAware() )\n-        {\n-            compareContext.setDn( new Dn( schemaManager, dn ) );\n-        }\n-\n-        // Get the attributeType from the OID\n-        try\n-        {\n-            AttributeType attributeType = schemaManager.lookupAttributeTypeRegistry( compareContext.getOid() );\n-\n-            // Translate the value from binary to String if the AT is HR\n-            if ( attributeType.getSyntax().isHumanReadable() && ( !compareContext.getValue().isHumanReadable() ) )\n-            {\n-                compareContext.setValue( compareContext.getValue() );\n-            }\n-\n-            compareContext.setAttributeType( attributeType );\n-        }\n-        catch ( LdapException le )\n-        {\n-            throw new LdapInvalidAttributeTypeException( I18n.err( I18n.ERR_266, compareContext.getOid() ) );\n-        }\n-\n-        return next( compareContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void delete( DeleteOperationContext deleteContext ) throws LdapException\n-    {\n-        Dn dn = deleteContext.getDn();\n-        \n-        if ( !dn.isSchemaAware() )\n-        {\n-            deleteContext.setDn( new Dn( schemaManager, dn ) );\n-        }\n-\n-        next( deleteContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public boolean hasEntry( HasEntryOperationContext hasEntryContext ) throws LdapException\n-    {\n-        Dn dn = hasEntryContext.getDn();\n-        \n-        if ( !dn.isSchemaAware() )\n-        {\n-            hasEntryContext.setDn( new Dn( schemaManager, dn ) );\n-        }\n-\n-        return next( hasEntryContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public Entry lookup( LookupOperationContext lookupContext ) throws LdapException\n-    {\n-        Dn dn = lookupContext.getDn();\n-        \n-        if ( !dn.isSchemaAware() )\n-        {\n-            lookupContext.setDn( new Dn( schemaManager, dn ) );\n-        }\n-\n-        return next( lookupContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void modify( ModifyOperationContext modifyContext ) throws LdapException\n-    {\n-        Dn dn = modifyContext.getDn();\n-        \n-        if ( !dn.isSchemaAware() )\n-        {\n-            modifyContext.setDn( new Dn( schemaManager, dn ) );\n-        }\n-\n-        if ( modifyContext.getModItems() != null )\n-        {\n-            for ( Modification modification : modifyContext.getModItems() )\n-            {\n-                AttributeType attributeType = schemaManager.getAttributeType( modification.getAttribute().getId() );\n-                modification.apply( attributeType );\n-            }\n-        }\n-\n-        next( modifyContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void move( MoveOperationContext moveContext ) throws LdapException\n-    {\n-        Dn moveDn = moveContext.getDn();\n-        \n-        if ( !moveDn.isSchemaAware() )\n-        {\n-            moveContext.setDn( new Dn( schemaManager, moveDn ) );\n-        }\n-\n-        Dn oldSuperiorDn = moveContext.getOldSuperior();\n-        \n-        if ( !oldSuperiorDn.isSchemaAware() )\n-        {\n-            moveContext.setOldSuperior( new Dn( schemaManager, oldSuperiorDn ) );\n-        }\n-\n-        Dn newSuperiorDn = moveContext.getNewSuperior();\n-        \n-        if ( !newSuperiorDn.isSchemaAware() )\n-        {\n-            moveContext.setNewSuperior( new Dn( schemaManager, newSuperiorDn ) );\n-        }\n-        \n-        Dn newDn = moveContext.getNewDn();\n-        \n-        if ( !newDn.isSchemaAware() )\n-        {\n-            moveContext.setNewDn( new Dn( schemaManager, newDn ) );\n-        }\n-\n-        Rdn rdn = moveContext.getRdn();\n-        \n-        if ( !rdn.isSchemaAware() )\n-        {\n-            moveContext.setRdn( new Rdn( schemaManager, rdn ) );\n-        }\n-\n-        next( moveContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void moveAndRename( MoveAndRenameOperationContext moveAndRenameContext ) throws LdapException\n-    {\n-        Rdn newRdn = moveAndRenameContext.getNewRdn();\n-        \n-        if ( !newRdn.isSchemaAware() )\n-        {\n-            moveAndRenameContext.setNewRdn( new Rdn( schemaManager, newRdn ) );\n-        }\n-        \n-        Dn dn = moveAndRenameContext.getDn();\n-        \n-        if ( !dn.isSchemaAware() )\n-        {\n-            moveAndRenameContext.setDn( new Dn( schemaManager, dn ) );\n-        }\n-        \n-        Dn newDn = moveAndRenameContext.getNewDn();\n-        \n-        if ( !newDn.isSchemaAware() )\n-        {\n-            moveAndRenameContext.setNewDn( new Dn( schemaManager, newDn ) );\n-        }\n-        \n-        Dn newSuperiorDn = moveAndRenameContext.getNewSuperiorDn();\n-        \n-        if ( !newSuperiorDn.isSchemaAware() )\n-        {\n-            moveAndRenameContext.setNewSuperiorDn( new Dn( schemaManager, newSuperiorDn ) );\n-        }\n-\n-        next( moveAndRenameContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public void rename( RenameOperationContext renameContext ) throws LdapException\n-    {\n-        // Normalize the new Rdn and the Dn if needed\n-        Dn dn = renameContext.getDn();\n-        \n-        if ( !dn.isSchemaAware() )\n-        {\n-            renameContext.setDn( new Dn( schemaManager, dn ) );\n-        }\n-        \n-        Rdn newRdn = renameContext.getNewRdn();\n-        \n-        if ( !newRdn.isSchemaAware() )\n-        {\n-            renameContext.setNewRdn( new Rdn( schemaManager, newRdn ) );\n-        }\n-        \n-        Dn newDn = renameContext.getNewDn();\n-        \n-        if ( !newDn.isSchemaAware() )\n-        {\n-            renameContext.setNewDn( new Dn( schemaManager, newDn ) );\n-        }\n-\n-        // Push to the next interceptor\n-        next( renameContext );\n-    }\n-\n-\n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public EntryFilteringCursor search( SearchOperationContext searchContext ) throws LdapException\n-    {\n-        Dn dn = searchContext.getDn();\n-        \n-        if ( !dn.isSchemaAware() )\n-        {\n-            searchContext.setDn( new Dn( schemaManager, dn ) );\n-        }\n-\n-        ExprNode filter = searchContext.getFilter();\n-\n-        if ( filter == null )\n-        {\n-            LOG.warn( \"undefined filter based on undefined attributeType not evaluted at all.  Returning empty enumeration.\" );\n-            return new EntryFilteringCursorImpl(new EmptyCursor<>(), searchContext, schemaManager );\n-        }\n-\n-        // Normalize the filter\n-        filter = ( ExprNode ) filter.accept( normVisitor );\n-\n-        if ( filter == null )\n-        {\n-            LOG.warn( \"undefined filter based on undefined attributeType not evaluted at all.  Returning empty enumeration.\" );\n-            return new EntryFilteringCursorImpl(new EmptyCursor<>(), searchContext, schemaManager );\n-        }\n-\n-        // We now have to remove the (ObjectClass=*) filter if it's present, and to add the scope filter\n-        ExprNode modifiedFilter = removeObjectClass( filter );\n-\n-        searchContext.setFilter( modifiedFilter );\n-\n-        // TODO Normalize the returned Attributes, storing the UP attributes to format the returned values.\n-        return next( searchContext );\n-    }\n-\n-\n-    /**\n-     * Remove the (ObjectClass=*) node from an AndNode, if we have one.\n-     */\n-    private ExprNode handleAndNode( ExprNode node )\n-    {\n-        int nbNodes = 0;\n-        AndNode newAndNode = new AndNode();\n-\n-        for ( ExprNode child : ( ( BranchNode ) node ).getChildren() )\n-        {\n-            ExprNode modifiedNode = removeObjectClass( child );\n-\n-            if ( !( modifiedNode instanceof ObjectClassNode ) )\n-            {\n-                newAndNode.addNode( modifiedNode );\n-                nbNodes++;\n-            }\n-\n-            if ( modifiedNode instanceof UndefinedNode )\n-            {\n-                // We can just return an Undefined node as nothing will get selected\n-                return UndefinedNode.UNDEFINED_NODE;\n-            }\n-        }\n-\n-        switch ( nbNodes )\n-        {\n-            case 0:\n-                // Unlikely... But (&(ObjectClass=*)) or (|(ObjectClass=*)) are still an option\n-                return ObjectClassNode.OBJECT_CLASS_NODE;\n-\n-            case 1:\n-                // We can safely remove the AND/OR node and replace it with its first child\n-                return newAndNode.getFirstChild();\n-\n-            default:\n-                return newAndNode;\n-        }\n-    }\n-\n-\n-    /**\n-     * Remove the (ObjectClass=*) node from a NotNode, if we have one.\n-     */\n-    private ExprNode handleNotNode( ExprNode node )\n-    {\n-        NotNode newNotNode = new NotNode();\n-\n-        for ( ExprNode child : ( ( BranchNode ) node ).getChildren() )\n-        {\n-            ExprNode modifiedNode = removeObjectClass( child );\n-\n-            if ( modifiedNode instanceof ObjectClassNode )\n-            {\n-                // We don't want any entry which has an ObjectClass, return an undefined node\n-                return UndefinedNode.UNDEFINED_NODE;\n-            }\n-\n-            if ( modifiedNode instanceof UndefinedNode )\n-            {\n-                // Here, we will select everything\n-                return ObjectClassNode.OBJECT_CLASS_NODE;\n-            }\n-            \n-            newNotNode.addNode( modifiedNode );\n-\n-        }\n-\n-        return newNotNode;\n-    }\n-\n-\n-    /**\n-     * Remove the (ObjectClass=*) node from an OrNode, if we have one.\n-     */\n-    private ExprNode handleOrNode( ExprNode node )\n-    {\n-        OrNode newOrNode = new OrNode();\n-\n-        for ( ExprNode child : ( ( BranchNode ) node ).getChildren() )\n-        {\n-            ExprNode modifiedNode = removeObjectClass( child );\n-\n-            if ( modifiedNode instanceof ObjectClassNode )\n-            {\n-                // We can return immediately with an ObjectClass node\n-                return ObjectClassNode.OBJECT_CLASS_NODE;\n-            }\n-            \n-            newOrNode.addNode( modifiedNode );\n-        }\n-\n-        return newOrNode;\n-    }\n-\n-\n-    /**\n-     * Remove the (ObjectClass=*) and ( ObjectClass=top) nodes from the filter, if we have one.\n-     */\n-    private ExprNode removeObjectClass( ExprNode node )\n-    {\n-        if ( node instanceof LeafNode )\n-        {\n-            LeafNode leafNode = ( LeafNode ) node;\n-\n-            if ( leafNode.getAttributeType() == directoryService.getAtProvider().getObjectClass() )\n-            {\n-                if ( leafNode instanceof PresenceNode )\n-                {\n-                    // We can safely remove the node and return an undefined node\n-                    return ObjectClassNode.OBJECT_CLASS_NODE;\n-                }\n-                else if ( leafNode instanceof EqualityNode )\n-                {\n-                    @SuppressWarnings(\"unchecked\")\n-                    Value value = ( ( EqualityNode<String> ) leafNode ).getValue();\n-\n-                    if ( value.equals( SchemaConstants.TOP_OC ) )\n-                    {\n-                        // Here too we can safely remove the node and return an undefined node\n-                        return ObjectClassNode.OBJECT_CLASS_NODE;\n-                    }\n-                }\n-            }\n-        }\n-\n-        // --------------------------------------------------------------------\n-        //                 H A N D L E   B R A N C H   N O D E S\n-        // --------------------------------------------------------------------\n-\n-        if ( node instanceof AndNode )\n-        {\n-            return handleAndNode( node );\n-        }\n-        else if ( node instanceof OrNode )\n-        {\n-            return handleOrNode( node );\n-        }\n-        else if ( node instanceof NotNode )\n-        {\n-            return handleNotNode( node );\n-        }\n-        else\n-        {\n-            // Failover : we return the initial node as is\n-            return node;\n-        }\n-    }\n-\n-\n-    // ------------------------------------------------------------------------\n-    // Normalize all Name based arguments for other interface operations\n-    // ------------------------------------------------------------------------\n-    /**\n-     * Adds missing Rdn's attributes and values to the entry.\n-     *\n-     * @param dn the Dn\n-     * @param entry the entry\n-     */\n-    private void addRdnAttributesToEntry( Dn dn, Entry entry ) throws LdapException\n-    {\n-        if ( dn == null || entry == null )\n-        {\n-            return;\n-        }\n-\n-        Rdn rdn = dn.getRdn();\n-\n-        // Loop on all the AVAs\n-        for ( Ava ava : rdn )\n-        {\n-            Value value = ava.getValue();\n-            String upValue = ava.getValue().getString();\n-            String upId = ava.getType();\n-\n-            // Check that the entry contains this Ava\n-            if ( !entry.contains( upId, value ) )\n-            {\n-                String message = \"The Rdn '\" + upId + \"=\" + upValue + \"' is not present in the entry\";\n-                LOG.warn( message );\n-\n-                // We don't have this attribute : add it.\n-                // Two cases :\n-                // 1) The attribute does not exist\n-                if ( !entry.containsAttribute( upId ) )\n-                {\n-                    entry.add( upId, upValue );\n-                }\n-                // 2) The attribute exists\n-                else\n-                {\n-                    AttributeType at = schemaManager.lookupAttributeTypeRegistry( upId );\n-\n-                    // 2.1 if the attribute is single valued, replace the value\n-                    if ( at.isSingleValued() )\n-                    {\n-                        entry.removeAttributes( upId );\n-                        entry.add( upId, upValue );\n-                    }\n-                    // 2.2 the attribute is multi-valued : add the missing value\n-                    else\n-                    {\n-                        entry.add( upId, upValue );\n-                    }\n-                }\n-            }\n-        }\n-    }\n-}"},{"sha":"0be4ef3a7d0b6c8ac7e9653fdc885f6af7dcea68","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ApacheDSRootDseServlet.java","status":"removed","additions":0,"deletions":100,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0bc3ee08eca1217f546a2d00ab949e6840ec1071/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSRootDseServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0bc3ee08eca1217f546a2d00ab949e6840ec1071/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSRootDseServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSRootDseServlet.java?ref=0bc3ee08eca1217f546a2d00ab949e6840ec1071","patch":"@@ -1,100 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.fit.buildtools;\n-\n-import java.io.PrintWriter;\n-import java.util.Properties;\n-import javax.naming.Context;\n-import javax.naming.NamingEnumeration;\n-import javax.naming.directory.Attribute;\n-import javax.naming.directory.Attributes;\n-import javax.naming.directory.DirContext;\n-import javax.naming.directory.InitialDirContext;\n-import javax.naming.directory.SearchControls;\n-import javax.naming.directory.SearchResult;\n-import javax.servlet.ServletContext;\n-import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import org.apache.directory.server.core.api.DirectoryService;\n-import org.apache.directory.server.core.jndi.CoreContextFactory;\n-\n-@WebServlet(urlPatterns = \"/apacheDS\")\n-public class ApacheDSRootDseServlet extends HttpServlet {\n-\n-    private static final long serialVersionUID = 1514567335969002735L;\n-\n-    @Override\n-    protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException {\n-        try {\n-            resp.setContentType(\"text/plain\");\n-            PrintWriter out = resp.getWriter();\n-\n-            out.println(\"*** ApacheDS RootDSE ***\\n\");\n-\n-            DirContext ctx = new InitialDirContext(this.createEnv());\n-\n-            SearchControls ctls = new SearchControls();\n-            ctls.setReturningAttributes(new String[] { \"*\", \"+\" });\n-            ctls.setSearchScope(SearchControls.OBJECT_SCOPE);\n-\n-            NamingEnumeration<SearchResult> result = ctx.search(\"\", \"(objectClass=*)\", ctls);\n-            if (result.hasMore()) {\n-                SearchResult entry = result.next();\n-                Attributes as = entry.getAttributes();\n-\n-                NamingEnumeration<String> ids = as.getIDs();\n-                while (ids.hasMore()) {\n-                    String id = ids.next();\n-                    Attribute attr = as.get(id);\n-                    for (int i = 0; i < attr.size(); ++i) {\n-                        out.println(id + \": \" + attr.get(i));\n-                    }\n-                }\n-            }\n-            ctx.close();\n-\n-            out.flush();\n-        } catch (Exception e) {\n-            throw new ServletException(e);\n-        }\n-    }\n-\n-    /**\n-     * Creates an environment configuration for JNDI access.\n-     */\n-    private Properties createEnv() {\n-        // Fetch directory service from servlet context\n-        ServletContext servletContext = this.getServletContext();\n-        DirectoryService directoryService = (DirectoryService) servletContext.getAttribute(DirectoryService.JNDI_KEY);\n-\n-        Properties env = new Properties();\n-        env.put(DirectoryService.JNDI_KEY, directoryService);\n-        env.put(Context.PROVIDER_URL, \"\");\n-        env.put(Context.INITIAL_CONTEXT_FACTORY, CoreContextFactory.class.getName());\n-\n-        env.put(Context.SECURITY_PRINCIPAL, \"uid=admin,ou=system\");\n-        env.put(Context.SECURITY_CREDENTIALS, \"secret\");\n-        env.put(Context.SECURITY_AUTHENTICATION, \"simple\");\n-\n-        return env;\n-    }\n-}"},{"sha":"6a3322fdbe69b3f54f1cff9931d0ee2349c40e1d","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ApacheDSStartStopListener.java","status":"removed","additions":0,"deletions":276,"changes":276,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0bc3ee08eca1217f546a2d00ab949e6840ec1071/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0bc3ee08eca1217f546a2d00ab949e6840ec1071/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java?ref=0bc3ee08eca1217f546a2d00ab949e6840ec1071","patch":"@@ -1,276 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.fit.buildtools;\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.util.List;\n-import java.util.Objects;\n-import java.util.Set;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-import javax.servlet.ServletContext;\n-import javax.servlet.ServletContextEvent;\n-import javax.servlet.ServletContextListener;\n-import javax.servlet.annotation.WebListener;\n-import org.apache.directory.api.ldap.model.constants.SchemaConstants;\n-import org.apache.directory.api.ldap.model.entry.Entry;\n-import org.apache.directory.api.ldap.model.name.Dn;\n-import org.apache.directory.api.ldap.model.schema.LdapComparator;\n-import org.apache.directory.api.ldap.model.schema.SchemaManager;\n-import org.apache.directory.api.ldap.model.schema.comparators.NormalizingComparator;\n-import org.apache.directory.api.ldap.model.schema.registries.ComparatorRegistry;\n-import org.apache.directory.api.ldap.model.schema.registries.SchemaLoader;\n-import org.apache.directory.api.ldap.schema.extractor.SchemaLdifExtractor;\n-import org.apache.directory.api.ldap.schema.extractor.impl.DefaultSchemaLdifExtractor;\n-import org.apache.directory.api.ldap.schema.loader.LdifSchemaLoader;\n-import org.apache.directory.api.ldap.schema.manager.impl.DefaultSchemaManager;\n-import org.apache.directory.api.util.exception.Exceptions;\n-import org.apache.directory.server.constants.ServerDNConstants;\n-import org.apache.directory.server.core.DefaultDirectoryService;\n-import org.apache.directory.server.core.api.DirectoryService;\n-import org.apache.directory.server.core.api.DnFactory;\n-import org.apache.directory.server.core.api.InstanceLayout;\n-import org.apache.directory.server.core.api.partition.Partition;\n-import org.apache.directory.server.core.api.schema.SchemaPartition;\n-import org.apache.directory.server.core.factory.JdbmPartitionFactory;\n-import org.apache.directory.server.core.partition.impl.btree.jdbm.JdbmIndex;\n-import org.apache.directory.server.core.partition.impl.btree.jdbm.JdbmPartition;\n-import org.apache.directory.server.core.partition.ldif.LdifPartition;\n-import org.apache.directory.server.i18n.I18n;\n-import org.apache.directory.server.ldap.LdapServer;\n-import org.apache.directory.server.protocol.shared.transport.TcpTransport;\n-import org.apache.directory.server.xdbm.Index;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.core.io.Resource;\n-import org.springframework.web.context.support.WebApplicationContextUtils;\n-\n-/**\n- * Start and stop an embedded ApacheDS instance alongside with Servlet Context.\n- */\n-@WebListener\n-public class ApacheDSStartStopListener implements ServletContextListener {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ApacheDSStartStopListener.class);\n-\n-    private DirectoryService service;\n-\n-    private LdapServer server;\n-\n-    /**\n-     * Add a new partition to the server.\n-     *\n-     * @param partitionId The partition Id\n-     * @param partitionDn The partition DN\n-     * @param dnFactory the DN factory\n-     * @return The newly added partition\n-     * @throws Exception If the partition can't be added\n-     */\n-    private void addPartition(final String partitionId, final String partitionDn, final DnFactory dnFactory)\n-            throws Exception {\n-\n-        // Create a new partition with the given partition id\n-        JdbmPartition partition = new JdbmPartition(service.getSchemaManager(), dnFactory);\n-        partition.setId(partitionId);\n-        partition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(), partitionId).toURI());\n-        partition.setSuffixDn(new Dn(partitionDn));\n-        service.addPartition(partition);\n-\n-        Set<Index<?, String>> indexedAttributes = Stream.of(\n-                SchemaConstants.OBJECT_CLASS_AT, SchemaConstants.OU_AT,\n-                SchemaConstants.UID_AT, SchemaConstants.CN_AT).\n-                map(attr -> new JdbmIndex<String>(attr, false)).collect(Collectors.toSet());\n-        partition.setIndexedAttributes(indexedAttributes);\n-    }\n-\n-    /**\n-     * Initialize the schema manager and add the schema partition to directory service.\n-     *\n-     * @throws Exception if the schema LDIF files are not found on the classpath\n-     */\n-    private void initSchemaPartition() throws Exception {\n-        File workingDirectory = service.getInstanceLayout().getPartitionsDirectory();\n-\n-        // Extract the schema on disk (a brand new one) and load the registries\n-        File schemaRepository = new File(workingDirectory, \"schema\");\n-        SchemaLdifExtractor extractor = new DefaultSchemaLdifExtractor(workingDirectory);\n-        try {\n-            extractor.extractOrCopy();\n-        } catch (IOException ioe) {\n-            // The schema has already been extracted, bypass\n-        }\n-\n-        SchemaLoader loader = new LdifSchemaLoader(schemaRepository);\n-        SchemaManager schemaManager = new DefaultSchemaManager(loader);\n-\n-        // We have to load the schema now, otherwise we won't be able\n-        // to initialize the Partitions, as we won't be able to parse \n-        // and normalize their suffix Dn\n-        schemaManager.loadAllEnabled();\n-\n-        // Tell all the normalizer comparators that they should not normalize anything\n-        ComparatorRegistry comparatorRegistry = schemaManager.getComparatorRegistry();\n-        for (LdapComparator<?> comparator : comparatorRegistry) {\n-            if (comparator instanceof NormalizingComparator) {\n-                ((NormalizingComparator) comparator).setOnServer();\n-            }\n-        }\n-\n-        service.setSchemaManager(schemaManager);\n-\n-        // Init the LdifPartition\n-        LdifPartition ldifPartition = new LdifPartition(schemaManager, service.getDnFactory());\n-        ldifPartition.setPartitionPath(new File(workingDirectory, \"schema\").toURI());\n-        SchemaPartition schemaPartition = new SchemaPartition(schemaManager);\n-        schemaPartition.setWrappedPartition(ldifPartition);\n-        service.setSchemaPartition(schemaPartition);\n-\n-        List<Throwable> errors = schemaManager.getErrors();\n-        if (!errors.isEmpty()) {\n-            throw new IllegalStateException(I18n.err(I18n.ERR_317, Exceptions.printErrors(errors)));\n-        }\n-    }\n-\n-    private void initSystemPartition() throws Exception {\n-        JdbmPartitionFactory partitionFactory = new JdbmPartitionFactory();\n-\n-        Partition systemPartition = partitionFactory.createPartition(\n-                service.getSchemaManager(),\n-                service.getDnFactory(),\n-                \"system\",\n-                ServerDNConstants.SYSTEM_DN,\n-                500,\n-                new File(service.getInstanceLayout().getPartitionsDirectory(), \"system\"));\n-        systemPartition.setSchemaManager(service.getSchemaManager());\n-\n-        partitionFactory.addIndex(systemPartition, SchemaConstants.OBJECT_CLASS_AT, 100);\n-\n-        service.setSystemPartition(systemPartition);\n-    }\n-\n-    /**\n-     * Initialize the server. It creates the partition, adds the index, and injects the context entries for the created\n-     * partitions.\n-     *\n-     * @param workDir the directory to be used for storing the data\n-     * @param loadDefaultContent if default content should be loaded\n-     * @throws Exception if there were some problems while initializing\n-     */\n-    private void initDirectoryService(final ServletContext servletContext, final File workDir,\n-            final boolean loadDefaultContent) throws Exception {\n-\n-        // Initialize the LDAP service\n-        service = new DefaultDirectoryService();\n-        service.setInstanceLayout(new InstanceLayout(workDir));\n-\n-        // first load the schema\n-        initSchemaPartition();\n-\n-        // then the system partition\n-        initSystemPartition();\n-\n-        // Disable the ChangeLog system\n-        service.getChangeLog().setEnabled(false);\n-        service.setDenormalizeOpAttrsEnabled(true);\n-\n-        // Now we can create as many partitions as we need\n-        addPartition(\"isp\", \"o=isp\", service.getDnFactory());\n-\n-        // And start the service\n-        service.startup();\n-\n-        if (loadDefaultContent) {\n-            Resource contentLdif = Objects.requireNonNull(\n-                WebApplicationContextUtils.getWebApplicationContext(servletContext))\n-                .getResource(\"classpath:/content.ldif\");\n-            LdifInputStreamLoader contentLoader = new LdifInputStreamLoader(service.getAdminSession(),\n-                contentLdif.getInputStream());\n-            int numEntries = contentLoader.execute();\n-            LOG.info(\"Successfully created {} entries\", numEntries);\n-        }\n-    }\n-\n-    /**\n-     * Startup ApacheDS embedded.\n-     *\n-     * @param sce ServletContext event\n-     */\n-    @Override\n-    public void contextInitialized(final ServletContextEvent sce) {\n-        File workDir = (File) sce.getServletContext().getAttribute(\"javax.servlet.context.tempdir\");\n-        workDir = new File(workDir, \"server-work\");\n-\n-        final boolean loadDefaultContent = !workDir.exists();\n-\n-        if (loadDefaultContent && !workDir.mkdirs()) {\n-            throw new RuntimeException(\"Could not create \" + workDir.getAbsolutePath());\n-        }\n-\n-        Entry result;\n-        try {\n-            initDirectoryService(sce.getServletContext(), workDir, loadDefaultContent);\n-\n-            ApplicationContext applicationContext = WebApplicationContextUtils.getWebApplicationContext(\n-                sce.getServletContext());\n-            server = new LdapServer();\n-            server.setTransports(new TcpTransport(Integer.parseInt(\n-                Objects.requireNonNull(\n-                    Objects.requireNonNull(applicationContext).getEnvironment().getProperty(\"testds.port\")))));\n-            server.setDirectoryService(service);\n-\n-            server.start();\n-\n-            // store directoryService in context to provide it to servlets etc.\n-            sce.getServletContext().setAttribute(DirectoryService.JNDI_KEY, service);\n-\n-            result = service.getAdminSession().lookup(new Dn(\"o=isp\"));\n-        } catch (Exception e) {\n-            LOG.error(\"Fatal error in context init\", e);\n-            throw new RuntimeException(e);\n-        }\n-\n-        if (result == null) {\n-            throw new RuntimeException(\"Base DN not found\");\n-        } else {\n-            LOG.info(\"ApacheDS startup completed successfully\");\n-        }\n-    }\n-\n-    /**\n-     * Shutdown ApacheDS embedded.\n-     *\n-     * @param sce ServletContext event\n-     */\n-    @Override\n-    public void contextDestroyed(final ServletContextEvent sce) {\n-        try {\n-            if (server != null) {\n-                server.stop();\n-            }\n-            if (service != null) {\n-                service.shutdown();\n-            }\n-        } catch (Exception e) {\n-            LOG.error(\"Fatal error in context shutdown\", e);\n-            throw new RuntimeException(e);\n-        }\n-    }\n-}"},{"sha":"1987db58e45b611cea5fe4623c016b8af9d59ba3","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/LDAPStartStopListener.java","status":"added","additions":89,"deletions":0,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLDAPStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLDAPStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLDAPStartStopListener.java?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.buildtools;\n+\n+import com.unboundid.ldap.listener.Base64PasswordEncoderOutputFormatter;\n+import com.unboundid.ldap.listener.InMemoryDirectoryServer;\n+import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;\n+import com.unboundid.ldap.listener.InMemoryListenerConfig;\n+import com.unboundid.ldap.listener.UnsaltedMessageDigestInMemoryPasswordEncoder;\n+import com.unboundid.ldap.sdk.schema.Schema;\n+import java.net.InetAddress;\n+import java.security.MessageDigest;\n+import javax.servlet.ServletContextEvent;\n+import javax.servlet.ServletContextListener;\n+import javax.servlet.annotation.WebListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.web.context.support.WebApplicationContextUtils;\n+\n+/**\n+ * Start and stop an in-memory LDAP server instance alongside with Servlet Context.\n+ */\n+@WebListener\n+public class LDAPStartStopListener implements ServletContextListener {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(LDAPStartStopListener.class);\n+\n+    private InMemoryDirectoryServer ldapServer;\n+\n+    @Override\n+    public void contextInitialized(final ServletContextEvent sce) {\n+        try {\n+            ApplicationContext ctx = WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext());\n+\n+            InMemoryDirectoryServerConfig config =\n+                    new InMemoryDirectoryServerConfig(ctx.getEnvironment().getProperty(\"testds.rootDn\"));\n+\n+            config.addAdditionalBindCredentials(\n+                    ctx.getEnvironment().getProperty(\"testds.bindDn\"),\n+                    ctx.getEnvironment().getProperty(\"testds.password\"));\n+\n+            InMemoryListenerConfig listenerConfig = InMemoryListenerConfig.createLDAPConfig(\n+                    \"test-listener\",\n+                    InetAddress.getLoopbackAddress(),\n+                    Integer.parseInt(ctx.getEnvironment().getProperty(\"testds.port\")),\n+                    null);\n+            config.setListenerConfigs(listenerConfig);\n+\n+            config.setSchema(Schema.getDefaultStandardSchema());\n+\n+            config.setPasswordEncoders(\n+                    new UnsaltedMessageDigestInMemoryPasswordEncoder(\n+                            \"{SHA}\",\n+                            Base64PasswordEncoderOutputFormatter.getInstance(),\n+                            MessageDigest.getInstance(\"SHA-1\")));\n+\n+            ldapServer = new InMemoryDirectoryServer(config);\n+            ldapServer.importFromLDIF(false, ctx.getResource(\"classpath:/content.ldif\").getFile());\n+            ldapServer.startListening();\n+        } catch (Exception e) {\n+            LOG.error(\"Fatal error in context init\", e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void contextDestroyed(final ServletContextEvent sce) {\n+        if (ldapServer != null) {\n+            ldapServer.shutDown(true);\n+        }\n+    }\n+}"},{"sha":"fe1116e572d882def334f93beb70ff1fb757c4e5","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/LdifInputStreamLoader.java","status":"removed","additions":0,"deletions":116,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0bc3ee08eca1217f546a2d00ab949e6840ec1071/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0bc3ee08eca1217f546a2d00ab949e6840ec1071/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FLdifInputStreamLoader.java?ref=0bc3ee08eca1217f546a2d00ab949e6840ec1071","patch":"@@ -1,116 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.fit.buildtools;\n-\n-import java.io.InputStream;\n-import java.util.List;\n-import org.apache.directory.api.ldap.model.entry.DefaultEntry;\n-import org.apache.directory.api.ldap.model.entry.Entry;\n-import org.apache.directory.api.ldap.model.entry.Modification;\n-import org.apache.directory.api.ldap.model.exception.LdapException;\n-import org.apache.directory.api.ldap.model.ldif.LdifEntry;\n-import org.apache.directory.api.ldap.model.ldif.LdifReader;\n-import org.apache.directory.api.ldap.model.name.Dn;\n-import org.apache.directory.server.core.api.CoreSession;\n-import org.apache.directory.server.i18n.I18n;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class LdifInputStreamLoader {\n-\n-    /**\n-     * The log for this class.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(LdifInputStreamLoader.class);\n-\n-    /**\n-     * A handle on the top core session.\n-     */\n-    protected CoreSession coreSession;\n-\n-    /**\n-     * The LDIF input stream file containing LDIFs to load.\n-     */\n-    protected InputStream ldif;\n-\n-    /**\n-     * the total count of entries loaded\n-     */\n-    private int count;\n-\n-    /**\n-     * Creates a new instance of LdifFileLoader.\n-     *\n-     * @param coreSession the context to load the entries into.\n-     * @param ldif the file of LDIF entries to load.\n-     */\n-    public LdifInputStreamLoader(final CoreSession coreSession, final InputStream ldif) {\n-        this.coreSession = coreSession;\n-        this.ldif = ldif;\n-    }\n-\n-    /**\n-     * Opens the LDIF file and loads the entries into the context.\n-     *\n-     * @return The count of entries created.\n-     */\n-    public int execute() {\n-        try {\n-            try {\n-                for (LdifEntry ldifEntry : new LdifReader(ldif)) {\n-                    Dn dn = ldifEntry.getDn();\n-\n-                    if (ldifEntry.isEntry()) {\n-                        Entry entry = ldifEntry.getEntry();\n-\n-                        try {\n-                            coreSession.lookup(dn);\n-                            LOG.debug(\"Found {}, will not create.\", dn);\n-                        } catch (Exception e) {\n-                            try {\n-                                coreSession.add(\n-                                        new DefaultEntry(coreSession.getDirectoryService().getSchemaManager(), entry));\n-                                count++;\n-                                LOG.debug(\"Created {}.\", dn);\n-                            } catch (LdapException e1) {\n-                                LOG.error(\"Could not create entry \" + entry, e1);\n-                            }\n-                        }\n-                    } else {\n-                        //modify\n-                        List<Modification> items = ldifEntry.getModifications();\n-\n-                        try {\n-                            coreSession.modify(dn, items);\n-                            LOG.debug(\"Modified: \" + dn + \" with modificationItems: \" + items);\n-                        } catch (LdapException e) {\n-                            LOG.debug(\"Could not modify: \" + dn + \" with modificationItems: \" + items, e);\n-                        }\n-                    }\n-                }\n-            } finally {\n-                ldif.close();\n-            }\n-        } catch (Exception ioe) {\n-            LOG.error(I18n.err(I18n.ERR_174), ioe);\n-        }\n-\n-        return count;\n-    }\n-}"},{"sha":"772dc051835a9b452d8f79f3ccab2b7c9600b909","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/SyncopeBuildToolsApplication.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -82,7 +82,7 @@ public Provisioning provisioningImpl(@Qualifier(\"testDataSource\") final DataSour\n \n     @Bean\n     public Endpoint soapProvisioning(final Provisioning provisioning,\n-                                     final Bus bus) {\n+            final Bus bus) {\n         EndpointImpl soapProvisioning = new EndpointImpl(provisioning);\n         soapProvisioning.setBus(bus);\n         soapProvisioning.publish(\"/soap\");\n@@ -100,8 +100,12 @@ public UserService userService() {\n     }\n \n     @Bean\n-    public Server restProvisioning(final GreenMailService greenMailService, final UserService userService,\n-                                   final ApplicationContext ctx, final Bus bus) {\n+    public Server restProvisioning(\n+            final GreenMailService greenMailService,\n+            final UserService userService,\n+            final ApplicationContext ctx,\n+            final Bus bus) {\n+\n         SpringJAXRSServerFactoryBean restProvisioning = new SpringJAXRSServerFactoryBean();\n         restProvisioning.setApplicationContext(ctx);\n         restProvisioning.setBus(bus);\n@@ -115,12 +119,10 @@ public Server restProvisioning(final GreenMailService greenMailService, final Us\n     @Override\n     public void onStartup(final ServletContext sc) throws ServletException {\n         sc.addListener(new ConnectorServerStartStopListener());\n-        sc.addListener(new ApacheDSStartStopListener());\n+        sc.addListener(new LDAPStartStopListener());\n         sc.addListener(new H2StartStopListener());\n         sc.addListener(new GreenMailStartStopListener());\n \n-        ServletRegistration.Dynamic apacheDS = sc.addServlet(\"ApacheDSRootDseServlet\", ApacheDSRootDseServlet.class);\n-        apacheDS.addMapping(\"/apacheDS\");\n         ServletRegistration.Dynamic sts = sc.addServlet(\"ServiceTimeoutServlet\", ServiceTimeoutServlet.class);\n         sts.addMapping(\"/services/*\");\n "},{"sha":"80b1b9947a5866c34e207dd27b71fc1a55763439","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/DateParamConverterProvider.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FDateParamConverterProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FDateParamConverterProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FDateParamConverterProvider.java?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -23,19 +23,19 @@\n import java.util.Date;\n import javax.ws.rs.ext.ParamConverter;\n import javax.ws.rs.ext.ParamConverterProvider;\n-import org.apache.commons.lang3.StringUtils;\n+import org.springframework.util.StringUtils;\n \n public class DateParamConverterProvider implements ParamConverterProvider {\n \n     private static class DateParamConverter implements ParamConverter<Date> {\n \n         @Override\n         public Date fromString(final String value) {\n-            if (StringUtils.isBlank(value)) {\n+            if (!StringUtils.hasText(value)) {\n                 return null;\n             }\n             try {\n-                return new Date(Long.valueOf(value));\n+                return new Date(Long.parseLong(value));\n             } catch (final NumberFormatException e) {\n                 throw new IllegalArgumentException(\"Unparsable date: \" + value, e);\n             }"},{"sha":"4dd3aff4572c7d6bac07dd2276abc818f98c09ab","filename":"fit/build-tools/src/main/resources/application.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -32,6 +32,9 @@ testdb.username=${testdb.username}\n testdb.password=${testdb.password}\n testdb.webport=${testdb.webport}\n \n+testds.rootDn=${testds.rootDn}\n+testds.bindDn=${testds.bindDn}\n+testds.password=${testds.password}\n testds.port=${testds.port}\n \n testconnectorserver.port=${testconnectorserver.port}"},{"sha":"6b05f9182684dc954601d6b67bb47c0f8a9408a1","filename":"fit/build-tools/src/main/resources/content.ldif","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -14,25 +14,25 @@ objectClass: organization\n objectClass: top\n o: isp\n \n-DN: ou=People,o=isp\n+DN: ou=people,o=isp\n objectClass: organizationalUnit\n objectClass: top\n-ou: People\n+ou: people\n \n-DN: ou=Groups,o=isp\n+DN: ou=groups,o=isp\n objectClass: organizationalUnit\n objectClass: top\n-ou: Groups\n+ou: groups\n \n-DN: cn=testLDAPGroup,ou=Groups,o=isp\n+DN: cn=testLDAPGroup,ou=groups,o=isp\n objectClass: groupOfUniqueNames\n objectClass: top\n cn: testLDAPGroup\n uniqueMember: uid=admin,ou=system\n-uniqueMember: uid=pullFromLDAP,ou=People,o=isp\n-owner: uid=pullFromLDAP,ou=People,o=isp\n+uniqueMember: uid=pullFromLDAP,ou=people,o=isp\n+owner: uid=pullFromLDAP,ou=people,o=isp\n \n-DN: uid=pullFromLDAP,ou=People,o=isp\n+DN: uid=pullFromLDAP,ou=people,o=isp\n objectClass: organizationalPerson\n objectClass: person\n objectClass: inetOrgPerson"},{"sha":"933bd95fe9eeaa346d9180179c34f0b3358bf808","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -528,7 +528,7 @@ public void searchConnObjectsBrowsePagedResult() {\n                 matches = null;\n \n                 boolean succeeded = false;\n-                // needed because ApacheDS seems to randomly fail when searching with cookie\n+                // needed because embedded LDAP server seems to randomly fail when searching with cookie\n                 for (int i = 0; i < 5 && !succeeded; i++) {\n                     try {\n                         matches = RESOURCE_SERVICE.searchConnObjects("},{"sha":"86cb32ac8283887a1ef5b66cf50b2daeac0e85ce","filename":"pom.xml","status":"modified","additions":4,"deletions":37,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -434,9 +434,6 @@ under the License.\n \n     <elasticsearch.version>8.5.2</elasticsearch.version>\n \n-    <apacheds.version>2.0.0.AM26</apacheds.version>\n-    <apachedirapi.version>2.0.0</apachedirapi.version>\n-\n     <log4j2.version>2.19.0</log4j2.version>\n     <disruptor.version>3.4.4</disruptor.version>\n     \n@@ -480,13 +477,16 @@ under the License.\n     <curator.version>5.4.0</curator.version>\n     <zookeeper.version>3.8.0</zookeeper.version>\n \n+    <testds.rootDn>o=isp</testds.rootDn>\n+    <testds.bindDn>uid=admin,ou=system</testds.bindDn>\n+    <testds.password>secret</testds.password>\n     <testds.port>1389</testds.port>\n-    <testdb.webport>9082</testdb.webport>\n \n     <testdb.driver>org.h2.Driver</testdb.driver>\n     <testdb.url>jdbc:h2:tcp://localhost:9092/mem:testdb;DB_CLOSE_DELAY=-1</testdb.url>\n     <testdb.username>sa</testdb.username>\n     <testdb.password>sa</testdb.password>\n+    <testdb.webport>9082</testdb.webport>\n \n     <testconnectorserver.port>4554</testconnectorserver.port>\n     <testconnectorserver.key>testconnectorserver</testconnectorserver.key>\n@@ -1144,39 +1144,6 @@ under the License.\n         <version>${h2.version}</version>\n       </dependency>\n \n-      <dependency>\n-        <groupId>org.apache.directory.server</groupId>\n-        <artifactId>apacheds-core-api</artifactId>\n-        <version>${apacheds.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apache.directory.server</groupId>\n-        <artifactId>apacheds-core-annotations</artifactId>\n-        <version>${apacheds.version}</version>\n-        <exclusions>\n-          <exclusion>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-          </exclusion>\n-        </exclusions>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apache.directory.server</groupId>\n-        <artifactId>apacheds-service-builder</artifactId>\n-        <version>${apacheds.version}</version>\n-        <exclusions>\n-          <exclusion>\n-            <groupId>org.apache.directory.server</groupId>\n-            <artifactId>apacheds-http-integration</artifactId>\n-          </exclusion>\n-        </exclusions>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apache.directory.api</groupId>\n-        <artifactId>api-ldap-codec-standalone</artifactId>\n-        <version>${apachedirapi.version}</version>\n-      </dependency>\n-\n       <dependency>\n         <groupId>com.icegreen</groupId>\n         <artifactId>greenmail</artifactId>"},{"sha":"fcbd1ecc910f66baffdeb5ef28c934f7abb6dd2e","filename":"src/main/asciidoc/getting-started/obtain.adoc","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -678,7 +678,7 @@ Credentials: `admin` / `password`\n  Click 'Connect' button\n \n | External resource: LDAP\n-| An http://directory.apache.org/apacheds/[Apache DS^] instance is available. +\n+| An embedded instance is available. +\n You can configure any LDAP client (such as http://jxplorer.org/[JXplorer^], for example) with the following information: +\n  +\n  host: `localhost` +"},{"sha":"b1d3bd88033945229c01fc631eb37fac4782bd2c","filename":"standalone/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/standalone%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7ad9a72d58d536cc6413a95a0e6eb335c7c0626a/standalone%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/standalone%2Fpom.xml?ref=7ad9a72d58d536cc6413a95a0e6eb335c7c0626a","patch":"@@ -171,7 +171,7 @@ under the License.\n                 <mkdir dir=\"${work.dir}/apache-tomcat-${tomcat.version}/${test.csvdir.path}\"/>\n                 <copy file=\"../fit/core-reference/src/test/resources/test.csv\" todir=\"${work.dir}/apache-tomcat-${tomcat.version}/${test.csvdir.path}\"/>\n \n-                <!-- Syncope build tools (provide H2, Apache DS and REST / SOAP resources + ConnId connector server) -->\n+                <!-- Syncope build tools (provide H2, LDAP and REST / SOAP resources + ConnId connector server) -->\n                 <copy todir=\"${work.dir}/apache-tomcat-${tomcat.version}/webapps/syncope-fit-build-tools\">\n                   <fileset dir=\"../fit/build-tools/target/syncope-fit-build-tools-${project.version}\" includes=\"**/*\"/>\n                 </copy>"}]}