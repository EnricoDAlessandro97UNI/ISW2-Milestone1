{"sha":"6fee50d752f655c6fbef22ecdf24b27025e661af","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZmZWU1MGQ3NTJmNjU1YzZmYmVmMjJlY2RmMjRiMjcwMjVlNjYxYWY=","commit":{"author":{"name":"Tushar","email":"tusharm567@gmail.com","date":"2016-07-20T14:07:04Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2016-07-22T10:17:37Z"},"message":"[SYNCOPE-809] GSoC Project (Eclipse Plugin for Apache Syncope) - This closes #28","tree":{"sha":"fc8a5f48e623ea2ff7f27e45df52a9901f8dfb50","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fc8a5f48e623ea2ff7f27e45df52a9901f8dfb50"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6fee50d752f655c6fbef22ecdf24b27025e661af","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6fee50d752f655c6fbef22ecdf24b27025e661af","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6fee50d752f655c6fbef22ecdf24b27025e661af","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6fee50d752f655c6fbef22ecdf24b27025e661af/comments","author":{"login":"tmess567","id":9494086,"node_id":"MDQ6VXNlcjk0OTQwODY=","avatar_url":"https://avatars.githubusercontent.com/u/9494086?v=4","gravatar_id":"","url":"https://api.github.com/users/tmess567","html_url":"https://github.com/tmess567","followers_url":"https://api.github.com/users/tmess567/followers","following_url":"https://api.github.com/users/tmess567/following{/other_user}","gists_url":"https://api.github.com/users/tmess567/gists{/gist_id}","starred_url":"https://api.github.com/users/tmess567/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmess567/subscriptions","organizations_url":"https://api.github.com/users/tmess567/orgs","repos_url":"https://api.github.com/users/tmess567/repos","events_url":"https://api.github.com/users/tmess567/events{/privacy}","received_events_url":"https://api.github.com/users/tmess567/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"12d481a8501a5415f528aefb60ae97fad64899eb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/12d481a8501a5415f528aefb60ae97fad64899eb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/12d481a8501a5415f528aefb60ae97fad64899eb"}],"stats":{"total":5844,"additions":5844,"deletions":0},"files":[{"sha":"005989536385c5fd3c66807a16fa1b3fdb25a6bb","filename":".gitignore","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/.gitignore","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/.gitignore","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.gitignore?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -9,3 +9,5 @@ target\n maven-eclipse.xml\n .externalToolBuilders\n archetype/src/main/resources/archetype-resources/pom.xml\n+ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/bin/\n+ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/lib/"},{"sha":"8bce572893fa4ddfce4e23aea4dbed62fe235569","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/META-INF/MANIFEST.MF","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2FMETA-INF%2FMANIFEST.MF","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2FMETA-INF%2FMANIFEST.MF","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2FMETA-INF%2FMANIFEST.MF?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,48 @@\n+Manifest-Version: 1.0\n+Bundle-ManifestVersion: 2\n+Bundle-Name: Apache Syncope Eclipse Plugin\n+Bundle-SymbolicName: org.apache.syncope.ide.eclipse.plugin;singleton:=true\n+Bundle-Version: 2.0.0.qualifier\n+Bundle-Activator: org.apache.syncope.ide.eclipse.plugin.Activator\n+Require-Bundle: org.eclipse.ui,\n+      org.eclipse.core.runtime,\n+      org.eclipse.jface.text,\n+      org.eclipse.core.resources,\n+      org.eclipse.ui.ide,\n+      org.eclipse.wst.sse.ui;bundle-version=\"1.3.401\"\n+Bundle-RequiredExecutionEnvironment: JavaSE-1.7\n+Bundle-ActivationPolicy: lazy\n+Bundle-ClassPath: lib/asm.jar,\n+      lib/commons-codec.jar,\n+      lib/commons-collections4.jar,\n+      lib/commons-lang3.jar,\n+      lib/cxf-core.jar,\n+      lib/cxf-rt-databinding-jaxb.jar,\n+      lib/cxf-rt-frontend-jaxrs.jar,\n+      lib/cxf-rt-rs-client.jar,\n+      lib/cxf-rt-rs-extension-search.jar,\n+      lib/cxf-rt-transports-http.jar,\n+      lib/cxf-rt-wsdl.jar,\n+      lib/jackson-annotations.jar,\n+      lib/jackson-core.jar,\n+      lib/jackson-databind.jar,\n+      lib/jackson-datatype-joda.jar,\n+      lib/jackson-jaxrs-base.jar,\n+      lib/jackson-jaxrs-json-provider.jar,\n+      lib/jackson-module-jaxb-annotations.jar,\n+      lib/javax.annotation-api.jar,\n+      lib/javax.ws.rs-api.jar,\n+      lib/jaxb-core.jar,\n+      lib/jaxb-impl.jar,\n+      lib/joda-time.jar,\n+      lib/log4j-api.jar,\n+      lib/slf4j-api.jar,\n+      lib/stax2-api.jar,\n+      lib/syncope-client-lib.jar,\n+      lib/syncope-common-lib.jar,\n+      lib/syncope-common-rest-api.jar,\n+      lib/validation-api.jar,\n+      lib/woodstox-core-asl.jar,\n+      lib/wsdl4j.jar,\n+      lib/xmlschema-core.jar,\n+      ."},{"sha":"759669b54988ea0909de21f6641e23c12d19e3c3","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/build.properties","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fbuild.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fbuild.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fbuild.properties?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,57 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+source.. = src/main/java/\n+output.. = bin/\n+bin.includes = plugin.xml,\\\n+      META-INF/,\\\n+      .,\\\n+      src/main/resources/icons/,\\\n+      lib/asm.jar,\\\n+      lib/commons-codec.jar,\\\n+      lib/commons-collections4.jar,\\\n+      lib/commons-lang3.jar,\\\n+      lib/cxf-core.jar,\\\n+      lib/cxf-rt-databinding-jaxb.jar,\\\n+      lib/cxf-rt-frontend-jaxrs.jar,\\\n+      lib/cxf-rt-rs-client.jar,\\\n+      lib/cxf-rt-rs-extension-search.jar,\\\n+      lib/cxf-rt-transports-http.jar,\\\n+      lib/cxf-rt-wsdl.jar,\\\n+      lib/jackson-annotations.jar,\\\n+      lib/jackson-core.jar,\\\n+      lib/jackson-databind.jar,\\\n+      lib/jackson-datatype-joda.jar,\\\n+      lib/jackson-jaxrs-base.jar,\\\n+      lib/jackson-jaxrs-json-provider.jar,\\\n+      lib/jackson-module-jaxb-annotations.jar,\\\n+      lib/javax.annotation-api.jar,\\\n+      lib/javax.ws.rs-api.jar,\\\n+      lib/jaxb-core.jar,\\\n+      lib/jaxb-impl.jar,\\\n+      lib/joda-time.jar,\\\n+      lib/log4j-api.jar,\\\n+      lib/slf4j-api.jar,\\\n+      lib/stax2-api.jar,\\\n+      lib/syncope-client-lib.jar,\\\n+      lib/syncope-common-lib.jar,\\\n+      lib/syncope-common-rest-api.jar,\\\n+      lib/validation-api.jar,\\\n+      lib/woodstox-core-asl.jar,\\\n+      lib/wsdl4j.jar,\\\n+      lib/xmlschema-core.jar"},{"sha":"2737d91b72dd2cb11568bca01f4b17471fc185c8","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/plugin.xml","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fplugin.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fplugin.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fplugin.xml?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<?eclipse version=\"3.4\"?>\n+<plugin>\n+\n+   <extension\n+         point=\"org.eclipse.ui.views\">\n+      <category\n+            name=\"Apache Syncope\"\n+            id=\"org.apache.syncope.ide.eclipse.plugin\">\n+      </category>\n+      <view\n+            name=\"Apache Syncope Templates\"\n+            icon=\"src/main/resources/icons/syncope.png\"\n+            category=\"org.apache.syncope.ide.eclipse.plugin\"\n+            class=\"org.apache.syncope.ide.eclipse.plugin.views.SyncopeView\"\n+            id=\"org.apache.syncope.ide.eclipse.plugin.views.SyncopeView\">\n+      </view>\n+   </extension>\n+   <extension\n+         point=\"org.eclipse.ui.perspectiveExtensions\">\n+      <perspectiveExtension\n+            targetID=\"org.eclipse.jdt.ui.JavaPerspective\">\n+         <view\n+               ratio=\"0.5\"\n+               relative=\"org.eclipse.ui.views.ProblemView\"\n+               relationship=\"right\"\n+               id=\"org.apache.syncope.ide.eclipse.plugin.views.SyncopeView\">\n+         </view>\n+      </perspectiveExtension>\n+   </extension>\n+   <extension\n+         point=\"org.eclipse.help.contexts\">\n+      <contexts\n+            file=\"contexts.xml\">\n+      </contexts>\n+   </extension>\n+   <extension point=\"org.eclipse.ui.editors\">\n+   \t<editor id=\"org.apache.syncope.ide.eclipse.plugin.editors.TemplateEditor\"\n+         name=\"Template Editor\"\n+         icon=\"src/main/resources/icons/syncope.png\"\n+         class=\"org.apache.syncope.ide.eclipse.plugin.editors.TemplateEditor\"\n+      />\n+   </extension>\n+\n+</plugin>"},{"sha":"dc22daaf3eec760e668a303b07041498a4a185fa","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/pom.xml","status":"added","additions":99,"deletions":0,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fpom.xml?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,99 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ide</groupId>\n+    <artifactId>syncope-ide-eclipse</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+    <relativePath>../../</relativePath>\n+  </parent>\n+\n+  <name>Apache Syncope IDE Eclipse Plugin</name>\n+  <description>Apache Syncope IDE Eclipse Plugin</description>\n+  <groupId>org.apache.syncope.ide.eclipse</groupId>\n+  <artifactId>org.apache.syncope.ide.eclipse.plugin</artifactId>\n+  <packaging>eclipse-plugin</packaging>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.client</groupId>\n+      <artifactId>syncope-client-lib</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../../..</rootpom.basedir>\n+  </properties>\n+\n+  <build>\n+    <outputDirectory>./bin</outputDirectory>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-dependency-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>copy-libraries</id>\n+            <phase>validate</phase>\n+            <goals>\n+              <goal>copy-dependencies</goal>\n+            </goals>\n+            <configuration>\n+              <outputDirectory>lib</outputDirectory>\n+              <overWriteReleases>true</overWriteReleases>\n+              <overWriteSnapshots>true</overWriteSnapshots>\n+              <stripVersion>true</stripVersion>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  \n+  <profiles>\n+    <profile>\n+      <id>apache-release</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-deploy-plugin</artifactId>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-source-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skipSource>true</skipSource>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+</project>"},{"sha":"3c7873731d972f430b945ad3d7be741651db9f80","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/Activator.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2FActivator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2FActivator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2FActivator.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin;\n+\n+import org.eclipse.jface.resource.ImageDescriptor;\n+import org.eclipse.ui.plugin.AbstractUIPlugin;\n+import org.osgi.framework.BundleContext;\n+\n+public class Activator extends AbstractUIPlugin {\n+\n+    public static final String PLUGIN_ID = \"org.apache.syncope.ide.eclipse.plugin\";\n+    private static Activator PLUGIN;\n+\n+    public void start(final BundleContext context) throws Exception {\n+        super.start(context);\n+        PLUGIN = this;\n+    }\n+\n+    public void stop(final BundleContext context) throws Exception {\n+        PLUGIN = null;\n+        super.stop(context);\n+    }\n+\n+    public static Activator getDefault() {\n+        return PLUGIN;\n+    }\n+\n+    public static ImageDescriptor getImageDescriptor(final String path) {\n+        return imageDescriptorFromPlugin(PLUGIN_ID, path);\n+    }\n+}"},{"sha":"9bedcfdab525814d32d32a6ae1d4a2ba93c31bb7","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/dialogs/AddTemplateDialog.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fdialogs%2FAddTemplateDialog.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fdialogs%2FAddTemplateDialog.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fdialogs%2FAddTemplateDialog.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.dialogs;\n+\n+import org.eclipse.jface.dialogs.IDialogConstants;\n+import org.eclipse.jface.dialogs.TitleAreaDialog;\n+import org.eclipse.swt.SWT;\n+import org.eclipse.swt.layout.GridData;\n+import org.eclipse.swt.layout.GridLayout;\n+import org.eclipse.swt.widgets.Composite;\n+import org.eclipse.swt.widgets.Control;\n+import org.eclipse.swt.widgets.Label;\n+import org.eclipse.swt.widgets.Shell;\n+import org.eclipse.swt.widgets.Text;\n+\n+public class AddTemplateDialog extends TitleAreaDialog {\n+    \n+    private Text key;\n+    private String keyString;\n+\n+    public AddTemplateDialog(final Shell parentShell) {\n+        super(parentShell);\n+        keyString = \"\";\n+    }\n+\n+    @Override\n+    public void create() {\n+        super.create();\n+        setTitle(\"Add Template\");\n+    }\n+\n+    @Override\n+    protected void createButtonsForButtonBar(final Composite parent) {\n+        createButton(parent, IDialogConstants.OK_ID, \"Add\", true);\n+        createButton(parent, IDialogConstants.CANCEL_ID, IDialogConstants.CANCEL_LABEL, false);\n+    }\n+\n+    @Override\n+    protected Control createDialogArea(final Composite parent) {\n+        Composite area = (Composite) super.createDialogArea(parent);\n+        Composite container = new Composite(area, SWT.NONE);\n+        container.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));\n+        GridLayout layout = new GridLayout(2, false);\n+        container.setLayout(layout);\n+        createKeyField(container);\n+        return area;\n+    }\n+\n+    private void createKeyField(final Composite container) {\n+        Label keyLabel = new Label(container, SWT.NONE);\n+        keyLabel.setText(\"Key\");\n+        GridData keyGD = new GridData();\n+        keyGD.grabExcessHorizontalSpace = true;\n+        keyGD.horizontalAlignment = GridData.FILL;\n+        key = new Text(container, SWT.BORDER);\n+        key.setLayoutData(keyGD);\n+    }\n+\n+    @Override\n+    protected boolean isResizable() {\n+        return true;\n+    }\n+\n+    // save content of the Text fields because they get disposed\n+    // as soon as the Dialog closes\n+    private void saveInput() {\n+        keyString = key.getText();\n+    }\n+\n+    @Override\n+    protected void okPressed() {\n+        saveInput();\n+        setReturnCode(200);\n+        super.okPressed();\n+    }\n+\n+    public String getKey() {\n+        return keyString;\n+    }\n+\n+}"},{"sha":"f59bf117fbc6a3c2efc52194d7a9859496b1e339","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/dialogs/LoginDialog.java","status":"added","additions":186,"deletions":0,"changes":186,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fdialogs%2FLoginDialog.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fdialogs%2FLoginDialog.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fdialogs%2FLoginDialog.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,186 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.dialogs;\n+\n+import org.eclipse.core.runtime.preferences.ConfigurationScope;\n+import org.eclipse.core.runtime.preferences.InstanceScope;\n+import org.eclipse.jface.dialogs.IDialogConstants;\n+import org.eclipse.jface.dialogs.TitleAreaDialog;\n+import org.eclipse.swt.SWT;\n+import org.eclipse.swt.events.SelectionAdapter;\n+import org.eclipse.swt.events.SelectionEvent;\n+import org.eclipse.swt.layout.GridData;\n+import org.eclipse.swt.layout.GridLayout;\n+import org.eclipse.swt.widgets.Button;\n+import org.eclipse.swt.widgets.Composite;\n+import org.eclipse.swt.widgets.Control;\n+import org.eclipse.swt.widgets.Label;\n+import org.eclipse.swt.widgets.Shell;\n+import org.eclipse.swt.widgets.Text;\n+import org.osgi.service.prefs.BackingStoreException;\n+import org.osgi.service.prefs.Preferences;\n+\n+public class LoginDialog extends TitleAreaDialog {\n+    private Text deploymentUrlInp;\n+    private Text usernameInp;\n+    private Text passwordInp;\n+    private String deploymentUrl;\n+    private String username;\n+    private String password;\n+    private Button resetbutton;\n+    private Preferences instancePreferences = InstanceScope.INSTANCE\n+            .getNode(\"org.apache.syncope.ide.eclipse.plugin.dialogs.prefs\");\n+    private Preferences configPreferences = ConfigurationScope.INSTANCE\n+            .getNode(\"org.apache.syncope.ide.eclipse.plugin.dialogs.prefs\");\n+    private Preferences sub1 = configPreferences.node(\"depPref\");\n+    private Preferences sub2 = instancePreferences.node(\"userPref\");\n+\n+    public LoginDialog(final Shell parentShell) {\n+        super(parentShell);\n+    }\n+\n+    @Override\n+    public void create() {\n+        super.create();\n+        setTitle(\"Login to Apache Syncope\");\n+    }\n+\n+    @Override\n+    protected void createButtonsForButtonBar(final Composite parent) {\n+        createButton(parent, IDialogConstants.OK_ID, \"Login\", true);\n+        createButton(parent, IDialogConstants.CANCEL_ID, IDialogConstants.CANCEL_LABEL, false);\n+        resetbutton = createButton(parent, IDialogConstants.NO_ID, \"Reset Fields\", false);\n+        resetbutton.addSelectionListener(new SelectionAdapter() {\n+            @Override\n+            public void widgetSelected(final SelectionEvent e) {\n+                deploymentUrlInp.setText(\"\");\n+                usernameInp.setText(\"\");\n+                passwordInp.setText(\"\");\n+\n+                // add to preferences\n+                saveInput();\n+            }\n+        });\n+    }\n+\n+    @Override\n+    protected Control createDialogArea(final Composite parent) {\n+        Composite area = (Composite) super.createDialogArea(parent);\n+        Composite container = new Composite(area, SWT.NONE);\n+        container.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));\n+        GridLayout layout = new GridLayout(2, false);\n+        container.setLayout(layout);\n+\n+        createDeploymentUrl(container);\n+        createUsername(container);\n+        createPassword(container);\n+\n+        return area;\n+    }\n+\n+    private void createDeploymentUrl(final Composite container) {\n+        Label lbtDeploymentUrl = new Label(container, SWT.NONE);\n+        lbtDeploymentUrl.setText(\"Deployment Url\");\n+\n+        GridData dataDeploymentUrl = new GridData();\n+        dataDeploymentUrl.grabExcessHorizontalSpace = true;\n+        dataDeploymentUrl.horizontalAlignment = GridData.FILL;\n+        deploymentUrlInp = new Text(container, SWT.BORDER);\n+        deploymentUrlInp.setLayoutData(dataDeploymentUrl);\n+        String depurl = sub1.get(\"deploymentUrl\", \"http://\");\n+        if (depurl != null) {\n+            deploymentUrlInp.setText(depurl);\n+        }\n+    }\n+\n+    private void createUsername(final Composite container) {\n+        Label lbtUsername = new Label(container, SWT.NONE);\n+        lbtUsername.setText(\"Username\");\n+\n+        GridData dataUsername = new GridData();\n+        dataUsername.grabExcessHorizontalSpace = true;\n+        dataUsername.horizontalAlignment = GridData.FILL;\n+        usernameInp = new Text(container, SWT.BORDER);\n+        usernameInp.setLayoutData(dataUsername);\n+        String usernameString = sub2.get(\"username\", \"\");\n+        if (usernameString != null) {\n+            usernameInp.setText(usernameString);\n+        }\n+    }\n+\n+    private void createPassword(final Composite container) {\n+        Label lbtPassword = new Label(container, SWT.NONE);\n+        lbtPassword.setText(\"Password\");\n+\n+        GridData dataPassword = new GridData();\n+        dataPassword.grabExcessHorizontalSpace = true;\n+        dataPassword.horizontalAlignment = GridData.FILL;\n+        passwordInp = new Text(container, SWT.BORDER | SWT.PASSWORD);\n+        passwordInp.setLayoutData(dataPassword);\n+        String passwordString = sub2.get(\"password\", \"\");\n+        if (passwordString != null) {\n+            passwordInp.setText(passwordString);\n+        }\n+    }\n+\n+    @Override\n+    protected boolean isResizable() {\n+        return true;\n+    }\n+\n+    // save content of the Text fields because they get disposed\n+    // as soon as the Dialog closes\n+    private void saveInput() {\n+        deploymentUrl = deploymentUrlInp.getText();\n+        username = usernameInp.getText();\n+        password = passwordInp.getText();\n+\n+        // add data to preferences for repopulation later\n+        sub1.put(\"deploymentUrl\", deploymentUrl);\n+        sub2.put(\"username\", username);\n+        sub2.put(\"password\", password);\n+\n+        try {\n+            instancePreferences.flush();\n+            configPreferences.flush();\n+        } catch (final BackingStoreException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    @Override\n+    protected void okPressed() {\n+        saveInput();\n+        setReturnCode(200);\n+        super.okPressed();\n+    }\n+\n+    public String getDeploymentUrl() {\n+        return deploymentUrl;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    public String getUsername() {\n+        return username;\n+    }\n+\n+}"},{"sha":"89f2a2ea4b4aa9df266e2d998f20f4639b6fa99e","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/HTMLEditor.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FHTMLEditor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FHTMLEditor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FHTMLEditor.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors;\n+\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.HTMLFileDocumentProvider;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.ui.IEditorInput;\n+import org.eclipse.ui.editors.text.TextEditor;\n+\n+public class HTMLEditor extends TextEditor {\n+    public HTMLEditor() {\n+        super();\n+        setSourceViewerConfiguration(new HTMLSourceConfiguration());\n+    }\n+\n+    protected final void doSetInput(final IEditorInput input) throws CoreException {\n+        setDocumentProvider(new HTMLFileDocumentProvider());\n+        super.doSetInput(input);\n+    }\n+}"},{"sha":"32bfde773ec59018069fffaa4a67df2eaee09910","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/HTMLSourceConfiguration.java","status":"added","additions":251,"deletions":0,"changes":251,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FHTMLSourceConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FHTMLSourceConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FHTMLSourceConfiguration.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,251 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors;\n+\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.HTMLAutoEditStrategy;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.HTMLCompletionProcessor;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.HTMLPartitionScanner;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.HTMLScanner;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.HTMLTagDamagerRepairer;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.HTMLTagScanner;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.IHTMLColorConstants;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.InnerCSSScanner;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.InnerJavaScriptScanner;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.JavaScriptDamagerRepairer;\n+import org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers.SyncopeTagScanner;\n+import org.eclipse.jface.text.IAutoEditStrategy;\n+import org.eclipse.jface.text.IDocument;\n+import org.eclipse.jface.text.TextAttribute;\n+import org.eclipse.jface.text.contentassist.ContentAssistant;\n+import org.eclipse.jface.text.contentassist.IContentAssistant;\n+import org.eclipse.jface.text.presentation.IPresentationReconciler;\n+import org.eclipse.jface.text.presentation.PresentationReconciler;\n+import org.eclipse.jface.text.rules.DefaultDamagerRepairer;\n+import org.eclipse.jface.text.rules.RuleBasedScanner;\n+import org.eclipse.jface.text.rules.Token;\n+import org.eclipse.jface.text.source.ISourceViewer;\n+import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.graphics.RGB;\n+import org.eclipse.swt.widgets.Display;\n+import org.eclipse.ui.editors.text.TextSourceViewerConfiguration;\n+\n+public class HTMLSourceConfiguration extends TextSourceViewerConfiguration {\n+\n+    private HTMLTagScanner tagScanner;\n+    private SyncopeTagScanner syncopeTagScanner;\n+    private HTMLScanner scanner;\n+    private RuleBasedScanner commentScanner;\n+    private RuleBasedScanner scriptScanner;\n+    private RuleBasedScanner doctypeScanner;\n+    private RuleBasedScanner directiveScanner;\n+    private RuleBasedScanner javaScriptScanner;\n+    private RuleBasedScanner cssScanner;\n+    private ContentAssistant contentAssistant;\n+    private HTMLAutoEditStrategy autoEditStrategy;\n+\n+    public HTMLSourceConfiguration() {\n+        contentAssistant = new ContentAssistant();\n+        HTMLCompletionProcessor proc = new HTMLCompletionProcessor();\n+        proc.setAutoAssistChars(\"</\\\"\".toCharArray());\n+        proc.setAssistCloseTag(true);\n+\n+        contentAssistant.setContentAssistProcessor(proc, IDocument.DEFAULT_CONTENT_TYPE);\n+        contentAssistant.setContentAssistProcessor(proc, IDocument.DEFAULT_CONTENT_TYPE);\n+        contentAssistant.setContentAssistProcessor(proc, HTMLPartitionScanner.HTML_TAG);\n+        contentAssistant.setContentAssistProcessor(proc, HTMLPartitionScanner.PREFIX_TAG);\n+\n+        contentAssistant.enableAutoActivation(true);\n+        contentAssistant.setContextInformationPopupOrientation(IContentAssistant.CONTEXT_INFO_ABOVE);\n+    }\n+\n+    protected HTMLAutoEditStrategy createAutoEditStrategy() {\n+        return new HTMLAutoEditStrategy();\n+    }\n+\n+    public final HTMLAutoEditStrategy getAutoEditStrategy() {\n+        if (this.autoEditStrategy == null) {\n+            this.autoEditStrategy = createAutoEditStrategy();\n+        }\n+        return this.autoEditStrategy;\n+    }\n+\n+    public final IAutoEditStrategy[] getAutoEditStrategies(final ISourceViewer sourceViewer,\n+            final String contentType) {\n+        return new IAutoEditStrategy[]{ getAutoEditStrategy() };\n+    }\n+\n+    @Override\n+    public IContentAssistant getContentAssistant(final ISourceViewer sourceViewer) {\n+\n+            contentAssistant.setInformationControlCreator(getInformationControlCreator(sourceViewer));\n+            return contentAssistant;\n+    }\n+\n+    protected HTMLTagScanner getTagScanner() {\n+        if (tagScanner == null) {\n+            tagScanner = new HTMLTagScanner(false);\n+            RGB rgb = IHTMLColorConstants.TAG;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            tagScanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return tagScanner;\n+    }\n+\n+    protected SyncopeTagScanner getSyncopeTagScanner() {\n+        if (syncopeTagScanner == null) {\n+            syncopeTagScanner = new SyncopeTagScanner(false);\n+            RGB rgb = IHTMLColorConstants.HTML_COMMENT;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            syncopeTagScanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return syncopeTagScanner;\n+    }\n+\n+    protected HTMLScanner getHTMLScanner() {\n+        if (scanner == null) {\n+            scanner = new HTMLScanner();\n+            RGB rgb = IHTMLColorConstants.FOREGROUND;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            scanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return scanner;\n+    }\n+\n+    protected RuleBasedScanner getCommentScanner() {\n+        if (commentScanner == null) {\n+            commentScanner = new RuleBasedScanner();\n+            RGB rgb = IHTMLColorConstants.HTML_COMMENT;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            commentScanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return commentScanner;\n+    }\n+\n+    protected RuleBasedScanner getScriptScanner() {\n+        if (scriptScanner == null) {\n+            scriptScanner = new RuleBasedScanner();\n+            RGB rgb = IHTMLColorConstants.SCRIPT;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            scriptScanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return scriptScanner;\n+    }\n+\n+    protected RuleBasedScanner getDoctypeScanner() {\n+        if (doctypeScanner == null) {\n+            doctypeScanner = new RuleBasedScanner();\n+            RGB rgb = IHTMLColorConstants.PROC_INSTR;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            doctypeScanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return doctypeScanner;\n+    }\n+\n+    protected RuleBasedScanner getDirectiveScanner() {\n+        if (directiveScanner == null) {\n+            directiveScanner = new RuleBasedScanner();\n+            RGB rgb = IHTMLColorConstants.SCRIPT;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            directiveScanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return directiveScanner;\n+    }\n+\n+    protected RuleBasedScanner getJavaScriptScanner() {\n+        if (javaScriptScanner == null) {\n+            javaScriptScanner = new InnerJavaScriptScanner();\n+            RGB rgb = IHTMLColorConstants.FOREGROUND;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            javaScriptScanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return javaScriptScanner;\n+    }\n+\n+    protected RuleBasedScanner getCSSScanner() {\n+        if (cssScanner == null) {\n+            cssScanner = new InnerCSSScanner();\n+            RGB rgb = IHTMLColorConstants.FOREGROUND;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            cssScanner.setDefaultReturnToken(new Token(new TextAttribute(color)));\n+        }\n+        return cssScanner;\n+    }\n+\n+    @Override\n+    public IPresentationReconciler getPresentationReconciler(final ISourceViewer sourceViewer) {\n+        PresentationReconciler reconciler = new PresentationReconciler();\n+        DefaultDamagerRepairer dr = null;\n+\n+        dr = new HTMLTagDamagerRepairer(getTagScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.HTML_TAG);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.HTML_TAG);\n+\n+        dr = new HTMLTagDamagerRepairer(getTagScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.PREFIX_TAG);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.PREFIX_TAG);\n+\n+        dr = new HTMLTagDamagerRepairer(getSyncopeTagScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.SYNCOPE_TAG);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.SYNCOPE_TAG);\n+\n+        dr = new HTMLTagDamagerRepairer(getHTMLScanner());\n+        reconciler.setDamager(dr, IDocument.DEFAULT_CONTENT_TYPE);\n+        reconciler.setRepairer(dr, IDocument.DEFAULT_CONTENT_TYPE);\n+\n+        dr = new HTMLTagDamagerRepairer(getCommentScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.HTML_COMMENT);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.HTML_COMMENT);\n+\n+        dr = new DefaultDamagerRepairer(getScriptScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.HTML_SCRIPT);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.HTML_SCRIPT);\n+\n+        dr = new DefaultDamagerRepairer(getDoctypeScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.HTML_DOCTYPE);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.HTML_DOCTYPE);\n+\n+        dr = new DefaultDamagerRepairer(getDirectiveScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.HTML_DIRECTIVE);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.HTML_DIRECTIVE);\n+\n+        dr = new JavaScriptDamagerRepairer(getJavaScriptScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.JAVASCRIPT);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.JAVASCRIPT);\n+\n+        dr = new JavaScriptDamagerRepairer(getCSSScanner());\n+        reconciler.setDamager(dr, HTMLPartitionScanner.HTML_CSS);\n+        reconciler.setRepairer(dr, HTMLPartitionScanner.HTML_CSS);\n+\n+        return reconciler;\n+    }\n+\n+    public String[] getConfiguredContentTypes(final ISourceViewer sourceViewer) {\n+        return new String[] {\n+            IDocument.DEFAULT_CONTENT_TYPE,\n+            HTMLPartitionScanner.HTML_COMMENT,\n+            HTMLPartitionScanner.HTML_TAG,\n+            HTMLPartitionScanner.PREFIX_TAG,\n+            HTMLPartitionScanner.HTML_SCRIPT,\n+            HTMLPartitionScanner.HTML_DOCTYPE,\n+            HTMLPartitionScanner.HTML_DIRECTIVE,\n+            HTMLPartitionScanner.JAVASCRIPT,\n+            HTMLPartitionScanner.HTML_CSS,\n+            HTMLPartitionScanner.SYNCOPE_TAG};\n+    }\n+}"},{"sha":"7a1468fb3f8628c53e60c60424a9ad086e900144","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/TemplateEditor.java","status":"added","additions":199,"deletions":0,"changes":199,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FTemplateEditor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FTemplateEditor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FTemplateEditor.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,199 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors;\n+\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n+import org.apache.syncope.ide.eclipse.plugin.Activator;\n+import org.apache.syncope.ide.eclipse.plugin.views.SyncopeView;\n+import org.eclipse.core.resources.IMarker;\n+import org.eclipse.core.resources.IResourceChangeEvent;\n+import org.eclipse.core.resources.IResourceChangeListener;\n+import org.eclipse.core.resources.ResourcesPlugin;\n+import org.eclipse.core.runtime.IProgressMonitor;\n+import org.eclipse.core.runtime.IStatus;\n+import org.eclipse.core.runtime.jobs.Job;\n+import org.eclipse.jface.dialogs.ErrorDialog;\n+import org.eclipse.swt.widgets.Display;\n+import org.eclipse.ui.IEditorInput;\n+import org.eclipse.ui.IEditorPart;\n+import org.eclipse.ui.IEditorSite;\n+import org.eclipse.ui.IWorkbenchPage;\n+import org.eclipse.ui.PartInitException;\n+import org.eclipse.ui.editors.text.TextEditor;\n+import org.eclipse.ui.part.FileEditorInput;\n+import org.eclipse.ui.part.MultiPageEditorPart;\n+import org.eclipse.ui.texteditor.ITextEditor;\n+import org.eclipse.ui.ide.IDE;\n+import org.eclipse.wst.sse.ui.StructuredTextEditor;\n+\n+public class TemplateEditor extends MultiPageEditorPart implements IResourceChangeListener {\n+\n+    public static final String ID = \"org.apache.syncope.ide.eclipse.plugin.editors.TemplateEditor\";\n+    private static final String SAVE_TEMPLATE_LABEL = \"Saving Template\";\n+    private static final String ERROR_NESTED_EDITOR = \"Error creating nested text editor\";\n+    private static final String ERROR_INCORRECT_INPUT = \"Wrong Input\";\n+    private TextEditor editor;\n+    private TemplateEditorInput input;\n+    private String[] inputStringList;\n+    private String[] titleList;\n+    private String[] tooltipList;\n+\n+    void createPage(final String inputString, final String title, final String tooltip) {\n+        try {\n+            if (title.equals(SyncopeView.TEMPLATE_FORMAT_HTML)) {\n+                editor = new HTMLEditor();\n+            } else {\n+                editor = new StructuredTextEditor(); \n+            }\n+            int index = addPage(editor, (IEditorInput) new TemplateEditorInput(inputString, title, tooltip));\n+            setPageText(index, editor.getTitle());\n+        } catch (final PartInitException e) {\n+            ErrorDialog.openError(\n+                getSite().getShell(),\n+                ERROR_NESTED_EDITOR,\n+                null,\n+                e.getStatus());\n+        }\n+    }\n+\n+    protected void createPages() {\n+        for (int i = 0; i < inputStringList.length; i++) {\n+            createPage(inputStringList[i], titleList[i], tooltipList[i]);\n+        }\n+    }\n+\n+    public void dispose() {\n+        ResourcesPlugin.getWorkspace().removeResourceChangeListener(this);\n+        super.dispose();\n+    }\n+\n+    public void doSave(final IProgressMonitor monitor) {\n+        final ITextEditor ite = (ITextEditor) getActiveEditor();\n+        final String content = ite.getDocumentProvider().getDocument(ite.getEditorInput()).get();\n+        Job saveJob = new Job(SAVE_TEMPLATE_LABEL) {\n+            @Override\n+            protected IStatus run(final IProgressMonitor arg0) {\n+                try {\n+                    if (ite.getTitle().equals(SyncopeView.TEMPLATE_FORMAT_HTML)) {\n+                        SyncopeView.setMailTemplateContent(ite.getTitleToolTip(),\n+                                MailTemplateFormat.HTML, content);\n+                    } else if (ite.getTitle().equals(SyncopeView.TEMPLATE_FORMAT_TEXT)) {\n+                        SyncopeView.setMailTemplateContent(ite.getTitleToolTip(),\n+                                MailTemplateFormat.TEXT, content);\n+                    } else if (ite.getTitle().equals(SyncopeView.TEMPLATE_FORMAT_CSV)) {\n+                        SyncopeView.setReportTemplateContent(ite.getTitleToolTip(),\n+                                ReportTemplateFormat.CSV, content);\n+                    } else if (ite.getTitle().equals(SyncopeView.TEMPLATE_FORMAT_XSL_FO)) {\n+                        SyncopeView.setReportTemplateContent(ite.getTitleToolTip(),\n+                                ReportTemplateFormat.FO, content);\n+                    } else if (ite.getTitle().equals(SyncopeView.TEMPLATE_FORMAT_XSL_HTML)) {\n+                        SyncopeView.setReportTemplateContent(ite.getTitleToolTip(),\n+                                ReportTemplateFormat.HTML, content);\n+                    } else {\n+                        throw new Exception(\"Not a valid editor title\");\n+                    }\n+                } catch (final SyncopeClientException e) {\n+                    e.printStackTrace();\n+                    if (ClientExceptionType.NotFound.equals(e.getType())) {\n+                        /*\n+                         * If a deleted template is being edited\n+                         * close editor and display error\n+                         */\n+                        Display.getDefault().syncExec(new Runnable() {\n+                            @Override\n+                            public void run() {\n+                                TemplateEditor.this.getSite().getPage().closeEditor(\n+                                        TemplateEditor.this, false);\n+                            }\n+                        });\n+                        return new org.eclipse.core.runtime.Status(\n+                                org.eclipse.core.runtime.Status.ERROR, Activator.PLUGIN_ID,\n+                                \"Template No longer exists\");\n+                    }\n+                }  catch (final Exception e) {\n+                    e.printStackTrace();\n+                } finally {\n+                    Display.getDefault().syncExec(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            ite.doSave(monitor);\n+                        }\n+                    });\n+                }\n+                if (monitor.isCanceled()) {\n+                    return org.eclipse.core.runtime.Status.CANCEL_STATUS;\n+                }\n+                return org.eclipse.core.runtime.Status.OK_STATUS;\n+            }\n+        };\n+        saveJob.setUser(true);\n+        saveJob.schedule();\n+    }\n+\n+    public void doSaveAs() {\n+        getActiveEditor().doSaveAs();\n+    }\n+    public void gotoMarker(final IMarker marker) {\n+        setActivePage(0);\n+        IDE.gotoMarker(getEditor(0), marker);\n+    }\n+    public void init(final IEditorSite site, final IEditorInput editorInput)\n+        throws PartInitException {\n+        if (!(editorInput instanceof TemplateEditorInput)) {\n+            throw new RuntimeException(ERROR_INCORRECT_INPUT);\n+        }\n+        this.input = (TemplateEditorInput) editorInput;\n+\n+        this.inputStringList = this.input.getInputStringList();\n+        this.titleList = this.input.getTitleList();\n+        this.tooltipList = this.input.getTooltipList();\n+\n+        setSite(site);\n+        setInput(input);\n+        setPartName(this.tooltipList[0]);\n+    }\n+\n+    public boolean isSaveAsAllowed() {\n+        return true;\n+    }\n+\n+    protected void pageChange(final int newPageIndex) {\n+        super.pageChange(newPageIndex);\n+    }\n+\n+    public void resourceChanged(final IResourceChangeEvent event) {\n+        if (event.getType() == IResourceChangeEvent.PRE_CLOSE) {\n+            Display.getDefault().asyncExec(new Runnable() {\n+                public void run() {\n+                    IWorkbenchPage[] pages = getSite().getWorkbenchWindow().getPages();\n+                    for (int i = 0; i < pages.length; i++) {\n+                        if (((FileEditorInput) editor.getEditorInput()).getFile().getProject()\n+                                .equals(event.getResource())) {\n+                            IEditorPart editorPart = pages[i].findEditor(editor.getEditorInput());\n+                            pages[i].closeEditor(editorPart, true);\n+                        }\n+                    }\n+                }\n+            });\n+        }\n+    }\n+}"},{"sha":"e677596847acb0b2d6c43109d7c7d4b9e069013c","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/TemplateEditorInput.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FTemplateEditorInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FTemplateEditorInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2FTemplateEditorInput.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+\n+import org.eclipse.core.resources.IStorage;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.core.runtime.IPath;\n+import org.eclipse.jface.resource.ImageDescriptor;\n+import org.eclipse.ui.IPersistableElement;\n+import org.eclipse.ui.IStorageEditorInput;\n+\n+public class TemplateEditorInput implements IStorageEditorInput {\n+\n+    private final String inputString;\n+    private final String title;\n+    private final String tooltip;\n+\n+    private String[] inputStringList;\n+    private String[] titleList;\n+    private String[] tooltipList;\n+\n+    public String[] getInputStringList() {\n+        return inputStringList;\n+    }\n+\n+    public String[] getTitleList() {\n+        return titleList;\n+    }\n+\n+    public String[] getTooltipList() {\n+        return tooltipList;\n+    }\n+\n+    public String getInputString() {\n+        return inputString;\n+    }\n+\n+    public TemplateEditorInput(final String inputString, final String title, final String tooltip) {\n+        this.inputString = inputString;\n+        this.title = title;\n+        this.tooltip = tooltip;\n+    }\n+\n+    public TemplateEditorInput(final String[] inputStringList, final String[] titleList,\n+            final String[] tooltipList) {\n+        this.inputString = null;\n+        this.title = null;\n+        this.tooltip = null;\n+\n+        this.inputStringList = inputStringList;\n+        this.titleList = titleList;\n+        this.tooltipList = tooltipList;\n+    }\n+\n+    public boolean exists() {\n+        return false;\n+    }\n+\n+    public ImageDescriptor getImageDescriptor() {\n+        return null;\n+    }\n+\n+    public IPersistableElement getPersistable() {\n+        return null;\n+    }\n+\n+    public <T> T getAdapter(final Class<T> adapter) {\n+        return null;\n+    }\n+\n+    public String getName() {\n+        return title;\n+    }\n+\n+    public String getToolTipText() {\n+        return tooltip;\n+    }\n+\n+    public IStorage getStorage() throws CoreException {\n+        return new IStorage() {\n+            public InputStream getContents() throws CoreException {\n+                return new ByteArrayInputStream(inputString.getBytes(\n+                    java.nio.charset.Charset.defaultCharset()));\n+            }\n+\n+            public IPath getFullPath() {\n+                return null;\n+            }\n+\n+            public String getName() {\n+                return TemplateEditorInput.this.getName();\n+            }\n+\n+            public boolean isReadOnly() {\n+                return false;\n+            }\n+\n+            public <T> T getAdapter(final Class<T> adapter) {\n+                return null;\n+            }\n+        };\n+    }\n+}"},{"sha":"4006830172728a7992142b2d51fbdd653de6be98","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/AssistInfo.java","status":"added","additions":117,"deletions":0,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FAssistInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FAssistInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FAssistInfo.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.contentassist.CompletionProposal;\n+import org.eclipse.jface.text.contentassist.ICompletionProposal;\n+import org.eclipse.swt.graphics.Image;\n+\n+public class AssistInfo {\n+\n+    private String displayString;\n+    private String replaceString;\n+    private Image image;\n+    private String additionalInfo;\n+\n+    public AssistInfo(final String displayString) {\n+        this.displayString = displayString;\n+        this.replaceString = displayString;\n+    }\n+\n+    public AssistInfo(final String displayString, final Image image) {\n+        this.displayString = displayString;\n+        this.replaceString = displayString;\n+        this.image = image;\n+    }\n+\n+    public AssistInfo(final String replaceString, final String displayString) {\n+        this.displayString = displayString;\n+        this.replaceString = replaceString;\n+    }\n+\n+    public AssistInfo(final String replaceString, final String displayString, final Image image) {\n+        this.displayString = displayString;\n+        this.replaceString = replaceString;\n+        this.image = image;\n+    }\n+\n+    public AssistInfo(final String replaceString, final String displayString, final Image image,\n+            final String additionalInfo) {\n+        this.displayString = displayString;\n+        this.replaceString = replaceString;\n+        this.image = image;\n+        this.additionalInfo = additionalInfo;\n+    }\n+\n+    public String getDisplayString() {\n+        return displayString;\n+    }\n+\n+    public String getReplaceString() {\n+        return replaceString;\n+    }\n+\n+    public String getAdditionalInfo() {\n+        return additionalInfo;\n+    }\n+\n+    public Image getImage() {\n+        return this.image;\n+    }\n+\n+    public ICompletionProposal toCompletionProposal(final int offset, final String matchString,\n+            final Image defaultImage) {\n+        return new CompletionProposal(\n+                getReplaceString(),\n+                offset - matchString.length(), matchString.length(),\n+                getReplaceString().length(),\n+                getImage() == null ? defaultImage : getImage(),\n+                getDisplayString(), null, getAdditionalInfo());\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (obj instanceof AssistInfo) {\n+            AssistInfo info = (AssistInfo) obj;\n+            if (compareString(info.getReplaceString(), getReplaceString())\n+                && compareString(info.getDisplayString(), getDisplayString())\n+                && compareString(info.getAdditionalInfo(), getAdditionalInfo())) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    @Override public int hashCode() {\n+        return (this.getReplaceString().hashCode()\n+            + this.getDisplayString().hashCode()\n+            + this.getAdditionalInfo().hashCode());\n+    }\n+\n+    public static boolean compareString(final String value1, final String value2) {\n+        if (value1 == null && value2 == null) {\n+            return true;\n+        }\n+        if (value1 != null && value1.equals(value2)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+}"},{"sha":"dcae15a857a5f146ee7c10cb248161026e193548","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/AttributeInfo.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FAttributeInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FAttributeInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FAttributeInfo.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class AttributeInfo {\n+\n+    private String attributeName;\n+    private boolean hasValue;\n+    private boolean required = false;\n+    private String description;\n+    private List<String> values = new ArrayList<String>();\n+    public enum AttributeTypeOptions {\n+        NONE, ALIGN, VALIGN, INPUT_TYPE, CSS, FILE, ID, IDREF, IDREFS, TARGET\n+    }\n+    private AttributeTypeOptions attributeType;\n+\n+    public AttributeInfo(final String attributeName, final boolean hasValue) {\n+        this(attributeName, hasValue, AttributeTypeOptions.NONE);\n+    }\n+\n+    public AttributeInfo(final String attributeName, final boolean hasValue,\n+            final AttributeTypeOptions attributeType) {\n+        this(attributeName, hasValue, attributeType, false);\n+    }\n+\n+    public AttributeInfo(final String attributeName, final boolean hasValue,\n+            final AttributeTypeOptions attributeType, final boolean required) {\n+        this.attributeName = attributeName;\n+        this.hasValue      = hasValue;\n+        this.attributeType = attributeType;\n+        this.required      = required;\n+    }\n+\n+    public AttributeTypeOptions getAttributeType() {\n+        return this.attributeType;\n+    }\n+\n+    public void setAttributeType(final AttributeTypeOptions type) {\n+        this.attributeType = type;\n+    }\n+\n+    public String getAttributeName() {\n+        return this.attributeName;\n+    }\n+\n+    public boolean hasValue() {\n+        return this.hasValue;\n+    }\n+\n+    public boolean isRequired() {\n+        return this.required;\n+    }\n+\n+    public void addValue(final String value) {\n+        this.values.add(value);\n+    }\n+\n+    public String[] getValues() {\n+        return this.values.toArray(new String[this.values.size()]);\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(final String description) {\n+        this.description = description;\n+    }\n+}"},{"sha":"0306827c97379776e9f15b773f5bfcfae14dfb7a","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/CSSBlockScanner.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FCSSBlockScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FCSSBlockScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FCSSBlockScanner.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.eclipse.jface.text.TextAttribute;\n+import org.eclipse.jface.text.rules.IRule;\n+import org.eclipse.jface.text.rules.RuleBasedScanner;\n+import org.eclipse.jface.text.rules.Token;\n+import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.widgets.Display;\n+\n+public class CSSBlockScanner extends RuleBasedScanner {\n+\n+    public CSSBlockScanner() {\n+        List<IRule> rules = createRules();\n+        setRules(rules.toArray(new IRule[rules.size()]));\n+    }\n+\n+    protected List<IRule> createRules() {\n+        List<IRule> rules = new ArrayList<IRule>();\n+        rules.add(new CSSRule(\n+                new Token(new TextAttribute(new Color(Display.getCurrent(), \n+                        IHTMLColorConstants.CSS_PROP))),\n+                new Token(new TextAttribute(new Color(Display.getCurrent(), \n+                        IHTMLColorConstants.CSS_VALUE)))));\n+        return rules;\n+    }\n+\n+}"},{"sha":"f8c79cdbfc7b9cfd9ed0819f0c209dd22a64582c","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/CSSRule.java","status":"added","additions":110,"deletions":0,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FCSSRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FCSSRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FCSSRule.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.rules.ICharacterScanner;\n+import org.eclipse.jface.text.rules.IPredicateRule;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.Token;\n+\n+public class CSSRule implements IPredicateRule {\n+\n+    private IToken propToken;\n+    private IToken valueToken;\n+\n+    public CSSRule(final IToken propToken, final IToken valueToken) {\n+        this.propToken = propToken;\n+        this.valueToken = valueToken;\n+    }\n+\n+    private boolean sequenceDetected(final ICharacterScanner scanner, final char[] sequence,\n+            final boolean eofAllowed) {\n+        for (int i = 1; i < sequence.length; i++) {\n+            int c = scanner.read();\n+            if (c == ICharacterScanner.EOF && eofAllowed) {\n+                return true;\n+            } else if (c != sequence[i]) {\n+                // Non-matching character detected, rewind the scanner back to the start.\n+                // Do not unread the first character.\n+                scanner.unread();\n+                for (int j = i - 1; j > 0; j--) {\n+                    scanner.unread();\n+                }\n+                return false;\n+            }\n+        }\n+\n+        return true;\n+    }\n+\n+    private IToken getToken(final ICharacterScanner scanner) {\n+        int c;\n+        char[][] delimiters = scanner.getLegalLineDelimiters();\n+        while ((c = scanner.read()) != ICharacterScanner.EOF) {\n+            if (c == ':') {\n+                return propToken;\n+            } else if (c == ';') {\n+                return valueToken;\n+            } else {\n+                // Check for end of line since it can be used to terminate the pattern.\n+                for (int i = 0; i < delimiters.length; i++) {\n+                    if (c == delimiters[i][0] && sequenceDetected(scanner, delimiters[i], true)) {\n+                        return null;\n+                    }\n+                }\n+            }\n+        }\n+        scanner.unread();\n+        return null;\n+    }\n+\n+    public IToken evaluate(final ICharacterScanner scanner, final boolean resume) {\n+        return doEvaluate(scanner, resume);\n+    }\n+\n+    private IToken doEvaluate(final ICharacterScanner scanner, final boolean resume) {\n+        if (resume) {\n+            IToken token = getToken(scanner);\n+            if (token != null) {\n+                return token;\n+            }\n+        } else {\n+\n+            int c = scanner.read();\n+            if (c != ' ' && c != '\\t' && c != '\\r' && c != '\\n') {\n+                IToken token = getToken(scanner);\n+                if (token != null) {\n+                    return token;\n+                }\n+            }\n+        }\n+\n+        scanner.unread();\n+        return Token.UNDEFINED;\n+    }\n+\n+\n+    public IToken getSuccessToken() {\n+        return null;\n+    }\n+\n+    public IToken evaluate(final ICharacterScanner scanner) {\n+        return evaluate(scanner, false);\n+    }\n+}"},{"sha":"0695a74f2a9064da792b62970a813f10d6f66afe","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/DocTypeRule.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FDocTypeRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FDocTypeRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FDocTypeRule.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.rules.ICharacterScanner;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.MultiLineRule;\n+\n+public class DocTypeRule extends MultiLineRule {\n+\n+    public DocTypeRule(final IToken token) {\n+        super(\"<!DOCTYPE\", \">\", token);\n+    }\n+\n+    protected boolean endSequenceDetected(final ICharacterScanner scanner) {\n+        int c;\n+        boolean quoted = false;\n+        char[][] delimiters = scanner.getLegalLineDelimiters();\n+        boolean previousWasEscapeCharacter = false;\n+        while ((c = scanner.read()) != ICharacterScanner.EOF) {\n+            if (c == fEscapeCharacter) {\n+                // Skip the escaped character.\n+                scanner.read();\n+            } else if (c == '[') {\n+                quoted = true;\n+            } else if (c == ']') {\n+                quoted = false;\n+            } else if (fEndSequence.length > 0 && c == fEndSequence[0]\n+                    && !quoted && sequenceDetected(scanner, fEndSequence, true)) {\n+                return true;\n+            } else if (fBreaksOnEOL) {\n+                // Check for end of line since it can be used to terminate the pattern.\n+                for (int i = 0; i < delimiters.length; i++) {\n+                    if (c == delimiters[i][0] && sequenceDetected(scanner, delimiters[i], true)) {\n+                        if (!fEscapeContinuesLine || !previousWasEscapeCharacter) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+            previousWasEscapeCharacter = (c == fEscapeCharacter);\n+        }\n+        if (fBreaksOnEOF) {\n+            return true;\n+        }\n+        scanner.unread();\n+        return false;\n+    }\n+}"},{"sha":"3c7842bedbe25e6df471161f10f8b3f40beb8a00","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLAutoEditStrategy.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLAutoEditStrategy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLAutoEditStrategy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLAutoEditStrategy.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.jface.text.BadLocationException;\n+import org.eclipse.jface.text.DefaultIndentLineAutoEditStrategy;\n+import org.eclipse.jface.text.DocumentCommand;\n+import org.eclipse.jface.text.IDocument;\n+\n+public class HTMLAutoEditStrategy extends DefaultIndentLineAutoEditStrategy {\n+\n+    private String charset = System.getProperty(\"file.encoding\");\n+    protected boolean enable;\n+\n+    public HTMLAutoEditStrategy() {\n+        this.enable = true;\n+    }\n+\n+    public void setEnabled(final boolean enable) {\n+        this.enable = enable;\n+    }\n+\n+    public void setFile(final IFile file) {\n+        try {\n+            this.charset = file.getCharset();\n+        } catch (CoreException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void customizeDocumentCommand(final IDocument d, final DocumentCommand c) {\n+        if (enable) {\n+            try {\n+                if (\"-\".equals(c.text) && c.offset >= 3 && d.get(c.offset - 3, 3).equals(\"<!-\")) {\n+                    c.text = \"-  -->\";\n+                    c.shiftsCaret = false;\n+                    c.caretOffset = c.offset + 2;\n+                    c.doit = false;\n+                    return;\n+                }\n+                if (\"[\".equals(c.text) && c.offset >= 2 && d.get(c.offset - 2, 2).equals(\"<!\")) {\n+                    c.text = \"[CDATA[]]>\";\n+                    c.shiftsCaret = false;\n+                    c.caretOffset = c.offset + 7;\n+                    c.doit = false;\n+                    return;\n+                }\n+                if (\"l\".equals(c.text) && c.offset >= 4 && d.get(c.offset - 4, 4).equals(\"<?xm\")) {\n+                    c.text = \"l version = \\\"1.0\\\" encoding = \\\"\" + charset + \"\\\"?>\";\n+                    return;\n+                }\n+            } catch (final BadLocationException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        super.customizeDocumentCommand(d, c);\n+    }\n+\n+}"},{"sha":"1eefd680b210eb870248f6b0ea3393fc9f6f2437","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLCompletionProcessor.java","status":"added","additions":331,"deletions":0,"changes":331,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLCompletionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLCompletionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLCompletionProcessor.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,331 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Stack;\n+import org.eclipse.jface.text.ITextViewer;\n+import org.eclipse.jface.text.contentassist.CompletionProposal;\n+import org.eclipse.jface.text.contentassist.ContextInformation;\n+import org.eclipse.jface.text.contentassist.ContextInformationValidator;\n+import org.eclipse.jface.text.contentassist.ICompletionProposal;\n+import org.eclipse.jface.text.contentassist.IContextInformation;\n+import org.eclipse.jface.text.contentassist.IContextInformationValidator;\n+\n+public class HTMLCompletionProcessor extends HTMLTemplateAssistProcessor {\n+\n+    private int offset;\n+    private boolean xhtmlMode = false;\n+    private char[] chars = {};\n+    private boolean assistCloseTag = true;\n+    protected String[] getLastWord(final String text) {\n+        StringBuilder sb = new StringBuilder();\n+        Stack<String> stack = new Stack<String>();\n+        String word    = \"\";\n+        String prevTag = \"\";\n+        String lastTag = \"\";\n+        String attr    = \"\";\n+        String temp1   = \"\"; // temporary\n+        String temp2   = \"\"; // temporary\n+        for (int i = 0; i < text.length(); i++) {\n+            char c = text.charAt(i);\n+            // skip scriptlet\n+            if (c == '<' && text.length() > i + 1 && text.charAt(i + 1) == '%') {\n+                i = text.indexOf(\"%>\", i + 2);\n+                if (i == -1) {\n+                    i = text.length();\n+                }\n+                continue;\n+            }\n+            // skip XML declaration\n+            if (c == '<' && text.length() > i + 1 && text.charAt(i + 1) == '?') {\n+                i = text.indexOf(\"?>\", i + 2);\n+                if (i == -1) {\n+                    i = text.length();\n+                }\n+                continue;\n+            }\n+\n+            if (isDelimiter(c)) {\n+                temp1 = sb.toString();\n+\n+                // skip whitespaces in the attribute value\n+                if (temp1.length() > 1\n+                        && ((temp1.startsWith(\"\\\"\") && !temp1.endsWith(\"\\\"\") && c != '\"')\n+                        || (temp1.startsWith(\"'\") && !temp1.endsWith(\"'\") && c != '\\''))) {\n+                    sb.append(c);\n+                    continue;\n+                }\n+                if (temp1.length() == 1 && ((temp1.equals(\"\\\"\") || (temp1.equals(\"'\"))))) {\n+                    sb.append(c);\n+                    continue;\n+                }\n+\n+                if (!temp1.equals(\"\")) {\n+                    temp2 = temp1;\n+                    if (temp2.endsWith(\"=\") && !prevTag.equals(\"\") && !temp2.equals(\"=\")) {\n+                        attr = temp2.substring(0, temp2.length() - 1);\n+                    }\n+                }\n+                if (temp1.startsWith(\"<\") && !temp1.startsWith(\"</\") && !temp1.startsWith(\"<!\")) {\n+                    prevTag = temp1.substring(1);\n+                    if (!temp1.endsWith(\"/\")) {\n+                        stack.push(prevTag);\n+                    }\n+                } else if (temp1.startsWith(\"</\") && stack.size() != 0) {\n+                    stack.pop();\n+                } else if ((!temp1.startsWith(\"\\\"\") && !temp1.startsWith(\"'\"))\n+                        && temp1.endsWith(\"/\") && stack.size() != 0) {\n+                    stack.pop();\n+                }\n+                sb.setLength(0);\n+\n+                if (c == '<') {\n+                    sb.append(c);\n+                } else if (c == '\"' || c == '\\'') {\n+                    if (temp1.startsWith(\"\\\"\") || temp1.startsWith(\"'\")) {\n+                        sb.append(temp1);\n+                    }\n+                    sb.append(c);\n+                } else if (c == '>') {\n+                    prevTag = \"\";\n+                    attr    = \"\";\n+                }\n+            } else {\n+                if (c == '=' && !prevTag.equals(\"\")) {\n+                    attr = temp2.trim();\n+                }\n+                temp1 = sb.toString();\n+                if (temp1.length() > 1\n+                    && (temp1.startsWith(\"\\\"\") && temp1.endsWith(\"\\\"\"))\n+                    || (temp1.startsWith(\"'\") && temp1.endsWith(\"'\"))) {\n+                    sb.setLength(0);\n+                }\n+                sb.append(c);\n+            }\n+        }\n+\n+        if (stack.size() != 0) {\n+            lastTag = (String) stack.pop();\n+        }\n+        // Hmm... it's not perfect...\n+        if (attr.endsWith(\"=\")) {\n+            attr = attr.substring(0, attr.length() - 1);\n+        }\n+        word = sb.toString();\n+\n+        return new String[]{word, prevTag, lastTag, attr};\n+    }\n+\n+    //Tests a character is delimiter or not delimiter.\n+    protected boolean isDelimiter(final char c) {\n+        return (c == ' ' || c == '(' || c == ')' || c == ',' //|| c == '.'\n+                || c == ';' || c == '\\n' || c == '\\r' || c == '\\t' || c == '+'\n+                || c == '>' || c == '<' || c == '*' || c == '^' //|| c == '{'\n+                //|| c == '}'\n+                || c == '[' || c == ']' || c == '\"' || c == '\\'');\n+    }\n+\n+    protected List<TagInfo> getTagList() {\n+        return TagDefinition.getTagInfoAsList();\n+    }\n+\n+    protected TagInfo getTagInfo(final String name) {\n+        List<TagInfo> tagList = TagDefinition.getTagInfoAsList();\n+        for (int i = 0; i < tagList.size(); i++) {\n+            TagInfo info = (TagInfo) tagList.get(i);\n+            if (info.getTagName().equals(name)) {\n+                return info;\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    public ICompletionProposal[] computeCompletionProposals(final ITextViewer viewer,\n+            final int documentOffset) {\n+\n+        String   text = viewer.getDocument().get().substring(0, documentOffset);\n+        String[] dim  = getLastWord(text);\n+        String   word = dim[0].toLowerCase();\n+        String   prev = dim[1].toLowerCase();\n+        String   last = dim[2];\n+\n+        this.offset = documentOffset;\n+\n+        List<ICompletionProposal> list = new ArrayList<ICompletionProposal>();\n+        List<TagInfo> tagList = getTagList();\n+\n+        // attribute value\n+        if (word.startsWith(\"<\") && !word.equals(\"</\")) {\n+\n+            TagInfo parent = getTagInfo(last);\n+            //tagList = new ArrayList < TagInfo>();\n+            if (parent != null) {\n+                String[] childNames = parent.getChildTagNames();\n+                for (int i = 0; i < childNames.length; i++) {\n+                    tagList.add(getTagInfo(childNames[i]));\n+                }\n+\n+            }\n+            for (int i = 0; i < tagList.size(); i++) {\n+                TagInfo tagInfo = (TagInfo) tagList.get(i);\n+                if (tagInfo instanceof TextInfo) {\n+                    TextInfo textInfo = (TextInfo) tagInfo;\n+                    if ((textInfo.getText().toLowerCase()).indexOf(word) == 0) {\n+                        list.add(new CompletionProposal(\n+                                textInfo.getText(), documentOffset - word.length(),\n+                                word.length(), textInfo.getPosition()));\n+                    }\n+                    continue;\n+                }\n+                String tagName = tagInfo.getTagName();\n+                if ((\"<\" + tagInfo.getTagName().toLowerCase()).indexOf(word) == 0) {\n+                    String assistKeyword = tagName;\n+                    int position = 0;\n+                    // required attributes\n+                    AttributeInfo[] requierAttrs = tagInfo.getRequiredAttributeInfo();\n+                    for (int j = 0; j < requierAttrs.length; j++) {\n+                        assistKeyword = assistKeyword + \" \" + requierAttrs[j].getAttributeName();\n+                        if (requierAttrs[j].hasValue()) {\n+                            assistKeyword = assistKeyword + \"=\\\"\\\"\";\n+                            if (j == 0) {\n+                                position = tagName.length() + requierAttrs[j].getAttributeName().length() + 3;\n+                            }\n+                        }\n+                    }\n+                    if (tagInfo.hasBody()) {\n+                        assistKeyword = assistKeyword + \">\";\n+                        if (true) {\n+                            if (position == 0) {\n+                                position = assistKeyword.length();\n+                            }\n+                            assistKeyword = assistKeyword + \"</\" + tagName + \">\";\n+                        }\n+                    } else {\n+                        if (tagInfo.isEmptyTag() && !xhtmlMode) {\n+                            assistKeyword += \">\";\n+                        } else {\n+                            assistKeyword += \"/>\";\n+                        }\n+                    }\n+                    if (position == 0) {\n+                        position = assistKeyword.length();\n+                    }\n+                    try {\n+                        list.add(new CompletionProposal(\n+                                assistKeyword, documentOffset - word.length() + 1,\n+                                word.length() - 1, position));\n+                    } catch (Exception ex) {\n+                        ex.printStackTrace();\n+                    }\n+                }\n+            }\n+            // attribute\n+        } else if (!prev.equals(\"\")) {\n+            String tagName = prev;\n+            TagInfo tagInfo = getTagInfo(tagName);\n+            if (tagInfo != null) {\n+                AttributeInfo[] attrList = tagInfo.getAttributeInfo();\n+                for (int j = 0; j < attrList.length; j++) {\n+                    if (attrList[j].getAttributeName().toLowerCase().indexOf(word) == 0) {\n+                        String assistKeyword = null;\n+                        int position = 0;\n+                        if (attrList[j].hasValue()) {\n+                            assistKeyword = attrList[j].getAttributeName() + \"=\\\"\\\"\";\n+                            position = 2;\n+                        } else {\n+                            assistKeyword = attrList[j].getAttributeName();\n+                            position = 0;\n+                        }\n+                        list.add(new CompletionProposal(\n+                                assistKeyword, documentOffset - word.length(), word.length(),\n+                                attrList[j].getAttributeName().length() + position));\n+                    }\n+                }\n+            }\n+            // close tag\n+        } else if (!last.equals(\"\")) {\n+            TagInfo info = getTagInfo(last);\n+            if (info == null || xhtmlMode || info.hasBody() || !info.isEmptyTag()) {\n+                String assistKeyword = \"</\" + last + \">\";\n+                int length = 0;\n+                if (word.equals(\"</\")) {\n+                    length = 2;\n+                }\n+                list.add(new CompletionProposal(\n+                        assistKeyword, documentOffset - length, length,\n+                        assistKeyword.length()));\n+            }\n+        }\n+\n+        sortCompilationProposal(list);\n+\n+        ICompletionProposal[] templates = super.computeCompletionProposals(viewer, documentOffset);\n+        for (int i = 0; i < templates.length; i++) {\n+            list.add(templates[i]);\n+        }\n+\n+        ICompletionProposal[] prop = list.toArray(new ICompletionProposal[list.size()]);\n+        return prop;\n+    }\n+\n+    @Override public IContextInformation[] computeContextInformation(final ITextViewer viewer,\n+            final int documentOffset) {\n+        ContextInformation[] info = new ContextInformation[0];\n+        return info;\n+    }\n+\n+    @Override public char[] getCompletionProposalAutoActivationCharacters() {\n+        return chars;\n+    }\n+\n+    @Override public char[] getContextInformationAutoActivationCharacters() {\n+        return chars;\n+    }\n+\n+    @Override public IContextInformationValidator getContextInformationValidator() {\n+        return new ContextInformationValidator(this);\n+    }\n+\n+    @Override public String getErrorMessage() {\n+        return \"Error\";\n+    }\n+\n+    public static void sortCompilationProposal(final List<ICompletionProposal> prop) {\n+        Collections.sort(prop, new Comparator<ICompletionProposal>() {\n+            public int compare(final ICompletionProposal o1, final ICompletionProposal o2) {\n+                return o1.getDisplayString().compareTo(o2.getDisplayString());\n+            }\n+        });\n+    }\n+\n+    public void setAutoAssistChars(final char[] chars) {\n+        if (chars != null) {\n+            this.chars = chars;\n+        }\n+    }\n+\n+    public void setAssistCloseTag(final boolean assistCloseTag) {\n+        this.assistCloseTag = assistCloseTag;\n+    }\n+}"},{"sha":"c355623f43f9fb40489e614986719fa65c74d2cb","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLContextType.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLContextType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLContextType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLContextType.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.apache.syncope.ide.eclipse.plugin.Activator;\n+import org.eclipse.jface.text.templates.GlobalTemplateVariables;\n+import org.eclipse.jface.text.templates.TemplateContextType;\n+\n+public class HTMLContextType extends TemplateContextType {\n+\n+    public static final String CONTEXT_TYPE \n+        = Activator.PLUGIN_ID + \".templateContextType.html\";\n+\n+    public HTMLContextType() {\n+        addResolver(new GlobalTemplateVariables.Cursor());\n+        addResolver(new GlobalTemplateVariables.WordSelection());\n+        addResolver(new GlobalTemplateVariables.LineSelection());\n+    }\n+\n+}"},{"sha":"225691597265d5856d10ff7cc316067d20ad84ea","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLFileDocumentProvider.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLFileDocumentProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLFileDocumentProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLFileDocumentProvider.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.jface.text.IDocument;\n+import org.eclipse.jface.text.IDocumentPartitioner;\n+import org.eclipse.jface.text.rules.FastPartitioner;\n+import org.eclipse.ui.editors.text.FileDocumentProvider;\n+\n+public class HTMLFileDocumentProvider extends FileDocumentProvider {\n+\n+    public IDocument createDocument(final Object element) throws CoreException {\n+        IDocument document = super.createDocument(element);\n+        if (document != null) {\n+            IDocumentPartitioner partitioner =\n+                new FastPartitioner(\n+                        new HTMLPartitionScanner(),\n+                        new String[]{\n+                                HTMLPartitionScanner.HTML_TAG,\n+                                HTMLPartitionScanner.HTML_COMMENT,\n+                                HTMLPartitionScanner.HTML_SCRIPT,\n+                                HTMLPartitionScanner.HTML_DOCTYPE,\n+                                HTMLPartitionScanner.HTML_DIRECTIVE,\n+                                HTMLPartitionScanner.JAVASCRIPT,\n+                                HTMLPartitionScanner.HTML_CSS,\n+                                HTMLPartitionScanner.SYNCOPE_TAG});\n+            partitioner.connect(document);\n+            document.setDocumentPartitioner(partitioner);\n+        }\n+        return document;\n+    }\n+\n+}"},{"sha":"ac52527e838f8605339f5272a8d1d29f77a4f447","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLPartitionScanner.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLPartitionScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLPartitionScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLPartitionScanner.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.eclipse.jface.text.rules.EndOfLineRule;\n+import org.eclipse.jface.text.rules.IPredicateRule;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.MultiLineRule;\n+import org.eclipse.jface.text.rules.RuleBasedPartitionScanner;\n+import org.eclipse.jface.text.rules.Token;\n+\n+public class HTMLPartitionScanner extends RuleBasedPartitionScanner {\n+\n+    public static final String HTML_DEFAULT   = \"__html_default\";\n+    public static final String HTML_COMMENT   = \"__html_comment\";\n+    public static final String HTML_TAG       = \"__html_tag\";\n+    public static final String HTML_SCRIPT    = \"__html_script\";\n+    public static final String HTML_DOCTYPE   = \"__html_doctype\";\n+    public static final String HTML_DIRECTIVE = \"__html_directive\";\n+    public static final String JAVASCRIPT     = \"__html_javascript\";\n+    public static final String HTML_CSS       = \"__html_css\";\n+    public static final String PREFIX_TAG     = \"__prefix_tag\";\n+    public static final String SYNCOPE_TAG    = \"__syncope_tag\";\n+\n+    public HTMLPartitionScanner() {\n+\n+        IToken htmlComment   = new Token(HTML_COMMENT);\n+        IToken htmlTag       = new Token(HTML_TAG);\n+        IToken prefixTag     = new Token(PREFIX_TAG);\n+        IToken htmlScript    = new Token(HTML_SCRIPT);\n+        IToken htmlDoctype   = new Token(HTML_DOCTYPE);\n+        IToken htmlDirective = new Token(HTML_DIRECTIVE);\n+        IToken javaScript    = new Token(JAVASCRIPT);\n+        IToken htmlCss       = new Token(HTML_CSS);\n+        IToken syncopeTag    = new Token(SYNCOPE_TAG);\n+\n+        List<IPredicateRule> rules = new ArrayList<IPredicateRule>();\n+\n+        rules.add(new MultiLineRule(\" <!--\", \"-->\", htmlComment));\n+        rules.add(new MultiLineRule(\" <%--\", \"--%>\", htmlComment));\n+        rules.add(new DocTypeRule(htmlDoctype));\n+        rules.add(new MultiLineRule(\" <%@\", \"%>\", htmlDirective));\n+        rules.add(new MultiLineRule(\" <%\", \"%>\", htmlScript));\n+        rules.add(new MultiLineRule(\" <![CDATA[\", \"]]>\", htmlDoctype));\n+        rules.add(new MultiLineRule(\" <?xml\", \"?>\", htmlDoctype));\n+        rules.add(new MultiLineRule(\" <script\", \" </script>\", javaScript));\n+        rules.add(new MultiLineRule(\" <style\", \" </style>\", htmlCss));\n+        //rules.add(new MultiLineRule(\"${\", \"}\", syncopeTag));\n+        rules.add(new EndOfLineRule(\"$$\", syncopeTag));\n+        rules.add(new TagRule(prefixTag, TagRule.PREFIX));\n+        rules.add(new TagRule(htmlTag, TagRule.NO_PREFIX));\n+        rules.add(new SyncopeTagRule(syncopeTag, SyncopeTagRule.PREFIX));\n+        rules.add(new SyncopeTagRule(syncopeTag, SyncopeTagRule.NO_PREFIX));\n+   \n+        setPredicateRules(rules.toArray(new IPredicateRule[rules.size()]));\n+    }\n+}"},{"sha":"6444ddb6cb08b87a5944e628e5201fc0cf1cadec","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLScanner.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLScanner.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.rules.IRule;\n+import org.eclipse.jface.text.rules.RuleBasedScanner;\n+import org.eclipse.jface.text.rules.WhitespaceRule;\n+\n+public class HTMLScanner extends RuleBasedScanner {\n+\n+    public HTMLScanner() {\n+\n+        IRule[] rules = new IRule[1];\n+        rules[0] = new WhitespaceRule(new HTMLWhitespaceDetector());\n+        setRules(rules);\n+    }\n+}"},{"sha":"9a6f15503993d93f60e980b74ca9ceee5858501e","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLTagDamagerRepairer.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTagDamagerRepairer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTagDamagerRepairer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTagDamagerRepairer.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.DocumentEvent;\n+import org.eclipse.jface.text.IRegion;\n+import org.eclipse.jface.text.ITypedRegion;\n+import org.eclipse.jface.text.Region;\n+import org.eclipse.jface.text.rules.DefaultDamagerRepairer;\n+import org.eclipse.jface.text.rules.ITokenScanner;\n+\n+public class HTMLTagDamagerRepairer extends DefaultDamagerRepairer {\n+\n+    public HTMLTagDamagerRepairer(final ITokenScanner scanner) {\n+        super(scanner);\n+    }\n+\n+    public IRegion getDamageRegion(final ITypedRegion partition, final DocumentEvent e,\n+            final boolean documentPartitioningChanged) {\n+        if (!documentPartitioningChanged) {\n+            String source = fDocument.get();\n+            int start = source.substring(0, e.getOffset()).lastIndexOf('<');\n+            if (start == -1) {\n+                start = 0;\n+            }\n+            int end = source.indexOf('>', e.getOffset());\n+            int nextEnd = source.indexOf('>', end + 1);\n+            if (nextEnd >= 0 && nextEnd > end) {\n+                end = nextEnd;\n+            }\n+            int end2 = e.getOffset() + (e.getText() == null ? e.getLength() : e.getText().length());\n+            if (end == -1) {\n+                end = source.length();\n+            } else if (end2 > end) {\n+                end = end2;\n+            } else {\n+                end++;\n+            }\n+\n+            return new Region(start, end - start);\n+        }\n+        return partition;\n+    }\n+\n+}"},{"sha":"e40d35b79a5e0c184be052ae972483a1dfbde0eb","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLTagScanner.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTagScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTagScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTagScanner.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.TextAttribute;\n+import org.eclipse.jface.text.rules.IRule;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.MultiLineRule;\n+import org.eclipse.jface.text.rules.RuleBasedScanner;\n+import org.eclipse.jface.text.rules.Token;\n+import org.eclipse.jface.text.rules.WhitespaceRule;\n+import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.graphics.RGB;\n+import org.eclipse.swt.widgets.Display;\n+\n+public class HTMLTagScanner extends RuleBasedScanner {\n+\n+    public HTMLTagScanner(final boolean bold) {\n+        IToken string = null;\n+        if (bold) {\n+            RGB rgb = IHTMLColorConstants.TAGLIB_ATTR;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            string = new Token(new TextAttribute(color));\n+        } else {\n+            RGB rgb = IHTMLColorConstants.STRING;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            string = new Token(new TextAttribute(color));\n+        }\n+        IRule[] rules = new IRule[3];\n+        rules[0] = new MultiLineRule(\"\\\"\" , \"\\\"\" , string, '\\\\');\n+        rules[1] = new MultiLineRule(\"'\"  , \"'\"  , string, '\\\\');\n+        rules[2] = new WhitespaceRule(new HTMLWhitespaceDetector());\n+        setRules(rules);\n+    }\n+}"},{"sha":"164c44cfac19bd1d91fc4f4fc08b230363959ce4","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLTemplateAssistProcessor.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTemplateAssistProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTemplateAssistProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTemplateAssistProcessor.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.eclipse.jface.text.IRegion;\n+import org.eclipse.jface.text.ITextSelection;\n+import org.eclipse.jface.text.ITextViewer;\n+import org.eclipse.jface.text.Region;\n+import org.eclipse.jface.text.contentassist.ICompletionProposal;\n+import org.eclipse.jface.text.templates.Template;\n+import org.eclipse.jface.text.templates.TemplateCompletionProcessor;\n+import org.eclipse.jface.text.templates.TemplateContext;\n+import org.eclipse.jface.text.templates.TemplateContextType;\n+import org.eclipse.jface.text.templates.TemplateException;\n+import org.eclipse.swt.graphics.Image;\n+\n+public class HTMLTemplateAssistProcessor extends TemplateCompletionProcessor {\n+\n+    protected Template[] getTemplates(final String contextTypeId) {\n+        HTMLTemplateManager manager = HTMLTemplateManager.getInstance();\n+        return manager.getTemplateStore().getTemplates();\n+    }\n+\n+    protected TemplateContextType getContextType(final ITextViewer viewer, final IRegion region) {\n+        HTMLTemplateManager manager = HTMLTemplateManager.getInstance();\n+        return manager.getContextTypeRegistry().getContextType(HTMLContextType.CONTEXT_TYPE);\n+    }\n+\n+    public ICompletionProposal[] computeCompletionProposals(final ITextViewer viewer, final int offsetinp) {\n+\n+        int offset = offsetinp;\n+        ITextSelection selection = (ITextSelection) viewer.getSelectionProvider().getSelection();\n+\n+        // adjust offset to end of normalized selection\n+        if (selection.getOffset() == offset) {\n+            offset = selection.getOffset() + selection.getLength();\n+        }\n+\n+        String prefix = extractPrefix(viewer, offset);\n+        Region region = new Region(offset - prefix.length(), prefix.length());\n+        TemplateContext context = createContext(viewer, region);\n+        if (context == null) {\n+            return new ICompletionProposal[0];\n+        }\n+        context.setVariable(\"selection\", selection.getText());\n+        Template[] templates = getTemplates(context.getContextType().getId());\n+        List<ICompletionProposal> matches = new ArrayList<ICompletionProposal>();\n+        for (int i = 0; i < templates.length; i++) {\n+            Template template = templates[i];\n+            try {\n+                context.getContextType().validate(template.getPattern());\n+            } catch (final TemplateException e) {\n+                continue;\n+            }\n+            if (template.getName().startsWith(prefix)\n+                && template.matches(prefix, context.getContextType().getId())) {\n+                matches.add(createProposal(template, context, (IRegion) region, getRelevance(template, prefix)));\n+            }\n+        }\n+        return matches.toArray(new ICompletionProposal[matches.size()]);\n+    }\n+\n+    @Override\n+    protected Image getImage(final Template arg0) {\n+        return null;\n+    }\n+\n+}"},{"sha":"86bcda89028ee5a347598cdf554b43db3ccdee01","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLTemplateManager.java","status":"added","additions":68,"deletions":0,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTemplateManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTemplateManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLTemplateManager.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.io.IOException;\n+\n+import org.apache.syncope.ide.eclipse.plugin.Activator;\n+import org.eclipse.jface.text.templates.ContextTypeRegistry;\n+import org.eclipse.jface.text.templates.persistence.TemplateStore;\n+import org.eclipse.ui.editors.text.templates.ContributionContextTypeRegistry;\n+import org.eclipse.ui.editors.text.templates.ContributionTemplateStore;\n+\n+public final class HTMLTemplateManager {\n+\n+    private static final String CUSTOM_TEMPLATES_KEY\n+        = Activator.PLUGIN_ID + \".customtemplates\";\n+    private static HTMLTemplateManager INSTANCE;\n+    private TemplateStore fStore;\n+    private ContributionContextTypeRegistry fRegistry;\n+\n+    private HTMLTemplateManager() {\n+    }\n+\n+    public static HTMLTemplateManager getInstance() {\n+        if (INSTANCE == null) {\n+            INSTANCE = new HTMLTemplateManager();\n+        }\n+        return INSTANCE;\n+    }\n+\n+    public TemplateStore getTemplateStore() {\n+        if (fStore == null) {\n+            fStore = new ContributionTemplateStore(getContextTypeRegistry(),\n+                    Activator.getDefault().getPreferenceStore(), CUSTOM_TEMPLATES_KEY);\n+            try {\n+                fStore.load();\n+            } catch (final IOException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        return fStore;\n+    }\n+\n+    public ContextTypeRegistry getContextTypeRegistry() {\n+        if (fRegistry == null) {\n+            fRegistry = new ContributionContextTypeRegistry();\n+            fRegistry.addContextType(HTMLContextType.CONTEXT_TYPE);\n+        }\n+        return fRegistry;\n+    }\n+\n+}"},{"sha":"ac944bec9052ac8a8d732a7deb9b7eeb36caeefe","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/HTMLWhitespaceDetector.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLWhitespaceDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLWhitespaceDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FHTMLWhitespaceDetector.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.rules.IWhitespaceDetector;\n+\n+public class HTMLWhitespaceDetector implements IWhitespaceDetector {\n+    public boolean isWhitespace(final char c) {\n+        return (c == ' ' || c == '\\t' || c == '\\n' || c == '\\r');\n+    }\n+}"},{"sha":"4e8624a83bccd97ee648aacab92580ccf6cd7825","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/IHTMLColorConstants.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FIHTMLColorConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FIHTMLColorConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FIHTMLColorConstants.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.swt.graphics.RGB;\n+\n+/** Defines initial colors used in editors. */\n+public interface IHTMLColorConstants {\n+    RGB HTML_COMMENT = new RGB(128, 0, 0);\n+    RGB PROC_INSTR   = new RGB(128, 128, 128);\n+    RGB STRING       = new RGB(0, 128, 0);\n+    RGB DEFAULT      = new RGB(0, 0, 0);\n+    RGB TAG          = new RGB(0, 0, 128);\n+    RGB SCRIPT       = new RGB(255, 0, 0);\n+    RGB CSS_PROP     = new RGB(0, 0, 255);\n+    RGB CSS_COMMENT  = new RGB(128, 0, 0);\n+    RGB CSS_VALUE    = new RGB(0, 128, 0);\n+    RGB FOREGROUND   = new RGB(0, 0, 0);\n+    RGB BACKGROUND   = new RGB(255, 255, 255);\n+    RGB JAVA_COMMENT = new RGB(0, 128, 0);\n+    RGB JAVA_STRING  = new RGB(0, 0, 255);\n+    RGB JAVA_KEYWORD = new RGB(128, 0, 128);\n+    RGB TAGLIB       = new RGB(255, 0, 0);\n+    RGB TAGLIB_ATTR  = new RGB(128, 128, 0);\n+    RGB JSDOC        = new RGB(128, 128, 255);\n+}"},{"sha":"819a2936b84e072624ba4cc0c099e58185891751","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/InnerCSSScanner.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FInnerCSSScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FInnerCSSScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FInnerCSSScanner.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.eclipse.jface.text.TextAttribute;\n+import org.eclipse.jface.text.rules.IRule;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.MultiLineRule;\n+import org.eclipse.jface.text.rules.SingleLineRule;\n+import org.eclipse.jface.text.rules.Token;\n+import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.graphics.RGB;\n+import org.eclipse.swt.widgets.Display;\n+\n+public class InnerCSSScanner extends CSSBlockScanner {\n+\n+    public InnerCSSScanner() {\n+        super();\n+    }\n+\n+    @Override protected List<IRule> createRules() {\n+        RGB rgb = IHTMLColorConstants.TAGLIB;\n+        Color color = new Color(Display.getCurrent(), rgb);\n+        IToken tag = new Token(new TextAttribute(color));\n+        rgb = IHTMLColorConstants.CSS_COMMENT;\n+        color = new Color(Display.getCurrent(), rgb);\n+        IToken comment = new Token(new TextAttribute(color));\n+        List<IRule> rules = new ArrayList<IRule>();\n+        rules.add(new SingleLineRule(\" <style\", \">\", tag));\n+        rules.add(new SingleLineRule(\" </style\", \">\", tag));\n+        rules.add(new MultiLineRule(\"/*\", \"*/\", comment));\n+        rules.addAll(super.createRules());\n+        return rules;\n+    }\n+}"},{"sha":"e681eca753aed4811b0416111da8f9eccc0f551c","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/InnerJavaScriptScanner.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FInnerJavaScriptScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FInnerJavaScriptScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FInnerJavaScriptScanner.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.List;\n+\n+import org.eclipse.jface.text.TextAttribute;\n+import org.eclipse.jface.text.rules.IRule;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.MultiLineRule;\n+import org.eclipse.jface.text.rules.SingleLineRule;\n+import org.eclipse.jface.text.rules.Token;\n+import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.widgets.Display;\n+\n+public class InnerJavaScriptScanner extends JavaScriptScanner {\n+\n+    public InnerJavaScriptScanner() {\n+        super();\n+    }\n+\n+    @Override protected List<IRule> createRules() {\n+        IToken tag = new Token(new TextAttribute(new Color(Display.getCurrent(),\n+                IHTMLColorConstants.TAG)));\n+        IToken comment = new Token(new TextAttribute(new Color(Display.getCurrent(), \n+                IHTMLColorConstants.JAVA_COMMENT)));\n+        IToken jsdoc = new Token(new TextAttribute(new Color(Display.getCurrent(),\n+                IHTMLColorConstants.JSDOC)));\n+        List<IRule> rules = super.createRules();\n+        rules.add(new SingleLineRule(\" <script\", \">\", tag));\n+        rules.add(new SingleLineRule(\" </script\", \">\", tag));\n+        rules.add(new MultiLineRule(\"/**\", \"*/\", jsdoc));\n+        rules.add(new MultiLineRule(\"/*\", \"*/\", comment));\n+        return rules;\n+    }\n+\n+\n+}"},{"sha":"99cc481067158d86327bcaa3c0d5e050549724fc","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/JavaScriptDamagerRepairer.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaScriptDamagerRepairer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaScriptDamagerRepairer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaScriptDamagerRepairer.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.DocumentEvent;\n+import org.eclipse.jface.text.IRegion;\n+import org.eclipse.jface.text.ITypedRegion;\n+import org.eclipse.jface.text.Region;\n+import org.eclipse.jface.text.rules.DefaultDamagerRepairer;\n+import org.eclipse.jface.text.rules.ITokenScanner;\n+\n+public class JavaScriptDamagerRepairer extends DefaultDamagerRepairer {\n+\n+    public JavaScriptDamagerRepairer(final ITokenScanner scanner) {\n+        super(scanner);\n+    }\n+\n+    public IRegion getDamageRegion(final ITypedRegion partition, final DocumentEvent e,\n+            final boolean documentPartitioningChanged) {\n+        if (!documentPartitioningChanged) {\n+            String source = fDocument.get();\n+            int start = source.substring(0, e.getOffset()).lastIndexOf(\"/*\");\n+            if (start == -1) {\n+                start = 0;\n+            }\n+            int end = source.indexOf(\"*/\", e.getOffset());\n+            int end2 = e.getOffset() + (e.getText() == null ? e.getLength() : e.getText().length());\n+            if (end == -1) {\n+                end = source.length();\n+            } else if (end2 > end) {\n+                end = end2;\n+            } else {\n+                end++;\n+            }\n+\n+            return new Region(start, end - start);\n+        }\n+        return partition;\n+    }\n+\n+}"},{"sha":"921dc6890370330f2b39e20b0a7815a48fc3b3fa","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/JavaScriptScanner.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaScriptScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaScriptScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaScriptScanner.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.eclipse.jface.text.TextAttribute;\n+import org.eclipse.jface.text.rules.EndOfLineRule;\n+import org.eclipse.jface.text.rules.IRule;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.RuleBasedScanner;\n+import org.eclipse.jface.text.rules.SingleLineRule;\n+import org.eclipse.jface.text.rules.Token;\n+import org.eclipse.jface.text.rules.WordRule;\n+import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.widgets.Display;\n+\n+public class JavaScriptScanner extends RuleBasedScanner {\n+\n+    public static final String[] KEYWORDS = {\n+            \"abstract\",\n+            \"boolean\", \"break\", \"byte\",\n+            \"case\", \"catch\", \"char\", \"class\", \"const\", \"continue\",\n+            \"debugger\", \"default\", \"delete\", \"do\", \"double\",\n+            \"else\", \"enum\", \"export\", \"extends\",\n+            \"false\", \"final\", \"finally\", \"float\", \"for\", \"function\",\n+            \"goto\", \"if\", \"implements\", \"import\", \"in\", \"instanceof\", \"int\", \"interface\",\n+            \"let\", \"long\",\n+            \"native\", \"new\", \"null\",\n+            \"package\", \"private\", \"protected\", \"prototype\", \"public\",\n+            \"return\", \"short\", \"static\", \"super\", \"switch\", \"synchronized\",\n+            \"this\", \"throw\", \"throws\", \"transient\", \"true\", \"try\", \"typeof\",\n+            \"var\", \"void\", \"while\", \"with\",\n+            \"typeof\", \"yield\", \"undefined\", \"Infinity\", \"NaN\"\n+    };\n+\n+    public JavaScriptScanner() {\n+        List<IRule> rules = createRules();\n+        setRules(rules.toArray(new IRule[rules.size()]));\n+    }\n+\n+    /**\n+     * Creates the list of <code>IRule < /code>.\n+     * If you have to customize rules, override this method.\n+     *\n+     * @param colorProvider ColorProvider\n+     * @return the list of <code>IRule < /code>\n+     */\n+    protected List<IRule> createRules() {\n+        IToken normal  = new Token(new TextAttribute(new Color(Display.getCurrent(),\n+                IHTMLColorConstants.FOREGROUND)));\n+        IToken string  = new Token(new TextAttribute(new Color(Display.getCurrent(),\n+                IHTMLColorConstants.JAVA_STRING)));\n+        IToken comment = new Token(new TextAttribute(new Color(Display.getCurrent(),\n+                IHTMLColorConstants.JAVA_COMMENT)));\n+        IToken keyword = new Token(new TextAttribute(new Color(Display.getCurrent(),\n+                IHTMLColorConstants.JAVA_KEYWORD)));\n+        List<IRule> rules = new ArrayList<IRule>();\n+        rules.add(new SingleLineRule(\"\\\"\", \"\\\"\", string, '\\\\'));\n+        rules.add(new SingleLineRule(\"'\", \"'\", string, '\\\\'));\n+        rules.add(new SingleLineRule(\"\\\\//\", null, normal));\n+        rules.add(new EndOfLineRule(\"//\", comment));\n+        WordRule wordRule = new WordRule(new JavaWordDetector(), normal);\n+        for (int i = 0; i < KEYWORDS.length; i++) {\n+            wordRule.addWord(KEYWORDS[i], keyword);\n+        }\n+        rules.add(wordRule);\n+        return rules;\n+    }\n+\n+}"},{"sha":"50439252de14ebda7e1fe7f0b6874f7dfca46816","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/JavaWordDetector.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaWordDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaWordDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FJavaWordDetector.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.rules.IWordDetector;\n+\n+public class JavaWordDetector implements IWordDetector {\n+\n+    public boolean isWordStart(final char c) {\n+        return Character.isJavaIdentifierStart(c);\n+    }\n+\n+    public boolean isWordPart(final char c) {\n+        return Character.isJavaIdentifierPart(c);\n+    }\n+\n+}"},{"sha":"8567ed067165eeb41a475f79c386163f44d76ff6","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/SyncopeTagRule.java","status":"added","additions":119,"deletions":0,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FSyncopeTagRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FSyncopeTagRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FSyncopeTagRule.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.rules.ICharacterScanner;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.MultiLineRule;\n+\n+public class SyncopeTagRule extends MultiLineRule {\n+\n+    public static final int PREFIX = 0;\n+    public static final int NO_PREFIX = 1;\n+    public static final int BOTH = 2;\n+    private int prefix;\n+\n+    public SyncopeTagRule(final IToken token, final int prefix) {\n+        super(\"${\", \"}\", token);\n+        this.prefix = prefix;\n+    }\n+\n+    protected boolean sequenceDetected(final ICharacterScanner scanner,\n+            final char[] sequence, final boolean eofAllowed) {\n+        if (sequence[0] == '$' && sequence[1] == '{') {\n+            int c = scanner.read();\n+            if (c == '?' || c == '!' || c == '%') {\n+                scanner.unread();\n+                return false;\n+            }\n+            int back = 1;\n+            try {\n+                while (true) {\n+                    c = scanner.read();\n+                    back++;\n+                    if (c == -1) {\n+                        return false;\n+                    }\n+                    if (Character.isWhitespace(c) || c == '}') {\n+                        if (prefix == PREFIX) {\n+                            return false;\n+                        }\n+                        break;\n+                    } else if (c == ':') {\n+                        if (prefix == NO_PREFIX) {\n+                            return false;\n+                        }\n+                        break;\n+                    }\n+                }\n+            } finally {\n+                for (int i = 0; i < back; i++) {\n+                    scanner.unread();\n+                }\n+            }\n+        } else if (sequence[0] == '}') {\n+            // read previous char\n+            scanner.unread();\n+            scanner.unread();\n+            int c = scanner.read();\n+            // repair position\n+            scanner.read();\n+\n+            if (c == '%') {\n+                return false;\n+            }\n+        }\n+        return super.sequenceDetected(scanner, sequence, eofAllowed);\n+    }\n+\n+    protected boolean endSequenceDetected(final ICharacterScanner scanner) {\n+        int c;\n+        boolean doubleQuoted = false;\n+        boolean singleQuoted = false;\n+        char[][] delimiters = scanner.getLegalLineDelimiters();\n+        boolean previousWasEscapeCharacter = false;\n+        while ((c = scanner.read()) != ICharacterScanner.EOF) {\n+            if (c == fEscapeCharacter) {\n+                // Skip the escaped character.\n+                scanner.read();\n+            } else if (c == '\"' && !singleQuoted) {\n+                doubleQuoted = !doubleQuoted;\n+            } else if (c == '\\'' && !doubleQuoted) {\n+                singleQuoted = !singleQuoted;\n+            } else if (fEndSequence.length > 0 && c == fEndSequence[0] && !doubleQuoted\n+                    && !singleQuoted && sequenceDetected(scanner, fEndSequence, true)) {\n+                return true;\n+            } else if (fBreaksOnEOL) {\n+                // Check for end of line since it can be used to terminate the pattern.\n+                for (int i = 0; i < delimiters.length; i++) {\n+                    if (c == delimiters[i][0] && sequenceDetected(scanner, delimiters[i], true)\n+                            && (!fEscapeContinuesLine || !previousWasEscapeCharacter)) {\n+                        return true;\n+                    }\n+                }\n+            }\n+            previousWasEscapeCharacter = (c == fEscapeCharacter);\n+        }\n+        if (fBreaksOnEOF) {\n+            return true;\n+        }\n+        scanner.unread();\n+        return false;\n+    }\n+}"},{"sha":"8d7da79a5e877ea4646056d079ca1a1116eb2b4a","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/SyncopeTagScanner.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FSyncopeTagScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FSyncopeTagScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FSyncopeTagScanner.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.TextAttribute;\n+import org.eclipse.jface.text.rules.IRule;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.MultiLineRule;\n+import org.eclipse.jface.text.rules.RuleBasedScanner;\n+import org.eclipse.jface.text.rules.Token;\n+import org.eclipse.jface.text.rules.WhitespaceRule;\n+import org.eclipse.swt.graphics.Color;\n+import org.eclipse.swt.graphics.RGB;\n+import org.eclipse.swt.widgets.Display;\n+\n+public class SyncopeTagScanner extends RuleBasedScanner {\n+\n+    public SyncopeTagScanner(final boolean bold) {\n+        IToken string = null;\n+        if (bold) {\n+            RGB rgb = IHTMLColorConstants.TAGLIB_ATTR;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            string = new Token(new TextAttribute(color));\n+        } else {\n+            RGB rgb = IHTMLColorConstants.STRING;\n+            Color color = new Color(Display.getCurrent(), rgb);\n+            string = new Token(new TextAttribute(color));\n+        }\n+        IRule[] rules = new IRule[3];\n+        rules[0] = new MultiLineRule(\"\\\"\" , \"\\\"\" , string, '\\\\');\n+        rules[1] = new MultiLineRule(\"'\"  , \"'\"  , string, '\\\\');\n+        rules[2] = new WhitespaceRule(new HTMLWhitespaceDetector());\n+        setRules(rules);\n+    }\n+}"},{"sha":"f5d381d980c6dd0f02210f31b1d015c8295b7ca8","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/TagDefinition.java","status":"added","additions":1582,"deletions":0,"changes":1582,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagDefinition.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagDefinition.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagDefinition.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,1582 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public final class TagDefinition {\n+\n+    private static List<TagInfo> TAG_LIST = new ArrayList<TagInfo>();\n+\n+    private TagDefinition() {\n+    }\n+\n+    public static TagInfo[] getTagInfoAsArray() {\n+        return TAG_LIST.toArray(new TagInfo[TAG_LIST.size()]);\n+    }\n+\n+    public static List<TagInfo> getTagInfoAsList() {\n+        return TAG_LIST;\n+    }\n+\n+    private static void addTagInfo(final TagInfo tagInfo) {\n+        TAG_LIST.add(tagInfo);\n+    }\n+\n+    private static void addEventAttr(final TagInfo tagInfo) {\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onclick\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"ondblclick\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onmousedown\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onmouseup\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onmouseover\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onmousemove\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onmouseout\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onkeypress\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onkeydown\", true));\n+        tagInfo.addAttributeInfo(new AttributeInfo(\"onkeyup\", true));\n+    }\n+\n+    static {\n+        TagInfo a = new TagInfo(\"a\", true);\n+        a.addAttributeInfo(new AttributeInfo(\"href\", true,\n+            AttributeInfo.AttributeTypeOptions.FILE));\n+        a.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"target\", true,\n+            AttributeInfo.AttributeTypeOptions.TARGET));\n+        a.addAttributeInfo(new AttributeInfo(\"charset\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"hreflang\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"methods\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"rel\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"rev\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"urn\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"coords\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"shape\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        a.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+        a.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        addEventAttr(a);\n+        addTagInfo(a);\n+\n+        TagInfo abbr = new TagInfo(\"abbr\", true);\n+        abbr.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        abbr.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        abbr.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        abbr.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        abbr.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        abbr.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(abbr);\n+        addTagInfo(abbr);\n+\n+        TagInfo acronym = new TagInfo(\"acronym\", true);\n+        acronym.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        acronym.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        acronym.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        acronym.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        acronym.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        acronym.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(acronym);\n+        addTagInfo(acronym);\n+\n+        TagInfo address = new TagInfo(\"address\", true);\n+        address.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        address.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        address.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        address.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        address.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        address.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(address);\n+        addTagInfo(address);\n+\n+        TagInfo applet = new TagInfo(\"applet\", true);\n+        applet.addAttributeInfo(new AttributeInfo(\"alt\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"archive\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"code\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"codebase\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        applet.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"hspace\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"vspace\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        applet.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        applet.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(applet);\n+\n+        TagInfo area = new TagInfo(\"area\", false, true);\n+        area.addAttributeInfo(new AttributeInfo(\"shape\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"coords\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"href\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"alt\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        area.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+        area.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        addEventAttr(area);\n+        addTagInfo(area);\n+\n+        TagInfo b = new TagInfo(\"b\", true);\n+        b.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        b.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        b.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        b.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        b.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        b.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(b);\n+        addTagInfo(b);\n+\n+        TagInfo base = new TagInfo(\"base\", false, true);\n+        base.addAttributeInfo(new AttributeInfo(\"href\", true));\n+        base.addAttributeInfo(new AttributeInfo(\"target\", true));\n+        addTagInfo(base);\n+\n+        TagInfo basefont = new TagInfo(\"basefont\", false, true);\n+        basefont.addAttributeInfo(new AttributeInfo(\"size\", true));\n+        basefont.addAttributeInfo(new AttributeInfo(\"color\", true));\n+        basefont.addAttributeInfo(new AttributeInfo(\"face\", true));\n+        basefont.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        basefont.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        basefont.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        basefont.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        addTagInfo(basefont);\n+\n+        TagInfo bdo = new TagInfo(\"bdo\", true);\n+        bdo.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        bdo.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        bdo.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        bdo.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        bdo.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        bdo.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(bdo);\n+\n+        TagInfo bgsound = new TagInfo(\"bgsound\", false);\n+        bgsound.addAttributeInfo(new AttributeInfo(\"balance\", true));\n+        bgsound.addAttributeInfo(new AttributeInfo(\"loop\", true));\n+        bgsound.addAttributeInfo(new AttributeInfo(\"src\", true));\n+        bgsound.addAttributeInfo(new AttributeInfo(\"volume\", true));\n+        bgsound.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        bgsound.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        bgsound.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        bgsound.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(bgsound);\n+\n+        TagInfo big = new TagInfo(\"big\", true);\n+        big.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        big.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        big.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        big.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        big.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        big.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(big);\n+        addTagInfo(big);\n+\n+        TagInfo blink = new TagInfo(\"blink\", true);\n+        blink.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        blink.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        blink.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        blink.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        blink.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        blink.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(blink);\n+        addTagInfo(blink);\n+\n+        TagInfo blockquote = new TagInfo(\"blockquote\", true);\n+        blockquote.addAttributeInfo(new AttributeInfo(\"cite\", true));\n+        blockquote.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        blockquote.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        blockquote.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        blockquote.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        blockquote.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        blockquote.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(blockquote);\n+        addTagInfo(blockquote);\n+\n+        TagInfo body = new TagInfo(\"body\", true);\n+        body.addAttributeInfo(new AttributeInfo(\"text\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"link\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"vlink\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"alink\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"background\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"marginheight\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"marginwidth\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"topmargin\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"leftmargin\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"bottommargin\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"rightmargin\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"scroll\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        body.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"onload\", true));\n+        body.addAttributeInfo(new AttributeInfo(\"onunload\", true));\n+        addTagInfo(body);\n+\n+        TagInfo br = new TagInfo(\"br\", false, true);\n+        br.addAttributeInfo(new AttributeInfo(\"clear\", true));\n+        br.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        br.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        br.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        br.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        br.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(br);\n+\n+        TagInfo button = new TagInfo(\"button\", true);\n+        button.addAttributeInfo(new AttributeInfo(\"disabled\", false));\n+        button.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"value\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        button.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+        button.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        addEventAttr(button);\n+        addTagInfo(button);\n+\n+        TagInfo caption = new TagInfo(\"caption\", true);\n+        caption.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        caption.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        caption.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        caption.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        caption.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        caption.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        caption.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        caption.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(caption);\n+        addTagInfo(caption);\n+\n+        TagInfo center = new TagInfo(\"center\", true);\n+        center.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        center.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        center.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        center.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        center.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        center.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(center);\n+        addTagInfo(center);\n+\n+        TagInfo cite = new TagInfo(\"cite\", true);\n+        cite.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        cite.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        cite.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        cite.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        cite.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        cite.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(cite);\n+        addTagInfo(cite);\n+\n+        TagInfo code = new TagInfo(\"code\", true);\n+        code.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        code.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        code.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        code.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        code.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        code.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(code);\n+        addTagInfo(code);\n+\n+        TagInfo col = new TagInfo(\"col\", false, true);\n+        col.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        col.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"char\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"charoff\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"span\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        col.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        col.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        col.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(col);\n+        addTagInfo(col);\n+\n+        TagInfo colgroup = new TagInfo(\"colgroup\", true);\n+        colgroup.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"char\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"charoff\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"span\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        colgroup.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(colgroup);\n+        addTagInfo(colgroup);\n+\n+        TagInfo comment = new TagInfo(\"comment\", true);\n+        comment.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        comment.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        addTagInfo(comment);\n+\n+        TagInfo dd = new TagInfo(\"dd\", true);\n+        dd.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        dd.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        dd.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        dd.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        dd.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        dd.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(dd);\n+        addTagInfo(dd);\n+\n+        TagInfo del = new TagInfo(\"del\", true);\n+        del.addAttributeInfo(new AttributeInfo(\"cite\", true));\n+        del.addAttributeInfo(new AttributeInfo(\"datetime\", true));\n+        del.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        del.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        del.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        del.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        del.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        del.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(del);\n+        addTagInfo(del);\n+\n+        TagInfo dfn = new TagInfo(\"dfn\", true);\n+        dfn.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        dfn.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        dfn.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        dfn.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        dfn.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        dfn.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(dfn);\n+        addTagInfo(dfn);\n+\n+        TagInfo dir = new TagInfo(\"dir\", true);\n+        dir.addAttributeInfo(new AttributeInfo(\"compact\", false));\n+        dir.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        dir.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        dir.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        dir.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        dir.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        dir.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        dir.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(dir);\n+\n+        TagInfo div = new TagInfo(\"div\", true);\n+        div.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        div.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        div.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        div.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        div.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        div.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        div.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(div);\n+        addTagInfo(div);\n+\n+        TagInfo dl = new TagInfo(\"dl\", true);\n+        dl.addAttributeInfo(new AttributeInfo(\"compact\", false));\n+        dl.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        dl.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        dl.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        dl.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        dl.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        dl.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(dl);\n+        addTagInfo(dl);\n+\n+        TagInfo dt = new TagInfo(\"dt\", true);\n+        dt.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        dt.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        dt.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        dt.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        dt.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        dt.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(dt);\n+        addTagInfo(dt);\n+\n+        TagInfo em = new TagInfo(\"em\", true);\n+        em.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        em.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        em.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        em.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        em.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        em.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(em);\n+        addTagInfo(em);\n+\n+        TagInfo embed = new TagInfo(\"embed\", false);\n+        embed.addAttributeInfo(new AttributeInfo(\"src\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        embed.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"hspace\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"vspace\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"units\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"border\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"frameborder\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"hidden\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"alt\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"code\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"codebase\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"palette\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"pluginspace\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"pluginurl\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        embed.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        embed.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(embed);\n+\n+        TagInfo fieldset = new TagInfo(\"fieldset\", true);\n+        fieldset.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        fieldset.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        fieldset.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        fieldset.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        fieldset.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        fieldset.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        fieldset.addAttributeInfo(new AttributeInfo(\"title\", true));\n+//        fieldset.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+//        fieldset.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        addEventAttr(fieldset);\n+        addTagInfo(fieldset);\n+\n+        TagInfo font = new TagInfo(\"font\", true);\n+        font.addAttributeInfo(new AttributeInfo(\"size\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"color\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"face\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"font-weight\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"point-size\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        font.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        font.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(font);\n+        addTagInfo(font);\n+\n+        TagInfo form = new TagInfo(\"form\", true);\n+        form.addAttributeInfo(new AttributeInfo(\"action\", true,\n+            AttributeInfo.AttributeTypeOptions.FILE));\n+        form.addAttributeInfo(new AttributeInfo(\"method\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"target\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"accept\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"accept-charset\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"autocomplete\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"enctype\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"urn\", false));\n+        form.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        form.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"title\", true));\n+//        form.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+//        form.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"onsubmit\", true));\n+        form.addAttributeInfo(new AttributeInfo(\"onreset\", true));\n+        addEventAttr(form);\n+        addTagInfo(form);\n+\n+        TagInfo frame = new TagInfo(\"frame\", false, true);\n+        frame.addAttributeInfo(new AttributeInfo(\"src\", true,\n+            AttributeInfo.AttributeTypeOptions.FILE));\n+        frame.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"bordercolor\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"frameborder\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"marginheight\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"marginwidth\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"noresize\", false));\n+        frame.addAttributeInfo(new AttributeInfo(\"scrolling\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        frame.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        frame.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(frame);\n+\n+        TagInfo frameset = new TagInfo(\"frameset\", true);\n+        frameset.addAttributeInfo(new AttributeInfo(\"border\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"bordercolor\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"cols\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"frameborder\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"framespacing\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"rows\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        frameset.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"onload\", true));\n+        frameset.addAttributeInfo(new AttributeInfo(\"onunload\", true));\n+        addTagInfo(frameset);\n+\n+        TagInfo h1 = new TagInfo(\"h1\", true);\n+        h1.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        h1.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        h1.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        h1.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        h1.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        h1.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        h1.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(h1);\n+        addTagInfo(h1);\n+\n+        TagInfo h2 = new TagInfo(\"h2\", true);\n+        h2.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        h2.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        h2.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        h2.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        h2.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        h2.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        h2.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(h2);\n+        addTagInfo(h2);\n+\n+        TagInfo h3 = new TagInfo(\"h3\", true);\n+        h3.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        h3.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        h3.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        h3.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        h3.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        h3.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        h3.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(h3);\n+        addTagInfo(h3);\n+\n+        TagInfo h4 = new TagInfo(\"h4\", true);\n+        h4.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        h4.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        h4.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        h4.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        h4.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        h4.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        h4.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(h4);\n+        addTagInfo(h4);\n+\n+        TagInfo h5 = new TagInfo(\"h5\", true);\n+        h5.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        h5.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        h5.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        h5.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        h5.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        h5.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        h5.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(h5);\n+        addTagInfo(h5);\n+\n+        TagInfo h6 = new TagInfo(\"h6\", true);\n+        h6.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        h6.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        h6.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        h6.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        h6.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        h6.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        h6.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(h6);\n+\n+        TagInfo head = new TagInfo(\"head\", true);\n+        head.addAttributeInfo(new AttributeInfo(\"profile\", true));\n+        head.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        head.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        head.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        head.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        head.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(head);\n+\n+        TagInfo hr = new TagInfo(\"hr\", false, true);\n+        hr.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        hr.addAttributeInfo(new AttributeInfo(\"color\", true));\n+        hr.addAttributeInfo(new AttributeInfo(\"nochade\", false));\n+        hr.addAttributeInfo(new AttributeInfo(\"size\", true));\n+        hr.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        hr.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        hr.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        hr.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        hr.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        hr.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        hr.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        hr.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(hr);\n+        addTagInfo(hr);\n+\n+        TagInfo html = new TagInfo(\"html\", true);\n+        html.addAttributeInfo(new AttributeInfo(\"version\", true));\n+        html.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        html.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        html.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        html.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        html.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        html.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        html.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(html);\n+\n+        TagInfo i = new TagInfo(\"i\", true);\n+        i.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        i.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        i.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        i.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        i.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        i.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(i);\n+        addTagInfo(i);\n+\n+        TagInfo iframe = new TagInfo(\"iframe\", true);\n+        iframe.addAttributeInfo(new AttributeInfo(\"src\", true,\n+            AttributeInfo.AttributeTypeOptions.FILE));\n+        iframe.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        iframe.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"hspace\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"vspace\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"marginheight\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"marginwidth\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"border\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"bordercolor\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"frameborder\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"framespacing\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"scrolling\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        iframe.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        iframe.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(iframe);\n+\n+        TagInfo img = new TagInfo(\"img\", false, true);\n+        img.addAttributeInfo(new AttributeInfo(\"src\", true,\n+            AttributeInfo.AttributeTypeOptions.FILE));\n+        img.addAttributeInfo(new AttributeInfo(\"alt\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        img.addAttributeInfo(new AttributeInfo(\"border\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"galleryimg\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"hspace\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"lowsrc\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"suppress\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"vspace\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"ismap\", false));\n+        img.addAttributeInfo(new AttributeInfo(\"usemap\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        img.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        img.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(img);\n+        addTagInfo(img);\n+\n+        TagInfo input = new TagInfo(\"input\", false, true);\n+        input.addAttributeInfo(new AttributeInfo(\"type\", true,\n+            AttributeInfo.AttributeTypeOptions.INPUT_TYPE));\n+        input.addAttributeInfo(new AttributeInfo(\"value\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"size\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"maxlength\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"disabled\", false));\n+        input.addAttributeInfo(new AttributeInfo(\"readonly\", false));\n+        input.addAttributeInfo(new AttributeInfo(\"checked\", false));\n+        input.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        input.addAttributeInfo(new AttributeInfo(\"alt\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"border\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"dynsrc\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"ismap\", false));\n+        input.addAttributeInfo(new AttributeInfo(\"lowsrc\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"src\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        input.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"onselect\", true));\n+        input.addAttributeInfo(new AttributeInfo(\"onchange\", true));\n+        addEventAttr(input);\n+        addTagInfo(input);\n+\n+        TagInfo ins = new TagInfo(\"ins\", true);\n+        ins.addAttributeInfo(new AttributeInfo(\"cite\", true));\n+        ins.addAttributeInfo(new AttributeInfo(\"datetime\", true));\n+        ins.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        ins.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        ins.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        ins.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        ins.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        ins.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(ins);\n+        addTagInfo(ins);\n+\n+        TagInfo isindex = new TagInfo(\"isindex\", false, true);\n+        isindex.addAttributeInfo(new AttributeInfo(\"action\", true));\n+        isindex.addAttributeInfo(new AttributeInfo(\"prompt\", true));\n+        isindex.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        isindex.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        isindex.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        isindex.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        isindex.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        isindex.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(isindex);\n+\n+        TagInfo kbd = new TagInfo(\"kbd\", true);\n+        kbd.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        kbd.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        kbd.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        kbd.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        kbd.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        kbd.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(kbd);\n+        addTagInfo(kbd);\n+\n+        TagInfo keygen = new TagInfo(\"keygen\", false);\n+        keygen.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        keygen.addAttributeInfo(new AttributeInfo(\"challenge\", true));\n+        addTagInfo(keygen);\n+\n+        TagInfo label = new TagInfo(\"label\", true);\n+        label.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        label.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        label.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        label.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        label.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        label.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        label.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+        label.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        addEventAttr(label);\n+        addTagInfo(label);\n+\n+        TagInfo legend = new TagInfo(\"legend\", true);\n+        legend.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        legend.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        legend.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        legend.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        legend.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        legend.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        legend.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(legend);\n+        addTagInfo(legend);\n+\n+        TagInfo li = new TagInfo(\"li\", true);\n+        li.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        li.addAttributeInfo(new AttributeInfo(\"value\", true));\n+        li.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        li.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        li.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        li.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        li.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        li.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(li);\n+        addTagInfo(li);\n+\n+        TagInfo link = new TagInfo(\"link\", false, true);\n+        link.addAttributeInfo(new AttributeInfo(\"rel\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"href\", true,\n+            AttributeInfo.AttributeTypeOptions.FILE));\n+        link.addAttributeInfo(new AttributeInfo(\"src\", true,\n+            AttributeInfo.AttributeTypeOptions.FILE));\n+        link.addAttributeInfo(new AttributeInfo(\"charset\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"disabled\", false));\n+        link.addAttributeInfo(new AttributeInfo(\"hreflang\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"media\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"methods\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"rev\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"target\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"urn\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        link.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        link.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(link);\n+        addTagInfo(link);\n+\n+        TagInfo map = new TagInfo(\"map\", true);\n+        map.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        map.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        map.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        map.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        map.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        map.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        map.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        map.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        map.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(map);\n+        addTagInfo(map);\n+\n+        TagInfo marquee = new TagInfo(\"marquee\", true);\n+        marquee.addAttributeInfo(new AttributeInfo(\"behavior\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"direction\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"hspace\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"loop\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"scrollamount\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"scrolldelay\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"truespeed\", false));\n+        marquee.addAttributeInfo(new AttributeInfo(\"vspace\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        marquee.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        marquee.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(marquee);\n+        addTagInfo(marquee);\n+\n+        TagInfo menu = new TagInfo(\"menu\", true);\n+        menu.addAttributeInfo(new AttributeInfo(\"compact\", false));\n+        menu.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        menu.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        menu.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        menu.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        menu.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        menu.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        menu.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(menu);\n+        addTagInfo(menu);\n+\n+        TagInfo meta = new TagInfo(\"meta\", false, true);\n+        meta.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        meta.addAttributeInfo(new AttributeInfo(\"http-equiv\", true));\n+        meta.addAttributeInfo(new AttributeInfo(\"content\", true));\n+        meta.addAttributeInfo(new AttributeInfo(\"scheme\", true));\n+        meta.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        meta.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        meta.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(meta);\n+\n+        TagInfo nobr = new TagInfo(\"nobr\", true);\n+        nobr.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        nobr.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        nobr.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        nobr.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        nobr.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        nobr.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(nobr);\n+\n+        TagInfo noembed = new TagInfo(\"noembed\", true);\n+        addTagInfo(noembed);\n+\n+        TagInfo noframes = new TagInfo(\"noframes\", true);\n+        noframes.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        noframes.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        noframes.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        noframes.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        noframes.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        noframes.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(noframes);\n+\n+        TagInfo noscript = new TagInfo(\"noscript\", true);\n+        noscript.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        noscript.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        noscript.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        noscript.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        noscript.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        noscript.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(noscript);\n+\n+        TagInfo object = new TagInfo(\"object\", true);\n+        object.addAttributeInfo(new AttributeInfo(\"alt\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"archive\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"border\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"classid\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"code\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"codebase\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"codetype\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"data\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"declare\", false));\n+        object.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"standby\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"usemap\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        object.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"hspace\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"vspace\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        object.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        object.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(object);\n+        addTagInfo(object);\n+\n+        TagInfo ol = new TagInfo(\"ol\", true);\n+        ol.addAttributeInfo(new AttributeInfo(\"compact\", false));\n+        ol.addAttributeInfo(new AttributeInfo(\"start\", true));\n+        ol.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        ol.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        ol.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        ol.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        ol.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        ol.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        ol.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(ol);\n+        addTagInfo(ol);\n+\n+        TagInfo optgroup = new TagInfo(\"optgroup\", true);\n+        optgroup.addAttributeInfo(new AttributeInfo(\"disabled\", false));\n+        optgroup.addAttributeInfo(new AttributeInfo(\"label\", false));\n+        optgroup.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        optgroup.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        optgroup.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        optgroup.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        optgroup.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        optgroup.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        optgroup.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(optgroup);\n+        addTagInfo(optgroup);\n+\n+        TagInfo option = new TagInfo(\"option\", true);\n+        option.addAttributeInfo(new AttributeInfo(\"disabled\", false));\n+        option.addAttributeInfo(new AttributeInfo(\"label\", false));\n+        option.addAttributeInfo(new AttributeInfo(\"selected\", false));\n+        option.addAttributeInfo(new AttributeInfo(\"value\", true));\n+        option.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        option.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        option.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        option.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        option.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        option.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        option.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(option);\n+        addTagInfo(option);\n+\n+        TagInfo p = new TagInfo(\"p\", true);\n+        p.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        p.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        p.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        p.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        p.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        p.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        p.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(p);\n+        addTagInfo(p);\n+\n+        TagInfo param = new TagInfo(\"param\", false, true);\n+        param.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"value\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"valuetype\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        param.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        param.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(param);\n+\n+        TagInfo pre = new TagInfo(\"pre\", true);\n+        pre.addAttributeInfo(new AttributeInfo(\"cols\", true));\n+        pre.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        pre.addAttributeInfo(new AttributeInfo(\"wrap\", false));\n+        pre.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        pre.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        pre.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        pre.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        pre.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        pre.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(pre);\n+        addTagInfo(pre);\n+\n+        TagInfo q = new TagInfo(\"q\", true);\n+        q.addAttributeInfo(new AttributeInfo(\"cite\", true));\n+        q.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        q.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        q.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        q.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        q.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        q.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(q);\n+        addTagInfo(q);\n+\n+        TagInfo rb = new TagInfo(\"rb\", true);\n+        rb.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        rb.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        rb.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        rb.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        rb.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        rb.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        rb.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(rb);\n+\n+        TagInfo rp = new TagInfo(\"rp\", true);\n+        rp.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        rp.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        rp.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        rp.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        rp.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        rp.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        rp.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(rp);\n+\n+        TagInfo rt = new TagInfo(\"rt\", true);\n+        rt.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        rt.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        rt.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        rt.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        rt.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        rt.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(rt);\n+\n+        TagInfo ruby = new TagInfo(\"ruby\", true);\n+        ruby.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        ruby.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        ruby.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        ruby.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        ruby.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        ruby.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(ruby);\n+\n+        TagInfo s = new TagInfo(\"s\", true);\n+        s.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        s.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        s.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        s.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        s.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        s.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(s);\n+        addTagInfo(s);\n+\n+        TagInfo samp = new TagInfo(\"samp\", true);\n+        samp.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        samp.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        samp.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        samp.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        samp.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        samp.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(samp);\n+        addTagInfo(samp);\n+\n+        TagInfo script = new TagInfo(\"script\", true);\n+        script.addAttributeInfo(new AttributeInfo(\"charset\", true));\n+        script.addAttributeInfo(new AttributeInfo(\"defer\", false));\n+        script.addAttributeInfo(new AttributeInfo(\"event\", true));\n+        script.addAttributeInfo(new AttributeInfo(\"for\", true));\n+        script.addAttributeInfo(new AttributeInfo(\"src\", true,\n+            AttributeInfo.AttributeTypeOptions.FILE));\n+        script.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        script.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        script.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        script.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        script.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(script);\n+\n+        TagInfo select = new TagInfo(\"select\", true);\n+        select.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        select.addAttributeInfo(new AttributeInfo(\"disabled\", false));\n+        select.addAttributeInfo(new AttributeInfo(\"multiple\", false));\n+        select.addAttributeInfo(new AttributeInfo(\"size\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        select.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+        select.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        addEventAttr(select);\n+        addTagInfo(select);\n+\n+        TagInfo small = new TagInfo(\"small\", true);\n+        small.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        small.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        small.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        small.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        small.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        small.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(small);\n+        addTagInfo(small);\n+\n+        TagInfo span = new TagInfo(\"span\", true);\n+        span.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        span.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        span.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        span.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        span.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        span.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(span);\n+        addTagInfo(span);\n+\n+        TagInfo strike = new TagInfo(\"strike\", true);\n+        strike.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        strike.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        strike.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        strike.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        strike.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        strike.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(strike);\n+        addTagInfo(strike);\n+\n+        TagInfo strong = new TagInfo(\"strong\", true);\n+        strong.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        strong.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        strong.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        strong.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        strong.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        strong.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(strong);\n+        addTagInfo(strong);\n+\n+        TagInfo style = new TagInfo(\"style\", true);\n+        style.addAttributeInfo(new AttributeInfo(\"disabled\", true));\n+        style.addAttributeInfo(new AttributeInfo(\"media\", true));\n+        style.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        style.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        style.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        style.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(style);\n+        addTagInfo(style);\n+\n+        TagInfo sub = new TagInfo(\"sub\", true);\n+        sub.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        sub.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        sub.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        sub.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        sub.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        sub.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(sub);\n+        addTagInfo(sub);\n+\n+        TagInfo sup = new TagInfo(\"sup\", true);\n+        sup.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        sup.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        sup.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        sup.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        sup.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        sup.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(sup);\n+        addTagInfo(sup);\n+\n+        TagInfo table = new TagInfo(\"table\", true);\n+        table.addAttributeInfo(new AttributeInfo(\"border\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"bordercolor\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"bordercolordark\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"bordercolorlight\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"frame\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"rules\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"background\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        table.addAttributeInfo(new AttributeInfo(\"cellpadding\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"cellspacing\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"hspace\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"vspace\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"cols\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        table.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        table.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(table);\n+        addTagInfo(table);\n+\n+        TagInfo tbody = new TagInfo(\"tbody\", true);\n+        tbody.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        tbody.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        tbody.addAttributeInfo(new AttributeInfo(\"char\", true));\n+        tbody.addAttributeInfo(new AttributeInfo(\"charoff\", true));\n+        tbody.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        tbody.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        tbody.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        tbody.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        tbody.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        tbody.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        tbody.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        tbody.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(tbody);\n+        addTagInfo(tbody);\n+\n+        TagInfo td = new TagInfo(\"td\", true);\n+        td.addAttributeInfo(new AttributeInfo(\"bordercolor\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"bordercolordark\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"bordercolorlight\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"background\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        td.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        td.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"nowrap\", false));\n+        td.addAttributeInfo(new AttributeInfo(\"char\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"charoff\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"colspan\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"rowspan\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"abbr\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"axis\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"headers\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"scope\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        td.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        td.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(td);\n+        addTagInfo(td);\n+\n+        TagInfo textarea = new TagInfo(\"textarea\", true);\n+        textarea.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        textarea.addAttributeInfo(new AttributeInfo(\"cols\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"disabled\", false));\n+        textarea.addAttributeInfo(new AttributeInfo(\"istyle\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"readonly\", false));\n+        textarea.addAttributeInfo(new AttributeInfo(\"rows\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"wrap\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        textarea.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"name\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"onfocus\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"onblur\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"onselect\", true));\n+        textarea.addAttributeInfo(new AttributeInfo(\"onchange\", true));\n+        addEventAttr(textarea);\n+        addTagInfo(textarea);\n+\n+        TagInfo tfoot = new TagInfo(\"tfoot\", true);\n+        tfoot.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"char\", true));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"charoff\", true));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        tfoot.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(tfoot);\n+        addTagInfo(tfoot);\n+\n+        TagInfo th = new TagInfo(\"th\", true);\n+        th.addAttributeInfo(new AttributeInfo(\"bordercolor\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"bordercolordark\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"bordercolorlight\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"background\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        th.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        th.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"width\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"nowrap\", false));\n+        th.addAttributeInfo(new AttributeInfo(\"char\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"charoff\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"colspan\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"rowspan\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"abbr\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"axis\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"headers\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"scope\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        th.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        th.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(th);\n+        addTagInfo(th);\n+\n+        TagInfo thead = new TagInfo(\"thead\", true);\n+        thead.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        thead.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        thead.addAttributeInfo(new AttributeInfo(\"char\", true));\n+        thead.addAttributeInfo(new AttributeInfo(\"charoff\", true));\n+        thead.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        thead.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        thead.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        thead.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        thead.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        thead.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        thead.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        thead.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(thead);\n+        addTagInfo(thead);\n+\n+        TagInfo title = new TagInfo(\"title\", true);\n+        title.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        title.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        title.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        title.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(title);\n+\n+        TagInfo tr = new TagInfo(\"tr\", true);\n+        tr.addAttributeInfo(new AttributeInfo(\"bordercolor\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"bordercolordark\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"bordercolorlight\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"background\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"bgcolor\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"align\", true,\n+            AttributeInfo.AttributeTypeOptions.ALIGN));\n+        tr.addAttributeInfo(new AttributeInfo(\"char\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"charoff\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"height\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"valign\", true,\n+            AttributeInfo.AttributeTypeOptions.VALIGN));\n+        tr.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        tr.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        tr.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(tr);\n+        addTagInfo(tr);\n+\n+        TagInfo tt = new TagInfo(\"tt\", true);\n+        tt.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        tt.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        tt.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        tt.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        tt.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        tt.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(tt);\n+        addTagInfo(tt);\n+\n+        TagInfo u = new TagInfo(\"u\", true);\n+        u.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        u.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        u.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        u.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        u.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        u.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(u);\n+        addTagInfo(u);\n+\n+        TagInfo ul = new TagInfo(\"ul\", true);\n+        ul.addAttributeInfo(new AttributeInfo(\"compact\", false));\n+        ul.addAttributeInfo(new AttributeInfo(\"type\", true));\n+        ul.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        ul.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        ul.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        ul.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        ul.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        ul.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(ul);\n+        addTagInfo(ul);\n+\n+        TagInfo var = new TagInfo(\"var\", true);\n+        var.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        var.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        var.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        var.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        var.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        var.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addEventAttr(var);\n+        addTagInfo(var);\n+\n+        TagInfo wbr = new TagInfo(\"wbr\", false);\n+        wbr.addAttributeInfo(new AttributeInfo(\"class\", true,\n+            AttributeInfo.AttributeTypeOptions.CSS));\n+        wbr.addAttributeInfo(new AttributeInfo(\"dir\", true));\n+        wbr.addAttributeInfo(new AttributeInfo(\"id\", true));\n+        wbr.addAttributeInfo(new AttributeInfo(\"lang\", true));\n+        wbr.addAttributeInfo(new AttributeInfo(\"language\", true));\n+        wbr.addAttributeInfo(new AttributeInfo(\"style\", true));\n+        wbr.addAttributeInfo(new AttributeInfo(\"title\", true));\n+        addTagInfo(wbr);\n+    }\n+\n+}"},{"sha":"a4063989fdc0b7e0d915a464e307e4f58e0b5991","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/TagInfo.java","status":"added","additions":128,"deletions":0,"changes":128,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagInfo.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class TagInfo {\n+\n+    private String tagName;\n+    private boolean hasBody;\n+    private boolean emptyTag;\n+    private String description;\n+    private List<AttributeInfo> attributes = new ArrayList<AttributeInfo>();\n+    private List<String> children = new ArrayList<String>();\n+    public static final int NONE  = 0;\n+    public static final int EVENT = 1;\n+    public static final int FORM  = 2;\n+\n+    public TagInfo(final String tagName, final boolean hasBody) {\n+        this(tagName, hasBody, false);\n+    }\n+\n+    public TagInfo(final String tagName, final boolean hasBody, final boolean emptyTag) {\n+        this.tagName = tagName;\n+        this.hasBody = hasBody;\n+        this.emptyTag = emptyTag;\n+    }\n+\n+    public String getTagName() {\n+        return this.tagName;\n+    }\n+\n+    public boolean hasBody() {\n+        return this.hasBody;\n+    }\n+\n+    public boolean isEmptyTag() {\n+        return this.emptyTag;\n+    }\n+\n+    public void addAttributeInfo(final AttributeInfo attribute) {\n+        int i = 0;\n+        for ( ; i < attributes.size(); i++) {\n+            AttributeInfo info = attributes.get(i);\n+            if (info.getAttributeName().compareTo(attribute.getAttributeName()) > 0) {\n+                break;\n+            }\n+        }\n+        this.attributes.add(i, attribute);\n+    }\n+\n+    public AttributeInfo[] getAttributeInfo() {\n+        return this.attributes.toArray(new AttributeInfo[this.attributes.size()]);\n+    }\n+\n+    public AttributeInfo[] getRequiredAttributeInfo() {\n+        ArrayList<AttributeInfo> list = new ArrayList<AttributeInfo>();\n+        for (int i = 0; i < attributes.size(); i++) {\n+            AttributeInfo info = (AttributeInfo) attributes.get(i);\n+            if (info.isRequired()) {\n+                list.add(info);\n+            }\n+        }\n+        return list.toArray(new AttributeInfo[list.size()]);\n+    }\n+\n+    public AttributeInfo getAttributeInfo(final String name) {\n+        for (int i = 0 ; i < attributes.size() ; i++) {\n+            AttributeInfo info = attributes.get(i);\n+            if (info.getAttributeName().equals(name)) {\n+                return info;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public void addChildTagName(final String name) {\n+        children.add(name);\n+    }\n+\n+    public String[] getChildTagNames() {\n+        return children.toArray(new String[children.size()]);\n+    }\n+\n+    @Override public boolean equals(final Object obj) {\n+        if (obj instanceof TagInfo) {\n+            TagInfo tagInfo = (TagInfo) obj;\n+            if (tagInfo.getTagName().equals(getTagName())) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    @Override public int hashCode() {\n+        return this.getTagName().hashCode();\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(final String description) {\n+        this.description = description;\n+    }\n+\n+    public String getDisplayString() {\n+        return getTagName();\n+    }\n+\n+}"},{"sha":"4fdce48a034c891ddf68c3da148c91ff0e579356","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/TagRule.java","status":"added","additions":119,"deletions":0,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTagRule.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+import org.eclipse.jface.text.rules.ICharacterScanner;\n+import org.eclipse.jface.text.rules.IToken;\n+import org.eclipse.jface.text.rules.MultiLineRule;\n+\n+public class TagRule extends MultiLineRule {\n+\n+    public static final int PREFIX = 0;\n+    public static final int NO_PREFIX = 1;\n+    public static final int BOTH = 2;\n+    private int prefix;\n+\n+    public TagRule(final IToken token, final int prefix) {\n+        super(\"<\", \">\", token);\n+        this.prefix = prefix;\n+    }\n+\n+    protected boolean sequenceDetected(final ICharacterScanner scanner,\n+            final char[] sequence, final boolean eofAllowed) {\n+        if (sequence[0] == '<') {\n+            int c = scanner.read();\n+            if (c == '?' || c == '!' || c == '%') {\n+                scanner.unread();\n+                return false;\n+            }\n+            int back = 1;\n+            try {\n+                while (true) {\n+                    c = scanner.read();\n+                    back++;\n+                    if (c == -1) {\n+                        return false;\n+                    }\n+                    if (Character.isWhitespace(c) || c == '>') {\n+                        if (prefix == PREFIX) {\n+                            return false;\n+                        }\n+                        break;\n+                    } else if (c == ':') {\n+                        if (prefix == NO_PREFIX) {\n+                            return false;\n+                        }\n+                        break;\n+                    }\n+                }\n+            } finally {\n+                for (int i = 0; i < back; i++) {\n+                    scanner.unread();\n+                }\n+            }\n+        } else if (sequence[0] == '>') {\n+            // read previous char\n+            scanner.unread();\n+            scanner.unread();\n+            int c = scanner.read();\n+            // repair position\n+            scanner.read();\n+            if (c == '%') {\n+                return false;\n+            }\n+        }\n+        return super.sequenceDetected(scanner, sequence, eofAllowed);\n+    }\n+\n+    protected boolean endSequenceDetected(final ICharacterScanner scanner) {\n+\n+        int c;\n+        boolean doubleQuoted = false;\n+        boolean singleQuoted = false;\n+        char[][] delimiters = scanner.getLegalLineDelimiters();\n+        boolean previousWasEscapeCharacter = false;\n+        while ((c = scanner.read()) != ICharacterScanner.EOF) {\n+            if (c == fEscapeCharacter) {\n+                scanner.read();\n+            } else if (c == '\"' && !singleQuoted) {\n+                doubleQuoted = !doubleQuoted;\n+            } else if (c == '\\'' && !doubleQuoted) {\n+                singleQuoted = !singleQuoted;\n+            } else if (fEndSequence.length > 0 && c == fEndSequence[0] && !doubleQuoted\n+                    && !singleQuoted && sequenceDetected(scanner, fEndSequence, true)) {\n+                return true;\n+            } else if (fBreaksOnEOL) {\n+                // Check for end of line since it can be used to terminate the pattern.\n+                for (int i = 0; i < delimiters.length; i++) {\n+                    if (c == delimiters[i][0] && sequenceDetected(scanner, delimiters[i], true)) {\n+                        if (!fEscapeContinuesLine || !previousWasEscapeCharacter) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+            previousWasEscapeCharacter = (c == fEscapeCharacter);\n+        }\n+        if (fBreaksOnEOF) {\n+            return true;\n+        }\n+        scanner.unread();\n+        return false;\n+    }\n+}"},{"sha":"75361175b1c096e2df9b7f101df1adfcc485e972","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/editors/htmlhelpers/TextInfo.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTextInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTextInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Feditors%2Fhtmlhelpers%2FTextInfo.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.editors.htmlhelpers;\n+\n+public class TextInfo extends TagInfo {\n+\n+    private String display;\n+    private String text;\n+    private int position;\n+\n+    public TextInfo(final String text, final int position) {\n+        this(text, text, position);\n+    }\n+\n+    public TextInfo(final String display, final String text, final int position) {\n+        super(null, false);\n+        this.display = display;\n+        this.text = text;\n+        this.position = position;\n+    }\n+\n+    public String getDisplayString() {\n+        return this.display;\n+    }\n+\n+    public String getText() {\n+        return this.text;\n+    }\n+\n+    public int getPosition() {\n+        return this.position;\n+    }\n+\n+}"},{"sha":"af970219b025000a77ef0059da9bc41213458b16","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/views/SyncopeView.java","status":"added","additions":534,"deletions":0,"changes":534,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FSyncopeView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FSyncopeView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FSyncopeView.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,534 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.views;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.util.List;\n+import java.util.Scanner;\n+import org.eclipse.swt.widgets.Composite;\n+import org.eclipse.swt.widgets.Display;\n+import org.eclipse.jface.window.Window;\n+import org.eclipse.swt.graphics.Image;\n+import org.eclipse.jface.action.Action;\n+import org.eclipse.jface.action.IMenuListener;\n+import org.eclipse.jface.action.IMenuManager;\n+import org.eclipse.jface.action.IToolBarManager;\n+import org.eclipse.jface.action.MenuManager;\n+import org.eclipse.jface.dialogs.MessageDialog;\n+import org.eclipse.jface.viewers.DoubleClickEvent;\n+import org.eclipse.jface.viewers.IDoubleClickListener;\n+import org.eclipse.jface.viewers.ISelection;\n+import org.eclipse.jface.viewers.IStructuredContentProvider;\n+import org.eclipse.jface.viewers.IStructuredSelection;\n+import org.eclipse.jface.viewers.ITreeContentProvider;\n+import org.eclipse.jface.viewers.LabelProvider;\n+import org.eclipse.jface.viewers.TreeViewer;\n+import org.eclipse.jface.viewers.Viewer;\n+import org.eclipse.jface.viewers.ViewerSorter;\n+import org.eclipse.swt.widgets.Menu;\n+import org.eclipse.swt.widgets.Shell;\n+import org.eclipse.ui.IActionBars;\n+import org.eclipse.ui.ISharedImages;\n+import org.eclipse.ui.PartInitException;\n+import org.eclipse.ui.PlatformUI;\n+import org.eclipse.ui.part.ViewPart;\n+import org.eclipse.swt.SWT;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n+import org.apache.syncope.common.lib.to.ReportTemplateTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+import org.apache.syncope.common.lib.types.ReportTemplateFormat;\n+import org.apache.syncope.common.rest.api.service.MailTemplateService;\n+import org.apache.syncope.common.rest.api.service.ReportTemplateService;\n+import org.apache.syncope.ide.eclipse.plugin.dialogs.AddTemplateDialog;\n+import org.apache.syncope.ide.eclipse.plugin.dialogs.LoginDialog;\n+import org.apache.syncope.ide.eclipse.plugin.editors.TemplateEditor;\n+import org.apache.syncope.ide.eclipse.plugin.editors.TemplateEditorInput;\n+import org.eclipse.core.runtime.IProgressMonitor;\n+import org.eclipse.core.runtime.IStatus;\n+import org.eclipse.core.runtime.Status;\n+import org.eclipse.core.runtime.jobs.Job;\n+\n+public class SyncopeView extends ViewPart {\n+\n+    public static final String ID = \"org.apache.syncope.ide.eclipse.plugin.views.SyncopeView\";\n+\n+    private TreeViewer viewer;\n+    private ViewContentProvider vcp;\n+    private static SyncopeClient SYNCOPE_CLIENT;\n+    private Action loginAction;\n+    private Action refreshAction;\n+    private Action doubleClickAction;\n+    private Action addAction;\n+    private Action readAction;\n+    private Action removeAction;\n+\n+    private static final String MAIL_TEMPLATE_LABEL = \"Mail Templates\";\n+    private static final String REPORT_TEMPLATE_LABEL = \"Report Templates\";\n+    private static final String LOGIN_ACTION_TEXT = \"Login\";\n+    private static final String LOGIN_ACTION_TOOLTIP_TEXT = \"Set Apache Syncope deployment url and login\";\n+    private static final String REFRESH_ACTION_TEXT = \"Refresh\";\n+    private static final String REFRESH_ACTION_TOOLTIP_TEXT = \"Refresh the template listings\";\n+    private static final String READ_ACTION_TEXT = \"View Template\";\n+    private static final String ADD_ACTION_TEXT = \"Add Template\";\n+    private static final String REMOVE_ACTION_TEXT = \"Remove template\";\n+    private static final String LOADING_TEMPLATE_FORMAT_LABEL = \"Loading template data\";\n+    private static final String LOADING_TEMPLATE_LABEL = \"Loading Templates\";\n+    private static final String HELP_TEXT = \"org.apache.syncope.ide.eclipse.plugin.viewer\";\n+    public static final String TEMPLATE_FORMAT_HTML = \"HTML\";\n+    public static final String TEMPLATE_FORMAT_XSL_HTML = \"XSL-HTML\";\n+    public static final String TEMPLATE_FORMAT_CSV = \"CSV\";\n+    public static final String TEMPLATE_FORMAT_XSL_FO = \"XSL-FO\";\n+    public static final String TEMPLATE_FORMAT_TEXT = \"TEXT\";\n+\n+    class ViewContentProvider implements IStructuredContentProvider, ITreeContentProvider {\n+        private TreeParent invisibleRoot;\n+        private String deploymentUrl;\n+        private String username;\n+        private String password;\n+\n+        ViewContentProvider() {\n+            deploymentUrl = \"\";\n+            username = \"\";\n+            password = \"\";\n+        }\n+\n+        ViewContentProvider(final String deploymentUrl, final String username, final String password) {\n+            this.deploymentUrl = deploymentUrl;\n+            this.username = username;\n+            this.password = password;\n+        }\n+\n+        public void inputChanged(final Viewer v, final Object oldInput, final Object newInput) {\n+        }\n+\n+        public void dispose() {\n+        }\n+\n+        public Object[] getElements(final Object parent) {\n+            if (parent.equals(getViewSite())) {\n+                if (invisibleRoot == null) {\n+                    initialize();\n+                }\n+                return getChildren(invisibleRoot);\n+            }\n+            return getChildren(parent);\n+        }\n+\n+        public Object getParent(final Object child) {\n+            if (child instanceof TreeObject) {\n+                return ((TreeObject) child).getParent();\n+            }\n+            return null;\n+        }\n+\n+        public Object[] getChildren(final Object parent) {\n+            if (parent instanceof TreeParent) {\n+                return ((TreeParent) parent).getChildren();\n+            }\n+            return new Object[0];\n+        }\n+\n+        public boolean hasChildren(final Object parent) {\n+            if (parent instanceof TreeParent) {\n+                return ((TreeParent) parent).hasChildren();\n+            }\n+            return false;\n+        }\n+\n+        public void initialize() throws java.security.AccessControlException, javax.ws.rs.ProcessingException {\n+            invisibleRoot = new TreeParent(\"\");\n+\n+            if (this.deploymentUrl != null && !(this.deploymentUrl.equals(\"\")) && this.username != null\n+                    && !(this.username.equals(\"\")) && this.password != null && !(this.password.equals(\"\"))) {\n+                TreeParent p1 = new TreeParent(MAIL_TEMPLATE_LABEL);\n+                TreeParent p2 = new TreeParent(REPORT_TEMPLATE_LABEL);\n+\n+                SYNCOPE_CLIENT = new SyncopeClientFactoryBean().setAddress(this.deploymentUrl).create(this.username,\n+                        this.password);\n+                MailTemplateService mailTemplateService = SYNCOPE_CLIENT.getService(MailTemplateService.class);\n+                List<MailTemplateTO> mailTemplateTOs = mailTemplateService.list();\n+\n+                for (int i = 0; i < mailTemplateTOs.size(); i++) {\n+                    TreeObject obj = new TreeObject(mailTemplateTOs.get(i).getKey());\n+                    p1.addChild(obj);\n+                }\n+                invisibleRoot.addChild(p1);\n+                ReportTemplateService reportTemplateService = SYNCOPE_CLIENT.getService(ReportTemplateService.class);\n+                List<ReportTemplateTO> reportTemplateTOs = reportTemplateService.list();\n+\n+                for (int i = 0; i < reportTemplateTOs.size(); i++) {\n+                    TreeObject obj = new TreeObject(reportTemplateTOs.get(i).getKey());\n+                    p2.addChild(obj);\n+                }\n+                invisibleRoot.addChild(p2);\n+            }\n+        }\n+    }\n+\n+    class ViewLabelProvider extends LabelProvider {\n+\n+        public String getText(final Object obj) {\n+            return obj.toString();\n+        }\n+\n+        public Image getImage(final Object obj) {\n+            String imageKey = ISharedImages.IMG_OBJ_ELEMENT;\n+            if (obj instanceof TreeParent) {\n+                imageKey = ISharedImages.IMG_OBJ_FOLDER;\n+            }\n+            return PlatformUI.getWorkbench().getSharedImages().getImage(imageKey);\n+        }\n+    }\n+\n+    public void createPartControl(final Composite parent) {\n+        viewer = new TreeViewer(parent, SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL);\n+        vcp = new ViewContentProvider();\n+        viewer.setContentProvider(vcp);\n+        viewer.setLabelProvider(new ViewLabelProvider());\n+        viewer.setSorter(new ViewerSorter());\n+        viewer.setInput(getViewSite());\n+\n+        // Create the help context id for the viewer's control\n+        PlatformUI.getWorkbench().getHelpSystem().setHelp(viewer.getControl(), HELP_TEXT);\n+        makeActions();\n+        hookContextMenu();\n+        hookDoubleClickAction();\n+        contributeToActionBars();\n+    }\n+\n+    private void hookContextMenu() {\n+        MenuManager menuMgr = new MenuManager(\"#PopupMenu\");\n+        menuMgr.setRemoveAllWhenShown(true);\n+        menuMgr.addMenuListener(new IMenuListener() {\n+            public void menuAboutToShow(final IMenuManager manager) {\n+                SyncopeView.this.fillContextMenu(manager);\n+            }\n+        });\n+        Menu menu = menuMgr.createContextMenu(viewer.getControl());\n+        viewer.getControl().setMenu(menu);\n+        getSite().registerContextMenu(menuMgr, viewer);\n+    }\n+\n+    private void contributeToActionBars() {\n+        IActionBars bars = getViewSite().getActionBars();\n+        fillLocalPullDown(bars.getMenuManager());\n+        fillLocalToolBar(bars.getToolBarManager());\n+    }\n+\n+    private void fillLocalPullDown(final IMenuManager manager) {\n+        manager.add(loginAction);\n+    }\n+\n+    private void fillContextMenu(final IMenuManager manager) {\n+\n+        ISelection selection = viewer.getSelection();\n+        Object obj = ((IStructuredSelection) selection).getFirstElement();\n+        if (obj instanceof TreeParent) {\n+            manager.add(addAction);\n+        } else {\n+            manager.add(readAction);\n+            manager.add(removeAction);\n+        }\n+    }\n+\n+    private void fillLocalToolBar(final IToolBarManager manager) {\n+        manager.add(loginAction);\n+        refreshAction.setEnabled(false);\n+        manager.add(refreshAction);\n+    }\n+\n+    private void makeActions() {\n+        loginAction = new Action() {\n+            public void run() {\n+                Shell shell = viewer.getControl().getShell();\n+                LoginDialog dialog = new LoginDialog(shell);\n+                dialog.create();\n+                if (dialog.open() == Window.OK) {\n+                    String deploymentUrl = dialog.getDeploymentUrl();\n+                    String username = dialog.getUsername();\n+                    String password = dialog.getPassword();\n+\n+                    vcp.deploymentUrl = deploymentUrl;\n+                    vcp.username = username;\n+                    vcp.password = password;\n+\n+                    updateTreeViewer();\n+                }\n+            }\n+        };\n+        loginAction.setText(LOGIN_ACTION_TEXT);\n+        loginAction.setToolTipText(LOGIN_ACTION_TOOLTIP_TEXT);\n+\n+        refreshAction = new Action() {\n+            public void run() {\n+                updateTreeViewer();\n+            }\n+        };\n+        refreshAction.setText(REFRESH_ACTION_TEXT);\n+        refreshAction.setToolTipText(REFRESH_ACTION_TOOLTIP_TEXT);\n+\n+        doubleClickAction = new Action() {\n+            public void run() {\n+                ISelection selection = viewer.getSelection();\n+                Object obj = ((IStructuredSelection) selection).getFirstElement();\n+                if (!(obj instanceof TreeParent)) {\n+                    openTemplateInEditor((TreeObject) obj);\n+                } else {\n+                    viewer.expandToLevel(obj, 1);\n+                }\n+            }\n+        };\n+\n+        readAction = new Action() {\n+            public void run() {\n+                ISelection selection = viewer.getSelection();\n+                TreeObject obj = (TreeObject) ((IStructuredSelection) selection).getFirstElement();\n+                openTemplateInEditor(obj);\n+            }\n+        };\n+        readAction.setText(READ_ACTION_TEXT);\n+\n+        addAction = new Action() {\n+            public void run() {\n+                ISelection selection = viewer.getSelection();\n+                TreeParent tp = (TreeParent) ((IStructuredSelection) selection).getFirstElement();\n+                Shell shell = viewer.getControl().getShell();\n+                AddTemplateDialog addTemplateDialog = new AddTemplateDialog(shell);\n+                addTemplateDialog.create();\n+                if (addTemplateDialog.open() == Window.OK) {\n+                    String key = addTemplateDialog.getKey();\n+                    try {\n+                        if (tp.getName().equals(MAIL_TEMPLATE_LABEL)) {\n+                            MailTemplateService mailTemplateService = SYNCOPE_CLIENT\n+                                    .getService(MailTemplateService.class);\n+                            MailTemplateTO mtto = new MailTemplateTO();\n+                            mtto.setKey(key);\n+                            mailTemplateService.create(mtto);\n+                        } else if (tp.getName().equals(REPORT_TEMPLATE_LABEL)) {\n+                            ReportTemplateService reportTemplateService = SYNCOPE_CLIENT\n+                                    .getService(ReportTemplateService.class);\n+                            ReportTemplateTO rtto = new ReportTemplateTO();\n+                            rtto.setKey(key);\n+                            reportTemplateService.create(rtto);\n+                        }\n+                        updateTreeViewer();\n+                    } catch (final SyncopeClientException e) {\n+                        if (e.toString().contains(\"EntityExists\")) {\n+                            MessageDialog.openError(shell, \"Template already exists\",\n+                                    \"A template named \" + key + \" already exists.\");\n+                        }\n+                    }\n+                }\n+            }\n+        };\n+        addAction.setText(ADD_ACTION_TEXT);\n+\n+        removeAction = new Action() {\n+            public void run() {\n+                ISelection selection = viewer.getSelection();\n+                TreeObject obj = (TreeObject) ((IStructuredSelection) selection).getFirstElement();\n+                TreeParent tp = (TreeParent) vcp.getParent(obj);\n+                if (tp.getName().equals(MAIL_TEMPLATE_LABEL)) {\n+                    MailTemplateService mailTemplateService = SYNCOPE_CLIENT.getService(\n+                        MailTemplateService.class);\n+                    mailTemplateService.delete(obj.getName());\n+                } else if (tp.getName().equals(REPORT_TEMPLATE_LABEL)) {\n+                    ReportTemplateService reportTemplateService = SYNCOPE_CLIENT.getService(\n+                        ReportTemplateService.class);\n+                    reportTemplateService.delete(obj.getName());\n+                }\n+                updateTreeViewer();\n+            }\n+        };\n+        removeAction.setText(REMOVE_ACTION_TEXT);\n+    }\n+\n+    protected void openTemplateInEditor(final TreeObject obj) {\n+        TreeParent tp = (TreeParent) vcp.getParent(obj);\n+        if (tp.getName().equals(MAIL_TEMPLATE_LABEL)) {\n+            final MailTemplateService mailTemplateService = SYNCOPE_CLIENT.getService(\n+                MailTemplateService.class);\n+            final String[] templateData = new String[2];\n+            final String[] editorTitles = { TEMPLATE_FORMAT_HTML, TEMPLATE_FORMAT_TEXT };\n+            final String[] editorToolTips = { obj.getName(), obj.getName() };\n+            Job job = new Job(LOADING_TEMPLATE_FORMAT_LABEL) {\n+                @Override\n+                protected IStatus run(final IProgressMonitor arg0) {\n+                    templateData[0] = getStringFromTemplate(\n+                        mailTemplateService, obj.getName(), MailTemplateFormat.HTML);\n+                    templateData[1] = getStringFromTemplate(\n+                        mailTemplateService, obj.getName(), MailTemplateFormat.TEXT);\n+                    Display.getDefault().syncExec(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            try {\n+                                getViewSite().getPage().openEditor(new TemplateEditorInput(\n+                                    templateData, editorTitles, editorToolTips), TemplateEditor.ID);\n+                            } catch (final PartInitException e) {\n+                                e.printStackTrace();\n+                            }\n+                        }\n+                    });\n+                    return Status.OK_STATUS;\n+                }\n+                private String getStringFromTemplate(final MailTemplateService mailTemplateService,\n+                    final String name, final MailTemplateFormat format) {\n+                    try {\n+                        InputStream inpstream = (InputStream) (mailTemplateService.getFormat(name, format))\n+                            .getEntity();\n+                        Scanner sc = new Scanner(inpstream);\n+                        String templateContent = sc.nextLine();\n+                        while (sc.hasNext()) {\n+                            templateContent += \"\\n\" + sc.nextLine();\n+                        }\n+                        sc.close();\n+                        return (templateContent);\n+                    } catch (final SyncopeClientException e) {\n+                        if (ClientExceptionType.NotFound.equals(e.getType())) {\n+                            return \"\";\n+                        }\n+                    }\n+                    return null;\n+                }\n+            };\n+            job.setUser(true);\n+            job.schedule();\n+\n+        } else if (tp.getName().equals(REPORT_TEMPLATE_LABEL)) {\n+            final ReportTemplateService reportTemplateService = SYNCOPE_CLIENT.getService(\n+                ReportTemplateService.class);\n+            final String[] templateData = new String[3];\n+            final String[] editorTitles = { TEMPLATE_FORMAT_CSV, TEMPLATE_FORMAT_XSL_FO, TEMPLATE_FORMAT_XSL_HTML };\n+            final String[] editorToolTips = { obj.getName(), obj.getName(), obj.getName() };\n+            Job job = new Job(LOADING_TEMPLATE_FORMAT_LABEL) {\n+                @Override\n+                protected IStatus run(final IProgressMonitor arg0) {\n+                    templateData[0] = getStringFromTemplate(reportTemplateService, obj.getName(),\n+                        ReportTemplateFormat.CSV);\n+                    templateData[1] = getStringFromTemplate(reportTemplateService, obj.getName(),\n+                        ReportTemplateFormat.FO);\n+                    templateData[2] = getStringFromTemplate(reportTemplateService, obj.getName(),\n+                        ReportTemplateFormat.HTML);\n+                    Display.getDefault().syncExec(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            try {\n+                                getViewSite().getPage().openEditor(new TemplateEditorInput(\n+                                    templateData, editorTitles, editorToolTips),\n+                                        TemplateEditor.ID);\n+                            } catch (final PartInitException e) {\n+                                e.printStackTrace();\n+                            }\n+                        }\n+                    });\n+                    return Status.OK_STATUS;\n+                }\n+                private String getStringFromTemplate(final ReportTemplateService reportTemplateService,\n+                    final String name, final ReportTemplateFormat format) {\n+                    try {\n+                        InputStream inpstream = (InputStream) (reportTemplateService.getFormat(name, format))\n+                            .getEntity();\n+                        Scanner sc = new Scanner(inpstream);\n+                        String templateContent = sc.nextLine();\n+                        while (sc.hasNext()) {\n+                            templateContent += \"\\n\" + sc.nextLine();\n+                        }\n+                        sc.close();\n+                        return (templateContent);\n+                    } catch (final SyncopeClientException e) {\n+                        if (ClientExceptionType.NotFound.equals(e.getType())) {\n+                            return \"\";\n+                        }\n+                    }\n+                    return null;\n+                }\n+            };\n+            job.setUser(true);\n+            job.schedule();\n+        }\n+    }\n+\n+    private void updateTreeViewer() {\n+        final Display display = Display.getDefault();\n+        Job job = new Job(LOADING_TEMPLATE_LABEL) {\n+            @Override\n+            protected IStatus run(final IProgressMonitor monitor) {\n+                try {\n+                    vcp.initialize();\n+                } catch (final Exception e) {\n+                    display.syncExec(new Runnable() {\n+                        public void run() {\n+                            Shell shell = viewer.getControl().getShell();\n+                            if (e instanceof java.security.AccessControlException) {\n+                                MessageDialog.openError(shell, \"Incorrect Credentials\",\n+                                        \"Unable to authenticate \" + vcp.username);\n+                            } else if (e instanceof javax.ws.rs.ProcessingException) {\n+                                MessageDialog.openError(shell, \"Incorrect Url\",\n+                                        \"Unable to find apache syncope at \" + vcp.deploymentUrl);\n+                            } else if (e instanceof javax.xml.ws.WebServiceException) {\n+                                MessageDialog.openError(shell, \"Invalid Url\", \"Not a valid url \" + vcp.username);\n+                            } else {\n+                                e.printStackTrace();\n+                            }\n+                        }\n+                    });\n+                } finally {\n+                    display.syncExec(new Runnable() {\n+                        public void run() {\n+                            refreshAction.setEnabled(true);\n+                            SyncopeView.this.viewer.refresh();\n+                        }\n+                    });\n+                }\n+                return Status.OK_STATUS;\n+            }\n+        };\n+        job.setUser(true);\n+        job.schedule();\n+    }\n+\n+    private void hookDoubleClickAction() {\n+        viewer.addDoubleClickListener(new IDoubleClickListener() {\n+            public void doubleClick(final DoubleClickEvent event) {\n+                doubleClickAction.run();\n+            }\n+        });\n+    }\n+\n+    public void setFocus() {\n+        viewer.getControl().setFocus();\n+    }\n+\n+    public static void setMailTemplateContent(final String key, final MailTemplateFormat format,\n+        final String content) {\n+        MailTemplateService mailTemplateService = SYNCOPE_CLIENT.getService(MailTemplateService.class);\n+        mailTemplateService.setFormat(key, format, new ByteArrayInputStream(content.getBytes()));\n+    }\n+    public static void setReportTemplateContent(final String key, final ReportTemplateFormat format,\n+        final String content) {\n+        ReportTemplateService reportTemplateService = SYNCOPE_CLIENT.getService(ReportTemplateService.class);\n+        reportTemplateService.setFormat(key, format, new ByteArrayInputStream(content.getBytes()));\n+    }\n+\n+}"},{"sha":"36b1a8ba316b3dbdee9b2f465803f0ca356df353","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/views/TreeObject.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FTreeObject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FTreeObject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FTreeObject.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.views;\n+\n+public class TreeObject {\n+    private String name;\n+    private TreeParent parent;\n+\n+    TreeObject(final String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setParent(final TreeParent parent) {\n+        this.parent = parent;\n+    }\n+\n+    public TreeParent getParent() {\n+        return parent;\n+    }\n+\n+    public String toString() {\n+        return getName();\n+    }\n+}"},{"sha":"d82c444536dd0a66e7b7f42453de8403f7c004b0","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/java/org/apache/syncope/ide/eclipse/plugin/views/TreeParent.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FTreeParent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FTreeParent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fide%2Feclipse%2Fplugin%2Fviews%2FTreeParent.java?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ide.eclipse.plugin.views;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+class TreeParent extends TreeObject {\n+    private List<TreeObject> children;\n+\n+    TreeParent(final String name) {\n+        super(name);\n+        children = new ArrayList<TreeObject>();\n+    }\n+\n+    public void addChild(final TreeObject child) {\n+        children.add(child);\n+        child.setParent(this);\n+    }\n+\n+    public void removeChild(final TreeObject child) {\n+        children.remove(child);\n+        child.setParent(null);\n+    }\n+\n+    public TreeObject[] getChildren() {\n+        return (TreeObject[]) children.toArray(new TreeObject[children.size()]);\n+    }\n+\n+    public boolean hasChildren() {\n+        return children.size() > 0;\n+    }\n+}"},{"sha":"0936395e75cdc13ca3f9cd380ec3f5640848520e","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/src/main/resources/icons/syncope.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fresources%2Ficons%2Fsyncope.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fresources%2Ficons%2Fsyncope.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fsrc%2Fmain%2Fresources%2Ficons%2Fsyncope.png?ref=6fee50d752f655c6fbef22ecdf24b27025e661af"},{"sha":"e87a1092a21f20a8fc5c83c7a575a11ac8455a69","filename":"ide/eclipse/pom.xml","status":"added","additions":120,"deletions":0,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fpom.xml?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,120 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-ide</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope IDE Eclipse</name>\n+  <description>Apache Syncope IDE Eclipse</description>\n+  <groupId>org.apache.syncope.ide</groupId>\n+  <artifactId>syncope-ide-eclipse</artifactId>\n+  <packaging>pom</packaging>\n+\n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+\n+  <modules>\n+    <module>bundles/org.apache.syncope.ide.eclipse.plugin</module>\n+    <module>releng/org.apache.syncope.ide.eclipse.site</module>\n+  </modules>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.eclipse.tycho</groupId>\n+        <artifactId>tycho-maven-plugin</artifactId>\n+        <extensions>true</extensions>\n+      </plugin>\n+      \n+      <plugin>\n+        <groupId>org.eclipse.tycho</groupId>\n+        <artifactId>target-platform-configuration</artifactId>\n+        <configuration>\n+          <!--          <pomDependencies>consider</pomDependencies>-->\n+          <environments>\n+            <environment>\n+              <os>linux</os>\n+              <ws>gtk</ws>\n+              <arch>x86</arch>\n+            </environment>\n+            <environment>\n+              <os>linux</os>\n+              <ws>gtk</ws>\n+              <arch>x86_64</arch>\n+            </environment>\n+            <environment>\n+              <os>win32</os>\n+              <ws>win32</ws>\n+              <arch>x86</arch>\n+            </environment>\n+            <environment>\n+              <os>win32</os>\n+              <ws>win32</ws>\n+              <arch>x86_64</arch>\n+            </environment>\n+            <environment>\n+              <os>macosx</os>\n+              <ws>cocoa</ws>\n+              <arch>x86_64</arch>\n+            </environment>\n+          </environments>\n+        </configuration>\n+      </plugin>\n+      \n+      <plugin>\n+        <groupId>org.eclipse.tycho</groupId>\n+        <artifactId>tycho-p2-repository-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+  \n+  <profiles>\n+    <profile>\n+      <id>apache-release</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-deploy-plugin</artifactId>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-source-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skipSource>true</skipSource>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+</project>\n\\ No newline at end of file"},{"sha":"83c846ad3d9ba646d360d9f5e329e3e413af8785","filename":"ide/eclipse/releng/org.apache.syncope.ide.eclipse.site/category.xml","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Freleng%2Forg.apache.syncope.ide.eclipse.site%2Fcategory.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Freleng%2Forg.apache.syncope.ide.eclipse.site%2Fcategory.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Freleng%2Forg.apache.syncope.ide.eclipse.site%2Fcategory.xml?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<site>\n+   <bundle id=\"org.apache.syncope.ide.eclipse.plugin\" version=\"2.0.0.qualifier\">\n+      <category name=\"apachesyncope\"/>\n+   </bundle>\n+   <category-def name=\"apachesyncope\" label=\"Apache Syncope\">\n+      <description>\n+         Eclipse Plugin for Apache Syncope : Allows user to view and edit Mail Templates and Report Templates from Eclipse itself\n+      </description>\n+   </category-def>\n+</site>\n\\ No newline at end of file"},{"sha":"bd34f330c1a8e3a828afe493981f1b8ea7a8d5c3","filename":"ide/eclipse/releng/org.apache.syncope.ide.eclipse.site/pom.xml","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Freleng%2Forg.apache.syncope.ide.eclipse.site%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Feclipse%2Freleng%2Forg.apache.syncope.ide.eclipse.site%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Freleng%2Forg.apache.syncope.ide.eclipse.site%2Fpom.xml?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,66 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ide</groupId>\n+    <artifactId>syncope-ide-eclipse</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+    <relativePath>../../</relativePath>\n+  </parent>\n+\n+  <name>Apache Syncope IDE Eclipse P2 Site</name>\n+  <description>Apache Syncope IDE Eclipse P2 Site</description>\n+  <groupId>org.apache.syncope.ide.eclipse</groupId>\n+  <artifactId>org.apache.syncope.ide.eclipse.site</artifactId>\n+  <packaging>eclipse-repository</packaging>\n+\n+  <properties>\n+    <rootpom.basedir>${basedir}/../../../..</rootpom.basedir>\n+  </properties>\n+\n+  <profiles>\n+    <profile>\n+      <id>apache-release</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-deploy-plugin</artifactId>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-source-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skipSource>true</skipSource>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+</project>"},{"sha":"d2f108198958d9b8d27f99c1f097c1e1281dd1dd","filename":"ide/pom.xml","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/ide%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Fpom.xml?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -0,0 +1,69 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope IDE</name>\n+  <description>Apache Syncope IDE</description>\n+  <groupId>org.apache.syncope</groupId>\n+  <artifactId>syncope-ide</artifactId>\n+  <packaging>pom</packaging>\n+\n+  <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+  </properties>\n+\n+  <modules>\n+    <module>eclipse</module>\n+  </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>apache-release</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-deploy-plugin</artifactId>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-source-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skipSource>true</skipSource>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+</project>\n\\ No newline at end of file"},{"sha":"3768c3d589b67c8c5f09e78fe1706d354dfbe46b","filename":"pom.xml","status":"modified","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6fee50d752f655c6fbef22ecdf24b27025e661af/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6fee50d752f655c6fbef22ecdf24b27025e661af/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=6fee50d752f655c6fbef22ecdf24b27025e661af","patch":"@@ -430,6 +430,7 @@ under the License.\n     <izpack.version>5.0.9</izpack.version>\n     <httpclient.version>4.3.6</httpclient.version>\n     <maven-invoker.version>2.1.1</maven-invoker.version>\n+    <tycho-version>0.23.1</tycho-version>\n \n     <testds.port>1389</testds.port>\n     <testdb.webport>9082</testdb.webport>\n@@ -461,6 +462,7 @@ under the License.\n     <targetJdk>1.7</targetJdk>\n     <rootpom.basedir>${basedir}</rootpom.basedir>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\n   </properties>\n \n   <dependencyManagement>\n@@ -1333,6 +1335,11 @@ under the License.\n         <enabled>true</enabled>\n       </snapshots>\n     </repository>\n+    <repository>\n+      <id>eclipse-mars</id>\n+      <layout>p2</layout>\n+      <url>http://download.eclipse.org/releases/mars/</url>\n+    </repository>\n   </repositories>\n \n   <pluginRepositories>\n@@ -1547,6 +1554,23 @@ under the License.\n           <artifactId>izpack-maven-plugin</artifactId>\n           <version>${izpack.version}</version>\n         </plugin>\n+        \n+        <plugin>\n+          <groupId>org.eclipse.tycho</groupId>\n+          <artifactId>tycho-maven-plugin</artifactId>\n+          <version>${tycho-version}</version>\n+          <extensions>true</extensions>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.eclipse.tycho</groupId>\n+          <artifactId>target-platform-configuration</artifactId>\n+          <version>${tycho-version}</version>\n+        </plugin>\n+        <plugin>\n+          <groupId>org.eclipse.tycho</groupId>\n+          <artifactId>tycho-p2-repository-plugin</artifactId>\n+          <version>${tycho-version}</version>\n+        </plugin>                \n       </plugins>\n     </pluginManagement>\n \n@@ -2048,6 +2072,7 @@ under the License.\n     <module>standalone</module>\n     <module>deb</module>\n     <module>installer</module>\n+    <module>ide</module>\n   </modules>\n \n </project>"}]}