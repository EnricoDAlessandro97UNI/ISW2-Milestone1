{"sha":"569b1b322f0364bc865902d595846a613f393b7a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU2OWIxYjMyMmYwMzY0YmM4NjU5MDJkNTk1ODQ2YTYxM2YzOTNiN2E=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-12-03T12:00:28Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-12-03T12:01:09Z"},"message":"[SYNCOPE-1405] Managing views.xml depending on the actual DBMS","tree":{"sha":"b06f81f649546a35643ff4b2eccee8c5e18e0e47","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b06f81f649546a35643ff4b2eccee8c5e18e0e47"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/569b1b322f0364bc865902d595846a613f393b7a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/569b1b322f0364bc865902d595846a613f393b7a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/569b1b322f0364bc865902d595846a613f393b7a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/569b1b322f0364bc865902d595846a613f393b7a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8a35832197036b8b96f4d21f6890fb5e7f2cbb6c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8a35832197036b8b96f4d21f6890fb5e7f2cbb6c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8a35832197036b8b96f4d21f6890fb5e7f2cbb6c"}],"stats":{"total":1079,"additions":1077,"deletions":2},"files":[{"sha":"656019f141f8600ae2ef2a73399409648917861e","filename":"docker/core/src/main/resources/Dockerfile","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=569b1b322f0364bc865902d595846a613f393b7a","patch":"@@ -25,6 +25,7 @@ COPY *.jar /tmp/\n COPY *.deb /tmp/\n \n COPY provisioning.properties.* /etc/apache-syncope/\n+COPY views.xml.* /etc/apache-syncope/\n COPY *.properties /etc/apache-syncope/\n COPY Master.properties.* /etc/apache-syncope/domains/\n "},{"sha":"8c11ad94f62a6b87aea70b5103be706bc4691ac3","filename":"docker/core/src/main/resources/startup.sh","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh?ref=569b1b322f0364bc865902d595846a613f393b7a","patch":"@@ -18,11 +18,13 @@\n # under the License.\n \n cd /etc/apache-syncope\n-rm provisioning.properties\n+rm -f provisioning.properties\n ln -s provisioning.properties.$DBMS provisioning.properties\n+rm -f views.xml\n+ln -s views.xml.$DBMS views.xml\n \n cd domains\n-rm Master.properties\n+rm -f Master.properties\n ln -s Master.properties.$DBMS Master.properties\n \n /etc/init.d/tomcat8 start"},{"sha":"e8e9a2177d4c4d7846623a606659a770082a8d77","filename":"docker/core/src/main/resources/views.xml.mariadb","status":"added","additions":268,"deletions":0,"changes":268,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mariadb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mariadb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mariadb?ref=569b1b322f0364bc865902d595846a613f393b7a","patch":"@@ -0,0 +1,268 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n+<properties>\n+  \n+  <entry key=\"UDynGroupMembers\">\n+    CREATE TABLE UDynGroupMembers(\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(any_id, group_id))\n+  </entry>\n+  <entry key=\"ADynGroupMembers\">\n+    CREATE TABLE ADynGroupMembers(\n+    anyType_id VARCHAR(255),\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(anyType_id, any_id, group_id))\n+  </entry>\n+  <entry key=\"DynRoleMembers\">\n+    CREATE TABLE DynRoleMembers(\n+    any_id CHAR(36),\n+    role_id VARCHAR(255),\n+    UNIQUE(any_id, role_id))\n+  </entry>\n+  <entry key=\"DynRealmMembers\">\n+    CREATE TABLE DynRealmMembers(\n+    any_id CHAR(36),\n+    dynRealm_id VARCHAR(255),\n+    UNIQUE(any_id, dynRealm_id))\n+  </entry>\n+\n+  <!-- user -->\n+  <entry key=\"user_search\">\n+    CREATE VIEW user_search AS\n+ \n+    SELECT u.id as any_id, u.* FROM SyncopeUser u\n+  </entry>\n+  <entry key=\"user_search_unique_attr\">\n+    CREATE VIEW user_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_attr\">\n+    CREATE VIEW user_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_null_attr\">\n+    CREATE VIEW user_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    NULL AS datevalue,\n+    NULL AS doublevalue,\n+    NULL AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeUser u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"user_search_urelationship\">\n+    CREATE VIEW user_search_urelationship AS\n+\n+    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n+    FROM URelationship m\n+  </entry>\n+  <entry key=\"user_search_umembership\">\n+    CREATE VIEW user_search_umembership AS\n+\n+    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM UMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"user_search_role\">\n+    CREATE VIEW user_search_role AS\n+\n+    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n+    FROM SyncopeUser_SyncopeRole ss\n+  </entry>\n+  <entry key=\"user_search_priv\">\n+    CREATE VIEW user_search_priv AS\n+\n+    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n+    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n+    WHERE ss.role_id = sp.role_id\n+  </entry>\n+  <entry key=\"user_search_dynpriv\">\n+    CREATE VIEW user_search_dynpriv AS\n+\n+    SELECT any_id, privilege_id\n+    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n+    WHERE drm.role_id = rp.role_id\n+  </entry>\n+  <entry key=\"user_search_resource\">\n+    CREATE VIEW user_search_resource AS\n+\n+    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeUser_ExternalResource st\n+  </entry>\n+  <entry key=\"user_search_group_res\">\n+    CREATE VIEW user_search_group_res AS\n+\n+    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n+    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- anyObject -->\n+  <entry key=\"anyObject_search\">\n+    CREATE VIEW anyObject_search AS\n+ \n+    SELECT a.id as any_id, a.* FROM AnyObject a\n+  </entry>\n+  <entry key=\"anyObject_search_unique_attr\">\n+    CREATE VIEW anyObject_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrUniqueValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_attr\">\n+    CREATE VIEW anyObject_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_null_attr\">\n+    CREATE VIEW anyObject_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    NULL AS datevalue,\n+    NULL AS doublevalue,\n+    NULL AS longvalue,\n+    NULL AS stringvalue\n+    FROM AnyObject u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"anyObject_search_arelationship\">\n+    CREATE VIEW anyObject_search_arelationship AS\n+\n+    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n+    FROM ARelationship m\n+  </entry>\n+  <entry key=\"anyObject_search_amembership\">\n+    CREATE VIEW anyObject_search_amembership AS\n+\n+    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM AMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"anyObject_search_resource\">\n+    CREATE VIEW anyObject_search_resource AS\n+\n+    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AnyObject_ExternalResource st\n+  </entry>\n+  <entry key=\"anyObject_search_group_res\">\n+    CREATE VIEW anyObject_search_group_res AS\n+\n+    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- group -->\n+  <entry key=\"group_search\">\n+    CREATE VIEW group_search AS\n+ \n+    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n+  </entry>\n+  <entry key=\"group_search_unique_attr\">\n+    CREATE VIEW group_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_attr\">\n+    CREATE VIEW group_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_null_attr\">\n+    CREATE VIEW group_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    NULL AS datevalue,\n+    NULL AS doublevalue,\n+    NULL AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeGroup u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"group_search_resource\">\n+    CREATE VIEW group_search_resource AS\n+\n+    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeGroup_ExternalResource st\n+  </entry>\n+\n+</properties>\n\\ No newline at end of file"},{"sha":"ab6be98640a00c6176b1e283a979836a6a8b290d","filename":"docker/core/src/main/resources/views.xml.mssql","status":"added","additions":268,"deletions":0,"changes":268,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mssql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mssql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mssql?ref=569b1b322f0364bc865902d595846a613f393b7a","patch":"@@ -0,0 +1,268 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n+<properties>\n+  \n+  <entry key=\"UDynGroupMembers\">\n+    CREATE TABLE UDynGroupMembers(\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(any_id, group_id))\n+  </entry>\n+  <entry key=\"ADynGroupMembers\">\n+    CREATE TABLE ADynGroupMembers(\n+    anyType_id VARCHAR(255),\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(anyType_id, any_id, group_id))\n+  </entry>\n+  <entry key=\"DynRoleMembers\">\n+    CREATE TABLE DynRoleMembers(\n+    any_id CHAR(36),\n+    role_id VARCHAR(255),\n+    UNIQUE(any_id, role_id))\n+  </entry>\n+  <entry key=\"DynRealmMembers\">\n+    CREATE TABLE DynRealmMembers(\n+    any_id CHAR(36),\n+    dynRealm_id VARCHAR(255),\n+    UNIQUE(any_id, dynRealm_id))\n+  </entry>\n+\n+  <!-- user -->\n+  <entry key=\"user_search\">\n+    CREATE VIEW user_search AS\n+ \n+    SELECT u.id as any_id, u.* FROM SyncopeUser u\n+  </entry>\n+  <entry key=\"user_search_unique_attr\">\n+    CREATE VIEW user_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_attr\">\n+    CREATE VIEW user_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_null_attr\">\n+    CREATE VIEW user_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    CAST (NULL AS DATETIME2) datevalue,\n+    CAST (NULL AS FLOAT) doublevalue,\n+    CAST (NULL AS BIGINT) longvalue,\n+    CAST (NULL AS VARCHAR(255)) AS stringvalue\n+    FROM SyncopeUser u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"user_search_urelationship\">\n+    CREATE VIEW user_search_urelationship AS\n+\n+    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n+    FROM URelationship m\n+  </entry>\n+  <entry key=\"user_search_umembership\">\n+    CREATE VIEW user_search_umembership AS\n+\n+    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM UMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"user_search_role\">\n+    CREATE VIEW user_search_role AS\n+\n+    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n+    FROM SyncopeUser_SyncopeRole ss\n+  </entry>\n+  <entry key=\"user_search_priv\">\n+    CREATE VIEW user_search_priv AS\n+\n+    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n+    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n+    WHERE ss.role_id = sp.role_id\n+  </entry>\n+  <entry key=\"user_search_dynpriv\">\n+    CREATE VIEW user_search_dynpriv AS\n+\n+    SELECT any_id, privilege_id\n+    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n+    WHERE drm.role_id = rp.role_id\n+  </entry>\n+  <entry key=\"user_search_resource\">\n+    CREATE VIEW user_search_resource AS\n+\n+    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeUser_ExternalResource st\n+  </entry>\n+  <entry key=\"user_search_group_res\">\n+    CREATE VIEW user_search_group_res AS\n+\n+    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n+    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- anyObject -->\n+  <entry key=\"anyObject_search\">\n+    CREATE VIEW anyObject_search AS\n+ \n+    SELECT a.id as any_id, a.* FROM AnyObject a\n+  </entry>\n+  <entry key=\"anyObject_search_unique_attr\">\n+    CREATE VIEW anyObject_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrUniqueValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_attr\">\n+    CREATE VIEW anyObject_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_null_attr\">\n+    CREATE VIEW anyObject_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    CAST (NULL AS DATETIME2) datevalue,\n+    CAST (NULL AS FLOAT) doublevalue,\n+    CAST (NULL AS BIGINT) longvalue,\n+    CAST (NULL AS VARCHAR(255)) AS stringvalue\n+    FROM AnyObject u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"anyObject_search_arelationship\">\n+    CREATE VIEW anyObject_search_arelationship AS\n+\n+    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n+    FROM ARelationship m\n+  </entry>\n+  <entry key=\"anyObject_search_amembership\">\n+    CREATE VIEW anyObject_search_amembership AS\n+\n+    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM AMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"anyObject_search_resource\">\n+    CREATE VIEW anyObject_search_resource AS\n+\n+    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AnyObject_ExternalResource st\n+  </entry>\n+  <entry key=\"anyObject_search_group_res\">\n+    CREATE VIEW anyObject_search_group_res AS\n+\n+    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- group -->\n+  <entry key=\"group_search\">\n+    CREATE VIEW group_search AS\n+ \n+    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n+  </entry>\n+  <entry key=\"group_search_unique_attr\">\n+    CREATE VIEW group_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_attr\">\n+    CREATE VIEW group_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_null_attr\">\n+    CREATE VIEW group_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    CAST (NULL AS DATETIME2) datevalue,\n+    CAST (NULL AS FLOAT) doublevalue,\n+    CAST (NULL AS BIGINT) longvalue,\n+    CAST (NULL AS VARCHAR(255)) AS stringvalue\n+    FROM SyncopeGroup u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"group_search_resource\">\n+    CREATE VIEW group_search_resource AS\n+\n+    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeGroup_ExternalResource st\n+  </entry>\n+\n+</properties>"},{"sha":"e8e9a2177d4c4d7846623a606659a770082a8d77","filename":"docker/core/src/main/resources/views.xml.mysql","status":"added","additions":268,"deletions":0,"changes":268,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mysql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mysql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.mysql?ref=569b1b322f0364bc865902d595846a613f393b7a","patch":"@@ -0,0 +1,268 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n+<properties>\n+  \n+  <entry key=\"UDynGroupMembers\">\n+    CREATE TABLE UDynGroupMembers(\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(any_id, group_id))\n+  </entry>\n+  <entry key=\"ADynGroupMembers\">\n+    CREATE TABLE ADynGroupMembers(\n+    anyType_id VARCHAR(255),\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(anyType_id, any_id, group_id))\n+  </entry>\n+  <entry key=\"DynRoleMembers\">\n+    CREATE TABLE DynRoleMembers(\n+    any_id CHAR(36),\n+    role_id VARCHAR(255),\n+    UNIQUE(any_id, role_id))\n+  </entry>\n+  <entry key=\"DynRealmMembers\">\n+    CREATE TABLE DynRealmMembers(\n+    any_id CHAR(36),\n+    dynRealm_id VARCHAR(255),\n+    UNIQUE(any_id, dynRealm_id))\n+  </entry>\n+\n+  <!-- user -->\n+  <entry key=\"user_search\">\n+    CREATE VIEW user_search AS\n+ \n+    SELECT u.id as any_id, u.* FROM SyncopeUser u\n+  </entry>\n+  <entry key=\"user_search_unique_attr\">\n+    CREATE VIEW user_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_attr\">\n+    CREATE VIEW user_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_null_attr\">\n+    CREATE VIEW user_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    NULL AS datevalue,\n+    NULL AS doublevalue,\n+    NULL AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeUser u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"user_search_urelationship\">\n+    CREATE VIEW user_search_urelationship AS\n+\n+    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n+    FROM URelationship m\n+  </entry>\n+  <entry key=\"user_search_umembership\">\n+    CREATE VIEW user_search_umembership AS\n+\n+    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM UMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"user_search_role\">\n+    CREATE VIEW user_search_role AS\n+\n+    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n+    FROM SyncopeUser_SyncopeRole ss\n+  </entry>\n+  <entry key=\"user_search_priv\">\n+    CREATE VIEW user_search_priv AS\n+\n+    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n+    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n+    WHERE ss.role_id = sp.role_id\n+  </entry>\n+  <entry key=\"user_search_dynpriv\">\n+    CREATE VIEW user_search_dynpriv AS\n+\n+    SELECT any_id, privilege_id\n+    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n+    WHERE drm.role_id = rp.role_id\n+  </entry>\n+  <entry key=\"user_search_resource\">\n+    CREATE VIEW user_search_resource AS\n+\n+    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeUser_ExternalResource st\n+  </entry>\n+  <entry key=\"user_search_group_res\">\n+    CREATE VIEW user_search_group_res AS\n+\n+    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n+    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- anyObject -->\n+  <entry key=\"anyObject_search\">\n+    CREATE VIEW anyObject_search AS\n+ \n+    SELECT a.id as any_id, a.* FROM AnyObject a\n+  </entry>\n+  <entry key=\"anyObject_search_unique_attr\">\n+    CREATE VIEW anyObject_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrUniqueValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_attr\">\n+    CREATE VIEW anyObject_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_null_attr\">\n+    CREATE VIEW anyObject_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    NULL AS datevalue,\n+    NULL AS doublevalue,\n+    NULL AS longvalue,\n+    NULL AS stringvalue\n+    FROM AnyObject u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"anyObject_search_arelationship\">\n+    CREATE VIEW anyObject_search_arelationship AS\n+\n+    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n+    FROM ARelationship m\n+  </entry>\n+  <entry key=\"anyObject_search_amembership\">\n+    CREATE VIEW anyObject_search_amembership AS\n+\n+    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM AMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"anyObject_search_resource\">\n+    CREATE VIEW anyObject_search_resource AS\n+\n+    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AnyObject_ExternalResource st\n+  </entry>\n+  <entry key=\"anyObject_search_group_res\">\n+    CREATE VIEW anyObject_search_group_res AS\n+\n+    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- group -->\n+  <entry key=\"group_search\">\n+    CREATE VIEW group_search AS\n+ \n+    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n+  </entry>\n+  <entry key=\"group_search_unique_attr\">\n+    CREATE VIEW group_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_attr\">\n+    CREATE VIEW group_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_null_attr\">\n+    CREATE VIEW group_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL AS booleanvalue,\n+    NULL AS datevalue,\n+    NULL AS doublevalue,\n+    NULL AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeGroup u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"group_search_resource\">\n+    CREATE VIEW group_search_resource AS\n+\n+    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeGroup_ExternalResource st\n+  </entry>\n+\n+</properties>\n\\ No newline at end of file"},{"sha":"b6664c00334ad3a6bea04eb3f00092a65071a9b7","filename":"docker/core/src/main/resources/views.xml.postgresql","status":"added","additions":268,"deletions":0,"changes":268,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.postgresql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/569b1b322f0364bc865902d595846a613f393b7a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.postgresql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.postgresql?ref=569b1b322f0364bc865902d595846a613f393b7a","patch":"@@ -0,0 +1,268 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n+<properties>\n+  \n+  <entry key=\"UDynGroupMembers\">\n+    CREATE TABLE UDynGroupMembers(\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(any_id, group_id))\n+  </entry>\n+  <entry key=\"ADynGroupMembers\">\n+    CREATE TABLE ADynGroupMembers(\n+    anyType_id VARCHAR(255),\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(anyType_id, any_id, group_id))\n+  </entry>\n+  <entry key=\"DynRoleMembers\">\n+    CREATE TABLE DynRoleMembers(\n+    any_id CHAR(36),\n+    role_id VARCHAR(255),\n+    UNIQUE(any_id, role_id))\n+  </entry>\n+  <entry key=\"DynRealmMembers\">\n+    CREATE TABLE DynRealmMembers(\n+    any_id CHAR(36),\n+    dynRealm_id VARCHAR(255),\n+    UNIQUE(any_id, dynRealm_id))\n+  </entry>\n+\n+  <!-- user -->\n+  <entry key=\"user_search\">\n+    CREATE VIEW user_search AS\n+ \n+    SELECT u.id as any_id, u.* FROM SyncopeUser u\n+  </entry>\n+  <entry key=\"user_search_unique_attr\">\n+    CREATE VIEW user_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_attr\">\n+    CREATE VIEW user_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_null_attr\">\n+    CREATE VIEW user_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL::int4 AS booleanvalue,\n+    NULL::timestamp AS datevalue,\n+    NULL::float8 AS doublevalue,\n+    NULL::int8 AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeUser u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"user_search_urelationship\">\n+    CREATE VIEW user_search_urelationship AS\n+\n+    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n+    FROM URelationship m\n+  </entry>\n+  <entry key=\"user_search_umembership\">\n+    CREATE VIEW user_search_umembership AS\n+\n+    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM UMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"user_search_role\">\n+    CREATE VIEW user_search_role AS\n+\n+    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n+    FROM SyncopeUser_SyncopeRole ss\n+  </entry>\n+  <entry key=\"user_search_priv\">\n+    CREATE VIEW user_search_priv AS\n+\n+    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n+    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n+    WHERE ss.role_id = sp.role_id\n+  </entry>\n+  <entry key=\"user_search_dynpriv\">\n+    CREATE VIEW user_search_dynpriv AS\n+\n+    SELECT any_id, privilege_id\n+    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n+    WHERE drm.role_id = rp.role_id\n+  </entry>\n+  <entry key=\"user_search_resource\">\n+    CREATE VIEW user_search_resource AS\n+\n+    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeUser_ExternalResource st\n+  </entry>\n+  <entry key=\"user_search_group_res\">\n+    CREATE VIEW user_search_group_res AS\n+\n+    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n+    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- anyObject -->\n+  <entry key=\"anyObject_search\">\n+    CREATE VIEW anyObject_search AS\n+ \n+    SELECT a.id as any_id, a.* FROM AnyObject a\n+  </entry>\n+  <entry key=\"anyObject_search_unique_attr\">\n+    CREATE VIEW anyObject_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrUniqueValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_attr\">\n+    CREATE VIEW anyObject_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_null_attr\">\n+    CREATE VIEW anyObject_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL::int4 AS booleanvalue,\n+    NULL::timestamp AS datevalue,\n+    NULL::float8 AS doublevalue,\n+    NULL::int8 AS longvalue,\n+    NULL AS stringvalue\n+    FROM AnyObject u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"anyObject_search_arelationship\">\n+    CREATE VIEW anyObject_search_arelationship AS\n+\n+    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n+    FROM ARelationship m\n+  </entry>\n+  <entry key=\"anyObject_search_amembership\">\n+    CREATE VIEW anyObject_search_amembership AS\n+\n+    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM AMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"anyObject_search_resource\">\n+    CREATE VIEW anyObject_search_resource AS\n+\n+    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AnyObject_ExternalResource st\n+  </entry>\n+  <entry key=\"anyObject_search_group_res\">\n+    CREATE VIEW anyObject_search_group_res AS\n+\n+    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- group -->\n+  <entry key=\"group_search\">\n+    CREATE VIEW group_search AS\n+ \n+    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n+  </entry>\n+  <entry key=\"group_search_unique_attr\">\n+    CREATE VIEW group_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_attr\">\n+    CREATE VIEW group_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_null_attr\">\n+    CREATE VIEW group_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL::int4 AS booleanvalue,\n+    NULL::timestamp AS datevalue,\n+    NULL::float8 AS doublevalue,\n+    NULL::int8 AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeGroup u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"group_search_resource\">\n+    CREATE VIEW group_search_resource AS\n+\n+    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeGroup_ExternalResource st\n+  </entry>\n+\n+</properties>"}]}