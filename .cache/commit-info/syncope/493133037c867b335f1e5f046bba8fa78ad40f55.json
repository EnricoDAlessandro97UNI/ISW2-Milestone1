{"sha":"493133037c867b335f1e5f046bba8fa78ad40f55","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ5MzEzMzAzN2M4NjdiMzM1ZjFlNWYwNDZiYmE4ZmE3OGFkNDBmNTU=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-22T13:45:18Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-22T13:45:18Z"},"message":"refactoring of the policy stack , SYNCOPE-158","tree":{"sha":"2a6ce2c15b57420861cec5b5d442ed0ba12b83c0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2a6ce2c15b57420861cec5b5d442ed0ba12b83c0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/493133037c867b335f1e5f046bba8fa78ad40f55","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/493133037c867b335f1e5f046bba8fa78ad40f55","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/493133037c867b335f1e5f046bba8fa78ad40f55","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/493133037c867b335f1e5f046bba8fa78ad40f55/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"79d0316744dd868f3b9a489a4ead6885a8a8d65a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/79d0316744dd868f3b9a489a4ead6885a8a8d65a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/79d0316744dd868f3b9a489a4ead6885a8a8d65a"}],"stats":{"total":326,"additions":326,"deletions":0},"files":[{"sha":"0bab4e5c482e6878d41adec67bcac607beb11be4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/AbstractPolicyCommand.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FAbstractPolicyCommand.java?ref=493133037c867b335f1e5f046bba8fa78ad40f55","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.policy;\n+\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.rest.api.service.PolicyService;\n+\n+public abstract class AbstractPolicyCommand {\n+\n+    protected final PolicyService policyService = SyncopeServices.get(PolicyService.class);\n+    \n+    protected final PolicyResultManager policyResultManager = new PolicyResultManager();\n+\n+}"},{"sha":"15ffa8db31e95a75d8d1d31e5698bf0126adbca9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyDelete.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyDelete.java?ref=493133037c867b335f1e5f046bba8fa78ad40f55","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.policy;\n+\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class PolicyDelete extends AbstractPolicyCommand {\n+\n+    private static final String DELETE_HELP_MESSAGE = \"policy --delete {POLICY-ID} {POLICY-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public PolicyDelete(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.parameterNumber() >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    policyService.delete(Long.valueOf(parameter));\n+                    policyResultManager.deletedMessage(\"Policy\", parameter);\n+                } catch (final WebServiceException | SyncopeClientException ex) {\n+                    System.out.println(\"Error:\");\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        policyResultManager.notFoundError(\"Policy\", parameter);\n+                    } else if (ex.getMessage().startsWith(\"DataIntegrityViolation\")) {\n+                        policyResultManager.generic(\"You cannot delete policy \" + parameter);\n+                    } else {\n+                        policyResultManager.generic(ex.getMessage());\n+                    }\n+                } catch (final NumberFormatException ex) {\n+                    policyResultManager.notBooleanDeletedError(\"policy\", parameter);\n+                }\n+            }\n+        } else {\n+            policyResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"c05acf719bc0303b64349d521ab24ecb16973a4b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyList.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyList.java?ref=493133037c867b335f1e5f046bba8fa78ad40f55","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.policy;\n+\n+import java.util.LinkedList;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+\n+public class PolicyList extends AbstractPolicyCommand {\n+\n+    private static final String LIST_HELP_MESSAGE = \"policy --list-policy {POLICY-TYPE}\\n\"\n+            + \"   Policy type: ACCOUNT / PASSWORD / SYNC / PUSH\";\n+\n+    private final Input input;\n+\n+    public PolicyList(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void list() {\n+\n+        if (input.parameterNumber() == 1) {\n+            try {\n+                final PolicyType policyType = PolicyType.valueOf(input.firstParameter());\n+                final LinkedList<AbstractPolicyTO> policyTOs = new LinkedList<>();\n+                for (final AbstractPolicyTO policyTO : policyService.list(policyType)) {\n+                    policyTOs.add(policyTO);\n+                }\n+                policyResultManager.fromList(policyType, policyTOs);\n+            } catch (final SyncopeClientException ex) {\n+                policyResultManager.generic(ex.getMessage());\n+            } catch (final IllegalArgumentException ex) {\n+                policyResultManager.typeNotValidError(\n+                        \"policy\", input.firstParameter(), CommandUtils.fromEnumToArray(PolicyType.class));\n+            }\n+        } else {\n+            policyResultManager.commandOptionError(LIST_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"f20d41e841398aa5a7abcea47830d915cb93bb00","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyRead.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyRead.java?ref=493133037c867b335f1e5f046bba8fa78ad40f55","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.policy;\n+\n+import java.util.LinkedList;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n+\n+public class PolicyRead extends AbstractPolicyCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"policy --read {POLICY-ID} {POLICY-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public PolicyRead(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.parameterNumber() >= 1) {\n+            final LinkedList<AbstractPolicyTO> policyTOs = new LinkedList<>();\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    policyTOs.add(policyService.read(Long.valueOf(parameter)));\n+                    policyResultManager.fromRead(policyTOs);\n+                } catch (final NumberFormatException ex) {\n+                    policyResultManager.notBooleanDeletedError(\"policy\", parameter);\n+                } catch (final WebServiceException | SyncopeClientException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        policyResultManager.notFoundError(\"Policy\", parameter);\n+                    } else {\n+                        policyResultManager.generic(ex.getMessage());\n+                    }\n+                }\n+            }\n+        } else {\n+            policyResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"88e40a0f52f58251ef55e00849a7a42678b72407","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyResultManager.java","status":"added","additions":120,"deletions":0,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/493133037c867b335f1e5f046bba8fa78ad40f55/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java?ref=493133037c867b335f1e5f046bba8fa78ad40f55","patch":"@@ -0,0 +1,120 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.policy;\n+\n+import java.util.LinkedList;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n+import org.apache.syncope.common.lib.policy.AccountPolicyTO;\n+import org.apache.syncope.common.lib.policy.PasswordPolicyTO;\n+import org.apache.syncope.common.lib.policy.SyncPolicyTO;\n+import org.apache.syncope.common.lib.types.PolicyType;\n+\n+public class PolicyResultManager extends CommonsResultManager {\n+\n+    public void fromRead(final LinkedList<AbstractPolicyTO> policyTOs) {\n+        for (AbstractPolicyTO policyTO : policyTOs) {\n+            if (!policyTOs.isEmpty()) {\n+                final PolicyType policyType = policyTO.getType();\n+                switch (policyType) {\n+                    case ACCOUNT:\n+                        printAccountPolicy((AccountPolicyTO) policyTO);\n+                        break;\n+                    case PASSWORD:\n+                        printPasswordPolicy((PasswordPolicyTO) policyTO);\n+                        break;\n+                    case PUSH:\n+                        System.out.println(policyTO);\n+                        break;\n+                    case SYNC:\n+                        printSyncPolicy((SyncPolicyTO) policyTO);\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            }\n+        }\n+\n+    }\n+\n+    public void fromList(final PolicyType policyType, final LinkedList<AbstractPolicyTO> policyTOs) {\n+        switch (policyType) {\n+            case ACCOUNT:\n+                for (final AbstractPolicyTO policyTO : policyTOs) {\n+                    printAccountPolicy((AccountPolicyTO) policyTO);\n+                }\n+                break;\n+            case PASSWORD:\n+                for (final AbstractPolicyTO policyTO : policyTOs) {\n+                    printPasswordPolicy((PasswordPolicyTO) policyTO);\n+                }\n+                break;\n+            case PUSH:\n+                for (final AbstractPolicyTO policyTO : policyTOs) {\n+                    System.out.println(policyTO);\n+                }\n+                break;\n+            case SYNC:\n+                for (final AbstractPolicyTO policyTO : policyTOs) {\n+                    printSyncPolicy((SyncPolicyTO) policyTO);\n+                }\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n+    public void printAccountPolicy(final AccountPolicyTO policyTO) {\n+        System.out.println(\" > KEY: \" + String.valueOf(policyTO.getKey()));\n+        System.out.println(\"    type: \" + policyTO.getType().name());\n+        System.out.println(\"    description: \" + policyTO.getDescription());\n+        System.out.println(\"    resources : \" + policyTO.getUsedByResources().toString());\n+        System.out.println(\"    realms : \" + policyTO.getUsedByRealms().toString());\n+        System.out.println(\"    max authentication attempts : \" + policyTO.getMaxAuthenticationAttempts());\n+        System.out.println(\"    propagation suspension : \" + policyTO.isPropagateSuspension());\n+        System.out.println(\"    RULES : \");\n+        System.out.println(\"       > class : \" + policyTO.getRuleConfs());\n+    }\n+\n+    public void printPasswordPolicy(final PasswordPolicyTO policyTO) {\n+        System.out.println(\" > KEY: \" + String.valueOf(policyTO.getKey()));\n+        System.out.println(\"    type: \" + policyTO.getType().name());\n+        System.out.println(\"    description: \" + policyTO.getDescription());\n+        System.out.println(\"    resources : \" + policyTO.getUsedByResources().toString());\n+        System.out.println(\"    realms : \" + policyTO.getUsedByRealms().toString());\n+        System.out.println(\"    history lenght : \" + policyTO.getHistoryLength());\n+        System.out.println(\"    allow null password : \" + policyTO.isAllowNullPassword());\n+        System.out.println(\"    RULES : \");\n+        System.out.println(\"       > class : \" + ((PasswordPolicyTO) policyTO).getRuleConfs());\n+    }\n+\n+    public void printSyncPolicy(final SyncPolicyTO policyTO) {\n+        System.out.println(\" > KEY: \" + String.valueOf(policyTO.getKey()));\n+        System.out.println(\"    type: \" + policyTO.getType().name());\n+        System.out.println(\"    description: \" + policyTO.getDescription());\n+        System.out.println(\"    resources : \" + policyTO.getUsedByResources().toString());\n+        System.out.println(\"    realms : \" + policyTO.getUsedByRealms().toString());\n+        if (policyTO.getSpecification() != null) {\n+            System.out.println(\"    conflict resolution action: \"\n+                    + policyTO.getSpecification().getConflictResolutionAction().name());\n+            System.out.println(\"    correlation rule : \"\n+                    + policyTO.getSpecification().getCorrelationRules().toString());\n+        }\n+    }\n+}"}]}