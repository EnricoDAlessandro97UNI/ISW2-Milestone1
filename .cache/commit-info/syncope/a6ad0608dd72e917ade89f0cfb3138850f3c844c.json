{"sha":"a6ad0608dd72e917ade89f0cfb3138850f3c844c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE2YWQwNjA4ZGQ3MmU5MTdhZGU4OWYwY2ZiMzEzODg1MGYzYzg0NGM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-10-05T09:41:35Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-10-05T09:41:48Z"},"message":"[SYNCOPE-949] Remove management of javax.ws.rs.NotFoundException","tree":{"sha":"ca8863d87d1bfc69f0536b05c8aebe201f8f9a7c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ca8863d87d1bfc69f0536b05c8aebe201f8f9a7c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a6ad0608dd72e917ade89f0cfb3138850f3c844c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a6ad0608dd72e917ade89f0cfb3138850f3c844c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a6ad0608dd72e917ade89f0cfb3138850f3c844c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a6ad0608dd72e917ade89f0cfb3138850f3c844c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"770f57d236ab4c9495bf35df1ea1cd63549c8f06","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/770f57d236ab4c9495bf35df1ea1cd63549c8f06","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/770f57d236ab4c9495bf35df1ea1cd63549c8f06"}],"stats":{"total":71,"additions":31,"deletions":40},"files":[{"sha":"39aad0905595ce7f820d0bfe397eeb5aabbf3d78","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":31,"deletions":40,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a6ad0608dd72e917ade89f0cfb3138850f3c844c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a6ad0608dd72e917ade89f0cfb3138850f3c844c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=a6ad0608dd72e917ade89f0cfb3138850f3c844c","patch":"@@ -112,40 +112,39 @@ public Response toResponse(final Exception ex) {\n             builder = builder(ClientExceptionType.DataIntegrityViolation, getJPAMessage(ex));\n         } else if (ex instanceof ConnectorException) {\n             builder = builder(ClientExceptionType.ConnectorException, ExceptionUtils.getRootCauseMessage(ex));\n+        } else if (ex instanceof NotFoundException) {\n+            builder = builder(ClientExceptionType.NotFound, ExceptionUtils.getRootCauseMessage(ex));\n         } else {\n-            builder = processNotFoundExceptions(ex);\n+            builder = processInvalidEntityExceptions(ex);\n             if (builder == null) {\n-                builder = processInvalidEntityExceptions(ex);\n-                if (builder == null) {\n-                    builder = processBadRequestExceptions(ex);\n-                }\n-                // process JAX-RS validation errors\n-                if (builder == null && ex instanceof ValidationException) {\n-                    builder = builder(validationEM.toResponse((ValidationException) ex)).\n-                            header(RESTHeaders.ERROR_CODE, ClientExceptionType.RESTValidation.name()).\n-                            header(RESTHeaders.ERROR_INFO, ClientExceptionType.RESTValidation.getInfoHeaderValue(\n-                                    ExceptionUtils.getRootCauseMessage(ex)));\n-\n-                    ErrorTO error = new ErrorTO();\n-                    error.setStatus(ClientExceptionType.RESTValidation.getResponseStatus().getStatusCode());\n-                    error.setType(ClientExceptionType.RESTValidation);\n-                    error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n-\n-                    builder.entity(error);\n-                }\n-                // ...or just report as InternalServerError\n-                if (builder == null) {\n-                    builder = Response.status(Response.Status.INTERNAL_SERVER_ERROR).\n-                            header(RESTHeaders.ERROR_INFO, ClientExceptionType.Unknown.getInfoHeaderValue(\n-                                    ExceptionUtils.getRootCauseMessage(ex)));\n-\n-                    ErrorTO error = new ErrorTO();\n-                    error.setStatus(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode());\n-                    error.setType(ClientExceptionType.Unknown);\n-                    error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n-\n-                    builder.entity(error);\n-                }\n+                builder = processBadRequestExceptions(ex);\n+            }\n+            // process JAX-RS validation errors\n+            if (builder == null && ex instanceof ValidationException) {\n+                builder = builder(validationEM.toResponse((ValidationException) ex)).\n+                        header(RESTHeaders.ERROR_CODE, ClientExceptionType.RESTValidation.name()).\n+                        header(RESTHeaders.ERROR_INFO, ClientExceptionType.RESTValidation.getInfoHeaderValue(\n+                                ExceptionUtils.getRootCauseMessage(ex)));\n+\n+                ErrorTO error = new ErrorTO();\n+                error.setStatus(ClientExceptionType.RESTValidation.getResponseStatus().getStatusCode());\n+                error.setType(ClientExceptionType.RESTValidation);\n+                error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n+\n+                builder.entity(error);\n+            }\n+            // ...or just report as InternalServerError\n+            if (builder == null) {\n+                builder = Response.status(Response.Status.INTERNAL_SERVER_ERROR).\n+                        header(RESTHeaders.ERROR_INFO, ClientExceptionType.Unknown.getInfoHeaderValue(\n+                                ExceptionUtils.getRootCauseMessage(ex)));\n+\n+                ErrorTO error = new ErrorTO();\n+                error.setStatus(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode());\n+                error.setType(ClientExceptionType.Unknown);\n+                error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n+\n+                builder.entity(error);\n             }\n         }\n \n@@ -200,14 +199,6 @@ private ResponseBuilder getSyncopeClientCompositeExceptionResponse(final Syncope\n         return builder.entity(errors);\n     }\n \n-    private ResponseBuilder processNotFoundExceptions(final Exception ex) {\n-        if (ex instanceof javax.ws.rs.NotFoundException || ex instanceof NotFoundException) {\n-            return builder(ClientExceptionType.NotFound, ExceptionUtils.getRootCauseMessage(ex));\n-        }\n-\n-        return null;\n-    }\n-\n     private ResponseBuilder processInvalidEntityExceptions(final Exception ex) {\n         InvalidEntityException iee = null;\n "}]}